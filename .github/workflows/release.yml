name: Release CI

on:
  push:
    tags: [ "v*" ]

jobs:
  build:
    name: build
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: apk
            arch: all
            module: app
            task: assembleChinaRelease

          - os: ubuntu-latest
            target: apk
            arch: arm64
            module: app
            task: assembleChinaRelease
            params: -PabiArm64=1

          - os: ubuntu-latest
            target: aab
            arch: all
            module: app
            task: bundleGoogleRelease

          - os: macos-13
            target: dmg
            arch: x86_64
            module: desktopApp
            task: packageReleaseDmg
            params: -PdeviceType=2

          - os: macos-14
            target: dmg
            arch: arm64
            module: desktopApp
            task: packageReleaseDmg
            params: -PdeviceType=1

          - os: windows-latest
            target: exe
            arch: x86_64
            module: desktopApp
            task: packageReleaseExe
            params: -PdeviceType=4

          - os: ubuntu-latest
            target: deb
            arch: x86_64
            module: desktopApp
            task: packageReleaseDeb
            params: -PdeviceType=3

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          repository: Caij/pure-music
          ref: ${{github.ref_name}}
          token: ${{secrets.GLOBAL_GITHUB_TOKEN}}

      - name: set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build
        run: |
          ./gradlew clean
          ./gradlew ${{ matrix.module }}:${{ matrix.task }} ${{ matrix.params }}

      - uses: actions/upload-artifact@v3
        with:
          name: artifacts-${{ matrix.arch }}
          if-no-files-found: error
          path: |
            ${{github.workspace}}/desktopApp/build/compose/binaries/main-release/deb/*.deb
            ${{github.workspace}}/desktopApp/build/compose/binaries/main-release/exe/*.exe
            ${{github.workspace}}/desktopApp/build/compose/binaries/main-release/dmg/*.dmg
            ${{github.workspace}}/app/build/outputs/bundle/googleRelease/app-google-release.aab
            ${{github.workspace}}/app/build/outputs/apk/china/release/app-china-release.apk 

      - name: set up JDK 8
        if: matrix.target == 'apk'
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Upload mapping
        if: matrix.target == 'apk'
        run: |
          . ${{github.workspace}}/version.properties
          echo $showVersionName
          cat ${{github.workspace}}/version.properties
          java -jar ${{github.workspace}}/app/buglyqq-upload-symbol.jar -appid 1a1daf5790 -appkey ${{secrets.BUGLY_APP_KEY}} -bundleid com.caij.puremusic -version $showVersionName -platform Android -inputMapping ${{github.workspace}}/app/build/outputs/mapping/chinaRelease/mapping.txt
          gzip -c ${{github.workspace}}/app/build/outputs/mapping/chinaRelease/mapping.txt > ${{github.workspace}}/app/build/outputs/mapping/chinaRelease/mapping.txt.gz
          curl -F "chat_id=-1002062702442" -F "caption=$showVersionName" -F document=@${{github.workspace}}/app/build/outputs/mapping/chinaRelease/mapping.txt.gz -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendDocument"
            

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          repository: Caij/pure-music
          ref: ${{github.ref_name}}
          token: ${{secrets.GLOBAL_GITHUB_TOKEN}}

      - name: set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Query version number
        run: |
          . ${{github.workspace}}/version.properties
          echo $versionName
          lastVersionName=$versionName
          echo $lastVersionName
          echo "version=$lastVersionName" >> $GITHUB_ENV
          cat ${{github.workspace}}/version.properties

      - name: Download x86_64 artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts-x86_64
          path: artifacts/x86_64

      - name: Download arm64 artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts-arm64
          path: artifacts/arm64

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts-all
          path: artifacts/all

      - name: Rename artifacts
        run: |
          mv "artifacts/x86_64/desktopApp/build/compose/binaries/main-release/dmg/PureMusic-${{ env.version }}.dmg" "artifacts/PureMusic_${{ github.ref_name }}_mac_x86_64.dmg"
          mv "artifacts/x86_64/desktopApp/build/compose/binaries/main-release/exe/PureMusic-${{ env.version }}.exe" "artifacts/PureMusic_${{ github.ref_name }}_windows_x86_64.exe"
          mv "artifacts/x86_64/desktopApp/build/compose/binaries/main-release/deb/com.caij.puremusic.linux_${{ env.version }}_amd64.deb" "artifacts/PureMusic_${{ github.ref_name }}_linux_x86_64.deb"
          
          mv "artifacts/arm64/desktopApp/build/compose/binaries/main-release/dmg/PureMusic-${{ env.version }}.dmg" "artifacts/PureMusic_${{ github.ref_name }}_mac_arm64.dmg"
      #          mv "artifacts/aab/app-google-release.aab" "artifacts/PureMusic_${{ github.ref_name }}_android.aab"

      - name: Build channel apk
        run: |
          mkdir -p "${{github.workspace}}/app/channel"
           mkdir -p "${{github.workspace}}/app/channelarm64"
          mv "artifacts/all/app/build/outputs/apk/china/release/app-china-release.apk" "${{github.workspace}}/app/channel/PureMusic_${{ github.ref_name }}.apk"
          mv "artifacts/arm64/app/build/outputs/apk/china/release/app-china-release.apk" "${{github.workspace}}/app/channelarm64/PureMusic_${{ github.ref_name }}_arm64.apk"
          java -jar ${{github.workspace}}/app/VasDolly.jar put -c "github,telegram,xiaomi,huawei,kuan,qq,lanzou" ${{github.workspace}}/app/channel/PureMusic_${{ github.ref_name }}.apk ${{github.workspace}}/app/channel
          java -jar ${{github.workspace}}/app/VasDolly.jar put -c "github,telegram,xiaomi,huawei,kuan,qq,lanzou" ${{github.workspace}}/app/channelarm64/PureMusic_${{ github.ref_name }}_arm64.apk ${{github.workspace}}/app/channelarm64
          mv "${{github.workspace}}/app/channel/github-PureMusic_${{ github.ref_name }}.apk" "artifacts/PureMusic_${{ github.ref_name }}_android.apk"
          mv "${{github.workspace}}/app/channelarm64/github-PureMusic_${{ github.ref_name }}_arm64.apk" "artifacts/PureMusic_${{ github.ref_name }}_android_arm64.apk"
          curl -F "chat_id=-1002062702442" -F "caption=${{ github.ref_name }}" -F document=@${{github.workspace}}/app/channelarm64/qq-PureMusic_${{ github.ref_name }}_arm64.apk -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendDocument"

      - name: Create Release
        id: create_remote_release
        uses: softprops/action-gh-release@v1
        env:
          PRERELEASE: ${{ contains(github.ref_name, 'beta') ||  contains(github.ref_name, 'rc')}}
        with:
          tag_name: ${{github.ref_name}}
          name: ${{github.ref_name}}
          body_path: ${{ github.workspace }}/CHANGELOG.txt
          files: ./artifacts/**/*
          prerelease: ${{env.PRERELEASE}}

      - name: Read CHANGELOG
        id: read_file
        uses: andstor/file-reader-action@v1
        with:
          path: ${{ github.workspace }}/CHANGELOG.txt

      - name: send tg message
        run: |
          curl -F "chat_id=-1001816793644" -F "caption=${{steps.read_file.outputs.contents}}${{steps.create_remote_release.outputs.url}}" -F document=@${{github.workspace}}/app/channelarm64/telegram-PureMusic_${{ github.ref_name }}_arm64.apk -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendDocument"

      - uses: actions/upload-artifact@v3
        with:
          name: artifacts-channel-apk
          path: |
            ${{github.workspace}}/app/channel/*.apk

      - name: upload lanzou
        if: ${{ !contains(github.ref_name, 'beta') && !contains(github.ref_name, 'rc')}}
        run: |
          curl --location --request PUT '${{ secrets.ALIST_HOST }}/api/fs/form' \
          --header 'Authorization: ${{ secrets.ALIST_TOKEN }}' \
          --header 'File-Path: /puremusic/lanzou-PureMusic_${{ github.ref_name }}.apk' \
          --header 'As-Task: true' \
          --header 'User-Agent: Apifox/1.0.0 (https://apifox.com)' \
          --form 'file=@"${{github.workspace}}/app/channel/lanzou-PureMusic_${{ github.ref_name }}.apk"'
#      - name: send tg message
#        uses: appleboy/telegram-action@master
#        with:
#          to: -1001816793644
#          token: ${{ secrets.TELEGRAM_TOKEN }}
#          message: "${{steps.read_file.outputs.contents}}"
#          document: ${{github.workspace}}/artifacts/PureMusic_${{ env.version }}_android.apk
