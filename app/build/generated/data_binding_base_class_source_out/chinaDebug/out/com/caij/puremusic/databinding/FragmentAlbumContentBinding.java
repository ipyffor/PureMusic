// Generated by view binder compiler. Do not edit!
package com.caij.puremusic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.caij.puremusic.R;
import com.caij.puremusic.views.insets.InsetsConstraintLayout;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAlbumContentBinding implements ViewBinding {
  @NonNull
  private final InsetsConstraintLayout rootView;

  @NonNull
  public final MaterialTextView aboutAlbumText;

  @NonNull
  public final MaterialTextView aboutAlbumTitle;

  @NonNull
  public final MaterialTextView listeners;

  @NonNull
  public final MaterialTextView listenersLabel;

  @NonNull
  public final RecyclerView moreRecyclerView;

  @NonNull
  public final MaterialTextView moreTitle;

  @NonNull
  public final MaterialButton playAction;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final MaterialTextView scrobbles;

  @NonNull
  public final MaterialTextView scrobblesLabel;

  @NonNull
  public final MaterialButton shuffleAction;

  @NonNull
  public final MaterialTextView songTitle;

  private FragmentAlbumContentBinding(@NonNull InsetsConstraintLayout rootView,
      @NonNull MaterialTextView aboutAlbumText, @NonNull MaterialTextView aboutAlbumTitle,
      @NonNull MaterialTextView listeners, @NonNull MaterialTextView listenersLabel,
      @NonNull RecyclerView moreRecyclerView, @NonNull MaterialTextView moreTitle,
      @NonNull MaterialButton playAction, @NonNull RecyclerView recyclerView,
      @NonNull MaterialTextView scrobbles, @NonNull MaterialTextView scrobblesLabel,
      @NonNull MaterialButton shuffleAction, @NonNull MaterialTextView songTitle) {
    this.rootView = rootView;
    this.aboutAlbumText = aboutAlbumText;
    this.aboutAlbumTitle = aboutAlbumTitle;
    this.listeners = listeners;
    this.listenersLabel = listenersLabel;
    this.moreRecyclerView = moreRecyclerView;
    this.moreTitle = moreTitle;
    this.playAction = playAction;
    this.recyclerView = recyclerView;
    this.scrobbles = scrobbles;
    this.scrobblesLabel = scrobblesLabel;
    this.shuffleAction = shuffleAction;
    this.songTitle = songTitle;
  }

  @Override
  @NonNull
  public InsetsConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAlbumContentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAlbumContentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_album_content, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAlbumContentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.aboutAlbumText;
      MaterialTextView aboutAlbumText = ViewBindings.findChildViewById(rootView, id);
      if (aboutAlbumText == null) {
        break missingId;
      }

      id = R.id.aboutAlbumTitle;
      MaterialTextView aboutAlbumTitle = ViewBindings.findChildViewById(rootView, id);
      if (aboutAlbumTitle == null) {
        break missingId;
      }

      id = R.id.listeners;
      MaterialTextView listeners = ViewBindings.findChildViewById(rootView, id);
      if (listeners == null) {
        break missingId;
      }

      id = R.id.listenersLabel;
      MaterialTextView listenersLabel = ViewBindings.findChildViewById(rootView, id);
      if (listenersLabel == null) {
        break missingId;
      }

      id = R.id.moreRecyclerView;
      RecyclerView moreRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (moreRecyclerView == null) {
        break missingId;
      }

      id = R.id.moreTitle;
      MaterialTextView moreTitle = ViewBindings.findChildViewById(rootView, id);
      if (moreTitle == null) {
        break missingId;
      }

      id = R.id.playAction;
      MaterialButton playAction = ViewBindings.findChildViewById(rootView, id);
      if (playAction == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.scrobbles;
      MaterialTextView scrobbles = ViewBindings.findChildViewById(rootView, id);
      if (scrobbles == null) {
        break missingId;
      }

      id = R.id.scrobblesLabel;
      MaterialTextView scrobblesLabel = ViewBindings.findChildViewById(rootView, id);
      if (scrobblesLabel == null) {
        break missingId;
      }

      id = R.id.shuffleAction;
      MaterialButton shuffleAction = ViewBindings.findChildViewById(rootView, id);
      if (shuffleAction == null) {
        break missingId;
      }

      id = R.id.songTitle;
      MaterialTextView songTitle = ViewBindings.findChildViewById(rootView, id);
      if (songTitle == null) {
        break missingId;
      }

      return new FragmentAlbumContentBinding((InsetsConstraintLayout) rootView, aboutAlbumText,
          aboutAlbumTitle, listeners, listenersLabel, moreRecyclerView, moreTitle, playAction,
          recyclerView, scrobbles, scrobblesLabel, shuffleAction, songTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
