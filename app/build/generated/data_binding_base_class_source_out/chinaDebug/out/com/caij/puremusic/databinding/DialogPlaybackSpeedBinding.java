// Generated by view binder compiler. Do not edit!
package com.caij.puremusic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.caij.puremusic.R;
import com.google.android.material.slider.Slider;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogPlaybackSpeedBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView pitchValue;

  @NonNull
  public final Slider playbackPitchSlider;

  @NonNull
  public final TextView playbackPitchTitle;

  @NonNull
  public final Slider playbackSpeedSlider;

  @NonNull
  public final TextView playbackSpeedTitle;

  @NonNull
  public final TextView speedValue;

  private DialogPlaybackSpeedBinding(@NonNull LinearLayout rootView, @NonNull TextView pitchValue,
      @NonNull Slider playbackPitchSlider, @NonNull TextView playbackPitchTitle,
      @NonNull Slider playbackSpeedSlider, @NonNull TextView playbackSpeedTitle,
      @NonNull TextView speedValue) {
    this.rootView = rootView;
    this.pitchValue = pitchValue;
    this.playbackPitchSlider = playbackPitchSlider;
    this.playbackPitchTitle = playbackPitchTitle;
    this.playbackSpeedSlider = playbackSpeedSlider;
    this.playbackSpeedTitle = playbackSpeedTitle;
    this.speedValue = speedValue;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogPlaybackSpeedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogPlaybackSpeedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_playback_speed, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogPlaybackSpeedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.pitch_value;
      TextView pitchValue = ViewBindings.findChildViewById(rootView, id);
      if (pitchValue == null) {
        break missingId;
      }

      id = R.id.playback_pitch_slider;
      Slider playbackPitchSlider = ViewBindings.findChildViewById(rootView, id);
      if (playbackPitchSlider == null) {
        break missingId;
      }

      id = R.id.playback_pitch_title;
      TextView playbackPitchTitle = ViewBindings.findChildViewById(rootView, id);
      if (playbackPitchTitle == null) {
        break missingId;
      }

      id = R.id.playback_speed_slider;
      Slider playbackSpeedSlider = ViewBindings.findChildViewById(rootView, id);
      if (playbackSpeedSlider == null) {
        break missingId;
      }

      id = R.id.playback_speed_title;
      TextView playbackSpeedTitle = ViewBindings.findChildViewById(rootView, id);
      if (playbackSpeedTitle == null) {
        break missingId;
      }

      id = R.id.speed_value;
      TextView speedValue = ViewBindings.findChildViewById(rootView, id);
      if (speedValue == null) {
        break missingId;
      }

      return new DialogPlaybackSpeedBinding((LinearLayout) rootView, pitchValue,
          playbackPitchSlider, playbackPitchTitle, playbackSpeedSlider, playbackSpeedTitle,
          speedValue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
