// Generated by view binder compiler. Do not edit!
package com.caij.puremusic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.caij.puremusic.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySongTagEditorBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final TextInputLayout albumArtistContainer;

  @NonNull
  public final TextInputEditText albumArtistText;

  @NonNull
  public final TextInputEditText albumText;

  @NonNull
  public final TextInputLayout albumTextContainer;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final AppBarLayout appBarLayout;

  @NonNull
  public final TextInputLayout artistContainer;

  @NonNull
  public final TextInputEditText artistText;

  @NonNull
  public final TextInputLayout composerContainer;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final NestedScrollView content;

  @NonNull
  public final TextInputLayout discNumberContainer;

  @NonNull
  public final TextInputEditText discNumberText;

  @NonNull
  public final AppCompatImageView editorImage;

  @NonNull
  public final TextInputLayout genreContainer;

  @NonNull
  public final TextInputEditText genreText;

  @NonNull
  public final View imageContainer;

  @NonNull
  public final TextInputLayout lyricsContainer;

  @NonNull
  public final TextInputEditText lyricsText;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final MaterialButton saveTags;

  @NonNull
  public final TextInputEditText songComposerText;

  @NonNull
  public final TextInputEditText songText;

  @NonNull
  public final TextInputLayout songTextContainer;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final TextInputLayout trackNumberContainer;

  @NonNull
  public final TextInputEditText trackNumberText;

  @NonNull
  public final TextInputLayout yearContainer;

  @NonNull
  public final TextInputEditText yearText;

  private ActivitySongTagEditorBinding(@NonNull CoordinatorLayout rootView,
      @NonNull TextInputLayout albumArtistContainer, @NonNull TextInputEditText albumArtistText,
      @NonNull TextInputEditText albumText, @NonNull TextInputLayout albumTextContainer,
      @Nullable AppBarLayout appBarLayout, @NonNull TextInputLayout artistContainer,
      @NonNull TextInputEditText artistText, @NonNull TextInputLayout composerContainer,
      @Nullable NestedScrollView content, @NonNull TextInputLayout discNumberContainer,
      @NonNull TextInputEditText discNumberText, @NonNull AppCompatImageView editorImage,
      @NonNull TextInputLayout genreContainer, @NonNull TextInputEditText genreText,
      @NonNull View imageContainer, @NonNull TextInputLayout lyricsContainer,
      @NonNull TextInputEditText lyricsText, @NonNull ProgressBar progressBar,
      @NonNull MaterialButton saveTags, @NonNull TextInputEditText songComposerText,
      @NonNull TextInputEditText songText, @NonNull TextInputLayout songTextContainer,
      @NonNull MaterialToolbar toolbar, @NonNull TextInputLayout trackNumberContainer,
      @NonNull TextInputEditText trackNumberText, @NonNull TextInputLayout yearContainer,
      @NonNull TextInputEditText yearText) {
    this.rootView = rootView;
    this.albumArtistContainer = albumArtistContainer;
    this.albumArtistText = albumArtistText;
    this.albumText = albumText;
    this.albumTextContainer = albumTextContainer;
    this.appBarLayout = appBarLayout;
    this.artistContainer = artistContainer;
    this.artistText = artistText;
    this.composerContainer = composerContainer;
    this.content = content;
    this.discNumberContainer = discNumberContainer;
    this.discNumberText = discNumberText;
    this.editorImage = editorImage;
    this.genreContainer = genreContainer;
    this.genreText = genreText;
    this.imageContainer = imageContainer;
    this.lyricsContainer = lyricsContainer;
    this.lyricsText = lyricsText;
    this.progressBar = progressBar;
    this.saveTags = saveTags;
    this.songComposerText = songComposerText;
    this.songText = songText;
    this.songTextContainer = songTextContainer;
    this.toolbar = toolbar;
    this.trackNumberContainer = trackNumberContainer;
    this.trackNumberText = trackNumberText;
    this.yearContainer = yearContainer;
    this.yearText = yearText;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySongTagEditorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySongTagEditorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_song_tag_editor, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySongTagEditorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.albumArtistContainer;
      TextInputLayout albumArtistContainer = ViewBindings.findChildViewById(rootView, id);
      if (albumArtistContainer == null) {
        break missingId;
      }

      id = R.id.albumArtistText;
      TextInputEditText albumArtistText = ViewBindings.findChildViewById(rootView, id);
      if (albumArtistText == null) {
        break missingId;
      }

      id = R.id.albumText;
      TextInputEditText albumText = ViewBindings.findChildViewById(rootView, id);
      if (albumText == null) {
        break missingId;
      }

      id = R.id.albumTextContainer;
      TextInputLayout albumTextContainer = ViewBindings.findChildViewById(rootView, id);
      if (albumTextContainer == null) {
        break missingId;
      }

      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);

      id = R.id.artistContainer;
      TextInputLayout artistContainer = ViewBindings.findChildViewById(rootView, id);
      if (artistContainer == null) {
        break missingId;
      }

      id = R.id.artistText;
      TextInputEditText artistText = ViewBindings.findChildViewById(rootView, id);
      if (artistText == null) {
        break missingId;
      }

      id = R.id.composerContainer;
      TextInputLayout composerContainer = ViewBindings.findChildViewById(rootView, id);
      if (composerContainer == null) {
        break missingId;
      }

      id = R.id.content;
      NestedScrollView content = ViewBindings.findChildViewById(rootView, id);

      id = R.id.discNumberContainer;
      TextInputLayout discNumberContainer = ViewBindings.findChildViewById(rootView, id);
      if (discNumberContainer == null) {
        break missingId;
      }

      id = R.id.discNumberText;
      TextInputEditText discNumberText = ViewBindings.findChildViewById(rootView, id);
      if (discNumberText == null) {
        break missingId;
      }

      id = R.id.editorImage;
      AppCompatImageView editorImage = ViewBindings.findChildViewById(rootView, id);
      if (editorImage == null) {
        break missingId;
      }

      id = R.id.genreContainer;
      TextInputLayout genreContainer = ViewBindings.findChildViewById(rootView, id);
      if (genreContainer == null) {
        break missingId;
      }

      id = R.id.genreText;
      TextInputEditText genreText = ViewBindings.findChildViewById(rootView, id);
      if (genreText == null) {
        break missingId;
      }

      id = R.id.imageContainer;
      View imageContainer = ViewBindings.findChildViewById(rootView, id);
      if (imageContainer == null) {
        break missingId;
      }

      id = R.id.lyricsContainer;
      TextInputLayout lyricsContainer = ViewBindings.findChildViewById(rootView, id);
      if (lyricsContainer == null) {
        break missingId;
      }

      id = R.id.lyricsText;
      TextInputEditText lyricsText = ViewBindings.findChildViewById(rootView, id);
      if (lyricsText == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.saveTags;
      MaterialButton saveTags = ViewBindings.findChildViewById(rootView, id);
      if (saveTags == null) {
        break missingId;
      }

      id = R.id.songComposerText;
      TextInputEditText songComposerText = ViewBindings.findChildViewById(rootView, id);
      if (songComposerText == null) {
        break missingId;
      }

      id = R.id.songText;
      TextInputEditText songText = ViewBindings.findChildViewById(rootView, id);
      if (songText == null) {
        break missingId;
      }

      id = R.id.songTextContainer;
      TextInputLayout songTextContainer = ViewBindings.findChildViewById(rootView, id);
      if (songTextContainer == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.trackNumberContainer;
      TextInputLayout trackNumberContainer = ViewBindings.findChildViewById(rootView, id);
      if (trackNumberContainer == null) {
        break missingId;
      }

      id = R.id.trackNumberText;
      TextInputEditText trackNumberText = ViewBindings.findChildViewById(rootView, id);
      if (trackNumberText == null) {
        break missingId;
      }

      id = R.id.yearContainer;
      TextInputLayout yearContainer = ViewBindings.findChildViewById(rootView, id);
      if (yearContainer == null) {
        break missingId;
      }

      id = R.id.yearText;
      TextInputEditText yearText = ViewBindings.findChildViewById(rootView, id);
      if (yearText == null) {
        break missingId;
      }

      return new ActivitySongTagEditorBinding((CoordinatorLayout) rootView, albumArtistContainer,
          albumArtistText, albumText, albumTextContainer, appBarLayout, artistContainer, artistText,
          composerContainer, content, discNumberContainer, discNumberText, editorImage,
          genreContainer, genreText, imageContainer, lyricsContainer, lyricsText, progressBar,
          saveTags, songComposerText, songText, songTextContainer, toolbar, trackNumberContainer,
          trackNumberText, yearContainer, yearText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
