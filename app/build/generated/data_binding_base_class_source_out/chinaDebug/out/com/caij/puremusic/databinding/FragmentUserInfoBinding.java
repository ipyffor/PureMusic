// Generated by view binder compiler. Do not edit!
package com.caij.puremusic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.caij.puremusic.R;
import com.caij.puremusic.views.RetroShapeableImageView;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentUserInfoBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final ShapeableImageView bannerImage;

  @NonNull
  public final TextInputEditText name;

  @NonNull
  public final TextInputLayout nameContainer;

  @NonNull
  public final FloatingActionButton next;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final RetroShapeableImageView userImage;

  private FragmentUserInfoBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull ShapeableImageView bannerImage,
      @NonNull TextInputEditText name, @NonNull TextInputLayout nameContainer,
      @NonNull FloatingActionButton next, @NonNull MaterialToolbar toolbar,
      @NonNull RetroShapeableImageView userImage) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.bannerImage = bannerImage;
    this.name = name;
    this.nameContainer = nameContainer;
    this.next = next;
    this.toolbar = toolbar;
    this.userImage = userImage;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentUserInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentUserInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_user_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentUserInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.bannerImage;
      ShapeableImageView bannerImage = ViewBindings.findChildViewById(rootView, id);
      if (bannerImage == null) {
        break missingId;
      }

      id = R.id.name;
      TextInputEditText name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.nameContainer;
      TextInputLayout nameContainer = ViewBindings.findChildViewById(rootView, id);
      if (nameContainer == null) {
        break missingId;
      }

      id = R.id.next;
      FloatingActionButton next = ViewBindings.findChildViewById(rootView, id);
      if (next == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.userImage;
      RetroShapeableImageView userImage = ViewBindings.findChildViewById(rootView, id);
      if (userImage == null) {
        break missingId;
      }

      return new FragmentUserInfoBinding((CoordinatorLayout) rootView, appBarLayout, bannerImage,
          name, nameContainer, next, toolbar, userImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
