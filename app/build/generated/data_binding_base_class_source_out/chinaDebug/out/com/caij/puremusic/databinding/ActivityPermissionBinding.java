// Generated by view binder compiler. Do not edit!
package com.caij.puremusic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.caij.puremusic.R;
import com.caij.puremusic.views.BaselineGridTextView;
import com.caij.puremusic.views.PermissionItem;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPermissionBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final BaselineGridTextView appNameText;

  @NonNull
  public final PermissionItem audioPermission;

  @NonNull
  public final PermissionItem bluetoothPermission;

  @NonNull
  public final View divider;

  @NonNull
  public final MaterialButton finish;

  @NonNull
  public final PermissionItem storagePermission;

  private ActivityPermissionBinding(@NonNull ConstraintLayout rootView,
      @NonNull BaselineGridTextView appNameText, @NonNull PermissionItem audioPermission,
      @NonNull PermissionItem bluetoothPermission, @NonNull View divider,
      @NonNull MaterialButton finish, @NonNull PermissionItem storagePermission) {
    this.rootView = rootView;
    this.appNameText = appNameText;
    this.audioPermission = audioPermission;
    this.bluetoothPermission = bluetoothPermission;
    this.divider = divider;
    this.finish = finish;
    this.storagePermission = storagePermission;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPermissionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPermissionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_permission, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPermissionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appNameText;
      BaselineGridTextView appNameText = ViewBindings.findChildViewById(rootView, id);
      if (appNameText == null) {
        break missingId;
      }

      id = R.id.audio_permission;
      PermissionItem audioPermission = ViewBindings.findChildViewById(rootView, id);
      if (audioPermission == null) {
        break missingId;
      }

      id = R.id.bluetooth_permission;
      PermissionItem bluetoothPermission = ViewBindings.findChildViewById(rootView, id);
      if (bluetoothPermission == null) {
        break missingId;
      }

      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.finish;
      MaterialButton finish = ViewBindings.findChildViewById(rootView, id);
      if (finish == null) {
        break missingId;
      }

      id = R.id.storage_permission;
      PermissionItem storagePermission = ViewBindings.findChildViewById(rootView, id);
      if (storagePermission == null) {
        break missingId;
      }

      return new ActivityPermissionBinding((ConstraintLayout) rootView, appNameText,
          audioPermission, bluetoothPermission, divider, finish, storagePermission);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
