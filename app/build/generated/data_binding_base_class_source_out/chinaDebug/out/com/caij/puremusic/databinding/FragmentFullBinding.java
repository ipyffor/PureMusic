// Generated by view binder compiler. Do not edit!
package com.caij.puremusic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.caij.puremusic.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFullBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ShapeableImageView artistImage;

  @NonNull
  public final FragmentContainerView coverLyrics;

  @NonNull
  public final View mask;

  @NonNull
  public final MaterialTextView nextSong;

  @NonNull
  public final MaterialTextView nextSongLabel;

  @NonNull
  public final FragmentContainerView playbackControlsFragment;

  @NonNull
  public final FragmentContainerView playerAlbumCoverFragment;

  @NonNull
  public final MaterialToolbar playerToolbar;

  private FragmentFullBinding(@NonNull ConstraintLayout rootView,
      @NonNull ShapeableImageView artistImage, @NonNull FragmentContainerView coverLyrics,
      @NonNull View mask, @NonNull MaterialTextView nextSong,
      @NonNull MaterialTextView nextSongLabel,
      @NonNull FragmentContainerView playbackControlsFragment,
      @NonNull FragmentContainerView playerAlbumCoverFragment,
      @NonNull MaterialToolbar playerToolbar) {
    this.rootView = rootView;
    this.artistImage = artistImage;
    this.coverLyrics = coverLyrics;
    this.mask = mask;
    this.nextSong = nextSong;
    this.nextSongLabel = nextSongLabel;
    this.playbackControlsFragment = playbackControlsFragment;
    this.playerAlbumCoverFragment = playerAlbumCoverFragment;
    this.playerToolbar = playerToolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFullBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFullBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_full, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFullBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.artistImage;
      ShapeableImageView artistImage = ViewBindings.findChildViewById(rootView, id);
      if (artistImage == null) {
        break missingId;
      }

      id = R.id.cover_lyrics;
      FragmentContainerView coverLyrics = ViewBindings.findChildViewById(rootView, id);
      if (coverLyrics == null) {
        break missingId;
      }

      id = R.id.mask;
      View mask = ViewBindings.findChildViewById(rootView, id);
      if (mask == null) {
        break missingId;
      }

      id = R.id.nextSong;
      MaterialTextView nextSong = ViewBindings.findChildViewById(rootView, id);
      if (nextSong == null) {
        break missingId;
      }

      id = R.id.nextSongLabel;
      MaterialTextView nextSongLabel = ViewBindings.findChildViewById(rootView, id);
      if (nextSongLabel == null) {
        break missingId;
      }

      id = R.id.playbackControlsFragment;
      FragmentContainerView playbackControlsFragment = ViewBindings.findChildViewById(rootView, id);
      if (playbackControlsFragment == null) {
        break missingId;
      }

      id = R.id.playerAlbumCoverFragment;
      FragmentContainerView playerAlbumCoverFragment = ViewBindings.findChildViewById(rootView, id);
      if (playerAlbumCoverFragment == null) {
        break missingId;
      }

      id = R.id.playerToolbar;
      MaterialToolbar playerToolbar = ViewBindings.findChildViewById(rootView, id);
      if (playerToolbar == null) {
        break missingId;
      }

      return new FragmentFullBinding((ConstraintLayout) rootView, artistImage, coverLyrics, mask,
          nextSong, nextSongLabel, playbackControlsFragment, playerAlbumCoverFragment,
          playerToolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
