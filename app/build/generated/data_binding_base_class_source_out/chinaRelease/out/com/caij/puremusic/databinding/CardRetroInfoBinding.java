// Generated by view binder compiler. Do not edit!
package com.caij.puremusic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import code.name.monkey.appthemehelper.common.views.ATEAccentTextView;
import com.caij.puremusic.R;
import com.caij.puremusic.views.ListItemView;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CardRetroInfoBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ListItemView appGithub;

  @NonNull
  public final ListItemView appRate;

  @NonNull
  public final ListItemView appShare;

  @NonNull
  public final ListItemView appTranslation;

  @NonNull
  public final ListItemView bugReportLink;

  @NonNull
  public final ListItemView donateLink;

  @NonNull
  public final ListItemView faqLink;

  @NonNull
  public final ATEAccentTextView sb2;

  private CardRetroInfoBinding(@NonNull MaterialCardView rootView, @NonNull ListItemView appGithub,
      @NonNull ListItemView appRate, @NonNull ListItemView appShare,
      @NonNull ListItemView appTranslation, @NonNull ListItemView bugReportLink,
      @NonNull ListItemView donateLink, @NonNull ListItemView faqLink,
      @NonNull ATEAccentTextView sb2) {
    this.rootView = rootView;
    this.appGithub = appGithub;
    this.appRate = appRate;
    this.appShare = appShare;
    this.appTranslation = appTranslation;
    this.bugReportLink = bugReportLink;
    this.donateLink = donateLink;
    this.faqLink = faqLink;
    this.sb2 = sb2;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static CardRetroInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardRetroInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.card_retro_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardRetroInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appGithub;
      ListItemView appGithub = ViewBindings.findChildViewById(rootView, id);
      if (appGithub == null) {
        break missingId;
      }

      id = R.id.appRate;
      ListItemView appRate = ViewBindings.findChildViewById(rootView, id);
      if (appRate == null) {
        break missingId;
      }

      id = R.id.appShare;
      ListItemView appShare = ViewBindings.findChildViewById(rootView, id);
      if (appShare == null) {
        break missingId;
      }

      id = R.id.appTranslation;
      ListItemView appTranslation = ViewBindings.findChildViewById(rootView, id);
      if (appTranslation == null) {
        break missingId;
      }

      id = R.id.bugReportLink;
      ListItemView bugReportLink = ViewBindings.findChildViewById(rootView, id);
      if (bugReportLink == null) {
        break missingId;
      }

      id = R.id.donateLink;
      ListItemView donateLink = ViewBindings.findChildViewById(rootView, id);
      if (donateLink == null) {
        break missingId;
      }

      id = R.id.faqLink;
      ListItemView faqLink = ViewBindings.findChildViewById(rootView, id);
      if (faqLink == null) {
        break missingId;
      }

      id = R.id.sb2;
      ATEAccentTextView sb2 = ViewBindings.findChildViewById(rootView, id);
      if (sb2 == null) {
        break missingId;
      }

      return new CardRetroInfoBinding((MaterialCardView) rootView, appGithub, appRate, appShare,
          appTranslation, bugReportLink, donateLink, faqLink, sb2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
