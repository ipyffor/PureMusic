// Generated by view binder compiler. Do not edit!
package com.caij.puremusic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.caij.puremusic.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAlbumTagEditorBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final TextInputLayout albumArtistContainer;

  @NonNull
  public final TextInputEditText albumArtistText;

  @NonNull
  public final TextInputEditText albumText;

  @NonNull
  public final TextInputLayout albumTitleContainer;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final AppBarLayout appBarLayout;

  @NonNull
  public final NestedScrollView content;

  @NonNull
  public final AppCompatImageView editorImage;

  @NonNull
  public final TextInputLayout genreContainer;

  @NonNull
  public final TextInputEditText genreTitle;

  @NonNull
  public final View imageContainer;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final ProgressBar progressBar;

  @NonNull
  public final MaterialButton saveTags;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final TextInputLayout yearContainer;

  @NonNull
  public final TextInputEditText yearTitle;

  private ActivityAlbumTagEditorBinding(@NonNull CoordinatorLayout rootView,
      @NonNull TextInputLayout albumArtistContainer, @NonNull TextInputEditText albumArtistText,
      @NonNull TextInputEditText albumText, @NonNull TextInputLayout albumTitleContainer,
      @Nullable AppBarLayout appBarLayout, @NonNull NestedScrollView content,
      @NonNull AppCompatImageView editorImage, @NonNull TextInputLayout genreContainer,
      @NonNull TextInputEditText genreTitle, @NonNull View imageContainer,
      @Nullable ProgressBar progressBar, @NonNull MaterialButton saveTags,
      @NonNull MaterialToolbar toolbar, @NonNull TextInputLayout yearContainer,
      @NonNull TextInputEditText yearTitle) {
    this.rootView = rootView;
    this.albumArtistContainer = albumArtistContainer;
    this.albumArtistText = albumArtistText;
    this.albumText = albumText;
    this.albumTitleContainer = albumTitleContainer;
    this.appBarLayout = appBarLayout;
    this.content = content;
    this.editorImage = editorImage;
    this.genreContainer = genreContainer;
    this.genreTitle = genreTitle;
    this.imageContainer = imageContainer;
    this.progressBar = progressBar;
    this.saveTags = saveTags;
    this.toolbar = toolbar;
    this.yearContainer = yearContainer;
    this.yearTitle = yearTitle;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAlbumTagEditorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAlbumTagEditorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_album_tag_editor, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAlbumTagEditorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.albumArtistContainer;
      TextInputLayout albumArtistContainer = ViewBindings.findChildViewById(rootView, id);
      if (albumArtistContainer == null) {
        break missingId;
      }

      id = R.id.albumArtistText;
      TextInputEditText albumArtistText = ViewBindings.findChildViewById(rootView, id);
      if (albumArtistText == null) {
        break missingId;
      }

      id = R.id.albumText;
      TextInputEditText albumText = ViewBindings.findChildViewById(rootView, id);
      if (albumText == null) {
        break missingId;
      }

      id = R.id.albumTitleContainer;
      TextInputLayout albumTitleContainer = ViewBindings.findChildViewById(rootView, id);
      if (albumTitleContainer == null) {
        break missingId;
      }

      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);

      id = R.id.content;
      NestedScrollView content = ViewBindings.findChildViewById(rootView, id);
      if (content == null) {
        break missingId;
      }

      id = R.id.editorImage;
      AppCompatImageView editorImage = ViewBindings.findChildViewById(rootView, id);
      if (editorImage == null) {
        break missingId;
      }

      id = R.id.genreContainer;
      TextInputLayout genreContainer = ViewBindings.findChildViewById(rootView, id);
      if (genreContainer == null) {
        break missingId;
      }

      id = R.id.genreTitle;
      TextInputEditText genreTitle = ViewBindings.findChildViewById(rootView, id);
      if (genreTitle == null) {
        break missingId;
      }

      id = R.id.imageContainer;
      View imageContainer = ViewBindings.findChildViewById(rootView, id);
      if (imageContainer == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);

      id = R.id.saveTags;
      MaterialButton saveTags = ViewBindings.findChildViewById(rootView, id);
      if (saveTags == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.yearContainer;
      TextInputLayout yearContainer = ViewBindings.findChildViewById(rootView, id);
      if (yearContainer == null) {
        break missingId;
      }

      id = R.id.yearTitle;
      TextInputEditText yearTitle = ViewBindings.findChildViewById(rootView, id);
      if (yearTitle == null) {
        break missingId;
      }

      return new ActivityAlbumTagEditorBinding((CoordinatorLayout) rootView, albumArtistContainer,
          albumArtistText, albumText, albumTitleContainer, appBarLayout, content, editorImage,
          genreContainer, genreTitle, imageContainer, progressBar, saveTags, toolbar, yearContainer,
          yearTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
