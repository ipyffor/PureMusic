// Generated by view binder compiler. Do not edit!
package com.caij.puremusic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.caij.puremusic.R;
import com.caij.puremusic.views.insets.InsetsRecyclerView;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentBackupBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final InsetsRecyclerView backupRecyclerview;

  @NonNull
  public final TextView backupTitle;

  @NonNull
  public final MaterialButton createBackup;

  @NonNull
  public final MaterialButton restoreBackup;

  private FragmentBackupBinding(@NonNull ConstraintLayout rootView,
      @NonNull InsetsRecyclerView backupRecyclerview, @NonNull TextView backupTitle,
      @NonNull MaterialButton createBackup, @NonNull MaterialButton restoreBackup) {
    this.rootView = rootView;
    this.backupRecyclerview = backupRecyclerview;
    this.backupTitle = backupTitle;
    this.createBackup = createBackup;
    this.restoreBackup = restoreBackup;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentBackupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentBackupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_backup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentBackupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backup_recyclerview;
      InsetsRecyclerView backupRecyclerview = ViewBindings.findChildViewById(rootView, id);
      if (backupRecyclerview == null) {
        break missingId;
      }

      id = R.id.backup_title;
      TextView backupTitle = ViewBindings.findChildViewById(rootView, id);
      if (backupTitle == null) {
        break missingId;
      }

      id = R.id.create_backup;
      MaterialButton createBackup = ViewBindings.findChildViewById(rootView, id);
      if (createBackup == null) {
        break missingId;
      }

      id = R.id.restore_backup;
      MaterialButton restoreBackup = ViewBindings.findChildViewById(rootView, id);
      if (restoreBackup == null) {
        break missingId;
      }

      return new FragmentBackupBinding((ConstraintLayout) rootView, backupRecyclerview, backupTitle,
          createBackup, restoreBackup);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
