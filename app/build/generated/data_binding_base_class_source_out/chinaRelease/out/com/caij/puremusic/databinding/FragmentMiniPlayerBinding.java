// Generated by view binder compiler. Do not edit!
package com.caij.puremusic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.caij.puremusic.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMiniPlayerBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatImageView actionNext;

  @NonNull
  public final AppCompatImageView actionPrevious;

  @NonNull
  public final AppCompatImageView image;

  @NonNull
  public final MaterialCardView imageTextContainer;

  @NonNull
  public final AppCompatImageView miniPlayerPlayPauseButton;

  @NonNull
  public final MaterialTextView miniPlayerTitle;

  @NonNull
  public final CircularProgressIndicator progressBar;

  @NonNull
  public final CircularProgressIndicator secondaryProgressBar;

  private FragmentMiniPlayerBinding(@NonNull LinearLayout rootView,
      @NonNull AppCompatImageView actionNext, @NonNull AppCompatImageView actionPrevious,
      @NonNull AppCompatImageView image, @NonNull MaterialCardView imageTextContainer,
      @NonNull AppCompatImageView miniPlayerPlayPauseButton,
      @NonNull MaterialTextView miniPlayerTitle, @NonNull CircularProgressIndicator progressBar,
      @NonNull CircularProgressIndicator secondaryProgressBar) {
    this.rootView = rootView;
    this.actionNext = actionNext;
    this.actionPrevious = actionPrevious;
    this.image = image;
    this.imageTextContainer = imageTextContainer;
    this.miniPlayerPlayPauseButton = miniPlayerPlayPauseButton;
    this.miniPlayerTitle = miniPlayerTitle;
    this.progressBar = progressBar;
    this.secondaryProgressBar = secondaryProgressBar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMiniPlayerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMiniPlayerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_mini_player, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMiniPlayerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actionNext;
      AppCompatImageView actionNext = ViewBindings.findChildViewById(rootView, id);
      if (actionNext == null) {
        break missingId;
      }

      id = R.id.actionPrevious;
      AppCompatImageView actionPrevious = ViewBindings.findChildViewById(rootView, id);
      if (actionPrevious == null) {
        break missingId;
      }

      id = R.id.image;
      AppCompatImageView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      id = R.id.imageTextContainer;
      MaterialCardView imageTextContainer = ViewBindings.findChildViewById(rootView, id);
      if (imageTextContainer == null) {
        break missingId;
      }

      id = R.id.miniPlayerPlayPauseButton;
      AppCompatImageView miniPlayerPlayPauseButton = ViewBindings.findChildViewById(rootView, id);
      if (miniPlayerPlayPauseButton == null) {
        break missingId;
      }

      id = R.id.miniPlayerTitle;
      MaterialTextView miniPlayerTitle = ViewBindings.findChildViewById(rootView, id);
      if (miniPlayerTitle == null) {
        break missingId;
      }

      id = R.id.progressBar;
      CircularProgressIndicator progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.secondaryProgressBar;
      CircularProgressIndicator secondaryProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (secondaryProgressBar == null) {
        break missingId;
      }

      return new FragmentMiniPlayerBinding((LinearLayout) rootView, actionNext, actionPrevious,
          image, imageTextContainer, miniPlayerPlayPauseButton, miniPlayerTitle, progressBar,
          secondaryProgressBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
