// Generated by view binder compiler. Do not edit!
package com.caij.puremusic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.caij.puremusic.R;
import com.caij.puremusic.views.StatusBarView;
import com.google.android.material.slider.Slider;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDriveModeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatImageView close;

  @NonNull
  public final AppCompatImageView image;

  @NonNull
  public final AppCompatImageView nextButton;

  @NonNull
  public final AppCompatImageView playPauseButton;

  @NonNull
  public final AppCompatImageView previousButton;

  @NonNull
  public final Slider progressSlider;

  @NonNull
  public final AppCompatImageView repeatButton;

  @NonNull
  public final AppCompatImageView shuffleButton;

  @NonNull
  public final MaterialTextView songCurrentProgress;

  @NonNull
  public final AppCompatImageView songFavourite;

  @NonNull
  public final MaterialTextView songText;

  @NonNull
  public final MaterialTextView songTitle;

  @NonNull
  public final MaterialTextView songTotalTime;

  @NonNull
  public final StatusBarView statusBar;

  @NonNull
  public final LinearLayout titleContainer;

  private ActivityDriveModeBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatImageView close, @NonNull AppCompatImageView image,
      @NonNull AppCompatImageView nextButton, @NonNull AppCompatImageView playPauseButton,
      @NonNull AppCompatImageView previousButton, @NonNull Slider progressSlider,
      @NonNull AppCompatImageView repeatButton, @NonNull AppCompatImageView shuffleButton,
      @NonNull MaterialTextView songCurrentProgress, @NonNull AppCompatImageView songFavourite,
      @NonNull MaterialTextView songText, @NonNull MaterialTextView songTitle,
      @NonNull MaterialTextView songTotalTime, @NonNull StatusBarView statusBar,
      @NonNull LinearLayout titleContainer) {
    this.rootView = rootView;
    this.close = close;
    this.image = image;
    this.nextButton = nextButton;
    this.playPauseButton = playPauseButton;
    this.previousButton = previousButton;
    this.progressSlider = progressSlider;
    this.repeatButton = repeatButton;
    this.shuffleButton = shuffleButton;
    this.songCurrentProgress = songCurrentProgress;
    this.songFavourite = songFavourite;
    this.songText = songText;
    this.songTitle = songTitle;
    this.songTotalTime = songTotalTime;
    this.statusBar = statusBar;
    this.titleContainer = titleContainer;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDriveModeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDriveModeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_drive_mode, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDriveModeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.close;
      AppCompatImageView close = ViewBindings.findChildViewById(rootView, id);
      if (close == null) {
        break missingId;
      }

      id = R.id.image;
      AppCompatImageView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      id = R.id.nextButton;
      AppCompatImageView nextButton = ViewBindings.findChildViewById(rootView, id);
      if (nextButton == null) {
        break missingId;
      }

      id = R.id.playPauseButton;
      AppCompatImageView playPauseButton = ViewBindings.findChildViewById(rootView, id);
      if (playPauseButton == null) {
        break missingId;
      }

      id = R.id.previousButton;
      AppCompatImageView previousButton = ViewBindings.findChildViewById(rootView, id);
      if (previousButton == null) {
        break missingId;
      }

      id = R.id.progressSlider;
      Slider progressSlider = ViewBindings.findChildViewById(rootView, id);
      if (progressSlider == null) {
        break missingId;
      }

      id = R.id.repeatButton;
      AppCompatImageView repeatButton = ViewBindings.findChildViewById(rootView, id);
      if (repeatButton == null) {
        break missingId;
      }

      id = R.id.shuffleButton;
      AppCompatImageView shuffleButton = ViewBindings.findChildViewById(rootView, id);
      if (shuffleButton == null) {
        break missingId;
      }

      id = R.id.songCurrentProgress;
      MaterialTextView songCurrentProgress = ViewBindings.findChildViewById(rootView, id);
      if (songCurrentProgress == null) {
        break missingId;
      }

      id = R.id.songFavourite;
      AppCompatImageView songFavourite = ViewBindings.findChildViewById(rootView, id);
      if (songFavourite == null) {
        break missingId;
      }

      id = R.id.songText;
      MaterialTextView songText = ViewBindings.findChildViewById(rootView, id);
      if (songText == null) {
        break missingId;
      }

      id = R.id.songTitle;
      MaterialTextView songTitle = ViewBindings.findChildViewById(rootView, id);
      if (songTitle == null) {
        break missingId;
      }

      id = R.id.songTotalTime;
      MaterialTextView songTotalTime = ViewBindings.findChildViewById(rootView, id);
      if (songTotalTime == null) {
        break missingId;
      }

      id = R.id.status_bar;
      StatusBarView statusBar = ViewBindings.findChildViewById(rootView, id);
      if (statusBar == null) {
        break missingId;
      }

      id = R.id.titleContainer;
      LinearLayout titleContainer = ViewBindings.findChildViewById(rootView, id);
      if (titleContainer == null) {
        break missingId;
      }

      return new ActivityDriveModeBinding((ConstraintLayout) rootView, close, image, nextButton,
          playPauseButton, previousButton, progressSlider, repeatButton, shuffleButton,
          songCurrentProgress, songFavourite, songText, songTitle, songTotalTime, statusBar,
          titleContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
