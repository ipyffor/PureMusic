com.caij.puremusic.service.MusicService$handleChangeInternal$1
kotlin.coroutines.jvm.internal.ContinuationImpl
com.caij.puremusic.db.model.SongEntity
com.caij.puremusic.util.AlbumUtil$sortAlbumSongs$songs$2
org.jaudiotagger.tag.id3.framebody.FrameBodyGEOB
com.google.android.exoplayer2.audio.AudioSink$ConfigurationException
com.thegrizzlylabs.sardineandroid.DavAcl
com.google.android.exoplayer2.metadata.icy.IcyInfo
io.ktor.http.CodecsKt$encodeURLPath$1$1
com.caij.vip.AliPayPresent$getPayBody$1
org.simpleframework.xml.transform.ShortTransform
androidx.preference.SwitchPreferenceCompat
com.umeng.commonsdk.statistics.idtracking.ImprintHandler
com.bumptech.glide.MemoryCategory
nl.adaptivity.xmlutil.serialization.XML$1
org.jaudiotagger.utils.DirectByteBufferUtils$ReleaseStrategy
com.umeng.common.b
nl.adaptivity.xmlutil.EventType$COMMENT
com.tencent.mm.opensdk.modelmsg.WXStateJumpChannelProfileInfo
com.google.android.material.appbar.AppBarLayout$Behavior
com.bumptech.glide.load.PreferredColorSpace
com.caij.puremusic.drive.model.ADriveFileResponse$$serializer
org.simpleframework.xml.stream.PrefixResolver
com.caij.puremusic.preferences.NowPlayingScreenPreference
com.bumptech.glide.Registry$MissingComponentException
com.caij.puremusic.fragments.folder.manager.MusicFolderManagerFragment$onPartViewClick$1$1
com.caij.puremusic.db.model.ServerAudioFormat
com.umeng.commonsdk.stateless.UMSLEnvelopeBuild
com.caij.puremusic.db.model.ArtistQueries$searchArtistByName$1
com.caij.puremusic.db.model.ServerLyricsQueries
com.caij.puremusic.dialogs.AddToPlaylistDialog$special$$inlined$sharedViewModel$default$1
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataApplication
org.simpleframework.xml.core.TemplateFilter
com.caij.puremusic.fragments.artists.AbsArtistDetailsFragment$onViewCreated$1
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture
com.caij.puremusic.drive.model.EmbyFoldersResponse$$serializer
com.umeng.commonsdk.utils.b
org.jaudiotagger.audio.generic.AudioFileModificationListener
com.umeng.commonsdk.statistics.common.DeviceTypeEnum
com.tencent.mm.opensdk.modelbiz.WXInvoiceAuthInsert$Resp
org.simpleframework.xml.transform.GregorianCalendarTransform
com.caij.puremusic.drive.model.PlaylistMetadata$Companion
com.google.android.exoplayer2.metadata.flac.PictureFrame
org.jaudiotagger.tag.id3.reference.ID3Rating
com.umeng.analytics.pro.s$a
org.jaudiotagger.utils.tree.TreeModel
com.caij.puremusic.db.model.ServerArtistCoverQueries$getById$2
com.caij.puremusic.db.model.SongQueries$GetAlbumSongCountQuery$execute$1
okhttp3.CertificatePinner$check$1
com.caij.puremusic.db.model.SongQueries$SongsDateLastDescQuery$execute$1
com.caij.puremusic.MainModuleKt$roomModule$1$1
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdTypeCountQuery
com.caij.puremusic.db.model.PlaylistEntityQueries$searchPlaylistByName$2
com.caij.puremusic.MainModuleKt$viewModules$1
com.caij.puremusic.drive.model.Auth2Token$Companion
org.jcodec.containers.mp4.boxes.FormatBox
com.caij.puremusic.fragments.albums.AlbumDetailsViewModel$getArtistByStrId$1
io.ktor.client.HttpClient$2
com.caij.puremusic.db.model.ServerSongCoverQueries$GetBySourceQuery$execute$1
kotlinx.coroutines.channels.BufferOverflow
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyNumberTotal
com.caij.puremusic.network.model.LastFmAlbum$Album$Tags
org.jaudiotagger.audio.asf.io.LanguageListReader
com.tencent.bugly.proguard.bk
com.caij.puremusic.appwidgets.AppWidgetText
com.tencent.bugly.proguard.z
com.google.android.material.datepicker.CalendarConstraints
androidx.savedstate.Recreator
com.caij.puremusic.fragments.backup.RestoreActivity$special$$inlined$viewModels$default$3
com.tencent.bugly.crashreport.CrashReport$CrashHandleCallback
com.google.common.collect.AbstractListMultimap
com.caij.puremusic.dialogs.RenamePlaylistDialog
com.google.android.datatransport.runtime.synchronization.SynchronizationException
com.caij.puremusic.db.model.SongEntityQueries$getSongEntity$2
org.jaudiotagger.tag.id3.framebody.FrameBodyTOAL
com.tencent.bugly.BuglyStrategy$a
com.caij.puremusic.drive.model.Metadata$$serializer
androidx.lifecycle.PausingDispatcherKt$whenStateAtLeast$2
kotlinx.serialization.json.internal.JsonDecodingException
com.google.common.collect.RegularImmutableMap$EntrySet
com.thegrizzlylabs.sardineandroid.model.Lockscope
com.google.android.exoplayer2.util.PriorityTaskManager$PriorityTooLowException
org.simpleframework.xml.core.DetailScanner
org.simpleframework.xml.util.Resolver$Stack$Sequence
com.caij.puremusic.drive.util.Auth20Util$refreshTokenJsonRequest$1
com.caij.puremusic.activities.tageditor.SongTagEditorActivityV2$onCreate$1
com.umeng.commonsdk.stateless.b$a
com.google.common.hash.ChecksumHashFunction
com.caij.puremusic.db.model.PlaylistEntityQueries$insert$1
org.jaudiotagger.audio.asf.io.ChunkReader
com.google.android.gms.common.util.DynamiteApi
com.umeng.analytics.pro.by
com.caij.puremusic.drive.model.PlexLoginResponse$$serializer
org.jaudiotagger.tag.id3.framebody.FrameBodyXSOP
com.umeng.commonsdk.config.d$d
com.caij.puremusic.dialogs.BlacklistFolderChooserDialog$onCreateDialog$3
org.repackage.a.a.a.a.c
com.caij.puremusic.fragments.albums.AlbumDetailsViewModel$fetchAlbum$1
com.caij.puremusic.drive.model.JellyfinSongListResponse$$serializer
com.caij.puremusic.views.insets.InsetsRecyclerView
com.caij.puremusic.views.RetroShapeableImageView
com.caij.vip.AliPayFragment$openAlipayAppPay$1
com.caij.puremusic.db.model.SongEntityQueries$songsFromPlaylist$1
com.caij.puremusic.model.Playlist$Creator
org.jaudiotagger.tag.lyrics3.FieldFrameBodyAUT
com.caij.puremusic.model.Genre$Creator
com.google.android.gms.common.api.ApiException
com.caij.puremusic.dialogs.DeleteSongsDialog$onCreateDialog$4
com.caij.puremusic.fragments.folder.FoldersFragment$onFileMenuClicked$2$2$1
org.jaudiotagger.audio.SupportedFileFormat$7
com.tencent.bugly.crashreport.CrashReport
nl.adaptivity.xmlutil.serialization.XmlExceptionsKt$candidateString$1
com.caij.puremusic.fragments.player.PlayerAlbumCoverFragment
org.simpleframework.xml.core.ElementLabel
com.umeng.analytics.pro.bl
org.jaudiotagger.utils.tree.TreeNode
org.jaudiotagger.audio.generic.AudioFileReader2
com.umeng.analytics.process.b
com.caij.puremusic.helper.BackupContent
org.simpleframework.xml.core.AnnotationHandler
androidx.appcompat.widget.AppCompatImageView
com.umeng.commonsdk.internal.UMInternalManagerAgent
io.ktor.client.engine.okhttp.OkHttpEngine$1
nl.adaptivity.xmlutil.core.impl.XmlStreamingJavaCommon$serializationLoader$2
org.jaudiotagger.tag.TagField
com.umeng.analytics.pro.bf$b
com.alipay.mobile.framework.service.annotation.OperationType
com.tencent.mm.opensdk.modelmsg.WXMusicObject
com.caij.puremusic.util.AlbumUtil$sortAlbumSongs$songs$3
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1
org.jaudiotagger.tag.id3.framebody.FrameBodyTSRC
com.caij.puremusic.db.model.AlbumQueries$GetAlbumByArtistIdQuery
com.google.android.material.card.MaterialCardView
com.umeng.analytics.pro.e$c$b
org.simpleframework.xml.core.ExpressionBuilder
com.tencent.bugly.proguard.p
com.caij.puremusic.fragments.folder.manager.MusicFolderUtil$showJellyfinEditDialog$1$1$1
com.umeng.analytics.pro.e$b$a
com.umeng.commonsdk.statistics.proto.b$a
kotlin.jvm.internal.Lambda
com.caij.puremusic.drive.baidu.BaiduDriveEngine$getChildInner$1
com.caij.puremusic.fragments.folder.FoldersFragment$listPaths$2
com.caij.puremusic.drive.model.OneDriveItem$Companion
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
com.alipay.apmobilesecuritysdk.otherid.UmidSdkWrapper
com.alipay.android.phone.mrpc.core.t
androidx.window.core.SpecificationComputer$VerificationMode
com.caij.puremusic.drive.model.Type$Companion
android.support.v4.app.RemoteActionCompatParcelizer
org.jaudiotagger.tag.mp4.Mp4NonStandardFieldKey
com.caij.puremusic.model.UpdateInfo
com.caij.puremusic.fragments.genres.GenreDetailsFragment$detailsViewModel$2
com.caij.puremusic.fragments.lyrics.ComnLyricsFragment$editFileLyrics$1$2
org.jaudiotagger.tag.id3.framebody.FrameBodyTIT3
com.caij.puremusic.fragments.player.simple.SimplePlayerFragment
com.caij.puremusic.fragments.lyrics.ComnLyricsFragment$editFileLyrics$1$1
com.caij.puremusic.db.model.ArtistQueries$ArtistByIdQuery$execute$1
com.caij.puremusic.db.model.AlbumQueries$albums$1
org.jaudiotagger.logging.LogFormatter
com.caij.puremusic.fragments.lyrics.ComnLyricsFragment$editNormalLyrics$1$1$1
kotlin.NoWhenBranchMatchedException
androidx.preference.Preference$BaseSavedState
androidx.preference.PreferenceGroup
org.jaudiotagger.tag.id3.framebody.FrameBodySEEK
com.caij.puremusic.dialogs.CreatePlaylistDialog
com.caij.puremusic.fragments.artists.AbsArtistDetailsFragment$showArtistStep2$1$1
org.jaudiotagger.tag.id3.AggregatedFrame
com.caij.puremusic.fragments.player.blur.BlurPlaybackControlsFragment$updateSong$1
com.umeng.commonsdk.statistics.proto.Gender
com.caij.puremusic.activities.MainActivity$handlePlaybackIntent$1$2
org.jaudiotagger.audio.asf.data.AudioStreamChunk
com.caij.puremusic.fragments.folder.FoldersSettingFragment$onMenuItemSelected$1
org.jaudiotagger.audio.asf.data.MetadataContainerFactory
org.simpleframework.xml.core.Comparer
com.caij.puremusic.db.model.SongQueries$SongsByAlumIdQuery$execute$1
com.caij.puremusic.db.model.ArtistQueries$ArtistByNameQuery$execute$1
org.simpleframework.xml.strategy.Reference
com.google.android.exoplayer2.metadata.scte35.SpliceNullCommand
com.caij.puremusic.fragments.playlists.PlaylistDetailsFragment
androidx.mediarouter.app.OverlayListView
org.jaudiotagger.audio.SupportedFileFormat$16
org.repackage.com.miui.deviceid.IdentifierManager
org.simpleframework.xml.core.Converter
org.jaudiotagger.tag.id3.framebody.FrameBodyTCMP
org.jaudiotagger.audio.ogg.VorbisVersion
com.thegrizzlylabs.sardineandroid.model.CurrentUserPrivilegeSet
kotlin.sequences.SequencesKt__SequencesKt$flatten$3
kotlinx.serialization.internal.ObjectSerializer$descriptor$2
org.jcodec.containers.mp4.DefaultBoxes
com.caij.puremusic.drive.model.WebDAVToken$$serializer
com.google.common.collect.Iterators$EmptyModifiableIterator
org.jaudiotagger.tag.id3.ID3v11Tag
com.tencent.mm.opensdk.modelbiz.SubscribeMessage
org.jaudiotagger.tag.mp4.field.Mp4TagTextSingleNumberField
com.tencent.mm.opensdk.modelmsg.WXStateSceneDataObject
com.caij.puremusic.db.model.ServerLyricsQueries$clear$1
org.jaudiotagger.tag.id3.framebody.FrameBodyTFLT
com.caij.puremusic.helper.BackupHelper$special$$inlined$inject$default$2
com.caij.puremusic.views.SettingListItemView
org.json.alipay.JSONException
kotlinx.serialization.internal.TaggedDecoder$decodeSerializableElement$1
androidx.fragment.app.strictmode.GetTargetFragmentRequestCodeUsageViolation
com.google.android.datatransport.runtime.backends.BackendResponse$Status
com.tencent.mm.opensdk.modelmsg.WXGameLiveObject
org.jaudiotagger.audio.asf.io.StreamChunkReader
org.jaudiotagger.tag.datatype.StringSizeTerminated
com.heinrichreimersoftware.materialintro.view.parallax.ParallaxSlideFragment
com.caij.puremusic.db.model.SongQueries$songsByArtist$2
org.jaudiotagger.audio.mp4.ChunkReader
org.jaudiotagger.audio.aiff.chunk.CommentsChunk
com.caij.puremusic.activities.DriveModeActivity$updateFavorite$1$1
com.caij.puremusic.fragments.other.DetailListFragment$loadHistory$2
com.caij.puremusic.db.model.SongQueries$FirstSongByAlbumIdQuery$execute$1
com.caij.puremusic.fragments.backup.BackupFragment$onViewCreated$1
com.caij.puremusic.drive.model.PlaylistResponse$$serializer
nl.adaptivity.xmlutil.XmlException
com.caij.puremusic.drive.model.SearchResult3$$serializer
org.jaudiotagger.tag.id3.ID3v23Frame$EncodingFlags
org.simpleframework.xml.core.ExtractorFactory$ElementExtractor
androidx.appcompat.view.menu.ActionMenuItemView
com.caij.puremusic.fragments.search.SearchFragment$setupChips$chips$1
com.caij.puremusic.activities.tageditor.SongTagEditorActivityV2$save$1$2
com.caij.puremusic.fragments.folder.FoldersSettingFragment$listPaths$2
com.thegrizzlylabs.sardineandroid.model.Group
com.caij.puremusic.fragments.base.AbsPlayerFragment$special$$inlined$sharedViewModel$default$2
org.simpleframework.xml.filter.EnvironmentFilter
androidx.preference.SeekBarPreference$SavedState
com.tencent.mmkv.MMKV
com.caij.puremusic.db.model.ArtistQueries$ArtistByNameQuery
com.google.common.collect.MapMakerInternalMap
org.jaudiotagger.audio.asf.io.AsfExtHeaderReader
com.umeng.commonsdk.statistics.proto.d$e
org.jcodec.containers.mp4.boxes.EsdsBox$DecoderConfig
org.jaudiotagger.audio.asf.io.ChunkRemover
com.umeng.commonsdk.statistics.common.ReportPolicy
com.caij.puremusic.database.ServerArtistCoverDaoImp$insert$1
com.caij.puremusic.drive.model.SearchResult3
com.umeng.analytics.vshelper.a
com.caij.puremusic.helper.BackupHelper$createBackup$1
com.caij.puremusic.fragments.folder.FoldersFragment$onFileMenuClicked$2$2
org.simpleframework.xml.transform.BigIntegerTransform
com.umeng.umzid.ZIDManager$b
com.umeng.commonsdk.BuildConfig
org.jaudiotagger.tag.id3.framebody.FrameBodyTMOO
androidx.appcompat.widget.AppCompatRadioButton
com.google.android.gms.auth.api.signin.internal.SignInConfiguration
org.simpleframework.xml.core.PrimitiveKey
com.google.android.exoplayer2.audio.AudioSink$WriteException
org.jaudiotagger.tag.id3.framebody.FrameBodyPIC
com.caij.puremusic.fragments.other.UserInfoFragment$special$$inlined$sharedViewModel$default$2
com.caij.puremusic.MainModuleKt$networkModule$1$1
com.caij.puremusic.extensions.ViewExtensionsKt$drawNextToNavbar$1
androidx.preference.UnPressableLinearLayout
org.jaudiotagger.tag.id3.framebody.FrameBodySYLT
nl.adaptivity.xmlutil.serialization.structure.XmlMapDescriptor$keyDescriptor$2
com.caij.puremusic.activities.PermissionActivity$onCreate$2
com.caij.puremusic.db.model.SongQueries$insertOrReplace$1
org.simpleframework.xml.core.SetPart
kotlinx.serialization.json.JsonNull$$cachedSerializer$delegate$1
com.caij.puremusic.activities.tageditor.AlbumTagEditorActivityV2$save$1$3
com.umeng.commonsdk.statistics.common.a$1
com.umeng.commonsdk.framework.UMLogDataProtocol
com.caij.puremusic.util.MusicUtil$toggleFavorite$2
com.caij.puremusic.activities.tageditor.AbsTagEditorActivity$special$$inlined$inject$default$1
com.caij.puremusic.fragments.settings.AbsSettingsFragment$onViewCreated$1$1
com.umeng.analytics.pro.e$a
com.caij.puremusic.fragments.artists.AbsArtistDetailsFragment$handleSortOrderMenuItem$1$1$2
org.jaudiotagger.audio.ogg.util.OggPage
com.caij.puremusic.db.model.PlaylistEntityQueries$SearchPlaylistByNameQuery
com.caij.puremusic.db.model.SongQueries$GetAlbumSongCountQuery
com.caij.puremusic.network.model.LastFmTrack$Track$Album$Image
org.jaudiotagger.tag.reference.PerformerHelper
com.google.android.material.appbar.AppBarFixBehavior
nl.adaptivity.xmlutil.SimpleNamespaceContext$getPrefixSequence$1
com.umeng.commonsdk.statistics.idtracking.h
com.google.android.material.progressindicator.LinearProgressIndicator
org.jaudiotagger.audio.aiff.chunk.ApplicationChunk
org.simpleframework.xml.convert.ScannerBuilder
com.umeng.commonsdk.framework.UMFrUtils$1
org.jaudiotagger.tag.id3.framebody.FrameBodyXSOT
com.caij.puremusic.drive.model.SubsonicSearchListResponse$$serializer
com.caij.puremusic.drive.model.AMetadata$Companion
com.umeng.analytics.pro.e$c$a
com.caij.puremusic.fragments.albums.AlbumsFragment$onShuffleClicked$1$1
org.jaudiotagger.tag.id3.framebody.FrameBodyRVAD
com.caij.puremusic.model.lyrics.SynchronizedLyricsLRC
com.umeng.commonsdk.framework.UMWorkDispatch
com.caij.puremusic.fragments.player.plain.PlainPlayerFragment
com.caij.puremusic.db.model.PlaylistEntityQueries$CheckPlaylistExistsQuery
com.tencent.mm.opensdk.modelbiz.OpenWebview$Req
org.simpleframework.xml.transform.DefaultMatcher
com.tencent.mm.opensdk.modelbiz.HandleScanResult
com.google.gson.JsonIOException
com.caij.puremusic.views.TopAppBarLayout$1$1
org.xmlpull.v1.XmlPullParser
com.caij.puremusic.fragments.search.SearchFragment
com.alipay.apmobilesecuritysdk.e.c
io.ktor.client.HttpClient$1
androidx.appcompat.app.AppCompatDialogFragment
com.google.android.exoplayer2.upstream.Loader$UnexpectedLoaderException
com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker$1
com.caij.puremusic.views.insets.InsetsConstraintLayout
org.jaudiotagger.tag.datatype.NumberFixedLength
org.jaudiotagger.tag.id3.ID3v22Tag
code.name.monkey.appthemehelper.common.prefs.ATEColorPreference
org.simpleframework.xml.core.ParameterMap
com.umeng.commonsdk.statistics.proto.d$1
com.umeng.analytics.pro.v
org.jaudiotagger.tag.datatype.PartOfSet
com.caij.vip.GoodOrder
org.jaudiotagger.audio.asf.io.ChunkContainerReader
com.caij.puremusic.fragments.player.md3.MD3PlayerFragment
com.caij.puremusic.fragments.backup.BackupFragment$special$$inlined$viewModels$default$5
org.jaudiotagger.tag.id3.ID3v23FieldKey
com.caij.puremusic.drive.jellyfin.JellyfinEngine$getMediaInfo$1
org.simpleframework.xml.core.ElementMapUnionLabel
com.tencent.bugly.proguard.o
androidx.media.AudioAttributesCompatParcelizer
com.caij.puremusic.fragments.player.flat.FlatPlaybackControlsFragment$updateSong$1
io.ktor.client.engine.okhttp.OkHttpEngineContainer
com.caij.puremusic.fragments.player.gradient.GradientPlayerFragment
com.caij.puremusic.drive.model.GoogleDriveFileResponse$Companion
app.cash.sqldelight.driver.android.AndroidSqliteDriver$executeQuery$1
com.caij.puremusic.fragments.search.Filter
com.tencent.mm.opensdk.modelmsg.LaunchFromWX$Req
com.google.common.base.Predicates$ObjectPredicate$1
com.caij.puremusic.fragments.folder.FoldersFragment$onFileMenuClicked$2$1
com.caij.puremusic.preferences.LibraryPreferenceDialog
android.support.v4.media.session.MediaSessionCompat$Token
com.caij.puremusic.fragments.folder.FoldersSettingFragment$onFileMenuClicked$2$1
org.jaudiotagger.audio.mp4.Mp4TagWriter
com.caij.puremusic.db.model.SongQueries$SongsByTitleQuery
org.simpleframework.xml.stream.CamelCaseStyle
com.caij.puremusic.db.model.PlayCountEntityQueries$insert$1
com.google.android.exoplayer2.source.UnrecognizedInputFormatException
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdCountQuery$execute$1
org.jaudiotagger.tag.id3.framebody.FrameBodyWPUB
com.caij.puremusic.service.MediaHttp$getBaiduDriveRealDownUrl$1$newHeaders$1
com.tencent.bugly.proguard.f
com.google.android.exoplayer2.audio.AudioProcessor$UnhandledAudioFormatException
com.tencent.bugly.proguard.s
org.koin.androidx.scope.FragmentExtKt$fragmentScope$1
com.caij.puremusic.fragments.player.normal.PlayerFragment
com.google.common.collect.ImmutableSet
com.umeng.commonsdk.framework.UMFrUtils
com.thegrizzlylabs.sardineandroid.model.Deny
org.jcodec.containers.mp4.boxes.EsdsBox
com.caij.puremusic.db.model.SongQueries$songsByIds$2
com.caij.puremusic.fragments.artists.ArtistDetailsViewModel$fetchArtist$1
com.caij.puremusic.activities.PermissionActivity$onCreate$1
com.caij.puremusic.service.MusicService$onMediaMetadata$2$1
com.caij.puremusic.fragments.settings.ImageSettingFragment$resetImageCache$1$1
org.jaudiotagger.tag.images.Artwork
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgram$Resp
com.caij.puremusic.helper.menu.PlaylistMenuHelper$handleMenuClick$1$1
com.google.android.exoplayer2.extractor.flv.TagPayloadReader$UnsupportedFormatException
com.caij.puremusic.db.model.ArtistQueries$searchArtistByName$2
com.caij.puremusic.db.model.Folder
com.caij.puremusic.db.model.ServerArtistCoverQueries$GetByIdQuery
com.umeng.analytics.c
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3
com.google.android.material.navigation.NavigationBarView$SavedState
com.thegrizzlylabs.sardineandroid.model.Lockentry
com.caij.puremusic.drive.dropbox.DropboxDriveEngine$getFolderFiles$1
com.caij.puremusic.db.model.ServerSongCoverQueries$getById$2
com.tencent.mm.opensdk.channel.MMessageActV2
com.umeng.analytics.pro.ab
org.repackage.a.a.a.a.c$a
com.caij.puremusic.util.AlbumUtil$sort$2
com.google.common.hash.Hashing$ChecksumType
com.caij.puremusic.fragments.lyrics.ComnLyricsFragment$editSyncedLyrics$1$1
com.tencent.mm.opensdk.modelbiz.WXChannelStartLive$Resp
com.thegrizzlylabs.sardineandroid.model.Lockinfo
org.simpleframework.xml.core.ElementListUnionParameter$Contact
com.caij.puremusic.db.model.PlaylistEntityQueries$renamePlaylist$2
com.umeng.commonsdk.statistics.proto.Response$e
com.heinrichreimersoftware.materialintro.view.parallax.ParallaxFragment
com.caij.puremusic.db.model.SearchAlbumResultQueries$getById$1
org.jaudiotagger.tag.id3.framebody.FrameBodyTDOR
com.tencent.mm.opensdk.modelbiz.ChooseCardFromWXCardPackage$Req
org.simpleframework.xml.core.SessionManager$Reference
com.google.android.gms.auth.api.signin.internal.SignInHubActivity
com.google.android.gms.internal.play_billing.zzac
com.thegrizzlylabs.sardineandroid.Sardine
com.umeng.commonsdk.UMInnerImpl
com.caij.puremusic.drive.model.Multistatus$$serializer
io.ktor.utils.io.jvm.javaio.BlockingKt$ADAPTER_LOGGER$2
org.simpleframework.xml.ElementArray
org.jcodec.containers.mp4.boxes.EncodedPixelBox
org.jcodec.containers.mp4.MP4Util$Movie
com.umeng.commonsdk.UMConfigure$BS_TYPE
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl
com.umeng.commonsdk.statistics.proto.Response$1
com.caij.puremusic.drive.model.SubsonicSearchResponse$$serializer
org.jaudiotagger.tag.id3.framebody.FrameBodyTPE3
com.caij.puremusic.fragments.folder.FoldersSettingFragment$onFileMenuClicked$2$2$1
org.jaudiotagger.audio.mp4.Flatten$SampleProcessor
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier
com.caij.puremusic.fragments.folder.FoldersFragment$onFileMenuClicked$1$2
com.tencent.bugly.crashreport.crash.CrashDetailBean
org.repackage.com.miui.deviceid.BuildConfig
androidx.swiperefreshlayout.widget.SwipeRefreshLayout
com.caij.puremusic.fragments.genres.GenreDetailsFragment$onViewCreated$1
androidx.constraintlayout.helper.widget.Flow
com.caij.puremusic.fragments.settings.PersonalizeSettingsFragment
com.google.common.hash.Hashing$ChecksumType$2
com.caij.puremusic.db.model.ServerArtistCoverQueries$deleteSongBySource$2
androidx.appcompat.widget.SearchView$SavedState
com.caij.puremusic.db.model.ServerLyrics
com.caij.puremusic.dialogs.ImportPlaylistDialog
org.jaudiotagger.tag.TagException
org.simpleframework.xml.stream.StreamReader$Start
com.caij.puremusic.model.smartplaylist.ShuffleAllPlaylist$Creator
kotlin.jvm.internal.FunctionReference
org.jcodec.containers.mp4.boxes.DataInfoBox
org.jaudiotagger.tag.mp4.Mp4ContentTypeValue
kotlinx.serialization.internal.ClassValueParametrizedCache$get-gIAlu-s$$inlined$getOrSet$1
com.tencent.mm.opensdk.constants.ConstantsAPI$AppSupportContentFlag
com.caij.puremusic.service.MediaSessionCallback$special$$inlined$inject$default$1
com.caij.puremusic.util.HttpUtil$httpClient$1$1$1
com.caij.puremusic.views.BreadCrumbLayout$Crumb
com.thegrizzlylabs.sardineandroid.model.Grant
com.caij.puremusic.drive.model.AlbumListResponse
nl.adaptivity.xmlutil.serialization.structure.XmlOrderNode$toString$2
org.simpleframework.xml.stream.NodeMap
com.caij.puremusic.activities.tageditor.SongTagEditorActivity
org.jaudiotagger.tag.id3.ID3v24Frames
org.simpleframework.xml.stream.NodeException
com.caij.puremusic.fragments.settings.AudioSettings
io.ktor.utils.io.ByteBufferChannel$attachJob$1
com.caij.puremusic.dialogs.RenamePlaylistDialog$special$$inlined$sharedViewModel$default$2
com.caij.puremusic.model.DriveFileParcelable$Creator
nl.adaptivity.xmlutil.core.impl.NamespaceHolder$namespaceContext$1$getPrefixesCompat$2
org.jaudiotagger.tag.id3.framebody.FrameBodyTYER
nl.adaptivity.xmlutil.core.KtXmlWriter$WriteState
com.caij.puremusic.fragments.LibraryViewModel$artists$1
com.umeng.analytics.pro.af
com.caij.puremusic.activities.LockScreenActivity
com.alipay.mobile.framework.service.annotation.ResetCookie
io.ktor.utils.io.ExceptionUtilsJvmKt$tryCopyException$4$1
com.umeng.commonsdk.utils.b$a
com.tencent.mm.opensdk.modelmsg.WXDesignerSharedObject
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject
org.jaudiotagger.tag.id3.AbstractTagFrame
com.caij.puremusic.drive.model.AlbumItem$$serializer
org.jcodec.containers.mp4.boxes.PixelAspectExt
org.jaudiotagger.tag.id3.valuepair.V2GenreTypes
com.alipay.android.phone.mrpc.core.l
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver
io.ktor.http.HttpUrlEncodedKt$formUrlEncodeTo$1
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType
com.tencent.mm.opensdk.channel.a.a
org.jaudiotagger.tag.lyrics3.FieldFrameBodyIND
androidx.window.layout.SidecarCompat$TranslatingCallback
com.google.common.hash.HashCode$LongHashCode
androidx.recyclerview.widget.RecyclerView
org.jaudiotagger.audio.SupportedFileFormat$17
com.alipay.android.phone.mrpc.core.x
io.ktor.client.engine.UtilsKt$mergeHeaders$1
org.jaudiotagger.tag.id3.framebody.FrameBodyPOPM
org.jaudiotagger.tag.id3.framebody.FrameBodyTSOA
com.umeng.commonsdk.statistics.common.a$a
kotlinx.coroutines.CoroutineContextKt$foldCopies$1
com.caij.puremusic.db.model.PlaylistEntityQueries$searchPlaylistByName$1
com.tencent.mm.opensdk.diffdev.OAuthListener
com.tencent.mm.opensdk.modelbiz.WXChannelShareVideo$Resp
androidx.lifecycle.LifecycleCoroutineScopeImpl
com.caij.puremusic.db.model.SongEntityQueries$GetSongEntityQuery
com.alipay.apmobilesecuritysdk.d.c
com.umeng.analytics.MobclickAgent
org.simpleframework.xml.util.WeakCache$1
com.tencent.mm.opensdk.openapi.WXApiImplV10
com.caij.puremusic.drive.model.Part$Companion
com.caij.puremusic.dialogs.RemoveSongFromPlaylistDialog
org.koin.android.ext.koin.KoinExtKt$androidContext$2
com.caij.puremusic.fragments.artists.ArtistDetailsFragment$special$$inlined$viewModel$default$2
org.jaudiotagger.tag.id3.framebody.FrameBodyTDLY
com.caij.puremusic.db.model.AlbumQueries$SearchAlbumsByNameQuery
io.ktor.client.HttpClientConfig$engine$1
org.jaudiotagger.audio.wav.WavSaveOrder
com.umeng.commonsdk.statistics.proto.e
com.caij.puremusic.fragments.player.md3.MD3PlaybackControlsFragment$updateSong$1
com.umeng.commonsdk.internal.b
org.jaudiotagger.tag.datatype.TextEncodedStringSizeTerminated
com.caij.puremusic.fragments.player.material.MaterialControlsFragment$updateSong$1
com.tencent.bugly.proguard.an
com.alipay.android.phone.mrpc.core.b$a
com.umeng.commonsdk.statistics.common.d$b
com.caij.puremusic.lyrics.LrcView
com.caij.puremusic.fragments.folder.FoldersSettingFragment
com.google.common.collect.RegularImmutableMap$EntrySet$1
com.umeng.commonsdk.framework.UMWorkDispatch$1
org.simpleframework.xml.core.SignatureCreator
com.google.gson.LongSerializationPolicy$2
io.ktor.serialization.JsonConvertException
com.umeng.analytics.pro.ai
com.caij.puremusic.db.model.SongQueries$delete$1
androidx.appcompat.widget.ButtonBarLayout
org.jaudiotagger.tag.datatype.SynchronisedTempoCodeList
com.caij.puremusic.drive.model.AlbumArtist
org.simpleframework.xml.util.Dictionary$Table
org.jaudiotagger.audio.AudioFile$1
org.simpleframework.xml.core.SignatureBuilder$ParameterList
org.jaudiotagger.audio.asf.data.StreamBitratePropertiesChunk
androidx.lifecycle.CompositeGeneratedAdaptersObserver
com.google.android.material.internal.TouchObserverFrameLayout
com.caij.puremusic.drive.model.PlaylistsMediaContainer$Companion
com.afollestad.materialdialogs.color.view.ObservableSeekBar
io.ktor.utils.io.ByteBufferChannel$writeSuspension$1
com.umeng.analytics.pro.q
com.caij.puremusic.db.model.AlbumQueries$GetAlbumByArtistIdQuery$execute$1
org.simpleframework.xml.stream.NodeReader
com.caij.puremusic.dialogs.SongShareDialog
com.tencent.mm.opensdk.modelmsg.WXAppExtendObject
com.caij.puremusic.db.model.ArtistQueries$clear$1
com.tencent.bugly.proguard.ag$c
androidx.preference.PreferenceHeaderFragmentCompat
com.caij.puremusic.views.ListItemView
com.tencent.mm.opensdk.modelpay.JumpToOfflinePay$Resp
io.ktor.client.plugins.HttpRequestLifecycleKt$attachToClientEngineJob$handler$1
com.caij.puremusic.fragments.other.PlayingQueueRVFragment
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4
org.simpleframework.xml.ElementMap
io.ktor.utils.io.ByteChannelSequentialBase$readAvailable$2
com.tencent.bugly.proguard.u
com.caij.puremusic.fragments.LibraryViewModel$deleteSongsInPlaylist$1
com.caij.puremusic.dialogs.DeleteSongsDialog$onCreateDialog$2$1
com.caij.puremusic.fragments.other.DetailListFragment$loadFavorite$2
org.jaudiotagger.audio.flac.FlacFileWriter
com.tencent.mm.opensdk.modelbiz.WXChannelOpenProfile
com.caij.puremusic.views.VerticalTextView
org.simpleframework.xml.core.LabelExtractor$LabelBuilder
com.caij.puremusic.db.model.ArtistQueries$artistById$2
com.umeng.analytics.process.UMProcessDBDatasSender$ReplaceCallback
io.github.aakira.napier.atomic.AtomicMutableList$remove$1
io.ktor.client.utils.ByteChannelUtilsKt$observable$1
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1
com.thegrizzlylabs.sardineandroid.DavPrincipal
com.caij.puremusic.db.model.ServerSongCoverQueries
com.caij.puremusic.db.model.HistoryEntityQueries$updateHistorySong$2
org.jaudiotagger.tag.datatype.MultipleTextEncodedStringNullTerminated
org.simpleframework.xml.stream.Indenter
org.simpleframework.xml.core.Criteria
androidx.activity.ComponentActivity$3
com.caij.puremusic.model.PlaylistWrapper
com.umeng.analytics.pro.y$a
com.umeng.analytics.pro.l$a
com.caij.puremusic.fragments.folder.manager.MusicFolderManagerFragment$special$$inlined$sharedViewModel$default$1
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$1
com.caij.puremusic.service.MusicService$restoreQueuesAndPositionIfNecessary$1
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgramEnvironment
io.ktor.utils.io.internal.SequentialCopyToKt$copyToTail$1
io.github.aakira.napier.atomic.AtomicMutableList$set$1
com.tencent.bugly.proguard.au
com.caij.puremusic.db.model.ServerSongCoverQueries$getBySource$1
com.umeng.commonsdk.statistics.c
com.umeng.analytics.process.UMProcessDBHelper$1
nl.adaptivity.xmlutil.Namespace$Companion$descriptor$1
com.caij.puremusic.activities.tageditor.AbsTagEditorActivity$writeToFiles$2
com.caij.puremusic.fragments.playlists.PlaylistDetailsFragment$onViewCreated$1
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1
org.jaudiotagger.tag.id3.framebody.FrameBodyGRP1
com.caij.puremusic.views.insets.InsetsConstraintLayout$1
org.jaudiotagger.audio.ogg.util.VorbisHeader
com.caij.puremusic.fragments.LibraryViewModel$syncSource$3
com.umeng.commonsdk.stateless.b$1
com.tencent.mm.opensdk.modelpay.WXJointPay
com.afollestad.materialdialogs.color.DialogColorChooserExtKt$setupCustomPage$4
com.google.android.material.bottomsheet.BottomSheetBehavior$4
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1
com.caij.puremusic.activities.tageditor.AlbumTagEditorActivityV2$writeValuesToFiles$1
org.jcodec.containers.mp4.boxes.GamaExtension
com.caij.puremusic.dialogs.SleepTimerDialog
com.caij.puremusic.helper.menu.SongsMenuHelper$handleMenuClick$1$1
org.simpleframework.xml.strategy.TreeStrategy
com.google.android.gms.auth.api.signin.GoogleSignInAccount
org.json.alipay.b$a
com.caij.puremusic.db.model.HistoryEntityQueries$insert$2
org.jaudiotagger.tag.lyrics3.FieldFrameBodyUnsupported
org.jaudiotagger.audio.generic.ModificationHandler
com.caij.puremusic.drive.model.PlayListsResponse$Companion
com.caij.puremusic.fragments.queue.PlayingQueueFragment
com.caij.puremusic.drive.model.Auth2Token
nl.adaptivity.xmlutil.serialization.XmlEncoderBase$TagEncoder$encodeNullableSerializableElement$1
com.caij.puremusic.adapter.album.AlbumCoverPagerAdapter$AlbumCoverFragment$showLyricsDialog$1$1
io.ktor.client.plugins.RedirectResponseException
com.caij.puremusic.service.MusicService$restoreQueuesAndPositionIfNecessary$2$1$1
com.caij.puremusic.db.model.SongQueries$songByPath$2
org.jaudiotagger.logging.FileSystemMessage
com.caij.puremusic.util.AlbumUtil$sortAlbumSongs$songs$1
com.alipay.mobile.framework.service.annotation.UpdateDeviceInfo
com.umeng.commonsdk.statistics.UMErrorCode
com.caij.puremusic.MainModuleKt$roomModule$1$9
org.jaudiotagger.logging.Hex
io.ktor.client.plugins.DefaultTransformKt$defaultTransformers$2
org.jcodec.containers.mp4.boxes.TrunBox$Factory
com.umeng.analytics.pro.m
com.umeng.umzid.b
code.name.monkey.appthemehelper.common.prefs.supportv7.ATESeekBarPreference
com.umeng.analytics.pro.an$a
com.tencent.mm.opensdk.modelpay.JumpToOfflinePay
com.umeng.analytics.CoreProtocol$a
com.umeng.analytics.pro.t
com.caij.puremusic.db.model.SongQueries$SongsByAlumQuery
com.caij.puremusic.fragments.player.full.FullPlaybackControlsFragment$updateIsFavorite$1$1
com.google.android.gms.internal.play_billing.zzew
com.tencent.mm.opensdk.modelbiz.WXPayInsurance$Resp
androidx.lifecycle.BlockRunner$cancel$1
com.caij.puremusic.drive.model.FMediaContainer
com.caij.puremusic.fragments.LibraryViewModel$deleteSource$1
org.simpleframework.xml.convert.Converter
com.caij.puremusic.fragments.other.DetailListFragment
io.ktor.utils.io.ByteBufferChannel$writeFullySuspend$3
com.bumptech.glide.Registry$NoSourceEncoderAvailableException
org.jaudiotagger.audio.flac.FlacAudioHeader
com.bumptech.glide.load.resource.bitmap.VideoDecoder$VideoDecoderException
com.caij.puremusic.helper.BackupHelper$zipAll$2
com.caij.puremusic.db.model.HistoryEntityQueries$historySongs$2
com.caij.puremusic.db.model.PlayCountEntityQueries$checkSongExistInPlayCount$1
com.caij.puremusic.db.model.FolderQueries$selectById$1
com.alipay.apmobilesecuritysdk.face.APSecuritySdk$InitResultListener
org.jaudiotagger.audio.wav.WavCleaner
com.caij.puremusic.fragments.folder.manager.MusicFolderUtil$auth20Launcher$1$1
org.jaudiotagger.tag.id3.framebody.FrameBodyWCOM
com.caij.puremusic.activities.SettingActivity
com.caij.puremusic.db.model.SearchAlbumResultQueries$GetByIdQuery
org.jaudiotagger.audio.asf.io.RandomAccessFileInputstream
org.jaudiotagger.test.TestAudioTagger$DirFilter
com.caij.puremusic.db.model.PlaybackSong$Adapter
org.jaudiotagger.tag.datatype.NumberHashMap
androidx.media.AudioAttributesImpl
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX
com.caij.puremusic.drive.model.SubPlayList$Companion
com.caij.puremusic.db.model.SongQueries$SongsByArtistIdWithLikeQuery$execute$1
com.caij.puremusic.fragments.folder.FoldersSettingFragment$onFileSelected$1$1
com.caij.puremusic.helper.menu.SongMenuHelper$handleMenuClick$1
io.ktor.client.plugins.HttpRequestTimeoutException
com.caij.puremusic.fragments.folder.manager.MusicFolderUtil$showSubsonicEditDialog$1$1
com.umeng.commonsdk.statistics.proto.a$b
com.umeng.analytics.Gender$1
com.tencent.mm.opensdk.modelbiz.WXPayInsurance
com.tencent.bugly.crashreport.crash.anr.TraceFileHelper$b
org.simpleframework.xml.core.TextList
com.alipay.tscenter.biz.rpc.report.general.model.DataReportResult
nl.adaptivity.xmlutil.serialization.structure.XmlAttributeMapDescriptor$keyDescriptor$2
com.caij.puremusic.util.ArtistUtil$sortedSongs$4
com.caij.puremusic.repository.SyncSongRepository$sortedSongs$6
org.jcodec.containers.mp4.boxes.TimeToSampleBox
org.jaudiotagger.tag.id3.framebody.FrameBodyTSOT
androidx.fragment.app.strictmode.SetRetainInstanceUsageViolation
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$1
org.simpleframework.xml.core.ElementMapLabel
io.ktor.utils.io.core.internal.MalformedUTF8InputException
androidx.media.AudioAttributesImplApi26Parcelizer
nl.adaptivity.xmlutil.serialization.structure.XmlMapDescriptor$valueDescriptor$2
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
com.caij.vip.CNVipManager$refreshInfo$1$3
com.thegrizzlylabs.sardineandroid.impl.BasicAuthenticator
org.simpleframework.xml.stream.OutputNode
org.jaudiotagger.logging.PlainTextTagDisplayFormatter
com.alipay.android.phone.mrpc.core.p
org.jaudiotagger.tag.id3.framebody.FrameBodyEQU2
com.caij.puremusic.drive.model.PlaylistResponse
com.alipay.android.phone.mrpc.core.a.b
org.jaudiotagger.audio.generic.AudioFileWriter
com.tencent.mm.opensdk.openapi.IWXAPI
com.alipay.android.phone.mrpc.core.r
com.caij.puremusic.service.MusicService
io.ktor.client.HttpClientKt$HttpClient$2
com.caij.puremusic.helper.UpdateHelper$checkUpdate$1
io.ktor.serialization.ContentConverterKt$deserialize$$inlined$map$1$2$1
org.jcodec.containers.mp4.boxes.Box$LeafBox
com.caij.puremusic.fragments.folder.manager.MusicFolderManagerFragment$onPartViewClick$1$1$1
com.caij.puremusic.database.ServerSongCoverDaoImp$insert$1
com.google.common.collect.MapMakerInternalMap$Strength
com.google.android.material.imageview.ShapeableImageView
com.caij.puremusic.drive.plex.PlexFactory$createFolder$1
org.simpleframework.xml.core.ElementUnionLabel
com.caij.puremusic.service.MediaHttp$getBaiduDriveRealDownUrl$1$newHeaders$2
com.google.android.exoplayer2.mediacodec.MediaCodecDecoderException
com.caij.puremusic.drive.model.PlayListItem
org.jaudiotagger.audio.exceptions.CannotReadException
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver
com.umeng.analytics.pro.u$a
org.simpleframework.xml.convert.RegistryBinder
org.simpleframework.xml.stream.CamelCaseBuilder
org.jaudiotagger.audio.SupportedFileFormat$13
kotlin.jvm.internal.PropertyReference0
com.thegrizzlylabs.sardineandroid.model.Principal
com.alipay.android.phone.mrpc.core.a.f
org.simpleframework.xml.transform.DateType
com.caij.puremusic.database.SongsDaoImp$insert$1
com.caij.puremusic.views.TopAppBarLayout$AppBarMode
org.jaudiotagger.utils.tree.DefaultTreeModel
org.jaudiotagger.audio.wav.WavSaveOptions
org.jaudiotagger.tag.datatype.Lyrics3Image
org.simpleframework.xml.stream.DocumentProvider
com.caij.puremusic.dialogs.DeleteSongsDialog
com.umeng.commonsdk.utils.b$1
com.google.android.gms.signin.internal.zaa
com.caij.puremusic.fragments.backup.BackupViewModel$restoreBackup$2
com.google.android.exoplayer2.drm.DefaultDrmSession$UnexpectedDrmSessionException
com.tencent.mm.opensdk.modelbiz.WXQRCodePay$Resp
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype
io.ktor.utils.io.ByteBufferChannel$writeSuspend$3
org.jcodec.containers.mp4.boxes.TrakBox
org.jcodec.containers.mp4.boxes.MediaBox
com.umeng.commonsdk.statistics.proto.Response$d
androidx.lifecycle.Lifecycling$1
org.jcodec.containers.mp4.boxes.ClearApertureBox
com.google.common.collect.ComparatorOrdering
org.repackage.com.vivo.identifier.IdentifierManager
org.jaudiotagger.audio.aiff.chunk.AiffChunkType
io.ktor.client.plugins.ServerResponseException
org.simpleframework.xml.transform.Transformer
android.support.v4.os.ResultReceiver
com.caij.puremusic.service.MusicService$handleChangeInternal$6
com.caij.puremusic.activities.MainActivity$handlePlaybackIntent$1$3$1
nl.adaptivity.xmlutil.serialization.structure.XmlListDescriptor$childDescriptor$2
kotlinx.serialization.internal.ClassValueCache$get$$inlined$getOrSet$1
com.umeng.analytics.pro.bo
org.simpleframework.xml.core.ElementParameter
androidx.appcompat.widget.ViewStubCompat
com.tencent.bugly.crashreport.biz.UserInfoBean
com.alipay.android.phone.mrpc.core.d
com.umeng.commonsdk.statistics.common.ReportPolicy$SmartPolicy
io.github.aakira.napier.atomic.AtomicMutableList$clear$1
com.caij.puremusic.drive.model.Type$$serializer
com.google.android.material.checkbox.MaterialCheckBox$SavedState
com.google.android.material.internal.StaticLayoutBuilderCompat$StaticLayoutBuilderCompatException
org.jaudiotagger.audio.dsf.FmtChunk
org.repackage.a.a.a.a.b
com.caij.puremusic.repository.SyncSongRepository$sortedSongs$1
com.google.android.material.bottomsheet.BottomSheetBehavior$SaveFlags
com.google.common.collect.RegularImmutableMap
com.tencent.mm.opensdk.modelbiz.WXChannelOpenEvent
com.caij.puremusic.drive.plex.PlexEngine$getAlbumlists$1
com.google.android.exoplayer2.audio.AudioSink$InitializationException
com.google.common.util.concurrent.AbstractFuture$Failure$1
com.caij.puremusic.fragments.folder.manager.MusicFolderUtil$showSubsonicEditDialog$1$1$1
com.umeng.commonsdk.internal.crash.UMCrashManager
kotlinx.coroutines.internal.LockFreeLinkedListNode$toString$1
com.umeng.commonsdk.statistics.proto.a$1
org.jaudiotagger.tag.datatype.EventTimingCodeList
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$nullResult$1
com.thegrizzlylabs.sardineandroid.model.Location
nl.adaptivity.xmlutil.serialization.structure.XmlOrderNodeKt$fullFlatten$1
com.caij.puremusic.drive.dropbox.DropboxDriveEngine$getChild$1
com.heinrichreimersoftware.materialintro.view.FadeableViewPager
com.caij.puremusic.network.model.TokenStore
com.tencent.bugly.proguard.ba
com.caij.puremusic.fragments.folder.FoldersFragment$onFileMenuClicked$1$2$1
org.json.alipay.b
com.umeng.commonsdk.internal.c$4
com.umeng.commonsdk.config.a
org.jaudiotagger.tag.asf.AsfTag$AsfFieldIterator
com.google.android.exoplayer2.metadata.id3.Id3Frame
com.caij.puremusic.db.model.SongEntityQueries$isSongExistsInPlaylist$1
org.jaudiotagger.tag.lyrics3.FieldFrameBodyINF
com.umeng.commonsdk.statistics.common.a
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$Builder
com.caij.puremusic.drive.model.ADriveFileResponse$Companion
com.tencent.mm.opensdk.modelbiz.WXChannelOpenProfile$Resp
com.google.android.material.search.SearchBar$SavedState
com.caij.puremusic.fragments.LibraryViewModel$shuffleSongs$1
com.thegrizzlylabs.sardineandroid.model.Exclusive
com.umeng.commonsdk.config.FieldManager$a
com.caij.puremusic.fragments.player.CoverLyricsFragment$updateLyrics$1
io.ktor.http.Url$encodedFragment$2
com.umeng.commonsdk.statistics.common.a$c
com.google.android.exoplayer2.drm.MediaDrmCallbackException
com.caij.puremusic.fragments.lyrics.ComnLyricsFragment$editNormalLyrics$1$2
com.tencent.mm.opensdk.modelbase.BaseResp
com.caij.puremusic.db.model.PlaybackSongQueries$insert$2
org.jaudiotagger.tag.mp4.field.Mp4TagRawBinaryField
com.caij.puremusic.db.model.HistoryEntityQueries
com.caij.puremusic.drive.model.User$Companion
com.tencent.mm.opensdk.modelbiz.ChooseCardFromWXCardPackage$Resp
com.thegrizzlylabs.sardineandroid.model.Propname
org.jaudiotagger.audio.flac.FlacTagWriter$1
com.caij.puremusic.MainModuleKt$dataModule$1
com.umeng.analytics.filter.c
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$getById$1
io.ktor.http.URLParserException
kotlinx.serialization.json.internal.JsonNamesMapKt$serializationNamesIndices$1
kotlinx.coroutines.channels.ClosedSendChannelException
com.alipay.android.app.IRemoteServiceCallback
com.umeng.commonsdk.framework.UMSenderStateNotify
com.caij.puremusic.helper.UpdateHelper$checkUpdate$1$1
com.caij.puremusic.service.MusicService$restoreState$2
org.simpleframework.xml.core.MethodContact
io.ktor.client.plugins.HttpTimeout$Plugin$install$1
com.caij.puremusic.db.model.PlayCountEntityQueries$update$2
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessWebview$Req
okio.ByteString
androidx.mediarouter.app.MediaRouteActionProvider
com.caij.puremusic.db.model.PlayCountEntityQueries$checkSongExistInPlayCount$2
com.tencent.mm.opensdk.constants.ConstantsAPI
com.google.android.gms.signin.internal.zak
com.caij.puremusic.service.MusicService$handleChangeInternal$2
com.caij.puremusic.drive.baidu.BaiduDriveEngine$getChild$1
org.jaudiotagger.tag.id3.framebody.FrameBodyWOAS
org.jcodec.containers.mp4.boxes.DataRefBox
org.jaudiotagger.tag.id3.framebody.FrameBodyUSLT
com.caij.puremusic.db.model.AlbumQueries$album$1
org.jaudiotagger.test.ExtractID3TagFromFile$MP3FileFilter
com.caij.puremusic.network.model.LastFmAlbum$Album
com.alipay.android.phone.mrpc.core.RpcException
com.caij.puremusic.dialogs.ImportPlaylistDialog$special$$inlined$sharedViewModel$default$2
com.caij.puremusic.db.model.ServerArtistCoverQueries$deleteById$1
com.umeng.analytics.process.UMProcessDBHelper$a
com.umeng.commonsdk.statistics.proto.a$c
com.google.android.exoplayer2.metadata.Metadata
com.caij.puremusic.dialogs.SongDetailDialog
org.simpleframework.xml.core.FieldDetail
com.tencent.bugly.crashreport.crash.anr.TraceFileHelper$a
com.umeng.commonsdk.internal.utils.j
nl.adaptivity.xmlutil.serialization.InputKind$Attribute
com.google.android.material.bottomsheet.BottomSheetDialogFragment
com.umeng.commonsdk.utils.FileLockUtil
com.umeng.analytics.b$a
org.simpleframework.xml.util.WeakCache$Segment
org.jaudiotagger.tag.id3.ID3v1TagField
com.caij.puremusic.fragments.settings.OtherSettingsFragment$special$$inlined$sharedViewModel$default$1
nl.adaptivity.xmlutil.serialization.structure.XmlInlineDescriptor$child$2
com.thegrizzlylabs.sardineandroid.report.SardineReport
org.koin.androidx.scope.ComponentActivityExtKt$registerScopeForLifecycle$1
org.jaudiotagger.tag.id3.framebody.FrameBodyTSST
com.caij.puremusic.db.model.SongQueries$SongsByArtistQuery
com.caij.puremusic.fragments.folder.DriveFilesFragment
com.caij.puremusic.fragments.player.peek.PeekPlayerFragment$updateSong$1$songInfo$1
com.caij.puremusic.db.model.SongQueries$getArtistSongCount$1
com.caij.puremusic.fragments.player.color.ColorPlaybackControlsFragment$updateSong$1$songInfo$1
com.umeng.commonsdk.statistics.common.ReportPolicy$LatentPolicy
com.caij.puremusic.service.MusicService$restoreQueuesAndPositionIfNecessary$2
org.simpleframework.xml.util.Entry
org.simpleframework.xml.core.Detail
com.caij.puremusic.fragments.other.UserInfoFragment$special$$inlined$sharedViewModel$default$1
com.caij.puremusic.fragments.folder.FoldersSettingFragment$onFileSelected$1$1$1$1
org.jaudiotagger.tag.id3.framebody.FrameBodyPCNT
org.jaudiotagger.tag.id3.framebody.FrameBodyWXXX
com.umeng.analytics.pro.br
app.cash.sqldelight.ExecutableQuery$executeAsOneOrNull$1
com.caij.puremusic.fragments.settings.OtherSettingsFragment
com.caij.puremusic.drive.model.PlayListSubsonicResponse$$serializer
com.google.android.exoplayer2.metadata.dvbsi.AppInfoTable
org.jaudiotagger.tag.id3.ID3v24Tag
org.jaudiotagger.tag.id3.framebody.FrameBodyMVNM
com.caij.puremusic.service.MediaHttp$getADriveRealDownUrl$1$newHeaders$1
org.jaudiotagger.audio.exceptions.UnableToModifyFileException
com.tencent.bugly.proguard.r
com.caij.puremusic.drive.emby.EmbyEngine$getFolderArtists$1
androidx.media.AudioAttributesCompat
okio.SegmentedByteString
com.caij.puremusic.activities.tageditor.SongTagEditorActivityV2$writeValuesToFiles$1
io.ktor.client.engine.okhttp.OkHttpEngine$Companion$okHttpClientPrototype$2
com.caij.puremusic.drive.model.User$$serializer
org.simpleframework.xml.core.Resolve
com.caij.puremusic.drive.model.AlbumSubsonicResponse$Companion
com.caij.puremusic.preferences.AlbumCoverStylePreference
com.caij.puremusic.db.model.SongQueries$SearchSongsByTitleQuery$execute$1
kotlinx.coroutines.internal.UndeliveredElementException
com.umeng.commonsdk.debug.D
com.google.common.reflect.Types$JavaVersion
com.caij.puremusic.preferences.DurationPreferenceDialog
com.umeng.commonsdk.stateless.d
com.caij.vip.CNVipManager$refreshInfo$1$1
org.jcodec.containers.mp4.boxes.NameBox
com.tencent.bugly.R
com.google.android.material.appbar.AppBarLayout$BaseBehavior
com.tencent.bugly.proguard.ap
org.jaudiotagger.tag.FieldDataInvalidException
org.jaudiotagger.tag.id3.framebody.FrameBodyWORS
nl.adaptivity.xmlutil.EventType$START_ELEMENT
com.caij.puremusic.MainModuleKt$viewModules$1$4
io.ktor.client.plugins.DefaultTransformKt$defaultTransformers$2$result$channel$1
com.caij.puremusic.drive.subsonic.SubsonicEngine$getPlaylistSongs$1
com.caij.puremusic.fragments.folder.FoldersFragment$onFileSelected$1$1$1$1
com.umeng.commonsdk.statistics.proto.Response$a
org.simpleframework.xml.core.Repeater
com.tencent.bugly.proguard.y
com.thegrizzlylabs.sardineandroid.model.Resourcetype
cn.lyric.getter.api.tools.EventTools
org.simpleframework.xml.core.ElementUnionParameter$Contact
com.tencent.bugly.proguard.ad
com.caij.puremusic.db.model.PlayCountEntityQueries$deleteById$2
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver
kotlin.time.DurationUnit
org.jcodec.containers.mp4.boxes.EsdsBox$Descriptor
com.umeng.commonsdk.utils.a$1
org.jcodec.containers.mp4.boxes.ChunkOffsets64Box
com.tencent.bugly.proguard.br
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessWebview$Resp
com.caij.puremusic.drive.model.SubsonicAlbum
org.jaudiotagger.tag.id3.framebody.FrameBodyCRM
com.caij.puremusic.preferences.BlacklistPreferenceDialog
com.alipay.sdk.app.PayTask
com.umeng.commonsdk.internal.utils.d$a
com.caij.vip.CNVipManager$refreshInfo$1$4
com.umeng.commonsdk.statistics.TagHelper
com.caij.puremusic.service.MusicService$toggleFavorite$1
io.ktor.client.plugins.DefaultResponseValidationKt$addDefaultResponseValidation$1$1
io.ktor.client.plugins.ResponseException
io.ktor.utils.io.ByteReadChannelJVMKt$copyToImpl$1
com.caij.puremusic.model.smartplaylist.ShuffleAllPlaylist
com.caij.puremusic.model.Playlist$Companion
com.caij.puremusic.model.Playlist
org.simpleframework.xml.core.ParameterFactory$ParameterBuilder
org.jaudiotagger.audio.SupportedFileFormat
com.thegrizzlylabs.sardineandroid.model.QuotaAvailableBytes
com.caij.puremusic.model.AlbumWithCount
com.caij.puremusic.db.model.SongQueries$songsByNameArtist$2
org.jcodec.containers.mp4.boxes.TrackHeaderBox
com.caij.puremusic.fragments.artists.ArtistDetailsFragment
org.jaudiotagger.audio.asf.data.EncryptionChunk
org.simpleframework.xml.stream.NodeStack
com.caij.puremusic.appwidgets.AppWidgetCircle$performUpdate$isFavorite$1
com.alipay.apmobilesecuritysdk.face.TMNTokenClient$InitResultListener
com.caij.puremusic.drive.plex.PlexEngine$getPlaylists$1
io.ktor.client.statement.HttpStatement$executeUnsafe$1
com.caij.puremusic.db.model.SongQueries$allSongs$2
org.simpleframework.xml.stream.StreamReader$1
org.jcodec.containers.mp4.boxes.SampleToChunkBox$SampleToChunkEntry
com.umeng.analytics.process.UMProcessDBHelper$ProcessToMainCallback
com.caij.puremusic.views.BreadCrumbLayout
com.alipay.android.phone.mrpc.core.ac
nl.adaptivity.xmlutil.core.KtXmlWriter$EscapeMode
org.simpleframework.xml.core.ElementMapUnionParameter$Contact
com.tencent.mm.opensdk.modelbiz.WXOpenCustomerServiceChat$Resp
org.jaudiotagger.tag.id3.framebody.ID3v22FrameBody
com.google.android.material.progressindicator.CircularProgressIndicator
com.caij.puremusic.db.model.SongQueries$SongsByInfoQuery
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$clear$1
org.simpleframework.xml.strategy.WriteState
com.tencent.bugly.proguard.v
com.caij.puremusic.db.model.ArtistQueries$artists$2
io.ktor.websocket.FrameType
com.google.android.material.bottomsheet.BottomSheetDragHandleView$2
com.google.android.material.search.SearchView$Behavior
com.caij.puremusic.fragments.folder.FoldersFragment$onMenuItemSelected$1$1
com.umeng.commonsdk.statistics.proto.Response
com.google.android.gms.internal.play_billing.zzba
com.umeng.commonsdk.statistics.proto.c
com.caij.puremusic.drive.model.Media$$serializer
com.caij.puremusic.service.MusicService$restoreQueuesAndPositionIfNecessary$2$1
com.umeng.commonsdk.statistics.c$1
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyPairs
com.thegrizzlylabs.sardineandroid.util.SardineUtil
com.google.android.exoplayer2.PlaybackException
com.umeng.analytics.pro.bc
io.ktor.client.network.sockets.SocketTimeoutException
com.afollestad.materialdialogs.internal.button.DialogActionButton$update$2
androidx.appcompat.widget.AlertDialogLayout
com.google.android.gms.common.internal.TelemetryData
com.caij.puremusic.db.model.SongQueries$FirstSongByAlbumIdQuery
com.umeng.commonsdk.statistics.internal.a$1
org.simpleframework.xml.transform.Transform
org.simpleframework.xml.core.ExtractorFactory$ElementListExtractor
com.alipay.tscenter.biz.rpc.report.general.DataReportService
io.ktor.http.CodecsKt$encodeURLParameter$1$1
com.umeng.commonsdk.statistics.proto.c$1
com.caij.puremusic.drive.model.SubsonicSearchListResponse
io.ktor.http.URLParserKt$parseQuery$1
kotlinx.coroutines.flow.AbstractFlow$collect$1
com.umeng.analytics.pro.bu
com.caij.puremusic.activities.PermissionActivity
com.caij.vip.Activation
code.name.monkey.appthemehelper.common.prefs.BorderCircleView
nl.adaptivity.xmlutil.EventType$TEXT
com.caij.puremusic.dialogs.CreatePlaylistDialog$special$$inlined$sharedViewModel$default$1
net.yslibrary.android.keyboardvisibilityevent.KeyboardVisibilityEvent$setEventListener$1
app.cash.sqldelight.driver.android.AndroidSqliteDriver$execute$2
com.caij.puremusic.fragments.folder.FoldersFragment$onFileMenuClicked$1$1$1
org.jaudiotagger.tag.datatype.Pair
com.caij.puremusic.model.AbsCustomPlaylist$special$$inlined$inject$default$2
com.yalantis.ucrop.UCropFragment
com.caij.puremusic.drive.AbsDriveEngine$runRefreshToken$1
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$Req
kotlin.Pair
com.bumptech.glide.manager.LifecycleLifecycle
org.jaudiotagger.logging.XMLTagDisplayFormatter
com.caij.puremusic.adapter.album.AlbumAdapter$onMultipleItemAction$1$1
org.jaudiotagger.tag.wav.WavInfoTag
androidx.appcompat.widget.ActionBarContextView
com.thegrizzlylabs.sardineandroid.model.SearchRequest
com.caij.puremusic.fragments.folder.manager.MusicFolderUtil$showPathEdit$3$1$3
com.thegrizzlylabs.sardineandroid.impl.handler.InputStreamResponseHandler
io.ktor.http.Url$encodedPath$2
org.jaudiotagger.audio.exceptions.NoWritePermissionsException
com.caij.puremusic.drive.onedrive.OneDriveEngine$getFiles$1
com.umeng.commonsdk.internal.utils.i
com.umeng.commonsdk.internal.utils.e
org.jaudiotagger.tag.id3.ID3v22FieldKey
com.caij.puremusic.db.model.SongQueries$songsDateLastDesc$1
com.caij.lib.lifemanager.ProcessProvider
kotlinx.serialization.internal.TripleSerializer$descriptor$1
org.jaudiotagger.audio.aiff.chunk.CopyrightChunk
com.google.android.material.bottomsheet.BottomSheetDialog$EdgeToEdgeCallback
com.caij.puremusic.db.model.SongQueries$songsByArtistIdWithLike$2
com.umeng.commonsdk.statistics.common.a$b
com.google.android.material.appbar.MaterialToolbar
com.caij.puremusic.fragments.playlists.PlaylistsFragment
com.caij.puremusic.util.HttpUtil$httpClient$1$2$1
kotlinx.serialization.internal.PairSerializer$descriptor$1
com.afollestad.materialdialogs.MaterialDialog$invalidateBackgroundColorAndRadius$backgroundColor$1
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdQuery$execute$1
com.caij.puremusic.db.model.ServerArtistCoverQueries$insert$2
com.caij.puremusic.fragments.artists.AbsArtistDetailsFragment$handleSortOrderMenuItem$1$1$1
com.caij.puremusic.fragments.LibraryViewModel$albums$1
com.caij.puremusic.fragments.about.AboutFragment$loadContributors$2
nl.adaptivity.xmlutil.serialization.DefaultXmlSerializationPolicy$elementNamespaceDecls$1
io.ktor.utils.io.pool.DefaultPool$Companion$Top$1
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$deleteById$1
org.simpleframework.xml.core.Model
com.caij.puremusic.fragments.player.fit.FitFragment
org.simpleframework.xml.core.Traverser
com.caij.puremusic.drive.model.SubsonicPlaylist
com.tencent.bugly.crashreport.crash.anr.TraceFileHelper
com.thegrizzlylabs.sardineandroid.model.All
org.simpleframework.xml.core.ElementException
com.caij.puremusic.db.model.ServerLyricsQueries$insert$1
androidx.fragment.app.SuperNotCalledException
com.caij.puremusic.repository.RealRepository$favoritePlaylistHome$1
nl.adaptivity.xmlutil.serialization.XmlSerializationPolicy$XmlEncodeDefault
com.caij.puremusic.db.model.SongEntityQueries$getPlaylistLastAddSong$1
org.jaudiotagger.audio.SupportedFileFormat$2
org.koin.core.error.NoBeanDefFoundException
org.jaudiotagger.tag.asf.AsfTagCoverField
com.thegrizzlylabs.sardineandroid.impl.handler.ResourcesResponseHandler
org.simpleframework.xml.core.MethodScanner$PartMap
com.caij.puremusic.service.MusicService$saveQueues$1
app.cash.sqldelight.driver.android.AndroidQuery$bindLong$1
com.umeng.umzid.a
org.simpleframework.xml.transform.LongTransform
androidx.preference.EditTextPreferenceDialogFragmentCompat
com.caij.puremusic.drive.google.GoogleDriveFactory$createFolder$1
org.simpleframework.xml.core.Composite$1
org.jaudiotagger.tag.id3.framebody.FrameBodyTRSN
com.caij.puremusic.db.model.Song$Adapter
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportStrategy
com.umeng.commonsdk.UMConfigure$3
com.google.android.material.bottomsheet.BottomSheetDialogFragment$1
org.jcodec.containers.mp4.boxes.CompositionOffsetsBox
org.simpleframework.xml.strategy.ReadGraph
com.caij.puremusic.fragments.about.AboutFragment
org.jaudiotagger.tag.id3.ID3v24FieldKey
androidx.appcompat.widget.FitWindowsFrameLayout
com.caij.vip.ActivationResponse
org.simpleframework.xml.Path
androidx.fragment.app.strictmode.SetUserVisibleHintViolation
org.simpleframework.xml.transform.AtomicLongTransform
com.caij.puremusic.db.model.SongEntityQueries$deleteSongFromPlaylist$2
org.jaudiotagger.audio.dsf.DsfFileReader
com.caij.puremusic.activities.base.AbsMusicServiceActivity$onPlayingMetaChanged$1
androidx.preference.PreferenceGroup$SavedState
org.simpleframework.xml.core.Entry
kotlinx.serialization.json.internal.JsonElementMarker$origin$1
com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment
com.tencent.mm.opensdk.diffdev.a.b
org.jaudiotagger.tag.reference.Languages
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver
org.simpleframework.xml.core.PathParser$PathSection
com.umeng.analytics.pro.h
org.jaudiotagger.tag.datatype.PairedTextEncodedStringNullTerminated
com.umeng.analytics.pro.ad
io.ktor.client.engine.okhttp.OkHttpConfig$config$2
com.umeng.commonsdk.framework.a$a
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand
com.caij.puremusic.drive.util.Auth20Util$getTokenJsonRequest$1
com.caij.puremusic.drive.model.PlaylistsMediaContainer$$serializer
com.thegrizzlylabs.sardineandroid.DavAce$1
com.thegrizzlylabs.sardineandroid.model.Source
com.caij.puremusic.drive.model.OneDriveFileResponse$Companion
com.alipay.apmobilesecuritysdk.e.a
com.google.android.gms.common.api.Scope
io.ktor.util.pipeline.DebugPipelineContext$proceedLoop$1
org.jaudiotagger.tag.id3.framebody.FrameBodyTCOP
com.tencent.mm.opensdk.modelmsg.WXMiniProgramObject
org.jaudiotagger.tag.id3.ID3v22PreferredFrameOrderComparator
com.caij.puremusic.fragments.artists.AbsArtistDetailsFragment$handleSortOrderMenuItem$1
com.caij.puremusic.fragments.albums.AlbumDetailsViewModel$getMoreAlbums$1
com.caij.puremusic.db.model.SongQueries$getSongBySource$1
com.caij.puremusic.activities.MainActivity$showFolderHint$1$musicSourceFolder$1
org.jaudiotagger.tag.id3.ID3Unsynchronization
com.google.android.exoplayer2.metadata.id3.TextInformationFrame
org.simpleframework.xml.stream.OutputStack
org.simpleframework.xml.Version
io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$1
com.caij.puremusic.drive.model.AlbumMediaContainer$$serializer
androidx.constraintlayout.widget.Barrier
com.caij.puremusic.fragments.genres.GenreDetailsViewModel$loadGenreSongs$1
org.simpleframework.xml.Namespace
com.caij.puremusic.drive.model.MediaContainer
androidx.window.layout.SafeWindowLayoutComponentProvider$isWindowLayoutProviderValid$1
com.caij.puremusic.fragments.LibraryViewModel$renameRoomPlaylist$1
org.jaudiotagger.audio.asf.io.WriteableChunkModifer
kotlin.sequences.SequencesKt__SequencesKt$flatten$1
com.caij.puremusic.db.model.PlaylistEntityQueries$playlists$2
org.simpleframework.xml.core.GroupExtractor$Registry
org.jaudiotagger.tag.datatype.StringNullTerminated
com.umeng.commonsdk.listener.OnGetOaidListener
org.jcodec.containers.mp4.boxes.CleanApertureExtension
com.umeng.umzid.R
com.caij.puremusic.drive.emby.EmbyEngine$getMediaInfo$1
io.ktor.client.call.NoTransformationFoundException$message$1
com.caij.puremusic.db.model.FolderQueries$selectAll$2
com.caij.puremusic.drive.model.AlbumMediaContainer$Companion
org.simpleframework.xml.ElementListUnion
org.simpleframework.xml.core.AttributeException
org.koin.android.ext.koin.KoinExtKt$androidContext$2$1
com.bumptech.glide.load.engine.DecodeJob$RunReason
org.jaudiotagger.utils.IntArrayList
org.jaudiotagger.tag.datatype.HashMapInterface
com.caij.puremusic.fragments.player.tiny.TinyPlayerFragment$updateSong$1
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1
org.jaudiotagger.tag.id3.framebody.FrameBodyTORY
com.caij.puremusic.db.model.PlaylistEntityQueries$renamePlaylist$1
com.umeng.commonsdk.internal.utils.ApplicationLayerUtilAgent
org.jaudiotagger.audio.generic.AudioFileModificationAdapter
com.tencent.bugly.proguard.bn
com.tencent.bugly.proguard.ay
com.thegrizzlylabs.sardineandroid.impl.handler.ValidatingResponseHandler
com.caij.puremusic.drive.model.AMetadata
com.tencent.mm.opensdk.modelbiz.WXNontaxPay$Resp
com.caij.puremusic.fragments.GridStyle
com.caij.puremusic.fragments.other.UserInfoFragment$startForBannerImageResult$1$1
com.umeng.commonsdk.statistics.proto.c$e
kotlin.jvm.internal.PropertyReference0Impl
com.umeng.commonsdk.statistics.a
org.jaudiotagger.audio.asf.io.WriteableChunk
com.tencent.mm.opensdk.diffdev.a.b$a
com.tencent.mm.opensdk.modelbiz.WXLaunchWxaRedirectingPage$Req
org.jaudiotagger.audio.exceptions.UnableToCreateFileException
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
com.afollestad.materialdialogs.color.view.ObservableEditText
com.tencent.mm.opensdk.modelbiz.WXNontaxPay
org.jaudiotagger.audio.generic.AudioFileWriter2
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyTextInfo
com.caij.puremusic.fragments.playlists.PlaylistsFragment$loadData$1$1
org.jaudiotagger.tag.id3.AbstractID3v2Frame$StatusFlags
com.caij.puremusic.drive.model.EmbyAlbumsResponse
org.simpleframework.xml.core.Policy
org.simpleframework.xml.stream.Position
com.thegrizzlylabs.sardineandroid.model.Authenticated
com.alipay.sdk.app.H5PayActivity
com.caij.puremusic.fragments.folder.manager.MusicFolderUtil$auth20Launcher$1$1$2
com.caij.puremusic.fragments.artists.AbsArtistDetailsFragment$handleSortOrderMenuItem$1$1
com.caij.puremusic.db.model.SongEntityQueries$songsFromPlaylist$2
com.caij.puremusic.model.AbsCustomPlaylist
org.simpleframework.xml.core.PathParser
org.simpleframework.xml.core.SessionManager
com.alipay.apmobilesecuritysdk.e.e
com.tencent.mm.opensdk.modelbiz.OpenRankList
com.caij.puremusic.service.MediaSessionCallback$onPrepare$1
com.google.android.gms.common.api.internal.zzd
com.caij.puremusic.fragments.player.card.CardPlaybackControlsFragment$updateSong$1$songInfo$1
io.ktor.utils.io.ExceptionUtilsJvmKt$createConstructor$$inlined$safeCtor$3
com.bumptech.glide.load.EncodeStrategy
kotlin.jvm.internal.FunctionReferenceImpl
com.google.common.reflect.Types$JavaVersion$2
com.caij.puremusic.fragments.folder.FoldersFragment$onFileMenuClicked$1$1
com.caij.puremusic.drive.model.PlexUser
com.google.android.gms.common.internal.GetServiceRequest
com.jetradarmobile.snowfall.SnowfallView
com.thegrizzlylabs.sardineandroid.model.Allprop
com.tencent.mm.opensdk.modelmsg.ShowMessageFromWX$Resp
org.jaudiotagger.tag.id3.framebody.FrameBodyTOLY
com.caij.puremusic.util.ArtistUtil$sortArtists$1
com.caij.puremusic.App$onCreate$1
com.umeng.commonsdk.stateless.c
com.caij.puremusic.db.model.ServerAudioFormatQueries$getById$1
org.jaudiotagger.tag.mp4.Mp4TagFieldSubType
com.alipay.sdk.app.H5PayCallback
org.jaudiotagger.tag.mp4.Mp4Tag
com.umeng.analytics.pro.f$1
com.caij.puremusic.drive.model.AlbumListResponse$Companion
org.simpleframework.xml.core.ElementUnionParameter
com.umeng.analytics.pro.r$a
com.google.android.gms.common.Feature
com.caij.puremusic.views.BaselineGridTextView
com.caij.puremusic.drive.model.ImageTags$$serializer
org.simpleframework.xml.stream.PullReader$End
org.jcodec.containers.mp4.IBoxFactory
com.google.common.reflect.TypeToken$TypeFilter$2
com.umeng.analytics.pro.n
org.simpleframework.xml.stream.EventToken
io.ktor.utils.io.ClosedWriteChannelException
com.afollestad.materialdialogs.internal.button.DialogActionButton
com.umeng.commonsdk.statistics.idtracking.e
com.caij.puremusic.drive.plex.PlexEngine$getMediaInfo$1
com.umeng.analytics.pro.o$c
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportRealtime
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportDaily
org.jaudiotagger.tag.id3.valuepair.MusicianCredits
com.umeng.umzid.R$string
com.caij.puremusic.fragments.artists.ArtistsFragment
androidx.appcompat.widget.ActionBarOverlayLayout
org.jcodec.containers.mp4.boxes.MovieExtendsHeaderBox
com.caij.puremusic.fragments.albums.AlbumsFragment$loadData$1
javax.xml.stream.FactoryConfigurationError
com.caij.puremusic.db.model.SongEntityQueries$SongsFromPlaylistQuery
org.jaudiotagger.tag.id3.framebody.FrameBodyTOPE
com.caij.puremusic.fragments.player.color.ColorPlaybackControlsFragment$updateSong$1
nl.adaptivity.xmlutil.serialization.structure.XmlMapDescriptor$entryName$2
com.caij.puremusic.fragments.folder.manager.MusicFolderUtil$showWebDAVEditDialog$3$1$2
com.caij.puremusic.drive.model.AlbumList$$serializer
androidx.fragment.app.strictmode.GetTargetFragmentUsageViolation
com.caij.puremusic.model.ArtistWrapper
com.caij.puremusic.dialogs.DeleteSongsDialog$deleteSongs2$1$1
org.simpleframework.xml.core.CacheLabel
com.caij.puremusic.activities.SupportDevelopmentActivity
com.caij.puremusic.db.model.SongEntityQueries$CheckSongPlaylistExistsQuery
com.caij.puremusic.drive.model.Resourcetype$Companion
com.tencent.bugly.proguard.e
com.caij.puremusic.service.MusicService$onMediaMetadata$1
com.alipay.android.phone.mrpc.core.y
com.umeng.analytics.pro.e$b
com.umeng.analytics.pro.bg
com.caij.puremusic.db.model.SongEntityQueries
com.caij.puremusic.model.AudioTagInfo
org.jcodec.containers.mp4.boxes.MovieBox
com.caij.puremusic.fragments.player.simple.SimplePlaybackControlsFragment$updateSong$1$songInfo$1
com.caij.puremusic.drive.model.PlaylistsMediaContainer
com.umeng.analytics.pro.bz
com.tencent.mm.opensdk.modelmsg.GetMessageFromWX$Req
org.simpleframework.xml.stream.DocumentReader$End
com.caij.puremusic.fragments.player.classic.ClassicPlayerFragment
com.tencent.bugly.proguard.bt
kotlin.text.StringsKt__IndentKt$getIndentFunction$1
com.alipay.android.phone.mrpc.core.m
com.caij.puremusic.util.ArtistUtil$sortedSongs$5
kotlinx.serialization.modules.SerializerAlreadyRegisteredException
com.thegrizzlylabs.sardineandroid.impl.handler.MultiStatusResponseHandler
org.jaudiotagger.tag.id3.ID3TextEncodingConversion
org.jcodec.containers.mp4.boxes.LoadSettingsBox
androidx.fragment.app.strictmode.TargetFragmentUsageViolation
com.caij.puremusic.fragments.folder.manager.MusicFolderUtil$auth20Launcher$1$1$1
com.umeng.analytics.pro.al
com.thegrizzlylabs.sardineandroid.model.SupportedReportSet
com.umeng.analytics.pro.i$1
com.caij.puremusic.activities.tageditor.SongTagEditorActivityV2$fillViewsWithFileTags$1
org.jaudiotagger.audio.opus.OpusHeader
com.google.android.material.sidesheet.SideSheetBehavior$SavedState
org.jaudiotagger.tag.id3.framebody.FrameBodyTPE4
com.tencent.mm.opensdk.modelmsg.WXImageObject
com.umeng.analytics.process.DBFileTraversalUtil$1
com.caij.puremusic.fragments.player.full.FullPlaybackControlsFragment$updateSong$1$songInfo$1
org.jaudiotagger.tag.id3.framebody.FrameBodyTDTG
org.jaudiotagger.audio.aiff.AiffTagFieldKey
nl.adaptivity.xmlutil.core.impl.PlatformXmlWriterBase$indentString$1
androidx.viewpager.widget.ViewPager
org.jaudiotagger.audio.aiff.chunk.AiffChunkSummary
com.caij.puremusic.drive.plex.PlexEngine$readFolderMedias$1
org.simpleframework.xml.core.ObjectFactory
org.jcodec.containers.mp4.boxes.MetaValue
androidx.fragment.app.BackStackRecordState
kotlinx.serialization.json.JsonElementSerializer$descriptor$1$1
com.umeng.commonsdk.statistics.proto.a
org.jaudiotagger.audio.wav.WavRIFFHeader
com.caij.puremusic.fragments.artists.AbsArtistDetailsFragment$selectImageLauncher$1$1$1
com.alipay.android.phone.mrpc.core.u
com.caij.puremusic.drive.model.PlexArtistsResponse$$serializer
com.caij.puremusic.drive.model.OneDriveFile$$serializer
com.umeng.commonsdk.stateless.d$6
org.jaudiotagger.audio.asf.io.StreamBitratePropertiesReader
nl.adaptivity.xmlutil.QNameSerializer$descriptor$1
com.caij.puremusic.network.model.LastFmAlbum$Album$Image
com.google.android.gms.common.api.UnsupportedApiCallException
com.tencent.mm.opensdk.modelmsg.SendTdiAuth$Resp
kotlinx.serialization.json.JsonElementSerializer$descriptor$1$3
androidx.recyclerview.widget.StaggeredGridLayoutManager
nl.adaptivity.xmlutil.SimpleNamespaceContext$special$$inlined$flatten$2
org.jaudiotagger.tag.lyrics3.FieldFrameBodyIMG
com.caij.puremusic.fragments.artists.ArtistDetailsFragment$detailsViewModel$2
org.jcodec.containers.mp4.boxes.TimeToSampleBox$TimeToSampleEntry
org.jaudiotagger.tag.id3.ID3Compression
io.ktor.utils.io.ExceptionUtilsJvmKt$createConstructor$$inlined$safeCtor$1
org.jaudiotagger.audio.mp4.ReplaceMP4Editor
com.tencent.mm.opensdk.diffdev.OAuthErrCode
com.caij.puremusic.helper.menu.SongsMenuHelper$handleMenuClick$1
com.google.android.material.sidesheet.SideSheetBehavior
com.caij.puremusic.helper.BackupHelper$zipAll$2$2$1
com.google.android.material.stateful.ExtendableSavedState
androidx.media.AudioAttributesImplApi21Parcelizer
com.caij.puremusic.fragments.player.full.FullPlaybackControlsFragment$special$$inlined$sharedViewModel$default$1
org.jaudiotagger.tag.id3.TyerTdatAggregatedFrame
com.caij.puremusic.fragments.player.simple.SimplePlaybackControlsFragment$updateSong$1
com.umeng.analytics.process.UMProcessDBHelper
com.caij.puremusic.db.model.ArtistQueries$insert$2
org.simpleframework.xml.convert.Reference
kotlin.io.AccessDeniedException
com.tencent.mm.opensdk.modelbiz.WXChannelOpenFeed$Resp
org.jaudiotagger.tag.id3.valuepair.ID3V2ExtendedGenreTypes
org.jaudiotagger.tag.id3.framebody.FrameBodyTSO2
com.caij.puremusic.drive.webdav.WebDAVDriveEngine$getWebDAVFiles$1
com.caij.puremusic.dialogs.BlacklistFolderChooserDialog
com.caij.puremusic.db.model.ServerArtistCoverQueries$getById$1
com.tencent.mm.opensdk.modelmsg.WXStateJumpUrlInfo
com.caij.puremusic.drive.adrive.ADriveEngine$getChild$1
com.alipay.sdk.m.u.g
org.jaudiotagger.audio.iff.IffHeaderChunk
org.jaudiotagger.audio.ogg.util.OggPageHeader$PacketStartAndLength
com.google.android.exoplayer2.metadata.mp4.SmtaMetadataEntry
com.caij.puremusic.service.MusicService$handleChangeInternal$5
com.tencent.bugly.proguard.ax
com.umeng.analytics.a
com.afollestad.materialdialogs.input.DialogInputExtKt$input$2
org.simpleframework.xml.core.MethodException
org.jaudiotagger.tag.flac.FlacTag$1
io.ktor.utils.io.jvm.javaio.BlockingAdapter$disposable$1
com.caij.puremusic.drive.adrive.ADriveDriveFactory$createFolder$1
com.umeng.analytics.pro.e$b$b
com.caij.puremusic.fragments.albums.AlbumDetailsFragment$setSaveSortOrder$1
com.caij.puremusic.drive.model.MediaInfoWrapper
com.caij.puremusic.fragments.folder.manager.MusicFolderUtil$showPathEdit$3$1
com.caij.puremusic.drive.model.Response$$serializer
com.umeng.commonsdk.internal.c
com.google.android.gms.internal.play_billing.zzaf
com.tencent.mm.opensdk.modelmsg.WXTextObject
com.google.common.reflect.TypeToken$TypeFilter$1
com.caij.puremusic.drive.model.SubsonicSong$Companion
org.simpleframework.xml.core.CompositeList
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportAtLaunch
com.caij.puremusic.drive.adrive.ADriveEngine$getRootFileId$1
org.simpleframework.xml.strategy.ArrayValue
io.ktor.client.network.sockets.ConnectTimeoutException
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType
com.caij.puremusic.db.model.PlaybackSongQueries$GetPlaybacksByTypeQuery
com.google.gson.LongSerializationPolicy
com.tencent.mm.opensdk.utils.Log
io.ktor.http.HttpHeaderValueParserKt$parseHeaderValue$items$1
nl.adaptivity.xmlutil.serialization.XmlConfig$Companion$DEFAULT_NONRECOVERABLE_CHILD_HANDLER$1
io.ktor.client.engine.okhttp.OkHttpEngineKt$convertToOkHttpBody$2
com.google.android.exoplayer2.source.ClippingMediaSource$IllegalClippingException
com.tencent.mm.opensdk.modelbase.BaseResp$ErrCode
com.caij.puremusic.preferences.NowPlayingScreenPreferenceDialog
com.caij.puremusic.fragments.genres.GenresFragment
com.tencent.bugly.proguard.bq
org.simpleframework.xml.stream.NodeBuilder
nl.adaptivity.xmlutil.serialization.NodeSerializer$ed$1$1
com.caij.puremusic.drive.plex.PlexEngine$getPlaylistSongs$1
android.support.v4.media.session.ParcelableVolumeInfo
com.umeng.analytics.Gender$2
kotlin.sequences.SequencesKt___SequencesKt$flatMap$1
com.caij.puremusic.fragments.folder.manager.MusicFolderManagerFragment$onViewCreated$1
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags
org.simpleframework.xml.convert.Registry
com.caij.puremusic.model.smartplaylist.PlaylistIdGenerator
org.jaudiotagger.tag.mp4.Mp4RatingValue
com.caij.puremusic.fragments.player.adaptive.AdaptiveFragment
com.umeng.commonsdk.service.UMGlobalContext$a
com.umeng.commonsdk.statistics.idtracking.ImprintHandler$a
org.simpleframework.xml.transform.DateType$DateFormat
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$insert$1
androidx.core.widget.NestedScrollView
org.simpleframework.xml.core.ContactMap
com.google.android.material.datepicker.Month
com.alipay.sdk.app.PayResultActivity
org.jaudiotagger.audio.wav.WavTagWriter$BothTagsFileStructure
org.jaudiotagger.tag.images.AndroidImageHandler
org.jaudiotagger.FileConstants
com.tencent.bugly.CrashModule
io.ktor.client.HttpClient$3$1
org.jcodec.containers.mp4.boxes.HandlerBox
kotlinx.serialization.modules.SerializersModuleCollector$contextual$1
com.caij.puremusic.db.model.SongQueries$songsByNameArtist$1
com.google.common.collect.ImmutableList$SubList
com.caij.puremusic.appshortcuts.AppShortcutLauncherActivity
org.jaudiotagger.tag.id3.framebody.ID3v23FrameBody
androidx.fragment.app.strictmode.RetainInstanceUsageViolation
org.simpleframework.xml.stream.Node
org.jaudiotagger.audio.mp3.MPEGFrameHeader
com.google.gson.FieldNamingPolicy$6
org.jaudiotagger.audio.aiff.chunk.ID3Chunk
com.google.android.datatransport.Priority
com.umeng.commonsdk.internal.utils.b
com.alipay.apmobilesecuritysdk.d.b
org.jcodec.containers.mp4.boxes.PartialSyncSamplesBox
com.umeng.commonsdk.statistics.common.c
com.caij.puremusic.drive.model.EmbyFoldersResponse
com.caij.puremusic.drive.model.Location$Companion
nl.adaptivity.xmlutil.serialization.structure.XmlRootDescriptor$element$2
org.jaudiotagger.tag.images.Images
nl.adaptivity.xmlutil.serialization.XML$QNamePresentException
kotlinx.serialization.SerializersCacheKt$SERIALIZERS_CACHE_NULLABLE$1
org.jaudiotagger.tag.mp4.field.Mp4DiscNoField
com.caij.puremusic.db.model.HistoryEntityQueries$getById$2
org.simpleframework.xml.core.ParameterContact
nl.adaptivity.xmlutil.serialization.XML$Companion$defaultInstance$1
org.jaudiotagger.audio.wav.WavTagWriter$InfoFieldWriterOrderComparator
nl.adaptivity.xmlutil.serialization.structure.XmlAttributeMapDescriptor$valueDescriptor$2
org.jaudiotagger.audio.asf.data.ContentDescription
org.jaudiotagger.tag.id3.ID3v2ChapterFrames
com.caij.puremusic.fragments.player.gradient.GradientPlayerFragment$updateIsFavoriteIcon$1$1
com.umeng.analytics.pro.cb
androidx.coordinatorlayout.widget.CoordinatorLayout
com.tencent.bugly.proguard.bh
com.caij.puremusic.drive.model.PlayListsResponse$$serializer
com.caij.puremusic.activities.tageditor.AbsTagEditorActivity$onCreate$1$1
android.support.v4.media.AudioAttributesImplBaseParcelizer
nl.adaptivity.xmlutil.XmlStreaming$serviceLoader$2
io.ktor.client.plugins.DefaultTransformKt$defaultTransformers$2$result$channel$2$1
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame
com.google.android.material.appbar.AppBarLayout
com.tencent.bugly.crashreport.crash.jni.NativeExceptionHandler
org.jaudiotagger.tag.id3.framebody.FrameBodyUSER
com.tencent.mm.opensdk.modelbiz.WXLaunchWxaRedirectingPage$Resp
org.jcodec.containers.mp4.boxes.TimecodeMediaInfoBox
com.caij.puremusic.dialogs.BlacklistFolderChooserDialog$onCreateDialog$4
org.jcodec.containers.mp4.boxes.EsdsBox$SL
com.umeng.analytics.pro.bf$a
com.caij.puremusic.db.model.AlbumQueries$insert$2
androidx.emoji2.text.EmojiCompatInitializer$1
com.caij.puremusic.fragments.LibraryViewModel$observableHistorySongs$1
org.simpleframework.xml.core.ConversionInstance
org.repackage.com.vivo.identifier.DataBaseOperation
org.jaudiotagger.tag.datatype.AbstractString
kotlinx.coroutines.JobCancellationException
org.simpleframework.xml.core.ElementArrayParameter$Contact
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPadding
nl.adaptivity.xmlutil.EventType$DOCDECL
org.simpleframework.xml.transform.BooleanTransform
com.caij.puremusic.fragments.albums.AlbumDetailsFragment$setSaveSortOrder$1$1$songs$1
com.google.common.collect.AbstractIterator$State
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10$2
org.simpleframework.xml.transform.DateFactory
org.simpleframework.xml.stream.Formatter$Tag
com.caij.puremusic.dialogs.RemoveSongFromPlaylistDialog$onCreateDialog$$inlined$extraNotNull$default$1
com.umeng.analytics.pro.f$a
com.caij.puremusic.db.model.SongQueries$SongsByArtistIdWithLikeQuery
com.caij.puremusic.views.TopAppBarLayout
kotlinx.coroutines.CoroutineDispatcher$Key$1
com.caij.puremusic.fragments.folder.FoldersFragment$onFileMenuClicked$2$1$1
com.umeng.analytics.pro.bf$c
com.caij.puremusic.fragments.artists.AbsArtistDetailsFragment$handleSortOrderMenuItem$1$1$1$1
com.caij.puremusic.db.model.FolderQueries
org.jaudiotagger.audio.aiff.ExtDouble
com.caij.puremusic.fragments.backup.BackupFragment$showCreateBackupDialog$1$1$1
com.caij.puremusic.service.MediaSessionCallback$special$$inlined$inject$default$2
io.ktor.http.CodecsKt$encodeURLQueryComponent$1$1
org.jaudiotagger.tag.datatype.TCONString
com.alipay.android.app.IAlixPay$Stub
com.caij.puremusic.service.MusicService$isCurrentFavorite$1$1
com.caij.puremusic.activities.tageditor.TagWriter$Companion$writeTagsToFilesR$2
androidx.mediarouter.app.MediaRouteDiscoveryFragment
com.tencent.bugly.proguard.bp
kotlin.jvm.KotlinReflectionNotSupportedError
org.simpleframework.xml.strategy.ObjectValue
org.jaudiotagger.tag.id3.ID3v22Frames
com.caij.puremusic.appwidgets.AppWidgetClassic
StatusBarLyric.API.StatusBarLyric
com.caij.puremusic.util.CustomSongImageUtil$resetCustomSongImage$2
com.umeng.commonsdk.statistics.common.DeviceConfig
com.tencent.mm.opensdk.modelbiz.OpenBusiLuckyMoney$Req
com.caij.vip.AliPayPresent$refreshPayState$1
com.caij.puremusic.db.model.PlayCountEntityQueries$CheckSongExistInPlayCountQuery$execute$1
org.jaudiotagger.audio.asf.data.AsfExtendedHeader
com.caij.puremusic.fragments.settings.ThemeSettingsFragment
io.ktor.http.URLDecodeException
com.thegrizzlylabs.sardineandroid.model.Report
com.google.android.gms.auth.api.signin.SignInAccount
org.jaudiotagger.audio.asf.io.MetadataReader
androidx.annotation.Keep
com.caij.puremusic.drive.model.DropboxDriveFileResponse
com.alipay.sdk.app.H5AuthActivity
com.caij.puremusic.drive.model.BaiduDriveItem
com.caij.puremusic.service.MusicService$onSharedPreferenceChanged$1
org.jaudiotagger.audio.wav.WavFileReader$1
androidx.preference.TwoStatePreference$SavedState
com.umeng.commonsdk.internal.utils.e$a
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType
org.simpleframework.xml.core.SignatureBuilder$ParameterTable
org.simpleframework.xml.strategy.Allocate
com.bumptech.glide.load.DecodeFormat
com.caij.puremusic.helper.BackupHelper$zipAll$1
com.caij.puremusic.drive.model.PlayListsSubsonicResponse
com.google.android.material.navigation.NavigationBarPresenter$SavedState
org.jaudiotagger.tag.id3.ID3v1FieldKey
androidx.emoji2.text.EmojiCompatInitializer
com.caij.puremusic.db.model.SongEntityQueries$GetPlaylistLastAddSongQuery$execute$1
org.jaudiotagger.tag.id3.framebody.FrameBodyTOFN
com.alipay.android.phone.mrpc.core.w
com.umeng.commonsdk.utils.onMessageSendListener
com.thegrizzlylabs.sardineandroid.model.Self
com.caij.puremusic.fragments.genres.GenreDetailsFragment
io.ktor.utils.io.ByteChannelSequentialBase$awaitAtLeastNBytesAvailableForRead$2
com.google.android.material.textfield.TextInputLayout$SavedState
com.alipay.android.phone.mrpc.core.HttpException
org.simpleframework.xml.strategy.ReadState
com.caij.puremusic.drive.model.Multistatus$Companion
nl.adaptivity.xmlutil.core.XmlVersion
org.simpleframework.xml.core.ModelSection
com.caij.puremusic.fragments.base.AbsPlayerFragment$onMenuItemClick$2
com.tencent.bugly.proguard.bf
com.caij.puremusic.drive.model.Propstat
com.caij.puremusic.fragments.folder.DriveFilesFragment$onViewCreated$1$1
org.jaudiotagger.audio.aiff.chunk.TextChunk
com.caij.puremusic.MainModuleKt$roomModule$1$2
org.simpleframework.xml.core.PrimitiveList
com.google.common.base.Predicates$AndPredicate
com.caij.puremusic.fragments.player.cardblur.CardBlurPlaybackControlsFragment
com.caij.puremusic.fragments.settings.ThemeSettingsFragment$invalidateSettings$2$1$1
com.tencent.mm.opensdk.diffdev.DiffDevOAuthFactory
org.jaudiotagger.audio.asf.data.ContainerType
com.google.android.exoplayer2.audio.AudioSink$UnexpectedDiscontinuityException
com.google.android.datatransport.cct.CctBackendFactory
com.caij.puremusic.lyrics.SimpleLrcView
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState
kotlinx.serialization.internal.ObjectSerializer$descriptor$2$1
com.caij.puremusic.fragments.player.simple.SimplePlaybackControlsFragment
org.jaudiotagger.tag.id3.framebody.FrameBodyTALB
org.jcodec.containers.mp4.boxes.ProductionApertureBox
com.google.android.material.bottomsheet.BottomSheetDragHandleView$1
org.jaudiotagger.tag.KeyNotFoundException
com.caij.puremusic.drive.model.SubPlayList$$serializer
com.google.android.datatransport.cct.internal.QosTier
org.jaudiotagger.audio.exceptions.CannotReadVideoException
org.jaudiotagger.tag.options.PadNumberOption
com.caij.puremusic.db.model.ServerArtistCoverQueries$insert$1
com.google.common.base.Predicates$ObjectPredicate
com.caij.puremusic.fragments.LibraryViewModel$fetchContributors$1
com.tencent.mm.opensdk.modelbiz.WXChannelOpenEvent$Req
com.umeng.commonsdk.stateless.d$4
org.jaudiotagger.audio.ogg.OggVorbisTagReader$OggVorbisHeaderSizes
com.caij.puremusic.db.model.SongQueries$songsDateLastDesc$2
com.caij.puremusic.activities.MainActivity$showFolderHint$1
nl.adaptivity.xmlutil.serialization.XmlParsingException
com.thegrizzlylabs.sardineandroid.impl.handler.LockResponseHandler
retrofit2.KotlinExtensions$awaitResponse$$inlined$suspendCancellableCoroutine$lambda$1
io.ktor.utils.io.ByteBufferChannel$writeSuspend$1
com.bumptech.glide.Registry$NoResultEncoderAvailableException
com.caij.puremusic.service.MultiPlayer$setDataSource$1
org.repackage.com.meizu.flyme.openidsdk.ValueData
com.google.gson.FieldNamingPolicy$4
com.umeng.commonsdk.framework.a
com.caij.puremusic.fragments.playlists.PlaylistDetailsFragment$viewModel$2
com.umeng.commonsdk.utils.JSONArraySortUtil
com.caij.puremusic.db.model.ArtistQueries$artistByName$2
com.umeng.analytics.pro.bf$d
org.jcodec.containers.mp4.boxes.NodeBox
com.tencent.bugly.proguard.bo
org.jcodec.containers.mp4.boxes.ChunkOffsetsBox
com.caij.puremusic.fragments.backup.BackupFragment
androidx.appcompat.widget.ActionMenuPresenter$SavedState
com.caij.puremusic.drive.model.FMediaContainer$$serializer
com.caij.puremusic.drive.model.JellyfinLoginResponse$Companion
kotlinx.coroutines.flow.internal.AbortFlowException
org.jaudiotagger.tag.lyrics3.AbstractLyrics3
com.caij.puremusic.db.model.ServerArtistCoverQueries$deleteSongBySource$1
org.jaudiotagger.audio.SupportedFileFormat$10
org.jaudiotagger.tag.id3.ID3v23Frame$StatusFlags
com.google.android.gms.tasks.DuplicateTaskCompletionException
com.caij.puremusic.fragments.folder.manager.MusicFolderUtil$auth20Launcher$1$1$3
kotlinx.serialization.json.internal.JsonTreeReader$readDeepRecursive$1
org.jcodec.containers.mp4.TimecodeBoxes
org.jaudiotagger.audio.mp4.EncoderType
com.caij.puremusic.service.MusicService$playSongAt$1
com.caij.puremusic.drive.model.JellyfinFolder$$serializer
org.simpleframework.xml.core.ElementMapParameter
io.ktor.client.plugins.HttpRedirect$Plugin$install$1
com.caij.puremusic.MainModuleKt$roomModule$1$7
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies
org.simpleframework.xml.stream.InputNode
com.caij.puremusic.drive.onedrive.OneDriveEngine$getFolderFiles$1
com.tencent.mm.opensdk.modelmsg.WXWebpageObject
com.caij.puremusic.drive.model.SongItem
androidx.preference.DropDownPreference
org.jaudiotagger.tag.id3.framebody.FrameBodyLINK
nl.adaptivity.xmlutil.serialization.InputKind$Text
org.jaudiotagger.tag.lyrics3.Lyrics3v1
com.caij.puremusic.model.UpdateInfo$ForcedUpgradeInfo
com.google.android.gms.auth.api.signin.RevocationBoundService
org.jaudiotagger.tag.id3.framebody.FrameBodyMLLT
org.simpleframework.xml.core.PrimitiveArray
com.alipay.android.phone.mrpc.core.h
org.simpleframework.xml.transform.FloatTransform
org.simpleframework.xml.stream.InputStack
com.caij.puremusic.fragments.folder.FoldersFragment$onMultipleItemAction$1
com.caij.puremusic.drive.adrive.ADriveEngine$getChildInner$1
com.caij.puremusic.db.model.SongQueries$songsByAlum$2
com.google.android.material.timepicker.TimePickerView
com.tencent.bugly.proguard.as$5
com.bumptech.glide.Registry$NoImageHeaderParserException
com.umeng.analytics.pro.i$a
com.caij.puremusic.MainModuleKt$networkModule$1$2
kotlin.coroutines.CombinedContext
androidx.lifecycle.LiveData$LifecycleBoundObserver
kotlinx.serialization.internal.PluginGeneratedSerialDescriptor$typeParameterDescriptors$2
com.google.android.material.timepicker.TimeModel
com.caij.puremusic.drive.google.GoogleDriveEngine$getFolderFiles$1
com.caij.puremusic.drive.model.OneDriveItem$$serializer
com.caij.puremusic.fragments.player.md3.MD3PlaybackControlsFragment
okhttp3.Handshake$peerCertificates$2
com.caij.puremusic.drive.baidu.BaiduDriveFactory$createFolder$1
com.caij.puremusic.activities.MainActivity$handlePlaybackIntent$1
com.thegrizzlylabs.sardineandroid.model.Locktoken
org.jaudiotagger.audio.exceptions.InvalidAudioFrameException
com.tencent.mm.opensdk.modelbiz.WXOpenCustomerServiceChat
com.tencent.mm.opensdk.modelbiz.WXChannelShareVideo$Req
nl.adaptivity.xmlutil.serialization.XmlDecoderBase$AnonymousMapDecoder$decodeElementIndex$1
kotlin.io.TextStreamsKt$readLines$1
org.simpleframework.xml.util.WeakCache
com.alipay.android.phone.mrpc.core.a
org.simpleframework.xml.strategy.CycleException
com.tencent.bugly.proguard.ae
org.jaudiotagger.audio.mp4.Mp4FileReader
com.caij.puremusic.activities.DriveModeActivity
org.jaudiotagger.audio.flac.metadatablock.BlockType
com.caij.puremusic.fragments.genres.GenresFragment$onViewCreated$1$1
com.caij.puremusic.fragments.LibraryViewModel$fetchPlaylists$1
com.tencent.mm.opensdk.modelbiz.WXChannelStartLive$Req
kotlinx.coroutines.flow.internal.SafeCollector
org.simpleframework.xml.transform.DoubleTransform
com.caij.puremusic.db.model.SongQueries$delete$2
org.simpleframework.xml.core.Function
org.jaudiotagger.tag.mp4.Mp4TagField
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$BreadthFirstEnumeration$Queue$QNode
com.caij.puremusic.db.model.PlaylistEntityQueries$PlaylistByNameQuery
org.simpleframework.xml.core.AnnotationFactory
com.caij.puremusic.model.AbsCustomPlaylist$special$$inlined$inject$default$1
com.caij.vip.AliPayPrecreateResponse
org.jaudiotagger.tag.id3.framebody.FrameBodyTRDA
com.tencent.mm.opensdk.constants.Build
com.caij.puremusic.helper.BackupHelper$getPlaylistZipItems$1
org.simpleframework.xml.Serializer
nl.adaptivity.xmlutil.serialization.structure.XmlCompositeDescriptor$childReorderMap$2
android.support.v4.media.MediaBrowserCompat$MediaItem
org.jaudiotagger.tag.id3.framebody.FrameBodyTLAN
com.tencent.mm.opensdk.constants.ConstantsAPI$WXMiniProgram
kotlin.coroutines.CoroutineContext$plus$1
com.caij.puremusic.db.model.FolderQueries$SelectByIdQuery
io.ktor.utils.io.core.InsufficientSpaceException
com.google.android.exoplayer2.util.GlUtil$GlException
com.tencent.mm.opensdk.modelpay.PayReq$Options
com.caij.puremusic.drive.model.Media$Companion
com.thegrizzlylabs.sardineandroid.model.Unauthenticated
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataSeekTable
com.tencent.mm.opensdk.modelbiz.WXChannelOpenLive$Req
org.simpleframework.xml.stream.EventElement
org.jcodec.containers.mp4.boxes.ReverseDnsBox$RdnsMeanBox
com.umeng.analytics.pro.g$1
com.umeng.analytics.filter.EventList
com.caij.puremusic.db.model.ServerAudioFormatQueries$deleteById$1
com.caij.puremusic.activities.tageditor.AbsTagEditorActivity$writeToFiles$2$songPaths$1
com.umeng.analytics.pro.ab$1
com.caij.puremusic.fragments.lyrics.ComnLyricsFragment
com.caij.puremusic.service.MediaSessionCallback$special$$inlined$inject$default$4
androidx.mediarouter.app.MediaRouteControllerDialogFragment
com.tencent.mm.opensdk.modelmsg.ShowMessageFromWX$Req
io.ktor.client.plugins.contentnegotiation.ContentConverterException
androidx.slidingpanelayout.widget.FoldingFeatureObserver$registerLayoutStateChangeCallback$1$invokeSuspend$$inlined$mapNotNull$1$2$1
kotlin.sequences.SequencesKt___SequencesKt$flatMap$2
com.caij.puremusic.model.DeezerResponse
org.repackage.com.vivo.identifier.IdentifierIdClient$1
com.google.android.material.bottomsheet.BottomSheetDialog$5
com.google.android.gms.internal.play_billing.zzae
com.caij.puremusic.drive.model.PlexArtistsResponse
org.jaudiotagger.tag.datatype.TextEncodedStringNullTerminated
com.caij.puremusic.activities.tageditor.SongTagEditorActivityV2$fillViewsWithFileTags$1$1
com.alipay.tscenter.biz.rpc.vkeydfp.request.DeviceDataReportRequest
com.caij.puremusic.drive.model.FMediaContainer$Companion
com.caij.puremusic.network.model.LastFmTrack$Track$Artist
androidx.versionedparcelable.ParcelImpl
io.ktor.client.plugins.HttpPlainText$Plugin$install$1
com.umeng.commonsdk.statistics.proto.b
com.umeng.analytics.pro.e$a$a
io.ktor.serialization.kotlinx.KotlinxSerializationConverter$deserialize$1
com.caij.puremusic.util.CustomArtistImageUtil$resetCustomArtistImage$2
com.alipay.apmobilesecuritysdk.f.c
org.simpleframework.xml.core.ConstructorException
com.caij.puremusic.fragments.player.CoverLyricsFragment
io.ktor.utils.io.ExceptionUtilsJvmKt$createConstructor$$inlined$safeCtor$2
com.caij.puremusic.db.model.ServerSongCoverQueries$clear$1
com.caij.puremusic.db.model.HistoryEntityQueries$HistorySongsQuery$execute$1
com.caij.puremusic.fragments.artists.ArtistsFragment$onShuffleClicked$1
io.ktor.utils.io.ByteChannelSequentialBase$readAvailable$4
org.jcodec.containers.mp4.MP4Util$Atom
com.caij.puremusic.activities.tageditor.TagWriter$Companion$scan$1
com.umeng.umzid.ZIDManager$a
io.ktor.http.IllegalHeaderValueException
kotlinx.serialization.SerializationException
org.simpleframework.xml.core.ElementListUnionLabel
org.jaudiotagger.tag.id3.AbstractTag
org.simpleframework.xml.core.Source
nl.adaptivity.xmlutil.serialization.NodeSerializer$ed$1
org.simpleframework.xml.stream.Formatter
com.tencent.bugly.proguard.af
org.simpleframework.xml.stream.HyphenBuilder
okhttp3.internal.connection.RealConnection$connectTls$2
com.caij.puremusic.model.lyrics.AbsSynchronizedLyrics
org.jaudiotagger.tag.datatype.StringHashMap
com.caij.puremusic.fragments.LibraryViewModel$addToPlaylist$1$2
org.simpleframework.xml.transform.IntegerTransform
com.caij.puremusic.dialogs.SongDetailDialog$onCreateDialog$2$1
com.thegrizzlylabs.sardineandroid.DavResource$DavProperties
com.caij.puremusic.drive.model.PlexSectionsResponse
org.simpleframework.xml.stream.DocumentReader$Entry
com.caij.puremusic.fragments.LibraryViewModel$addSongServerSource$1
androidx.core.content.FileProvider
nl.adaptivity.xmlutil.serialization.XmlEncoderBase$ensureNamespace$newPrefix$1
org.jaudiotagger.tag.id3.framebody.FrameBodyRVA2
com.google.android.gms.signin.internal.zag
com.umeng.commonsdk.config.c
com.caij.puremusic.model.Home
org.jcodec.containers.mp4.boxes.UrlBox
com.caij.puremusic.service.MusicService$isCurrentFavorite$1
com.caij.puremusic.fragments.player.material.MaterialControlsFragment
com.tencent.mm.opensdk.modelmsg.WXAppLaunchData
com.caij.puremusic.fragments.home.HomeFragment$loadSections$1$1
com.caij.puremusic.db.model.FolderQueries$deleteById$1
com.caij.puremusic.model.CategoryInfo$Category
io.ktor.client.HttpClientConfig$install$1
org.simpleframework.xml.core.KeyBuilder
org.simpleframework.xml.Transient
io.ktor.utils.io.ByteBufferChannel$awaitFreeSpaceOrDelegate$1
com.umeng.commonsdk.statistics.common.ReportPolicy$DebugPolicy
com.caij.puremusic.fragments.albums.AlbumDetailsFragment$setSaveSortOrder$1$1$songs$3
org.jaudiotagger.audio.aiff.AiffAudioHeader$Endian
org.jaudiotagger.utils.tree.TreeModelEvent
org.jaudiotagger.audio.asf.io.ChunkHeaderReader
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo
com.caij.puremusic.service.MusicService$play$1
com.caij.puremusic.fragments.settings.ImageSettingFragment$resetImageCache$1
com.caij.puremusic.db.model.ServerArtistCoverQueries$deleteById$2
org.jaudiotagger.audio.asf.data.ContentBranding
org.jaudiotagger.audio.ogg.util.OggInfoReader
org.jaudiotagger.tag.id3.framebody.FrameBodyUFID
androidx.fragment.app.FragmentManager$6
com.caij.puremusic.drive.AbsDriveEngine$checkToken$1
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1
org.jcodec.containers.mp4.boxes.EsdsBox$DescriptorParser
org.simpleframework.xml.core.Section
org.jcodec.containers.mp4.boxes.MovieFragmentBox
org.jcodec.containers.mp4.boxes.ChannelBox$ChannelDescription
com.caij.puremusic.MainModuleKt$roomModule$1$6
com.alipay.android.phone.mrpc.core.b
org.jcodec.containers.mp4.boxes.KeysBox
com.caij.puremusic.network.model.LastFmArtist$Artist$Bio
com.caij.puremusic.db.model.AlbumQueries$album$2
com.caij.puremusic.db.model.SongQueries$songsByAlum$1
org.jcodec.containers.mp4.boxes.MovieExtendsBox
com.umeng.umzid.ZIDManager
androidx.fragment.app.strictmode.Violation
com.thegrizzlylabs.sardineandroid.model.Multistatus
com.caij.puremusic.MainModuleKt$mainModule$1
com.caij.puremusic.db.model.SearchAlbumResultQueries$insert$1
com.caij.puremusic.helper.SearchQueryHelper$special$$inlined$inject$default$1
com.caij.puremusic.fragments.about.AboutFragment$onViewCreated$1$1
org.jaudiotagger.tag.id3.framebody.FrameBodyTIPL
kotlinx.serialization.internal.PluginGeneratedSerialDescriptor$childSerializers$2
com.umeng.umzid.a$a
org.slf4j.helpers.MarkerIgnoringBase
com.caij.puremusic.fragments.player.card.CardPlaybackControlsFragment
org.simpleframework.xml.core.ElementMapParameter$Contact
io.ktor.utils.io.ByteBufferChannel$copyDirect$1
com.caij.puremusic.db.model.ArtistQueries$artists$1
org.repackage.com.zui.deviceidservice.IDeviceidInterface$Stub
com.umeng.analytics.pro.bt
com.google.android.gms.common.internal.MethodInvocation
com.caij.puremusic.fragments.base.AbsRecyclerViewCustomGridSizeFragment
com.umeng.analytics.filter.d
com.caij.puremusic.service.MusicService$restoreQueuesAndPositionIfNecessary$2$2
org.simpleframework.xml.transform.EnumTransform
com.tencent.bugly.proguard.ao
com.caij.puremusic.drive.model.SubPlayList
com.umeng.commonsdk.statistics.internal.StatTracer
com.alipay.apmobilesecuritysdk.c.b
com.caij.vip.AliPayPresent$loadDefaultPayType$1
org.jaudiotagger.tag.lyrics3.Lyrics3v2Fields
com.caij.puremusic.db.model.HistoryEntityQueries$GetByIdQuery$execute$1
com.alipay.apmobilesecuritysdk.otherid.UtdidWrapper
org.jaudiotagger.tag.datatype.BooleanString
android.support.v4.media.AudioAttributesImplApi26Parcelizer
com.caij.puremusic.drive.model.JellyfinLoginResponse
com.caij.puremusic.db.model.SongQueries$songsByInfo$1
com.caij.puremusic.helper.menu.PlaylistMenuHelper$handleMenuClick$1
com.thegrizzlylabs.sardineandroid.model.Owner
com.google.android.exoplayer2.drm.DrmInitData
com.google.android.exoplayer2.decoder.DecoderException
com.umeng.analytics.pro.aj
org.jcodec.containers.mp4.DataBoxes
org.jaudiotagger.audio.wav.chunk.WavChunkSummary
com.thegrizzlylabs.sardineandroid.DavAce
com.caij.puremusic.drive.model.PlexArtistsResponse$Companion
com.google.android.gms.internal.play_billing.zzx
org.simpleframework.xml.convert.Convert
io.ktor.client.plugins.SendCountExceedException
org.jcodec.containers.mp4.boxes.DataBox
org.jcodec.containers.mp4.boxes.MediaInfoBox
com.alipay.android.phone.mrpc.core.k
org.simpleframework.xml.core.NamespaceDecorator
com.caij.puremusic.db.model.ServerSongCoverQueries$deleteById$2
org.jaudiotagger.tag.datatype.AbstractStringStringValuePair
com.tencent.mm.opensdk.modelmsg.GetMessageFromWX
nl.adaptivity.xmlutil.EventType$ATTRIBUTE
com.caij.puremusic.db.model.ServerLyricsQueries$GetByIdQuery$execute$1
com.caij.puremusic.fragments.folder.manager.MusicFolderUtil$showWebDAVEditDialog$3$1
com.caij.puremusic.drive.model.PlexSongsResponse$Companion
org.jaudiotagger.utils.DirectByteBufferUtils
com.tencent.bugly.proguard.ak
kotlin.Result$Failure
me.tankery.lib.circularseekbar.CircularSeekBar
com.caij.puremusic.db.model.SongQueries$songsOrderDateAdd$2
com.caij.puremusic.drive.model.DropboxDriveFileResponse$Companion
com.bumptech.glide.GeneratedAppGlideModule
org.jaudiotagger.audio.ogg.util.OggPageHeader$HeaderTypeFlag
com.tencent.mm.opensdk.constants.ConstantsAPI$LaunchApplication
androidx.appcompat.widget.SwitchCompat
com.caij.puremusic.db.model.PlaybackSongQueries$getPlaybacksByType$2
com.google.android.exoplayer2.drm.UnsupportedDrmException
com.google.android.material.button.MaterialButtonToggleGroup
org.jaudiotagger.tag.id3.valuepair.ImageFormats
org.jaudiotagger.tag.lyrics3.AbstractLyrics3v2FieldFrameBody
org.simpleframework.xml.core.Persister
com.caij.puremusic.db.model.SearchAlbumResultQueries$deleteById$1
com.caij.vip.CNVipManager$refreshInfo$1$2
org.simpleframework.xml.core.MethodScanner
org.simpleframework.xml.strategy.Contract
org.repackage.com.zui.opendeviceidlibrary.BuildConfig
org.jaudiotagger.audio.dsf.ID3Chunk
org.jaudiotagger.audio.asf.data.GUID
org.jaudiotagger.tag.id3.framebody.FrameBodyAPIC
androidx.lifecycle.FullLifecycleObserverAdapter
kotlin.collections.builders.MapBuilder
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState
com.caij.puremusic.fragments.LibraryViewModel$addSongSource$1
org.jcodec.containers.mp4.boxes.CompositionOffsetsBox$Entry
com.caij.puremusic.drive.webdav.WebDAVDriveEngine$listFile$1
com.caij.puremusic.fragments.folder.FoldersSettingFragment$onFileMenuClicked$2$1$1
org.simpleframework.xml.stream.CamelCaseBuilder$Element
com.umeng.analytics.MobclickAgent$EScenarioType
kotlinx.serialization.json.JsonElementSerializer$descriptor$1$5
kotlinx.serialization.json.internal.JsonNamesMapKt$deserializationNamesMap$1
org.simpleframework.xml.core.CompositeMap
org.simpleframework.xml.core.TextListLabel
com.caij.puremusic.dialogs.RenamePlaylistDialog$special$$inlined$sharedViewModel$default$1
org.jaudiotagger.audio.ogg.OggVorbisTagWriter
com.tencent.mm.opensdk.modelbiz.WXChannelStartLive
com.umeng.commonsdk.statistics.proto.c$d
org.jaudiotagger.audio.asf.io.EncodingChunkReader
org.jaudiotagger.audio.mp4.ChunkWriter
androidx.core.graphics.drawable.IconCompatParcelizer
io.ktor.utils.io.CoroutinesKt$launchChannel$1
com.caij.puremusic.db.model.ServerAudioFormatQueries$deleteById$2
com.caij.puremusic.fragments.player.material.MaterialFragment
com.caij.puremusic.appshortcuts.AppShortcutLauncherActivity$onCreate$$inlined$extraNotNull$1
org.simpleframework.xml.core.AttributeParameter
com.caij.puremusic.activities.tageditor.SongTagEditorActivityV2$onCreate$1$1
com.caij.puremusic.drive.model.PlayLists
com.tencent.bugly.proguard.bi
com.caij.puremusic.db.model.FolderQueries$SelectByIdQuery$execute$1
com.tencent.mm.opensdk.modelbiz.WXChannelJumpMiniProgramInfo
androidx.lifecycle.LifecycleDestroyedException
com.thegrizzlylabs.sardineandroid.model.Error
org.koin.android.error.MissingAndroidContextException
org.jcodec.containers.mp4.boxes.UdtaBox
com.umeng.commonsdk.utils.FileLockCallback
com.umeng.commonsdk.statistics.idtracking.c
com.caij.puremusic.extensions.ViewExtensionsKt$drawNextToNavbar$1$1
io.ktor.client.plugins.ClientRequestException
com.caij.puremusic.fragments.folder.manager.MusicFolderManagerFragment$onPartViewClick$2
com.umeng.commonsdk.statistics.proto.Response$c
com.caij.puremusic.MainModuleKt$viewModules$1$1
org.repackage.com.zui.deviceidservice.IDeviceidInterface$Stub$Proxy
com.umeng.commonsdk.debug.W
com.umeng.commonsdk.framework.UMEnvelopeBuild
com.umeng.tunnel.UMChannelAgent
com.caij.puremusic.db.model.SongQueries$SongByPathQuery$execute$1
com.umeng.commonsdk.config.b$a
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag$1
com.caij.puremusic.db.model.SongQueries$searchSongsByTitle$2
org.simpleframework.xml.DefaultType
com.caij.puremusic.fragments.settings.NotificationSettingsFragment
com.tencent.bugly.proguard.g
com.thegrizzlylabs.sardineandroid.model.Bind
org.simpleframework.xml.core.InstanceFactory
org.simpleframework.xml.stream.InputElement
org.jaudiotagger.tag.id3.reference.ID3Rating$1
com.google.android.material.bottomsheet.BottomSheetDialog$4
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$IWXMusicVipObject
org.jaudiotagger.audio.flac.FlacTagReader
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$Resp
org.jcodec.containers.mp4.boxes.IListBox
org.jcodec.containers.mp4.boxes.ReverseDnsBox$RdnsNameBox
com.umeng.analytics.pro.e$d
nl.adaptivity.xmlutil.serialization.XmlEncoderBase$TagEncoder$encodeStringElement$1
org.jaudiotagger.utils.PrimitiveUtils
com.caij.puremusic.fragments.player.blur.BlurPlayerFragment
kotlin.LazyThreadSafetyMode
com.caij.puremusic.db.model.SongQueries$searchSongsByTitle$1
com.tencent.mm.opensdk.modelpay.PayResp
com.caij.puremusic.fragments.folder.manager.MusicFolderUtil$showJellyfinEditDialog$1$1$2
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
com.tencent.mm.opensdk.modelmsg.WXFileObject
org.jaudiotagger.audio.wav.chunk.WavListChunk
androidx.lifecycle.CoroutineLiveData$1
com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment
com.umeng.commonsdk.statistics.idtracking.i
com.caij.puremusic.activities.DriveModeActivity$toggleFavorite$1
com.google.gson.stream.MalformedJsonException
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader
com.caij.puremusic.drive.model.ADriveFileResponse
com.tencent.bugly.proguard.bm
org.simpleframework.xml.core.GetPart
com.caij.puremusic.db.model.ServerAudioFormatQueries$insert$1
org.simpleframework.xml.ElementUnion
org.jaudiotagger.tag.EmptyFrameException
com.tencent.mm.opensdk.modelmsg.SendTdiAuth
com.umeng.analytics.pro.aw$a
kotlinx.serialization.UnknownFieldException
okhttp3.internal.cache.DiskLruCache$Editor$newSink$1$1
io.ktor.utils.io.ByteChannelSequentialBase$writeFully$1
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$trySendBlocking$2
com.caij.puremusic.db.model.AlbumQueries$deleteAlbumById$2
com.google.android.gms.internal.play_billing.zzab
com.caij.puremusic.db.model.HistoryEntityQueries$historySongs$1
com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback
com.caij.puremusic.db.model.SongQueries$songsByInfo$2
com.caij.puremusic.activities.FolderManagerActivity
org.simpleframework.xml.stream.Splitter
com.umeng.commonsdk.statistics.b
com.umeng.commonsdk.statistics.internal.UMImprintPreProcessCallback
com.google.android.material.datepicker.DateSelector
io.github.aakira.napier.LogLevel
org.simpleframework.xml.core.CompositeInlineList
org.koin.core.scope.Scope$close$1
app.cash.sqldelight.driver.android.AndroidSqliteDriver$database$2
nl.adaptivity.xmlutil.serialization.OutputKind
com.google.android.exoplayer2.metadata.emsg.EventMessage
com.google.android.material.snackbar.Snackbar$SnackbarLayout
com.caij.puremusic.drive.model.ImageTags$Companion
com.alipay.apmobilesecuritysdk.e.b
com.umeng.analytics.pro.b$a$a
kotlinx.serialization.json.internal.WriteMode
io.ktor.utils.io.ByteChannelSequentialBase$awaitAtLeastNBytesAvailableForWrite$2
com.caij.puremusic.db.model.AlbumQueries$deleteAlbumById$1
org.simpleframework.xml.strategy.CycleStrategy
com.caij.puremusic.fragments.MusicSeekSkipTouchListener$onTouch$1$1
com.caij.puremusic.service.MediaSessionCallback$special$$inlined$inject$default$3
org.jaudiotagger.tag.id3.valuepair.SynchronisedLyricsContentType
com.caij.puremusic.fragments.base.AbsMainActivityFragment$special$$inlined$sharedViewModel$default$1
io.ktor.client.HttpClient$execute$1
com.google.android.exoplayer2.metadata.Metadata$Entry
org.jaudiotagger.audio.ogg.util.VorbisSetupHeader
com.google.android.exoplayer2.mediacodec.MediaCodecUtil$DecoderQueryException
com.caij.puremusic.fragments.folder.FoldersSettingFragment$onFileSelected$1$1$1$1$1
com.caij.puremusic.drive.model.DropboxDriveItem
com.caij.puremusic.db.model.SongEntityQueries$IsSongExistsInPlaylistQuery
io.ktor.client.plugins.contentnegotiation.ContentNegotiation$Plugin$install$2
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState
org.jaudiotagger.audio.mp3.MP3FileWriter
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$1
com.caij.puremusic.drive.onedrive.OneDriveFactory$createFolder$1
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag
com.umeng.analytics.pro.l$1
com.caij.puremusic.db.model.SongQueries$GetArtistSongCountQuery$execute$1
kotlinx.coroutines.CompletionHandlerException
com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment
androidx.appcompat.widget.AppCompatTextView
org.jaudiotagger.tag.mp4.field.Mp4TagCoverField
com.google.android.gms.internal.play_billing.zzu
org.simpleframework.xml.stream.OutputNodeMap
com.caij.puremusic.drive.jellyfin.JellyfinEngine$getPlaylistSongs$1
com.caij.puremusic.drive.model.OneDriveFile$Companion
com.caij.puremusic.drive.model.ADriveItem$$serializer
com.afollestad.viewpagerdots.DotsIndicator
com.caij.puremusic.fragments.player.blur.BlurPlaybackControlsFragment$updateSong$1$songInfo$1
org.simpleframework.xml.core.TemplateLabel
org.jaudiotagger.tag.vorbiscomment.VorbisCommentCreator
com.thegrizzlylabs.sardineandroid.model.Protected
com.caij.puremusic.drive.model.PlexPlaylistsResponse
androidx.lifecycle.SavedStateHandleSupport$savedStateHandlesVM$1$1
org.jaudiotagger.audio.mp4.RelocateMP4Editor
com.caij.puremusic.fragments.other.UserInfoFragment$pickNewPhoto$1
com.caij.puremusic.db.model.HistoryEntity
org.jaudiotagger.test.ExtractID3TagFromFile
org.simpleframework.xml.core.ContactList
com.caij.puremusic.drive.model.ParentReference$$serializer
org.jaudiotagger.audio.asf.io.FileHeaderReader
org.jaudiotagger.tag.asf.AbstractAsfTagImageField
com.caij.puremusic.fragments.songs.SongsFragment$loadData$1
com.umeng.commonsdk.statistics.common.DataHelper
io.ktor.client.engine.okhttp.OkHttpEngine$executeWebSocketRequest$1
androidx.core.os.OperationCanceledException
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding
com.caij.puremusic.fragments.NowPlayingScreen
com.caij.puremusic.fragments.lyrics.LyricsFragment
org.simpleframework.xml.stream.PullReader$Text
com.google.android.material.bottomsheet.BottomSheetDialog$1
org.simpleframework.xml.util.LimitedCache
com.umeng.commonsdk.config.d
com.caij.puremusic.fragments.folder.FoldersSettingFragment$onMultipleItemAction$1$1
org.koin.core.instance.SingleInstanceFactory$get$1
com.caij.puremusic.dialogs.DeleteSongsDialog$deleteSongs$1
androidx.appcompat.app.AlertController$RecycleListView
org.simpleframework.xml.stream.StreamReader$Entry
com.caij.puremusic.fragments.player.normal.PlayerPlaybackControlsFragment
com.thegrizzlylabs.sardineandroid.model.Lockdiscovery
org.simpleframework.xml.util.Dictionary
org.simpleframework.xml.core.ElementMapUnionParameter
com.caij.puremusic.fragments.playlists.PlaylistDetailsFragment$special$$inlined$viewModel$default$2
io.ktor.client.engine.okhttp.OkHttpEngineKt$toChannel$1$1$1
com.caij.puremusic.drive.model.Resourcetype
com.tencent.mm.opensdk.modelbiz.AddCardToWXCardPackage$Req
com.caij.puremusic.helper.menu.PlaylistMenuHelper$handleMenuClick$4
com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment
org.jaudiotagger.tag.id3.framebody.FrameBodyTMED
com.caij.puremusic.drive.model.Collection
androidx.activity.result.ActivityResultRegistry$1
kotlin.UnsafeLazyImpl
androidx.fragment.app.BackStackState
org.simpleframework.xml.stream.OutputBuffer
org.jaudiotagger.audio.flac.FlacTagCreator
nl.adaptivity.xmlutil.serialization.structure.XmlDescriptor$tagName$2
com.google.android.material.checkbox.MaterialCheckBox
com.google.android.gms.internal.play_billing.zzcz
org.jaudiotagger.tag.id3.framebody.FrameBodyTPE1
com.caij.puremusic.drive.model.ParentReference
org.simpleframework.xml.core.CompositeArray
com.umeng.commonsdk.statistics.common.d$a$1
org.jaudiotagger.tag.Tag
com.umeng.commonsdk.internal.c$5
com.umeng.analytics.process.a
com.alipay.apmobilesecuritysdk.f.b
io.ktor.utils.io.ByteChannelSequentialBase$awaitAtLeastNBytesAvailableForRead$1
com.google.common.collect.Maps$EntryFunction$1
kotlin.text.StringsKt__StringsKt$splitToSequence$1
org.jcodec.containers.mp4.boxes.SegmentTypeBox
com.caij.puremusic.activities.MainActivity$handlePlaybackIntent$1$1
com.thegrizzlylabs.sardineandroid.model.Remove
org.simpleframework.xml.stream.HyphenStyle
com.caij.puremusic.db.model.SongEntityQueries$getPlayListSongCount$1
kotlinx.serialization.internal.PluginGeneratedSerialDescriptor$toString$1
com.caij.puremusic.drive.model.BaiduDriveItem$Companion
com.google.android.material.bottomsheet.BottomSheetDragHandleView
org.jaudiotagger.tag.id3.framebody.FrameBodyETCO
com.caij.puremusic.drive.model.AlbumList
com.umeng.commonsdk.statistics.AnalyticsConstants
com.caij.puremusic.db.model.ServerAudioFormatQueries$deleteSongBySource$1
com.caij.puremusic.views.insets.InsetsRecyclerView$1
org.koin.core.error.KoinAppAlreadyStartedException
org.jaudiotagger.audio.aiff.chunk.FormatVersionChunk
io.ktor.serialization.ContentConvertException
com.caij.puremusic.db.model.ArtistQueries$SearchArtistByNameQuery$execute$1
com.umeng.commonsdk.internal.utils.a
org.jaudiotagger.audio.opus.OpusFileWriter
org.jaudiotagger.tag.id3.framebody.FrameBodyWCOP
kotlinx.serialization.internal.MapEntrySerializer$descriptor$1
org.jaudiotagger.audio.iff.ChunkHeader
org.jaudiotagger.tag.datatype.StringDate
org.jaudiotagger.audio.AudioHeader
com.umeng.analytics.pro.bs
org.jaudiotagger.audio.ogg.OggFileReader
org.simpleframework.xml.strategy.Value
nl.adaptivity.xmlutil.XmlEvent$StartElementEvent$toString$1
com.google.android.gms.internal.play_billing.zzt
com.caij.puremusic.fragments.other.DetailListFragment$loadArtists$2
com.caij.puremusic.util.CustomArtistImageUtil$setCustomArtistImage$2
io.ktor.client.HttpClientConfig$engineConfig$1
kotlin.jvm.internal.MutablePropertyReference
com.caij.puremusic.fragments.backup.BackupFragment$showCreateBackupDialog$1$1$1$1
com.caij.puremusic.drive.dropbox.DropboxDriveEngine$getFiles$1
com.caij.puremusic.db.model.SongEntityQueries$IsSongExistsInPlaylistQuery$execute$1
kotlin.reflect.TypesJVMKt$typeToString$unwrap$1
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultKeySelector$1
com.tencent.mm.opensdk.modelmsg.WXLiteAppObject
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$GetByIdQuery
com.caij.puremusic.db.model.SongQueries$SongsByTitleQuery$execute$1
com.caij.puremusic.db.model.ServerSongCoverQueries$GetBySourceQuery
com.google.android.material.datepicker.DayViewDecorator
kotlin.jvm.internal.TypeReference$asString$args$1
androidx.media.AudioAttributesImplApi21
code.name.monkey.appthemehelper.common.prefs.supportv7.dialogs.ATEPreferenceDialogFragment
com.google.android.exoplayer2.upstream.cache.Cache$CacheException
com.umeng.vt.diff.util.ClassLoadUtil
com.bumptech.glide.load.DataSource
com.caij.puremusic.fragments.player.plain.PlainPlaybackControlsFragment$updateSong$1
com.google.android.material.bottomsheet.BottomSheetBehavior$2
org.simpleframework.xml.core.PrimitiveScanner$EmptySection
org.jaudiotagger.audio.asf.io.RandomAccessFileOutputStream
com.google.android.material.datepicker.DateValidatorPointForward
com.caij.puremusic.fragments.player.fit.FitPlaybackControlsFragment
kotlin.jvm.internal.PropertyReference
com.caij.puremusic.drive.model.PlayListItem$Companion
com.caij.puremusic.db.model.SongEntityQueries$deletePlaylistSongs$1
com.caij.puremusic.dialogs.RenamePlaylistDialog$onCreateDialog$$inlined$extraNotNull$default$1
com.caij.puremusic.drive.model.JellyfinSongListResponse$Companion
com.caij.puremusic.db.model.SongQueries$songsByAlumId$2
com.google.android.material.search.SearchView$TransitionState
io.ktor.client.engine.okhttp.StreamAdapterIOException
com.caij.puremusic.db.model.ServerAudioFormatQueries$insert$2
org.jaudiotagger.tag.id3.framebody.FrameBodyUnsupported
androidx.viewpager.widget.ViewPager$SavedState
com.caij.puremusic.db.model.SongQueries$songsByArtist$1
io.ktor.client.engine.okhttp.OkHttpConfig$config$1
androidx.activity.ComponentActivity$5
com.caij.puremusic.fragments.player.card.CardPlaybackControlsFragment$updateSong$1
com.tencent.bugly.proguard.bc
org.jaudiotagger.tag.id3.framebody.FrameBodyTPRO
com.umeng.analytics.pro.au
com.umeng.analytics.pro.an$d
com.caij.puremusic.db.model.SearchAlbumResultQueries
org.jaudiotagger.tag.mp4.field.Mp4TagBinaryField
com.caij.puremusic.db.model.PlaylistEntityQueries$playlists$1
org.jaudiotagger.tag.aiff.AiffTag
com.caij.puremusic.service.MusicService$openTrackAndPrepareNextAt$1
com.thegrizzlylabs.sardineandroid.model.Locktype
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag
org.jaudiotagger.utils.DirectByteBufferUtils$UnsupportedJvmReleaseStrategy
com.alipay.mobilesecuritysdk.face.SecurityClientMobile
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdQuery
org.simpleframework.xml.core.TextLabel
com.google.android.gms.common.internal.zat
com.caij.puremusic.db.model.PlaylistEntityQueries$playlistByName$1
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$2
com.alipay.apmobilesecuritysdk.e.h
com.google.android.material.theme.MaterialComponentsViewInflater
com.alipay.apmobilesecuritysdk.common.a
com.caij.puremusic.fragments.artists.ArtistsFragment$onShuffleClicked$1$1
com.afollestad.materialdialogs.input.DialogInputExtKt$prefillInput$1
org.jcodec.containers.mp4.boxes.EditListBox
androidx.window.layout.SafeWindowLayoutComponentProvider$isWindowExtensionsValid$1
com.tencent.mm.opensdk.modelbiz.SubscribeMessage$Req
com.caij.puremusic.db.model.AlbumQueries$insert$1
com.caij.puremusic.fragments.folder.DriveFilesFragment$onViewCreated$1$2
com.google.android.material.timepicker.MaterialTimePicker
io.ktor.client.plugins.BodyProgress$handle$1
com.caij.puremusic.drive.model.SubsonicSearchResponse$Companion
io.ktor.client.engine.HttpClientEngine$install$1$1
org.jaudiotagger.tag.id3.ID3v1Iterator
com.caij.puremusic.drive.model.AlbumItem$Companion
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgram
com.caij.puremusic.activities.tageditor.SongTagEditorActivity$special$$inlined$inject$default$1
com.umeng.analytics.pro.bj
com.caij.puremusic.helper.BackupHelper$restoreBackup$2
org.simpleframework.xml.stream.OutputDocument
org.simpleframework.xml.core.CompositeUnion
org.jaudiotagger.audio.wav.chunk.WavInfoChunk
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2$emit$1
com.google.android.exoplayer2.text.SubtitleDecoderException
org.jaudiotagger.tag.InvalidTagException
com.tencent.mm.opensdk.modelmsg.SendAuth$Resp
com.google.android.gms.internal.play_billing.zzr
com.bosphere.fadingedgelayout.FadingEdgeLayout
io.ktor.utils.io.jvm.javaio.BlockingAdapter$block$1
nl.adaptivity.xmlutil.serialization.structure.XmlCompositeDescriptor$children$2
com.umeng.analytics.process.c
com.umeng.commonsdk.statistics.proto.b$c
com.yalantis.ucrop.view.widget.AspectRatioTextView
com.caij.puremusic.drive.model.User
com.umeng.commonsdk.UMConfigureInternation$1
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$PreorderEnumeration
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockData
com.caij.puremusic.fragments.base.AbsPlayerFragment$updateIsFavorite$1
com.caij.puremusic.db.model.PlaylistEntityQueries$SearchPlaylistByNameQuery$execute$1
kotlinx.serialization.SerializersCacheKt$PARAMETRIZED_SERIALIZERS_CACHE_NULLABLE$1
androidx.constraintlayout.motion.widget.MotionLayout$TransitionState
androidx.media.AudioAttributesImplApi26
com.caij.puremusic.drive.model.SubsonicSong$$serializer
androidx.fragment.app.SpecialEffectsController$Operation$State
com.google.android.exoplayer2.metadata.mp4.MotionPhotoMetadata
com.caij.puremusic.fragments.player.gradient.GradientPlayerFragment$updateIsFavoriteIcon$1
com.google.android.gms.common.internal.zav
com.caij.puremusic.views.BreadCrumbLayout$SavedStateWrapper
com.caij.puremusic.drive.model.PlaylistResponse$Companion
org.jaudiotagger.tag.reference.ISOScript$Script
androidx.lifecycle.LegacySavedStateHandleController$1
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1
androidx.lifecycle.CoroutineLiveData$clearSource$1
com.caij.puremusic.db.model.SearchAlbumResultQueries$GetByIdQuery$execute$1
androidx.viewpager2.adapter.FragmentStateAdapter$2
io.ktor.client.plugins.HttpCallValidator$validateResponse$1
org.jaudiotagger.audio.mp4.Mp4TagReader
com.caij.puremusic.helper.menu.PlaylistMenuHelper$handleMenuClick$2$1
com.caij.puremusic.dialogs.CreatePlaylistDialog$special$$inlined$sharedViewModel$default$2
com.caij.puremusic.fragments.player.classic.ClassicPlayerFragment$updateSong$1
com.google.android.exoplayer2.database.DatabaseIOException
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine
io.ktor.client.engine.ClientEngineClosedException
com.caij.puremusic.extensions.ViewExtensionsKt$drawAboveSystemBarsWithPadding$1
org.jaudiotagger.audio.ogg.OggVorbisTagReader
code.name.monkey.appthemehelper.common.prefs.supportv7.ATEColorPreference
com.google.android.exoplayer2.IllegalSeekPositionException
androidx.fragment.app.strictmode.FragmentTagUsageViolation
org.jaudiotagger.tag.id3.framebody.FrameBodyASPI
org.simpleframework.xml.core.DefaultDetail
com.caij.puremusic.drive.subsonic.SubsonicEngine$getAlbumSongs$1
com.caij.puremusic.fragments.player.flat.FlatPlaybackControlsFragment$updateSong$1$songInfo$1
com.caij.puremusic.fragments.home.HomeFragment
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportByInterval
com.google.android.material.search.SearchBar$ScrollingViewBehavior
com.google.android.material.badge.BadgeState$State
com.caij.puremusic.drive.model.EmbyAlbumsResponse$$serializer
com.caij.puremusic.db.model.ServerAudioFormatQueries$clear$1
com.caij.puremusic.drive.model.PlayListsSubsonicResponse$$serializer
com.caij.puremusic.fragments.folder.manager.MusicFolderManagerFragment
com.caij.puremusic.activities.MainActivity$onNewIntent$$inlined$extra$default$1
com.google.android.gms.internal.play_billing.zzcj
com.caij.puremusic.drive.model.JellyfinFolder$Companion
com.google.android.datatransport.cct.internal.ClientInfo$ClientType
org.simpleframework.xml.core.Composite$Injector
com.umeng.commonsdk.statistics.proto.e$1
org.simpleframework.xml.core.ElementListParameter
com.caij.puremusic.network.model.ArtistWrapper
com.umeng.commonsdk.statistics.idtracking.Envelope
com.umeng.analytics.pro.am
org.jaudiotagger.audio.generic.GenericAudioHeader
com.umeng.commonsdk.statistics.proto.d
org.koin.core.error.InstanceCreationException
com.bumptech.glide.integration.okhttp3.OkHttpGlideModule
okhttp3.Handshake$Companion$get$1
com.caij.puremusic.drive.baidu.BaiduDriveEngine$getFiles$1
org.slf4j.helpers.NOPLogger
com.caij.puremusic.db.model.PlaybackSongQueries$insert$1
android.support.v4.media.MediaBrowserCompat$ItemReceiver
org.jaudiotagger.tag.id3.ID3v24Frame
com.google.android.gms.internal.play_billing.zzef
org.repackage.com.meizu.flyme.openidsdk.OpenId
org.simpleframework.xml.core.Scanner
com.caij.puremusic.drive.model.PlayLists$Companion
org.jaudiotagger.tag.id3.framebody.FrameBodyMCDI
com.google.android.gms.common.api.AvailabilityException
com.caij.puremusic.dialogs.DeleteSongsDialog$onCreateDialog$3
kotlinx.serialization.PolymorphicSerializer$descriptor$2
com.alipay.android.phone.mrpc.core.f
com.tencent.mm.opensdk.openapi.MMSharedPreferences$REditor
com.caij.puremusic.util.MusicUtil$deleteTracks$3
com.caij.vip.CNVipManager$refreshInfo$1
org.simpleframework.xml.core.Variable
org.simpleframework.xml.stream.Stack
androidx.window.layout.SidecarAdapter$translate$checkedFeature$4
com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable
org.koin.core.scope.Scope$resolveInstance$2
org.jaudiotagger.tag.id3.framebody.FrameBodyTIME
org.jcodec.containers.mp4.boxes.Header
com.alipay.sdk.app.AuthTask
org.jaudiotagger.audio.opus.OpusVorbisTagReader
org.jaudiotagger.tag.id3.AbstractID3v2Frame$EncodingFlags
com.umeng.analytics.pro.ao
androidx.appcompat.widget.FitWindowsLinearLayout
org.jaudiotagger.audio.SupportedFileFormat$15
com.afollestad.materialdialogs.LayoutMode
org.jaudiotagger.tag.asf.AsfTagField
com.caij.puremusic.drive.model.JellyfinArtistResponse$Companion
io.ktor.client.engine.HttpClientEngine$executeWithinCallContext$2
com.google.android.exoplayer2.upstream.DataSourceException
org.jaudiotagger.audio.mp4.Mp4TagReader$1
com.tencent.bugly.proguard.i
com.caij.puremusic.util.CoverLyricsType
nl.adaptivity.xmlutil.serialization.XmlEncoderBase$TagEncoder$encodeQName$1
org.simpleframework.xml.core.SignatureBuilder
org.jcodec.containers.mp4.SampleBoxes
com.caij.puremusic.dialogs.AddToPlaylistDialog$onCreateDialog$$inlined$extraNotNull$default$2
com.umeng.analytics.pro.bo$b
com.caij.puremusic.drive.model.PlaylistMetadata
org.simpleframework.xml.core.Primitive
kotlin.SynchronizedLazyImpl
com.google.common.io.Files$FilePredicate
com.google.common.collect.MultimapBuilder$ArrayListSupplier
org.simpleframework.xml.stream.DocumentReader$1
io.ktor.client.engine.okhttp.OkHttpEngineKt$convertToOkHttpBody$3$1
com.caij.puremusic.fragments.folder.FoldersSettingFragment$onFileSelected$1
org.simpleframework.xml.Default
org.simpleframework.xml.stream.InputPosition
com.google.android.exoplayer2.metadata.mp4.SlowMotionData$Segment
org.simpleframework.xml.Attribute
com.caij.puremusic.db.model.AlbumQueries$getAlbumByArtistId$1
org.repackage.a.a.a.a$a$a
com.umeng.commonsdk.internal.c$2
com.umeng.analytics.AnalyticsConfig
com.umeng.commonsdk.statistics.common.b
kotlinx.serialization.json.internal.JsonException
androidx.activity.ComponentActivity$4
com.caij.puremusic.fragments.player.normal.PlayerPlaybackControlsFragment$updateSong$1
com.caij.puremusic.drive.model.OneDriveItem
com.caij.puremusic.fragments.artists.AlbumArtistDetailsFragment$special$$inlined$viewModel$default$1
org.simpleframework.xml.stream.OutputElement
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1
org.simpleframework.xml.core.ExtractorFactory$ElementMapExtractor
kotlinx.serialization.SerializersCacheKt$PARAMETRIZED_SERIALIZERS_CACHE$1
com.google.android.gms.internal.play_billing.zzex
com.caij.puremusic.drive.model.AlbumMetadata
com.tencent.mm.opensdk.modelbiz.WXChannelOpenFeed$Req
io.ktor.util.date.WeekDay
com.thegrizzlylabs.sardineandroid.model.Prop
io.ktor.serialization.kotlinx.KotlinxSerializationBase$serialize$1
com.google.common.hash.Hashing$ChecksumType$1
com.afollestad.materialdialogs.color.DialogColorChooserExtKt$colorChooser$4
androidx.constraintlayout.core.widgets.ConstraintAnchor$Type
com.caij.puremusic.drive.model.AlbumArtist$Companion
com.caij.puremusic.drive.model.Auth2Token$$serializer
com.umeng.commonsdk.stateless.b
org.repackage.com.vivo.identifier.IdentifierIdObserver
com.caij.puremusic.db.model.PlaylistEntityQueries$getPlaylistEntityById$2
com.tencent.bugly.proguard.az
com.caij.puremusic.db.model.SongQueries$SongsByNameAlbumQuery$execute$1
org.jaudiotagger.audio.aiff.chunk.CommonChunk
androidx.appcompat.widget.AppCompatSeekBar
com.alipay.apmobilesecuritysdk.e.f
io.ktor.client.engine.okhttp.OkHttpEngine$clientCache$2
io.ktor.client.HttpClient$4
kotlinx.serialization.json.JsonElementSerializer$descriptor$1$4
com.umeng.commonsdk.statistics.common.d$a
com.tencent.mm.opensdk.modelmsg.WXVideoObject
com.caij.puremusic.drive.model.OneDriveFolder$Companion
org.simpleframework.xml.core.ScannerFactory
com.caij.puremusic.drive.model.GoogleDriveFile$$serializer
com.umeng.analytics.pro.ad$1
nl.adaptivity.xmlutil.util.CompactFragment$toString$1
com.caij.puremusic.drive.jellyfin.JellyfinEngine$getFolderArtists$1
com.caij.puremusic.fragments.lyrics.ComnLyricsFragment$editSyncedLyrics$1$1$1
org.jaudiotagger.tag.vorbiscomment.VorbisCommentReader
org.jaudiotagger.audio.asf.io.CountingOutputstream
org.repackage.com.vivo.identifier.BuildConfig
com.umeng.commonsdk.statistics.internal.d
nl.adaptivity.xmlutil.serialization.InputKind$Element
com.umeng.analytics.pro.i$b
com.caij.puremusic.db.model.SongQueries$SongsByNameArtistQuery
com.caij.puremusic.db.model.ServerLyricsQueries$getById$1
com.umeng.analytics.pro.bn
com.thegrizzlylabs.sardineandroid.model.Property
org.jaudiotagger.utils.FileTypeUtil
org.jaudiotagger.audio.flac.FlacTagWriter
com.google.android.material.textview.MaterialTextView
com.tencent.mm.opensdk.modelpay.PayReq
org.json.alipay.c
com.caij.puremusic.db.model.SongQueries$songsByTitle$2
kotlin.KotlinNullPointerException
kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$1
com.caij.puremusic.fragments.albums.AlbumDetailsFragment$showAlbum$1
com.caij.puremusic.drive.model.AlbumResponse$Companion
com.tencent.bugly.proguard.ah
org.jaudiotagger.tag.id3.AbstractID3v1Tag
org.jaudiotagger.audio.wav.WavCleaner$2
com.caij.puremusic.activities.tageditor.AlbumTagEditorActivityV2$save$1$2
org.simpleframework.xml.util.ConcurrentCache
org.jaudiotagger.audio.wav.WavTagWriter
org.simpleframework.xml.core.InstanceFactory$ValueInstance
com.caij.puremusic.drive.model.Media
com.thegrizzlylabs.sardineandroid.model.PrincipalURL
org.jaudiotagger.audio.SupportedFileFormat$9
com.caij.puremusic.drive.model.OneDriveFileResponse$$serializer
com.tencent.mm.opensdk.modelbiz.WXChannelBaseJumpInfo
org.simpleframework.xml.convert.ConverterFactory
com.google.android.exoplayer2.drm.KeysExpiredException
androidx.preference.MultiSelectListPreference$SavedState
com.umeng.commonsdk.framework.a$1
com.caij.puremusic.util.AlbumUtil$sort$1
com.caij.puremusic.fragments.player.cardblur.CardBlurPlaybackControlsFragment$updateSong$1$songInfo$1
org.jcodec.containers.mp4.boxes.ChannelBox
org.jaudiotagger.audio.mp4.Flatten$ProgressListener
com.caij.puremusic.activities.MainActivity$handlePlaybackIntent$1$2$1
org.jcodec.containers.mp4.boxes.EndianBox
com.tencent.mm.opensdk.utils.ILog
org.jaudiotagger.tag.id3.valuepair.TextEncoding
com.google.common.base.Optional
org.jaudiotagger.tag.images.StandardArtwork
com.caij.puremusic.network.model.LastFmArtist
com.google.gson.LongSerializationPolicy$1
com.caij.puremusic.drive.model.Prop$Companion
org.jaudiotagger.audio.dsf.DsfFileWriter
com.caij.puremusic.drive.model.Resourcetype$$serializer
com.caij.puremusic.fragments.player.plain.PlainPlaybackControlsFragment
org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistReadOptions
com.caij.puremusic.drive.model.SongItem$Companion
com.umeng.commonsdk.debug.E
com.caij.puremusic.fragments.LibraryViewModel$syncSource$2
org.simpleframework.xml.stream.PullProvider
com.caij.puremusic.drive.model.PlayListSubsonicResponse
com.caij.puremusic.views.HeightFitSquareLayout
com.alipay.sdk.m.r.a
com.tencent.mm.opensdk.modelmsg.WXGameVideoFileObject
com.caij.vip.DefaultPayTypeResponse
kotlinx.serialization.descriptors.SerialDescriptorsKt$buildSerialDescriptor$1
com.caij.puremusic.fragments.folder.manager.MusicFolderManagerFragment$showLongDialog$1$2$1
com.alipay.apmobilesecuritysdk.d.e
org.jaudiotagger.tag.id3.ID3v23Frame
com.umeng.analytics.pro.e$d$a
app.cash.sqldelight.BaseTransacterImpl$notifyQueries$2
kotlin.internal.jdk7.JDK7PlatformImplementations
org.simpleframework.xml.core.PrimitiveFactory
com.caij.puremusic.activities.tageditor.SongTagEditorActivityV2$special$$inlined$inject$default$1
org.jcodec.containers.mp4.boxes.ClipRegionBox
com.caij.puremusic.drive.model.SubsonicResponse$Companion
com.umeng.analytics.pro.aw
com.umeng.analytics.pro.l
com.caij.puremusic.drive.model.GoogleDriveFile$Companion
org.jaudiotagger.audio.aiff.chunk.AuthorChunk
org.simpleframework.xml.stream.Builder
org.jaudiotagger.tag.id3.framebody.FrameBodyTPE2
com.alipay.android.phone.mrpc.core.i
com.caij.puremusic.drive.model.Propstat$$serializer
org.simpleframework.xml.ElementList
org.jaudiotagger.audio.ogg.OggFileWriter
com.caij.puremusic.database.SongsDaoImp$deleteSongs$1
com.umeng.commonsdk.statistics.internal.c$3
io.ktor.client.request.forms.FormBuildersKt$submitForm$5
kotlin.internal.jdk8.JDK8PlatformImplementations
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$IWXSceneDataObject
com.caij.puremusic.util.ArtistUtil$sortArtists$2
org.simpleframework.xml.core.PrimitiveInlineList
com.caij.puremusic.repository.SyncSongRepository$sortedSongs$2
com.google.android.exoplayer2.drm.DefaultDrmSessionManager$MissingSchemeDataException
kotlinx.serialization.json.JsonElementSerializer$descriptor$1$2
org.simpleframework.xml.core.TreeModel$OrderList
com.caij.puremusic.fragments.backup.BackupFragment$special$$inlined$viewModels$default$2
com.tencent.mm.opensdk.modelmsg.SendAuth$Options
com.caij.puremusic.fragments.artists.AbsArtistDetailsFragment
org.simpleframework.xml.core.CompositeValue
io.ktor.utils.io.ByteChannelSequentialBase$awaitAtLeastNBytesAvailableForWrite$1
com.caij.puremusic.db.model.SongQueries$insertOrReplace$2
androidx.window.layout.SafeWindowLayoutComponentProvider$windowLayoutComponent$2
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgram$Req
com.umeng.commonsdk.statistics.idtracking.e$a
com.caij.puremusic.dialogs.DeleteSongsDialog$onCreateDialog$deleteResultLauncher$1$1
org.simpleframework.xml.core.GroupExtractor
org.simpleframework.xml.core.Context
kotlin.coroutines.EmptyCoroutineContext
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgramWithToken
com.tencent.bugly.proguard.bb
com.caij.puremusic.repository.RealRepository$homeSections$1
androidx.lifecycle.ReflectiveGenericLifecycleObserver
org.simpleframework.xml.core.TextParameter
com.umeng.analytics.pro.p
com.caij.puremusic.db.model.SongQueries$GetSongBySourceQuery$execute$1
com.caij.puremusic.fragments.LibraryViewModel$deleteSongsInPlaylistWithNofify$1$1
org.simpleframework.xml.core.ClassType
com.tencent.bugly.proguard.aw
androidx.activity.result.IntentSenderRequest
org.jaudiotagger.tag.id3.framebody.FrameBodyXSOA
io.ktor.serialization.Configuration$register$1
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
com.google.android.material.internal.BaselineLayout
com.caij.puremusic.db.model.SongQueries$GetSongCountBySourceIdQuery
com.caij.puremusic.drive.model.PlexLoginResponse$Companion
com.caij.puremusic.activities.tageditor.AlbumTagEditorActivityV2$onCreate$1
org.slf4j.event.Level
androidx.preference.CheckBoxPreference
com.caij.puremusic.fragments.other.UserInfoFragment$onViewCreated$5
nl.adaptivity.xmlutil.XmlDeclMode
org.jaudiotagger.logging.AbstractTagDisplayFormatter
com.caij.puremusic.fragments.albums.AlbumDetailsFragment$loadArtistImage$1
com.alipay.apmobilesecuritysdk.common.RushTimeUtil$1
com.caij.puremusic.database.AlbumDaoImp$insertAllAlbums$1
com.umeng.commonsdk.debug.UMRTLog
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo
com.tencent.bugly.BuglyStrategy
org.jaudiotagger.tag.reference.Tagger
org.simpleframework.xml.core.Validate
kotlinx.serialization.descriptors.SerialDescriptorImpl$_hashCode$2
org.simpleframework.xml.util.Resolver
com.tencent.mm.opensdk.modelmsg.LaunchFromWX
com.caij.puremusic.model.Genre
com.caij.puremusic.activities.tageditor.SongTagEditorActivity$bindingInflater$1
com.caij.puremusic.db.model.SongQueries$SongsByIdsQuery$execute$1
com.caij.puremusic.MainModuleKt$dataModule$1$5
org.jaudiotagger.audio.generic.GenericTag
com.caij.puremusic.drive.model.SubsonicPlaylist$$serializer
com.umeng.commonsdk.statistics.proto.a$e
kotlin.jvm.internal.Ref$LongRef
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService
org.simpleframework.xml.Element
io.ktor.utils.io.ByteReadChannel$Companion$Empty$2
org.simpleframework.xml.util.Resolver$Cache
org.jcodec.containers.mp4.boxes.AliasBox$ExtraField
com.caij.puremusic.fragments.player.circle.CirclePlayerFragment$updateSong$1$songInfo$1
com.tencent.mm.opensdk.modelbiz.OpenBusiLuckyMoney
com.caij.puremusic.fragments.other.DetailListFragment$loadAlbums$2
com.tencent.bugly.proguard.be
com.yalantis.ucrop.view.widget.HorizontalProgressWheelView
org.simpleframework.xml.stream.HyphenBuilder$1
com.caij.vip.AliPayFragment$openAlipayAppPay$1$1
com.caij.puremusic.drive.model.PlayListSubsonicResponse$Companion
com.heinrichreimersoftware.materialintro.view.InkPageIndicator
org.simpleframework.xml.util.Cache
com.caij.puremusic.fragments.folder.DriveFilesFragment$onViewCreated$1
kotlinx.serialization.internal.EnumSerializer$descriptor$2
com.google.android.gms.common.internal.ReflectedParcelable
com.android.billingclient.api.ProxyBillingActivity
org.jaudiotagger.tag.id3.ID3v1Tag$1
org.simpleframework.xml.transform.InvalidFormatException
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration
org.jaudiotagger.tag.asf.AsfFieldKey
org.simpleframework.xml.core.Group
androidx.lifecycle.BlockRunner$maybeRun$1
com.caij.puremusic.database.ArtistDaoImp$insertAllArtists$1
com.alipay.apmobilesecuritysdk.e.d
io.ktor.client.statement.HttpStatement$execute$4
com.caij.puremusic.database.PlaybackDaoImp$insertPlaybacks$1
kotlinx.coroutines.CoroutinesInternalError
com.caij.puremusic.activities.FolderFilesActivity
org.simpleframework.xml.core.CompositeMapUnion
org.simpleframework.xml.stream.DocumentReader$Text
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$3
com.caij.puremusic.db.model.FolderQueries$insertFolder$1
org.jaudiotagger.tag.id3.framebody.FrameBodyTKEY
com.tencent.bugly.crashreport.common.info.PlugInBean
com.umeng.commonsdk.utils.a
com.thegrizzlylabs.sardineandroid.DavQuota
org.jaudiotagger.audio.wav.WavInfoReader
com.alipay.apmobilesecuritysdk.e.g
com.caij.puremusic.dialogs.DeletePlaylistDialog$special$$inlined$sharedViewModel$default$2
kotlinx.serialization.json.internal.JsonEncodingException
com.caij.puremusic.fragments.LibraryViewModel$syncSource$1
com.yalantis.ucrop.model.AspectRatio
org.simpleframework.xml.core.OverrideValue
org.jaudiotagger.tag.reference.ISOCountry$Country
com.umeng.analytics.pro.f
com.thegrizzlylabs.sardineandroid.model.Supportedlock
org.jaudiotagger.tag.id3.valuepair.StandardIPLSKey
com.umeng.analytics.pro.x
com.caij.puremusic.service.MusicService$openCurrent$1
com.caij.puremusic.service.GlobalLyricsManager$update$1
nl.adaptivity.xmlutil.serialization.XmlEncoderBase$TagEncoder$encodeStringElement$2
com.thegrizzlylabs.sardineandroid.model.Propertyupdate
com.caij.puremusic.fragments.player.tiny.TinyPlayerFragment
com.caij.vip.DefaultFragmentActivity
org.simpleframework.xml.core.ArrayInstance
io.ktor.utils.io.ExceptionUtilsJvmKt$createConstructor$$inlined$safeCtor$4
io.ktor.client.plugins.HttpCallValidator$Companion$install$1$1
okhttp3.internal.http2.ErrorCode
org.jaudiotagger.audio.aiff.AiffTagReader
com.umeng.commonsdk.config.FieldManager$1
androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1
com.umeng.common.ISysListener
com.caij.puremusic.activities.tageditor.SongTagEditorActivityV2$save$1$4
com.umeng.analytics.pro.an$c
kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$3
com.caij.puremusic.fragments.player.plain.PlainPlaybackControlsFragment$updateSong$1$songInfo$1
org.jcodec.containers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox
com.thegrizzlylabs.sardineandroid.model.SimplePrivilege
org.jaudiotagger.tag.id3.framebody.FrameBodyTSOP
io.ktor.client.engine.okhttp.OkHttpEngineKt$convertToOkHttpBody$3
okhttp3.Handshake$Companion$handshake$1
com.caij.puremusic.views.TintedBottomNavigationView
com.caij.puremusic.appwidgets.AppWidgetCard
com.umeng.commonsdk.debug.UMLogCommon
org.jaudiotagger.audio.real.RealTag
com.umeng.analytics.process.DBFileTraversalUtil$a
com.caij.puremusic.fragments.folder.FoldersFragment$onFileSelected$1
com.caij.puremusic.fragments.LibraryViewModel$shuffleSongs$1$1
com.umeng.commonsdk.internal.utils.c$1
kotlin.collections.AbstractCollection$toString$1
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton
org.jaudiotagger.audio.aiff.AiffFileHeader
com.caij.puremusic.fragments.player.flat.FlatPlayerFragment
com.caij.puremusic.fragments.LibraryViewModel$addSongSource$2
com.caij.puremusic.drive.model.PlexAlbumsResponse
com.caij.puremusic.drive.adrive.Auth20Activity
nl.adaptivity.xmlutil.serialization.XmlSerialException
org.jaudiotagger.audio.flac.FlacInfoReader
org.jaudiotagger.tag.id3.framebody.FrameBodyCTOC
com.caij.puremusic.MainModuleKt$roomModule$1$10
org.simpleframework.xml.transform.ByteTransform
com.caij.puremusic.db.model.SongQueries$song$1
com.caij.puremusic.drive.model.Directory$$serializer
org.simpleframework.xml.core.EmptyExpression
com.alipay.apmobilesecuritysdk.face.APSecuritySdk$1
org.jaudiotagger.tag.id3.framebody.FrameBodyEncrypted
org.jaudiotagger.audio.aiff.chunk.AnnotationChunk
org.simpleframework.xml.stream.EventAttribute
com.caij.puremusic.service.MediaHttp$getOkHttpClient$1$intercept$1
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC
com.caij.puremusic.views.PermissionItem
org.simpleframework.xml.core.MethodPartFactory
nl.adaptivity.xmlutil.serialization.OutputKind$Attribute
okhttp3.internal.connection.RouteException
nl.adaptivity.xmlutil.serialization.DefaultXmlSerializationPolicy$elementNamespaceDecls$$inlined$filterIsInstance$1
com.alipay.sdk.app.AlipayResultActivity
com.caij.puremusic.db.model.AlbumQueries$SearchAlbumsByNameQuery$execute$1
com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace
com.caij.puremusic.db.model.SearchAlbumResultQueries$deleteById$2
kotlin.Result
org.simpleframework.xml.core.TreeModel
com.tencent.mm.opensdk.modelmsg.SendMessageToWX
com.umeng.commonsdk.config.FieldManager
kotlin.jvm.internal.CallableReference$NoReceiver
com.umeng.commonsdk.statistics.SdkVersion
com.umeng.analytics.b
com.tencent.mm.opensdk.modelbiz.SubscribeMiniProgramMsg$Resp
com.caij.puremusic.fragments.base.AbsPlayerFragment$updateIsFavorite$1$1
com.google.android.gms.common.annotation.KeepName
com.google.android.gms.internal.play_billing.zzaw
org.jcodec.containers.mp4.boxes.KeysBox$LocalBoxes
com.umeng.commonsdk.statistics.internal.a
com.caij.puremusic.network.model.LastFmTrack$Track$Toptags$Tag
org.jaudiotagger.audio.exceptions.ReadOnlyFileException
org.jaudiotagger.tag.id3.framebody.FrameBodySYTC
org.jaudiotagger.tag.id3.AbstractID3v2Tag$1
com.alipay.apmobilesecuritysdk.d.a
com.caij.puremusic.fragments.albums.AlbumsFragment$loadData$1$1
com.caij.puremusic.MainModuleKt$networkModule$1
org.jaudiotagger.tag.id3.valuepair.InterpolationTypes
org.jcodec.containers.mp4.boxes.WaveExtension
com.tencent.bugly.proguard.ab$2
com.google.android.material.transformation.ExpandableTransformationBehavior
com.umeng.commonsdk.statistics.common.d
com.umeng.commonsdk.statistics.proto.a$a
com.yalantis.ucrop.view.UCropView
com.caij.puremusic.MainModuleKt$roomModule$1$8
com.caij.puremusic.drive.util.Auth20Util$parseBody$1
com.caij.puremusic.db.model.SongQueries$songsByArtistIdWithLike$1
com.umeng.commonsdk.statistics.UMServerURL
org.jcodec.containers.mp4.boxes.IListBox$LocalBoxes
com.caij.puremusic.drive.model.PlexAlbumsResponse$$serializer
androidx.preference.SeekBarPreference
com.umeng.commonsdk.statistics.noise.ImLatent
com.google.android.material.datepicker.CalendarConstraints$DateValidator
org.jaudiotagger.tag.id3.framebody.FrameBodyTPOS
com.caij.puremusic.model.Contributor$Creator
com.umeng.commonsdk.statistics.internal.c
com.tencent.mm.opensdk.constants.ConstantsAPI$WXWebPage
io.ktor.serialization.ContentConverterKt$deserialize$result$2
com.afollestad.materialdialogs.color.DialogColorChooserExtKt$setupCustomPage$6
org.jaudiotagger.tag.id3.framebody.FrameBodyTRCK
com.google.android.exoplayer2.video.PlaceholderSurface
com.caij.puremusic.drive.emby.EmbyFactory$createFolder$1
com.caij.puremusic.drive.model.PlexUser$$serializer
org.jaudiotagger.audio.mp3.MP3File
com.thegrizzlylabs.sardineandroid.impl.SardineException
org.simpleframework.xml.core.TemplateEngine
androidx.fragment.app.FragmentState
com.caij.puremusic.fragments.player.peek.PeekPlayerFragment$updateSong$1
io.ktor.client.call.UnsupportedContentTypeException
com.caij.puremusic.drive.model.Metadata$Companion
com.umeng.analytics.pro.ba
com.tencent.bugly.proguard.al
com.umeng.commonsdk.config.e
nl.adaptivity.xmlutil.serialization.structure.XmlOrderNode$toString$1
com.tencent.mm.opensdk.modelmsg.WXAppLaunchData$Builder
com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport$Result
com.umeng.commonsdk.config.b$1
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyUrlLink
com.caij.puremusic.fragments.player.full.FullPlaybackControlsFragment$updateIsFavorite$1
io.ktor.client.engine.HttpClientEngineBase$coroutineContext$2
com.caij.puremusic.fragments.albums.AlbumsFragment$onShuffleClicked$1
com.caij.puremusic.drive.emby.EmbyEngine$getFolderSongs$1
com.caij.puremusic.fragments.player.full.FullPlayerFragment
com.thegrizzlylabs.sardineandroid.model.Set
com.thegrizzlylabs.sardineandroid.model.WriteAcl
com.umeng.analytics.MobclickAgent$PageMode
com.caij.puremusic.db.model.SongQueries$SongsByAlumIdQuery
com.caij.puremusic.drive.adrive.ADriveEngine$getRootFileId$2
com.caij.puremusic.drive.model.AlbumMetadata$$serializer
com.umeng.analytics.pro.u$1
org.jcodec.containers.mp4.WaveExtBoxes
kotlinx.coroutines.android.AndroidDispatcherFactory
com.caij.puremusic.activities.tageditor.AlbumTagEditorActivityV2$loadCurrentImage$1$1
com.tencent.mm.opensdk.modelbiz.WXChannelOpenLive
org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId$1
com.caij.puremusic.drive.model.Directory
com.caij.puremusic.db.model.ServerAudioFormatQueries$GetByIdQuery
kotlinx.coroutines.internal.ThreadContextKt$countAll$1
com.umeng.analytics.pro.av
com.tencent.mm.opensdk.diffdev.a.c
com.caij.puremusic.db.model.SongEntityQueries$GetPlayListSongCountQuery
com.google.android.material.internal.NavigationMenuView
org.jaudiotagger.audio.wav.WavCleaner$1
org.jaudiotagger.tag.id3.framebody.FrameBodyEQUA
org.simpleframework.xml.core.ClassScanner
com.caij.puremusic.drive.model.JellyfinFolder
com.caij.puremusic.db.model.SongQueries$allSongs$1
com.caij.puremusic.db.model.SongQueries$SongsByNameArtistQuery$execute$1
org.jaudiotagger.audio.asf.io.CountingInputStream
org.jaudiotagger.audio.wav.WavTagReader$1
org.simpleframework.xml.core.StructureBuilder
com.google.android.gms.common.api.GoogleApiActivity
com.google.android.exoplayer2.upstream.HttpDataSource$CleartextNotPermittedException
com.caij.puremusic.activities.tageditor.AlbumTagEditorActivityV2
com.caij.puremusic.fragments.folder.manager.MusicFolderUtil$showPathEdit$3$1$1
com.tencent.bugly.crashreport.BuglyHintException
com.thegrizzlylabs.sardineandroid.model.Response
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$2
code.name.monkey.appthemehelper.common.prefs.supportv7.ATEDialogPreference
com.google.common.hash.Murmur3_128HashFunction
android.support.v4.media.RatingCompat
com.caij.puremusic.fragments.base.AbsRecyclerViewFragment
com.caij.puremusic.helper.menu.GenreMenuHelper$handleMenuClick$1
com.caij.puremusic.helper.BackupHelper$restorePlaylists$1
com.google.common.io.Files$FilePredicate$2
com.caij.puremusic.helper.BackupHelper$zipAll$2$3$1
androidx.mediarouter.app.MediaRouteVolumeSlider
nl.adaptivity.xmlutil.serialization.XmlEncoderBase$TagEncoder$encodeSerializableElement$2
org.jaudiotagger.tag.id3.framebody.ID3v24FrameBody
com.caij.puremusic.drive.model.ADriveItem$Companion
org.jaudiotagger.audio.wav.WavOptions
com.umeng.commonsdk.internal.utils.f
code.name.monkey.appthemehelper.common.prefs.supportv7.dialogs.ATEListPreferenceDialogFragmentCompat
com.caij.puremusic.db.model.Folder$Adapter
org.simpleframework.xml.stream.NodeWriter
io.ktor.utils.io.ByteChannelSequentialBase$writeFully$2
org.simpleframework.xml.transform.ClassTransform
com.umeng.commonsdk.statistics.common.HelperUtils
com.caij.puremusic.db.model.ServerSongCoverQueries$GetByIdQuery
org.jaudiotagger.test.MergeID3AndMP3Files
org.jaudiotagger.tag.id3.reference.MediaPlayerRating
com.caij.puremusic.db.model.PlaybackSongQueries$clear$1
com.caij.puremusic.drive.onedrive.OneDriveEngine$getChildInner$1
com.caij.puremusic.fragments.settings.ImageSettingFragment
io.ktor.client.engine.UtilsKt$attachToUserJob$2
com.caij.puremusic.fragments.player.tiny.TinyPlayerFragment$updateSong$1$songInfo$1
org.jcodec.containers.mp4.boxes.EsdsBox$DecoderSpecific
com.umeng.commonsdk.stateless.d$5
com.caij.puremusic.util.ArtistUtil$sortedSongs$2
com.caij.puremusic.fragments.other.UserInfoFragment$selectBannerImage$1
com.caij.puremusic.db.model.HistoryEntityQueries$getById$1
com.caij.puremusic.fragments.player.flat.FlatPlaybackControlsFragment
com.caij.puremusic.db.model.SongQueries$SongsByArtistQuery$execute$1
com.umeng.commonsdk.config.d$a
com.tencent.bugly.proguard.ao$a
com.caij.puremusic.fragments.player.full.FullPlaybackControlsFragment$updateSong$1
com.caij.puremusic.helper.menu.PlaylistMenuHelper$handleMenuClick$4$1
com.caij.puremusic.db.model.SongEntityQueries$isSongExistsInPlaylist$2
com.caij.puremusic.drive.emby.EmbyEngine$getPlaylistSongs$1
com.umeng.analytics.vshelper.PageNameMonitor$1
com.afollestad.materialdialogs.internal.main.DialogLayout
com.umeng.analytics.CoreProtocol
org.simpleframework.xml.core.PrimitiveValue
kotlin.jvm.internal.PropertyReference1
com.tencent.bugly.proguard.aj
org.jaudiotagger.tag.id3.AbstractID3v2Tag$2
com.caij.puremusic.fragments.backup.BackupFragment$onBackupMenuClicked$1$1
com.google.common.collect.RegularImmutableList
org.simpleframework.xml.core.Decorator
com.caij.vip.PayInfo
com.caij.puremusic.fragments.player.gradient.GradientPlayerFragment$updateSong$1$songInfo$1
com.google.android.exoplayer2.upstream.FileDataSource$FileDataSourceException
com.google.android.material.bottomsheet.BottomSheetBehavior$StableState
org.jaudiotagger.tag.reference.GenreTypes
io.ktor.util.ByteChannelsKt$toByteArray$1
com.tencent.bugly.proguard.at
com.thegrizzlylabs.sardineandroid.util.ElementConverter
org.simpleframework.xml.core.Composite$Builder
com.caij.puremusic.network.model.TokenData
com.google.android.material.transformation.ExpandableBehavior
com.tencent.mm.opensdk.modelmsg.WXWeWorkObject
com.caij.puremusic.fragments.MusicSeekSkipTouchListener$onTouch$1
com.caij.puremusic.model.ArtworkInfo
kotlin.collections.State
com.caij.puremusic.fragments.folder.FoldersSettingFragment$onFileMenuClicked$2$2
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportWifiOnly
androidx.window.core.WindowStrictModeException
com.tencent.mm.opensdk.utils.b
com.caij.puremusic.db.model.ArtistQueries$artistById$1
com.umeng.commonsdk.debug.SelfChecker
org.jaudiotagger.utils.tree.DefaultMutableTreeNode
org.simpleframework.xml.transform.DateTransform
com.caij.puremusic.db.model.ServerArtistCoverQueries$GetByIdQuery$execute$1
com.google.android.material.timepicker.ClockHandView
com.caij.puremusic.adapter.album.AlbumAdapter$onMultipleItemAction$1
org.jaudiotagger.audio.generic.TagWriter
org.jaudiotagger.tag.id3.AbstractTagItem
com.tencent.mm.opensdk.modelbiz.SubscribeMiniProgramMsg$Req
org.simpleframework.xml.core.RootException
com.caij.puremusic.db.model.PlayCountEntityQueries
org.simpleframework.xml.core.Introspector
com.tencent.mm.opensdk.modelbiz.SubscribeMessage$Resp
com.bumptech.glide.request.RequestCoordinator$RequestState
com.alipay.android.phone.mrpc.core.ab
org.simpleframework.xml.core.LabelGroup
androidx.core.app.CoreComponentFactory
com.caij.puremusic.drive.webdav.WebDAVDriveEngine$getFiles$1
com.caij.puremusic.fragments.folder.manager.MusicFolderUtil$addFolder$1
com.google.android.exoplayer2.metadata.id3.InternalFrame
org.jaudiotagger.audio.aiff.chunk.AiffChunkReader
org.jaudiotagger.audio.asf.io.ContentBrandingReader
org.simpleframework.xml.core.MethodPart
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessView$Resp
com.alipay.apmobilesecuritysdk.face.TMNTokenClient
com.caij.puremusic.db.model.ServerArtistCoverQueries
com.google.gson.internal.LazilyParsedNumber
com.caij.puremusic.drive.jellyfin.AuthorizationHeaderBuilder$buildHeader$2
com.caij.puremusic.views.insets.InsetsRecyclerView$1$1
nl.adaptivity.xmlutil.serialization.XmlEncoderBase$TagEncoder$doWriteAttribute$deferred$1
com.caij.puremusic.fragments.folder.manager.MusicFolderManagerFragment$showLongDialog$1$2
com.caij.puremusic.MainModuleKt$autoModule$1$1
org.jaudiotagger.audio.io.FileOperator
androidx.appcompat.widget.AppCompatImageButton
com.umeng.analytics.pro.a$a
com.google.android.gms.common.api.internal.BasePendingResult
com.tencent.mm.opensdk.diffdev.a.c$a
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder
org.jaudiotagger.tag.id3.framebody.FrameBodyTCOM
org.jaudiotagger.audio.wav.WavTagReader
com.caij.puremusic.service.MusicService$restoreState$1
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessView
com.tencent.mm.opensdk.modelmsg.WXEnterpriseCardObject
com.tencent.mm.opensdk.constants.ConstantsAPI$WXApp
com.caij.puremusic.service.MusicService$onSharedPreferenceChanged$2
com.caij.puremusic.db.model.SongQueries$SongQuery$execute$1
org.jaudiotagger.audio.asf.data.MetadataDescriptor
io.ktor.utils.io.internal.AwaitingSlot$trySuspend$1
com.tencent.mm.opensdk.modelbiz.CreateChatroom
com.google.common.hash.BloomFilterStrategies$1
com.caij.puremusic.db.model.AlbumQueries$AlbumQuery
com.tencent.mm.opensdk.modelbiz.WXPayInsurance$Req
com.google.android.material.bottomsheet.BottomSheetBehavior$1
org.jaudiotagger.audio.asf.io.ModificationResult
org.simpleframework.xml.core.ClassSchema
com.caij.puremusic.MainModuleKt$autoModule$1
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMR
com.umeng.analytics.pro.ce
com.caij.puremusic.db.model.Song
org.jaudiotagger.audio.mp3.VbriFrame
com.caij.puremusic.db.model.SongEntityQueries$GetPlaylistLastAddSongQuery
com.caij.puremusic.MainModuleKt$dataModule$1$1
com.caij.puremusic.service.MusicService$updateFavoriteReceiver$1$onReceive$1$1
com.caij.puremusic.drive.model.DropboxDriveItem$Companion
com.umeng.analytics.pro.k
io.ktor.http.URLUtilsKt$appendUrlFullPath$2
com.caij.puremusic.fragments.artists.AlbumArtistDetailsFragment$detailsViewModel$2
com.yalantis.ucrop.view.OverlayView
org.koin.core.error.ScopeAlreadyCreatedException
com.tencent.mm.opensdk.diffdev.IDiffDevOAuth
com.caij.puremusic.fragments.LibraryViewModel$deleteSongsFromPlaylist$1
com.thegrizzlylabs.sardineandroid.model.WriteProperties
org.simpleframework.xml.core.Collector$1
com.caij.puremusic.MainModuleKt$roomModule$1$13
org.jaudiotagger.audio.asf.data.EncodingChunk
io.ktor.client.plugins.HttpTimeout$Plugin$install$1$1$killer$1
com.tencent.bugly.proguard.ai
com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException
com.google.android.material.bottomsheet.BottomSheetBehavior
com.thegrizzlylabs.sardineandroid.model.ReadAcl
org.jaudiotagger.audio.dsf.DsdChunk
org.jaudiotagger.audio.wav.chunk.WavId3Chunk
com.umeng.analytics.pro.ci
com.tencent.bugly.proguard.ac
org.jaudiotagger.tag.mp4.field.Mp4TrackField
org.jaudiotagger.tag.lyrics3.Lyrics3v2Field
com.caij.puremusic.activities.tageditor.SongTagEditorActivityV2$writeToFiles$2$songPaths$1
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior
com.thegrizzlylabs.sardineandroid.model.UnBind
org.jaudiotagger.audio.asf.io.ChunkModifier
com.afollestad.materialdialogs.internal.button.DialogActionButton$update$1
com.caij.puremusic.MainModuleKt$roomModule$1
com.caij.puremusic.fragments.base.AbsMainActivityFragment
com.google.android.gms.internal.play_billing.zzbg
com.caij.puremusic.MainModuleKt$dataModule$1$4
com.caij.puremusic.db.model.PlayCountEntityQueries$playCountSongs$1
com.caij.puremusic.drive.model.Directory$Companion
com.caij.puremusic.fragments.player.full.FullPlayerFragment$updateArtistImage$1
com.afollestad.materialdialogs.color.DialogColorChooserExtKt$colorChooser$2
com.caij.puremusic.drive.model.Collection$$serializer
org.simpleframework.xml.stream.HyphenBuilder$Parser
com.caij.puremusic.preferences.AlbumCoverStylePreferenceDialog
org.simpleframework.xml.core.Expression
com.caij.puremusic.drive.model.ADriveItem
com.umeng.commonsdk.statistics.proto.b$1
com.caij.puremusic.db.model.SongQueries$SongByPathQuery
org.simpleframework.xml.strategy.Name
com.caij.puremusic.dialogs.RemoveSongFromPlaylistDialog$special$$inlined$sharedViewModel$default$2
com.tencent.mm.opensdk.modelbiz.JoinChatroom$Req
kotlin.SafePublicationLazyImpl
com.caij.puremusic.db.model.ServerLyricsQueries$insert$2
com.tencent.mm.opensdk.modelbiz.WXLaunchWxaRedirectingPage$ConstantsWxaRedirectingPage
com.caij.puremusic.db.model.PlaybackSongQueries$GetPlaybacksByTypeQuery$execute$1
androidx.lifecycle.SavedStateHandlesProvider$viewModel$2
org.jaudiotagger.tag.datatype.EventTimingCode
com.caij.puremusic.activities.bugreport.BugReportActivity
androidx.fragment.app.strictmode.FragmentStrictMode$Flag
com.caij.puremusic.adapter.song.OrderablePlaylistSongAdapter$special$$inlined$viewModel$default$1
com.caij.puremusic.drive.adrive.ADriveEngine$getFiles$1
org.simpleframework.xml.stream.Verbosity
com.alipay.tscenter.biz.rpc.vkeydfp.result.BaseResult
org.jaudiotagger.tag.images.ArtworkFactory
com.caij.puremusic.activities.MainActivity
com.caij.puremusic.db.model.SongQueries$SongsByInfoQuery$execute$1
com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker
com.tencent.bugly.proguard.as$3
com.caij.puremusic.db.model.SongQueries$getSongBySource$2
com.caij.puremusic.db.model.SongQueries$GetArtistSongCountQuery
com.caij.puremusic.App
com.thegrizzlylabs.sardineandroid.model.SupportedReport
com.caij.puremusic.fragments.folder.manager.MusicFolderUtil$addFolder$1$1
com.thegrizzlylabs.sardineandroid.impl.handler.ExistsResponseHandler
com.umeng.analytics.pro.bp
com.umeng.analytics.pro.bf
com.caij.puremusic.db.model.DriveFileDownUrlInfo
org.simpleframework.xml.core.InstanceFactory$ClassInstance
androidx.appcompat.widget.ActionBarContainer
com.umeng.commonsdk.statistics.proto.e$b
com.google.android.gms.common.internal.zzj
androidx.constraintlayout.core.SolverVariable$Type
com.caij.puremusic.drive.model.JellyfinArtistResponse$$serializer
com.umeng.analytics.process.UMProcessDBDatasSender$1
org.jaudiotagger.audio.SupportedFileFormat$1
nl.adaptivity.xmlutil.serialization.CompactFragmentSerializer$descriptor$1
com.google.android.exoplayer2.metadata.mp4.SlowMotionData
com.tencent.mm.opensdk.diffdev.a.a$a$a
androidx.gridlayout.widget.GridLayout
com.caij.puremusic.util.SongAuthUtil$downServerLyrics$1
com.caij.puremusic.fragments.player.tiny.TinyPlaybackControlsFragment
com.caij.puremusic.db.model.SongEntityQueries$GetSongEntityQuery$execute$1
com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException
code.name.monkey.appthemehelper.common.prefs.supportv7.ATEPreference
com.caij.puremusic.fragments.artists.ArtistsFragment$loadData$1$1
com.google.common.io.Files$FilePredicate$1
com.caij.puremusic.glide.MusicGlideModule
org.jaudiotagger.tag.TagNotFoundException
com.caij.puremusic.fragments.settings.AbsSettingsFragment$onViewCreated$1
com.caij.puremusic.helper.menu.GenreMenuHelper$handleMenuClick$1$1
org.simpleframework.xml.core.Variable$Adapter
org.jaudiotagger.audio.asf.util.TagConverter
com.caij.puremusic.model.smartplaylist.TopTracksPlaylist$Creator
nl.adaptivity.xmlutil.EventType$START_DOCUMENT
androidx.preference.PreferenceFragmentCompat
org.simpleframework.xml.stream.NamespaceMap
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdTypeCountQuery$execute$1
org.jaudiotagger.audio.opus.OpusVorbisTagWriter
org.koin.core.error.ClosedScopeException
android.support.v4.media.MediaMetadataCompat
com.google.android.gms.internal.play_billing.zza
org.jaudiotagger.tag.datatype.PairedTextEncodedStringNullTerminated$ValuePairs
com.umeng.commonsdk.statistics.idtracking.f
com.alipay.tscenter.biz.rpc.vkeydfp.result.AppListCmdResult
io.ktor.utils.io.ByteBufferChannel$readAvailableSuspend$3
com.caij.puremusic.drive.model.AMediaContainer
com.caij.puremusic.MainModuleKt$roomModule$1$5
org.jaudiotagger.tag.id3.framebody.FrameBodyTDEN
com.umeng.commonsdk.statistics.proto.c$a
com.caij.puremusic.fragments.player.md3.MD3PlaybackControlsFragment$updateSong$1$songInfo$1
com.caij.puremusic.fragments.lyrics.ComnLyricsFragment$editSyncedLyrics$1$2
com.caij.puremusic.dialogs.DeleteSongsDialog$onCreateDialog$1
com.caij.puremusic.drive.model.BaiduFileResponse$$serializer
androidx.core.app.RemoteActionCompat
com.caij.puremusic.drive.model.DropboxDriveFileResponse$$serializer
com.caij.puremusic.activities.tageditor.SongTagEditorActivityV2
androidx.fragment.app.strictmode.FragmentReuseViolation
org.jaudiotagger.audio.generic.AbstractTagCreator
com.tencent.mmkv.MMKVRecoverStrategic
nl.adaptivity.xmlutil.serialization.DefaultXmlSerializationPolicy$effectiveName$1
com.caij.puremusic.fragments.albums.AlbumDetailsFragment$handleSortOrderMenuItem$1
com.caij.puremusic.db.model.PlaylistEntityQueries$deleteById$1
org.simpleframework.xml.core.ObjectScanner
org.jcodec.containers.mp4.Boxes
org.simpleframework.xml.core.ElementListParameter$Contact
com.caij.vip.PayInfoResponse
com.thegrizzlylabs.sardineandroid.model.Property$PropertyConverter
com.umeng.analytics.pro.ar
org.simpleframework.xml.strategy.Strategy
com.yalantis.ucrop.view.GestureCropImageView
com.caij.puremusic.drive.model.AMediaContainer$$serializer
com.tencent.bugly.proguard.bs
org.jaudiotagger.audio.wav.WavFileReader
nl.adaptivity.xmlutil.serialization.structure.XmlPolymorphicDescriptor$children$2
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgramEnvironment$Req
com.caij.puremusic.activities.tageditor.SongTagEditorActivityV2$loadCurrentImage$1$1
org.jaudiotagger.tag.id3.ID3v22Frame
androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType
com.caij.puremusic.fragments.artists.ArtistsFragment$loadData$1
io.ktor.client.engine.UtilsKt$mergeHeaders$2
com.caij.puremusic.dialogs.PlaybackSpeedDialog
com.tencent.mm.opensdk.modelbase.BaseReq
org.simpleframework.xml.transform.TransformException
com.umeng.analytics.pro.a$a$a
com.caij.puremusic.fragments.folder.FoldersFragment$onFileSelected$1$1$1$1$1
com.caij.puremusic.drive.model.ParentReference$Companion
com.google.android.material.transformation.FabTransformationBehavior
org.simpleframework.xml.transform.StringTransform
org.jaudiotagger.audio.SupportedFileFormat$11
com.caij.puremusic.db.model.ServerAudioFormatQueries$GetByIdQuery$execute$1
com.google.android.gms.common.ConnectionResult
org.jcodec.containers.mp4.boxes.MP4ABox
org.jaudiotagger.audio.SupportedFileFormat$6
com.umeng.commonsdk.statistics.common.ULog
com.caij.puremusic.fragments.folder.DriveFilesFragment$onFileClicked$1$1
com.caij.puremusic.model.Contributor
org.repackage.com.meizu.flyme.openidsdk.SupportInfo
com.alipay.tscenter.biz.rpc.vkeydfp.result.DeviceDataReportResult
com.tencent.mmkv.MMKVLogLevel
com.caij.puremusic.db.model.ServerLyricsQueries$deleteById$2
com.afollestad.materialdialogs.color.view.PreviewFrameView
org.jaudiotagger.tag.images.ImageHandler
io.ktor.client.engine.HttpClientEngine$executeWithinCallContext$1
com.caij.puremusic.network.model.LastFmAlbum$Album$Tag
org.simpleframework.xml.stream.Attribute
com.caij.puremusic.fragments.player.fit.FitPlaybackControlsFragment$updateSong$1
org.koin.core.instance.ScopedInstanceFactory$get$1
com.alipay.android.phone.mrpc.core.q
org.jaudiotagger.audio.asf.data.VideoStreamChunk
kotlin.NotImplementedError
com.thegrizzlylabs.sardineandroid.model.Omit
com.thegrizzlylabs.sardineandroid.model.ReadCurrentUserPrivilegeSet
org.jaudiotagger.tag.id3.ID3v24PreferredFrameOrderComparator
app.cash.sqldelight.driver.android.AndroidSqliteDriver$executeQuery$2
org.jaudiotagger.audio.mp3.LameFrame
com.umeng.analytics.pro.an$e
com.caij.puremusic.drive.onedrive.OneDriveEngine$getRootFile$1
com.caij.puremusic.service.MusicService$onStartCommand$1
androidx.legacy.widget.Space
com.umeng.commonsdk.utils.c
com.tencent.bugly.proguard.ab$1
org.jaudiotagger.audio.exceptions.CannotWriteException
com.caij.puremusic.db.model.SongQueries$songsByTitle$1
com.caij.puremusic.drive.model.BaiduDriveItem$$serializer
com.caij.puremusic.fragments.backup.RestoreActivity$special$$inlined$viewModels$default$1
org.jaudiotagger.tag.id3.framebody.FrameBodyWOAF
com.github.dhaval2404.imagepicker.constant.ImageProvider
io.ktor.client.engine.okhttp.OkHttpEngine$execute$1
com.caij.puremusic.drive.model.AlbumItem
com.umeng.commonsdk.statistics.internal.StatTracer$1
com.umeng.commonsdk.stateless.d$1
com.umeng.analytics.pro.cg
com.google.android.material.textfield.TextInputLayout
io.ktor.client.plugins.HttpSend$Plugin$install$1
io.ktor.utils.io.CoroutinesKt$launchChannel$job$1
kotlinx.coroutines.channels.ClosedReceiveChannelException
org.jaudiotagger.tag.id3.framebody.FrameBodyTCON
org.simpleframework.xml.core.MethodDetail
org.simpleframework.xml.core.Support
com.caij.puremusic.fragments.player.fit.FitPlaybackControlsFragment$updateSong$1$songInfo$1
org.jaudiotagger.tag.mp4.Mp4TagCreator
kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$2
com.caij.puremusic.db.model.ServerSongCoverQueries$deleteById$1
com.caij.puremusic.MainModuleKt$mainModule$1$2
org.jaudiotagger.tag.id3.framebody.FrameBodyTOWN
com.thegrizzlylabs.sardineandroid.model.Limit
com.google.common.hash.BloomFilterStrategies$2
org.simpleframework.xml.strategy.Visitor
com.caij.puremusic.db.model.Album$Adapter
io.ktor.http.BadContentTypeFormatException
com.caij.puremusic.drive.model.AlbumResponse
com.umeng.commonsdk.UMConfigure$1
com.caij.puremusic.MainModuleKt$roomModule$1$3
androidx.window.core.Version$bigInteger$2
org.jaudiotagger.tag.id3.AbstractID3v2Tag$FrameAndSubId
org.jaudiotagger.tag.lyrics3.FieldFrameBodyETT
com.caij.puremusic.dialogs.RemoveSongFromPlaylistDialog$special$$inlined$sharedViewModel$default$1
androidx.appcompat.widget.AppCompatCheckBox
org.jcodec.containers.mp4.boxes.VideoMediaHeaderBox
javax.xml.namespace.NamespaceContext
com.umeng.commonsdk.internal.utils.d
com.tencent.bugly.proguard.as
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessView$Req
com.caij.puremusic.db.model.SongQueries$SongQuery
androidx.window.layout.SidecarAdapter$translate$checkedFeature$2
com.google.android.material.bottomsheet.BottomSheetBehavior$State
org.jaudiotagger.audio.exceptions.InvalidBoxHeaderException
com.caij.puremusic.model.DriveFileParcelable
com.caij.puremusic.db.model.ArtistQueries$SearchArtistByNameQuery
org.jaudiotagger.audio.aiff.AiffFileReader
androidx.fragment.app.strictmode.SetTargetFragmentUsageViolation
org.jaudiotagger.tag.id3.framebody.FrameBodyCHAP
org.jaudiotagger.tag.lyrics3.FieldFrameBodyEAR
com.caij.puremusic.drive.model.ImageTags
com.caij.puremusic.db.model.SongQueries$songsByAlbumId$2
com.caij.puremusic.db.model.SongQueries$deleteSongBySource$2
com.caij.puremusic.fragments.folder.FoldersSettingFragment$onFileMenuClicked$1$2
org.jaudiotagger.tag.id3.valuepair.ID3NumberTotalFields
com.tencent.mm.opensdk.modelmsg.GetMessageFromWX$Resp
com.caij.puremusic.drive.subsonic.SubsonicEngine$getMediaInfo$1
com.umeng.analytics.b$1
org.jaudiotagger.tag.id3.AbstractTagFrameBody
com.umeng.commonsdk.internal.utils.InfoPreferenceAgent
com.caij.puremusic.network.model.LastFmArtist$Artist$Image
com.bumptech.glide.load.ImageHeaderParser$ImageType
com.caij.puremusic.db.model.SongQueries$deleteSongBySource$1
com.caij.puremusic.activities.tageditor.AbsTagEditorActivity$writeTags$1
com.caij.puremusic.drive.model.DropboxDriveItem$$serializer
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3
org.jaudiotagger.audio.asf.data.MetadataContainer$DescriptorPointer
com.alipay.android.phone.mrpc.core.n
com.umeng.commonsdk.internal.utils.c
com.umeng.analytics.pro.cd
io.ktor.client.content.ObservableContent$content$1
com.tencent.bugly.crashreport.CrashReport$a
com.google.android.gms.internal.play_billing.zzax
com.tencent.mm.opensdk.modelmsg.WXDynamicVideoMiniProgramObject
com.caij.vip.AppGood
com.google.common.base.Predicates$ObjectPredicate$3
com.caij.puremusic.util.HttpUtil$httpClient$1$2
com.tencent.vasdolly.common.apk.SignatureNotFoundException
com.umeng.analytics.Gender$4
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey
com.caij.puremusic.db.model.SongQueries$clear$1
org.simpleframework.xml.core.ExtractorFactory
androidx.appcompat.widget.ActivityChooserView$InnerLayout
org.koin.core.definition.Kind
io.ktor.client.plugins.HttpPlainText$Plugin$install$2
org.jaudiotagger.audio.wav.chunk.WavFormatChunk
com.google.android.material.transformation.FabTransformationScrimBehavior
com.tencent.mm.opensdk.channel.a.a$a
com.caij.puremusic.drive.model.OneDriveFile
com.caij.puremusic.drive.onedrive.OneDriveEngine$getDefaultUrl$1
org.simpleframework.xml.stream.StreamReader$Text
com.caij.puremusic.MainModuleKt$roomModule$1$11
com.google.common.reflect.Types$JavaVersion$1
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgram$Req
com.tencent.mm.opensdk.openapi.IWXAPIEventHandler
com.caij.puremusic.dialogs.AddToPlaylistDialog$onCreateDialog$$inlined$extraNotNull$default$1
org.jaudiotagger.audio.exceptions.ModifyVetoException
org.simpleframework.xml.core.Label
com.tencent.mm.opensdk.modelbiz.ChooseCardFromWXCardPackage
com.caij.puremusic.util.CustomSongImageUtil$setCustomSongImage$2
androidx.preference.EditTextPreference$SavedState
com.caij.puremusic.drive.model.Prop$$serializer
com.caij.puremusic.db.model.ServerLyricsQueries$getById$2
com.google.android.material.internal.CheckableImageButton
kotlin.TypeCastException
com.caij.puremusic.activities.base.AbsSlidingMusicPanelActivity$bottomSheetCallbackList$2
android.support.v4.media.MediaDescriptionCompat
com.tencent.mm.opensdk.modelpay.JumpToOfflinePay$Req
org.jaudiotagger.tag.id3.framebody.FrameBodyRBUF
com.umeng.commonsdk.internal.utils.a$a
com.umeng.commonsdk.UMConfigureInternation
com.caij.puremusic.repository.SyncSongRepository$sortedSongs$5
com.alipay.android.phone.mrpc.core.a.e
androidx.appcompat.widget.SearchView$SearchAutoComplete
com.google.android.material.button.MaterialButton$SavedState
kotlinx.serialization.json.JsonElementSerializer$descriptor$1
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine$AuthenticationInterceptor
com.caij.puremusic.db.model.PlaybackSongQueries
org.simpleframework.xml.stream.Style
nl.adaptivity.xmlutil.serialization.OutputKind$Text
com.umeng.commonsdk.statistics.idtracking.j
org.jaudiotagger.tag.images.AndroidArtwork
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException
io.ktor.utils.io.ByteChannelSequentialBase$awaitSuspend$1
androidx.media.AudioAttributesImplBase
org.simpleframework.xml.transform.EmptyMatcher
com.bumptech.glide.GeneratedAppGlideModuleImpl
org.jaudiotagger.audio.SupportedFileFormat$14
nl.adaptivity.xmlutil.EventType$CDSECT
org.simpleframework.xml.strategy.Type
com.caij.puremusic.fragments.backup.BackupFragment$special$$inlined$viewModels$default$1
com.caij.puremusic.service.MusicService$deleteCacheUrl$1
com.tencent.mm.opensdk.modelmsg.WXEmojiObject
org.jaudiotagger.tag.images.StandardImageHandler
org.simpleframework.xml.core.InstantiatorBuilder
com.caij.puremusic.db.model.SearchAlbumResultQueries$insert$2
com.tencent.bugly.proguard.bj
com.caij.puremusic.MainModuleKt$roomModule$1$14
io.ktor.client.plugins.BodyProgress$handle$2
com.google.gson.FieldNamingPolicy$2
nl.adaptivity.xmlutil.util.impl.FragmentNamespaceContext$getPrefixesCompat$2
org.simpleframework.xml.ElementMapUnion
kotlin.collections.builders.SetBuilder
org.jaudiotagger.tag.datatype.TempoCode
org.jaudiotagger.tag.asf.AsfTag$1
com.umeng.commonsdk.statistics.proto.Response$b
com.caij.puremusic.fragments.player.cardblur.CardBlurPlaybackControlsFragment$updateSong$1
com.umeng.analytics.pro.s
com.bumptech.glide.load.engine.CallbackException
org.simpleframework.xml.core.ArrayFactory
org.jaudiotagger.audio.asf.util.Utils
org.simpleframework.xml.convert.Scanner
org.jaudiotagger.test.TestAudioTagger
com.umeng.analytics.pro.bm
com.umeng.commonsdk.statistics.proto.e$e
com.caij.puremusic.service.MusicService$handleChangeInternal$4
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$deleteById$2
org.jcodec.containers.mp4.boxes.CompositionOffsetsBox$LongEntry
com.caij.puremusic.fragments.songs.SongsFragment
com.caij.puremusic.service.MusicService$setPosition$1
com.umeng.analytics.pro.ap
org.jaudiotagger.tag.datatype.NumberVariableLength
com.caij.puremusic.db.model.ServerArtistCoverQueries$clear$1
com.caij.puremusic.service.MusicService$playFromPlaylist$1$1
com.tencent.bugly.proguard.m
org.jaudiotagger.tag.datatype.Lyrics3Line
org.koin.core.error.NoParameterFoundException
com.caij.puremusic.fragments.other.UserInfoFragment$saveImage$2$2
com.thegrizzlylabs.sardineandroid.model.Shared
com.caij.vip.PayBody
com.caij.easypermissions.PermissionFragment
com.alipay.tscenter.biz.rpc.vkeydfp.request.AppListCmdRequest
com.google.gson.JsonParseException
com.umeng.commonsdk.service.UMGlobalContext
com.caij.puremusic.fragments.lyrics.ComnLyricsFragment$LyricsType
com.google.common.collect.MapMakerInternalMap$Strength$2
org.simpleframework.xml.NamespaceList
com.caij.puremusic.drive.model.EmbyFoldersResponse$Companion
com.caij.puremusic.drive.model.SongItem$$serializer
org.jaudiotagger.audio.mp4.Mp4InfoReader
com.caij.puremusic.drive.model.Multistatus
com.google.android.material.appbar.CollapsingToolbarLayout
com.caij.puremusic.activities.LicenseActivity
org.simpleframework.xml.core.Persist
com.caij.puremusic.MainModuleKt$viewModules$1$3
io.ktor.util.CaseInsensitiveMap$keys$1
com.alipay.apmobilesecuritysdk.face.APSecuritySdk$TokenResult
com.caij.puremusic.fragments.player.card.CardFragment
kotlin.coroutines.jvm.internal.BaseContinuationImpl
io.ktor.client.engine.okhttp.OkHttpEngine$executeHttpRequest$1
com.umeng.common.AnalyticsSdkVersion
androidx.lifecycle.LifecycleCoroutineScope$launchWhenStarted$1
com.caij.puremusic.fragments.genres.GenreDetailsFragment$special$$inlined$viewModel$default$1
org.jaudiotagger.tag.id3.framebody.FrameBodyPOSS
com.alipay.android.phone.mrpc.core.ad
com.alipay.android.phone.mrpc.core.o
com.alipay.android.phone.mrpc.core.j
kotlinx.serialization.PolymorphicSerializer$descriptor$2$1
com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList
androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState
com.caij.puremusic.drive.model.OneDriveFolder
androidx.lifecycle.RepeatOnLifecycleKt$repeatOnLifecycle$3$1$1$1
kotlinx.coroutines.internal.StackTraceRecoveryKt
com.tencent.mm.opensdk.channel.MMessageActV2$Args
org.jcodec.containers.mp4.boxes.TimecodeSampleEntry
org.simpleframework.xml.Text
com.caij.puremusic.fragments.playlists.PlaylistDetailsFragment$loadData$1$3
kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$4
com.google.android.gms.internal.play_billing.zzch
com.bumptech.glide.load.HttpException
org.jaudiotagger.audio.ogg.OggVorbisCommentTagCreator
nl.adaptivity.xmlutil.serialization.structure.XmlTypeDescriptor$children$2
androidx.fragment.app.Fragment$SavedState
com.caij.puremusic.MainModuleKt$networkModule$1$4
com.google.common.collect.Maps$EntryFunction
org.jcodec.containers.mp4.boxes.Box
com.caij.puremusic.adapter.album.AlbumCoverPagerAdapter$AlbumCoverFragment$showLyricsDialog$1
org.simpleframework.xml.core.LabelKey
org.simpleframework.xml.core.Extractor
com.umeng.commonsdk.framework.a$2
org.jaudiotagger.audio.generic.AbstractTag$1
com.afollestad.materialdialogs.color.DialogColorChooserExtKt$setupCustomPage$3
com.caij.puremusic.fragments.player.peek.PeekPlayerFragment
com.caij.vip.DonatedActivity
com.caij.puremusic.drive.model.Type
com.umeng.vt.diff.Channel$1
com.caij.puremusic.fragments.player.color.ColorPlaybackControlsFragment
io.ktor.client.plugins.HttpRequestLifecycle$Plugin$install$1
org.simpleframework.xml.core.TemplateParameter
androidx.lifecycle.WithLifecycleStateKt$suspendWithStateAtLeastUnchecked$2$observer$1
org.jcodec.containers.mp4.boxes.SoundMediaHeaderBox
com.umeng.analytics.pro.bh
com.caij.puremusic.db.model.PlaylistEntityQueries$GetPlaylistEntityByIdQuery$execute$1
com.caij.puremusic.drive.model.MediaContainer$$serializer
com.umeng.analytics.pro.aq
org.jaudiotagger.tag.id3.ID3v24Frame$StatusFlags
android.support.v4.media.session.PlaybackStateCompat
com.caij.puremusic.drive.model.PlexSectionsResponse$Companion
com.umeng.commonsdk.internal.utils.g
kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1
com.google.common.reflect.TypeToken$TypeFilter
com.google.android.exoplayer2.video.MediaCodecVideoDecoderException
com.caij.puremusic.db.model.ServerSongCoverQueries$insert$1
org.jaudiotagger.audio.dsf.DsfChunkType
com.umeng.analytics.vshelper.b
org.simpleframework.xml.stream.CamelCaseBuilder$Attribute
com.caij.puremusic.preferences.DurationPreference
com.caij.puremusic.util.ArtistUtil$sortedSongs$1
com.caij.puremusic.db.model.PlaylistEntityQueries$deleteById$2
com.google.android.material.bottomsheet.BottomSheetBehavior$3
com.alipay.sdk.app.APayEntranceActivity
org.jaudiotagger.audio.asf.data.FileHeader
androidx.gridlayout.widget.GridLayout$Assoc
com.alipay.apmobilesecuritysdk.c.a
app.cash.sqldelight.driver.android.AndroidQuery$bindString$1
com.google.android.exoplayer2.audio.DefaultAudioSink$InvalidAudioTrackTimestampException
retrofit2.KotlinExtensions$suspendAndThrow$1
com.caij.puremusic.drive.google.GoogleDriveEngine$getChild$1
com.umeng.analytics.pro.g
org.slf4j.Marker
androidx.window.layout.SafeWindowLayoutComponentProvider$isWindowLayoutComponentValid$1
org.simpleframework.xml.core.LabelMap
com.caij.puremusic.fragments.albums.AlbumDetailsFragment$handleSortOrderMenuItem$1$1
com.caij.puremusic.fragments.albums.AlbumsFragment
nl.adaptivity.xmlutil.DomWriter$close$1
com.caij.puremusic.fragments.player.full.FullPlaybackControlsFragment$special$$inlined$sharedViewModel$default$2
org.simpleframework.xml.core.SignatureScanner
org.simpleframework.xml.core.ModelAssembler
androidx.preference.ListPreferenceDialogFragmentCompat
com.caij.puremusic.util.theme.ThemeMode
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2
org.simpleframework.xml.stream.CamelCaseBuilder$1
com.caij.puremusic.activities.tageditor.AlbumTagEditorActivity$bindingInflater$1
com.umeng.analytics.pro.e$d$b
org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistSaveOptions
com.umeng.vt.diff.V
com.caij.puremusic.MainModuleKt$viewModules$1$5
com.caij.puremusic.db.model.SongQueries
com.caij.puremusic.db.model.FolderQueries$deleteById$2
com.umeng.analytics.pro.a
com.afollestad.materialdialogs.internal.message.DialogContentLayout$frameHorizontalMargin$2
com.umeng.commonsdk.statistics.noise.Defcon
com.tencent.mm.opensdk.modelbiz.OpenWebview$Resp
com.caij.puremusic.model.CategoryInfo
androidx.customview.view.AbsSavedState
com.thegrizzlylabs.sardineandroid.model.QuotaUsedBytes
com.afollestad.materialdialogs.internal.main.DialogScrollView
io.ktor.util.CaseInsensitiveMap$entries$2
com.caij.puremusic.fragments.albums.AlbumDetailsFragment$setSaveSortOrder$1$1
com.caij.puremusic.fragments.folder.FoldersSettingFragment$onFileMenuClicked$1$1$1
com.google.android.material.internal.ParcelableSparseArray
com.thegrizzlylabs.sardineandroid.model.Activelock
io.ktor.client.plugins.contentnegotiation.ContentNegotiation$convertRequest$serializedContent$2
org.jcodec.containers.mp4.boxes.FielExtension
com.caij.puremusic.fragments.home.HomeFragment$loadSections$1
com.afollestad.materialdialogs.internal.rtl.RtlTextView
org.simpleframework.xml.stream.Format
com.caij.puremusic.drive.model.AlbumArtist$$serializer
io.ktor.client.call.HttpClientCall$bodyNullable$1
com.caij.puremusic.drive.model.OneDriveFolder$$serializer
org.jaudiotagger.audio.opus.OpusFileReader
io.ktor.client.engine.okhttp.OkHttpEngine$dispatcher$2
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$BreadthFirstEnumeration$Queue
org.jaudiotagger.tag.id3.framebody.FrameBodyTENC
kotlin.collections.EmptySet
com.google.common.hash.LittleEndianByteArray$UnsafeByteArray$1
com.alipay.android.phone.mrpc.core.s
com.caij.puremusic.drive.model.PlayLists$$serializer
com.caij.puremusic.db.model.AlbumQueries$searchAlbumsByName$2
com.umeng.analytics.pro.w
com.umeng.analytics.pro.bx
com.umeng.analytics.pro.ad$b
org.jaudiotagger.audio.generic.Permissions
com.google.android.material.datepicker.MaterialTextInputPicker
org.jaudiotagger.audio.mp4.Mp4AudioHeader
com.caij.puremusic.model.smartplaylist.TopTracksPlaylist
com.caij.puremusic.fragments.base.AbsPlayerFragment$special$$inlined$sharedViewModel$default$1
com.umeng.analytics.pro.e$c
com.google.gson.FieldNamingPolicy$3
com.caij.puremusic.drive.google.GoogleDriveEngine$getChildInner$1
com.google.common.hash.Funnel
org.repackage.com.heytap.openid.sdk.OpenIDSDK
com.caij.puremusic.fragments.genres.GenreDetailsFragment$special$$inlined$viewModel$default$2
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
org.jaudiotagger.utils.tree.TreePath
org.jaudiotagger.tag.id3.framebody.FrameBodyTPUB
org.jaudiotagger.audio.ogg.util.VorbisPacketType
com.umeng.commonsdk.UMInnerImpl$1
org.jaudiotagger.tag.mp4.field.Mp4FieldType
org.jaudiotagger.audio.asf.data.StreamChunk
com.thegrizzlylabs.sardineandroid.DavResource
org.simpleframework.xml.core.Qualifier
com.umeng.analytics.pro.j
com.tencent.mm.opensdk.modelbiz.SubscribeMiniProgramMsg
com.caij.puremusic.drive.model.Location
com.heinrichreimersoftware.materialintro.slide.SimpleSlide$SimpleSlideFragment
com.caij.puremusic.drive.plex.PlexEngine$getFolderSongs$1
com.caij.puremusic.helper.BackupHelper$restoreBackup$2$2
org.jaudiotagger.tag.datatype.AbstractValuePair
org.jcodec.containers.mp4.boxes.FullBox
androidx.fragment.app.DialogFragment
androidx.loader.content.ModernAsyncTask$Status
com.caij.puremusic.db.model.SongQueries$firstSongByAlbumId$2
com.google.common.collect.Multimaps$CustomListMultimap
org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile
org.jaudiotagger.tag.reference.PictureTypes
com.google.common.collect.ImmutableList
org.jaudiotagger.tag.id3.ID3v23PreferredFrameOrderComparator
com.caij.puremusic.db.model.ServerLyricsQueries$GetByIdQuery
org.jaudiotagger.audio.asf.data.GUIDFormatException
com.caij.puremusic.fragments.AlbumCoverStyle
com.caij.puremusic.fragments.playlists.PlaylistDetailsFragment$resetDBSongEntity$1
org.jaudiotagger.tag.datatype.StringDateTime
com.caij.puremusic.dialogs.SongDetailDialog$onCreateDialog$2
com.caij.puremusic.drive.webdav.WebDAVDriveEngine$getFolderFiles$1
io.ktor.util.CaseInsensitiveMap$entries$1
com.umeng.commonsdk.stateless.d$3
com.caij.puremusic.fragments.settings.AbsSettingsFragment
org.simpleframework.xml.strategy.Loader
com.caij.puremusic.network.model.LastFmTrack$Track$Album$Attr
androidx.viewpager2.adapter.FragmentStateAdapter$5
com.caij.puremusic.service.MusicService$pause$1
com.caij.puremusic.fragments.folder.FoldersSettingFragment$onMultipleItemAction$1
com.caij.puremusic.db.model.ServerLyricsQueries$deleteSongBySource$1
com.alipay.tscenter.biz.rpc.report.general.model.DataReportRequest
com.tencent.mm.opensdk.modelbiz.CreateChatroom$Req
androidx.lifecycle.SingleGeneratedAdapterObserver
io.ktor.client.statement.HttpStatement$execute$1
com.caij.puremusic.fragments.backup.BackupFragment$onViewCreated$openFilePicker$1$1
com.umeng.analytics.pro.bn$a
com.google.android.gms.signin.internal.zai
com.alipay.android.phone.mrpc.core.aa
com.caij.puremusic.db.model.ArtistQueries$deleteArtistById$1
com.caij.puremusic.fragments.albums.AlbumDetailsFragment$onViewCreated$1
com.umeng.analytics.pro.ae
com.caij.puremusic.db.model.PlaybackSongQueries$getPlaybacksByType$1
org.simpleframework.xml.core.ElementListUnionParameter
com.umeng.common.b$a
org.jaudiotagger.tag.lyrics3.Lyrics3v1Iterator
com.thegrizzlylabs.sardineandroid.R
com.caij.puremusic.db.model.SongQueries$getAlbumSongCount$1
com.google.common.reflect.TypeToken
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM
com.tencent.bugly.proguard.l
org.jaudiotagger.tag.id3.framebody.FrameBodyTSIZ
org.simpleframework.xml.core.Parameter
com.caij.puremusic.views.NumberRollView
com.caij.puremusic.db.model.Album
com.caij.puremusic.drive.model.SubsonicSong
org.jaudiotagger.tag.PaddingException
com.caij.puremusic.db.model.SongQueries$GetSongBySourceQuery
app.cash.sqldelight.ExecutableQuery$executeAsList$1
code.name.monkey.appthemehelper.common.views.ATEAccentTextView
com.caij.puremusic.util.HttpUtil$httpClient$1$1
com.caij.puremusic.util.MusicUtil$deleteTracks$2
com.afollestad.materialdialogs.color.DialogColorChooserExtKt$setupCustomPage$7
com.caij.puremusic.fragments.folder.manager.MusicFolderUtil$showPathEdit$3$1$2
com.google.android.gms.common.SupportErrorDialogFragment
com.caij.puremusic.db.model.SongEntityQueries$insert$1
com.caij.puremusic.activities.saf.SAFGuideActivity
kotlinx.serialization.json.internal.JsonTreeReader$readObject$2
com.tencent.mm.opensdk.modelbiz.HandleScanResult$Req
androidx.preference.MultiSelectListPreference
org.simpleframework.xml.core.VersionLabel
com.google.android.material.slider.Slider
io.ktor.util.pipeline.InvalidPhaseException
org.simpleframework.xml.stream.Mode
androidx.customview.view.AbsSavedState$1
com.umeng.commonsdk.UMConfigureImpl
org.koin.androidx.scope.ScopeFragment
com.thegrizzlylabs.sardineandroid.Version
androidx.appcompat.widget.Toolbar
org.jaudiotagger.audio.generic.AbstractTag
com.tencent.bugly.proguard.ar
org.jaudiotagger.audio.wav.WavFileWriter
com.caij.puremusic.drive.model.AlbumSubsonicResponse$$serializer
com.caij.puremusic.helper.BackupHelper$special$$inlined$inject$default$1
org.jcodec.containers.mp4.boxes.SegmentIndexBox
org.jaudiotagger.tag.id3.AbstractID3v2Frame
com.google.android.material.internal.ClippableRoundedCornerLayout
com.thegrizzlylabs.sardineandroid.util.EntityWithAnyElementConverter
com.umeng.analytics.Gender$3
com.caij.puremusic.MainModuleKt$dataModule$1$2
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$getById$2
org.simpleframework.xml.core.Factory
com.caij.puremusic.fragments.other.UserInfoFragment$startForProfileImageResult$1$1
com.caij.puremusic.util.CustomAlbumImageUtil$setCustomAlbumImage$2
com.caij.puremusic.drive.emby.EmbyEngine$getAlbumlists$1
com.caij.puremusic.activities.base.AbsSlidingMusicPanelActivity$updateColor$1
com.umeng.commonsdk.statistics.internal.PreferenceWrapper
com.github.dhaval2404.imagepicker.ImagePickerFileProvider
com.caij.puremusic.dialogs.ImportPlaylistDialog$special$$inlined$sharedViewModel$default$1
com.umeng.commonsdk.statistics.proto.d$a
com.caij.puremusic.db.model.ServerSongCoverQueries$deleteSongBySource$2
androidx.fragment.app.Fragment$InstantiationException
kotlin.KotlinNothingValueException
org.simpleframework.xml.util.Match
org.jaudiotagger.tag.datatype.SynchronisedTempoCode
com.google.android.gms.common.internal.safeparcel.SafeParcelReader$ParseException
com.caij.puremusic.MainModuleKt$viewModules$1$2
com.tencent.mm.opensdk.diffdev.a.a$a
org.simpleframework.xml.core.MethodType
com.google.android.gms.common.api.Status
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact
io.ktor.client.plugins.DefaultTransformersJvmKt$platformResponseDefaultTransformers$1
com.bumptech.glide.load.engine.DecodeJob$Stage
com.umeng.analytics.pro.ck
io.ktor.client.engine.okhttp.OkHttpEngine$clientCache$1
com.umeng.commonsdk.debug.UInterface
com.google.android.material.button.MaterialButton
com.caij.puremusic.drive.model.AlbumMetadata$Companion
org.simpleframework.xml.core.Signature
kotlin.UninitializedPropertyAccessException
org.simpleframework.xml.core.DetailExtractor
org.jaudiotagger.audio.aiff.AiffType
com.umeng.commonsdk.vchannel.b
com.umeng.analytics.pro.bo$a
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox$Factory
com.google.common.reflect.Types$GenericArrayTypeImpl
org.json.alipay.a
com.caij.puremusic.db.model.PlaylistEntityQueries$PlaylistByNameQuery$execute$1
androidx.fragment.app.FragmentContainerView
org.jaudiotagger.tag.lyrics3.FieldFrameBodyEAL
com.umeng.commonsdk.statistics.idtracking.g
com.umeng.vt.diff.Channel
nl.adaptivity.xmlutil.core.impl.NamespaceHolder$namespaceContext$1$getPrefixesCompat$1
com.caij.puremusic.db.model.SongQueries$SearchSongsByTitleQuery
com.umeng.analytics.pro.ca
org.koin.core.logger.Level
io.ktor.client.engine.okhttp.OkHttpWebsocketSession$outgoing$1
com.caij.puremusic.db.model.SongQueries$SongsByNameAlbumQuery
org.simpleframework.xml.core.UnionException
com.caij.puremusic.network.model.LastFmArtist$Artist$Stats
android.support.v4.media.session.PlaybackStateCompat$CustomAction
com.caij.puremusic.util.ArtistUtil$sortedSongs$3
com.caij.puremusic.fragments.base.AbsPlayerFragment
com.tencent.mm.opensdk.modelbiz.CreateChatroom$Resp
com.caij.puremusic.activities.tageditor.TagWriter$Companion$writeTagsToFiles$2
com.google.common.collect.ImmutableMap
org.simpleframework.xml.stream.EventNode
com.tencent.mm.opensdk.modelmsg.WXStateSceneDataObject$IWXStateJumpInfo
com.caij.puremusic.activities.PermissionActivity$onCreate$3
com.umeng.analytics.pro.as
com.google.common.hash.HashCode$IntHashCode
com.google.common.collect.RegularImmutableSet
com.google.android.exoplayer2.metadata.id3.ApicFrame
com.google.android.exoplayer2.metadata.icy.IcyHeaders
com.thegrizzlylabs.sardineandroid.model.Keepalive
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1
okhttp3.logging.HttpLoggingInterceptor$Level
org.jaudiotagger.tag.mp4.Mp4FieldKey
org.simpleframework.xml.stream.InputAttribute
org.jaudiotagger.tag.FieldKey
org.jaudiotagger.audio.real.RealFileReader
com.umeng.analytics.CoreProtocol$1
com.caij.puremusic.fragments.folder.manager.MusicFolderManagerFragment$onViewCreated$1$2
org.simpleframework.xml.stream.PullReader$Start
androidx.preference.DialogPreference
androidx.recyclerview.widget.RecyclerView$SavedState
com.caij.puremusic.fragments.lyrics.ComnLyricsFragment$editNormalLyrics$1$1
org.jaudiotagger.audio.aiff.AiffAudioHeader
androidx.window.layout.SidecarAdapter$translate$checkedFeature$3
com.google.android.material.bottomsheet.BottomSheetDialog$3
org.jaudiotagger.audio.iff.ChunkSummary
org.jcodec.containers.mp4.boxes.TrackExtendsBox
com.umeng.commonsdk.statistics.idtracking.d
org.repackage.com.zui.deviceidservice.IDeviceidInterface
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$BreadthFirstEnumeration
com.google.android.gms.common.api.internal.LifecycleCallback
com.google.common.collect.SingletonImmutableSet
com.google.android.material.behavior.SwipeDismissBehavior
com.caij.puremusic.fragments.base.AbsRecyclerViewFragment$onViewCreated$4
com.caij.puremusic.network.model.Image
com.github.dhaval2404.imagepicker.ImagePickerActivity
com.umeng.analytics.process.UMProcessDBDatasSender$ConstructMessageCallback
com.caij.puremusic.db.model.FolderQueries$selectAll$1
com.caij.puremusic.drive.model.PlayListsSubsonicResponse$Companion
com.tencent.bugly.proguard.as$4
kotlin.sequences.SequencesKt__SequencesKt$generateSequence$2
com.umeng.commonsdk.statistics.internal.b
com.caij.puremusic.fragments.folder.manager.MusicFolderManagerFragment$onPartViewClick$2$1
com.caij.puremusic.fragments.backup.BackupFragment$special$$inlined$viewModels$default$3
io.ktor.http.IllegalHeaderNameException
com.tencent.bugly.proguard.n
com.caij.puremusic.db.model.PlaybackSong
com.tencent.mm.opensdk.modelmsg.SendAuth$Req
org.simpleframework.xml.stream.StreamProvider
com.tencent.mm.opensdk.modelmsg.WXMusicVipInfo
com.umeng.analytics.pro.ah
org.jaudiotagger.tag.id3.ID3v23Tag
org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId$CallBack
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox
com.caij.puremusic.network.model.LastFmTrack
com.afollestad.materialdialogs.internal.main.DialogScrollView$onAttachedToWindow$1
com.tencent.mm.opensdk.constants.ConstantsAPI$LaunchWX
org.jaudiotagger.tag.id3.ID3v23Frames
com.caij.puremusic.fragments.about.AboutFragment$onViewCreated$1
com.caij.puremusic.fragments.playlists.PlaylistDetailsFragment$special$$inlined$viewModel$default$1
com.umeng.commonsdk.statistics.proto.e$a
com.caij.puremusic.fragments.LibraryViewModel$addToPlaylist$1
com.thegrizzlylabs.sardineandroid.model.Write
kotlinx.serialization.SerializersCacheKt$SERIALIZERS_CACHE$1
com.umeng.commonsdk.UMConfigure$2
com.caij.puremusic.activities.tageditor.TagWriter$Companion$scan$2
io.ktor.http.Url$encodedQuery$2
com.caij.puremusic.model.smartplaylist.AbsSmartPlaylist
com.umeng.analytics.pro.aa
com.tencent.mm.opensdk.modelbiz.WXChannelShareVideo
com.caij.puremusic.fragments.LibraryViewModel$saveMediaInfo$1
com.caij.puremusic.drive.model.MediaStream$Companion
androidx.versionedparcelable.CustomVersionedParcelable
org.jaudiotagger.tag.id3.framebody.ID3v2ChapterFrameBody
org.simpleframework.xml.core.PathException
com.tencent.mm.opensdk.modelbiz.JoinChatroom$Resp
com.afollestad.materialdialogs.internal.button.DialogActionButtonLayout
com.caij.puremusic.drive.model.Location$$serializer
com.caij.puremusic.activities.tageditor.AbsTagEditorActivity$writeValuesToFiles$1
com.google.common.reflect.Types$JavaVersion$3
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy
com.caij.puremusic.db.model.ArtistQueries
com.caij.puremusic.drive.model.Response
com.caij.puremusic.fragments.artists.ArtistDetailsFragment$special$$inlined$viewModel$default$1
com.alipay.sdk.app.H5OpenAuthActivity
org.jcodec.containers.mp4.boxes.UdtaMetaBox
com.umeng.commonsdk.internal.utils.c$a
com.umeng.commonsdk.framework.UMLogDataProtocol$UMBusinessType
org.simpleframework.xml.convert.RegistryStrategy
com.alipay.apmobilesecuritysdk.a.a
com.heinrichreimersoftware.materialintro.view.parallax.ParallaxLinearLayout
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgram
com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport
com.umeng.commonsdk.utils.UMUtils
com.umeng.commonsdk.stateless.UMSLEnvelopeBuild$1
code.name.monkey.appthemehelper.common.prefs.supportv7.ATEPreferenceFragmentCompat
org.jaudiotagger.utils.tree.TreeModelListener
com.google.android.material.search.SearchView$SavedState
kotlin.jvm.internal.MutablePropertyReference1Impl
com.google.android.material.chip.Chip
com.caij.puremusic.drive.model.Prop
com.caij.puremusic.fragments.base.AbsPlayerFragment$onMenuItemClick$2$1
com.thegrizzlylabs.sardineandroid.BuildConfig
org.jaudiotagger.test.MergeID3AndMP3Files$DirFilter
com.caij.puremusic.drive.model.GoogleDriveFileResponse$$serializer
org.simpleframework.xml.core.AttributeLabel
androidx.recyclerview.widget.GridLayoutManager
org.jaudiotagger.utils.tree.MutableTreeNode
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
com.umeng.commonsdk.statistics.proto.d$d
com.caij.puremusic.repository.RealRoomRepository$favoritePlaylist$1
org.simpleframework.xml.filter.Filter
com.caij.puremusic.fragments.player.circle.CirclePlayerFragment
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState
com.caij.puremusic.fragments.folder.FoldersFragment$listSongs$2
org.simpleframework.xml.transform.FileTransform
com.caij.puremusic.drive.model.AlbumList$Companion
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda
com.caij.puremusic.db.model.ServerSongCoverQueries$getBySource$2
com.caij.puremusic.fragments.about.AboutFragment$special$$inlined$sharedViewModel$default$1
androidx.lifecycle.SavedStateHandleController
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse
com.umeng.umzid.b$a
com.tencent.mm.opensdk.modelbiz.JoinChatroom
com.umeng.commonsdk.UMInnerImpl$2
com.umeng.analytics.pro.o$d
com.afollestad.materialdialogs.WhichButton
com.caij.puremusic.network.model.LastFmArtist$Artist
com.caij.puremusic.network.model.LastFmAlbum
com.caij.puremusic.activities.HolderActivity
com.caij.puremusic.fragments.LibraryViewModel$playCountSongs$1
org.simpleframework.xml.transform.CurrencyTransform
nl.adaptivity.xmlutil.SimpleNamespaceContext$getPrefixSequence$2
nl.adaptivity.xmlutil.DomWriter$processingInstruction$1
kotlin.jvm.internal.CallableReference
app.cash.sqldelight.driver.android.AndroidSqliteDriver$execute$1
com.caij.puremusic.drive.model.PlexPlaylistsResponse$Companion
com.google.firebase.encoders.EncodingException
com.google.android.exoplayer2.source.BehindLiveWindowException
io.ktor.client.statement.HttpResponseKt$bodyAsText$1
org.simpleframework.xml.core.InstantiationException
org.simpleframework.xml.core.PrimitiveScanner
io.ktor.client.plugins.contentnegotiation.ContentNegotiation$convertResponse$1
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockHeader
com.caij.puremusic.drive.model.JellyfinArtistResponse
com.tencent.mm.opensdk.modelbiz.WXNontaxPay$Req
com.caij.puremusic.db.model.PlayCountEntityQueries$insert$2
com.google.android.exoplayer2.ExoPlaybackException
com.caij.puremusic.drive.model.PlexPlaylistsResponse$$serializer
com.caij.puremusic.adapter.artist.ArtistAdapter$onMultipleItemAction$1$1
com.google.common.collect.Maps$EntryFunction$2
com.caij.puremusic.fragments.folder.manager.MusicFolderUtil$showWebDAVEditDialog$3$1$1
com.google.common.primitives.Ints$IntArrayAsList
org.koin.androidx.viewmodel.factory.KoinViewModelFactory$addSSH$1
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTagField
com.caij.puremusic.activities.base.AbsMusicServiceActivity$special$$inlined$inject$default$1
io.ktor.client.engine.HttpClientEngine$install$1
com.caij.puremusic.dialogs.DeleteSongsDialog$onCreateDialog$2
com.umeng.analytics.pro.b
org.jcodec.containers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox$Factory
org.jaudiotagger.audio.wav.WavChunkType
org.jaudiotagger.audio.asf.data.ChunkContainer
app.cash.sqldelight.BaseTransacterImpl$notifyQueries$1
com.caij.puremusic.fragments.backup.RestoreActivity
io.ktor.client.HttpClientConfig$install$3$attributes$1
com.google.android.material.timepicker.ChipTextInputComboView
com.google.android.material.datepicker.MaterialDatePicker
com.google.android.exoplayer2.ExoTimeoutException
com.caij.puremusic.service.MusicService$onSharedPreferenceChanged$3
kotlin.jvm.internal.Ref$IntRef
com.thegrizzlylabs.sardineandroid.model.Acl
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse$$serializer
org.simpleframework.xml.filter.MapFilter
org.jaudiotagger.tag.aiff.AiffTagFieldKey
com.caij.puremusic.activities.tageditor.SongTagEditorActivityV2$writeToFiles$2
org.repackage.com.meizu.flyme.openidsdk.a
com.caij.puremusic.fragments.other.DetailListFragment$loadFavorite$2$1
com.tencent.bugly.crashreport.common.strategy.StrategyBean
com.caij.puremusic.fragments.player.full.FullPlaybackControlsFragment
org.jaudiotagger.tag.lyrics3.Lyrics3v2
org.jaudiotagger.tag.id3.ID3v1Tag
com.umeng.commonsdk.utils.d
org.simpleframework.xml.transform.StringArrayTransform
org.jaudiotagger.tag.id3.valuepair.EventTimingTypes
io.ktor.client.engine.okhttp.UnsupportedFrameTypeException
com.caij.puremusic.appwidgets.AppWidgetBig
com.tencent.bugly.proguard.h
com.umeng.commonsdk.internal.utils.k
org.jaudiotagger.tag.mp4.field.Mp4TagReverseDnsField
com.caij.puremusic.model.CategoryInfo$Creator
com.caij.puremusic.drive.model.Collection$Companion
com.umeng.umzid.c
com.thegrizzlylabs.sardineandroid.model.Link
com.caij.puremusic.drive.model.Response$Companion
androidx.appcompat.widget.Toolbar$SavedState
com.google.android.exoplayer2.metadata.id3.UrlLinkFrame
com.caij.puremusic.dialogs.DeleteSongsDialog$onCreateDialog$deleteResultLauncher$1$1$1
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdCountQuery
com.caij.puremusic.db.model.SongQueries$songsOrderDateAdd$1
androidx.lifecycle.Lifecycle$State
com.umeng.commonsdk.debug.I
org.jaudiotagger.utils.DirectByteBufferUtils$AndroidReleaseStrategy
org.jaudiotagger.tag.id3.framebody.FrameBodyTMCL
androidx.lifecycle.Lifecycle$Event
kotlinx.serialization.descriptors.SerialDescriptorImpl$toString$1
code.name.monkey.appthemehelper.common.prefs.supportv7.ATESwitchPreference
org.jcodec.containers.mp4.boxes.SyncSamplesBox
com.caij.puremusic.fragments.albums.AlbumDetailsFragment$setSaveSortOrder$1$1$songs$2
com.thegrizzlylabs.sardineandroid.model.Propertybehavior
com.caij.puremusic.dialogs.DeleteSongsDialog$onCreateDialog$2$1$1
com.umeng.analytics.pro.at
com.afollestad.materialdialogs.input.DialogInputExtKt$input$4
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportQuasiRealtime
com.caij.puremusic.db.model.HistoryEntityQueries$HistorySongsQuery
com.caij.puremusic.drive.adrive.ADriveEngine$getFolderFiles$1
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior
com.caij.puremusic.network.model.LastFmTrack$Track$Wiki
com.caij.puremusic.views.TintedNavigationRailView
com.caij.puremusic.db.model.PlayCountEntityQueries$deleteById$1
androidx.lifecycle.RepeatOnLifecycleKt$repeatOnLifecycle$3$1$1$1$1$1$1
com.caij.puremusic.fragments.folder.manager.MusicFolderManagerFragment$showLongDialog$1$1
com.afollestad.materialdialogs.color.view.WrapContentViewPager
org.jaudiotagger.audio.asf.AsfFileWriter
com.caij.puremusic.db.model.ServerSongCoverQueries$GetByIdQuery$execute$1
com.tencent.mm.opensdk.openapi.WXAPIFactory
org.repackage.a.a.a.a
com.caij.puremusic.fragments.player.circle.CirclePlayerFragment$updateSong$1
com.google.android.gms.common.GooglePlayServicesManifestException
com.umeng.analytics.pro.ag
androidx.preference.PreferenceCategory
com.google.gson.internal.$Gson$Types$WildcardTypeImpl
com.google.android.gms.internal.play_billing.zzci
com.tencent.mm.opensdk.openapi.WXApiImplComm
org.simpleframework.xml.core.Collector$Registry
com.caij.puremusic.db.model.ServerArtistCover
org.jcodec.containers.mp4.AudioBoxes
com.caij.puremusic.network.DeezerService
com.caij.puremusic.fragments.player.material.MaterialControlsFragment$updateSong$1$songInfo$1
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgram$Resp
androidx.core.widget.NestedScrollView$SavedState
com.tencent.bugly.proguard.q
org.simpleframework.xml.transform.RegistryMatcher
com.caij.puremusic.fragments.artists.AlbumArtistDetailsFragment
com.alipay.android.phone.mrpc.core.a.d
org.simpleframework.xml.core.Creator
com.caij.puremusic.fragments.player.adaptive.AdaptivePlaybackControlsFragment$updateSong$1$songInfo$1
com.caij.puremusic.db.model.SongEntityQueries$getPlaylistLastAddSong$2
org.jaudiotagger.tag.id3.framebody.FrameBodyTSSE
org.simpleframework.xml.core.KeyBuilder$Key
com.caij.puremusic.drive.model.JellyfinLoginResponse$$serializer
com.caij.puremusic.drive.model.SubsonicSearchResponse
org.jaudiotagger.tag.mp4.field.Mp4GenreField
com.caij.puremusic.lyrics.CoverLrcView
org.jaudiotagger.audio.asf.io.AsfStreamer
org.jcodec.containers.mp4.boxes.GenericMediaInfoBox
com.caij.vip.PayInfos
org.simpleframework.xml.core.Session
org.jaudiotagger.tag.id3.AbstractID3v2Tag
androidx.startup.StartupException
com.thegrizzlylabs.sardineandroid.model.WriteContent
com.caij.puremusic.activities.tageditor.SongTagEditorActivityV2$save$1$1
com.thegrizzlylabs.sardineandroid.model.Privilege
org.simpleframework.xml.core.OverrideType
com.google.common.collect.ReverseNaturalOrdering
com.caij.puremusic.drive.jellyfin.JellyfinEngine$getFolderSongs$1
com.caij.vip.CNVipManager$refreshInfo$1$5
com.google.android.exoplayer2.drm.DrmSession$DrmSessionException
code.name.monkey.appthemehelper.common.prefs.supportv7.ATEListPreference
org.jaudiotagger.tag.id3.framebody.FrameBodyTRSO
com.google.common.base.Predicates$ObjectPredicate$4
com.caij.puremusic.db.model.SongQueries$songsByAlbumIdTypeCount$1
com.google.gson.JsonSyntaxException
com.google.android.exoplayer2.upstream.UdpDataSource$UdpDataSourceException
org.jaudiotagger.audio.asf.io.ContentDescriptionReader
com.bumptech.glide.manager.SupportRequestManagerFragment
com.caij.puremusic.dialogs.BlacklistFolderChooserDialog$onCreateDialog$2
com.caij.puremusic.util.DriveReaderUtil$addSongServerSource$1
com.caij.puremusic.db.model.SongQueries$songsByAlbumId$1
com.umeng.analytics.pro.o$a
com.afollestad.materialdialogs.color.view.ColorCircleView
org.jaudiotagger.audio.asf.data.AsfHeader
nl.adaptivity.xmlutil.serialization.UnknownXmlFieldException
com.caij.puremusic.util.HttpUtil$httpClient$1
com.caij.puremusic.activities.tageditor.AlbumTagEditorActivityV2$writeToFiles$2$songPaths$1
com.caij.puremusic.views.WidthFitSquareLayout
com.caij.puremusic.db.model.HistoryEntityQueries$clear$1
com.google.common.collect.MapMakerInternalMap$Strength$1
com.google.android.material.snackbar.SnackbarContentLayout
com.tencent.bugly.proguard.bl
org.jaudiotagger.audio.mp3.MP3AudioHeader
com.tencent.bugly.proguard.d
com.caij.vip.AliPayFragment
org.simpleframework.xml.stream.ProviderFactory
com.caij.puremusic.fragments.other.MiniPlayerFragment
org.jcodec.containers.mp4.boxes.ReverseDnsBox$LocalBoxes
com.umeng.analytics.pro.an$b
org.jaudiotagger.audio.asf.io.AsfHeaderReader
com.umeng.commonsdk.statistics.internal.a$a
org.jaudiotagger.audio.AudioFile
com.umeng.analytics.vshelper.PageNameMonitor$a
com.umeng.analytics.pro.z
org.jcodec.containers.mp4.boxes.MdtaBox
org.jaudiotagger.tag.id3.valuepair.EventTimingTimestampTypes
org.jaudiotagger.tag.reference.MusicalKey
org.jaudiotagger.tag.datatype.StringFixedLength
com.google.android.gms.auth.api.signin.GoogleSignInOptions
com.caij.puremusic.service.PlaybackLocation
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRL
com.caij.puremusic.extensions.ViewExtensionsKt$drawAboveSystemBars$1
io.ktor.client.statement.HttpStatement$cleanup$1
nl.adaptivity.xmlutil.serialization.ElementSerializer$descriptor$1
com.caij.puremusic.fragments.base.AbsMainActivityFragment$special$$inlined$sharedViewModel$default$2
io.ktor.utils.io.internal.AwaitingSlot$sleep$1
com.google.common.hash.LittleEndianByteArray$UnsafeByteArray
com.tencent.mm.opensdk.modelbiz.WXChannelOpenFeed
org.simpleframework.xml.stream.Indenter$Cache
com.umeng.commonsdk.internal.c$1
kotlinx.coroutines.TimeoutCancellationException
com.umeng.analytics.pro.r$1
com.caij.puremusic.db.model.PlayCountEntityQueries$playCountSongs$2
org.slf4j.helpers.NamedLoggerBase
kotlin.collections.EmptyList
com.caij.puremusic.drive.model.PlexUser$Companion
com.caij.puremusic.drive.model.ArtistItem$Companion
com.caij.puremusic.drive.model.GoogleDriveFileResponse
com.caij.puremusic.fragments.other.VolumeFragment
com.caij.puremusic.drive.onedrive.OneDriveEngine$getChild$1
com.tencent.mm.opensdk.modelmsg.WXVideoFileObject
org.simpleframework.xml.core.ObjectInstance
kotlin.io.FileSystemException
com.tencent.mm.opensdk.modelpay.WXJointPay$JointPayReq
org.simpleframework.xml.core.Collector
org.jcodec.containers.mp4.boxes.AliasBox
com.afollestad.materialdialogs.internal.list.DialogRecyclerView
org.simpleframework.xml.transform.ArrayMatcher
com.google.android.material.radiobutton.MaterialRadioButton
com.tencent.bugly.proguard.av
com.caij.vip.CNVipManager$getProducts$1
com.thegrizzlylabs.sardineandroid.model.Propstat
com.caij.puremusic.drive.model.PlayListsResponse
com.caij.puremusic.fragments.folder.manager.MusicFolderUtil$showWebDAVEditDialog$3$1$3
com.caij.puremusic.fragments.backup.RestoreActivity$onCreate$2$1
com.caij.puremusic.fragments.albums.AlbumDetailsFragment$setSaveSortOrder$1$1$songs$4
kotlin.jvm.internal.Ref$ObjectRef
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataCueSheet
kotlinx.serialization.MissingFieldException
org.simpleframework.xml.strategy.VisitorStrategy
com.caij.puremusic.db.model.SearchAlbumResultQueries$clear$1
androidx.appcompat.widget.ContentFrameLayout
com.tencent.mm.opensdk.modelmsg.ShowMessageFromWX
org.koin.androidx.viewmodel.factory.KoinViewModelFactory$create$parameters$1
org.simpleframework.xml.core.ValueRequiredException
org.jaudiotagger.tag.id3.framebody.FrameBodyWOAR
com.caij.puremusic.db.model.AlbumQueries$AlbumQuery$execute$1
io.ktor.client.plugins.HttpRedirect$Plugin$handleCall$1
com.tencent.mm.opensdk.modelmsg.WXEmojiPageSharedObject
com.thegrizzlylabs.sardineandroid.impl.handler.ResponseHandler
com.google.android.exoplayer2.metadata.flac.VorbisComment
org.simpleframework.xml.stream.OutputAttribute
com.heinrichreimersoftware.materialintro.app.SlideFragment
org.jaudiotagger.tag.id3.framebody.FrameBodyENCR
com.caij.puremusic.db.model.HistoryEntityQueries$updateHistorySong$1
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException
com.caij.puremusic.views.LollipopFixedWebView
com.tencent.bugly.proguard.bu
com.caij.puremusic.views.TintedBottomNavigationView$2$1
org.jaudiotagger.tag.lyrics3.FieldFrameBodyLYR
com.google.common.collect.RegularImmutableMap$KeySet
com.caij.puremusic.util.AlbumUtil$sort$3
com.umeng.analytics.pro.bf$1
com.caij.puremusic.fragments.LibraryViewModel$search$1
com.caij.puremusic.MainModuleKt$networkModule$1$3
io.ktor.http.Url$encodedPassword$2
org.simpleframework.xml.core.EmptyMatcher
kotlin.reflect.KVariance
nl.adaptivity.xmlutil.serialization.XML$collectNamespaces$1
com.caij.puremusic.db.model.AlbumQueries$albums$2
com.tencent.mm.opensdk.modelmsg.SendAuth
com.tencent.mm.opensdk.modelmsg.LaunchFromWX$Resp
com.caij.puremusic.dialogs.DeleteSongsDialog$onCreateDialog$$inlined$extraNotNull$default$1
kotlin.jvm.internal.MutablePropertyReference1
com.caij.puremusic.dialogs.CreatePlaylistDialog$onCreateDialog$$inlined$extra$default$1
io.ktor.client.plugins.contentnegotiation.ContentNegotiation$convertRequest$1
com.caij.puremusic.activities.tageditor.SongTagEditorActivityV2$save$1
org.simpleframework.xml.stream.OutputStack$Sequence
com.umeng.analytics.pro.e
androidx.recyclerview.widget.LinearLayoutManager
nl.adaptivity.xmlutil.DomWriter$docdecl$1
com.caij.puremusic.drive.model.MediaContainer$Companion
org.jaudiotagger.audio.SupportedFileFormat$5
kotlin.text.Regex
com.caij.puremusic.activities.WebActivity
kotlin.random.Random$Default
com.tencent.bugly.proguard.k$a
com.umeng.umzid.Spy
nl.adaptivity.xmlutil.serialization.structure.XmlMapDescriptor$isValueCollapsed$2
com.caij.puremusic.model.lyrics.Lyrics
com.caij.puremusic.service.MusicService$playFromPlaylist$1
org.jaudiotagger.audio.opus.OpusInfoReader
com.caij.puremusic.db.model.PlayCountEntityQueries$CheckSongExistInPlayCountQuery
com.caij.puremusic.db.model.SongEntityQueries$insert$2
com.caij.puremusic.db.model.SearchAlbumResultQueries$getById$2
com.caij.puremusic.fragments.folder.manager.MusicFolderUtil$showJellyfinEditDialog$1$1
org.jaudiotagger.tag.datatype.ID3v2LyricLine
com.umeng.commonsdk.statistics.idtracking.b
androidx.preference.EditTextPreference
androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour
kotlinx.coroutines.DiagnosticCoroutineContextException
org.simpleframework.xml.convert.ConverterScanner
org.jaudiotagger.tag.id3.framebody.FrameBodyWPAY
com.caij.puremusic.db.model.SongQueries$SongsDateLastDescQuery
com.caij.puremusic.drive.model.PlexSongsResponse
org.simpleframework.xml.transform.CharacterTransform
com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException
nl.adaptivity.xmlutil.EventType
com.google.android.gms.internal.play_billing.zzy
com.caij.puremusic.fragments.player.gradient.GradientPlayerFragment$updateSong$1
com.google.android.exoplayer2.upstream.ContentDataSource$ContentDataSourceException
com.thegrizzlylabs.sardineandroid.model.Collection
org.simpleframework.xml.core.Commit
com.caij.puremusic.activities.tageditor.AlbumTagEditorActivity
com.caij.puremusic.db.model.SongEntityQueries$deletePlaylistSongs$2
kotlin.text.StringsKt__IndentKt$getIndentFunction$2
io.ktor.client.plugins.DefaultResponseValidationKt$addDefaultResponseValidation$1
com.caij.puremusic.util.CustomAlbumImageUtil$resetCustomAlbumImage$2
org.jcodec.containers.mp4.boxes.ColorExtension
com.caij.puremusic.drive.dropbox.DropboxDriveEngine$getChildInner$1
com.umeng.analytics.pro.cf
org.jaudiotagger.utils.DirectByteBufferUtils$OpenJdkReleaseStrategy
io.ktor.util.CaseInsensitiveMap$keys$2
com.tencent.mm.opensdk.modelbiz.IWXChannelJumpInfo
com.caij.puremusic.db.model.SongQueries$getSongCountBySourceId$1
com.google.android.material.textfield.TextInputEditText
com.caij.puremusic.fragments.artists.AlbumArtistDetailsFragment$special$$inlined$viewModel$default$2
com.tencent.mm.opensdk.modelmsg.WXMusicVideoObject
com.thegrizzlylabs.sardineandroid.model.SyncCollection
com.google.android.material.datepicker.PickerFragment
androidx.constraintlayout.widget.ConstraintLayout
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$PostorderEnumeration
com.afollestad.materialdialogs.MaterialDialog$invalidateBackgroundColorAndRadius$1
androidx.mediarouter.app.MediaRouteExpandCollapseButton
com.caij.puremusic.MainModuleKt$mainModule$1$1
com.caij.puremusic.db.model.FolderQueries$insertFolder$2
org.koin.core.error.DefinitionOverrideException
com.umeng.analytics.pro.i
com.caij.puremusic.fragments.other.UserInfoFragment
com.tencent.mm.opensdk.modelbiz.WXChannelOpenProfile$Req
com.caij.puremusic.dialogs.DeleteSongsDialog$deleteSongs2$1
com.google.common.collect.ReverseOrdering
com.thegrizzlylabs.sardineandroid.model.Ace
org.jaudiotagger.audio.exceptions.NoReadPermissionsException
retrofit2.KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$1
com.caij.puremusic.drive.model.AMediaContainer$Companion
com.caij.puremusic.db.model.PlayCountEntityQueries$update$1
com.google.common.reflect.Types$JavaVersion$4
com.alipay.tscenter.biz.rpc.vkeydfp.result.AppListResult
com.alipay.apmobilesecuritysdk.d.d
com.alipay.android.phone.mrpc.core.k$a
com.caij.puremusic.wxapi.WXPayEntryActivity
com.caij.puremusic.fragments.backup.RestoreActivity$special$$inlined$viewModels$default$2
okhttp3.internal.connection.RealConnection$connectTls$1
io.ktor.utils.io.ByteBufferChannel$readRemainingSuspend$1
com.caij.puremusic.extensions.ViewExtensionsKt$drawAboveSystemBarsWithPadding$1$1
org.jaudiotagger.audio.asf.data.LanguageList
io.ktor.utils.io.jvm.javaio.InputAdapter$loop$1$loop$1
com.caij.puremusic.drive.model.AlbumMediaContainer
com.umeng.analytics.pro.an$1
com.umeng.commonsdk.statistics.proto.c$c
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback
com.caij.puremusic.network.model.LastFmTrack$Track$Album
com.thegrizzlylabs.sardineandroid.model.Read
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery
kotlinx.serialization.internal.PluginGeneratedSerialDescriptor$_hashCode$2
org.jaudiotagger.audio.mp3.ByteArrayMP3AudioHeader
com.umeng.analytics.pro.ca$a
com.umeng.analytics.pro.bb
org.simpleframework.xml.core.LabelExtractor
com.caij.puremusic.db.model.PlaylistEntityQueries$playlistByName$2
org.jcodec.containers.mp4.boxes.MediaHeaderBox
org.simpleframework.xml.core.FieldScanner$FieldKey
com.caij.puremusic.drive.model.Part
org.jaudiotagger.audio.real.RealChunk
org.jcodec.containers.mp4.boxes.SegmentIndexBox$Reference
com.alipay.android.phone.mrpc.core.z
com.caij.puremusic.fragments.folder.DriveFilesFragment$onFileClicked$1
com.caij.puremusic.fragments.folder.FoldersSettingFragment$onFileMenuClicked$1$1
com.caij.puremusic.fragments.LibraryViewModel$restoreHistory$1
com.tencent.bugly.crashreport.CrashReport$UserStrategy
com.caij.puremusic.fragments.about.AboutFragment$special$$inlined$sharedViewModel$default$2
com.caij.puremusic.dialogs.DeletePlaylistDialog$special$$inlined$sharedViewModel$default$1
com.caij.puremusic.fragments.songs.SongsFragment$loadData$1$1
org.simpleframework.xml.stream.StreamReader
kotlinx.coroutines.CoroutineStart
com.umeng.analytics.pro.cj
okhttp3.internal.cache.DiskLruCache$newJournalWriter$faultHidingSink$1
com.google.android.exoplayer2.metadata.id3.MlltFrame
com.caij.puremusic.fragments.folder.FoldersFragment$onMultipleItemAction$1$1
com.caij.puremusic.drive.model.ArtistItem$$serializer
kotlin.coroutines.intrinsics.CoroutineSingletons
org.simpleframework.xml.core.KeyBuilder$KeyType
com.google.android.material.datepicker.MaterialCalendarGridView
org.jaudiotagger.audio.asf.io.AsfExtHeaderModifier
com.caij.puremusic.adapter.artist.ArtistAdapter$onMultipleItemAction$1
org.simpleframework.xml.core.ConstructorScanner
com.caij.puremusic.repository.SyncSongRepository$sortedSongs$4
org.jaudiotagger.audio.wav.WavSubFormat
com.caij.puremusic.views.TintedBottomNavigationView$2
androidx.preference.Preference
com.afollestad.materialdialogs.internal.main.DialogTitleLayout
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$insert$2
com.caij.puremusic.fragments.player.home.HomePlayerFragment
com.caij.puremusic.db.model.ServerAudioFormatQueries$getById$2
org.koin.android.ext.koin.KoinExtKt$androidContext$1$1
org.jaudiotagger.utils.EqualsUtil
org.simpleframework.xml.core.CompositeKey
com.caij.puremusic.drive.google.GoogleDriveEngine$getRootFile$1
org.jaudiotagger.audio.asf.util.ChunkPositionComparator
org.jaudiotagger.tag.id3.framebody.FrameBodyTEXT
com.caij.puremusic.drive.model.SubsonicSearchListResponse$Companion
io.ktor.client.plugins.HttpCallValidator$Companion$install$3
com.google.android.exoplayer2.ParserException
com.google.common.reflect.TypeToken$SimpleTypeToken
com.google.common.hash.HashCode$BytesHashCode
androidx.preference.PreferenceScreen
com.google.android.material.bottomsheet.BottomSheetDialogFragment$BottomSheetDismissCallback
org.jaudiotagger.audio.asf.data.MetadataContainer
com.caij.puremusic.db.model.ArtistQueries$deleteArtistById$2
com.google.android.gms.internal.play_billing.zzaa
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3
androidx.preference.PreferenceDialogFragmentCompat
org.jaudiotagger.audio.exceptions.UnableToRenameFileException
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessWebview
com.google.android.material.bottomappbar.BottomAppBar$SavedState
kotlin.Triple
androidx.window.layout.SidecarAdapter$translate$checkedFeature$1
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgramWithToken$Req
com.caij.puremusic.dialogs.AddToPlaylistDialog
org.jaudiotagger.audio.asf.io.FullRequestInputStream
com.caij.puremusic.db.model.PlaylistEntity
nl.adaptivity.xmlutil.serialization.XmlEncoderBase$TagEncoder$encodeSerializableElement$1
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries
com.umeng.commonsdk.internal.a
io.ktor.serialization.kotlinx.json.JsonSupportKt$DefaultJson$1
org.jaudiotagger.tag.id3.framebody.FrameBodyOWNE
nl.adaptivity.xmlutil.EventType$END_DOCUMENT
androidx.recyclerview.widget.LinearLayoutManager$SavedState
com.alipay.tscenter.biz.rpc.deviceFp.BugTrackMessageService
org.jaudiotagger.tag.id3.reference.MediaMonkeyPlayerRating
org.jaudiotagger.audio.exceptions.NullBoxIdException
com.caij.puremusic.db.model.HistoryEntityQueries$deleteById$2
org.simpleframework.xml.util.WeakCache$SegmentList
androidx.appcompat.view.menu.ExpandedMenuView
com.caij.puremusic.MainModuleKt$dataModule$1$3
com.caij.puremusic.MainModuleKt$dataModule$1$6
org.jaudiotagger.audio.aiff.AiffInfoReader$1
com.caij.puremusic.db.model.ServerLyricsQueries$deleteSongBySource$2
com.caij.puremusic.db.model.SongQueries$songsByAlumId$1
nl.adaptivity.xmlutil.serialization.XmlEncoderBase$TagEncoder$encodeSerializableElement$3
com.caij.puremusic.drive.model.JellyfinSongListResponse
org.jaudiotagger.audio.mp4.Flatten
com.caij.puremusic.db.model.SongQueries$SongsByAlumQuery$execute$1
org.jaudiotagger.audio.wav.WavInfoReader$1
io.ktor.client.HttpClientConfig$install$3
com.tencent.mm.opensdk.modelbiz.WXLaunchWxaRedirectingPage
com.umeng.commonsdk.statistics.common.MLog
com.caij.puremusic.db.model.AlbumQueries$clear$1
org.jaudiotagger.tag.id3.reference.ITunesRating
org.jaudiotagger.tag.wav.WavTag$1
com.caij.puremusic.database.ServerLyricsDaoImp$insert$1
org.simpleframework.xml.util.Resolver$Stack
io.ktor.client.plugins.HttpTimeout$Plugin$install$1$1$1
com.caij.puremusic.drive.model.AlbumListResponse$$serializer
org.simpleframework.xml.core.Contact
org.simpleframework.xml.transform.LocaleTransform
org.simpleframework.xml.convert.ConvertException
org.simpleframework.xml.core.AttributeParameter$Contact
com.umeng.analytics.pro.o$b
androidx.fragment.app.Fragment$6
com.tencent.mm.opensdk.modelbiz.HandleScanResult$Resp
org.simpleframework.xml.core.Template
com.caij.puremusic.preferences.LibraryPreference
com.google.common.base.Predicates$ObjectPredicate$2
com.google.android.material.internal.NavigationMenuItemView
org.simpleframework.xml.core.TextParameter$Contact
org.simpleframework.xml.core.ParameterFactory
org.jaudiotagger.tag.id3.framebody.FrameBodyTIT1
org.jaudiotagger.tag.TagTextField
com.google.android.gms.common.internal.RootTelemetryConfiguration
com.thegrizzlylabs.sardineandroid.model.Propfind
com.caij.puremusic.fragments.artists.AbsArtistDetailsFragment$showArtistStep2$1
org.jaudiotagger.tag.mp4.field.Mp4TagTextField
org.repackage.com.meizu.flyme.openidsdk.OpenIdHelper
androidx.activity.result.ActivityResult
com.umeng.analytics.pro.y
io.ktor.util.date.Month
com.caij.puremusic.drive.model.WebDAVToken
org.simpleframework.xml.core.Reflector
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState
org.simpleframework.xml.stream.InputNodeMap
org.simpleframework.xml.core.FieldScanner
com.umeng.commonsdk.statistics.internal.c$1
io.ktor.utils.io.jvm.javaio.ReadingKt$toByteReadChannel$2
com.caij.puremusic.drive.model.DavResource
androidx.transition.FragmentTransitionSupport
com.tencent.mm.opensdk.openapi.MMSharedPreferences
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse$Companion
com.tencent.mm.opensdk.modelbiz.WXOpenCustomerServiceChat$Req
com.caij.puremusic.drive.model.DriveFile
com.caij.puremusic.fragments.folder.manager.MusicFolderManagerFragment$special$$inlined$sharedViewModel$default$2
com.google.android.material.slider.BaseSlider$SliderState
nl.adaptivity.xmlutil.serialization.NodeSerializer$descriptor$1
com.caij.puremusic.db.model.ServerSongCoverQueries$deleteSongBySource$1
org.simpleframework.xml.core.CollectionFactory
androidx.media.AudioAttributesImplBaseParcelizer
com.umeng.commonsdk.a
org.jcodec.containers.mp4.boxes.Edit
com.caij.puremusic.appwidgets.AppWidgetSmall
org.simpleframework.xml.core.MethodScanner$1
org.jaudiotagger.audio.asf.io.EncryptionChunkReader
org.koin.core.scope.Scope$resolveValue$4$1
org.jaudiotagger.audio.asf.data.Chunk
org.simpleframework.xml.transform.BigDecimalTransform
nl.adaptivity.xmlutil.EventType$PROCESSING_INSTRUCTION
com.caij.puremusic.drive.model.Metadata
com.caij.puremusic.fragments.base.AbsPlayerControlsFragment
com.umeng.analytics.filter.b
com.caij.puremusic.db.model.ServerAudioFormatQueries$deleteSongBySource$2
org.simpleframework.xml.core.ElementArrayLabel
org.jcodec.containers.mp4.boxes.SampleToChunkBox
com.caij.puremusic.db.model.SongQueries$song$2
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
com.umeng.commonsdk.internal.c$3
org.jcodec.containers.mp4.MP4Util
com.tencent.mm.opensdk.modelpay.WXJointPay$JointPayResp
org.jaudiotagger.audio.SupportedFileFormat$4
org.simpleframework.xml.stream.EventReader
org.simpleframework.xml.filter.PlatformFilter
com.caij.puremusic.fragments.player.adaptive.AdaptivePlaybackControlsFragment$updateSong$1
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector
org.jaudiotagger.audio.mp3.XingFrame
org.jaudiotagger.audio.ogg.util.OggPageHeader
com.umeng.analytics.pro.e$a$b
kotlin.coroutines.CombinedContext$toString$1
com.google.common.base.Equivalence$Identity
com.caij.puremusic.activities.tageditor.AlbumTagEditorActivityV2$loadCurrentImage$1
com.umeng.umzid.IZIDCompletionCallback
com.caij.puremusic.model.UpdateInfo$1
androidx.slidingpanelayout.widget.FoldingFeatureObserver$registerLayoutStateChangeCallback$1
com.google.android.exoplayer2.upstream.HttpDataSource$HttpDataSourceException
org.simpleframework.xml.stream.DocumentReader
com.caij.puremusic.db.model.AlbumQueries$getAlbumByArtistId$2
org.jaudiotagger.tag.asf.AsfTagBannerField
com.bumptech.glide.Priority
com.umeng.analytics.pro.bi
com.google.android.material.bottomappbar.BottomAppBar$Behavior
com.thegrizzlylabs.sardineandroid.DavPrincipal$PrincipalType
com.caij.puremusic.db.model.SongQueries$songsByNameAlbum$2
org.jaudiotagger.tag.id3.Id3SupportingTag
com.umeng.analytics.pro.be
com.caij.vip.CNVipManager$setActivationCode$1
androidx.lifecycle.ProcessLifecycleInitializer
com.umeng.commonsdk.statistics.proto.e$d
com.umeng.analytics.vshelper.PageNameMonitor
com.caij.puremusic.db.model.HistoryEntityQueries$GetByIdQuery
com.google.android.material.transformation.FabTransformationSheetBehavior
com.caij.puremusic.activities.ShareInstagramStory
io.ktor.client.call.SavedCallKt$save$1
com.umeng.commonsdk.statistics.proto.d$b
org.jcodec.containers.mp4.boxes.SampleDescriptionBox
org.simpleframework.xml.core.PersistenceException
com.caij.puremusic.fragments.player.normal.PlayerPlaybackControlsFragment$updateSong$1$songInfo$1
com.caij.puremusic.fragments.playlists.PlaylistsFragment$loadData$1
com.umeng.commonsdk.config.g
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10
org.jaudiotagger.tag.reference.ISOScript
com.tencent.mm.opensdk.utils.a
org.jaudiotagger.audio.aiff.AiffTagWriter
com.caij.puremusic.drive.model.AlbumResponse$$serializer
okhttp3.internal.http2.ConnectionShutdownException
com.google.common.base.AbstractIterator$State
androidx.lifecycle.SavedStateHandleAttacher
com.caij.puremusic.dialogs.DeletePlaylistDialog$onCreateDialog$$inlined$extraNotNull$default$1
com.tencent.bugly.proguard.ac$1
org.jaudiotagger.audio.mp4.Chunk
com.thegrizzlylabs.sardineandroid.model.PrincipalCollectionSet
io.ktor.utils.io.ByteBufferChannel$write$1
org.simpleframework.xml.stream.Provider
com.afollestad.materialdialogs.color.view.WrapContentViewPager$onMeasure$1
com.caij.puremusic.activities.tageditor.AlbumTagEditorActivityV2$save$1
com.caij.puremusic.views.ColorIconsImageView
com.tencent.bugly.proguard.at$3
com.google.android.exoplayer2.metadata.id3.ChapterFrame
org.jcodec.containers.mp4.boxes.MovieFragmentHeaderBox
com.umeng.analytics.pro.bv
com.alipay.sdk.m.j.c
com.umeng.commonsdk.statistics.internal.UMImprintChangeCallback
com.umeng.commonsdk.service.UMGlobalContext$1
com.umeng.analytics.pro.ax
org.simpleframework.xml.Root
com.caij.puremusic.util.SongAuthUtil$getRequestHeaders$1
com.tencent.bugly.proguard.b
com.umeng.analytics.pro.o$1
io.ktor.serialization.ContentConverterKt$deserialize$1
com.google.firebase.encoders.proto.Protobuf$IntEncoding
com.caij.puremusic.network.model.SearchResponse
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgramEnvironment$Resp
korlibs.crypto.MD5$Companion$1
com.caij.puremusic.helper.MusicPlayerRemote$special$$inlined$inject$default$1
com.google.android.exoplayer2.metadata.id3.BinaryFrame
com.umeng.analytics.pro.bw
com.umeng.analytics.process.DBFileTraversalUtil
com.google.android.exoplayer2.metadata.scte35.SpliceCommand
com.caij.puremusic.db.model.PlaylistEntityQueries$insert$2
com.umeng.commonsdk.statistics.common.ReportPolicy$DefconPolicy
com.caij.puremusic.helper.menu.SongMenuHelper$handleMenuClick$1$1
com.umeng.analytics.pro.ch
com.umeng.commonsdk.UMConfigureImpl$1
org.jcodec.containers.mp4.boxes.ReverseDnsBox
com.afollestad.materialdialogs.internal.message.DialogContentLayout
org.jaudiotagger.tag.datatype.AbstractDataType
org.jcodec.containers.mp4.boxes.MovieHeaderBox
com.tencent.bugly.proguard.bd
org.simpleframework.xml.transform.CharacterArrayTransform
org.simpleframework.xml.transform.AtomicIntegerTransform
org.jaudiotagger.tag.images.ImageHandlingFactory
com.caij.puremusic.drive.model.GoogleDriveFile
io.ktor.client.engine.UtilsKt$attachToUserJob$cleanupHandler$1
kotlinx.serialization.json.JsonObject$toString$1
com.umeng.commonsdk.statistics.proto.e$c
io.ktor.utils.io.ByteBufferChannel$writeFullySuspend$5
com.tencent.bugly.proguard.bg
com.umeng.analytics.pro.ad$a
com.caij.puremusic.activities.tageditor.AbsTagEditorActivity$onCreate$1
com.caij.puremusic.db.model.ServerLyricsQueries$deleteById$1
nl.adaptivity.xmlutil.SimpleNamespaceContext$special$$inlined$flatten$1
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream$InvalidMarkException
com.caij.puremusic.fragments.LibraryViewModel$deleteSongsInPlaylistWithNofify$1
org.jaudiotagger.audio.aiff.chunk.NameChunk
org.simpleframework.xml.core.Instantiator
androidx.constraintlayout.widget.Guideline
org.jaudiotagger.tag.id3.framebody.FrameBodyTBPM
androidx.appcompat.view.menu.ListMenuItemView
nl.adaptivity.xmlutil.EventType$END_ELEMENT
nl.adaptivity.xmlutil.EventType$ENTITY_REF
androidx.appcompat.widget.AppCompatSpinner$SavedState
com.umeng.commonsdk.config.b
org.jaudiotagger.audio.mp4.InplaceMP4Editor
com.alipay.apmobilesecuritysdk.face.EnvModeConfig
org.jaudiotagger.tag.datatype.ByteArraySizeTerminated
androidx.lifecycle.RepeatOnLifecycleKt$repeatOnLifecycle$3$1$1$1$1
com.google.gson.stream.JsonToken
org.simpleframework.xml.filter.SystemFilter
org.jcodec.containers.mp4.boxes.TrackFragmentBox
io.ktor.client.call.DoubleReceiveException
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1
com.tencent.bugly.crashreport.inner.InnerApi
com.thegrizzlylabs.sardineandroid.model.Unlock
com.caij.puremusic.model.AlbumWrapper
kotlinx.serialization.internal.TaggedDecoder$decodeNullableSerializableElement$1
com.umeng.analytics.process.UMProcessDBHelper$InsertEventCallback
com.caij.puremusic.db.model.HistoryEntityQueries$deleteById$1
androidx.startup.InitializationProvider
io.ktor.utils.io.charsets.MalformedInputException
com.google.android.exoplayer2.upstream.RawResourceDataSource$RawResourceDataSourceException
nl.adaptivity.xmlutil.serialization.InputKind
com.umeng.vt.diff.Event
com.caij.puremusic.MainModuleKt$roomModule$1$12
io.ktor.client.plugins.HttpCallValidator$Companion$install$2
com.caij.puremusic.db.model.PlaylistEntityQueries$GetPlaylistEntityByIdQuery
com.umeng.common.a
org.jaudiotagger.audio.generic.GenericTag$GenericTagTextField
com.umeng.commonsdk.statistics.noise.ABTest
org.jcodec.containers.mp4.boxes.EsdsBox$Kind
com.caij.puremusic.drive.model.SubsonicAlbum$$serializer
code.name.monkey.appthemehelper.common.views.ATESwitch
kotlin.reflect.ParameterizedTypeImpl$getTypeName$1$1
org.simpleframework.xml.util.Resolver$1
com.caij.puremusic.fragments.player.peek.PeekPlayerControlFragment
com.caij.puremusic.fragments.genres.GenresFragment$onViewCreated$1
com.caij.puremusic.model.Data
com.caij.puremusic.drive.adrive.WebRouteFragment
org.simpleframework.xml.core.Caller
com.umeng.analytics.pro.m$a
org.koin.androidx.scope.LifecycleViewModelScopeDelegate$2
androidx.fragment.app.strictmode.GetRetainInstanceUsageViolation
com.caij.puremusic.fragments.player.PlayerAlbumCoverFragment$removeSlideEffect$1
org.jaudiotagger.tag.id3.framebody.FrameBodySIGN
com.umeng.umzid.ZIDManager$c
com.caij.puremusic.model.UpdateInfo$ForcedUpgradeInfo$1
org.jaudiotagger.tag.id3.ID3Frames
com.caij.puremusic.drive.emby.EmbyEngine$getPlaylists$1
kotlin.coroutines.jvm.internal.RestrictedContinuationImpl
com.caij.puremusic.network.model.Artist
com.caij.puremusic.drive.model.EmbyAlbumsResponse$Companion
com.tencent.mm.opensdk.modelbiz.AddCardToWXCardPackage$WXCardItem
com.google.common.collect.MapMakerInternalMap$Segment
com.tencent.mm.opensdk.constants.ConstantsAPI$Token
com.caij.puremusic.fragments.folder.FoldersSettingFragment$onMenuItemSelected$1$1
nl.adaptivity.xmlutil.DomWriter$text$1
org.simpleframework.xml.transform.TimeZoneTransform
org.simpleframework.xml.stream.DocumentReader$Start
com.alipay.android.phone.mrpc.core.a.c
com.google.android.exoplayer2.decoder.DecoderInputBuffer$InsufficientCapacityException
android.support.v4.media.session.MediaSessionCompat$QueueItem
org.jaudiotagger.audio.AudioFileFilter
kotlinx.datetime.DateTimeFormatException
org.simpleframework.xml.transform.PrimitiveMatcher
com.caij.puremusic.fragments.folder.FoldersFragment$onFileSelected$1$1
io.ktor.client.engine.HttpClientEngineBase$close$1
com.umeng.commonsdk.framework.UMFrUtils$2
com.caij.puremusic.helper.menu.GenreMenuHelper$special$$inlined$inject$default$1
org.simpleframework.xml.core.CacheParameter
org.simpleframework.xml.core.ExtractorFactory$ExtractorBuilder
com.alipay.sdk.app.EnvUtils$EnvEnum
com.umeng.commonsdk.statistics.proto.d$c
com.google.gson.FieldNamingPolicy$1
com.umeng.commonsdk.config.d$b
com.umeng.commonsdk.UMConfigure
com.google.android.material.datepicker.MaterialCalendar
com.caij.puremusic.fragments.base.AbsPlayerFragment$toggleFavorite$1
okhttp3.internal.publicsuffix.PublicSuffixDatabase
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException
com.google.common.hash.LittleEndianByteArray$JavaLittleEndianBytes
io.ktor.util.LRUCache
nl.adaptivity.xmlutil.DomWriter$comment$1
org.simpleframework.xml.transform.Matcher
com.caij.puremusic.drive.model.PlexAlbumsResponse$Companion
com.caij.puremusic.db.model.SongQueries$songByPath$1
kotlin.collections.ArraysKt___ArraysKt$withIndex$1
com.umeng.analytics.pro.u
com.caij.puremusic.activities.base.AbsSlidingMusicPanelActivity$special$$inlined$viewModel$default$1
org.jaudiotagger.tag.id3.framebody.FrameBodyMVIN
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState
com.afollestad.materialdialogs.color.view.PreviewFrameView$onFinishInflate$1
org.jaudiotagger.tag.asf.AsfTag
com.google.common.hash.LittleEndianByteArray$JavaLittleEndianBytes$1
com.umeng.analytics.pro.aw$1
io.ktor.http.UnsafeHeaderException
com.google.common.hash.LittleEndianByteArray$UnsafeByteArray$2
com.alipay.android.app.IRemoteServiceCallback$Stub
com.caij.puremusic.fragments.playlists.PlaylistDetailsFragment$onViewCreated$1$1
com.caij.puremusic.helper.menu.PlaylistMenuHelper$handleMenuClick$2
com.caij.puremusic.service.MusicService$updateFavoriteReceiver$1$onReceive$1
com.yalantis.ucrop.UCropActivity
com.caij.puremusic.dialogs.DeleteSongsDialog$deleteSongs$1$1
org.jaudiotagger.audio.flac.metadatablock.MetadataBlock
com.umeng.analytics.pro.b$a
com.google.common.collect.AbstractMapBasedMultimap
com.caij.puremusic.db.model.SongQueries$firstSongByAlbumId$1
com.google.android.gms.tasks.RuntimeExecutionException
androidx.core.graphics.drawable.IconCompat
org.jaudiotagger.tag.datatype.Lyrics3TimeStamp
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier
com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport$SyncLevel
org.jcodec.containers.mp4.boxes.EsdsBox$NodeDescriptor
org.jaudiotagger.tag.id3.framebody.FrameBodyAENC
com.tencent.bugly.proguard.as$2
com.caij.puremusic.drive.jellyfin.JellyfinEngine$getPlaylists$1
org.jaudiotagger.tag.id3.framebody.FrameBodyIPLS
com.caij.puremusic.drive.model.MediaStream$$serializer
com.alipay.apmobilesecuritysdk.b.a
com.umeng.commonsdk.UMConfigure$4
com.umeng.analytics.pro.d
com.umeng.commonsdk.vchannel.a
com.google.android.material.bottomsheet.BottomSheetDialog
com.caij.vip.AliPayPresent$createOrder$1
com.caij.puremusic.fragments.albums.AlbumDetailsFragment
org.jaudiotagger.audio.wav.chunk.WavFactChunk
com.umeng.analytics.Gender
com.caij.puremusic.db.model.SongEntityQueries$deleteSongFromPlaylist$1
io.ktor.client.plugins.HttpCallValidator$processException$1
com.umeng.analytics.pro.ai$1
io.ktor.http.HttpHeaderValueParserKt$parseHeaderValueItem$parameters$1
kotlinx.coroutines.internal.ThreadContextKt$findOne$1
org.jaudiotagger.audio.aiff.AiffInfoReader
com.umeng.commonsdk.stateless.a
org.simpleframework.xml.core.MapFactory
com.caij.puremusic.fragments.playlists.PlaylistDetailsFragment$loadData$1$2
com.caij.puremusic.drive.baidu.BaiduDriveEngine$getFolderFiles$1
com.afollestad.materialdialogs.internal.list.DialogRecyclerView$attach$1
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$deleteSongBySource$1
retrofit2.KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$2
org.jaudiotagger.audio.ogg.util.OggCRCFactory
com.caij.puremusic.service.GlobalLyricsManager$update$1$1
com.umeng.commonsdk.internal.utils.h
com.google.android.gms.auth.api.signin.internal.GoogleSignInOptionsExtensionParcelable
com.caij.puremusic.fragments.player.full.FullPlaybackControlsFragment$toggleFavorite$1
org.simpleframework.xml.core.CompositeListUnion
com.caij.puremusic.db.model.SongQueries$GetSongCountBySourceIdQuery$execute$1
com.caij.puremusic.helper.menu.PlaylistMenuHelper$handleMenuClick$3$1
com.google.common.collect.ImmutableCollection
org.jaudiotagger.tag.InvalidFrameException
com.tencent.bugly.proguard.j
com.caij.vip.ClientWeixinPayResponse
com.caij.puremusic.helper.menu.PlaylistMenuHelper$handleMenuClick$3
com.caij.puremusic.activities.tageditor.SongTagEditorActivityV2$loadCurrentImage$1
com.caij.puremusic.db.model.ArtistQueries$insert$1
com.tencent.mm.opensdk.channel.MMessageActV2$1
com.caij.puremusic.drive.model.PlaylistMetadata$$serializer
com.caij.puremusic.activities.tageditor.AlbumTagEditorActivityV2$onCreate$1$1
org.jaudiotagger.tag.id3.framebody.FrameBodyTSOC
com.caij.puremusic.fragments.folder.FoldersSettingFragment$listSongs$2
org.simpleframework.xml.transform.PackageMatcher
com.tencent.bugly.proguard.aq
org.jaudiotagger.tag.id3.ID3v11Tag$1
android.support.v4.graphics.drawable.IconCompatParcelizer
com.caij.puremusic.activities.DriveModeActivity$special$$inlined$inject$default$1
com.tencent.mm.opensdk.diffdev.a.d
org.simpleframework.xml.stream.StreamReader$End
com.tencent.mm.opensdk.modelbiz.WXQRCodePay
io.ktor.client.plugins.contentnegotiation.ContentNegotiation$Plugin$install$1
org.jaudiotagger.tag.id3.framebody.FrameBodyTIT2
io.ktor.client.engine.okhttp.OkHttpEngine$executeHttpRequest$2
com.bumptech.glide.load.engine.GlideException
com.caij.puremusic.fragments.backup.BackupFragment$special$$inlined$viewModels$default$4
org.simpleframework.xml.core.Complete
com.caij.vip.VipApiService
com.tencent.mm.opensdk.modelmsg.WXLocationObject
com.caij.puremusic.dialogs.AddToPlaylistDialog$special$$inlined$sharedViewModel$default$2
com.caij.puremusic.db.model.SongEntityQueries$checkSongPlaylistExists$1
org.simpleframework.xml.stream.IdentityStyle
org.simpleframework.xml.core.CompositeInlineMap
com.caij.vip.SeeApiResponse
com.caij.puremusic.drive.webdav.WebDAVDriveEngine$listFile$xml$1
com.umeng.analytics.filter.a
com.caij.puremusic.drive.model.SubsonicResponse
org.jcodec.containers.mp4.boxes.TrunBox
com.caij.puremusic.fragments.settings.MainSettingsFragment
org.jaudiotagger.tag.mp4.field.Mp4TagByteField
com.caij.puremusic.fragments.settings.OtherSettingsFragment$special$$inlined$sharedViewModel$default$2
com.tencent.mm.opensdk.modelmsg.WXMediaMessage
androidx.appcompat.widget.DialogTitle
com.tencent.mm.opensdk.modelbiz.WXInvoiceAuthInsert$Req
org.jaudiotagger.audio.flac.FlacFileReader
com.caij.puremusic.db.model.SongQueries$songsByNameAlbum$1
org.jaudiotagger.tag.id3.AbstractID3Tag
com.alipay.android.phone.mrpc.core.b$b
com.caij.puremusic.views.insets.InsetsConstraintLayout$1$1
com.caij.puremusic.fragments.player.adaptive.AdaptivePlaybackControlsFragment
org.jaudiotagger.tag.id3.ID3Tags
com.umeng.commonsdk.statistics.proto.b$b
com.umeng.commonsdk.internal.crash.a
com.google.android.gms.internal.play_billing.zzeu
com.caij.puremusic.repository.SyncSongRepository$sortedSongs$3
com.alipay.apmobilesecuritysdk.face.APSecuritySdk
org.jaudiotagger.audio.aiff.AiffFileWriter
androidx.appcompat.widget.ActionMenuView
com.google.common.collect.NaturalOrdering
com.tencent.bugly.proguard.bv
com.caij.puremusic.db.model.Artist
com.caij.puremusic.fragments.LibraryViewModel$deleteRoomPlaylist$1
com.afollestad.materialdialogs.color.DialogColorChooserExtKt$setupCustomPage$5
com.tencent.bugly.proguard.aa
com.caij.puremusic.drive.util.Auth20Util$getToken$1
org.simpleframework.xml.stream.NodeExtractor
com.umeng.analytics.pro.az
com.caij.puremusic.fragments.player.cardblur.CardBlurFragment
com.afollestad.materialdialogs.input.DialogInputExtKt$input$1
org.simpleframework.xml.core.ModelList
com.caij.puremusic.fragments.folder.FoldersFragment$onMenuItemSelected$1
com.caij.puremusic.db.model.ArtistQueries$artistByName$1
com.caij.puremusic.drive.model.SubsonicPlaylist$Companion
io.ktor.http.Url$encodedPathAndQuery$2
com.bumptech.glide.request.SingleRequest$Status
com.caij.puremusic.db.model.ArtistQueries$ArtistByIdQuery
com.caij.puremusic.network.model.LastFmTrack$Track
org.simpleframework.xml.core.ElementParameter$Contact
com.google.android.material.color.utilities.QuantizerWu$Direction
com.alipay.apmobilesecuritysdk.face.TMNTokenClient$1
com.caij.puremusic.fragments.other.UserInfoFragment$saveImage$2
org.jaudiotagger.tag.id3.framebody.FrameBodyRVRB
org.jaudiotagger.audio.SupportedFileFormat$8
com.caij.puremusic.db.model.PlaylistEntityQueries$CheckPlaylistExistsQuery$execute$1
android.support.v4.media.AudioAttributesCompatParcelizer
com.tencent.bugly.proguard.ab
org.jaudiotagger.audio.generic.AudioFileReader
org.jcodec.containers.mp4.boxes.SampleSizesBox
org.jaudiotagger.tag.datatype.DataTypes
nl.adaptivity.xmlutil.serialization.XmlEncoderBase$MapEncoder$encodeSerializableElement$1
com.caij.puremusic.drive.model.DavProperties
com.thegrizzlylabs.sardineandroid.model.EntityWithAnyElement
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10$1
io.ktor.websocket.CloseReason$Codes
org.jaudiotagger.tag.InvalidDataTypeException
com.tencent.mm.opensdk.R
com.google.android.exoplayer2.drm.DrmInitData$SchemeData
com.caij.puremusic.db.model.PlaylistEntityQueries
com.caij.puremusic.fragments.search.SearchFragment$onViewCreated$6
org.jaudiotagger.tag.mp4.field.Mp4TagTextNumberField
org.jaudiotagger.logging.ErrorMessage
com.caij.puremusic.views.TopAppBarLayout$1
com.caij.puremusic.fragments.backup.BackupFragment$onBackupClicked$1
kotlin.io.FileWalkDirection
com.bumptech.glide.Registry$NoModelLoaderAvailableException
org.jaudiotagger.tag.id3.valuepair.ChannelTypes
com.caij.puremusic.network.model.LastFmAlbum$Album$Wiki
com.caij.puremusic.db.model.AlbumQueries
com.tencent.bugly.proguard.w
com.umeng.analytics.process.a$a
com.caij.puremusic.extensions.ViewExtensionsKt$drawAboveSystemBars$1$1
org.simpleframework.xml.core.ModelMap
org.jaudiotagger.audio.SupportedFileFormat$12
com.tencent.mm.opensdk.modelbiz.OpenRankList$Req
com.caij.puremusic.adapter.album.AlbumCoverPagerAdapter$AlbumCoverFragment
org.jaudiotagger.audio.aiff.chunk.SoundChunk
io.ktor.client.request.HttpRequestBuilder$setCapability$capabilities$1
org.simpleframework.xml.transform.ArrayTransform
org.jaudiotagger.audio.generic.Utils
com.caij.puremusic.drive.model.BaiduFileResponse$Companion
org.simpleframework.xml.core.Composite
com.alipay.android.phone.mrpc.core.e
com.google.android.material.bottomsheet.BottomSheetBehavior$5
com.tencent.bugly.proguard.as$1
com.afollestad.materialdialogs.color.view.SeekBarGroupLayout
com.caij.puremusic.drive.model.SubsonicAlbum$Companion
org.jcodec.containers.mp4.BoxFactory
com.caij.puremusic.views.AccentIcon
com.google.android.material.internal.CheckableImageButton$SavedState
com.r0adkll.slidr.model.SlidrPosition
org.koin.android.ext.koin.KoinExtKt$androidContext$1
com.umeng.analytics.process.UMProcessDBDatasSender
kotlinx.coroutines.internal.ThreadContextKt$updateState$1
androidx.fragment.app.strictmode.WrongFragmentContainerViolation
com.caij.puremusic.drive.model.SearchResult3$Companion
io.ktor.utils.io.internal.SequentialCopyToKt$copyToSequentialImpl$1
com.tencent.bugly.proguard.am
com.google.common.base.Equivalence$Equals
org.repackage.a.a.a.a.a
com.google.android.exoplayer2.metadata.id3.PrivFrame
org.jaudiotagger.tag.datatype.BooleanByte
com.umeng.commonsdk.framework.UMModuleRegister
io.ktor.client.plugins.DefaultTransformKt$defaultTransformers$1
com.caij.puremusic.drive.dropbox.DropboxDriveFactory$createFolder$1
androidx.preference.SwitchPreference
org.jaudiotagger.audio.asf.AsfFileReader
com.caij.puremusic.fragments.genres.GenreDetailsViewModel$loadGenreSongs$1$1
org.simpleframework.xml.filter.StackFilter
androidx.preference.TwoStatePreference
org.jaudiotagger.audio.flac.FlacTagReader$1
com.caij.puremusic.db.model.SongEntityQueries$GetPlayListSongCountQuery$execute$1
com.caij.puremusic.fragments.LibraryViewModel$syncSource$4
io.ktor.http.Url$encodedUser$2
org.jaudiotagger.tag.InvalidFrameIdentifierException
com.caij.puremusic.drive.model.ArtistItem
com.tencent.mm.opensdk.modelbiz.WXChannelOpenEvent$Resp
org.simpleframework.xml.core.Schema
com.alipay.android.phone.mrpc.core.c
org.jaudiotagger.tag.datatype.AbstractDataTypeList
androidx.preference.internal.PreferenceImageView
io.ktor.client.call.NoTransformationFoundException
com.google.android.material.chip.ChipGroup
org.jaudiotagger.tag.flac.FlacTag
org.jcodec.containers.mp4.boxes.SampleEntry
com.umeng.analytics.process.c$a
androidx.preference.ListPreference$SavedState
com.caij.puremusic.activities.tageditor.AlbumTagEditorActivityV2$writeToFiles$2
com.caij.puremusic.db.model.SongEntityQueries$CheckSongPlaylistExistsQuery$execute$1
androidx.fragment.app.FragmentManagerState
com.caij.puremusic.db.model.AlbumQueries$searchAlbumsByName$1
io.ktor.client.HttpClientConfig$install$2
org.jcodec.containers.mp4.boxes.SimpleBoxFactory
com.umeng.commonsdk.stateless.d$2
org.repackage.com.vivo.identifier.IdentifierIdClient
com.umeng.analytics.pro.an
com.caij.puremusic.drive.util.Auth20Util$refreshToken$1
nl.adaptivity.xmlutil.EventType$IGNORABLE_WHITESPACE
com.tencent.mm.opensdk.modelbiz.WXChannelOpenLive$Resp
org.jaudiotagger.audio.iff.Chunk
org.jaudiotagger.audio.dsf.Dsf
com.caij.puremusic.db.model.SongQueries$songsByIds$1
org.jaudiotagger.tag.reference.ID3V2Version
com.afollestad.materialdialogs.color.view.PreviewFrameView$onHexChanged$1
com.google.gson.internal.LinkedTreeMap
org.jaudiotagger.audio.flac.FlacTagWriter$MetadataBlockInfo
org.jaudiotagger.audio.mp4.Mp4FileWriter
com.tencent.bugly.crashreport.crash.h5.H5JavaScriptInterface
com.afollestad.materialdialogs.customview.DialogCustomViewExtKt$customView$$inlined$also$lambda$1
com.umeng.commonsdk.statistics.internal.StatTracer$a
com.caij.puremusic.dialogs.SongDetailDialog$onCreateDialog$2$2
org.simpleframework.xml.core.ClassInstantiator
com.caij.puremusic.fragments.player.color.ColorFragment
androidx.lifecycle.LiveDataScopeImpl$emit$2
org.simpleframework.xml.stream.PullReader
com.alipay.android.phone.mrpc.core.g
com.umeng.analytics.pro.ay
com.umeng.analytics.pro.bd
org.simpleframework.xml.core.DefaultScanner
com.google.gson.FieldNamingPolicy$5
com.caij.puremusic.fragments.playlists.PlaylistDetailsFragment$loadData$1
okhttp3.Protocol
org.jaudiotagger.tag.id3.framebody.FrameBodyTDAT
com.caij.puremusic.db.model.SongQueries$SongsByIdsQuery
com.caij.puremusic.fragments.player.blur.BlurPlaybackControlsFragment
com.umeng.analytics.pro.bk
androidx.fragment.app.ListFragment
com.caij.puremusic.fragments.folder.FoldersFragment
com.umeng.commonsdk.statistics.internal.c$2
okhttp3.TlsVersion
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgramWithToken$Resp
com.umeng.commonsdk.statistics.idtracking.a
androidx.mediarouter.app.MediaRouteChooserDialogFragment
com.caij.vip.PayBodyResponse
com.caij.puremusic.db.model.ServerSongCoverQueries$getById$1
com.afollestad.materialdialogs.internal.list.DialogRecyclerView$onAttachedToWindow$1
com.umeng.analytics.pro.c
com.caij.puremusic.util.AlbumUtil$sortAlbumSongs$songs$4
com.caij.vip.WebRouteFragment
com.umeng.commonsdk.statistics.proto.c$b
org.jaudiotagger.tag.id3.framebody.FrameBodyPRIV
com.caij.puremusic.db.model.SongEntityQueries$getSongEntity$1
com.umeng.commonsdk.internal.utils.UMInternalUtilsAgent
com.caij.puremusic.drive.model.SubsonicResponse$$serializer
kotlin.collections.EmptyMap
com.caij.puremusic.dialogs.DeletePlaylistDialog
com.google.common.collect.ByFunctionOrdering
com.caij.puremusic.drive.model.PlexSectionsResponse$$serializer
com.tencent.bugly.proguard.x
com.caij.puremusic.fragments.settings.NowPlayingSettingsFragment
com.alipay.android.app.IAlixPay
com.umeng.analytics.pro.r
org.simpleframework.xml.core.Replace
com.alipay.android.phone.mrpc.core.v
com.caij.puremusic.fragments.folder.manager.MusicFolderManagerFragment$showLongDialog$1$1$1
com.caij.puremusic.drive.webdav.WebDAVDriveEngine$syncWebDAV$1
javax.xml.namespace.QName
android.support.v4.media.AudioAttributesImplApi21Parcelizer
com.caij.puremusic.preferences.BlacklistPreference
com.caij.puremusic.drive.model.PlexLoginResponse
org.jcodec.containers.mp4.boxes.MetaBox
com.google.android.exoplayer2.metadata.mp4.MdtaMetadataEntry
com.caij.puremusic.fragments.base.AbsMusicServiceFragment
androidx.core.graphics.BlendModeCompat
com.caij.puremusic.drive.model.WebDAVToken$Companion
org.jcodec.containers.mp4.boxes.EsdsBox$ES
com.caij.puremusic.drive.model.Propstat$Companion
io.ktor.client.engine.okhttp.OkHttpEngineKt$convertToOkHttpRequest$1$1
com.tencent.bugly.R$string
com.tencent.mm.opensdk.modelbiz.WXChannelJumpUrlInfo
com.google.android.exoplayer2.metadata.scte35.PrivateCommand
com.caij.puremusic.drive.google.GoogleDriveEngine$getFileInfos$1
org.simpleframework.xml.transform.URLTransform
com.tencent.bugly.proguard.a
org.simpleframework.xml.core.MethodName
io.ktor.utils.io.ByteChannelSequentialBase$readRemainingSuspend$1
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultAreEquivalent$1
androidx.window.layout.SafeWindowLayoutComponentProvider$isFoldingFeatureValid$1
com.tencent.mm.opensdk.modelbiz.AddCardToWXCardPackage$Resp
io.ktor.util.StringValuesBuilderImpl$appendAll$1
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$deleteSongBySource$2
com.caij.puremusic.fragments.other.DetailListFragment$topPlayed$2
com.umeng.commonsdk.statistics.proto.b$e
com.tencent.bugly.proguard.bg$a
com.tencent.bugly.proguard.ag
org.simpleframework.xml.Order
com.caij.puremusic.db.model.SongQueries$songsByAlbumIdCount$1
kotlin.jvm.internal.PropertyReference1Impl
com.caij.puremusic.fragments.folder.FoldersSettingFragment$onFileMenuClicked$1$2$1
com.caij.puremusic.drive.model.AlbumSubsonicResponse
com.umeng.analytics.pro.g$a
org.koin.core.scope.Scope$resolveInstance$3
com.caij.puremusic.db.model.SearchAlbumResult
com.google.android.material.bottomsheet.BottomSheetDialog$2
org.simpleframework.xml.core.ElementArrayParameter
com.caij.puremusic.db.model.ServerSongCoverQueries$insert$2
io.ktor.client.engine.okhttp.OkUtilsKt$execute$2$1
com.caij.puremusic.network.model.LastFmTrack$Track$Toptags
org.simpleframework.xml.core.ElementListLabel
io.ktor.utils.io.ExceptionUtilsJvmKt$tryCopyException$5$1
com.tencent.bugly.proguard.ag$b
org.jaudiotagger.tag.id3.valuepair.ReceivedAsTypes
com.google.gson.FieldNamingPolicy
com.caij.puremusic.drive.model.DavResource$Companion
com.alipay.apmobilesecuritysdk.f.a
org.jcodec.containers.mp4.boxes.FileTypeBox
com.caij.puremusic.drive.plex.PlexEngine$getFolderArtists$1
org.jaudiotagger.tag.wav.WavTag
org.jaudiotagger.tag.asf.AsfTagTextField
androidx.preference.MultiSelectListPreferenceDialogFragmentCompat
com.caij.puremusic.fragments.player.lockscreen.LockScreenControlsFragment
com.umeng.commonsdk.debug.UMLog
com.caij.puremusic.util.PackageValidator$getSignatureSha256$1
com.tencent.mm.opensdk.diffdev.a.a
org.simpleframework.xml.convert.ScannerBuilder$Entry
org.jaudiotagger.test.MergeID3AndMP3Files$MP3FileFilter
com.google.android.gms.common.api.ResolvableApiException
androidx.fragment.app.FragmentViewModelLazyKt$createViewModelLazy$factoryPromise$1
com.alipay.android.phone.mrpc.core.a.a
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason
com.tencent.mm.opensdk.modelbiz.WXQRCodePay$Req
com.caij.puremusic.activities.MainActivity$handlePlaybackIntent$1$3
com.caij.puremusic.db.model.PlaylistEntityQueries$getPlaylistEntityById$1
com.tencent.mm.opensdk.modelmsg.WXStateJumpMiniProgramInfo
com.google.android.gms.internal.play_billing.zzbt
com.caij.puremusic.db.model.ServerAudioFormatQueries
com.tencent.mm.opensdk.modelbiz.WXInvoiceAuthInsert
com.umeng.analytics.pro.cc
com.tencent.mm.opensdk.modelbiz.AddCardToWXCardPackage
com.google.android.gms.internal.play_billing.zzau
com.caij.puremusic.MainModuleKt$roomModule$1$15
com.thegrizzlylabs.sardineandroid.impl.handler.VoidResponseHandler
com.alipay.android.phone.mrpc.core.HttpUrlHeader
org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId
kotlin.coroutines.jvm.internal.SuspendLambda
com.google.common.hash.BloomFilterStrategies
com.google.android.exoplayer2.upstream.AssetDataSource$AssetDataSourceException
org.jaudiotagger.tag.reference.ISOCountry
com.umeng.commonsdk.config.d$c
org.jaudiotagger.tag.datatype.AbstractIntStringValuePair
com.caij.puremusic.drive.model.PlexSongsResponse$$serializer
kotlinx.serialization.internal.EnumDescriptor$elementDescriptors$2
com.caij.puremusic.db.model.PlayCountEntity
com.tencent.bugly.proguard.k
com.google.android.material.floatingactionbutton.FloatingActionButton
code.name.monkey.appthemehelper.common.prefs.supportv7.ATEPreferenceCategory
com.umeng.analytics.pro.ai$a
org.jaudiotagger.tag.datatype.MultipleTextEncodedStringNullTerminated$Values
org.jaudiotagger.audio.aiff.AiffUtil
kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1
retrofit2.HttpException
org.jaudiotagger.tag.id3.framebody.FrameBodyDeprecated
com.google.android.exoplayer2.metadata.id3.CommentFrame
org.simpleframework.xml.core.FieldContact
org.koin.core.definition.BeanDefinition$toString$defOtherTypes$typesAsString$1
org.jaudiotagger.audio.flac.FlacStreamReader
io.ktor.client.plugins.HttpRequestLifecycleKt$attachToClientEngineJob$1
org.jaudiotagger.audio.SupportedFileFormat$3
io.ktor.utils.io.ByteBufferChannel$readSuspendLoop$1
com.google.android.exoplayer2.metadata.vorbis.VorbisComment
com.heinrichreimersoftware.materialintro.slide.FragmentSlide$FragmentSlideFragment
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand
org.jaudiotagger.audio.AudioFileIO
com.umeng.commonsdk.internal.utils.k$1
com.caij.puremusic.drive.model.Part$$serializer
com.umeng.commonsdk.internal.UMOplus
com.caij.puremusic.service.MusicService$playSongAt$1$1
kotlin.jvm.internal.Ref$BooleanRef
com.umeng.commonsdk.vchannel.Sender
com.google.android.gms.internal.play_billing.zzad
com.google.common.collect.ImmutableEntry
org.jaudiotagger.tag.TagOptionSingleton
com.caij.puremusic.dialogs.DeleteSongsDialog$onActivityResult$$inlined$extraNotNull$default$1
com.caij.puremusic.helper.WallpaperAccentManager$onColorsChangedListener$2
app.cash.sqldelight.RollbackException
com.tencent.bugly.proguard.t
com.umeng.commonsdk.config.f
com.tencent.mm.opensdk.constants.ConstantsAPI$OpenWebviewType
org.repackage.com.meizu.flyme.openidsdk.b
com.alipay.apmobilesecuritysdk.e.i
org.jaudiotagger.tag.id3.framebody.FrameBodyTLEN
org.jaudiotagger.tag.id3.ID3SyncSafeInteger
com.tencent.mm.opensdk.modelbiz.OpenWebview
com.caij.puremusic.fragments.backup.BackupViewModel$restoreBackup$1
org.jaudiotagger.tag.id3.Id3FieldType
org.simpleframework.xml.stream.PullReader$Entry
com.umeng.analytics.pro.o
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$GetByIdQuery$execute$1
io.ktor.client.plugins.HttpSend$DefaultSender$execute$1
org.simpleframework.xml.strategy.WriteGraph
org.simpleframework.xml.stream.PullReader$1
com.caij.puremusic.MainModuleKt$roomModule$1$4
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$1
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler
org.jaudiotagger.audio.mp3.MP3FileReader
com.caij.puremusic.db.model.ServerSongCover
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$PathBetweenNodesEnumeration
com.caij.puremusic.db.model.HistoryEntityQueries$insert$1
org.jcodec.containers.mp4.boxes.AudioSampleEntry
com.caij.puremusic.drive.jellyfin.JellyfinFactory$createFolder$1
org.jaudiotagger.tag.id3.framebody.AbstractID3v2FrameBody
com.umeng.analytics.pro.ak
org.simpleframework.xml.core.Revision
com.caij.puremusic.activities.DriveModeActivity$updateFavorite$1
com.caij.puremusic.drive.model.MediaStream
com.google.android.exoplayer2.upstream.cache.CacheDataSink$CacheDataSinkException
com.tencent.mm.opensdk.modelmsg.WXEmojiSharedObject
com.umeng.analytics.pro.ac
io.ktor.utils.io.ByteBufferChannel$readSuspendImpl$1
com.caij.puremusic.fragments.search.SearchFragment$onViewCreated$8
com.caij.puremusic.fragments.LibraryViewModel$addToPlaylist$1$4
com.caij.puremusic.database.SongEntityDaoImp$insertSongs$1
org.simpleframework.xml.convert.AnnotationStrategy
com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand
org.simpleframework.xml.core.TextException
com.google.android.exoplayer2.metadata.id3.GeobFrame
com.thegrizzlylabs.sardineandroid.model.Inherited
com.umeng.analytics.pro.bq
androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type
com.google.android.material.timepicker.ClockFaceView
com.caij.puremusic.activities.tageditor.SongTagEditorActivityV2$save$1$3
com.umeng.commonsdk.statistics.proto.b$d
org.jaudiotagger.utils.tree.EventListenerList
org.jaudiotagger.tag.datatype.PartOfSet$PartOfSetValue
androidx.core.app.RemoteActionCompatParcelizer
com.caij.puremusic.db.model.SongEntityQueries$SongsFromPlaylistQuery$execute$1
com.caij.puremusic.fragments.LibraryViewModel$getArtistByStrId$1
com.caij.puremusic.fragments.LibraryViewModel$clearHistory$1
androidx.appcompat.widget.SearchView
com.caij.puremusic.service.MusicService$onMediaMetadata$2
com.caij.puremusic.views.WidthFitSquareCardView
com.caij.puremusic.activities.tageditor.AlbumTagEditorActivityV2$save$1$1
io.ktor.client.plugins.HttpCallValidator$Companion$install$1
com.caij.puremusic.views.StatusBarView
com.caij.puremusic.fragments.LibraryViewModel$notifyAllChange$1
okhttp3.internal.http2.StreamResetException
com.caij.puremusic.db.model.FolderQueries$selectById$2
com.caij.puremusic.drive.model.AMetadata$$serializer
com.umeng.commonsdk.internal.d
com.caij.puremusic.drive.google.GoogleDriveEngine$getFiles$1
com.caij.puremusic.db.model.PlaylistEntityQueries$checkPlaylistExists$1
com.caij.puremusic.drive.model.BaiduFileResponse
androidx.preference.ListPreference
com.tencent.bugly.proguard.ag$a
org.jaudiotagger.tag.id3.framebody.FrameBodyGRID
nl.adaptivity.xmlutil.DomWriter$ignorableWhitespace$1
androidx.activity.ImmLeaksCleaner
com.tencent.bugly.crashreport.BuglyLog
com.caij.puremusic.drive.model.OneDriveFileResponse
org.simpleframework.xml.core.Instance
com.umeng.analytics.pro.s$1
org.repackage.a.a.a.a$a
com.caij.puremusic.fragments.backup.BackupFragment$showCreateBackupDialog$1$1
com.umeng.commonsdk.statistics.proto.a$d
org.simpleframework.xml.core.Structure
com.caij.puremusic.fragments.player.classic.ClassicPlayerFragment$updateSong$1$songInfo$1
com.caij.puremusic.service.MusicService$handleChangeInternal$3
com.umeng.commonsdk.debug.UMLogUtils
org.xmlpull.v1.XmlPullParserException
io.ktor.client.engine.okhttp.OkHttpEngineKt$toChannel$1
com.google.android.exoplayer2.upstream.HttpDataSource$InvalidContentTypeException
com.caij.puremusic.drive.model.PlayListItem$$serializer
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: boolean isValid
org.jaudiotagger.tag.id3.AbstractID3v2Frame$StatusFlags: byte writeFlags
org.repackage.com.vivo.identifier.IdentifierIdObserver: java.lang.String b
com.tencent.bugly.crashreport.common.strategy.StrategyBean: boolean l
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String CATALOG_NO
com.google.android.material.bottomsheet.BottomSheetDialog$1: com.google.android.material.bottomsheet.BottomSheetDialog this$0
com.umeng.commonsdk.statistics.common.ReportPolicy$DefconPolicy: com.umeng.commonsdk.statistics.noise.Defcon defcon
org.simpleframework.xml.strategy.Allocate: java.util.Map map
org.jaudiotagger.tag.id3.ID3v1Iterator: int lastIndex
org.jaudiotagger.audio.ogg.util.OggInfoReader: java.util.logging.Logger logger
com.caij.puremusic.drive.model.JellyfinFolder: java.lang.String CollectionType
com.umeng.commonsdk.UMConfigure: java.lang.Object lockObject
org.jaudiotagger.audio.wav.WavTagReader$1: int[] $SwitchMap$org$jaudiotagger$audio$wav$WavChunkType
com.alipay.android.phone.mrpc.core.t: com.alipay.android.phone.mrpc.core.ac a
org.simpleframework.xml.core.ElementListUnionLabel: org.simpleframework.xml.core.Expression path
org.jaudiotagger.audio.flac.FlacTagWriter: org.jaudiotagger.audio.flac.FlacTagCreator tc
com.caij.puremusic.db.model.ArtistQueries$ArtistByNameQuery$execute$1: com.caij.puremusic.db.model.ArtistQueries$ArtistByNameQuery this$0
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason CACHE_FULL
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey WORK_PART_LEVEL1_TYPE
org.simpleframework.xml.core.DetailScanner: org.simpleframework.xml.NamespaceList declaration
com.caij.puremusic.model.DriveFileParcelable: int sourceType
com.alipay.android.app.IAlixPay$Stub: java.lang.String DESCRIPTOR
com.thegrizzlylabs.sardineandroid.model.SearchRequest: java.lang.String query
org.jaudiotagger.audio.ogg.util.OggPageHeader$HeaderTypeFlag: byte fileValue
org.json.alipay.c: java.io.Reader b
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey ARTIST_SORT
com.umeng.analytics.pro.an$e: com.umeng.analytics.pro.an$e a
org.jaudiotagger.tag.images.AndroidArtwork: int height
org.simpleframework.xml.core.SetPart: org.simpleframework.xml.core.MethodType type
com.caij.puremusic.model.AbsCustomPlaylist$special$$inlined$inject$default$2: kotlin.jvm.functions.Function0 $parameters
org.simpleframework.xml.core.ElementMapParameter: int index
com.umeng.analytics.pro.e$d$a: java.lang.String h
com.umeng.commonsdk.framework.a: int h
com.thegrizzlylabs.sardineandroid.model.Prop: java.lang.String getcontentlanguage
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey ARTISTS
com.umeng.commonsdk.internal.utils.k: java.lang.Object e
com.google.android.gms.signin.internal.zag: android.os.Parcelable$Creator CREATOR
com.caij.puremusic.drive.model.ParentReference: java.lang.String driveId
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_WORK_PART_LEVEL5
com.alipay.apmobilesecuritysdk.e.c: java.lang.String e
com.caij.puremusic.network.model.ArtistWrapper: java.lang.Integer total
com.google.android.material.bottomsheet.BottomSheetBehavior: int DEFAULT_SIGNIFICANT_VEL_THRESHOLD
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int LAYER_III_SLOT_SIZE
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey PERIOD
io.ktor.utils.io.ByteBufferChannel: int writeSuspensionSize
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script PHOENICIAN
com.umeng.analytics.pro.o: java.lang.String p
com.thegrizzlylabs.sardineandroid.DavQuota: long quotaUsedBytes
org.jcodec.containers.mp4.boxes.MovieExtendsHeaderBox: int fragmentDuration
com.caij.puremusic.db.model.Song: java.lang.String path
com.caij.puremusic.db.model.SongQueries$songsByNameAlbum$1: com.caij.puremusic.db.model.SongQueries this$0
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey TAGS
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey ITUNES_NORM
com.tencent.mm.opensdk.modelmsg.WXFileObject: int contentLengthLimit
com.caij.puremusic.model.Contributor: java.lang.String summary
okhttp3.Protocol: okhttp3.Protocol QUIC
org.simpleframework.xml.strategy.ReadGraph: java.lang.String length
com.umeng.commonsdk.internal.c: java.lang.String g
org.jcodec.containers.mp4.boxes.AliasBox: int DirectoryIDs
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_URL
com.afollestad.materialdialogs.LayoutMode: com.afollestad.materialdialogs.LayoutMode[] $VALUES
com.caij.vip.GoodOrder: java.lang.String activationCode
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey COUNTRY
com.tencent.bugly.proguard.o: java.lang.String moduleName
com.umeng.commonsdk.UMConfigure$3: android.content.Context a
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String TIMBRE
org.simpleframework.xml.core.Function: java.lang.reflect.Method method
com.tencent.mm.opensdk.modelbiz.WXChannelOpenFeed$Resp: java.lang.String extMsg
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_WORK_PART_LEVEL3_ID
org.simpleframework.xml.stream.PullReader$Entry: java.lang.String name
com.google.android.material.bottomsheet.BottomSheetBehavior$2: com.google.android.material.bottomsheet.BottomSheetBehavior this$0
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
com.caij.puremusic.db.model.PlayCountEntityQueries$playCountSongs$1: kotlin.jvm.functions.Function3 $mapper
com.caij.puremusic.drive.model.FMediaContainer: java.util.List Directory
com.tencent.mm.opensdk.modelmsg.WXLiteAppObject: int source
com.caij.puremusic.drive.model.Multistatus$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentHostCallback mHost
com.tencent.bugly.proguard.g: short a
org.jaudiotagger.tag.id3.AbstractID3v2Tag: int FIELD_TAG_MINOR_VERSION_LENGTH
com.umeng.commonsdk.statistics.proto.a$e: com.umeng.commonsdk.statistics.proto.a$e[] h
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey CLASSICAL_CATALOG
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a i
com.tencent.bugly.proguard.bq: java.lang.String j
org.simpleframework.xml.core.StructureBuilder: org.simpleframework.xml.core.Label version
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int MODE_EXTENSION_ONE
org.repackage.com.zui.opendeviceidlibrary.BuildConfig: java.lang.String f
org.simpleframework.xml.core.MethodType: org.simpleframework.xml.core.MethodType SET
org.simpleframework.xml.stream.NodeWriter: org.simpleframework.xml.stream.Formatter writer
com.tencent.mm.opensdk.modelmsg.WXEmojiSharedObject: java.lang.String thumburl
org.jaudiotagger.tag.asf.AsfTag$AsfFieldIterator: java.util.Iterator fieldIterator
com.umeng.analytics.pro.am: java.lang.String d
com.caij.puremusic.drive.model.PlaylistMetadata: java.lang.String title
com.tencent.bugly.crashreport.crash.CrashDetailBean: boolean k
com.google.android.gms.internal.play_billing.zzcj: com.google.android.gms.internal.play_billing.zzcj zzc
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzv
org.jaudiotagger.tag.datatype.StringHashMap: java.util.Map valueToKey
org.jaudiotagger.tag.id3.ID3v24Tag: byte MAJOR_VERSION
com.umeng.commonsdk.BuildConfig: java.lang.String FLAVOR
org.simpleframework.xml.core.LabelExtractor$LabelBuilder: java.lang.Class entry
com.umeng.commonsdk.utils.d: java.lang.String j
com.tencent.bugly.proguard.at: int g
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$BreadthFirstEnumeration$Queue: org.jaudiotagger.utils.tree.DefaultMutableTreeNode$BreadthFirstEnumeration this$1
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey RANKING
com.caij.puremusic.db.model.ServerSongCoverQueries$deleteById$1: java.lang.String $id
com.umeng.commonsdk.statistics.noise.ImLatent: int _DEFAULT_HOURS
com.tencent.mm.opensdk.modelmsg.WXLocationObject: java.lang.String TAG
org.simpleframework.xml.core.AnnotationFactory: org.simpleframework.xml.stream.Format format
com.umeng.commonsdk.statistics.internal.c$1: com.umeng.commonsdk.statistics.internal.c a
org.jaudiotagger.utils.FileTypeUtil: java.util.Map signatureMap
org.jaudiotagger.audio.flac.FlacTagReader: org.jaudiotagger.tag.vorbiscomment.VorbisCommentReader vorbisCommentReader
com.tencent.bugly.proguard.c: java.util.HashMap a
com.umeng.commonsdk.internal.utils.d$a: java.lang.String i
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey TITLE
org.simpleframework.xml.filter.MapFilter: org.simpleframework.xml.filter.Filter filter
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey PERFORMER
com.alipay.sdk.app.PayTask: java.lang.String e
org.jcodec.containers.mp4.boxes.AliasBox: java.lang.String type
com.caij.puremusic.network.model.Image: java.lang.String url
org.jaudiotagger.tag.mp4.field.Mp4DiscNoField: int NONE_VALUE_INDEX
com.umeng.commonsdk.statistics.proto.Response$e: com.umeng.commonsdk.statistics.proto.Response$e a
com.thegrizzlylabs.sardineandroid.model.Propstat: com.thegrizzlylabs.sardineandroid.model.Prop prop
com.caij.puremusic.db.model.PlaylistEntity: long playListId
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MUSICBRAINZ_ARTISTID
com.tencent.bugly.proguard.br: int b
com.caij.puremusic.db.model.SearchAlbumResult: java.lang.String url
com.umeng.commonsdk.statistics.idtracking.Envelope: boolean encrypt
org.jaudiotagger.tag.images.AndroidArtwork: int pictureType
com.umeng.commonsdk.stateless.d$5: java.lang.String a
org.jaudiotagger.tag.mp4.field.Mp4TrackField: int TRACK_TOTAL_INDEX
com.tencent.mm.opensdk.modelbiz.WXLaunchWxaRedirectingPage: java.lang.String URI_PATH
org.simpleframework.xml.transform.ArrayTransform: org.simpleframework.xml.transform.StringArrayTransform split
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind H263_VIDEO
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier ODHE
com.umeng.commonsdk.statistics.common.d: com.umeng.commonsdk.statistics.common.d a
com.caij.puremusic.db.model.ServerLyricsQueries$deleteSongBySource$1: long $sourceId
com.alipay.sdk.app.PayTask: java.lang.String f
com.tencent.mm.opensdk.constants.ConstantsAPI: java.lang.String ACTION_HANDLE_APP_REGISTER
org.jaudiotagger.tag.TagOptionSingleton: org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistReadOptions vorbisAlbumArtistReadOptions
org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId: java.lang.String c
org.simpleframework.xml.core.ElementMapLabel: java.lang.String name
org.simpleframework.xml.core.Factory: java.lang.Class override
org.simpleframework.xml.core.PrimitiveScanner$EmptySection: org.simpleframework.xml.core.Scanner scanner
com.google.android.gms.internal.play_billing.zzex: com.google.android.gms.internal.play_billing.zzex zza
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.lang.String TAGID
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MUSICBRAINZ_WORK_COMPOSITION
com.tencent.mm.opensdk.constants.ConstantsAPI$AppSupportContentFlag: long MMAPP_SUPPORT_XLSX
kotlinx.coroutines.CancelledContinuation: int _resumed
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage NO_DELETER_FOR_THIS_FORMAT
org.simpleframework.xml.strategy.VisitorStrategy: org.simpleframework.xml.strategy.Visitor visitor
org.jcodec.containers.mp4.boxes.FormatBox: java.lang.String fmt
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey ARTISTS_SORT
com.tencent.mm.opensdk.modelmsg.LaunchFromWX$Req: java.lang.String country
com.umeng.analytics.pro.am: java.lang.String aW
com.tencent.bugly.proguard.d: com.tencent.bugly.proguard.k f
com.umeng.commonsdk.UMConfigure: java.lang.String WRAPER_TYPE_COCOS2DX_XLUA
com.caij.puremusic.drive.model.WebDAVToken: java.lang.String pwd
com.tencent.bugly.proguard.aj: int d
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_WORK
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier TRACKNO
com.caij.puremusic.db.model.SongEntityQueries$isSongExistsInPlaylist$2: com.caij.puremusic.db.model.SongEntityQueries$isSongExistsInPlaylist$2 INSTANCE
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_WORK_PART_LEVEL1
org.jaudiotagger.utils.FileTypeUtil: int MAX_SIGNATURE_SIZE
com.umeng.commonsdk.internal.utils.d$a: java.lang.String f
com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker$1: com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker this$1
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey ENSEMBLE_SORT
org.repackage.com.miui.deviceid.BuildConfig: java.lang.String c
com.tencent.bugly.proguard.ac: java.lang.String i
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_ORIGARTIST
com.tencent.mm.opensdk.modelmsg.SendAuth$Resp: java.lang.String state
com.caij.puremusic.drive.model.Type: java.lang.String type
org.simpleframework.xml.core.ElementMapLabel: org.simpleframework.xml.stream.Format format
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a j
com.umeng.commonsdk.statistics.idtracking.e$a: java.util.Set b
org.jaudiotagger.tag.id3.ID3v24Tag: java.lang.String TYPE_TAGRESTRICTION
org.jaudiotagger.tag.id3.framebody.FrameBodyRBUF: int EMBED_FLAG_BIT_POSITION
org.jaudiotagger.audio.asf.data.AudioStreamChunk: long WMA_PRO
com.umeng.analytics.pro.b$a: int c
androidx.fragment.app.Fragment: java.lang.Runnable mPostponedDurationRunnable
com.google.android.gms.internal.play_billing.zza: com.google.android.gms.internal.play_billing.zza zzo
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$deleteById$2: com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$deleteById$2 INSTANCE
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$BreadthFirstEnumeration$Queue$QNode: org.jaudiotagger.utils.tree.DefaultMutableTreeNode$BreadthFirstEnumeration$Queue this$2
com.umeng.analytics.pro.s$a: com.umeng.analytics.pro.s a
org.repackage.com.vivo.identifier.IdentifierIdClient: int n
com.alipay.sdk.m.u.g: java.lang.String b
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_MOOD
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey ORIGINAL_LYRICIST
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier LYRICIST
com.umeng.commonsdk.statistics.UMServerURL: java.lang.String PATH_PUSH_REGIST
com.umeng.commonsdk.config.d: java.lang.String[] h
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_WORK_PART_LEVEL2
org.simpleframework.xml.core.AttributeParameter: org.simpleframework.xml.core.Expression expression
org.jcodec.containers.mp4.boxes.AliasBox$ExtraField: byte[] data
com.umeng.commonsdk.vchannel.b: long d
com.tencent.bugly.proguard.ac: com.tencent.bugly.proguard.ak c
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country ALAND_ISLANDS
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey CATALOGNUMBER
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey WORK_PART_LEVEL3
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: byte[] d
org.jcodec.containers.mp4.boxes.AliasBox: short nlvlTo
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage INVALID_FIELD_FOR_ID3V1TAG
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey CHOIR_SORT
org.jaudiotagger.tag.id3.Id3FieldType: org.jaudiotagger.tag.id3.Id3FieldType BINARY
com.umeng.analytics.pro.ap: java.lang.String a
com.caij.puremusic.model.smartplaylist.PlaylistIdGenerator: com.caij.puremusic.model.smartplaylist.PlaylistIdGenerator INSTANCE
com.caij.puremusic.fragments.search.Filter: com.caij.puremusic.fragments.search.Filter ALBUM_ARTISTS
com.caij.puremusic.drive.model.JellyfinFolder$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.simpleframework.xml.stream.Formatter: char[] AND
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey CUSTOM1
com.caij.puremusic.db.model.AlbumQueries$searchAlbumsByName$2: com.caij.puremusic.db.model.AlbumQueries$searchAlbumsByName$2 INSTANCE
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.tencent.mm.opensdk.modelmsg.WXStateJumpUrlInfo: java.lang.String jumpUrl
org.simpleframework.xml.stream.Verbosity: org.simpleframework.xml.stream.Verbosity[] $VALUES
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b n
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey DJMIXER
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_WORK_PART_LEVEL5
com.umeng.commonsdk.config.d: long a
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_EVENT_TIMING_CODES
com.umeng.analytics.pro.o$c: int c
com.umeng.analytics.pro.e$c$b: java.lang.String c
org.jaudiotagger.tag.id3.ID3Frames: java.util.Map convertv22Tov23
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey CUSTOM1
org.simpleframework.xml.core.CompositeListUnion: org.simpleframework.xml.strategy.Type type
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_WORK_PART_LEVEL4
com.caij.puremusic.drive.model.PlexUser$$serializer: com.caij.puremusic.drive.model.PlexUser$$serializer INSTANCE
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier IHDR
com.google.android.gms.internal.play_billing.zza: com.google.android.gms.internal.play_billing.zza zzi
org.simpleframework.xml.core.Introspector: org.simpleframework.xml.stream.Format format
com.caij.puremusic.drive.model.Prop$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey DESCRIPTION
com.umeng.commonsdk.UMConfigure$BS_TYPE: com.umeng.commonsdk.UMConfigure$BS_TYPE SHARE
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey FBPM
org.jaudiotagger.utils.FileTypeUtil: java.lang.Integer[] mp3v1Sig_1
com.tencent.mm.opensdk.modelmsg.LaunchFromWX$Req: java.lang.String TAG
com.tencent.bugly.crashreport.biz.UserInfoBean: int q
com.caij.puremusic.model.PlaylistWrapper: int songCount
com.google.android.material.bottomsheet.BottomSheetBehavior$5: com.google.android.material.bottomsheet.BottomSheetBehavior this$0
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_RELEASE_COUNTRY
org.simpleframework.xml.core.ElementMapUnionParameter: java.lang.String path
com.google.android.material.bottomsheet.BottomSheetBehavior: java.lang.ref.WeakReference viewRef
org.jaudiotagger.audio.aiff.AiffAudioHeader: java.util.List comments
com.umeng.commonsdk.statistics.internal.c: java.lang.String a
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: int bitsPerSample
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey WORK_TYPE
org.jaudiotagger.audio.mp3.MPEGFrameHeader: java.util.Map samplingRateMap
org.simpleframework.xml.core.ModelAssembler: org.simpleframework.xml.core.ExpressionBuilder builder
org.jaudiotagger.tag.id3.AbstractID3Tag: java.lang.String loggingFilename
com.tencent.bugly.crashreport.crash.h5.H5JavaScriptInterface: java.lang.String b
org.jaudiotagger.audio.asf.data.StreamChunk: long timeOffset
org.simpleframework.xml.core.ElementLabel: org.simpleframework.xml.stream.Format format
com.umeng.analytics.pro.d: java.lang.String an
androidx.fragment.app.Fragment: android.view.LayoutInflater mLayoutInflater
com.umeng.commonsdk.utils.d: java.lang.String i
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country GUYANA
com.umeng.commonsdk.utils.UMUtils: java.lang.String VALUE_ABTEST_VERSION
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey WORK_PART_LEVEL2
org.jaudiotagger.tag.id3.valuepair.EventTimingTimestampTypes: int TIMESTAMP_KEY_FIELD_SIZE
org.jaudiotagger.audio.ogg.util.VorbisHeader: int FIELD_CAPTURE_PATTERN_LENGTH
com.caij.puremusic.drive.model.SubsonicSearchResponse: java.lang.String version
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MOOD_DANCEABILITY
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_MEDIA_TYPE
org.jaudiotagger.tag.id3.AbstractID3v1Tag: int FIELD_YEAR_POS
androidx.preference.SeekBarPreference$SavedState: android.os.Parcelable$Creator CREATOR
org.simpleframework.xml.core.PrimitiveKey: org.simpleframework.xml.core.PrimitiveFactory factory
org.jaudiotagger.test.TestAudioTagger: int failed
com.caij.puremusic.db.model.HistoryEntityQueries$deleteById$2: com.caij.puremusic.db.model.HistoryEntityQueries$deleteById$2 INSTANCE
org.simpleframework.xml.core.PrimitiveKey: org.simpleframework.xml.strategy.Type type
org.jaudiotagger.tag.id3.framebody.FrameBodySYTC: int MPEG_FRAMES
com.google.android.material.bottomsheet.BottomSheetDragHandleView: com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback bottomSheetCallback
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country KAZAKHSTAN
nl.adaptivity.xmlutil.core.KtXmlWriter$WriteState: nl.adaptivity.xmlutil.core.KtXmlWriter$WriteState InTagContent
com.tencent.bugly.proguard.bl: java.lang.String e
org.jaudiotagger.tag.asf.AsfTag$1: int[] $SwitchMap$org$jaudiotagger$tag$asf$AsfFieldKey
com.umeng.analytics.pro.bh: com.umeng.analytics.pro.bi c
org.simpleframework.xml.core.ElementListParameter: org.simpleframework.xml.core.ElementListParameter$Contact contact
org.jaudiotagger.tag.reference.Tagger: int compatability
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey CATALOG_NO
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_PRODUCED_NOTICE
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MUSICBRAINZ_WORK_PART_LEVEL4_ID
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier URL$20
com.umeng.analytics.pro.m: boolean d
org.simpleframework.xml.strategy.ReadGraph: org.simpleframework.xml.strategy.Loader loader
org.jaudiotagger.audio.aiff.chunk.CommentsChunk: int COUNT_LENGTH
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_CONTENT_GROUP_DESC
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey URL_WIKIPEDIA_RELEASE_SITE
com.tencent.bugly.proguard.ax: java.lang.String d
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage OGG_VORBIS_NO_VORBIS_HEADER_FOUND
com.alipay.android.phone.mrpc.core.a.a: java.lang.reflect.Type a
com.google.android.gms.internal.play_billing.zzex: com.google.android.gms.internal.play_billing.zzex zzh
nl.adaptivity.xmlutil.core.KtXmlWriter$EscapeMode: nl.adaptivity.xmlutil.core.KtXmlWriter$EscapeMode TEXTCONTENT
com.umeng.analytics.MobclickAgent$PageMode: com.umeng.analytics.MobclickAgent$PageMode LEGACY_MANUAL
com.caij.puremusic.model.Genre: long id
org.repackage.com.meizu.flyme.openidsdk.OpenIdHelper: java.lang.reflect.Method b
org.jaudiotagger.audio.asf.data.FileHeader: long maxPackageSize
com.umeng.analytics.pro.o: boolean v
com.umeng.analytics.pro.am: java.lang.String aF
org.jaudiotagger.tag.id3.AbstractID3v2Frame$EncodingFlags: org.jaudiotagger.tag.id3.AbstractID3v2Frame this$0
org.jaudiotagger.audio.asf.data.GUID: org.jaudiotagger.audio.asf.data.GUID GUID_METADATA_LIBRARY
com.caij.puremusic.db.model.AlbumQueries$clear$1: com.caij.puremusic.db.model.AlbumQueries$clear$1 INSTANCE
com.tencent.mm.opensdk.modelmsg.WXAppExtendObject: byte[] fileData
io.ktor.websocket.CloseReason$Codes: io.ktor.websocket.CloseReason$Codes NORMAL
com.umeng.analytics.process.a: java.lang.String d
org.jaudiotagger.tag.mp4.Mp4NonStandardFieldKey: org.jaudiotagger.tag.mp4.Mp4NonStandardFieldKey[] $VALUES
com.caij.puremusic.db.model.SongQueries$SongsByAlumIdQuery$execute$1: com.caij.puremusic.db.model.SongQueries$SongsByAlumIdQuery this$0
com.caij.puremusic.db.model.SongQueries$songsByArtistIdWithLike$2: com.caij.puremusic.db.model.SongQueries$songsByArtistIdWithLike$2 INSTANCE
com.umeng.commonsdk.config.d$c: com.umeng.commonsdk.config.d$c[] t
com.umeng.analytics.pro.am: java.lang.String l
com.umeng.analytics.pro.bi: boolean d
org.jaudiotagger.tag.id3.valuepair.EventTimingTypes: org.jaudiotagger.tag.id3.valuepair.EventTimingTypes eventTimingTypes
org.jaudiotagger.audio.asf.io.ModificationResult: boolean $assertionsDisabled
org.jaudiotagger.audio.aiff.chunk.AiffChunkType: java.lang.String code
org.jcodec.containers.mp4.boxes.AliasBox: short nlvlFrom
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_LANGUAGE
org.simpleframework.xml.core.DetailScanner: org.simpleframework.xml.DefaultType access
com.umeng.commonsdk.utils.d: java.lang.String u
com.google.common.util.concurrent.AbstractFuture: java.lang.Object value
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: int state
org.jaudiotagger.audio.mp3.VbriFrame: org.jaudiotagger.audio.mp3.LameFrame lameFrame
com.umeng.analytics.pro.o$a: int r
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.alipay.android.phone.mrpc.core.a.a: byte[] b
com.alipay.apmobilesecuritysdk.e.i: java.lang.String a
com.umeng.commonsdk.statistics.noise.ImLatent: com.umeng.commonsdk.statistics.common.d storeHelper
com.tencent.mm.opensdk.constants.ConstantsAPI: java.lang.String APP_SUPORT_CONTENT_TYPE
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey DISC_SUBTITLE
com.tencent.bugly.CrashModule: boolean d
org.jaudiotagger.audio.asf.data.FileHeader: java.util.Date fileCreationTime
org.jaudiotagger.tag.id3.ID3v24Frame$StatusFlags: java.lang.String TYPE_FILEALTERPRESERVATION
org.jaudiotagger.audio.flac.FlacTagWriter$MetadataBlockInfo: org.jaudiotagger.audio.flac.metadatablock.MetadataBlock streamInfoBlock
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode ENHANCE_YOUR_CALM
com.tencent.mm.opensdk.modelbase.BaseResp$ErrCode: int ERR_OK
com.umeng.analytics.pro.e$a$a: java.lang.String c
org.jcodec.containers.mp4.boxes.SegmentTypeBox: int minorVersion
org.jaudiotagger.audio.generic.AbstractTag: java.util.Map fields
com.tencent.mm.opensdk.constants.Build: int SUPPORTED_SEND_MINIPROGRAM_SECRET_MESSAGE
org.jaudiotagger.audio.mp4.EncoderType: org.jaudiotagger.audio.mp4.EncoderType AAC
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_INITIAL_KEY
com.umeng.commonsdk.statistics.proto.Gender: com.umeng.commonsdk.statistics.proto.Gender UNKNOWN
org.repackage.com.vivo.identifier.BuildConfig: java.lang.String b
org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.core.Context context
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier MINF
com.tencent.mm.opensdk.modelmsg.LaunchFromWX$Req: java.lang.String lang
com.umeng.analytics.pro.an$e: com.umeng.analytics.pro.an$e c
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MOVEMENT_NO
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage DO_NOT_KNOW_HOW_TO_CREATE_THIS_ATOM_TYPE
com.umeng.analytics.pro.o$a: int v
com.tencent.mm.opensdk.modelmsg.WXMiniProgramObject: int MINIPTOGRAM_TYPE_RELEASE
com.caij.puremusic.model.AbsCustomPlaylist$special$$inlined$inject$default$2: org.koin.core.component.KoinComponent $this_inject
com.tencent.mm.opensdk.diffdev.OAuthErrCode: com.tencent.mm.opensdk.diffdev.OAuthErrCode WechatAuth_Err_NetworkErr
org.simpleframework.xml.core.Composite: org.simpleframework.xml.core.ObjectFactory factory
com.tencent.mm.opensdk.modelmsg.WXStateSceneDataObject: java.lang.String token
com.caij.puremusic.db.model.SongQueries$SongsByArtistIdWithLikeQuery: java.lang.String artistId__
com.umeng.commonsdk.statistics.idtracking.d: android.content.Context b
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script IMPERIAL_ARAMAIC
com.umeng.commonsdk.internal.c$2: android.content.Context a
com.umeng.commonsdk.debug.UMLogCommon: java.lang.String SC_10012
com.umeng.analytics.process.a: java.lang.String b
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgramWithToken$Req: java.lang.String TAG
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country BRITISH_INDIAN_OCEAN_TERRITORY
org.jaudiotagger.audio.asf.util.Utils: long DIFF_BETWEEN_ASF_DATE_AND_JAVA_DATE
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BOOLEAN
com.alipay.apmobilesecuritysdk.otherid.UmidSdkWrapper: java.lang.String UMIDTOKEN_KEY_NAME
com.umeng.analytics.pro.am: java.lang.String aZ
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: byte[] channelMap
com.umeng.commonsdk.statistics.UMErrorCode: int E_UM_BE_CREATE_FAILED
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script TAI_LUE
com.thegrizzlylabs.sardineandroid.DavResource$DavProperties: java.util.Date modified
com.caij.puremusic.db.model.PlaybackSongQueries: com.caij.puremusic.db.model.PlaybackSong$Adapter PlaybackSongAdapter
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mBridge
org.jaudiotagger.audio.mp4.Mp4TagReader$1: int[] $SwitchMap$org$jaudiotagger$tag$mp4$Mp4FieldKey
com.caij.puremusic.db.model.SongQueries$songsByAlum$2: com.caij.puremusic.db.model.SongQueries$songsByAlum$2 INSTANCE
com.caij.puremusic.db.model.PlayCountEntityQueries$deleteById$1: long $songId
com.tencent.mm.opensdk.openapi.MMSharedPreferences$REditor: java.util.Map values
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MUSICBRAINZ_WORK_PART_LEVEL2_ID
com.caij.puremusic.drive.model.SubsonicPlaylist: int songCount
com.caij.puremusic.drive.model.OneDriveItem: com.caij.puremusic.drive.model.OneDriveItem$Companion Companion
com.caij.puremusic.db.model.ArtistQueries$clear$1: com.caij.puremusic.db.model.ArtistQueries$clear$1 INSTANCE
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind VORBIS_AUDIO
org.jaudiotagger.tag.id3.AbstractID3v1Tag: java.lang.String TYPE_ARTIST
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessView$Resp: java.lang.String extMsg
com.caij.puremusic.db.model.ArtistQueries$insert$1: com.caij.puremusic.db.model.Artist $Artist
com.tencent.bugly.proguard.aa: java.util.Map ap
com.umeng.commonsdk.UMConfigure: com.umeng.commonsdk.debug.UMLog umDebugLog
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage RESOURCE_CACHE
com.tencent.bugly.proguard.ai: int l
org.jaudiotagger.tag.id3.ID3v1Iterator: int ARTIST
com.caij.puremusic.db.model.HistoryEntityQueries$updateHistorySong$2: com.caij.puremusic.db.model.HistoryEntityQueries$updateHistorySong$2 INSTANCE
com.thegrizzlylabs.sardineandroid.model.Response: java.lang.String responsedescription
com.google.android.material.bottomsheet.BottomSheetDragHandleView: android.view.accessibility.AccessibilityManager accessibilityManager
org.jaudiotagger.audio.generic.AudioFileReader: int MINIMUM_SIZE_FOR_VALID_AUDIO_FILE
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int MASK_MP3_MODE
com.umeng.common.a: java.lang.String e
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey GENRE
org.jaudiotagger.audio.wav.WavCleaner$2: int[] $SwitchMap$org$jaudiotagger$audio$wav$WavChunkType
org.simpleframework.xml.core.DetailExtractor: org.simpleframework.xml.util.Cache details
com.google.android.gms.common.internal.RootTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.thegrizzlylabs.sardineandroid.model.Acl: java.util.List ace
com.caij.puremusic.db.model.SongEntityQueries$isSongExistsInPlaylist$1: kotlin.jvm.functions.Function3 $mapper
com.caij.puremusic.drive.model.AMetadata$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.tencent.bugly.proguard.bb: java.lang.String a
org.simpleframework.xml.core.CacheLabel: boolean collection
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey LYRICIST
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_END_OFFSET
com.umeng.analytics.pro.am: java.lang.String g
org.repackage.com.miui.deviceid.IdentifierManager: java.lang.reflect.Method d
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script TIBETAN
com.umeng.analytics.pro.e$b$b: java.lang.String c
com.tencent.mm.opensdk.modelmsg.WXMediaMessage: int MEDIA_TAG_NAME_LENGTH_LIMIT
org.jaudiotagger.tag.id3.ID3v24Tag: byte imageEncodingRestriction
com.caij.puremusic.db.model.SongQueries$insertOrReplace$1: com.caij.puremusic.db.model.SongQueries this$0
com.caij.puremusic.db.model.SongQueries$getAlbumSongCount$1: com.caij.puremusic.db.model.SongQueries$getAlbumSongCount$1 INSTANCE
com.caij.puremusic.drive.model.Response: java.lang.String href
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportDaily: com.umeng.commonsdk.statistics.internal.StatTracer mTracer
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey CONDUCTOR_SORT
com.tencent.mm.opensdk.modelmsg.WXEmojiPageSharedObject: java.lang.String desc
com.caij.puremusic.db.model.SongQueries$songsByAlbumId$2: com.caij.puremusic.db.model.SongQueries$songsByAlbumId$2 INSTANCE
org.jaudiotagger.tag.datatype.PairedTextEncodedStringNullTerminated$ValuePairs: java.util.List mapping
androidx.preference.ListPreference$SavedState: android.os.Parcelable$Creator CREATOR
com.caij.puremusic.drive.model.MediaContainer: int size
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier DSCP
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_USER_DEFINED_URL
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String sImei
com.tencent.mm.opensdk.modelmsg.WXMusicObject: java.lang.String musicLowBandUrl
org.jaudiotagger.tag.datatype.AbstractStringStringValuePair: java.lang.String lkey
com.tencent.mm.opensdk.openapi.WXAPIFactory: java.lang.String TAG
com.alipay.sdk.app.PayTask: java.lang.Object h
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_AUDIO_ENCRYPTION
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey CLASSICAL_NICKNAME
org.jaudiotagger.audio.generic.GenericTag$GenericTagTextField: org.jaudiotagger.audio.generic.GenericTag this$0
com.tencent.bugly.crashreport.common.strategy.StrategyBean: boolean j
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int MASK_MP3_PADDING
com.tencent.mm.opensdk.constants.Build: int MIN_SDK_INT
org.jaudiotagger.audio.aiff.AiffType: org.jaudiotagger.audio.aiff.AiffType AIFF
com.tencent.mm.opensdk.modelbiz.ChooseCardFromWXCardPackage$Req: java.lang.String cardSign
com.umeng.analytics.pro.an$e: com.umeng.analytics.pro.an$e e
com.caij.puremusic.db.model.PlaylistEntityQueries$GetPlaylistEntityByIdQuery$execute$1: com.caij.puremusic.db.model.PlaylistEntityQueries$GetPlaylistEntityByIdQuery this$0
com.umeng.analytics.pro.ch: int c
org.jaudiotagger.tag.id3.AbstractID3v2Tag$FrameAndSubId: java.lang.String frameId
org.jaudiotagger.audio.mp3.MPEGFrameHeader: java.util.Map samplesPerFrameV2Map
com.bumptech.glide.MemoryCategory: float multiplier
org.jaudiotagger.audio.mp3.MP3AudioHeader: long bitrate
org.jaudiotagger.audio.asf.data.ContainerType: org.jaudiotagger.audio.asf.data.ContainerType CONTENT_DESCRIPTION
org.jaudiotagger.tag.mp4.Mp4TagField: java.util.logging.Logger logger
com.caij.puremusic.model.lyrics.SynchronizedLyricsLRC: java.util.regex.Pattern LRC_LINE_PATTERN
org.jaudiotagger.audio.mp3.MP3AudioHeader: java.text.SimpleDateFormat timeOutOverAnHourFormat
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_BPM
org.simpleframework.xml.core.ElementListParameter: java.lang.String name
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_ARTISTID
com.alipay.apmobilesecuritysdk.face.APSecuritySdk$TokenResult: java.lang.String apdid
com.tencent.bugly.proguard.ai: java.util.concurrent.LinkedBlockingQueue i
com.caij.puremusic.drive.model.JellyfinFolder: java.lang.String ItemId
com.caij.puremusic.model.UpdateInfo: long fileSize
org.simpleframework.xml.stream.StreamProvider: javax.xml.stream.XMLInputFactory factory
com.umeng.analytics.pro.bo: com.umeng.analytics.pro.bp e
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat COLOR
org.simpleframework.xml.core.CompositeMapUnion: org.simpleframework.xml.strategy.Type type
org.jaudiotagger.audio.ogg.OggVorbisTagReader$OggVorbisHeaderSizes: int setupHeaderSize
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey RANKING
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country ARMENIA
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL4_ID
com.google.android.material.bottomsheet.BottomSheetBehavior: int STATE_DRAGGING
com.caij.puremusic.db.model.DriveFileDownUrlInfo: long sourceId
com.caij.puremusic.network.model.Artist: java.util.List images
com.umeng.commonsdk.utils.c: int j
com.tencent.mm.opensdk.modelbiz.HandleScanResult$Req: int MAX_URL_LENGHT
org.repackage.com.vivo.identifier.IdentifierIdClient: java.lang.String e
com.tencent.bugly.proguard.t: int d
com.tencent.mm.opensdk.modelbiz.WXChannelOpenFeed$Req: java.lang.String feedID
org.simpleframework.xml.core.ClassSchema: org.simpleframework.xml.Version revision
com.caij.puremusic.drive.model.EmbyAlbumsResponse: int StartIndex
com.umeng.commonsdk.utils.d: java.lang.String y
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType RAW
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: int maxFrameSize
com.thegrizzlylabs.sardineandroid.DavResource$DavProperties: com.thegrizzlylabs.sardineandroid.model.Lockdiscovery lockDiscovery
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey ORCHESTRA_SORT
com.google.android.material.bottomsheet.BottomSheetBehavior: int saveFlags
com.tencent.mm.opensdk.modelmsg.WXDynamicVideoMiniProgramObject: java.lang.String appThumbUrl
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey TRACK_TOTAL
com.umeng.commonsdk.debug.UMLog: java.lang.String INDENT
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_PREVIEW_START
com.umeng.commonsdk.statistics.proto.a: com.umeng.analytics.pro.bp j
org.jaudiotagger.audio.wav.WavTagReader: java.lang.String loggingName
org.repackage.a.a.a.a$a$a: android.os.IBinder a
org.simpleframework.xml.core.AttributeParameter: org.simpleframework.xml.core.Label label
com.caij.puremusic.db.model.SongQueries$songsByAlbumIdTypeCount$1: com.caij.puremusic.db.model.SongQueries$songsByAlbumIdTypeCount$1 INSTANCE
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NULL
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage NULL_PADDING_FOUND_AT_END_OF_MP4
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country VANUATU
com.alipay.android.phone.mrpc.core.q: java.net.URL l
org.jaudiotagger.audio.mp3.VbriFrame: int VBRI_TOC_ENTRY_BUFFER_SIZE
com.caij.puremusic.util.CoverLyricsType: com.caij.puremusic.util.CoverLyricsType[] $VALUES
org.simpleframework.xml.strategy.TreeStrategy: java.lang.String length
org.jaudiotagger.audio.dsf.DsfChunkType: org.jaudiotagger.audio.dsf.DsfChunkType[] $VALUES
com.caij.puremusic.fragments.lyrics.ComnLyricsFragment$LyricsType: com.caij.puremusic.fragments.lyrics.ComnLyricsFragment$LyricsType LOCAL_ORI_FILE_LYRICS
com.umeng.analytics.pro.l: int e
org.simpleframework.xml.DefaultType: org.simpleframework.xml.DefaultType PROPERTY
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String CLASSICAL_NICKNAME
org.jaudiotagger.audio.mp3.XingFrame: int MPEG_VERSION_2_MODE_MONO_OFFSET
com.umeng.analytics.pro.r: int c
com.alipay.android.phone.mrpc.core.n: java.util.concurrent.atomic.AtomicInteger a
com.umeng.commonsdk.statistics.noise.Defcon: long MILLIS_8_HOURS
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey TRACK
androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[] $VALUES
org.jaudiotagger.audio.asf.data.AsfHeader: long chunkCount
com.tencent.bugly.proguard.bt: java.lang.String i
com.caij.puremusic.network.model.TokenData: java.lang.String token_type
com.caij.puremusic.drive.model.PlexAlbumsResponse: com.caij.puremusic.drive.model.AlbumMediaContainer MediaContainer
org.jaudiotagger.audio.generic.GenericTag: java.util.EnumSet supportedKeys
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_YEAR
org.jaudiotagger.tag.flac.FlacTag$1: int[] $SwitchMap$org$jaudiotagger$tag$vorbiscomment$VorbisAlbumArtistSaveOptions
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country SAINT_KITTS_AND_NEVIS
org.jaudiotagger.audio.flac.FlacTagCreator: int DEFAULT_PADDING
com.tencent.mm.opensdk.modelbiz.ChooseCardFromWXCardPackage$Req: java.lang.String cardId
kotlin.time.DurationUnit: kotlin.time.DurationUnit DAYS
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey DISC_NO
io.ktor.utils.io.ByteBufferChannel: kotlinx.coroutines.Job attachedJob
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey URL_DISCOGS_RELEASE_SITE
org.jaudiotagger.audio.wav.WavInfoReader: java.util.logging.Logger logger
org.jaudiotagger.audio.asf.data.ContentDescription: java.lang.String KEY_COPYRIGHT
com.umeng.commonsdk.statistics.common.ReportPolicy: int DAILY
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey WORK_PART_LEVEL2
org.jcodec.containers.mp4.boxes.AudioSampleEntry: float sampleRate
com.caij.puremusic.drive.model.PlexArtistsResponse$$serializer: com.caij.puremusic.drive.model.PlexArtistsResponse$$serializer INSTANCE
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey ORCHESTRA
org.jaudiotagger.tag.asf.AsfTag: java.util.EnumMap tagFieldToAsfField
com.umeng.analytics.pro.i: java.lang.String g
com.tencent.bugly.proguard.aa: java.lang.String E
android.support.v4.media.session.PlaybackStateCompat: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.id3.framebody.FrameBodyPCNT: int COUNTER_MINIMUM_FIELD_SIZE
com.caij.puremusic.db.model.SongEntityQueries$CheckSongPlaylistExistsQuery$execute$1: com.caij.puremusic.db.model.SongEntityQueries$CheckSongPlaylistExistsQuery this$0
com.caij.puremusic.drive.model.Response: com.caij.puremusic.drive.model.Response$Companion Companion
org.jaudiotagger.tag.id3.ID3v23Tag: java.lang.String TYPE_EXPERIMENTAL
org.jaudiotagger.audio.mp3.XingFrame: int BYTE_1
androidx.constraintlayout.motion.widget.MotionLayout$TransitionState: androidx.constraintlayout.motion.widget.MotionLayout$TransitionState SETUP
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script MEROITIC
org.jaudiotagger.audio.mp3.MPEGFrameHeader: java.lang.String modeExtension
com.umeng.analytics.pro.j: java.lang.String e
org.jaudiotagger.tag.id3.framebody.FrameBodyASPI: int FRACTION_AT_INDEX_MINIMUM_FIELD_SIZE
org.jaudiotagger.audio.flac.metadatablock.MetadataBlock: org.jaudiotagger.audio.flac.metadatablock.MetadataBlockHeader mbh
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier[] $VALUES
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage ATOM_LENGTH_LARGER_THAN_DATA
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_TDAT
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MEDIA
com.umeng.commonsdk.statistics.idtracking.a: com.umeng.commonsdk.statistics.proto.b e
com.umeng.analytics.pro.j: java.lang.String ag
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey AMAZON_ID
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script BOPOMOFO
org.jaudiotagger.audio.wav.WavChunkType: org.jaudiotagger.audio.wav.WavChunkType ID3
com.google.android.gms.internal.play_billing.zzfb: com.google.android.gms.internal.play_billing.zzfs zzg
org.jaudiotagger.tag.id3.valuepair.ImageFormats: java.lang.String V22_PIC_FORMAT
com.caij.puremusic.db.model.AlbumQueries$getAlbumByArtistId$2: com.caij.puremusic.db.model.AlbumQueries$getAlbumByArtistId$2 INSTANCE
com.caij.puremusic.drive.model.JellyfinFolder: com.caij.puremusic.drive.model.JellyfinFolder$Companion Companion
android.support.v4.media.MediaBrowserCompat$MediaItem: android.os.Parcelable$Creator CREATOR
com.umeng.commonsdk.statistics.common.ReportPolicy: int BATCH_AT_LAUNCH
com.caij.puremusic.network.model.Artist: java.lang.String uri
com.caij.puremusic.db.model.ServerSongCoverQueries$deleteById$2: com.caij.puremusic.db.model.ServerSongCoverQueries$deleteById$2 INSTANCE
com.caij.puremusic.db.model.SongQueries$GetArtistSongCountQuery: java.lang.String artistId
org.simpleframework.xml.core.CacheParameter: boolean required
com.umeng.analytics.pro.e$a$b: java.lang.String e
com.google.android.material.bottomsheet.BottomSheetBehavior$4: long viewCapturedMillis
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage ID3_TAG_CRC_FLAG_SET_INCORRECTLY
com.umeng.analytics.filter.EventList: java.lang.String mEventList
com.tencent.mm.opensdk.modelmsg.WXEmojiPageSharedObject: java.lang.String TAG
com.caij.puremusic.drive.model.ArtistItem: java.lang.String LocationType
com.tencent.bugly.proguard.aj: java.lang.String p
com.umeng.commonsdk.statistics.common.DeviceTypeEnum: com.umeng.commonsdk.statistics.common.DeviceTypeEnum OAID
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine$AuthenticationInterceptor: java.lang.String userName
com.tencent.bugly.proguard.bl: java.lang.String b
com.caij.puremusic.network.model.LastFmArtist$Artist$Bio: com.caij.puremusic.network.model.LastFmArtist$Artist this$0
org.jaudiotagger.audio.aiff.AiffAudioHeader: java.lang.String copyright
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey ALBUM_ARTIST_SORT
com.tencent.bugly.proguard.aa: java.lang.Object au
com.umeng.analytics.Gender: com.umeng.analytics.Gender Unknown
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey PART
org.jaudiotagger.tag.id3.ID3v23Frame: int FRAME_COMPRESSION_UNCOMPRESSED_SIZE
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey ORCHESTRA_SORT
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country GABON
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MUSICBRAINZ_ORIGINAL_RELEASEID
com.tencent.mm.opensdk.modelmsg.WXGameLiveObject: java.util.HashMap extraInfoMap
io.ktor.util.date.Month: io.ktor.util.date.Month[] $VALUES
org.simpleframework.xml.transform.ClassTransform: java.lang.String BYTE
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey CATEGORY
org.jaudiotagger.tag.id3.ID3Frames: java.util.Map convertv23Tov24
org.jaudiotagger.audio.ogg.util.OggPageHeader$HeaderTypeFlag: org.jaudiotagger.audio.ogg.util.OggPageHeader$HeaderTypeFlag[] $VALUES
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: org.jaudiotagger.tag.id3.ID3v24Frame this$0
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
org.simpleframework.xml.core.NamespaceDecorator: org.simpleframework.xml.Namespace primary
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_ALBUM_SORT_ORDER
com.umeng.commonsdk.config.d$c: com.umeng.commonsdk.config.d$c h
com.caij.puremusic.drive.model.PlexLoginResponse: com.caij.puremusic.drive.model.PlexLoginResponse$Companion Companion
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType ANIMATED_WEBP
com.umeng.commonsdk.statistics.AnalyticsConstants: boolean UM_DEBUG
com.umeng.analytics.pro.au: com.umeng.analytics.pro.bp k
com.tencent.mm.opensdk.modelmsg.WXMusicVideoObject: java.lang.String musicGenre
com.caij.puremusic.drive.model.AMetadata$$serializer: com.caij.puremusic.drive.model.AMetadata$$serializer INSTANCE
org.simpleframework.xml.core.KeyBuilder$KeyType: org.simpleframework.xml.core.KeyBuilder$KeyType ELEMENT
nl.adaptivity.xmlutil.EventType: nl.adaptivity.xmlutil.EventType START_DOCUMENT
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey GENRE
com.caij.puremusic.drive.model.DropboxDriveFileResponse: java.util.List entries
com.tencent.bugly.proguard.aa: int w
com.caij.puremusic.db.model.SongQueries$GetArtistSongCountQuery: java.lang.String artistId___
okhttp3.Protocol: java.lang.String protocol
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level NONE
com.umeng.commonsdk.statistics.noise.ImLatent: int LATENT_WINDOW
org.simpleframework.xml.core.ObjectScanner: org.simpleframework.xml.core.Support support
com.umeng.umzid.ZIDManager$a: com.umeng.umzid.IZIDCompletionCallback b
org.jaudiotagger.audio.opus.OpusFileReader: org.jaudiotagger.audio.opus.OpusVorbisTagReader vtr
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String PART_TYPE
com.umeng.analytics.pro.ao: java.lang.String f
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MOVEMENT_TOTAL
org.simpleframework.xml.stream.NodeReader: org.simpleframework.xml.stream.InputStack stack
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MOVEMENT_NO
com.tencent.bugly.proguard.ag$c: java.lang.String g
com.caij.puremusic.db.model.Album: long albumId
com.umeng.analytics.process.UMProcessDBHelper: com.umeng.analytics.process.UMProcessDBHelper$InsertEventCallback ekvCallBack
com.umeng.analytics.b: android.content.Context a
com.google.android.gms.internal.play_billing.zzew: com.google.android.gms.internal.play_billing.zzew zzc
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey WORK
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey USER_RATING
com.umeng.analytics.pro.am: java.lang.String h
com.thegrizzlylabs.sardineandroid.util.EntityWithAnyElementConverter: org.simpleframework.xml.Serializer serializer
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact NONE
org.jaudiotagger.tag.id3.ID3v23Tag: java.lang.String TYPE_CRCDATA
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_VIDEO_FILE
com.caij.puremusic.model.UpdateInfo$ForcedUpgradeInfo: int minVersionCode
com.caij.puremusic.fragments.GridStyle: com.caij.puremusic.fragments.GridStyle Card
org.jaudiotagger.audio.wav.WavChunkType: java.lang.String description
com.umeng.umzid.ZIDManager$b: android.content.Context a
io.ktor.utils.io.internal.RingBufferCapacity: int _availableForWrite$internal
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey ARRANGER_SORT
com.google.android.gms.internal.play_billing.zzfj: int zzd
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a g
com.tencent.bugly.proguard.ac: android.content.Context h
com.umeng.commonsdk.internal.utils.d$a: java.lang.String g
com.caij.puremusic.db.model.SongQueries$SongQuery: long id
com.umeng.analytics.pro.aq: java.lang.String f
org.simpleframework.xml.core.AttributeLabel: java.lang.String empty
com.caij.puremusic.drive.model.PlexAlbumsResponse: com.caij.puremusic.drive.model.PlexAlbumsResponse$Companion Companion
com.tencent.mm.opensdk.channel.MMessageActV2$Args: int INVALID_FLAGS
com.umeng.analytics.pro.ab$1: com.umeng.analytics.pro.ab a
org.jcodec.containers.mp4.boxes.MetaValue: int TYPE_STRING_UTF8
org.jaudiotagger.tag.id3.ID3v24Tag: java.lang.String TYPE_PADDINGSIZE
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.lang.String TYPE_DUPLICATEBYTES
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$Req: int FAV_CONTENT_LENGTH_LIMIT
com.google.android.material.bottomsheet.BottomSheetBehavior: int SAVE_ALL
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country TUVALU
com.umeng.analytics.pro.an: int y
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzj
com.google.android.gms.internal.play_billing.zzcj: com.google.android.gms.internal.play_billing.zzcj[] zzk
com.umeng.analytics.process.UMProcessDBDatasSender: com.umeng.commonsdk.utils.FileLockUtil mLockUtil
com.caij.puremusic.drive.model.PlayListsResponse: com.caij.puremusic.drive.model.PlayListsSubsonicResponse subsonicResponse
org.jcodec.containers.mp4.boxes.VideoMediaHeaderBox: int bOpColor
com.umeng.analytics.pro.bn: boolean f
org.jaudiotagger.tag.TagOptionSingleton: boolean isAPICDescriptionITunesCompatible
org.jaudiotagger.audio.mp3.MP3File: int LOAD_ALL
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP4_CHANGES_TO_FILE_FAILED_CANNOT_FIND_AUDIO
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype HSPAP
com.tencent.bugly.proguard.at: int d
com.tencent.bugly.proguard.aa: java.lang.String ab
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey TOOL
com.caij.puremusic.db.model.PlaybackSongQueries$GetPlaybacksByTypeQuery: int type
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String CLASSICAL_CATALOG
org.jaudiotagger.audio.wav.chunk.WavFormatChunk: org.jaudiotagger.audio.generic.GenericAudioHeader info
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey COUNTRY
org.simpleframework.xml.core.ConstructorScanner: org.simpleframework.xml.core.Support support
com.tencent.mm.opensdk.modelmsg.WXMediaMessage: java.lang.String description
com.tencent.bugly.proguard.bs: java.lang.String b
org.simpleframework.xml.core.OverrideValue: java.lang.Class type
com.tencent.bugly.proguard.au: com.tencent.bugly.proguard.ac b
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int MODE_EXTENSION_OFF_ON
com.caij.puremusic.model.lyrics.SynchronizedLyricsLRC: float LRC_SECONDS_TO_MS_MULTIPLIER
com.tencent.mm.opensdk.modelbiz.WXChannelOpenEvent$Req: java.lang.String Key_EventId
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MM_CUSTOM_1
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: java.lang.Object userObject
org.jaudiotagger.tag.mp4.Mp4FieldKey: int fieldLength
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a I
com.umeng.commonsdk.BuildConfig: boolean DEBUG
com.tencent.bugly.proguard.aa: java.lang.String ah
org.jaudiotagger.audio.generic.GenericAudioHeader: java.lang.Long noOfSamples
org.simpleframework.xml.core.MethodScanner: org.simpleframework.xml.core.MethodScanner$PartMap read
com.caij.puremusic.db.model.AlbumQueries$albums$1: com.caij.puremusic.db.model.AlbumQueries this$0
androidx.fragment.app.Fragment: java.util.ArrayList mOnPreAttachedListeners
com.tencent.bugly.BuglyStrategy$a: int CRASHTYPE_JAVA_CATCH
com.caij.puremusic.model.AlbumWrapper: com.caij.puremusic.db.model.Album album
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: org.jaudiotagger.audio.aiff.chunk.AiffCompressionType IN24
com.umeng.commonsdk.statistics.proto.a: long d
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status RUNNING
com.tencent.mm.opensdk.diffdev.OAuthErrCode: com.tencent.mm.opensdk.diffdev.OAuthErrCode[] $VALUES
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$deleteSongBySource$1: long $sourceId
org.simpleframework.xml.core.Variable$Adapter: org.simpleframework.xml.core.Converter reader
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country ERITREA
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_TITLE_SORT_ORDER_ITUNES
com.umeng.commonsdk.utils.c: java.lang.Object k
com.thegrizzlylabs.sardineandroid.model.Prop: com.thegrizzlylabs.sardineandroid.model.Resourcetype resourcetype
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.field.Mp4FieldType fieldType
org.simpleframework.xml.core.ElementListParameter: java.lang.Object key
com.alipay.android.phone.mrpc.core.HttpException: int mCode
com.umeng.commonsdk.utils.d: java.lang.String l
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage GENERAL_WRITE_FAILED_BECAUSE
com.tencent.bugly.proguard.i: int b
com.umeng.analytics.process.UMProcessDBHelper$a: com.umeng.analytics.process.UMProcessDBHelper i
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String RANKING
com.tencent.bugly.proguard.av: java.lang.Object i
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage GENERAL_WRITE_FAILED
org.jaudiotagger.tag.vorbiscomment.VorbisCommentReader: int JAUDIOTAGGER_MAX_COMMENT_LENGTH
androidx.activity.result.IntentSenderRequest: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MOOD_RELAXED
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier IODS
org.simpleframework.xml.core.ElementListLabel: java.lang.String entry
com.caij.puremusic.drive.model.SubsonicSearchListResponse: com.caij.puremusic.drive.model.SubsonicSearchListResponse$Companion Companion
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b C
com.caij.puremusic.drive.model.DropboxDriveFileResponse$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.tencent.mm.opensdk.modelbiz.OpenBusiLuckyMoney$Req: int MAX_URL_LENGHT
com.google.android.gms.internal.play_billing.zzcj: com.google.android.gms.internal.play_billing.zzcj zzd
org.jaudiotagger.tag.id3.ID3v23Frame$EncodingFlags: int MASK_COMPRESSION
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey LANGUAGE
com.tencent.mm.opensdk.channel.MMessageActV2$Args: java.lang.String content
org.xmlpull.v1.XmlPullParser: java.lang.String[] TYPES
com.umeng.commonsdk.debug.UMLogCommon: java.lang.String SC_10024
com.caij.puremusic.db.model.Song: java.lang.String albumName
androidx.fragment.app.DialogFragment: androidx.lifecycle.Observer mObserver
org.simpleframework.xml.stream.Formatter$Tag: org.simpleframework.xml.stream.Formatter$Tag TEXT
org.simpleframework.xml.stream.OutputStack$Sequence: int cursor
org.jaudiotagger.tag.mp4.field.Mp4TagByteField: java.lang.String TRUE_VALUE
com.umeng.commonsdk.statistics.noise.Defcon: int LEVEL_0
com.umeng.analytics.pro.e$c$b: java.lang.String e
org.jaudiotagger.tag.datatype.NumberHashMap: java.util.Map valueToKey
org.jaudiotagger.audio.ogg.OggFileWriter: org.jaudiotagger.audio.ogg.OggVorbisTagWriter vtw
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MOOD_ACOUSTIC
com.umeng.commonsdk.UMConfigure$4: android.content.Context a
org.simpleframework.xml.core.PathParser: char[] data
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_START_OFFSET
com.google.android.gms.internal.play_billing.zzcb: java.util.Map zzb
com.umeng.analytics.pro.d: java.lang.String v
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey COMPOSER_SORT
com.google.android.material.internal.CheckableImageButton$SavedState: android.os.Parcelable$Creator CREATOR
org.simpleframework.xml.core.ElementLabel: org.simpleframework.xml.core.Introspector detail
com.tencent.mm.opensdk.modelbiz.WXChannelJumpMiniProgramInfo: java.lang.String path
com.tencent.mm.opensdk.modelbiz.WXChannelOpenLive$Req: java.lang.String nonceID
com.google.android.exoplayer2.metadata.id3.MlltFrame: android.os.Parcelable$Creator CREATOR
com.umeng.commonsdk.statistics.proto.d$e: com.umeng.commonsdk.statistics.proto.d$e b
com.umeng.analytics.pro.an: com.umeng.analytics.pro.bz m
com.caij.puremusic.network.model.LastFmTrack$Track$Album$Image: com.caij.puremusic.network.model.LastFmTrack$Track$Album this$0
com.tencent.mm.opensdk.constants.Build: int SEND_AUTH_SCOPE_SNSAPI_WXAAPP_INFO_SUPPORTED_SDK_INT
org.jaudiotagger.audio.wav.WavChunkType: java.lang.String code
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_ORIG_LYRICIST
com.tencent.bugly.proguard.bo: java.util.Map C
org.jaudiotagger.audio.mp3.MP3AudioHeader: long numberOfFrames
com.umeng.commonsdk.statistics.idtracking.h: java.lang.String b
org.jaudiotagger.audio.asf.io.CountingOutputstream: long count
com.caij.puremusic.drive.model.MediaStream: boolean IsTextSubtitleStream
org.jaudiotagger.tag.mp4.Mp4ContentTypeValue: org.jaudiotagger.tag.mp4.Mp4ContentTypeValue AUDIO_BOOK
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier LOCI
androidx.fragment.app.Fragment: android.view.View mView
com.caij.puremusic.drive.model.PlayListItem: java.lang.String ServerId
com.google.android.exoplayer2.drm.DrmInitData$SchemeData: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_WORK_PART_LEVEL5_TYPE
com.caij.puremusic.drive.model.Multistatus: java.util.List response
com.caij.puremusic.drive.model.AlbumArtist: java.lang.String Id
org.jcodec.containers.mp4.boxes.SampleToChunkBox$SampleToChunkEntry: long first
com.tencent.bugly.proguard.ay: com.tencent.bugly.proguard.ac h
com.tencent.bugly.proguard.bo: java.lang.String i
org.simpleframework.xml.stream.PullReader$Text: java.lang.String text
org.jaudiotagger.audio.generic.GenericTag$GenericTagTextField: java.lang.String id
com.caij.puremusic.db.model.ServerLyricsQueries$insert$2: com.caij.puremusic.db.model.ServerLyricsQueries$insert$2 INSTANCE
org.simpleframework.xml.core.ClassScanner: org.simpleframework.xml.core.Function persist
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage INITIALIZE
com.umeng.commonsdk.utils.UMUtils: java.util.regex.Pattern pattern
com.umeng.commonsdk.vchannel.a: java.lang.String d
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script HAN_SIMPLIFIED
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status FINISHED
com.umeng.commonsdk.utils.a$1: com.umeng.commonsdk.utils.a a
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$Req: int WXSceneSpecifiedContact
org.simpleframework.xml.core.PrimitiveScanner$EmptySection: java.util.List list
com.tencent.bugly.proguard.bu: java.util.Map i
com.umeng.commonsdk.utils.UMUtils: java.lang.String VALUE_APM_VERSION
com.umeng.analytics.pro.bn: int b
org.jaudiotagger.audio.ogg.OggVorbisTagReader$OggVorbisHeaderSizes: int commentHeaderSize
com.caij.puremusic.drive.model.Part: int size
com.umeng.analytics.b: java.lang.String h
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind PRIVATE_VIDEO
org.jaudiotagger.utils.FileTypeUtil: int BUFFER_SIZE
com.tencent.mmkv.MMKVLogLevel: com.tencent.mmkv.MMKVLogLevel LevelWarning
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: java.util.logging.Logger logger
org.jaudiotagger.tag.id3.AbstractID3v1Tag: byte END_OF_FIELD
androidx.fragment.app.Fragment: androidx.lifecycle.MutableLiveData mViewLifecycleOwnerLiveData
org.jaudiotagger.tag.images.StandardArtwork: java.lang.String description
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_ARTIST_SORT_ORDER
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey IS_SOUNDTRACK
org.simpleframework.xml.strategy.ReadGraph: java.lang.String refer
io.ktor.utils.io.ByteChannelSequentialBase: int lastReadAvailable$delegate
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_COMMERCIAL_FRAME
org.jaudiotagger.audio.mp3.MPEGFrameHeader: boolean isCopyrighted
org.simpleframework.xml.stream.OutputElement: org.simpleframework.xml.stream.NodeWriter writer
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_ARTIST
org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistReadOptions: org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistReadOptions READ_JRIVER_ALBUMARTIST
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10$1: com.tencent.mm.opensdk.openapi.BaseWXApiImplV10 this$0
com.tencent.mm.opensdk.modelmsg.WXLiteAppObject: java.lang.String path
org.jcodec.containers.mp4.boxes.EditListBox: java.util.List edits
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_VIDEO
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy PREVENT
com.alipay.android.phone.mrpc.core.HttpException: int NETWORK_CONNECTION_EXCEPTION
com.bumptech.glide.load.engine.DecodeJob$RunReason: com.bumptech.glide.load.engine.DecodeJob$RunReason DECODE_DATA
com.caij.puremusic.drive.model.Media: int bitrate
org.jaudiotagger.audio.mp3.MP3AudioHeader: char isVbrIdentifier
com.umeng.analytics.a: boolean b
org.simpleframework.xml.core.DetailExtractor: org.simpleframework.xml.util.Cache fields
com.umeng.analytics.pro.bn$a: boolean b
org.jaudiotagger.tag.id3.ID3v23Frame$EncodingFlags: int MASK_ENCRYPTION
com.caij.puremusic.drive.model.AlbumItem: java.lang.String Type
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int VERSION_1
org.simpleframework.xml.core.ObjectInstance: org.simpleframework.xml.strategy.Value value
com.umeng.analytics.pro.am: java.lang.String aH
com.umeng.analytics.pro.am: java.lang.String ay
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource DATA_DISK_CACHE
com.caij.puremusic.drive.model.MediaContainer: com.caij.puremusic.drive.model.MediaContainer$Companion Companion
com.umeng.commonsdk.UMConfigure: boolean debugLog
com.umeng.commonsdk.statistics.proto.a$e: com.umeng.commonsdk.statistics.proto.a$e a
com.tencent.bugly.proguard.ay: com.tencent.bugly.proguard.ay f
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey URL_WIKIPEDIA_RELEASE_SITE
com.alipay.apmobilesecuritysdk.otherid.UmidSdkWrapper: boolean initUmidFinished
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey ORCHESTRA_SORT
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String LOG_TAG
com.umeng.analytics.pro.am: java.lang.String P
com.umeng.commonsdk.statistics.proto.d$e: com.umeng.commonsdk.statistics.proto.d$e[] g
com.google.android.gms.internal.play_billing.zzew: com.google.android.gms.internal.play_billing.zzew zzq
com.umeng.analytics.pro.am: java.lang.String ar
com.umeng.analytics.pro.d: java.lang.String aw
com.caij.puremusic.drive.model.AlbumArtist$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.google.android.gms.internal.play_billing.zzcj: java.lang.Object zzn
com.umeng.analytics.pro.j: java.lang.String J
com.caij.puremusic.drive.model.JellyfinFolder$$serializer: com.caij.puremusic.drive.model.JellyfinFolder$$serializer INSTANCE
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey ARTIST_SORT
com.umeng.analytics.pro.by: int b
com.caij.puremusic.drive.model.AlbumMetadata: java.lang.String type
com.tencent.bugly.proguard.ab: java.util.Map b
com.caij.puremusic.model.AbsCustomPlaylist: kotlin.Lazy topPlayedRepository$delegate
com.caij.puremusic.model.AudioTagInfo: java.util.Map fieldKeyValueMap
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_ARTIST_SORT_ORDER_ITUNES
org.jaudiotagger.audio.asf.data.EncodingChunk: java.util.List strings
org.jaudiotagger.audio.asf.data.ContainerType: boolean languageEnabled
org.jaudiotagger.audio.asf.data.GUID: org.jaudiotagger.audio.asf.data.GUID GUID_METADATA
org.simpleframework.xml.core.ElementListLabel: java.lang.Class item
org.jaudiotagger.utils.tree.TreeModelEvent: java.lang.Object[] children
org.jaudiotagger.logging.FileSystemMessage: org.jaudiotagger.logging.FileSystemMessage ACCESS_IS_DENIED
org.jaudiotagger.tag.id3.AbstractID3v1Tag: int FIELD_GENRE_LENGTH
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_MOVEMENT
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a n
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_SET_SUBTITLE
org.jaudiotagger.tag.mp4.Mp4ContentTypeValue: org.jaudiotagger.tag.mp4.Mp4ContentTypeValue MOVIE
org.simpleframework.xml.util.Resolver$Stack$Sequence: org.simpleframework.xml.util.Resolver$Stack this$1
com.caij.puremusic.db.model.ArtistQueries$searchArtistByName$2: com.caij.puremusic.db.model.ArtistQueries$searchArtistByName$2 INSTANCE
com.umeng.analytics.pro.bo: byte[] f
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String ARTISTS_SORT
com.umeng.analytics.pro.l: java.lang.String a
com.tencent.bugly.proguard.ac$1: com.tencent.bugly.proguard.ac a
com.github.dhaval2404.imagepicker.constant.ImageProvider: com.github.dhaval2404.imagepicker.constant.ImageProvider BOTH
com.tencent.bugly.proguard.ax: java.lang.String f
org.jaudiotagger.audio.opus.OpusVorbisTagWriter: java.util.logging.Logger logger
com.tencent.bugly.crashreport.crash.CrashDetailBean: long G
org.jaudiotagger.tag.id3.ID3v24Tag: int MASK_V24_TAG_ALTER_PRESERVATION
org.jaudiotagger.tag.datatype.NumberVariableLength: int minLength
com.caij.puremusic.db.model.SongEntityQueries$getSongEntity$1: kotlin.jvm.functions.Function3 $mapper
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey TIMBRE
com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker: int targetState
org.xmlpull.v1.XmlPullParser: java.lang.String FEATURE_PROCESS_DOCDECL
com.umeng.commonsdk.statistics.proto.a: java.util.Map l
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country ECUADOR
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_EQUALISATION
com.caij.puremusic.model.DriveFileParcelable: java.lang.String id
com.umeng.analytics.pro.d: java.lang.String O
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage OGG_HEADER_CANNOT_BE_FOUND
com.google.android.exoplayer2.metadata.id3.BinaryFrame: android.os.Parcelable$Creator CREATOR
com.umeng.analytics.b$a: com.umeng.analytics.b a
org.simpleframework.xml.core.PrimitiveInlineList: org.simpleframework.xml.core.CollectionFactory factory
com.tencent.bugly.proguard.bt: java.util.Map n
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MOOD_HAPPY
org.simpleframework.xml.core.ElementMapUnionParameter: org.simpleframework.xml.core.Expression expression
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int BYTE_1
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage ID3_TAG_EXPERIMENTAL
com.tencent.bugly.BuglyStrategy: java.lang.String d
com.alipay.apmobilesecuritysdk.face.APSecuritySdk: android.content.Context b
com.alipay.android.phone.mrpc.core.q: boolean n
org.simpleframework.xml.core.ElementLabel: java.lang.String path
com.umeng.tunnel.UMChannelAgent: java.lang.String TAG
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey URL_OFFICIAL_RELEASE_SITE
com.umeng.commonsdk.UMConfigure: java.lang.String WRAPER_TYPE_COCOS2DX_X
com.tencent.bugly.crashreport.crash.CrashDetailBean: java.util.Map W
org.jcodec.containers.mp4.boxes.FullBox: int flags
nl.adaptivity.xmlutil.serialization.XmlSerializationPolicy$XmlEncodeDefault: nl.adaptivity.xmlutil.serialization.XmlSerializationPolicy$XmlEncodeDefault ALWAYS
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: java.lang.String description
io.ktor.utils.io.ByteBufferChannel: java.lang.Object _closed
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b B
com.tencent.mm.opensdk.modelbiz.WXLaunchWxaRedirectingPage$ConstantsWxaRedirectingPage: java.lang.String KEY_CALLBACK_ACTIVITY
com.tencent.bugly.proguard.at: java.lang.String l
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_POPULARIMETER
org.jaudiotagger.tag.mp4.field.Mp4FieldType: java.util.EnumSet coverArtTypes
com.alipay.sdk.m.u.g: int a
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_URL_COPYRIGHT
com.umeng.analytics.pro.am: java.lang.String z
com.google.common.hash.LittleEndianByteArray$UnsafeByteArray: com.google.common.hash.LittleEndianByteArray$UnsafeByteArray UNSAFE_BIG_ENDIAN
androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type HORIZONTAL_DIMENSION
org.jcodec.containers.mp4.BoxFactory: org.jcodec.containers.mp4.IBoxFactory data
com.umeng.commonsdk.utils.d: java.lang.String ad
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script SAURASHTRA
com.umeng.commonsdk.internal.utils.k$1: java.lang.String[] a
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey ARTIST
com.tencent.bugly.proguard.r: int c
com.tencent.bugly.proguard.bg: boolean b
com.tencent.mmkv.MMKV: long nativeHandle
org.jaudiotagger.tag.asf.AsfFieldKey: boolean multiValued
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level[] $VALUES
org.jcodec.containers.mp4.boxes.MetaValue: int TYPE_INT_16
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script GURMUKHI
com.umeng.analytics.filter.EventList: int LOAD_LIST_DATA
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse: int TotalRecordCount
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey CUSTOM2
io.ktor.websocket.CloseReason$Codes: io.ktor.websocket.CloseReason$Codes SERVICE_RESTART
org.jaudiotagger.audio.asf.data.ContainerType: long perfMaxDataLen
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier CVRU
com.umeng.commonsdk.config.d$d: com.umeng.commonsdk.config.d$d k
com.umeng.commonsdk.internal.a: java.lang.String H
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey TITLE
androidx.fragment.app.Fragment: int VIEW_CREATED
com.tencent.bugly.proguard.bh: com.tencent.bugly.proguard.bj a
org.jcodec.containers.mp4.boxes.HandlerBox: int componentFlags
org.simpleframework.xml.core.ParameterContact: java.lang.annotation.Annotation[] labels
org.jcodec.containers.mp4.boxes.LoadSettingsBox: int preloadDuration
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b l
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int channelMode
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier KYWD
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String ORCHESTRA_SORT
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String ACOUSTID_FINGERPRINT
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_TRACK_ID
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
com.umeng.commonsdk.stateless.b: java.lang.Object e
com.umeng.commonsdk.utils.d: java.lang.String ap
com.umeng.analytics.pro.ap: java.lang.String f
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean paddingBottomSystemWindowInsets
com.tencent.bugly.crashreport.biz.UserInfoBean: int b
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b m
com.caij.puremusic.db.model.Folder: long id
com.alipay.apmobilesecuritysdk.e.f: java.lang.String d
org.jaudiotagger.audio.asf.data.MetadataDescriptor: java.lang.String name
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind MPEG2_ADTS_MAIN
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey LABEL
org.jcodec.containers.mp4.boxes.ClipRegionBox: short height
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b z
com.tencent.mm.opensdk.modelmsg.ShowMessageFromWX$Req: com.tencent.mm.opensdk.modelmsg.WXMediaMessage message
com.tencent.mm.opensdk.modelbiz.WXLaunchWxaRedirectingPage$Req: java.lang.String TAG
com.tencent.mm.opensdk.modelbiz.SubscribeMiniProgramMsg$Resp: java.lang.String unionId
com.tencent.mm.opensdk.constants.ConstantsAPI$WXApp: java.lang.String WXAPP_MSG_ENTRY_CLASSNAME
com.tencent.mm.opensdk.modelbiz.WXChannelOpenEvent$Req: java.lang.String username
com.umeng.analytics.pro.e$d$a: java.lang.String c
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey ALBUM_ARTIST
com.tencent.bugly.proguard.y: java.lang.String d
io.ktor.util.pipeline.Pipeline: java.lang.Object _interceptors
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey COMPOSER
com.umeng.commonsdk.internal.utils.d$a: int c
com.thegrizzlylabs.sardineandroid.DavAce: java.lang.String inherited
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey LANGUAGE
com.caij.puremusic.drive.model.PlexSongsResponse: com.caij.puremusic.drive.model.PlexSongsResponse$Companion Companion
org.jaudiotagger.logging.ErrorMessage: java.lang.String msg
com.caij.puremusic.db.model.SongQueries$GetSongCountBySourceIdQuery$execute$1: com.caij.puremusic.db.model.SongQueries$GetSongCountBySourceIdQuery this$0
org.jaudiotagger.tag.id3.ID3v24Tag: java.lang.String TYPE_IMAGEENCODINGRESTRICTION
org.xmlpull.v1.XmlPullParser: int IGNORABLE_WHITESPACE
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse: int StartIndex
com.umeng.commonsdk.debug.UMLogCommon: java.lang.String SC_10018
com.umeng.commonsdk.internal.a: int f
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage GENERAL_WRITE_FAILED_NEW_FILE_DOESNT_EXIST
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier TFRA
org.jaudiotagger.audio.generic.Utils: int MAX_BASE_TEMP_FILENAME_LENGTH
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey EPISODE_GLOBAL_ID
org.jaudiotagger.audio.aiff.AiffFileReader: org.jaudiotagger.audio.aiff.AiffTagReader im
com.umeng.commonsdk.statistics.proto.a: com.umeng.commonsdk.statistics.proto.a$e[] o
org.repackage.a.a.a.a.a: boolean a
com.umeng.commonsdk.statistics.idtracking.a: java.lang.String c
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey PART
com.umeng.commonsdk.statistics.proto.a: java.lang.String c
com.umeng.commonsdk.framework.UMModuleRegister: int INNER_EVENT_VALUE_HIGH
org.simpleframework.xml.core.MethodType: org.simpleframework.xml.core.MethodType NONE
com.caij.puremusic.model.DeezerResponse: int total
com.tencent.mm.opensdk.modelmsg.WXEmojiPageSharedObject: java.lang.String title
com.tencent.mm.opensdk.diffdev.a.a$a: com.tencent.mm.opensdk.diffdev.a.a a
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_TRACK_ID
com.tencent.mm.opensdk.modelmsg.WXDesignerSharedObject: java.lang.String TAG
org.jaudiotagger.utils.DirectByteBufferUtils$AndroidReleaseStrategy: java.lang.reflect.Method freeMethod
androidx.fragment.app.Fragment: boolean mHiddenChanged
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey BARCODE
com.caij.puremusic.db.model.SongQueries$SongsByAlumQuery$execute$1: com.caij.puremusic.db.model.SongQueries$SongsByAlumQuery this$0
com.tencent.bugly.proguard.bf: long d
com.caij.puremusic.db.model.FolderQueries$deleteById$1: long $id
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat SRC_ATOP
com.umeng.commonsdk.statistics.common.d: java.lang.String f
com.caij.puremusic.drive.model.SongItem: long RunTimeTicks
com.caij.puremusic.drive.model.SongItem$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.umeng.commonsdk.vchannel.Sender: java.util.Map customHeader
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_ENCRYPTION_INFO
com.tencent.bugly.crashreport.biz.UserInfoBean: java.lang.String n
com.umeng.commonsdk.statistics.c: com.umeng.commonsdk.statistics.idtracking.ImprintHandler g
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_ARRAY
org.repackage.com.vivo.identifier.BuildConfig: int e
com.umeng.analytics.pro.o$a: int t
com.umeng.analytics.pro.am: java.lang.String bf
com.umeng.analytics.pro.d: java.lang.String ak
com.umeng.commonsdk.UMConfigure: com.umeng.commonsdk.listener.OnGetOaidListener mOnGetOaidListener
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier CO64
org.simpleframework.xml.core.SignatureScanner: java.lang.reflect.Constructor constructor
org.jaudiotagger.audio.flac.FlacInfoReader: java.util.logging.Logger logger
com.umeng.commonsdk.internal.utils.b: int c
org.jaudiotagger.audio.asf.io.StreamChunkReader: org.jaudiotagger.audio.asf.data.GUID[] APPLYING
nl.adaptivity.xmlutil.core.KtXmlWriter$WriteState: nl.adaptivity.xmlutil.core.KtXmlWriter$WriteState Finished
org.jaudiotagger.tag.id3.valuepair.ImageFormats: java.lang.String MIME_TYPE_PNG
com.tencent.mm.opensdk.modelmsg.WXFileObject: byte[] fileData
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country GIBRALTAR
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script CARIAN
org.jaudiotagger.tag.id3.valuepair.TextEncoding: byte ISO_8859_1
com.caij.puremusic.model.UpdateInfo: com.caij.puremusic.model.UpdateInfo$ForcedUpgradeInfo forcedUpgradeInfo
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_URL_SOURCE_WEB
com.caij.puremusic.drive.model.AlbumSubsonicResponse$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.umeng.commonsdk.statistics.proto.c: java.util.Map d
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country POLAND
com.tencent.mm.opensdk.modelmsg.SendAuth$Resp: java.lang.String country
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: int FIELD_BLOCKSIZE_LENGTH
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status[] $VALUES
com.umeng.analytics.pro.d: java.lang.String aE
com.caij.puremusic.db.model.ServerSongCover: java.lang.String id
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey GENRE_ID
com.caij.puremusic.db.model.SongQueries$songsByNameAlbum$1: kotlin.jvm.functions.Function18 $mapper
com.tencent.bugly.proguard.ak: com.tencent.bugly.proguard.ak b
com.umeng.commonsdk.framework.UMModuleRegister: int SHARE_EVENT_VALUE_LOW
com.umeng.commonsdk.statistics.proto.Response: java.util.Map schemes
com.caij.puremusic.drive.model.GoogleDriveFileResponse: java.lang.String nextPageToken
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String PERFORMER_NAME
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_REVERB_FEEDBACK_RIGHT_TO_RIGHT
org.jaudiotagger.audio.opus.OpusVorbisTagReader: org.jaudiotagger.tag.vorbiscomment.VorbisCommentReader tagReader
com.umeng.commonsdk.statistics.idtracking.e: com.umeng.commonsdk.statistics.proto.c e
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier M7HD
org.simpleframework.xml.core.PrimitiveValue: org.simpleframework.xml.core.Context context
org.jaudiotagger.audio.wav.WavOptions: org.jaudiotagger.audio.wav.WavOptions READ_ID3_ONLY_AND_SYNC
com.umeng.commonsdk.statistics.internal.StatTracer: java.lang.String KEY_CLIENT_REQUEST_SUCCESS
com.umeng.commonsdk.statistics.proto.c$e: com.umeng.commonsdk.statistics.proto.c$e b
com.caij.puremusic.drive.model.MediaInfoWrapper: java.util.List serverLyricss
com.tencent.bugly.proguard.ay: long o
com.umeng.analytics.process.c: com.umeng.analytics.process.c a
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_PRIVATE
org.jaudiotagger.audio.asf.io.WriteableChunkModifer: boolean $assertionsDisabled
com.tencent.mm.opensdk.modelbiz.SubscribeMiniProgramMsg$Req: int LENGTH_LIMIT
org.jaudiotagger.tag.datatype.AbstractDataType: java.lang.String TYPE_ELEMENT
io.ktor.util.date.WeekDay: io.ktor.util.date.WeekDay$Companion Companion
com.caij.puremusic.drive.model.AMediaContainer: java.util.List Metadata
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey ARTISTS
com.tencent.bugly.proguard.bt: int k
com.google.android.material.bottomsheet.BottomSheetDialog$2: com.google.android.material.bottomsheet.BottomSheetDialog this$0
org.jaudiotagger.tag.id3.ID3v22Tag: boolean unsynchronization
com.umeng.analytics.pro.aq: java.lang.String l
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: int FIELD_AUDIO_CHANNELS_LENGTH
com.tencent.mm.opensdk.diffdev.a.c$a: int c
com.caij.puremusic.network.model.LastFmTrack$Track: com.caij.puremusic.network.model.LastFmTrack$Track$Album album
org.jcodec.containers.mp4.boxes.ColorExtension: short primariesIndex
com.caij.puremusic.db.model.SongQueries$SongsByInfoQuery: java.lang.String value
com.alipay.android.phone.mrpc.core.HttpException: int NETWORK_AUTH_ERROR
com.alipay.android.phone.mrpc.core.b: long a
org.jaudiotagger.tag.id3.AbstractID3v2Frame: java.lang.String UNSUPPORTED_ID
com.tencent.bugly.proguard.as: com.tencent.bugly.proguard.ai c
com.caij.puremusic.db.model.SongQueries$GetSongBySourceQuery$execute$1: com.caij.puremusic.db.model.SongQueries$GetSongBySourceQuery this$0
com.umeng.analytics.pro.j: java.lang.String ai
com.umeng.analytics.pro.d: java.lang.String Z
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey IS_CLASSICAL
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_MPEG_LOCATION_LOOKUP_TABLE
org.jaudiotagger.utils.tree.EventListenerList: java.lang.Object[] NULL_ARRAY
com.tencent.mm.opensdk.modelmsg.WXGameVideoFileObject: int FILE_SIZE_LIMIT
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_PERFORMER_SORT_OWNER
org.jaudiotagger.audio.real.RealChunk: java.lang.String DATA
org.simpleframework.xml.core.MethodName: java.lang.reflect.Method method
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country ARGENTINA
com.caij.puremusic.network.model.LastFmTrack$Track$Wiki: java.lang.String published
org.jaudiotagger.audio.asf.data.GUID: org.jaudiotagger.audio.asf.data.GUID GUID_CONTENT_BRANDING
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzB
com.umeng.analytics.pro.am: java.lang.String az
com.caij.puremusic.drive.model.Part: java.lang.String container
com.umeng.commonsdk.statistics.proto.d: java.util.Map a
com.caij.puremusic.db.model.PlaybackSongQueries$insert$2: com.caij.puremusic.db.model.PlaybackSongQueries$insert$2 INSTANCE
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country DOMINICAN_REPUBLIC
org.repackage.com.vivo.identifier.BuildConfig: java.lang.String d
com.umeng.analytics.pro.am: java.lang.String bc
org.jaudiotagger.audio.ogg.util.OggPageHeader: int MAXIMUM_SEGMENT_SIZE
com.caij.puremusic.db.model.SongQueries$songsByAlumId$1: kotlin.jvm.functions.Function18 $mapper
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier BUFF
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage ASF_HEADER_MISSING
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey CONDUCTOR
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: android.content.Context c
com.bumptech.glide.request.RequestCoordinator$RequestState: com.bumptech.glide.request.RequestCoordinator$RequestState SUCCESS
com.tencent.bugly.BuglyStrategy: boolean b
org.jaudiotagger.tag.id3.valuepair.ImageFormats: java.lang.String V22_TIF_FORMAT
org.jaudiotagger.tag.reference.GenreTypes: int MAX_STANDARD_GENRE_ID
org.xmlpull.v1.XmlPullParser: int DOCDECL
com.caij.puremusic.db.model.SongQueries$SongsByTitleQuery$execute$1: com.caij.puremusic.db.model.SongQueries$SongsByTitleQuery this$0
com.caij.puremusic.drive.model.GoogleDriveFile: java.lang.String name
org.jaudiotagger.tag.id3.ID3v23Tag: int FIELD_TAG_EXT_SIZE_LENGTH
org.simpleframework.xml.core.CompositeList: org.simpleframework.xml.core.Traverser root
com.caij.puremusic.drive.model.Response$$serializer: com.caij.puremusic.drive.model.Response$$serializer INSTANCE
com.umeng.commonsdk.statistics.UMServerURL: java.lang.String PATH_INNER
com.caij.puremusic.db.model.SongQueries$SongsByNameAlbumQuery: com.caij.puremusic.db.model.SongQueries this$0
com.umeng.analytics.pro.aq: java.lang.String d
com.umeng.analytics.process.UMProcessDBHelper$a: java.lang.String f
org.xmlpull.v1.XmlPullParser: java.lang.String NO_NAMESPACE
com.umeng.analytics.pro.o: java.lang.String n
com.tencent.mm.opensdk.constants.Build: int LAUNCH_MINIPROGRAM_SUPPORTED_SDK_INT
com.umeng.analytics.pro.am: java.lang.String aX
org.jaudiotagger.tag.vorbiscomment.VorbisCommentReader: int FIELD_VENDOR_LENGTH_POS
org.simpleframework.xml.core.Entry: boolean attribute
com.umeng.analytics.pro.o$a: int e
com.umeng.common.a: java.lang.String f
com.umeng.commonsdk.internal.c$4: com.umeng.commonsdk.internal.c a
com.umeng.commonsdk.utils.d: java.lang.String E
org.simpleframework.xml.core.ElementMapParameter: java.lang.String path
org.jaudiotagger.tag.id3.valuepair.ImageFormats: java.util.Map imageMimeTypeToFormat
com.google.android.gms.internal.play_billing.zzfm: java.lang.String zze
com.google.android.material.bottomsheet.BottomSheetBehavior: float elevation
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES
org.jaudiotagger.audio.asf.io.ChunkContainerReader: boolean $assertionsDisabled
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mFragmentManager
com.tencent.bugly.proguard.bg: boolean e
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: int PRECISION_MINUTE
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority[] $VALUES
com.caij.puremusic.drive.model.PlexUser: java.lang.String authToken
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: boolean hideable
com.thegrizzlylabs.sardineandroid.util.EntityWithAnyElementConverter: java.lang.Class entityClass
org.jaudiotagger.tag.reference.ISOCountry$Country: java.lang.String code
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey PART
com.caij.puremusic.db.model.SongEntityQueries$GetPlayListSongCountQuery: com.caij.puremusic.db.model.SongEntityQueries this$0
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script VISIBLE_SPEECH
com.umeng.analytics.pro.d: java.lang.String K
com.caij.puremusic.model.DriveFileParcelable: long createTime
org.repackage.com.meizu.flyme.openidsdk.b: boolean f
com.alipay.apmobilesecuritysdk.otherid.UmidSdkWrapper: java.lang.String UMIDTOKEN_FILE_NAME
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script SYRIAC
com.thegrizzlylabs.sardineandroid.DavPrincipal: java.lang.String KEY_AUTHENTICATED
org.simpleframework.xml.convert.ConverterScanner: org.simpleframework.xml.convert.ConverterFactory factory
io.ktor.websocket.FrameType: io.ktor.websocket.FrameType[] $VALUES
org.simpleframework.xml.strategy.WriteState: org.simpleframework.xml.strategy.Contract contract
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage GENERAL_WRITE_WARNING_UNABLE_TO_DELETE_BACKUP_FILE
com.thegrizzlylabs.sardineandroid.model.Resourcetype: java.util.List any
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzp
com.tencent.bugly.crashreport.crash.CrashDetailBean: java.util.Map S
com.tencent.mmkv.MMKVRecoverStrategic: com.tencent.mmkv.MMKVRecoverStrategic OnErrorRecover
com.tencent.bugly.proguard.au: android.content.Context e
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType MOBILE_IA
com.umeng.commonsdk.statistics.common.DeviceConfig: boolean hasReadIMEI2
com.umeng.commonsdk.stateless.UMSLEnvelopeBuild: java.lang.String TAG
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey SCRIPT
org.jaudiotagger.audio.mp3.MP3AudioHeader: org.jaudiotagger.audio.mp3.XingFrame mp3XingFrame
androidx.fragment.app.DialogFragment: java.lang.String SAVED_CANCELABLE
org.simpleframework.xml.stream.PullReader$Entry: org.xmlpull.v1.XmlPullParser source
com.caij.puremusic.db.model.Song: java.lang.String composer
com.umeng.analytics.pro.d: java.lang.String X
com.umeng.commonsdk.statistics.common.b: int a
com.tencent.bugly.BuglyStrategy$a: int MAX_USERDATA_KEY_LENGTH
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey PART
com.umeng.commonsdk.statistics.proto.c$e: com.umeng.commonsdk.statistics.proto.c$e[] g
com.umeng.analytics.pro.o: int j
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage ARTWORK_CANNOT_BE_RETRIEVED_WITH_THIS_METHOD
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country RWANDA
com.tencent.bugly.proguard.bq: int a
org.jaudiotagger.audio.mp3.XingFrame: boolean vbr
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey LYRICIST
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_GENERAL_ENCAPS_OBJECT
com.tencent.mm.opensdk.constants.Build: int TIMELINE_SUPPORTED_SDK_INT
org.jcodec.containers.mp4.boxes.MediaHeaderBox: int quality
com.caij.puremusic.network.model.SearchResponse: com.caij.puremusic.network.model.ArtistWrapper artists
com.alipay.sdk.m.j.c: com.alipay.sdk.m.j.c c
nl.adaptivity.xmlutil.EventType: nl.adaptivity.xmlutil.EventType DOCDECL
com.tencent.bugly.proguard.bq: java.lang.String v
com.caij.puremusic.db.model.SearchAlbumResult: java.lang.String id
org.jcodec.containers.mp4.boxes.LoadSettingsBox: int preloadStartTime
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.material.color.utilities.QuantizerWu$Direction: com.google.android.material.color.utilities.QuantizerWu$Direction GREEN
org.jaudiotagger.tag.id3.AbstractID3v2Tag: int TAG_HEADER_LENGTH
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country FRENCH_GUIANA
org.simpleframework.xml.core.ConversionInstance: java.lang.Class convert
com.caij.puremusic.fragments.NowPlayingScreen: com.caij.puremusic.fragments.AlbumCoverStyle defaultCoverTheme
com.umeng.commonsdk.config.d$d: com.umeng.commonsdk.config.d$d f
com.umeng.commonsdk.internal.a: int v
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey ARTIST_SORT
com.alipay.android.phone.mrpc.core.k: java.util.regex.Pattern a
org.jaudiotagger.audio.aiff.AiffAudioHeader: java.util.Date timestamp
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_LYRICIST
org.simpleframework.xml.core.CompositeList: org.simpleframework.xml.strategy.Type type
com.umeng.commonsdk.utils.FileLockUtil: java.lang.Object lockObject
com.umeng.analytics.pro.d: java.lang.String b
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a E
org.simpleframework.xml.core.VersionLabel: boolean required
com.umeng.commonsdk.statistics.proto.d: java.lang.String c
org.jaudiotagger.audio.generic.AbstractTag$1: org.jaudiotagger.audio.generic.AbstractTag this$0
com.umeng.analytics.CoreProtocol$a: com.umeng.analytics.CoreProtocol a
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String PART
com.tencent.bugly.proguard.bv: java.util.ArrayList f
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MOOD_AGGRESSIVE
com.tencent.bugly.proguard.aq: java.lang.String c
com.umeng.analytics.b: java.lang.String i
org.simpleframework.xml.core.PrimitiveArray: org.simpleframework.xml.core.Primitive root
org.jaudiotagger.tag.datatype.PartOfSet$PartOfSetValue: java.lang.String SEPARATOR
com.alipay.android.phone.mrpc.core.q: org.apache.http.client.HttpRequestRetryHandler e
com.umeng.analytics.pro.v: java.util.Stack a
com.umeng.analytics.a: long a
com.caij.puremusic.fragments.NowPlayingScreen: com.caij.puremusic.fragments.NowPlayingScreen Classic
com.umeng.analytics.process.a$a: java.lang.String f
org.jcodec.containers.mp4.boxes.MetaValue: int TYPE_UINT_V
org.jaudiotagger.audio.ogg.util.OggPageHeader: int FIELD_STREAM_SERIAL_NO_LENGTH
com.tencent.bugly.proguard.bq: java.lang.String i
org.simpleframework.xml.core.TreeModel: org.simpleframework.xml.core.Policy policy
com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker: com.google.android.material.bottomsheet.BottomSheetBehavior this$0
org.jaudiotagger.audio.asf.data.ContentBranding: java.lang.String KEY_BANNER_URL
com.caij.puremusic.db.model.SearchAlbumResultQueries$insert$1: com.caij.puremusic.db.model.SearchAlbumResult $SearchAlbumResult
com.umeng.analytics.pro.b$a: int b
org.simpleframework.xml.core.Source: org.simpleframework.xml.filter.Filter filter
com.tencent.bugly.proguard.g: byte[] k
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage GENERAL_WRITE_FAILED_TO_RENAME_ORIGINAL_FILE_TO_BACKUP
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b h
com.caij.puremusic.network.model.LastFmTrack$Track$Album: java.lang.String artist
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int MASK_MP3_PRIVACY
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country BERMUDA
com.tencent.bugly.proguard.r: android.content.Context a
com.google.android.gms.internal.play_billing.zzex: com.google.android.gms.internal.play_billing.zzex zzf
com.tencent.bugly.proguard.bd: com.tencent.bugly.proguard.as b
com.caij.puremusic.drive.model.Metadata: java.lang.String key
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey WORK_PART_LEVEL4
com.tencent.bugly.proguard.aj: com.tencent.bugly.proguard.ac j
com.caij.puremusic.drive.model.AlbumItem: com.caij.puremusic.drive.model.AlbumItem$Companion Companion
com.tencent.mm.opensdk.modelmsg.WXEmojiPageSharedObject: java.lang.String url
com.tencent.mm.opensdk.modelbiz.AddCardToWXCardPackage$WXCardItem: java.lang.String cardExtMsg
com.tencent.mm.opensdk.modelmsg.WXEnterpriseCardObject: int msgType
org.jcodec.containers.mp4.boxes.AliasBox: int volumeCreateDate
com.umeng.analytics.process.a$a: java.lang.String c
com.umeng.commonsdk.statistics.b: java.lang.String h
com.umeng.analytics.pro.al: java.lang.String a
com.umeng.commonsdk.statistics.UMErrorCode: int E_UM_BE_RAW_OVERSIZE
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey PERIOD
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean touchingScrollingChild
com.umeng.analytics.pro.ab: java.lang.String e
androidx.constraintlayout.motion.widget.MotionLayout$TransitionState: androidx.constraintlayout.motion.widget.MotionLayout$TransitionState UNDEFINED
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportDaily: long HOURS_DAY
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey ALBUM
org.jaudiotagger.audio.asf.data.AudioStreamChunk: long channelCount
com.umeng.analytics.pro.d: java.lang.String az
com.caij.puremusic.db.model.SongEntityQueries$songsFromPlaylist$1: kotlin.jvm.functions.Function3 $mapper
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MOVEMENT_NO
org.jaudiotagger.tag.id3.ID3v11Tag: int TRACK_UNDEFINED
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey ALBUM
org.jaudiotagger.tag.id3.ID3SyncSafeInteger: int INTEGRAL_SIZE
com.umeng.analytics.pro.aq: java.lang.String g
org.jaudiotagger.tag.reference.Tagger: org.jaudiotagger.tag.reference.Tagger SONGBIRD
com.umeng.analytics.pro.m: android.os.Handler e
org.jcodec.containers.mp4.boxes.EsdsBox$NodeDescriptor: java.util.Collection children
com.tencent.bugly.proguard.ag$c: long e
com.caij.puremusic.drive.model.Resourcetype$$serializer: com.caij.puremusic.drive.model.Resourcetype$$serializer INSTANCE
com.umeng.commonsdk.statistics.UMServerURL: java.lang.String SECONDARY_URL
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey URL_DISCOGS_ARTIST_SITE
com.umeng.commonsdk.statistics.proto.a: long f
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey WORK_TYPE
org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistSaveOptions: org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistSaveOptions WRITE_ALBUMARTIST
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey FBPM
com.tencent.mm.opensdk.modelmsg.ShowMessageFromWX$Req: java.lang.String lang
com.google.android.exoplayer2.metadata.id3.ChapterFrame: android.os.Parcelable$Creator CREATOR
com.thegrizzlylabs.sardineandroid.DavPrincipal$PrincipalType: com.thegrizzlylabs.sardineandroid.DavPrincipal$PrincipalType KEY
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL4_TYPE
com.google.android.exoplayer2.metadata.mp4.SlowMotionData: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier STBL
org.jaudiotagger.audio.ogg.util.OggPageHeader: int pageSequenceNumber
org.jaudiotagger.tag.id3.AbstractID3v2Tag: byte[] TAG_ID
com.caij.vip.SeeApiResponse: int code
com.alipay.android.app.IAlixPay$Stub: int TRANSACTION_r03
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey CUSTOM5
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_WORK_PART_LEVEL2_TYPE
org.simpleframework.xml.stream.OutputElement: java.lang.String reference
org.jaudiotagger.audio.mp3.MPEGFrameHeader: java.lang.String layerAsString
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State REMOVED
org.jcodec.containers.mp4.boxes.DataBox: int type
com.thegrizzlylabs.sardineandroid.DavResource: java.lang.String HTTPD_UNIX_DIRECTORY_CONTENT_TYPE
com.thegrizzlylabs.sardineandroid.DavResource$DavProperties: java.lang.String contentLanguage
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat EXCLUSION
com.alipay.tscenter.biz.rpc.report.general.model.DataReportRequest: java.lang.String os
com.umeng.commonsdk.UMConfigure: java.lang.String KEY_METHOD_NAME_PUSH_SET_SECRET
com.caij.puremusic.drive.model.SubsonicSong$$serializer: com.caij.puremusic.drive.model.SubsonicSong$$serializer INSTANCE
com.umeng.analytics.pro.b$a$a: android.os.IBinder a
com.caij.puremusic.db.model.SongQueries$searchSongsByTitle$1: kotlin.jvm.functions.Function18 $mapper
com.tencent.mm.opensdk.modelmsg.WXStateSceneDataObject: com.tencent.mm.opensdk.modelmsg.WXStateSceneDataObject$IWXStateJumpInfo stateJumpInfo
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_EMOTICON_GIFT
com.caij.puremusic.network.model.LastFmAlbum$Album: com.caij.puremusic.network.model.LastFmAlbum$Album$Wiki wiki
com.tencent.bugly.crashreport.common.strategy.StrategyBean: java.util.Map t
org.simpleframework.xml.transform.DateType$DateFormat: java.text.SimpleDateFormat format
com.umeng.analytics.pro.p: com.umeng.analytics.pro.t b
com.caij.puremusic.drive.model.JellyfinSongListResponse$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.caij.puremusic.model.Genre: int songCount
org.jaudiotagger.audio.wav.WavSubFormat: org.jaudiotagger.audio.wav.WavSubFormat[] $VALUES
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MOOD_ELECTRONIC
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode SETTINGS_TIMEOUT
org.simpleframework.xml.core.ParameterFactory$ParameterBuilder: java.lang.Class type
com.umeng.analytics.AnalyticsConfig: boolean CLEAR_EKV_WL
com.caij.puremusic.drive.model.DavProperties: java.lang.String contentType
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_WORK_PART_LEVEL4
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey TONALITY
org.simpleframework.xml.core.ElementListUnionLabel: org.simpleframework.xml.core.Label label
com.caij.puremusic.network.model.LastFmTrack$Track$Album$Attr: java.lang.String position
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a z
com.umeng.common.b: android.content.Context b
com.umeng.commonsdk.utils.d: java.lang.String O
org.repackage.com.vivo.identifier.IdentifierIdClient: java.lang.String x
com.umeng.analytics.a: int f
org.jaudiotagger.audio.dsf.DsdChunk: int FMT_CHUNK_MIN_DATA_SIZE_
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType DUMMY
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: int m
com.caij.puremusic.drive.model.SubsonicAlbum$$serializer: com.caij.puremusic.drive.model.SubsonicAlbum$$serializer INSTANCE
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MOOD_AROUSAL
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzo
org.jaudiotagger.audio.asf.io.AsfHeaderReader: org.jaudiotagger.audio.asf.data.GUID[] APPLYING
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_ALBUM_TYPE
com.alipay.android.phone.mrpc.core.a: java.lang.String e
com.umeng.commonsdk.utils.a: android.os.Handler$Callback h
com.google.android.material.bottomsheet.BottomSheetBehavior: int significantVelocityThreshold
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_DISCID
com.umeng.analytics.b: boolean j
com.umeng.analytics.process.c: java.util.concurrent.ConcurrentHashMap b
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MOOD_ELECTRONIC
com.tencent.bugly.crashreport.crash.anr.TraceFileHelper$a: long a
com.caij.puremusic.drive.model.Auth2Token: long expires_in
com.caij.puremusic.model.Playlist: long id
com.umeng.analytics.pro.j: java.lang.String h
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MOOD_DANCEABILITY
com.alipay.sdk.m.j.c: com.alipay.sdk.m.j.c h
com.caij.puremusic.db.model.HistoryEntityQueries$GetByIdQuery: com.caij.puremusic.db.model.HistoryEntityQueries this$0
com.caij.puremusic.drive.model.PlayLists: java.util.List playlist
org.simpleframework.xml.core.CacheParameter: java.lang.String path
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int EMPHASIS_RESERVED
org.jaudiotagger.audio.mp3.MP3AudioHeader: org.jaudiotagger.audio.mp3.VbriFrame mp3VbriFrame
com.alipay.android.phone.mrpc.core.a: java.lang.reflect.Method a
com.umeng.commonsdk.statistics.common.DeviceConfig: boolean hasReadOperator
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse: java.util.List Items
org.simpleframework.xml.core.ElementUnionParameter: java.lang.String path
com.caij.puremusic.model.CategoryInfo: int categoryId
com.caij.puremusic.drive.model.ArtistItem: java.lang.String Id
com.tencent.mm.opensdk.modelbiz.WXChannelOpenEvent$Req: int LENGTH_LIMIT
com.umeng.analytics.pro.be: java.io.ByteArrayOutputStream a
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey OCCASION
org.jaudiotagger.audio.asf.data.ContainerType: org.jaudiotagger.audio.asf.data.ContainerType METADATA_LIBRARY_OBJECT
org.jcodec.containers.mp4.boxes.TrunBox$Factory: org.jcodec.containers.mp4.boxes.TrunBox box
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_WORK_COMPOSITION
com.tencent.bugly.proguard.ao$a: java.lang.String d
com.tencent.mm.opensdk.constants.ConstantsAPI$LaunchWX: int LAUNCH_WX_ENTRY_PENDING_INTENT_REQUEST_CODE
com.umeng.commonsdk.statistics.c: android.content.Context r
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier COLR
com.umeng.analytics.pro.d: java.lang.String o
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType MOBILE_MMS
org.jaudiotagger.tag.datatype.NumberVariableLength: int MAXIMUM_NO_OF_DIGITS
com.tencent.bugly.proguard.at: com.tencent.bugly.proguard.aw y
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage GENERAL_WRITE_FAILED_FILE_LOCKED
org.simpleframework.xml.core.DefaultDetail: org.simpleframework.xml.core.Detail detail
com.caij.puremusic.db.model.SongQueries$songsOrderDateAdd$2: com.caij.puremusic.db.model.SongQueries$songsOrderDateAdd$2 INSTANCE
com.alipay.sdk.m.r.a: com.alipay.sdk.m.r.a e
androidx.window.core.SpecificationComputer$VerificationMode: androidx.window.core.SpecificationComputer$VerificationMode QUIET
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String CHOIR_SORT
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script HEBREW
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType WEBP
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_WORK_PART_LEVEL4
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage WMA_ONLY_STRING_IN_CD
org.jaudiotagger.tag.datatype.Lyrics3Image: java.lang.String filename
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_EVENT_TIMING_CODES
org.simpleframework.xml.core.PathParser$PathSection: java.lang.String section
org.koin.core.logger.Level: org.koin.core.logger.Level NONE
com.tencent.mm.opensdk.modelmsg.SendAuth$Req: com.tencent.mm.opensdk.modelmsg.SendAuth$Options options
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart DEFAULT
org.jcodec.containers.mp4.boxes.AudioSampleEntry: int kAudioFormatFlagIsNonInterleaved
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey TEMPO
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzt
com.tencent.mm.opensdk.diffdev.a.b: java.lang.String d
com.caij.puremusic.db.model.ArtistQueries$SearchArtistByNameQuery: com.caij.puremusic.db.model.ArtistQueries this$0
com.umeng.analytics.pro.am: java.lang.String bo
com.alipay.tscenter.biz.rpc.vkeydfp.result.AppListResult: java.lang.String appListVer
org.simpleframework.xml.stream.DocumentReader$Text: org.w3c.dom.Node node
com.umeng.analytics.pro.ao: com.umeng.analytics.pro.ao c
com.thegrizzlylabs.sardineandroid.DavPrincipal: com.thegrizzlylabs.sardineandroid.DavPrincipal$PrincipalType principalType
com.caij.puremusic.db.model.ServerLyricsQueries$deleteById$1: long $id
com.tencent.mm.opensdk.constants.Build: int SUPPORT_OPEN_CUSTOMER_SERVICE_CHAT
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessView$Req: java.lang.String query
com.caij.puremusic.db.model.Song: int trackNumber
com.umeng.commonsdk.statistics.proto.e: com.umeng.analytics.pro.bz f
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MOOD_AGGRESSIVE
com.umeng.analytics.pro.am: java.lang.String aJ
com.google.android.material.bottomsheet.BottomSheetBehavior: int VIEW_INDEX_BOTTOM_SHEET
com.caij.puremusic.db.model.Song: int sourceType
com.caij.puremusic.drive.model.DropboxDriveItem: java.lang.String name
com.umeng.analytics.AnalyticsConfig: java.lang.String GPU_VENDER
com.umeng.commonsdk.config.d$c: com.umeng.commonsdk.config.d$c l
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy[] $VALUES
com.umeng.commonsdk.UMConfigureImpl: java.lang.String a
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_SYNC_LYRIC
com.tencent.bugly.proguard.bt: java.lang.String e
com.thegrizzlylabs.sardineandroid.model.Principal: com.thegrizzlylabs.sardineandroid.model.Property property
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_COMMENT
org.jaudiotagger.logging.LogFormatter: java.text.SimpleDateFormat sfDateOut
com.umeng.analytics.filter.EventList: java.lang.String mEventListVersionKey
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_ORIG_TITLE
org.jaudiotagger.audio.wav.chunk.WavFormatChunk: int EXTENSIBLE_DATA_SIZE_WE_NEED
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_START_TIME
org.jcodec.containers.mp4.boxes.AliasBox: int AppleShareUserName
com.umeng.commonsdk.statistics.noise.ImLatent: com.umeng.commonsdk.statistics.noise.ImLatent instanse
com.umeng.analytics.pro.d: java.lang.String ae
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script THAI
cn.lyric.getter.api.tools.EventTools: int API_VERSION
com.tencent.mm.opensdk.modelmsg.WXEmojiPageSharedObject: int type
com.thegrizzlylabs.sardineandroid.impl.handler.ResourcesResponseHandler: java.lang.String TAG
com.umeng.analytics.pro.ab: java.lang.String c
com.umeng.commonsdk.internal.utils.a$a: java.lang.String b
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey PART_TYPE
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country UNITED_KINGDOM
com.umeng.analytics.pro.am: java.lang.String D
com.umeng.analytics.pro.i: java.util.List i
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MUSICBRAINZ_WORK_PART_LEVEL4_ID
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey OPUS
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind MPEG2_422_VIDEO
org.jaudiotagger.audio.mp3.MPEGFrameHeader: java.util.Map modeMap
org.simpleframework.xml.core.ElementArrayParameter: org.simpleframework.xml.core.Expression expression
org.simpleframework.xml.transform.ClassTransform: java.lang.String DOUBLE
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey URL_OFFICIAL_RELEASE_SITE
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script LAO
androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type TOP
com.umeng.commonsdk.UMConfigure: java.lang.String KEY_METHOD_NAME_PUSH_SETCHANNEL
org.jaudiotagger.audio.mp3.XingFrame: org.jaudiotagger.audio.mp3.LameFrame lameFrame
com.tencent.bugly.proguard.ak: java.util.concurrent.atomic.AtomicInteger a
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype LTE
org.jaudiotagger.audio.ogg.util.OggPageHeader: java.util.List packetList
org.simpleframework.xml.core.TreeModel: org.simpleframework.xml.core.ModelMap models
org.simpleframework.xml.core.PathParser$PathSection: int end
kotlinx.serialization.json.internal.WriteMode: kotlinx.serialization.json.internal.WriteMode OBJ
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_TRACKID
org.jaudiotagger.tag.id3.AbstractID3v2Tag: int emptyFrameBytes
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country AUSTRALIA
com.umeng.commonsdk.framework.UMWorkDispatch: int MSG_AUTO_PROCESS
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzw
com.caij.puremusic.drive.model.SubsonicAlbum$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.simpleframework.xml.stream.Mode: org.simpleframework.xml.stream.Mode INHERIT
org.simpleframework.xml.stream.CamelCaseStyle: org.simpleframework.xml.stream.Builder builder
org.jcodec.containers.mp4.boxes.KeysBox: java.lang.String FOURCC
org.jaudiotagger.tag.id3.ID3v24Tag: java.lang.String TYPE_FOOTER
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP4_CHANGES_TO_FILE_FAILED_NO_TAG_DATA
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier COMMENTS
com.caij.puremusic.db.model.PlaylistEntityQueries$searchPlaylistByName$2: com.caij.puremusic.db.model.PlaylistEntityQueries$searchPlaylistByName$2 INSTANCE
com.caij.puremusic.db.model.AlbumQueries$getAlbumByArtistId$1: kotlin.jvm.functions.Function11 $mapper
com.umeng.commonsdk.config.d$d: com.umeng.commonsdk.config.d$d h
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage GENERAL_WRITE_FAILED_TO_RENAME_ORIGINAL_BACKUP_TO_ORIGINAL
com.caij.puremusic.db.model.SongQueries$FirstSongByAlbumIdQuery$execute$1: com.caij.puremusic.db.model.SongQueries$FirstSongByAlbumIdQuery this$0
com.umeng.commonsdk.statistics.idtracking.Envelope: int mSerialNo
com.caij.puremusic.drive.model.AlbumMediaContainer: com.caij.puremusic.drive.model.AlbumMediaContainer$Companion Companion
org.simpleframework.xml.stream.DocumentReader$Entry: org.w3c.dom.Node node
com.umeng.analytics.pro.an: java.util.Map x
com.google.android.gms.internal.play_billing.zza: int zzr
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_CONDUCTOR
com.umeng.commonsdk.debug.UMLogCommon: java.lang.String SC_10006
org.jaudiotagger.tag.datatype.BooleanByte: int bitPosition
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage UNABLE_TO_FIND_FILE
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script SUNDANESE
org.jaudiotagger.audio.SupportedFileFormat: org.jaudiotagger.audio.SupportedFileFormat RA
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey TITLE_MOVEMENT
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey ENGINEER
org.jaudiotagger.audio.aiff.chunk.CommentsChunk: org.jaudiotagger.audio.aiff.AiffAudioHeader aiffHeader
com.tencent.mm.opensdk.diffdev.a.b: com.tencent.mm.opensdk.diffdev.a.c g
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind MPEG2_SPATIAL_VIDEO
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey AP_ID
com.caij.puremusic.db.model.SongEntityQueries$GetSongEntityQuery: long playlistId
com.caij.puremusic.drive.model.Collection$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.umeng.commonsdk.UMConfigure$BS_TYPE: com.umeng.commonsdk.UMConfigure$BS_TYPE[] a
org.jaudiotagger.tag.id3.ID3v23Tag: int MASK_V23_UNSYNCHRONIZATION
StatusBarLyric.API.StatusBarLyric: android.content.Context context
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country LATVIA
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey CONDUCTOR
com.thegrizzlylabs.sardineandroid.DavResource: java.net.URI href
com.caij.puremusic.model.Data: java.lang.String pictureBig
org.simpleframework.xml.transform.DateType: org.simpleframework.xml.transform.DateType LONG
org.jaudiotagger.tag.id3.ID3v24Tag: int TAG_EXT_HEADER_RESTRICTION_DATA_LENGTH
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey OCCASION
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey URL_OFFICIAL_ARTIST_SITE
org.jaudiotagger.audio.asf.io.AsfExtHeaderReader: org.jaudiotagger.audio.asf.data.GUID[] APPLYING
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country PANAMA
com.tencent.bugly.proguard.ax: java.lang.String g
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script LIMBU
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int LAYER_II_FRAME_SIZE_COEFFICIENT
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MUSICBRAINZ_RELEASE_COUNTRY
com.caij.puremusic.network.model.LastFmTrack$Track: com.caij.puremusic.network.model.LastFmTrack$Track$Artist artist
org.jcodec.containers.mp4.boxes.SegmentIndexBox: long first_offset
com.caij.puremusic.db.model.SongQueries$songsOrderDateAdd$1: kotlin.jvm.functions.Function18 $mapper
com.tencent.mm.opensdk.modelmsg.SendTdiAuth$Resp: byte[] tdiAuthBuffer
org.jcodec.containers.mp4.boxes.AliasBox: int RevisedAppleShare
org.jaudiotagger.audio.flac.FlacTagWriter$1: int[] $SwitchMap$org$jaudiotagger$audio$flac$metadatablock$BlockType
com.umeng.umzid.b: java.util.concurrent.ThreadFactory b
com.caij.puremusic.model.CategoryInfo$Category: com.caij.puremusic.model.CategoryInfo$Category Artists
com.umeng.analytics.pro.l: java.lang.String d
com.alipay.android.phone.mrpc.core.q: org.apache.http.entity.AbstractHttpEntity j
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_URLLINK
org.simpleframework.xml.core.PathParser: java.util.List names
com.umeng.commonsdk.statistics.internal.a: java.lang.String c
org.jaudiotagger.tag.reference.ID3V2Version: org.jaudiotagger.tag.reference.ID3V2Version ID3_V22
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MOOD_AGGRESSIVE
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier CRHD
com.alipay.sdk.app.AuthTask: com.alipay.sdk.m.x.a b
org.simpleframework.xml.core.Comparer: java.lang.String[] ignore
org.jaudiotagger.tag.id3.AbstractID3v2Tag: int TAG_SIZE_INCREMENT
org.jaudiotagger.tag.asf.AsfTagCoverField: int endOfName
org.simpleframework.xml.core.ElementArrayLabel: java.lang.Class type
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey CATALOG_NO
com.umeng.common.b: com.umeng.common.b a
org.simpleframework.xml.core.ElementListLabel: boolean data
androidx.fragment.app.Fragment: int mContentLayoutId
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_WORK_PART_LEVEL5_ID
org.jcodec.containers.mp4.boxes.TimecodeSampleEntry: int FLAG_COUNTER
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_LYRICIST
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey WORK_PART_LEVEL1
org.simpleframework.xml.stream.InputAttribute: java.lang.String reference
com.umeng.analytics.pro.am: java.lang.String be
com.caij.puremusic.network.model.LastFmAlbum$Album$Wiki: java.lang.String content
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey URL_DISCOGS_RELEASE_SITE
org.jaudiotagger.tag.id3.ID3v22Frames: org.jaudiotagger.tag.id3.ID3v22Frames id3v22Frames
com.google.android.exoplayer2.metadata.id3.PrivFrame: android.os.Parcelable$Creator CREATOR
com.caij.puremusic.db.model.SongQueries$FirstSongByAlbumIdQuery: int sourceType
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: java.lang.String MM_TEMPO
com.umeng.commonsdk.debug.UMLogCommon: java.lang.String SC_10020
com.caij.puremusic.db.model.Album: java.lang.String artistName
com.caij.puremusic.network.model.LastFmTrack$Track: com.caij.puremusic.network.model.LastFmTrack$Track$Toptags toptags
org.simpleframework.xml.core.ArrayInstance: java.lang.Class type
com.caij.puremusic.drive.model.SubsonicResponse: com.caij.puremusic.drive.model.SubsonicResponse$Companion Companion
com.umeng.commonsdk.statistics.proto.e$e: com.umeng.commonsdk.statistics.proto.e$e c
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MM_TEMPO
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_OPEN_BUSI_LUCKY_MONEY
org.jaudiotagger.tag.id3.ID3v23Frame$StatusFlags: int MASK_TAG_ALTER_PRESERVATION
org.jcodec.containers.mp4.boxes.Header: boolean lng
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country TIMOR_LESTE
com.caij.puremusic.drive.model.AlbumArtist$$serializer: com.caij.puremusic.drive.model.AlbumArtist$$serializer INSTANCE
com.caij.puremusic.db.model.PlaylistEntityQueries$CheckPlaylistExistsQuery: com.caij.puremusic.db.model.PlaylistEntityQueries this$0
kotlinx.coroutines.CompletedExceptionally: int _handled
org.jaudiotagger.audio.asf.data.GUID: org.jaudiotagger.audio.asf.data.GUID GUID_AUDIO_ERROR_CONCEALEMENT_INTERLEAVED
com.tencent.mm.opensdk.modelmsg.WXStateJumpUrlInfo: java.lang.String TAG
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MUSICBRAINZ_WORK_PART_LEVEL3_ID
com.tencent.bugly.proguard.br: byte a
org.jaudiotagger.tag.mp4.field.Mp4FieldType: org.jaudiotagger.tag.mp4.field.Mp4FieldType MI3P
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_FREQUENCY
com.umeng.commonsdk.statistics.common.a$b: boolean a
org.jaudiotagger.logging.LogFormatter: boolean isObsfucated
com.caij.puremusic.db.model.SongQueries$songsByArtist$1: com.caij.puremusic.db.model.SongQueries this$0
org.jaudiotagger.audio.flac.metadatablock.MetadataBlock: org.jaudiotagger.audio.flac.metadatablock.MetadataBlockData mbd
com.umeng.analytics.pro.br: byte b
org.jaudiotagger.audio.asf.data.EncryptionChunk: java.lang.String secretData
com.caij.vip.PayInfo: java.lang.String desc
com.umeng.analytics.vshelper.PageNameMonitor: java.lang.String currentActivity
com.thegrizzlylabs.sardineandroid.model.Prop: com.thegrizzlylabs.sardineandroid.model.CurrentUserPrivilegeSet currentUserPrivilegeSet
org.jaudiotagger.tag.TagOptionSingleton: boolean lyrics3SaveEmptyField
com.caij.puremusic.db.model.HistoryEntityQueries$HistorySongsQuery: com.caij.puremusic.db.model.HistoryEntityQueries this$0
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country ANGOLA
com.umeng.analytics.pro.bv: int g
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzR
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country UGANDA
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_LANGUAGE
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType MOBILE_DUN
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey PERFORMER_NAME_SORT
com.alipay.android.phone.mrpc.core.o: java.util.ArrayList e
org.jaudiotagger.tag.id3.ID3v24Tag: boolean crcDataFlag
androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour FIXED
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource[] $VALUES
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey ALBUM_ARTISTS
com.alipay.android.phone.mrpc.core.b: com.alipay.android.phone.mrpc.core.b$b f
org.simpleframework.xml.stream.Builder: org.simpleframework.xml.stream.Style style
com.tencent.mm.opensdk.modelbiz.SubscribeMiniProgramMsg$Resp: java.lang.String nickname
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MM_CUSTOM_5
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource MEMORY_CACHE
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_URL_ARTIST_WEB
com.umeng.commonsdk.statistics.idtracking.j: android.content.Context b
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MM_RATING
androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT
com.umeng.commonsdk.utils.d: java.lang.String H
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgram$Req: int miniprogramType
org.jaudiotagger.audio.asf.data.ContentBranding: java.lang.String KEY_COPYRIGHT_URL
org.simpleframework.xml.core.MethodContact: java.lang.annotation.Annotation label
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_INITIAL_KEY
org.jcodec.containers.mp4.MP4Util$Atom: long offset
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelProvider$Factory mDefaultFactory
org.jcodec.containers.mp4.boxes.AliasBox: int AppleShareServerName
org.simpleframework.xml.core.PathParser$PathSection: java.lang.String path
com.caij.puremusic.drive.model.EmbyFoldersResponse$$serializer: com.caij.puremusic.drive.model.EmbyFoldersResponse$$serializer INSTANCE
org.jaudiotagger.tag.id3.ID3v24Tag: int TAG_EXT_HEADER_RESTRICTION_LENGTH
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_ALBUM_SORT_ORDER_ITUNES
com.umeng.commonsdk.statistics.common.ULog: int LEVEL_INFO
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind MPEG2_SNR_VIDEO
com.umeng.analytics.pro.o: java.lang.String d
org.jaudiotagger.tag.TagOptionSingleton: boolean id3v1Save
org.simpleframework.xml.core.MethodType: org.simpleframework.xml.core.MethodType[] $VALUES
com.umeng.analytics.AnalyticsConfig: java.lang.String RTD_SP_FILE
org.jaudiotagger.audio.mp3.MP3AudioHeader: java.lang.Long audioDataStartPosition
com.umeng.analytics.b: com.umeng.analytics.filter.a u
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey COMMENT
com.umeng.analytics.CoreProtocol: android.content.Context a
com.caij.puremusic.db.model.SongEntityQueries$deletePlaylistSongs$2: com.caij.puremusic.db.model.SongEntityQueries$deletePlaylistSongs$2 INSTANCE
org.simpleframework.xml.stream.Formatter: org.simpleframework.xml.stream.Indenter indenter
com.umeng.analytics.pro.d: java.lang.String D
com.caij.puremusic.db.model.HistoryEntityQueries$HistorySongsQuery$execute$1: com.caij.puremusic.db.model.HistoryEntityQueries$HistorySongsQuery this$0
com.umeng.commonsdk.statistics.common.DataHelper: java.lang.String UMENG_PLUS
com.tencent.mm.opensdk.modelbase.BaseResp: java.lang.String errStr
com.thegrizzlylabs.sardineandroid.model.Lockscope: com.thegrizzlylabs.sardineandroid.model.Shared shared
com.caij.puremusic.drive.model.MediaContainer: java.util.List Metadata
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey TITLE
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey CONDUCTOR_SORT
org.jaudiotagger.audio.iff.IffHeaderChunk: int TYPE_LENGTH
com.thegrizzlylabs.sardineandroid.model.Prop: com.thegrizzlylabs.sardineandroid.model.Group group
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey DISC_SUBTITLE
org.jcodec.containers.mp4.boxes.AliasBox: short volumeType
org.jaudiotagger.tag.id3.valuepair.ImageFormats: java.lang.String V22_GIF_FORMAT
org.jaudiotagger.audio.asf.data.ContentDescription: java.lang.String KEY_DESCRIPTION
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey ALBUM_ARTIST_SORT
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_TITLE
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.audio.asf.data.ContainerType highestContainer
com.alipay.android.phone.mrpc.core.a: byte[] b
com.alipay.apmobilesecuritysdk.face.TMNTokenClient: android.content.Context b
com.caij.puremusic.db.model.SongQueries$getArtistSongCount$1: com.caij.puremusic.db.model.SongQueries$getArtistSongCount$1 INSTANCE
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey PODCAST_URL
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage ID3_EXTENDED_HEADER_SIZE_INVALID
org.jaudiotagger.audio.mp4.Mp4FileWriter: org.jaudiotagger.audio.mp4.Mp4TagWriter tw
com.umeng.commonsdk.statistics.proto.e$e: com.umeng.commonsdk.statistics.proto.e$e a
com.umeng.analytics.pro.j: java.lang.String V
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction KEY
org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile: org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile T_F_LC
org.simpleframework.xml.core.ClassInstantiator: java.util.List creators
com.umeng.analytics.AnalyticsConfig: boolean CHANGE_CATCH_EXCEPTION_NOTALLOW
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzF
com.umeng.analytics.pro.bn$a: int c
com.tencent.mm.opensdk.modelmsg.WXStateJumpMiniProgramInfo: java.lang.String username
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier STTS
com.caij.puremusic.drive.model.MediaInfoWrapper: java.util.ArrayList serverArtistCovers
com.umeng.analytics.pro.an: java.lang.String b
org.simpleframework.xml.core.FieldScanner$FieldKey: java.lang.Class type
org.jcodec.containers.mp4.boxes.AudioSampleEntry: int bytesPerSample
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier ALBUM_ARTIST
com.umeng.commonsdk.statistics.internal.StatTracer: java.lang.String KEY_FIRST_ACTIVATE_TIME
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo mAnimationInfo
com.tencent.bugly.crashreport.common.strategy.StrategyBean: int u
org.simpleframework.xml.stream.Mode: org.simpleframework.xml.stream.Mode DATA
org.simpleframework.xml.core.ElementListParameter: int index
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey ENSEMBLE
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType JPEG
com.tencent.mm.opensdk.modelmsg.WXMusicVideoObject: java.lang.String musicUrl
org.jaudiotagger.audio.ogg.util.OggPageHeader: int MAXIMUM_NO_OF_SEGMENT_SIZE
io.ktor.utils.io.ByteBufferChannel: java.lang.Object _state
com.caij.puremusic.model.Contributor: java.lang.String image
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_WORK_PART_LEVEL1_ID
androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: java.lang.String wxappPayEntryClassname
org.simpleframework.xml.core.Composite: org.simpleframework.xml.strategy.Type type
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey COMPOSER_SORT
org.jaudiotagger.audio.generic.AudioFileWriter: int MINIMUM_FILESIZE
org.jaudiotagger.audio.wav.WavSaveOptions: org.jaudiotagger.audio.wav.WavSaveOptions SAVE_EXISTING_AND_ACTIVE_AND_SYNC
com.caij.puremusic.drive.model.JellyfinSongListResponse: java.util.List Items
org.jaudiotagger.tag.id3.ID3v23Frame$StatusFlags: java.lang.String TYPE_READONLY
com.umeng.analytics.MobclickAgent$EScenarioType: com.umeng.analytics.MobclickAgent$EScenarioType E_UM_GAME
org.simpleframework.xml.core.CompositeUnion: org.simpleframework.xml.core.Expression path
org.simpleframework.xml.core.TreeModel: org.simpleframework.xml.core.Expression expression
org.jaudiotagger.tag.id3.ID3v1Tag: java.lang.String TYPE_COMMENT
com.umeng.commonsdk.debug.UMRTLog: java.lang.String RTLOG_ENABLE
org.jaudiotagger.tag.mp4.field.Mp4TagTextNumberField: int NUMBER_LENGTH
com.google.android.material.bottomsheet.BottomSheetDragHandleView: boolean accessibilityServiceEnabled
com.caij.puremusic.model.UpdateInfo: boolean isAlter
com.alipay.apmobilesecuritysdk.face.TMNTokenClient$1: java.lang.String c
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script MATHEMATICAL_NOTATION
com.caij.puremusic.db.model.HistoryEntityQueries$clear$1: com.caij.puremusic.db.model.HistoryEntityQueries$clear$1 INSTANCE
com.caij.puremusic.drive.model.Metadata: java.lang.String ratingKey
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$insert$2: com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$insert$2 INSTANCE
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey LYRICS
org.jaudiotagger.audio.mp3.XingFrame: int XING_AUDIOSIZE_BUFFER_SIZE
org.jcodec.containers.mp4.boxes.SegmentTypeBox: java.lang.String majorBrand
com.tencent.bugly.proguard.bb: java.lang.String b
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage ASF_FILE_HEADER_SIZE_DOES_NOT_MATCH_FILE_SIZE
org.jaudiotagger.tag.id3.ID3v23Frame: int FRAME_ID_SIZE
com.umeng.analytics.pro.o$b: com.umeng.analytics.pro.o a
org.jaudiotagger.audio.mp4.Chunk: java.nio.ByteBuffer data
com.tencent.mm.opensdk.constants.Build: int MUSIC_DATA_URL_SUPPORTED_SDK_INT
org.jaudiotagger.audio.mp4.ChunkWriter: org.jcodec.containers.mp4.boxes.TrakBox trak
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier MDAT
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier MDHD
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier[] $VALUES
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MOOD_AROUSAL
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script LEPCHA
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey QUALITY
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country SWEDEN
com.umeng.commonsdk.statistics.AnalyticsConstants: java.lang.String LOG_TAG
com.caij.puremusic.drive.model.SubsonicPlaylist: int duration
org.jaudiotagger.tag.id3.valuepair.StandardIPLSKey: org.jaudiotagger.tag.id3.valuepair.StandardIPLSKey ENGINEER
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_RECOMMENDED_BUFFER_SIZE
com.umeng.analytics.pro.aq: int a
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_ALBUM_STATUS
com.tencent.bugly.BuglyStrategy: java.lang.Class o
com.caij.puremusic.model.ArtworkInfo: long albumId
com.umeng.analytics.pro.e$d$b: java.lang.String f
com.umeng.analytics.pro.d: java.lang.String I
org.simpleframework.xml.stream.Mode: org.simpleframework.xml.stream.Mode ESCAPE
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_PLAY_COUNTER
org.jcodec.containers.mp4.boxes.EsdsBox$ES: int trackId
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$PreorderEnumeration: org.jaudiotagger.utils.tree.DefaultMutableTreeNode this$0
com.tencent.bugly.proguard.bo: java.lang.String c
com.umeng.analytics.pro.o$c: com.umeng.commonsdk.statistics.noise.ABTest f
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier UNMETERED_OR_DAILY
org.jaudiotagger.audio.ogg.OggVorbisCommentTagCreator: byte FRAMING_BIT_VALID_VALUE
com.r0adkll.slidr.model.SlidrPosition: com.r0adkll.slidr.model.SlidrPosition LEFT
com.alipay.sdk.m.r.a: com.alipay.sdk.m.r.a f
com.caij.puremusic.drive.model.SongItem: java.lang.String Path
org.jaudiotagger.audio.ogg.util.OggPageHeader$PacketStartAndLength: java.lang.Integer startPosition
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_RELEASE_STATUS
org.repackage.com.meizu.flyme.openidsdk.b: org.repackage.com.meizu.flyme.openidsdk.OpenId b
com.umeng.commonsdk.utils.a: long a
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: int vorbisVersion
com.caij.puremusic.fragments.NowPlayingScreen: com.caij.puremusic.fragments.NowPlayingScreen Adaptive
org.jaudiotagger.audio.mp3.MP3File: org.jaudiotagger.logging.AbstractTagDisplayFormatter tagFormatter
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey ALBUM_ARTISTS
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status CLEARED
org.jcodec.containers.mp4.boxes.DataBox: int locale
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier FAST_IF_RADIO_AWAKE
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat SCREEN
com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport$Result: java.lang.String syncToken
org.simpleframework.xml.core.ElementLabel: java.lang.Class type
com.caij.puremusic.fragments.GridStyle: com.caij.puremusic.fragments.GridStyle GradientImage
org.jaudiotagger.tag.mp4.field.Mp4DiscNoField: int DISC_NO_INDEX
org.jcodec.containers.mp4.boxes.EncodedPixelBox: java.lang.String ENOF
com.umeng.analytics.pro.e$d$b: java.lang.String c
com.umeng.commonsdk.statistics.proto.Response: com.umeng.commonsdk.statistics.proto.Response$e[] optionals
org.jaudiotagger.audio.aiff.AiffTagFieldKey: org.jaudiotagger.audio.aiff.AiffTagFieldKey TIMESTAMP
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier ENCODER
org.jaudiotagger.tag.reference.Tagger: org.jaudiotagger.tag.reference.Tagger TAG_AND_RENAME
com.caij.puremusic.fragments.lyrics.ComnLyricsFragment$LyricsType: com.caij.puremusic.fragments.lyrics.ComnLyricsFragment$LyricsType SERVER_LYRICS
com.caij.puremusic.drive.model.BaiduDriveItem: java.lang.String path
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country SLOVENIA
com.tencent.mm.opensdk.channel.a.a$a: android.os.Bundle e
nl.adaptivity.xmlutil.EventType: nl.adaptivity.xmlutil.EventType END_ELEMENT
com.umeng.commonsdk.statistics.proto.d: int k
com.umeng.commonsdk.utils.d: java.lang.String b
javax.xml.namespace.QName: java.lang.String localPart
com.caij.puremusic.drive.model.Type: java.lang.String key
com.caij.vip.ClientWeixinPayResponse: java.lang.String noncestr
androidx.activity.ComponentDialog: androidx.activity.OnBackPressedDispatcher onBackPressedDispatcher
com.umeng.commonsdk.utils.d: java.lang.String s
com.umeng.commonsdk.internal.c: android.content.Context e
com.caij.puremusic.drive.model.MediaContainer: java.lang.String thumb
com.alipay.apmobilesecuritysdk.face.TMNTokenClient$1: com.alipay.apmobilesecuritysdk.face.TMNTokenClient$InitResultListener b
com.umeng.commonsdk.statistics.b: java.lang.String a
androidx.window.core.SpecificationComputer$VerificationMode: androidx.window.core.SpecificationComputer$VerificationMode[] $VALUES
org.jaudiotagger.audio.mp4.Chunk: int UNEQUAL_SIZES
org.simpleframework.xml.core.ParameterContact: java.lang.reflect.Constructor factory
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey PART_NUMBER
org.jaudiotagger.tag.asf.AsfTagCoverField: int pictureType
com.caij.vip.Activation: java.lang.String clientId
com.tencent.bugly.proguard.bm: java.util.ArrayList c
okhttp3.Protocol: okhttp3.Protocol HTTP_1_0
com.alipay.sdk.m.u.g: com.alipay.sdk.m.u.g h
org.jaudiotagger.audio.asf.data.MetadataContainer: boolean $assertionsDisabled
nl.adaptivity.xmlutil.serialization.InputKind: nl.adaptivity.xmlutil.serialization.InputKind[] $VALUES
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage ID3_TAG_COMPRESSED
com.thegrizzlylabs.sardineandroid.model.Owner: com.thegrizzlylabs.sardineandroid.model.Unauthenticated unauthenticated
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_RELEASE_GROUPID
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_ALBUM
org.jaudiotagger.tag.mp4.field.Mp4FieldType: org.jaudiotagger.tag.mp4.field.Mp4FieldType GENRES
org.simpleframework.xml.core.SignatureScanner: org.simpleframework.xml.core.ParameterFactory factory
com.umeng.commonsdk.statistics.common.d$a: int a
org.simpleframework.xml.core.ElementListUnionParameter: org.simpleframework.xml.core.Label label
com.tencent.mm.opensdk.modelbiz.ChooseCardFromWXCardPackage$Req: java.lang.String locationId
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_OBJECT
org.jaudiotagger.tag.id3.ID3v24Tag: int TAG_EXT_HEADER_UPDATE_LENGTH
org.jaudiotagger.tag.id3.framebody.FrameBodyTORY: int NUMBER_OF_DIGITS_IN_YEAR
org.simpleframework.xml.convert.Reference: org.simpleframework.xml.strategy.Value value
com.thegrizzlylabs.sardineandroid.model.Locktype: com.thegrizzlylabs.sardineandroid.model.Write write
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey ENCODER
com.tencent.mm.opensdk.modelmsg.WXMusicVideoObject: int LYRIC_LENGTH_LIMIT
org.jaudiotagger.tag.reference.ID3V2Version: org.jaudiotagger.tag.reference.ID3V2Version ID3_V23
org.jaudiotagger.tag.id3.framebody.FrameBodyPOPM: int COUNTER_MINIMUM_FIELD_SIZE
com.umeng.commonsdk.statistics.noise.ABTest: float mProb07
com.google.android.material.datepicker.Month: android.os.Parcelable$Creator CREATOR
com.umeng.commonsdk.config.d$c: com.umeng.commonsdk.config.d$c k
com.umeng.analytics.pro.d: java.lang.String h
org.jaudiotagger.audio.opus.OpusHeader: java.lang.String TAGS_CAPTURE_PATTERN
org.simpleframework.xml.core.ElementMapUnionParameter: org.simpleframework.xml.core.ElementMapUnionParameter$Contact contact
com.alipay.android.app.IAlixPay$Stub: int TRANSACTION_prePay
com.umeng.commonsdk.internal.utils.k$1: android.content.Context b
org.simpleframework.xml.core.ConstructorScanner: org.simpleframework.xml.core.ParameterMap registry
com.umeng.analytics.pro.am: java.lang.String N
org.jcodec.containers.mp4.boxes.AudioSampleEntry: int bytesPerPkt
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script ARMENIAN
androidx.constraintlayout.core.SolverVariable$Type: androidx.constraintlayout.core.SolverVariable$Type SLACK
com.umeng.analytics.b: int o
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: java.util.Map o
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MOOD_ACOUSTIC
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey ORIGINAL_ARTIST
com.thegrizzlylabs.sardineandroid.DavPrincipal: java.lang.String displayName
androidx.customview.view.AbsSavedState: androidx.customview.view.AbsSavedState EMPTY_STATE
org.repackage.com.vivo.identifier.IdentifierIdClient: boolean p
com.tencent.bugly.proguard.bo: com.tencent.bugly.proguard.bl n
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_TSIZ
com.caij.puremusic.model.CategoryInfo$Category: com.caij.puremusic.model.CategoryInfo$Category Albums
com.caij.puremusic.drive.model.JellyfinLoginResponse$$serializer: com.caij.puremusic.drive.model.JellyfinLoginResponse$$serializer INSTANCE
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script SYMBOLS
com.umeng.analytics.pro.am: java.lang.String an
org.jaudiotagger.tag.lyrics3.Lyrics3v2Fields: java.lang.String CRLF
com.tencent.bugly.proguard.u: java.util.Map e
com.tencent.mm.opensdk.modelmsg.WXEnterpriseCardObject: java.lang.String cardInfo
com.tencent.bugly.proguard.y: byte[] g
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_DATA
com.umeng.commonsdk.utils.d: java.lang.String aq
com.tencent.mm.opensdk.modelbiz.WXPayInsurance$Req: java.lang.String url
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey SINGLE_DISC_TRACK_NO
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey URL_LYRICS_SITE
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey ARRANGER_SORT
org.simpleframework.xml.core.AnnotationHandler: java.lang.Class type
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: int PRECISION_DAY
org.simpleframework.xml.core.Traverser: org.simpleframework.xml.core.Context context
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey CUSTOM3
com.umeng.commonsdk.statistics.idtracking.a: int b
org.simpleframework.xml.core.TreeModel: java.lang.String name
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script TELUGU
org.jaudiotagger.tag.reference.PictureTypes: java.lang.Integer DEFAULT_ID
com.caij.puremusic.db.model.SongQueries$songsByNameArtist$2: com.caij.puremusic.db.model.SongQueries$songsByNameArtist$2 INSTANCE
org.simpleframework.xml.core.ElementArrayLabel: boolean data
org.simpleframework.xml.stream.InputElement: org.simpleframework.xml.stream.InputNodeMap map
com.tencent.bugly.proguard.at$3: java.lang.String d
com.umeng.analytics.filter.EventList: int SAVE_LIST_DATA
org.simpleframework.xml.core.PathParser: org.simpleframework.xml.util.Cache elements
com.caij.puremusic.model.UpdateInfo: java.lang.String desc
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey DESCRIPTION
com.tencent.bugly.proguard.k: java.lang.String a
com.caij.puremusic.drive.model.PlexUser: java.lang.String authenticationToken
com.caij.puremusic.drive.model.DavResource: java.lang.String DEFAULT_CONTENT_TYPE
com.caij.puremusic.drive.model.PlexUser: int id
com.caij.puremusic.db.model.SongEntityQueries$getSongEntity$2: com.caij.puremusic.db.model.SongEntityQueries$getSongEntity$2 INSTANCE
com.alipay.android.phone.mrpc.core.h: android.content.Context a
org.jaudiotagger.audio.asf.data.MetadataDescriptor: int streamNumber
com.tencent.mm.opensdk.modelbiz.WXChannelStartLive$Req: java.lang.String liveJsonInfo
com.caij.puremusic.drive.model.PlayLists: com.caij.puremusic.drive.model.PlayLists$Companion Companion
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MUSICBRAINZ_WORK_PART_LEVEL2_ID
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage ADDITIONAL_MOOV_ATOM_AT_END_OF_MP4
org.jcodec.containers.mp4.boxes.MovieFragmentBox: org.jcodec.containers.mp4.boxes.MovieBox moov
com.tencent.mm.opensdk.modelmsg.WXDynamicVideoMiniProgramObject: java.lang.String videoSource
org.simpleframework.xml.stream.Format: int indent
com.tencent.bugly.proguard.bc: java.lang.String a
org.simpleframework.xml.core.ElementListParameter: java.lang.String path
org.jaudiotagger.tag.id3.AbstractID3v1Tag: int FIELD_ALBUM_LENGTH
org.jaudiotagger.audio.ogg.util.OggPageHeader: int FIELD_PAGE_CHECKSUM_LENGTH
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzE
com.tencent.mm.opensdk.modelmsg.WXFileObject: java.lang.String TAG
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey FBPM
com.umeng.commonsdk.utils.UMUtils: int DEFAULT_TIMEZONE
com.tencent.mm.opensdk.channel.MMessageActV2$Args: java.lang.String targetClassName
com.umeng.commonsdk.utils.d: java.lang.String x
org.jaudiotagger.audio.mp4.ChunkWriter: int sampleSize
com.google.android.gms.internal.play_billing.zzfv: int zzd
com.google.android.material.bottomsheet.BottomSheetBehavior: android.content.res.ColorStateList backgroundTint
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int EMPHASIS_NONE
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey ENGINEER
com.tencent.bugly.proguard.af: java.util.Map c
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey KEY
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MM_INVOLVED_PEOPLE
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country DOMINICA
com.umeng.analytics.pro.d: java.lang.String al
org.jaudiotagger.audio.wav.WavOptions: org.jaudiotagger.audio.wav.WavOptions[] $VALUES
com.umeng.commonsdk.framework.UMWorkDispatch: int MSG_QUIT
org.jaudiotagger.audio.ogg.util.OggPageHeader: long startByte
com.umeng.analytics.pro.d: java.lang.String aB
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MIXER
org.simpleframework.xml.core.FieldDetail: java.lang.String name
com.umeng.commonsdk.statistics.common.ReportPolicy$LatentPolicy: long latency
kotlin.time.DurationUnit: kotlin.time.DurationUnit MINUTES
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_WORK_PART_LEVEL2_ID
com.umeng.commonsdk.statistics.UMServerURL: java.lang.String PATH_SHARE
com.umeng.commonsdk.internal.c$5: com.umeng.commonsdk.internal.c a
com.umeng.analytics.pro.d: java.lang.String ag
org.simpleframework.xml.stream.InputAttribute: org.simpleframework.xml.stream.InputNode parent
org.jaudiotagger.tag.asf.AsfFieldKey: boolean $assertionsDisabled
org.jaudiotagger.tag.id3.ID3v24Tag: java.lang.String TYPE_TEXTFIELDSIZERESTRICTION
com.umeng.analytics.pro.j: java.lang.String ae
org.jaudiotagger.tag.TagOptionSingleton: boolean isAndroid
org.simpleframework.xml.core.ElementLabel: java.lang.Class expect
io.ktor.websocket.CloseReason$Codes: java.util.Map byCodeMap
com.umeng.analytics.pro.cb: byte b
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country LITHUANIA
org.jaudiotagger.tag.id3.ID3v1Tag: byte RELEASE
org.jaudiotagger.audio.mp4.Chunk: int[] sampleDurs
com.tencent.mm.opensdk.constants.Build: int SUPPORTED_QRCODE_OPEN_PAY
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_GROUP_ID_REG
org.simpleframework.xml.core.ExtractorFactory: org.simpleframework.xml.core.Contact contact
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country OMAN
com.umeng.analytics.pro.u$a: com.umeng.analytics.pro.u a
org.simpleframework.xml.stream.CamelCaseBuilder$Attribute: org.simpleframework.xml.stream.CamelCaseBuilder this$0
com.umeng.analytics.pro.an: java.lang.String c
com.caij.puremusic.model.DriveFileParcelable: java.lang.String filePath
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$BreadthFirstEnumeration: org.jaudiotagger.utils.tree.DefaultMutableTreeNode this$0
com.umeng.analytics.pro.e$c$b: java.lang.String f
com.tencent.bugly.proguard.f: char[] b
com.umeng.analytics.pro.i: java.util.List l
org.jaudiotagger.utils.DirectByteBufferUtils$OpenJdkReleaseStrategy: java.lang.reflect.Method cleanerMethod
org.simpleframework.xml.core.ClassScanner: org.simpleframework.xml.core.Function resolve
com.caij.puremusic.drive.model.PlaylistResponse: com.caij.puremusic.drive.model.PlaylistResponse$Companion Companion
com.caij.puremusic.drive.model.PlexPlaylistsResponse: com.caij.puremusic.drive.model.PlaylistsMediaContainer MediaContainer
com.umeng.analytics.pro.bf: java.lang.Object a
com.umeng.commonsdk.statistics.idtracking.b: java.lang.String a
org.jaudiotagger.audio.asf.io.RandomAccessFileOutputStream: java.io.RandomAccessFile targetFile
com.umeng.commonsdk.statistics.UMErrorCode: int E_UM_BE_SAVE_FAILED
com.umeng.analytics.process.UMProcessDBHelper$a: java.lang.String d
org.jcodec.containers.mp4.boxes.SegmentIndexBox: long earliest_presentation_time
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country SURINAME
com.umeng.commonsdk.utils.c: java.lang.String a
org.jaudiotagger.audio.asf.data.StreamChunk: long typeSpecificDataSize
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey WORK_PART_LEVEL5_TYPE
com.umeng.analytics.pro.bh: java.lang.String a
com.umeng.commonsdk.stateless.d: java.lang.Object b
com.umeng.commonsdk.config.b$a: com.umeng.commonsdk.config.b a
com.caij.puremusic.network.model.LastFmTrack$Track$Artist: java.lang.String name
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier FECR
com.alipay.tscenter.biz.rpc.vkeydfp.request.DeviceDataReportRequest: java.util.Map dataMap
org.jcodec.containers.mp4.boxes.TrunBox: int SAMPLE_DURATION_AVAILABLE
org.jaudiotagger.audio.wav.WavFileReader$1: int[] $SwitchMap$org$jaudiotagger$audio$wav$WavOptions
com.alipay.android.phone.mrpc.core.t: boolean b
com.umeng.analytics.pro.am: java.lang.String as
com.caij.puremusic.service.PlaybackLocation: com.caij.puremusic.service.PlaybackLocation REMOTE
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICIP_ID
com.caij.puremusic.db.model.SongQueries$SongsByNameArtistQuery$execute$1: com.caij.puremusic.db.model.SongQueries$SongsByNameArtistQuery this$0
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey RATING
com.umeng.commonsdk.statistics.proto.Response$e: com.umeng.commonsdk.statistics.proto.Response$e[] g
com.caij.puremusic.db.model.PlaylistEntityQueries$PlaylistByNameQuery$execute$1: com.caij.puremusic.db.model.PlaylistEntityQueries$PlaylistByNameQuery this$0
org.jaudiotagger.audio.asf.data.GUID: org.jaudiotagger.audio.asf.data.GUID GUID_VIDEOSTREAM
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey TITLE_MOVEMENT
com.umeng.commonsdk.UMConfigure: int policyGrantInvokedFlag
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MOOD_ELECTRONIC
com.caij.puremusic.drive.model.Propstat: com.caij.puremusic.drive.model.Propstat$Companion Companion
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country KIRIBATI
com.caij.puremusic.drive.model.PlexAlbumsResponse$$serializer: com.caij.puremusic.drive.model.PlexAlbumsResponse$$serializer INSTANCE
com.caij.puremusic.drive.model.AlbumMetadata$$serializer: com.caij.puremusic.drive.model.AlbumMetadata$$serializer INSTANCE
com.umeng.analytics.pro.v: java.lang.Object e
com.tencent.bugly.proguard.aj: byte[] h
org.jaudiotagger.tag.asf.AsfTag: boolean copyFields
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_SELLER_LOGO
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey DAY
org.jaudiotagger.audio.asf.util.Utils: int MAXIMUM_STRING_LENGTH_ALLOWED
com.alipay.sdk.m.u.g: com.alipay.sdk.m.u.g l
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportByInterval: com.umeng.commonsdk.statistics.internal.StatTracer mTracer
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_WORK_PART_LEVEL6_TYPE
com.alipay.android.phone.mrpc.core.aa: boolean c
org.simpleframework.xml.core.ElementMapParameter: org.simpleframework.xml.core.Label label
org.jcodec.containers.mp4.boxes.SyncSamplesBox: java.lang.String STSS
org.jaudiotagger.tag.reference.MusicalKey: org.jaudiotagger.tag.reference.MusicalKey NOTE_B
org.jaudiotagger.tag.id3.framebody.AbstractID3v2FrameBody: java.lang.String TYPE_BODY
org.simpleframework.xml.core.ElementMapParameter: java.lang.Class type
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mOriginalDelegate
com.umeng.analytics.pro.e$d$a: java.lang.String l
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country BAHAMAS
com.caij.puremusic.drive.model.AlbumMetadata: java.lang.String parentTitle
com.caij.puremusic.drive.model.Auth2Token: com.caij.puremusic.drive.model.Auth2Token$Companion Companion
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: int FIELD_BITRATE_MAX_LENGTH
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey CHOIR
org.jaudiotagger.tag.images.StandardArtwork: int height
io.ktor.utils.io.core.internal.ChunkBuffer: java.lang.Object nextRef
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP3_PICTURE_TYPE_INVALID
com.tencent.mm.opensdk.constants.Build: int OPEN_BUSINESS_VIEW_SDK_INT
com.caij.puremusic.db.model.HistoryEntityQueries$updateHistorySong$1: long $id
org.simpleframework.xml.stream.InputElement: org.simpleframework.xml.stream.InputNode parent
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState TERMINATED
org.simpleframework.xml.core.StructureBuilder: org.simpleframework.xml.core.ExpressionBuilder builder
com.umeng.commonsdk.UMConfigure: boolean isFinish
com.caij.puremusic.model.Playlist: com.caij.puremusic.model.Playlist$Companion Companion
com.tencent.mm.opensdk.diffdev.a.b: java.lang.String a
com.caij.puremusic.drive.model.SubsonicAlbum: int playCount
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: java.util.Map CODE_TYPE_MAP
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey DISCTOTAL
org.jaudiotagger.tag.id3.ID3v24Frame: int FRAME_HEADER_SIZE
com.tencent.mm.opensdk.modelbiz.SubscribeMiniProgramMsg$Resp: java.lang.String TAG
org.jaudiotagger.audio.asf.data.GUID: int[] guidData
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey COMPOSER
org.jaudiotagger.tag.datatype.Lyrics3Line: java.util.LinkedList timeStamp
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country SEYCHELLES
com.tencent.mm.opensdk.modelbiz.SubscribeMessage$Req: int scene
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b t
com.umeng.analytics.process.a$a: java.lang.String a
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey YEAR
com.umeng.commonsdk.statistics.common.ReportPolicy$SmartPolicy: long ReportInterval
com.tencent.bugly.proguard.bb: java.lang.String i
org.simpleframework.xml.core.TextLabel: boolean data
com.tencent.bugly.proguard.at$3: boolean f
com.umeng.analytics.pro.ab: java.util.concurrent.CountDownLatch f
com.tencent.bugly.proguard.ay: com.tencent.bugly.proguard.ak d
org.jaudiotagger.audio.ogg.util.VorbisPacketType: int type
com.tencent.bugly.proguard.bo: java.lang.String d
com.caij.puremusic.drive.model.AlbumItem: java.util.List ArtistItems
com.tencent.bugly.crashreport.crash.CrashDetailBean: int V
com.tencent.bugly.proguard.bb: java.lang.String c
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String KEY_MIUI_VERSION_NAME
com.umeng.analytics.pro.aq: java.lang.String i
org.simpleframework.xml.core.ExtractorFactory$ElementMapExtractor: org.simpleframework.xml.ElementMapUnion union
com.tencent.mm.opensdk.modelbase.BaseResp$ErrCode: int ERR_UNSUPPORT
com.alipay.android.phone.mrpc.core.a.e: java.lang.Object d
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey COMPOSER_SORT
com.tencent.mm.opensdk.modelbiz.WXChannelBaseJumpInfo: int WORDING_LENGTH_LIMIT
com.tencent.mm.opensdk.constants.ConstantsAPI$AppSupportContentFlag: long MMAPP_SUPPORT_WEBPAGE
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MIXER
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey RATING
org.simpleframework.xml.core.Entry: java.lang.String key
com.umeng.commonsdk.utils.UMUtils: java.lang.String VALUE_ANALYTICS_VERSION
com.google.common.collect.Iterators$EmptyModifiableIterator: com.google.common.collect.Iterators$EmptyModifiableIterator[] $VALUES
com.umeng.commonsdk.statistics.common.ULog: int LEVEL_DEBUG
org.jaudiotagger.tag.id3.valuepair.TextEncoding: byte UTF_16
org.jaudiotagger.tag.lyrics3.Lyrics3v2Fields: java.lang.String FIELD_V2_INDICATIONS
org.simpleframework.xml.core.PathParser: java.lang.String location
com.umeng.commonsdk.utils.b: java.util.HashMap a
com.umeng.commonsdk.debug.UMLogCommon: java.lang.String SC_10028
com.umeng.analytics.pro.cb: byte n
com.tencent.mm.opensdk.modelmsg.WXDesignerSharedObject: int designerUIN
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey ALBUM_ARTISTS
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason INVALID_PAYLOD
com.tencent.mm.opensdk.modelmsg.WXMediaMessage: int MESSAGE_ACTION_LENGTH_LIMIT
com.alipay.apmobilesecuritysdk.a.a: int c
com.tencent.mm.opensdk.modelbiz.WXLaunchWxaRedirectingPage$Resp: java.lang.String invokeTicket
org.repackage.a.a.a.a.b: org.repackage.a.a.a.a.c a
org.jaudiotagger.tag.mp4.field.Mp4FieldType: org.jaudiotagger.tag.mp4.field.Mp4FieldType COVERART_BMP
org.simpleframework.xml.core.PathParser: org.simpleframework.xml.stream.Style style
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey[] $VALUES
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String AMAZON_ASIN
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_RELEASE_TRACKID
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey WORK_PART_LEVEL6
org.simpleframework.xml.stream.InputElement: org.simpleframework.xml.stream.NodeReader reader
com.caij.puremusic.model.AlbumWithCount: com.caij.puremusic.db.model.Album album
org.simpleframework.xml.core.SignatureBuilder: java.lang.reflect.Constructor factory
com.umeng.analytics.process.UMProcessDBDatasSender: com.umeng.analytics.pro.o$c mPolicySelector
com.tencent.mm.opensdk.modelbiz.WXNontaxPay$Resp: java.lang.String wxOrderId
org.jaudiotagger.audio.ogg.util.VorbisPacketType: org.jaudiotagger.audio.ogg.util.VorbisPacketType IDENTIFICATION_HEADER
com.tencent.mm.opensdk.modelmsg.WXFileObject: int CONTENT_LENGTH_LIMIT
com.tencent.mm.opensdk.modelbiz.WXChannelShareVideo$Resp: java.lang.String extMsg
org.jaudiotagger.audio.aiff.AiffAudioHeader$Endian: org.jaudiotagger.audio.aiff.AiffAudioHeader$Endian BIG_ENDIAN
com.umeng.commonsdk.statistics.proto.e: java.lang.String c
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_TYER
androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type UNKNOWN
com.umeng.commonsdk.statistics.proto.d: java.util.Map j
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey ENCODER
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_GROUP_ID_REG
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind MPEG4_AVC_SPS
com.umeng.commonsdk.service.UMGlobalContext$a: com.umeng.commonsdk.service.UMGlobalContext a
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED
com.caij.puremusic.drive.model.DropboxDriveItem$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_ALBUM_COUNTRY
com.tencent.mm.opensdk.modelbiz.WXChannelJumpUrlInfo: int LENGTH_LIMIT
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_OPEN_BUSINESS_WEBVIEW
com.alipay.sdk.app.PayTask: android.app.Activity a
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey ARRANGER_SORT
org.jcodec.containers.mp4.boxes.AudioSampleEntry: int kAudioFormatFlagIsFloat
com.alipay.tscenter.biz.rpc.vkeydfp.result.DeviceDataReportResult: java.lang.String bugTrackSwitch
com.caij.puremusic.fragments.AlbumCoverStyle: com.caij.puremusic.fragments.AlbumCoverStyle Full
com.umeng.commonsdk.statistics.common.ReportPolicy: int QUASI_REALTIME_POLICY
com.caij.puremusic.drive.model.Media: int duration
com.caij.puremusic.drive.model.ImageTags$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.jaudiotagger.audio.asf.AsfFileReader: boolean $assertionsDisabled
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: int number_
com.caij.puremusic.db.model.ServerAudioFormatQueries$insert$1: com.caij.puremusic.db.model.ServerAudioFormat $ServerAudioFormat
com.google.android.material.bottomsheet.BottomSheetBehavior: float HIDE_FRICTION
com.umeng.analytics.pro.e$d: java.lang.String a
com.google.android.material.bottomsheet.BottomSheetBehavior: int halfExpandedOffset
com.caij.puremusic.db.model.SongQueries$firstSongByAlbumId$1: com.caij.puremusic.db.model.SongQueries this$0
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICIAN
com.google.android.material.color.utilities.QuantizerWu$Direction: com.google.android.material.color.utilities.QuantizerWu$Direction RED
com.thegrizzlylabs.sardineandroid.model.Activelock: com.thegrizzlylabs.sardineandroid.model.Owner owner
com.alipay.tscenter.biz.rpc.vkeydfp.result.DeviceDataReportResult: java.lang.String token
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey PART_NUMBER
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey LYRICIST
org.jaudiotagger.audio.flac.FlacTagWriter$MetadataBlockInfo: java.util.List metadataBlockApplication
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey TIMBRE
com.thegrizzlylabs.sardineandroid.model.Principal: com.thegrizzlylabs.sardineandroid.model.Authenticated authenticated
androidx.fragment.app.Fragment$SavedState: android.os.Parcelable$Creator CREATOR
com.umeng.analytics.pro.g: android.database.sqlite.SQLiteDatabase c
com.umeng.commonsdk.framework.UMModuleRegister: int APPSTATUS_SWITCH_LOW
org.jaudiotagger.audio.wav.WavOptions: org.jaudiotagger.audio.wav.WavOptions READ_INFO_ONLY_AND_SYNC
com.caij.puremusic.db.model.SongEntityQueries$deleteSongFromPlaylist$1: long $playlistId
org.repackage.com.vivo.identifier.DataBaseOperation: android.content.Context l
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzq
org.jaudiotagger.audio.mp3.VbriFrame: int VBRI_OFFSET
com.umeng.analytics.pro.ac: java.lang.String b
com.umeng.commonsdk.internal.a: java.lang.String G
com.umeng.commonsdk.statistics.internal.PreferenceWrapper: java.lang.String DEFAULT_PREFERENCE
com.caij.puremusic.drive.model.ADriveItem$$serializer: com.caij.puremusic.drive.model.ADriveItem$$serializer INSTANCE
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey REMIXER
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier SDTP
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey PERFORMER_NAME_SORT
org.jaudiotagger.tag.id3.ID3v24Tag: java.lang.String TYPE_EXTENDED
com.tencent.mm.opensdk.modelbiz.WXChannelShareVideo$Req: int LENGTH_LIMIT
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey ORIGINAL_YEAR
com.umeng.analytics.process.c$a: android.database.sqlite.SQLiteDatabase c
org.simpleframework.xml.core.ClassSchema: org.simpleframework.xml.core.Label text
org.jaudiotagger.tag.mp4.Mp4FieldKey: java.lang.String issuer
nl.adaptivity.xmlutil.EventType: nl.adaptivity.xmlutil.EventType TEXT
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b u
com.umeng.analytics.b: org.json.JSONObject k
com.tencent.bugly.proguard.aa: java.lang.String ad
com.caij.puremusic.drive.model.Prop: java.lang.String getcontenttype
org.repackage.com.zui.opendeviceidlibrary.BuildConfig: boolean a
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_INVOICE_AUTH_INSERT
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_JUMP_TO_OFFLINE_PAY
org.jcodec.containers.mp4.boxes.ChannelBox: int channelLayout
org.jaudiotagger.tag.datatype.ID3v2LyricLine: java.lang.String text
com.umeng.commonsdk.statistics.common.DeviceTypeEnum: com.umeng.commonsdk.statistics.common.DeviceTypeEnum MAC
org.simpleframework.xml.stream.DocumentReader: org.simpleframework.xml.stream.NodeStack stack
org.jcodec.containers.mp4.boxes.MdtaBox: java.lang.String key
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType MOBILE_EMERGENCY
com.umeng.analytics.pro.o: boolean u
org.simpleframework.xml.core.MethodType: org.simpleframework.xml.core.MethodType IS
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow SUSPEND
com.caij.puremusic.drive.model.BaiduDriveItem: java.lang.String server_filename
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mParentFragment
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.lang.Long endLocationInFile
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey SUBTITLE
com.umeng.commonsdk.utils.c: java.lang.String b
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country BULGARIA
com.caij.puremusic.drive.model.JellyfinLoginResponse$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.umeng.analytics.filter.a: java.lang.Object b
io.ktor.util.date.Month: io.ktor.util.date.Month SEPTEMBER
org.simpleframework.xml.core.ElementMapUnionParameter: java.lang.Class type
com.thegrizzlylabs.sardineandroid.DavResource$DavProperties: com.thegrizzlylabs.sardineandroid.model.Supportedlock supportedLock
org.jaudiotagger.audio.mp4.Mp4AudioHeader: org.jcodec.containers.mp4.boxes.EsdsBox$Kind kind
org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId: org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId$CallBack f
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier UDTA
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy ALLOW
com.umeng.analytics.pro.aq: java.lang.String j
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey URL_DISCOGS_RELEASE_SITE
com.umeng.commonsdk.UMConfigure: java.lang.String WRAPER_TYPE_WEEX
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey LANGUAGE
okhttp3.TlsVersion: okhttp3.TlsVersion$Companion Companion
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: com.tencent.bugly.proguard.as m
org.jaudiotagger.tag.id3.ID3SyncSafeInteger: int MAX_SAFE_SIZE
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: int launchMode
org.jaudiotagger.audio.wav.WavSubFormat: java.util.Map lookup
com.umeng.analytics.pro.an: java.nio.ByteBuffer g
com.caij.puremusic.drive.model.PlayListItem: int ChildCount
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey ASIN
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status[] $VALUES
com.google.android.material.bottomsheet.BottomSheetBehavior: float halfExpandedRatio
com.tencent.bugly.proguard.bt: com.tencent.bugly.proguard.bs f
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason[] $VALUES
com.tencent.bugly.proguard.aa: long af
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String TITLE_MOVEMENT
com.caij.puremusic.drive.model.SubsonicSearchResponse$$serializer: com.caij.puremusic.drive.model.SubsonicSearchResponse$$serializer INSTANCE
com.caij.puremusic.db.model.HistoryEntityQueries$GetByIdQuery: long id
com.tencent.mm.opensdk.modelmsg.WXStateSceneDataObject: java.lang.String stateId
com.umeng.commonsdk.stateless.b: int a
org.jaudiotagger.audio.asf.data.AudioStreamChunk: java.lang.String[][] CODEC_DESCRIPTIONS
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies: com.google.common.util.concurrent.CycleDetectingLockFactory$Policies THROW
com.caij.vip.SeeApiResponse: java.lang.Object data
com.umeng.analytics.pro.am: java.lang.String bl
com.umeng.commonsdk.config.d$c: com.umeng.commonsdk.config.d$c p
com.tencent.mm.opensdk.channel.MMessageActV2: java.lang.String TAG
org.jaudiotagger.tag.id3.ID3v24Frame: int groupIdentifier
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey COMPOSER
com.umeng.analytics.pro.bo: byte h
com.tencent.mm.opensdk.modelmsg.WXMiniProgramObject: int MINIPROGRAM_TYPE_TEST
com.umeng.commonsdk.statistics.idtracking.a: int a
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country NIGERIA
com.umeng.analytics.pro.bk: com.umeng.analytics.pro.bi a
com.umeng.analytics.pro.an: com.umeng.analytics.pro.bp o
com.caij.puremusic.db.model.HistoryEntityQueries$GetByIdQuery$execute$1: com.caij.puremusic.db.model.HistoryEntityQueries$GetByIdQuery this$0
com.tencent.mm.opensdk.modelbiz.WXChannelOpenLive$Req: java.lang.String feedID
org.jcodec.containers.mp4.boxes.ReverseDnsBox$RdnsMeanBox: java.lang.String FOURCC
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey CUSTOM4
org.simpleframework.xml.strategy.ObjectValue: java.lang.Class type
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MOOD_ELECTRONIC
org.jaudiotagger.tag.mp4.field.Mp4FieldType: org.jaudiotagger.tag.mp4.field.Mp4FieldType XML
com.google.android.material.bottomsheet.BottomSheetBehavior$1: com.google.android.material.bottomsheet.BottomSheetBehavior this$0
com.thegrizzlylabs.sardineandroid.model.Activelock: com.thegrizzlylabs.sardineandroid.model.Locktoken locktoken
com.thegrizzlylabs.sardineandroid.model.Grant: java.util.List content
org.simpleframework.xml.stream.InputAttribute: java.lang.String value
com.caij.puremusic.drive.model.User$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey ACOUSTID_FINGERPRINT
com.umeng.commonsdk.statistics.common.DataHelper: long ENVELOPE_LENGTH_MAX
com.caij.puremusic.db.model.SongQueries$GetAlbumSongCountQuery: long albumId
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MUSICBRAINZ_WORK
com.umeng.analytics.pro.u: long m
com.caij.puremusic.drive.model.AlbumItem: java.lang.String ServerId
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier TFHD
org.jaudiotagger.tag.id3.ID3v24Frame$StatusFlags: java.lang.String TYPE_TAGALTERPRESERVATION
org.koin.core.logger.Level: org.koin.core.logger.Level[] $VALUES
io.ktor.utils.io.ByteBufferChannel: long totalBytesRead
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype HSDPA
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat DST_ATOP
org.simpleframework.xml.core.TemplateLabel: org.simpleframework.xml.core.KeyBuilder builder
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey ARTISTS_SORT
com.caij.puremusic.drive.model.AlbumItem: java.util.List ParentBackdropImageTags
org.simpleframework.xml.strategy.ArrayValue: int size
com.tencent.mm.opensdk.modelpay.PayReq: java.lang.String timeStamp
org.jaudiotagger.tag.mp4.field.Mp4TagRawBinaryField: byte[] dataBytes
com.alipay.android.phone.mrpc.core.k$a: int c
org.jaudiotagger.audio.asf.data.GUID: org.jaudiotagger.audio.asf.data.GUID[] KNOWN_GUIDS
com.tencent.bugly.proguard.aj: boolean s
com.caij.puremusic.drive.model.OneDriveFileResponse: java.util.List value
com.google.android.gms.internal.play_billing.zzfm: int zzd
io.ktor.util.date.WeekDay: io.ktor.util.date.WeekDay TUESDAY
org.jaudiotagger.tag.reference.Tagger: org.jaudiotagger.tag.reference.Tagger WINAMP
org.simpleframework.xml.core.TextListLabel: org.simpleframework.xml.core.Label label
com.umeng.commonsdk.utils.d: java.lang.String w
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzS
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP3_FRAME_IS_UNSYNCHRONISED
com.umeng.analytics.pro.d: java.lang.String ap
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: java.lang.String mimeType
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey URL_LYRICS_SITE
com.umeng.commonsdk.framework.a: java.lang.Object n
com.umeng.analytics.pro.bz: java.lang.String a
com.caij.puremusic.db.model.ServerArtistCoverQueries$clear$1: com.caij.puremusic.db.model.ServerArtistCoverQueries$clear$1 INSTANCE
org.simpleframework.xml.strategy.WriteGraph: java.lang.String refer
org.simpleframework.xml.stream.Builder: org.simpleframework.xml.util.Cache attributes
com.umeng.commonsdk.statistics.common.ReportPolicy: int REALTIME
org.jcodec.containers.mp4.boxes.Header: java.lang.String fourcc
org.jaudiotagger.audio.wav.WavChunkType: org.jaudiotagger.audio.wav.WavChunkType CORRUPT_ID3_LATE
com.caij.puremusic.drive.model.ADriveItem: java.lang.String parent_file_id
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MUSICBRAINZ_WORK_PART_LEVEL4_ID
com.caij.puremusic.drive.model.SongItem: boolean IsFolder
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MIXER
com.umeng.commonsdk.internal.a: int g
org.simpleframework.xml.core.ModelMap: org.simpleframework.xml.core.Detail detail
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script INSCRIPTIONAL_PARTHIAN
org.jaudiotagger.tag.id3.ID3v24Frame$StatusFlags: int MASK_READ_ONLY
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey PERFORMER_NAME
com.google.android.gms.internal.play_billing.zza: com.google.android.gms.internal.play_billing.zza zzk
com.umeng.commonsdk.debug.UMLogCommon: java.lang.String SC_10010
com.tencent.bugly.proguard.bo: java.lang.String g
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$getById$2: com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$getById$2 INSTANCE
com.alipay.apmobilesecuritysdk.face.APSecuritySdk$TokenResult: java.lang.String clientKey
org.jaudiotagger.FileConstants: int BIT7
com.umeng.analytics.pro.ad: int c
org.repackage.a.a.a.a.a: boolean b
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding DEFAULT
org.simpleframework.xml.core.Qualifier: org.simpleframework.xml.core.NamespaceDecorator decorator
com.caij.puremusic.drive.model.DriveFile: long sourceId
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState PARKING
com.umeng.commonsdk.BuildConfig: int VERSION_CODE
com.umeng.commonsdk.statistics.UMErrorCode: int E_UM_BE_DEFLATE_FAILED
com.tencent.mm.opensdk.constants.ConstantsAPI$AppSupportContentFlag: long MMAPP_SUPPORT_PPT
com.caij.puremusic.drive.model.PlexPlaylistsResponse$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country TURKEY
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgram$Req: java.lang.String TAG
androidx.fragment.app.DialogFragment: boolean mShownByMe
org.jaudiotagger.tag.asf.AsfTagCoverField: java.util.logging.Logger LOGGER
com.caij.puremusic.model.UpdateInfo: java.lang.String name
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier MFHD
com.caij.puremusic.drive.model.PlaylistResponse$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10$1: java.util.concurrent.CountDownLatch val$countDownWait
com.caij.puremusic.drive.model.PlayLists$$serializer: com.caij.puremusic.drive.model.PlayLists$$serializer INSTANCE
org.jaudiotagger.audio.SupportedFileFormat: org.jaudiotagger.audio.SupportedFileFormat FLAC
com.tencent.bugly.proguard.d: java.util.HashMap g
com.umeng.analytics.pro.ai$a: boolean a
com.umeng.analytics.pro.ai$a: java.util.concurrent.LinkedBlockingQueue b
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey CUSTOM4
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey LYRICS
org.jaudiotagger.audio.aiff.chunk.AiffChunkType: org.jaudiotagger.audio.aiff.chunk.AiffChunkType SOUND
org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile: org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile T_F
com.thegrizzlylabs.sardineandroid.model.Deny: java.util.List content
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script KAYAH_LI
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_DISC_ID
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier MDRI
com.tencent.mm.opensdk.diffdev.a.d: com.tencent.mm.opensdk.diffdev.a.d g
com.google.android.gms.internal.play_billing.zza: com.google.android.gms.internal.play_billing.zza[] zzq
com.alipay.sdk.app.EnvUtils$EnvEnum: com.alipay.sdk.app.EnvUtils$EnvEnum[] $VALUES
com.umeng.commonsdk.utils.d: java.lang.String Q
org.jaudiotagger.tag.id3.valuepair.StandardIPLSKey: org.jaudiotagger.tag.id3.valuepair.StandardIPLSKey ARRANGER
org.jcodec.containers.mp4.boxes.MetaValue: int locale
com.tencent.mm.opensdk.modelmsg.WXMusicObject: java.lang.String TAG
org.simpleframework.xml.core.SetPart: java.lang.reflect.Method method
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey ORIGINAL_YEAR
com.tencent.mm.opensdk.modelbiz.ChooseCardFromWXCardPackage$Req: java.lang.String signType
org.simpleframework.xml.core.StructureBuilder: org.simpleframework.xml.core.LabelMap elements
org.simpleframework.xml.convert.RegistryStrategy: org.simpleframework.xml.strategy.Strategy strategy
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType ANDROID_FIREBASE
com.umeng.common.a: java.lang.String d
org.jcodec.containers.mp4.boxes.MP4ABox: int val
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country RUSSIAN_FEDERATION
org.jaudiotagger.audio.mp3.MP3AudioHeader: java.text.SimpleDateFormat timeInFormat
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode STREAM_CLOSED
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_RADIO_OWNER
com.tencent.mm.opensdk.modelbiz.WXChannelOpenEvent$Resp: java.lang.String extMsg
com.umeng.analytics.pro.au: int a
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] $VALUES
com.thegrizzlylabs.sardineandroid.model.Response: java.lang.String href
org.jaudiotagger.tag.id3.ID3v23Frame: int FRAME_SIZE_SIZE
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey URL_OFFICIAL_RELEASE_SITE
com.caij.puremusic.drive.model.SongItem: java.lang.String Type
com.umeng.commonsdk.vchannel.a: java.lang.String i
com.google.android.gms.internal.play_billing.zzew: com.google.android.gms.internal.play_billing.zzew zzj
com.alipay.android.phone.mrpc.core.z: com.alipay.android.phone.mrpc.core.x e
com.alipay.sdk.m.u.g: com.alipay.sdk.m.u.g o
org.jaudiotagger.audio.ogg.util.OggPageHeader: int checksum
com.google.android.material.bottomsheet.BottomSheetBehavior: int peekHeightGestureInsetBuffer
com.caij.puremusic.network.model.LastFmAlbum$Album: java.lang.String listeners
org.jaudiotagger.audio.ogg.util.OggPageHeader$HeaderTypeFlag: org.jaudiotagger.audio.ogg.util.OggPageHeader$HeaderTypeFlag FRESH_PACKET
org.jaudiotagger.tag.reference.PictureTypes: org.jaudiotagger.tag.reference.PictureTypes pictureTypes
org.jaudiotagger.audio.asf.data.MetadataDescriptor: int TYPE_BINARY
org.jaudiotagger.audio.generic.AudioFileWriter: java.lang.String TEMP_FILENAME_SUFFIX
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey TIMBRE
com.caij.puremusic.db.model.ServerSongCoverQueries$deleteSongBySource$2: com.caij.puremusic.db.model.ServerSongCoverQueries$deleteSongBySource$2 INSTANCE
com.caij.puremusic.model.UpdateInfo: int versionCode
com.caij.vip.AppGood: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_ENCODEDBY
org.simpleframework.xml.stream.Indenter: int count
org.jaudiotagger.tag.datatype.AbstractValuePair: java.lang.String value
kotlinx.serialization.json.internal.WriteMode: kotlinx.serialization.json.internal.WriteMode MAP
org.jaudiotagger.audio.iff.Chunk: java.nio.ByteBuffer chunkData
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies: com.google.common.util.concurrent.CycleDetectingLockFactory$Policies WARN
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script KATAKANA
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MOOD_HAPPY
org.jaudiotagger.tag.id3.ID3v11Tag: int FIELD_TRACK_INDICATOR_POS
org.jaudiotagger.tag.mp4.field.Mp4FieldType: org.jaudiotagger.tag.mp4.field.Mp4FieldType RIAAPA
org.jaudiotagger.tag.id3.AbstractID3v2Tag: int FIELD_TAG_FLAG_POS
com.umeng.analytics.pro.an: com.umeng.analytics.pro.bp w
com.alipay.android.phone.mrpc.core.j: com.alipay.android.phone.mrpc.core.g g
com.google.android.gms.internal.play_billing.zzcj: com.google.android.gms.internal.play_billing.zzcj zzi
com.tencent.mm.opensdk.modelbiz.WXPayInsurance$Resp: java.lang.String wxOrderId
org.simpleframework.xml.convert.RegistryBinder: org.simpleframework.xml.util.Cache cache
com.umeng.analytics.process.UMProcessDBHelper$InsertEventCallback: com.umeng.analytics.process.UMProcessDBHelper a
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MUSICBRAINZ_RELEASEARTISTID
org.jcodec.containers.mp4.boxes.AliasBox: int UNIXAbsolutePath
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage GENERAL_WRITE_FAILED_TO_DELETE_ORIGINAL_FILE
com.tencent.mm.opensdk.modelmsg.WXWeWorkObject: java.lang.String extInfo
org.jaudiotagger.audio.wav.WavCleaner: java.lang.String loggingName
org.repackage.com.miui.deviceid.IdentifierManager: java.lang.String a
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier STSC
org.jcodec.containers.mp4.boxes.MdtaBox: java.lang.String FOURCC
com.tencent.mm.opensdk.openapi.WXApiImplComm: java.lang.String WX_APP_SIGNATURE
com.caij.puremusic.db.model.SongQueries$SongsByNameArtistQuery: java.lang.String value_
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_ARTISTID
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey ALBUM_ARTISTS_SORT
com.umeng.analytics.pro.d: java.lang.String aA
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: java.util.logging.Logger logger
androidx.fragment.app.Fragment: boolean mDeferStart
nl.adaptivity.xmlutil.core.XmlVersion: nl.adaptivity.xmlutil.core.XmlVersion[] $VALUES
org.jaudiotagger.utils.FileTypeUtil: java.lang.Integer[] mp3v2Sig
com.umeng.commonsdk.config.d$d: com.umeng.commonsdk.config.d$d j
com.caij.puremusic.db.model.FolderQueries$selectById$2: com.caij.puremusic.db.model.FolderQueries$selectById$2 INSTANCE
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: java.lang.Object b
com.caij.puremusic.db.model.Album$Adapter: app.cash.sqldelight.ColumnAdapter yearAdapter
com.umeng.commonsdk.debug.UMLogCommon: java.lang.String SC_10013
com.umeng.analytics.pro.am: java.lang.String aP
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey ENSEMBLE
org.jcodec.containers.mp4.boxes.MetaBox: java.lang.String FOURCC
org.jaudiotagger.tag.images.AndroidImageHandler: org.jaudiotagger.tag.images.AndroidImageHandler instance
com.tencent.bugly.crashreport.crash.CrashDetailBean: long r
org.simpleframework.xml.stream.OutputDocument: java.lang.String comment
com.umeng.commonsdk.statistics.noise.ABTest: boolean isInTest
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzg
io.ktor.utils.io.internal.CancellableReusableContinuation: java.lang.Object jobCancellationHandler
com.umeng.analytics.pro.y: java.lang.String e
com.umeng.commonsdk.statistics.idtracking.e: com.umeng.commonsdk.statistics.idtracking.e$a i
org.simpleframework.xml.core.TreeModel: org.simpleframework.xml.core.LabelMap attributes
com.tencent.mm.opensdk.constants.Build: int SUPPORTED_CHANNEL_OPEN_PROFILE
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat PLUS
com.caij.puremusic.fragments.NowPlayingScreen: com.caij.puremusic.fragments.NowPlayingScreen Circle
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$Req: int WXSceneFavorite
com.caij.puremusic.network.model.LastFmArtist$Artist: com.caij.puremusic.network.model.LastFmArtist$Artist$Bio bio
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_REVERB_LEFT
com.caij.puremusic.drive.model.AlbumArtist: com.caij.puremusic.drive.model.AlbumArtist$Companion Companion
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MOOD_AGGRESSIVE
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String TAGS
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_IPLS
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey PERFORMER
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier SDHD
com.umeng.analytics.pro.o$a: int o
com.google.android.material.bottomsheet.BottomSheetDialog$EdgeToEdgeCallback: java.lang.Boolean lightBottomSheet
com.caij.puremusic.drive.model.Media: int audioChannels
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP4_UNABLE_TO_FIND_NEXT_ATOM_BECAUSE_LENGTH_IS_INVALID
org.simpleframework.xml.core.ElementListLabel: boolean inline
com.caij.puremusic.db.model.SearchAlbumResultQueries$insert$2: com.caij.puremusic.db.model.SearchAlbumResultQueries$insert$2 INSTANCE
com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport$Result: java.util.List resources
com.tencent.bugly.crashreport.biz.UserInfoBean: long i
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int MASK_MP3_ID
com.tencent.mm.opensdk.constants.Build: int CHOOSE_INVOICE_TILE_SUPPORT_SDK_INT
io.github.aakira.napier.LogLevel: io.github.aakira.napier.LogLevel INFO
com.tencent.mm.opensdk.constants.Build: int SUPPORTED_CHANNEL_START_LIVE
com.umeng.commonsdk.internal.utils.b: int a
org.repackage.com.vivo.identifier.IdentifierIdClient: java.lang.String y
org.simpleframework.xml.core.ExpressionBuilder: org.simpleframework.xml.stream.Format format
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_LYRICIST
org.jaudiotagger.audio.wav.WavSaveOrder: org.jaudiotagger.audio.wav.WavSaveOrder INFO_THEN_ID3
com.alipay.android.phone.mrpc.core.k: java.util.regex.Pattern b
com.umeng.commonsdk.config.d$c: com.umeng.commonsdk.config.d$c c
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country ALBANIA
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_IMAGE
org.simpleframework.xml.stream.Formatter: char[] CLOSE
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier BPCC
com.google.android.exoplayer2.metadata.mp4.MdtaMetadataEntry: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.logging.XMLTagDisplayFormatter: java.lang.StringBuffer sb
org.jaudiotagger.tag.id3.ID3v22PreferredFrameOrderComparator: org.jaudiotagger.tag.id3.ID3v22PreferredFrameOrderComparator comparator
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_RELATIVE_VOLUME_ADJUSTMENT
com.caij.puremusic.db.model.SongQueries$songsByIds$2: com.caij.puremusic.db.model.SongQueries$songsByIds$2 INSTANCE
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey ORIGINAL_LYRICIST
com.tencent.mm.opensdk.modelmsg.WXVideoFileObject: java.lang.String shareTicket
com.umeng.analytics.pro.u: java.lang.String h
com.google.android.gms.internal.play_billing.zzew: com.google.android.gms.internal.play_billing.zzew zzh
androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType CENTER
com.umeng.commonsdk.statistics.proto.e: byte l
org.jaudiotagger.audio.mp3.MPEGFrameHeader: java.util.Map samplingV2Map
org.simpleframework.xml.core.MethodScanner: org.simpleframework.xml.core.Detail detail
org.jcodec.containers.mp4.boxes.LoadSettingsBox: int defaultHints
com.tencent.bugly.proguard.as: com.tencent.bugly.proguard.w d
com.tencent.mm.opensdk.modelmsg.WXVideoObject: java.lang.String videoUrl
org.jaudiotagger.audio.ogg.util.OggPageHeader: byte pageSegments
com.umeng.analytics.pro.d: java.lang.String ax
com.google.common.collect.AbstractIterator$State: com.google.common.collect.AbstractIterator$State DONE
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_WORK_PART_LEVEL6
com.umeng.analytics.pro.d: java.lang.String af
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MUSICBRAINZ_WORK
com.caij.puremusic.drive.model.OneDriveItem$$serializer: com.caij.puremusic.drive.model.OneDriveItem$$serializer INSTANCE
com.tencent.mm.opensdk.modelbiz.WXNontaxPay$Req: java.lang.String TAG
com.alipay.android.phone.mrpc.core.HttpException: int NETWORK_DNS_ERROR
androidx.constraintlayout.motion.widget.MotionLayout$TransitionState: androidx.constraintlayout.motion.widget.MotionLayout$TransitionState[] $VALUES
com.umeng.commonsdk.statistics.proto.e: java.lang.String a
com.umeng.commonsdk.statistics.proto.e$e: java.lang.String f
com.tencent.mm.opensdk.constants.Build: int LAUNCH_MINIPROGRAM_WITH_TOKEN_SUPPORTED_SDK_INT
com.caij.puremusic.db.model.SongQueries$SongsByNameAlbumQuery$execute$1: com.caij.puremusic.db.model.SongQueries$SongsByNameAlbumQuery this$0
org.jcodec.containers.mp4.boxes.ClearApertureBox: float width
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$Req: java.lang.String userOpenId
org.jaudiotagger.tag.datatype.ID3v2LyricLine: long timeStamp
com.umeng.commonsdk.statistics.proto.Gender: com.umeng.commonsdk.statistics.proto.Gender[] $VALUES
com.caij.puremusic.model.Data: java.lang.String link
com.caij.puremusic.drive.model.MediaInfoWrapper: java.util.List artists
org.jaudiotagger.tag.reference.Languages: java.lang.String MEDIA_MONKEY_ID
org.jcodec.containers.mp4.boxes.AudioSampleEntry: int kAudioFormatFlagIsNonMixable
org.jaudiotagger.audio.asf.io.ChunkContainerReader: int READ_LIMIT
com.umeng.analytics.pro.am: java.lang.String bp
com.tencent.bugly.proguard.bo: java.lang.String a
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MIXER
org.simpleframework.xml.transform.RegistryMatcher: org.simpleframework.xml.util.Cache transforms
com.caij.vip.AppGood: float price
com.umeng.analytics.pro.bo: byte[] b
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey BANNER_IMAGE_URL
com.tencent.mm.opensdk.modelbiz.WXChannelStartLive$Req: java.lang.String TAG
org.simpleframework.xml.core.CacheLabel: boolean union
com.tencent.bugly.proguard.bl: java.lang.String a
com.caij.vip.GoodOrder: int payType
com.umeng.analytics.pro.be: com.umeng.analytics.pro.cg b
org.jcodec.containers.mp4.boxes.AliasBox$ExtraField: short type
com.umeng.commonsdk.stateless.UMSLEnvelopeBuild: android.content.Context mContext
org.jaudiotagger.utils.tree.DefaultTreeModel: boolean asksAllowsChildren
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage GENERAL_UNIDENITIFED_IMAGE_FORMAT
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status PENDING
nl.adaptivity.xmlutil.core.KtXmlWriter$WriteState: nl.adaptivity.xmlutil.core.KtXmlWriter$WriteState BeforeDocument
com.tencent.mm.opensdk.modelbiz.WXOpenCustomerServiceChat$Req: java.lang.String corpId
org.jcodec.containers.mp4.boxes.TimecodeSampleEntry: int FLAG_DROPFRAME
org.jaudiotagger.tag.id3.AbstractID3v2Tag$1: java.util.Iterator fieldsIt
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_INTERPOLATION_METHOD
com.umeng.commonsdk.statistics.c: int b
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: int preferredWriteOrder
com.tencent.bugly.BuglyStrategy: java.lang.String i
org.simpleframework.xml.core.Composite: org.simpleframework.xml.core.Criteria criteria
com.google.android.gms.internal.play_billing.zzfm: com.google.android.gms.internal.play_billing.zzfm zzb
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey ITUNES_GROUPING
com.tencent.bugly.proguard.aa: java.util.Map as
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_URL_COMMERCIAL
com.umeng.analytics.pro.o: org.json.JSONArray g
com.umeng.analytics.pro.aq: java.lang.String m
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
com.caij.puremusic.db.model.SongEntityQueries$GetSongEntityQuery$execute$1: com.caij.puremusic.db.model.SongEntityQueries$GetSongEntityQuery this$0
com.umeng.analytics.pro.an: int z
com.umeng.analytics.pro.al: boolean b
com.tencent.mm.opensdk.modelbiz.CreateChatroom$Req: java.lang.String groupId
org.simpleframework.xml.core.FieldScanner$FieldKey: java.lang.String name
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode FRAME_SIZE_ERROR
org.jaudiotagger.tag.id3.valuepair.EventTimingTimestampTypes: org.jaudiotagger.tag.id3.valuepair.EventTimingTimestampTypes eventTimingTimestampTypes
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey COPYRIGHT_URL
com.caij.puremusic.db.model.PlaylistEntityQueries$renamePlaylist$2: com.caij.puremusic.db.model.PlaylistEntityQueries$renamePlaylist$2 INSTANCE
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script OLD_ITALIC
org.simpleframework.xml.core.TextLabel: org.simpleframework.xml.core.Expression path
org.jaudiotagger.tag.mp4.Mp4ContentTypeValue: org.jaudiotagger.tag.mp4.Mp4ContentTypeValue[] $VALUES
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_PLAYLIST_DELAY
com.alipay.android.phone.mrpc.core.o: java.lang.String b
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MUSICBRAINZ_WORK_COMPOSITION
org.jaudiotagger.audio.mp3.MP3AudioHeader: int CONVERT_TO_KILOBITS
androidx.fragment.app.BackStackRecordState: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: java.util.Vector children
com.umeng.analytics.pro.i$b: com.umeng.analytics.pro.i a
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_ACCOMPANIMENT
org.simpleframework.xml.stream.NodeReader: java.lang.StringBuilder text
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int MASK_MP3_LAYER
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$BreadthFirstEnumeration$Queue$QNode: java.lang.Object object
org.jaudiotagger.audio.mp3.MP3AudioHeader: long numberOfFramesEstimate
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: java.util.EnumSet taggers
org.simpleframework.xml.core.SessionManager: java.lang.ThreadLocal local
com.caij.puremusic.db.model.SongQueries$song$2: com.caij.puremusic.db.model.SongQueries$song$2 INSTANCE
com.tencent.mm.opensdk.modelmsg.WXWeWorkObject: int SUB_TYPE_MSG_RECORD
org.simpleframework.xml.core.KeyBuilder$KeyType: org.simpleframework.xml.core.KeyBuilder$KeyType TEXT
org.jaudiotagger.tag.vorbiscomment.VorbisCommentReader: java.util.logging.Logger logger
com.caij.puremusic.db.model.SongEntityQueries$insert$2: com.caij.puremusic.db.model.SongEntityQueries$insert$2 INSTANCE
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind MULAW_AUDIO
com.caij.puremusic.fragments.NowPlayingScreen: com.caij.puremusic.fragments.NowPlayingScreen Blur
com.thegrizzlylabs.sardineandroid.model.Propfind: com.thegrizzlylabs.sardineandroid.model.Propname propname
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzV
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MUSICBRAINZ_DISC_ID
org.jaudiotagger.tag.mp4.Mp4TagFieldSubType: org.jaudiotagger.tag.mp4.Mp4TagFieldSubType TRACK_NO
com.tencent.mm.opensdk.constants.Build: int SUPPORTED_SEND_WEB_PAGE_SECRET_MESSAGE
com.caij.vip.SeeApiResponse: java.lang.String errorMsg
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zza
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage NO_WRITER_FOR_THIS_FORMAT
com.umeng.analytics.pro.d: java.lang.String F
com.tencent.bugly.crashreport.crash.h5.H5JavaScriptInterface: java.lang.String d
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: android.util.SparseArray valueMap
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier LRCU
com.caij.puremusic.drive.model.DavResource: long DEFAULT_CONTENT_LENGTH
org.jaudiotagger.logging.FileSystemMessage: java.lang.String msg
com.umeng.commonsdk.utils.d: java.lang.String B
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact REMOVING
com.caij.puremusic.db.model.PlayCountEntityQueries$checkSongExistInPlayCount$2: com.caij.puremusic.db.model.PlayCountEntityQueries$checkSongExistInPlayCount$2 INSTANCE
org.simpleframework.xml.core.AttributeParameter: java.lang.String name
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey WORK_PART_LEVEL5
org.jcodec.containers.mp4.boxes.ReverseDnsBox: org.jcodec.containers.mp4.IBoxFactory factory
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script JAVANESE
com.tencent.bugly.proguard.aa: java.lang.String j
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_TEXT
com.google.android.gms.internal.play_billing.zzex: com.google.android.gms.internal.play_billing.zzex zzc
com.umeng.commonsdk.debug.UMLog: java.lang.String DOUBLE_DIVIDER
com.umeng.commonsdk.statistics.SdkVersion: java.lang.String PROTOCOL_VERSION
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: boolean h
com.alipay.sdk.app.EnvUtils$EnvEnum: com.alipay.sdk.app.EnvUtils$EnvEnum ONLINE
com.umeng.analytics.pro.d: java.lang.String C
com.caij.puremusic.db.model.Album: int sourceType
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey COVER_ART
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey AT_ID
org.jaudiotagger.audio.asf.data.MetadataDescriptor: int descriptorType
com.umeng.vt.diff.V: java.lang.String VISUAL_TRACK_UAPP_PG
com.tencent.bugly.BuglyStrategy: boolean t
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType COLOR_TYPE
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_EMOTICON_SHARED
com.umeng.commonsdk.stateless.b: int h
com.tencent.mm.opensdk.modelmsg.WXGameLiveObject: java.lang.String TAG
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey ORIGINAL_ARTIST
org.jaudiotagger.audio.ogg.OggVorbisTagReader: org.jaudiotagger.tag.vorbiscomment.VorbisCommentReader vorbisCommentReader
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_UNIQUE_FILE_ID
com.umeng.analytics.pro.e: java.lang.String d
org.jcodec.containers.mp4.boxes.AliasBox: java.util.List extra
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_2
com.caij.puremusic.model.CategoryInfo$Category: com.caij.puremusic.model.CategoryInfo$Category Songs
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey ISRC
com.umeng.analytics.pro.bn: byte[] p
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey ALBUM_ARTISTS_SORT
com.caij.puremusic.drive.model.ADriveItem: java.lang.String file_id
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: java.lang.String TYPE_ENCRYPTION
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage ID3_TAG_UNSYNCHRONIZED
org.jaudiotagger.audio.asf.data.Chunk: java.math.BigInteger chunkLength
com.thegrizzlylabs.sardineandroid.model.Lockinfo: com.thegrizzlylabs.sardineandroid.model.Locktype locktype
com.umeng.commonsdk.internal.a: int c
com.umeng.analytics.pro.m: com.umeng.analytics.pro.m a
org.simpleframework.xml.core.ElementListUnionParameter: java.lang.Object key
okhttp3.Protocol: okhttp3.Protocol HTTP_1_1
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat DST
org.simpleframework.xml.core.ElementArrayLabel: java.lang.String name
com.alipay.android.phone.mrpc.core.aa: java.util.List b
com.umeng.analytics.pro.j: java.lang.String T
com.tencent.bugly.proguard.k: java.nio.ByteBuffer b
com.umeng.analytics.pro.am: java.lang.String aM
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_WORK_PART_LEVEL4_ID
org.simpleframework.xml.core.InstantiatorBuilder: org.simpleframework.xml.core.Scanner scanner
com.umeng.analytics.pro.a$a$a: android.os.IBinder a
org.jaudiotagger.audio.AudioFile: org.jaudiotagger.audio.AudioHeader audioHeader
com.umeng.commonsdk.statistics.noise.Defcon: int mLevel
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType PNG
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey ACOUSTID_FINGERPRINT
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_SENDMESSAGE_TO_WX
com.alipay.android.phone.mrpc.core.a: java.lang.String c
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey DISC_SUBTITLE
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b y
org.jaudiotagger.tag.id3.valuepair.ImageFormats: java.lang.String MIME_TYPE_BMP
androidx.constraintlayout.core.widgets.ConstraintAnchor$Type: androidx.constraintlayout.core.widgets.ConstraintAnchor$Type TOP
org.jaudiotagger.tag.id3.ID3v24Tag: byte REVISION
com.tencent.bugly.proguard.aa: java.util.Map ak
org.jaudiotagger.tag.id3.ID3Frames: java.util.TreeSet commonFrames
com.google.android.material.bottomsheet.BottomSheetDialog: boolean dismissWithAnimation
com.tencent.bugly.proguard.bp: java.util.ArrayList a
org.simpleframework.xml.strategy.Contract: java.lang.String refer
org.jcodec.containers.mp4.boxes.EsdsBox$Descriptor: int _tag
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey LYRICIST
nl.adaptivity.xmlutil.core.KtXmlWriter$EscapeMode: nl.adaptivity.xmlutil.core.KtXmlWriter$EscapeMode DTD
com.caij.puremusic.db.model.SongQueries$GetSongCountBySourceIdQuery: long sourceId
com.caij.puremusic.db.model.ServerAudioFormat: java.lang.String bitRate
com.google.android.gms.auth.api.signin.GoogleSignInOptions: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_WORK_PART_LEVEL2_TYPE
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdTypeCountQuery: int sourceType
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country KOREA_NORTH
com.r0adkll.slidr.model.SlidrPosition: com.r0adkll.slidr.model.SlidrPosition RIGHT
com.tencent.mm.opensdk.modelmsg.WXMusicVideoObject: java.lang.String albumName
com.caij.puremusic.db.model.SongQueries$SongQuery: com.caij.puremusic.db.model.SongQueries this$0
com.caij.puremusic.drive.model.DavResource: com.caij.puremusic.drive.model.Response davResponse
com.caij.puremusic.network.model.LastFmTrack$Track$Album: java.lang.String title
com.tencent.bugly.proguard.d: java.util.HashMap e
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country KUWAIT
com.caij.puremusic.drive.model.MediaInfoWrapper: java.util.ArrayList serverSongCovers
org.simpleframework.xml.core.AnnotationFactory: boolean required
com.alipay.sdk.m.r.a: com.alipay.sdk.m.r.a b
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country HEARD_ISLAND_AND_MCDONALD_ISLANDS
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script HIRAGANA
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
io.ktor.utils.io.ByteChannelSequentialBase: int _availableForRead
com.google.android.gms.internal.play_billing.zzex: com.google.android.gms.internal.play_billing.zzex[] zzj
com.umeng.common.a: com.umeng.common.a h
com.tencent.bugly.proguard.aa: long z
com.tencent.bugly.proguard.bq: java.lang.String o
org.jaudiotagger.tag.lyrics3.Lyrics3v2Fields: java.lang.String FIELD_V2_AUTHOR
com.tencent.mm.opensdk.modelmsg.WXMusicVideoObject: int STRING_LIMIT
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country NETHERLANDS_ANTILLES
org.simpleframework.xml.core.Persister: org.simpleframework.xml.stream.Format format
com.umeng.commonsdk.internal.utils.b: int b
com.caij.puremusic.fragments.NowPlayingScreen: com.caij.puremusic.fragments.NowPlayingScreen Color
org.jaudiotagger.audio.asf.data.GUID: org.jaudiotagger.audio.asf.data.GUID GUID_ENCODING
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_RELEASEARTISTID
com.google.android.material.bottomsheet.BottomSheetDialog$5: com.google.android.material.bottomsheet.BottomSheetDialog this$0
org.jcodec.containers.mp4.boxes.TrackHeaderBox: long duration
com.tencent.mm.opensdk.modelmsg.WXLiteAppObject: java.lang.String TAG
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
com.umeng.commonsdk.statistics.proto.e$e: java.util.Map d
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType AVIF
com.google.android.gms.internal.play_billing.zzff: int zzd
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country MALDIVES
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b d
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier MFRA
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage GENERAL_WRITE_FAILED_TO_DELETE_TEMPORARY_FILE
androidx.fragment.app.Fragment: boolean mRetainInstance
org.jcodec.containers.mp4.boxes.ColorExtension: byte AVCOL_RANGE_MPEG
androidx.fragment.app.Fragment: int STARTED
com.umeng.analytics.process.a$a: java.lang.String h
com.thegrizzlylabs.sardineandroid.model.Activelock: com.thegrizzlylabs.sardineandroid.model.Locktype locktype
com.umeng.analytics.pro.ab: java.lang.String a
com.umeng.analytics.pro.s: int e
org.jaudiotagger.audio.mp3.MPEGFrameHeader: boolean isOriginal
org.simpleframework.xml.core.ElementListParameter: java.lang.Class type
org.simpleframework.xml.core.Caller: org.simpleframework.xml.core.Function replace
org.simpleframework.xml.core.ElementUnionParameter: org.simpleframework.xml.core.Label label
org.repackage.com.vivo.identifier.DataBaseOperation: java.lang.String a
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey URL_WIKIPEDIA_RELEASE_SITE
org.jcodec.containers.mp4.boxes.ReverseDnsBox: java.lang.String FOURCC
com.tencent.bugly.proguard.ar: long b
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_WORK_PART_LEVEL3_ID
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String SINGLE_DISC_TRACK_NO
org.repackage.com.miui.deviceid.BuildConfig: java.lang.String d
com.tencent.bugly.proguard.bt: boolean a
org.simpleframework.xml.core.ElementListLabel: org.simpleframework.xml.core.Introspector detail
com.umeng.analytics.pro.ae: boolean c
com.umeng.commonsdk.stateless.b: int f
com.umeng.analytics.pro.bt: byte a
com.tencent.bugly.proguard.ba: long d
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag DEVICE_CHARGING
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode HTTP_1_1_REQUIRED
org.jaudiotagger.audio.ogg.util.VorbisHeader: byte[] CAPTURE_PATTERN_AS_BYTES
org.jaudiotagger.tag.mp4.Mp4TagField: java.lang.String id
com.alipay.apmobilesecuritysdk.d.e: java.lang.String[] b
androidx.fragment.app.DialogFragment: boolean mDialogCreated
org.simpleframework.xml.core.ParameterContact: int index
com.caij.puremusic.db.model.PlayCountEntity: long songId
com.caij.puremusic.db.model.SongQueries$SongsByNameAlbumQuery: java.lang.String value
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_WORK
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey WORK_TYPE
com.umeng.analytics.pro.j: java.lang.String N
org.jaudiotagger.audio.mp3.LameFrame: java.lang.String LAME_ID
org.repackage.com.miui.deviceid.IdentifierManager: java.lang.Object b
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey COMMENT
com.caij.puremusic.drive.model.DropboxDriveItem: java.lang.String id
org.jaudiotagger.audio.asf.data.GUID: org.jaudiotagger.audio.asf.data.GUID GUID_HEADER
com.umeng.analytics.pro.am: java.lang.String aT
com.umeng.commonsdk.debug.UMLogCommon: java.lang.String SC_10025
com.caij.puremusic.model.Data: java.lang.String id
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country MONTENEGRO
com.tencent.mm.opensdk.modelbiz.WXOpenCustomerServiceChat$Req: java.lang.String url
org.jaudiotagger.logging.XMLTagDisplayFormatter: java.lang.String xmlOpenStart
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey ENGINEER
org.jaudiotagger.tag.mp4.field.Mp4FieldType: org.jaudiotagger.tag.mp4.field.Mp4FieldType TEXT
org.jcodec.containers.mp4.boxes.MetaValue: int TYPE_FLOAT_64
org.jaudiotagger.tag.datatype.Lyrics3TimeStamp: long minute
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat DARKEN
com.google.android.gms.internal.play_billing.zzak: int zza
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country MACAO
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int MASK_MP3_COPY
com.caij.puremusic.drive.model.GoogleDriveFile: java.lang.String mimeType
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$Req: java.lang.String SCENE_DATA_OBJECT_KEY_IDENTIFIER
com.caij.puremusic.drive.model.PlaylistMetadata: com.caij.puremusic.drive.model.PlaylistMetadata$Companion Companion
com.caij.puremusic.drive.model.SearchResult3$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
nl.adaptivity.xmlutil.EventType: nl.adaptivity.xmlutil.EventType PROCESSING_INSTRUCTION
com.umeng.commonsdk.internal.crash.UMCrashManager: boolean isReportCrash
org.jcodec.containers.mp4.boxes.EsdsBox$DescriptorParser: int DS_TAG
org.jaudiotagger.tag.mp4.Mp4NonStandardFieldKey: org.jaudiotagger.tag.mp4.Mp4NonStandardFieldKey AMIM
org.slf4j.event.Level: int levelInt
com.umeng.commonsdk.utils.d: java.lang.String G
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockHeader: int BLOCK_TYPE_LENGTH
org.repackage.a.a.a.a.c: android.content.ServiceConnection e
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey ISRC
com.umeng.commonsdk.debug.UMRTLog: java.lang.String RTLOG_TAG
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey OPUS
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey ENSEMBLE
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_REVERB
com.umeng.analytics.process.a$a: java.lang.String e
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey IS_SOUNDTRACK
com.tencent.bugly.proguard.u: android.content.Context c
org.jaudiotagger.tag.reference.Tagger: org.jaudiotagger.tag.reference.Tagger TAGSCANNER
com.tencent.bugly.BuglyStrategy$a: int CRASHTYPE_U3D
org.simpleframework.xml.core.TreeModel: int index
com.google.android.material.bottomsheet.BottomSheetBehavior: androidx.customview.widget.ViewDragHelper viewDragHelper
com.umeng.commonsdk.internal.utils.b: int d
androidx.appcompat.view.menu.ListMenuItemView: android.widget.CheckBox mCheckBox
com.caij.puremusic.drive.model.GoogleDriveFileResponse: com.caij.puremusic.drive.model.GoogleDriveFileResponse$Companion Companion
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey IS_COMPILATION
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_NOTE
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$GetByIdQuery: java.lang.String fileId
com.caij.puremusic.model.Playlist: com.caij.puremusic.model.Playlist empty
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuPresenter mPresenter
org.jcodec.containers.mp4.boxes.DataBox: java.lang.String FOURCC
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status TRANSIENT_ERROR
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: int FIELD_BITRATE_NOMAIML_POS
com.umeng.commonsdk.utils.d: java.lang.String m
com.tencent.mm.opensdk.modelbiz.CreateChatroom$Req: java.lang.String chatroomName
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MOOD
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country VATICAN_CITY
org.jaudiotagger.audio.asf.io.LanguageListReader: org.jaudiotagger.audio.asf.data.GUID[] APPLYING
org.jaudiotagger.audio.generic.Permissions: java.util.logging.Logger logger
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_NON_TAX_PAY
com.umeng.analytics.Gender: com.umeng.analytics.Gender Female
com.umeng.commonsdk.UMConfigure: int policyGrantResult
com.caij.puremusic.model.Data: java.lang.String type
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_OPENSDK_WEWORK_OBJECT
com.umeng.analytics.pro.an: com.umeng.analytics.pro.bp r
com.caij.puremusic.db.model.SongQueries$SongsDateLastDescQuery: com.caij.puremusic.db.model.SongQueries this$0
androidx.fragment.app.DialogFragment: java.lang.String SAVED_INTERNAL_DIALOG_SHOWING
androidx.fragment.app.Fragment: boolean mHidden
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: byte vorbisVersion
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] $VALUES
org.jaudiotagger.tag.id3.ID3v23Frame: int FRAME_ENCRYPTION_INDICATOR_SIZE
com.umeng.commonsdk.UMConfigureImpl: int c
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MUSICIP_ID
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage GENERAL_WRITE_FAILED_TO_RENAME_TO_ORIGINAL_FILE
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey TAGS
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country GERMANY
org.jcodec.containers.mp4.boxes.MetaValue: int TYPE_PNG
com.caij.puremusic.db.model.SongQueries$getSongCountBySourceId$1: com.caij.puremusic.db.model.SongQueries$getSongCountBySourceId$1 INSTANCE
kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap
com.umeng.commonsdk.statistics.idtracking.c: android.content.Context b
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag DETECT_RETAIN_INSTANCE_USAGE
org.jaudiotagger.audio.asf.data.MetadataContainerFactory: boolean $assertionsDisabled
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey TIMBRE
com.umeng.commonsdk.statistics.common.ULog: int LOG_MAXLENGTH
com.umeng.commonsdk.internal.utils.a$a: java.lang.String a
org.simpleframework.xml.core.TreeModel: org.simpleframework.xml.core.LabelMap elements
com.tencent.mm.opensdk.modelmsg.WXStateJumpMiniProgramInfo: int miniProgramType
com.tencent.bugly.proguard.bm: java.lang.String a
com.caij.puremusic.drive.model.SongItem$$serializer: com.caij.puremusic.drive.model.SongItem$$serializer INSTANCE
org.simpleframework.xml.core.CacheLabel: java.lang.String entry
com.caij.puremusic.network.model.LastFmTrack: com.caij.puremusic.network.model.LastFmTrack$Track track
com.umeng.commonsdk.utils.UMUtils: java.lang.String KEY_APP_KEY
com.tencent.bugly.crashreport.biz.UserInfoBean: boolean l
com.umeng.commonsdk.service.UMGlobalContext: java.lang.String mAppVersion
com.caij.puremusic.db.model.SongQueries$songsByAlum$1: com.caij.puremusic.db.model.SongQueries this$0
com.tencent.bugly.proguard.aa: java.lang.String c
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier STDP
com.umeng.commonsdk.statistics.common.DataHelper: long ENVELOPE_EXTRA_LENGTH
com.tencent.bugly.proguard.y: java.lang.String f
org.jaudiotagger.audio.AudioFileFilter: boolean allowDirectories
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype UMTS
com.umeng.common.a: java.lang.String g
io.ktor.utils.io.jvm.javaio.BlockingAdapter: int result
com.tencent.bugly.crashreport.common.strategy.StrategyBean: android.os.Parcelable$Creator CREATOR
com.umeng.analytics.pro.am: java.lang.String ab
com.alipay.sdk.app.PayTask: long i
org.jcodec.containers.mp4.boxes.VideoMediaHeaderBox: int gOpColor
com.caij.puremusic.drive.model.SubsonicPlaylist: java.lang.String changed
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String PERFORMER_NAME_SORT
com.umeng.commonsdk.vchannel.a: java.lang.String f
com.umeng.commonsdk.stateless.b: boolean k
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdCountQuery$execute$1: com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdCountQuery this$0
org.jaudiotagger.audio.wav.WavTagWriter$BothTagsFileStructure: boolean isInfoTagFirst
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int MODE_EXTENSION_OFF_OFF
com.umeng.analytics.pro.j: java.lang.String g
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey BPM
org.simpleframework.xml.core.TextParameter: org.simpleframework.xml.core.TextParameter$Contact contact
org.simpleframework.xml.core.PrimitiveList: java.lang.String parent
com.thegrizzlylabs.sardineandroid.DavAcl: java.util.List aces
com.umeng.commonsdk.framework.a$2: com.umeng.commonsdk.framework.a a
org.simpleframework.xml.transform.GregorianCalendarTransform: org.simpleframework.xml.transform.DateTransform transform
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey WORK_PART_LEVEL1_TYPE
org.jaudiotagger.audio.asf.data.ContentDescription: java.lang.String KEY_RATING
org.simpleframework.xml.core.CacheParameter: boolean text
org.jaudiotagger.tag.TagOptionSingleton: boolean id3v1SaveTitle
org.jaudiotagger.audio.flac.FlacTagWriter$MetadataBlockInfo: java.util.List metadataBlockPadding
org.jaudiotagger.tag.reference.ISOScript: java.util.Map codeMap
org.jaudiotagger.audio.ogg.OggVorbisCommentTagCreator: boolean shouldWriteFramingBit
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP3_URL_SAVED_ENCODED
com.google.android.gms.internal.play_billing.zzfz: int zze
com.tencent.bugly.crashreport.crash.CrashDetailBean: byte[] y
com.tencent.mm.opensdk.openapi.MMSharedPreferences: java.lang.String TAG
org.simpleframework.xml.core.TextLabel: org.simpleframework.xml.core.Contact contact
org.jaudiotagger.audio.generic.GenericTag: byte[] EMPTY_BYTE_ARRAY
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier OHDR
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: java.lang.String TYPE_COMPRESSION
com.alipay.apmobilesecuritysdk.e.b: java.lang.String a
com.google.android.material.bottomsheet.BottomSheetBehavior: java.lang.ref.WeakReference accessibilityDelegateViewRef
nl.adaptivity.xmlutil.XmlDeclMode: nl.adaptivity.xmlutil.XmlDeclMode None
org.simpleframework.xml.core.TextParameter: org.simpleframework.xml.core.Label label
org.jaudiotagger.tag.reference.Tagger: org.jaudiotagger.tag.reference.Tagger FOOBAR2000
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MUSICBRAINZ_ORIGINAL_RELEASEID
com.tencent.bugly.proguard.aa: java.lang.String y
com.caij.puremusic.drive.model.FMediaContainer: com.caij.puremusic.drive.model.FMediaContainer$Companion Companion
org.jaudiotagger.tag.id3.valuepair.StandardIPLSKey: java.lang.String key
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey RANKING
com.tencent.bugly.proguard.y: int b
org.jaudiotagger.tag.reference.MusicalKey: org.jaudiotagger.tag.reference.MusicalKey SHARP
org.jaudiotagger.audio.flac.metadatablock.BlockType: org.jaudiotagger.audio.flac.metadatablock.BlockType STREAMINFO
com.google.android.gms.internal.play_billing.zzew: com.google.android.gms.internal.play_billing.zzew zze
com.umeng.commonsdk.stateless.a: java.lang.String f
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey ARRANGER_SORT
com.google.android.material.bottomsheet.BottomSheetDragHandleView$2: com.google.android.material.bottomsheet.BottomSheetDragHandleView this$0
org.jaudiotagger.audio.opus.OpusHeader: byte[] TAGS_CAPTURE_PATTERN_AS_BYTES
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey SINGLE_DISC_TRACK_NO
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MUSICBRAINZ_RELEASE_STATUS
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier JP2H
com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat DEFAULT
org.jaudiotagger.audio.ogg.util.OggPageHeader: int FIELD_STREAM_STRUCTURE_VERSION_LENGTH
org.repackage.com.meizu.flyme.openidsdk.OpenId: java.lang.String c
com.umeng.commonsdk.UMConfigureImpl: java.lang.Runnable i
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MOOD_MM3BETA
com.caij.puremusic.network.model.ArtistWrapper: java.util.List items
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: int bitrateMinimal
com.umeng.analytics.filter.d: java.util.Set d
com.umeng.commonsdk.utils.d: java.lang.String e
com.umeng.analytics.pro.at: int b
org.jaudiotagger.tag.TagOptionSingleton: boolean checkIsWritable
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey TAGS
com.caij.puremusic.db.model.ServerArtistCoverQueries$getById$1: kotlin.jvm.functions.Function3 $mapper
com.umeng.commonsdk.statistics.noise.ImLatent: long mDelay
com.tencent.bugly.proguard.aa: java.lang.String q
com.umeng.analytics.Gender$4: int[] a
org.jaudiotagger.tag.lyrics3.Lyrics3v1Iterator: int lastIndex
com.caij.puremusic.db.model.SongQueries$SongsDateLastDescQuery$execute$1: com.caij.puremusic.db.model.SongQueries$SongsDateLastDescQuery this$0
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgramEnvironment$Req: java.lang.String extData
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country FRENCH_POLYNESIA
com.tencent.bugly.proguard.al: java.lang.String a
com.tencent.bugly.proguard.bo: com.tencent.bugly.proguard.bm j
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey ACOUSTID_ID
org.jaudiotagger.audio.mp4.Mp4AudioHeader: org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile profile
com.caij.puremusic.db.model.PlaylistEntityQueries$deleteById$1: long $playListId
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey TV_EPISODE
org.jaudiotagger.tag.aiff.AiffTag: org.jaudiotagger.tag.id3.AbstractID3v2Tag id3Tag
com.umeng.commonsdk.statistics.proto.Gender: int value
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status PENDING
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey TAGS
com.tencent.bugly.proguard.as: android.content.Context b
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country BRUNEI_DARUSSALAM
org.jaudiotagger.audio.ogg.util.OggPageHeader: byte headerTypeFlag
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: org.jaudiotagger.audio.aiff.chunk.AiffCompressionType MAC3
com.umeng.analytics.process.c$a: java.util.concurrent.atomic.AtomicInteger a
org.simpleframework.xml.core.ClassSchema: org.simpleframework.xml.core.Instantiator factory
org.jaudiotagger.audio.generic.AudioFileWriter: org.jaudiotagger.audio.generic.AudioFileModificationListener modificationListener
org.simpleframework.xml.core.SignatureScanner: org.simpleframework.xml.core.ParameterMap registry
com.caij.puremusic.drive.model.Metadata$$serializer: com.caij.puremusic.drive.model.Metadata$$serializer INSTANCE
com.alipay.android.phone.mrpc.core.i: com.alipay.android.phone.mrpc.core.h b
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_TITLE_SORT_ORDER_MUSICBRAINZ
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_FINDER_OPEN_PROFILE
org.jaudiotagger.audio.wav.chunk.WavFactChunk: org.jaudiotagger.audio.generic.GenericAudioHeader info
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey PERFORMER
com.tencent.bugly.proguard.k$a: int b
org.simpleframework.xml.core.Caller: org.simpleframework.xml.core.Context context
com.umeng.commonsdk.statistics.proto.d: com.umeng.analytics.pro.bp h
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey CATEGORY
org.jcodec.containers.mp4.boxes.TrunBox: int DATA_OFFSET_AVAILABLE
org.simpleframework.xml.core.VersionLabel: org.simpleframework.xml.stream.Format format
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_WORK_PART_LEVEL1_TYPE
com.umeng.analytics.pro.am: java.lang.String aV
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script GREEK
com.caij.puremusic.db.model.ServerAudioFormat: long id
com.umeng.analytics.pro.l: int n
org.jaudiotagger.tag.reference.ISOCountry$Country: java.lang.String description
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier MJHD
com.caij.puremusic.network.model.TokenData: java.lang.String access_token
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$insert$1: com.caij.puremusic.db.model.DriveFileDownUrlInfo $DriveFileDownUrlInfo
com.caij.puremusic.db.model.SearchAlbumResultQueries$getById$1: kotlin.jvm.functions.Function2 $mapper
com.umeng.commonsdk.statistics.common.HelperUtils: java.lang.String TAG
com.caij.puremusic.model.Genre: java.lang.String name
com.umeng.commonsdk.statistics.proto.c: com.umeng.analytics.pro.bp h
com.umeng.analytics.pro.r: long e
com.caij.puremusic.model.AbsCustomPlaylist$special$$inlined$inject$default$1: org.koin.core.qualifier.Qualifier $qualifier
com.tencent.bugly.proguard.at: int f
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey PART_TYPE
com.caij.puremusic.drive.model.Directory: java.lang.String title
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country SOLOMON_ISLANDS
com.umeng.commonsdk.utils.d: java.lang.String aa
com.umeng.analytics.b: java.lang.String t
com.caij.puremusic.db.model.ServerSongCoverQueries$getBySource$1: kotlin.jvm.functions.Function3 $mapper
com.google.common.collect.AbstractIterator$State: com.google.common.collect.AbstractIterator$State NOT_READY
org.jaudiotagger.audio.wav.WavSubFormat: org.jaudiotagger.audio.wav.WavSubFormat FORMAT_EXTENSIBLE
com.umeng.analytics.AnalyticsConfig: java.lang.String DEBUG_KEY
com.umeng.commonsdk.utils.UMUtils: java.lang.String KEY_SESSION_ID
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_URL_PUBLISHERS
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_URL_OFFICIAL_RADIO
com.umeng.analytics.pro.d: java.lang.String ao
com.umeng.analytics.pro.o$a: int x
com.umeng.commonsdk.debug.UMLog: char HORIZONTAL_LINE
com.caij.puremusic.drive.model.JellyfinArtistResponse: java.util.List Items
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzs
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MIXER
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey ARTISTS
org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile: org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile LOW_COMPLEXITY
com.tencent.bugly.BuglyStrategy: java.lang.String c
com.tencent.bugly.proguard.ar: long a
com.caij.puremusic.db.model.SongQueries$SongsByIdsQuery$execute$1: com.caij.puremusic.db.model.SongQueries$SongsByIdsQuery this$0
com.umeng.analytics.pro.j: java.lang.String ar
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: com.umeng.commonsdk.utils.FileLockUtil l
org.jaudiotagger.audio.flac.metadatablock.BlockType: org.jaudiotagger.audio.flac.metadatablock.BlockType PICTURE
com.caij.puremusic.fragments.NowPlayingScreen: com.caij.puremusic.fragments.NowPlayingScreen Normal
com.umeng.commonsdk.statistics.proto.b$e: short e
org.jcodec.containers.mp4.boxes.ChannelBox: int channelBitmap
org.simpleframework.xml.transform.ClassTransform: java.lang.String VOID
org.simpleframework.xml.core.DetailScanner: org.simpleframework.xml.Root root
com.umeng.analytics.pro.am: java.lang.String aO
org.jaudiotagger.tag.reference.ISOScript$Script: java.lang.String code
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: java.text.SimpleDateFormat formatTimeIn
com.tencent.bugly.proguard.ac: com.tencent.bugly.crashreport.common.strategy.StrategyBean g
com.umeng.analytics.pro.bo$b: byte k
org.simpleframework.xml.core.CacheParameter: java.lang.Class type
com.caij.puremusic.drive.model.Metadata: com.caij.puremusic.drive.model.Metadata$Companion Companion
org.simpleframework.xml.core.CompositeValue: org.simpleframework.xml.core.Entry entry
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey PERFORMER
org.jaudiotagger.audio.wav.WavSubFormat: org.jaudiotagger.audio.wav.WavSubFormat FORMAT_PCM
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey PL_ID
com.caij.puremusic.drive.model.SubsonicPlaylist$$serializer: com.caij.puremusic.drive.model.SubsonicPlaylist$$serializer INSTANCE
com.tencent.mm.opensdk.modelbiz.WXChannelOpenEvent$Req: java.lang.String Key_Username
com.caij.puremusic.db.model.Song$Adapter: app.cash.sqldelight.ColumnAdapter trackNumberAdapter
com.umeng.analytics.pro.am: java.lang.String bd
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType VPN
org.jaudiotagger.audio.mp3.VbriFrame: int frameCount
com.umeng.commonsdk.stateless.UMSLEnvelopeBuild: java.lang.String module
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey ORIGINAL_LYRICIST
com.caij.puremusic.drive.model.Metadata: java.lang.String parentTitle
org.jaudiotagger.tag.mp4.Mp4RatingValue: org.jaudiotagger.tag.mp4.Mp4RatingValue CLEAN
com.umeng.commonsdk.statistics.internal.StatTracer: android.content.Context mContext
com.tencent.bugly.proguard.bd: com.tencent.bugly.proguard.aa c
org.simpleframework.xml.core.PathParser$PathSection: java.util.List cache
com.tencent.bugly.proguard.at: boolean o
com.google.android.gms.internal.play_billing.zzew: com.google.android.gms.internal.play_billing.zzew zzm
com.caij.puremusic.fragments.search.Filter: com.caij.puremusic.fragments.search.Filter ALBUMS
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage[] $VALUES
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MOOD_HAPPY
org.jaudiotagger.tag.mp4.field.Mp4TagCoverField: org.jaudiotagger.tag.mp4.field.Mp4FieldType imageType
com.umeng.analytics.pro.an$e: com.umeng.analytics.pro.an$e g
com.tencent.bugly.proguard.av: boolean g
org.simpleframework.xml.core.ConversionInstance: org.simpleframework.xml.core.Context context
com.tencent.mm.opensdk.constants.ConstantsAPI: java.lang.String CONTENT
com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand: android.os.Parcelable$Creator CREATOR
org.json.alipay.JSONException: java.lang.Throwable cause
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country MARSHALL_ISLANDS
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MOOD_PARTY
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey WORK_COMPOSITION
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$PostorderEnumeration: org.jaudiotagger.utils.tree.DefaultMutableTreeNode this$0
org.jaudiotagger.tag.id3.ID3v23Tag: int TAG_EXT_HEADER_CRC_LENGTH
com.umeng.commonsdk.statistics.proto.a: java.lang.String a
org.jaudiotagger.tag.id3.ID3v23Tag: int MASK_V23_EXPERIMENTAL
org.jcodec.containers.mp4.boxes.TrunBox: int[] sampleDuration
com.umeng.commonsdk.framework.UMModuleRegister: java.lang.String INNER
org.jaudiotagger.tag.datatype.Lyrics3Line: java.lang.String lyric
org.jaudiotagger.tag.id3.ID3v22FieldKey: java.lang.String subId
org.jcodec.containers.mp4.boxes.SyncSamplesBox: int[] syncSamples
com.caij.puremusic.drive.model.GoogleDriveFile: java.lang.String id
com.caij.puremusic.model.AudioTagInfo: com.caij.puremusic.model.ArtworkInfo artworkInfo
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey ORCHESTRA
com.caij.puremusic.drive.model.PlayListsSubsonicResponse: java.lang.String version
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzm
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey WORK
com.thegrizzlylabs.sardineandroid.model.Lockscope: com.thegrizzlylabs.sardineandroid.model.Exclusive exclusive
org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistSaveOptions: org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistSaveOptions WRITE_JRIVER_ALBUMARTIST
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier TREX
org.jaudiotagger.audio.asf.data.EncryptionChunk: java.util.ArrayList strings
org.jaudiotagger.tag.id3.AbstractID3v2Frame$EncodingFlags: java.lang.String TYPE_FLAGS
com.tencent.bugly.proguard.ac: com.tencent.bugly.crashreport.common.strategy.StrategyBean f
org.jaudiotagger.audio.asf.data.GUID: org.jaudiotagger.audio.asf.data.GUID GUID_CONTENTDESCRIPTION
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_WORK_COMPOSITION_ID
com.tencent.mmkv.MMKVLogLevel: com.tencent.mmkv.MMKVLogLevel LevelDebug
org.jaudiotagger.tag.wav.WavTag: org.jaudiotagger.audio.wav.WavOptions wavOptions
org.jaudiotagger.audio.flac.metadatablock.BlockType: org.jaudiotagger.audio.flac.metadatablock.BlockType CUESHEET
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_ORIGINAL_RELEASE_TIME
com.caij.puremusic.model.Data: int nbAlbum
org.jaudiotagger.tag.id3.ID3v23Tag: boolean compression
com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport: java.util.Set properties
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey CATALOG_NO
com.caij.puremusic.db.model.AlbumQueries$insert$1: com.caij.puremusic.db.model.Album $Album
com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker stateSettlingTracker
org.jaudiotagger.tag.images.AndroidArtwork: java.lang.String mimeType
com.umeng.commonsdk.debug.UMLogCommon: java.lang.String SC_10004
com.google.common.hash.LittleEndianByteArray$JavaLittleEndianBytes: com.google.common.hash.LittleEndianByteArray$JavaLittleEndianBytes INSTANCE
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier TFMA
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat COLOR_DODGE
com.tencent.bugly.proguard.ay: com.tencent.bugly.proguard.aa c
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_DEVICE_ACCESS
com.caij.puremusic.drive.model.ArtistItem: java.util.List BackdropImageTags
com.umeng.analytics.pro.an$e: com.umeng.analytics.pro.an$e f
org.jaudiotagger.audio.ogg.util.OggPage: org.jaudiotagger.audio.ogg.util.OggPageHeader header
com.google.common.base.Predicates$ObjectPredicate: com.google.common.base.Predicates$ObjectPredicate[] $VALUES
com.umeng.analytics.filter.d: java.lang.String a
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_RELEASE_TRACK_ID
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country SAINT_HELENA
org.simpleframework.xml.core.Support: org.simpleframework.xml.stream.Format format
org.simpleframework.xml.transform.ClassTransform: java.lang.String SHORT
org.jaudiotagger.tag.datatype.AbstractDataType: java.lang.String identifier
org.jaudiotagger.audio.asf.data.MetadataDescriptor: int MAX_STREAM_NUMBER
com.umeng.commonsdk.config.d: java.lang.String b
com.alipay.tscenter.biz.rpc.vkeydfp.request.DeviceDataReportRequest: java.lang.String lastTime
org.simpleframework.xml.core.StructureBuilder: org.simpleframework.xml.core.Instantiator factory
com.tencent.bugly.proguard.s: boolean m
com.caij.puremusic.drive.model.Metadata: java.util.List Media
org.jaudiotagger.audio.asf.data.GUID: org.jaudiotagger.audio.asf.data.GUID GUID_AUDIOSTREAM
org.simpleframework.xml.core.DetailScanner: org.simpleframework.xml.Order order
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script HAN_HANJA
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey ALBUMARTISTS
com.tencent.mm.opensdk.constants.Build: int SEND_BUSINESS_CARD_SDK_INT
org.jcodec.containers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox$Factory: org.jcodec.containers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox box
org.simpleframework.xml.core.Signature: java.lang.Class type
com.tencent.bugly.proguard.bo: java.lang.String l
androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type RIGHT
org.jaudiotagger.audio.mp3.MP3File: org.jaudiotagger.tag.id3.AbstractID3v2Tag id3v2tag
io.ktor.utils.io.ByteBufferChannel: java.lang.Object _writeOp
org.simpleframework.xml.core.PathParser: java.util.List prefixes
com.caij.puremusic.db.model.PlayCountEntityQueries$CheckSongExistInPlayCountQuery: com.caij.puremusic.db.model.PlayCountEntityQueries this$0
com.google.android.material.bottomsheet.BottomSheetBehavior: android.animation.ValueAnimator interpolatorAnimator
com.umeng.commonsdk.stateless.UMSLEnvelopeBuild: boolean isEncryptEnabled
com.google.android.exoplayer2.metadata.scte35.PrivateCommand: android.os.Parcelable$Creator CREATOR
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_EMOJI
org.simpleframework.xml.core.TemplateEngine: org.simpleframework.xml.core.Template source
com.tencent.mm.opensdk.modelbiz.IWXChannelJumpInfo: int WX_CHANNEL_JUMP_TYPE_UNKNOWN
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country GUAM
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
com.tencent.mm.opensdk.modelmsg.WXStateSceneDataObject: java.lang.String WX_STATE_JUMP_INFO_KEY_IDENTIFIER
org.jaudiotagger.audio.mp4.ChunkWriter: org.jcodec.containers.mp4.boxes.SampleEntry[] entries
com.tencent.bugly.proguard.bu: java.lang.String g
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MOOD_PARTY
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: int FIELD_AUDIO_SAMPLE_RATE_LENGTH
com.caij.puremusic.model.Data: java.lang.String pictureMedium
com.caij.puremusic.db.model.SongQueries$insertOrReplace$2: com.caij.puremusic.db.model.SongQueries$insertOrReplace$2 INSTANCE
androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType END
org.jaudiotagger.audio.asf.data.GUID: org.jaudiotagger.audio.asf.data.GUID GUID_FILE
com.alipay.apmobilesecuritysdk.face.EnvModeConfig: int ENVIRONMENT_DAILY
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey[] $VALUES
com.umeng.analytics.pro.ao: android.content.Context a
androidx.fragment.app.Fragment: java.lang.String mWho
com.umeng.analytics.pro.o$a: int D
com.umeng.commonsdk.UMConfigure$BS_TYPE: com.umeng.commonsdk.UMConfigure$BS_TYPE ABTEST
com.caij.puremusic.drive.model.Type: com.caij.puremusic.drive.model.Type$Companion Companion
com.tencent.bugly.proguard.av: com.tencent.bugly.proguard.aa d
com.google.android.material.bottomsheet.BottomSheetBehavior: int CORNER_ANIMATION_DURATION
com.caij.puremusic.fragments.NowPlayingScreen: com.caij.puremusic.fragments.NowPlayingScreen Tiny
com.caij.puremusic.fragments.GridStyle: int layoutResId
org.simpleframework.xml.core.ElementMapParameter: org.simpleframework.xml.core.Expression expression
com.google.android.material.bottomsheet.BottomSheetDialog: android.widget.FrameLayout container
com.tencent.bugly.proguard.aj: android.content.Context f
androidx.fragment.app.Fragment: int RESUMED
org.jaudiotagger.tag.TagOptionSingleton: org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistSaveOptions vorbisAlbumArtistSaveOptions
com.umeng.analytics.pro.ap: java.lang.String b
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype UNKNOWN_MOBILE_SUBTYPE
com.caij.puremusic.drive.model.Prop: com.caij.puremusic.drive.model.Prop$Companion Companion
org.jaudiotagger.audio.aiff.chunk.CommonChunk: org.jaudiotagger.audio.aiff.AiffAudioHeader aiffHeader
org.jaudiotagger.tag.mp4.Mp4ContentTypeValue: org.jaudiotagger.tag.mp4.Mp4ContentTypeValue SHORT_FILM
com.caij.puremusic.fragments.lyrics.ComnLyricsFragment$LyricsType: com.caij.puremusic.fragments.lyrics.ComnLyricsFragment$LyricsType LOCAL_CUS_FILE_LYRICS
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status COMPLETE
org.simpleframework.xml.core.ClassSchema: org.simpleframework.xml.core.Label version
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_TITLE
com.tencent.bugly.proguard.bo: com.tencent.bugly.proguard.bl x
com.umeng.commonsdk.statistics.c: int m
org.jaudiotagger.tag.reference.Tagger: org.jaudiotagger.tag.reference.Tagger MUSICHI
org.jaudiotagger.tag.asf.AsfTagCoverField: java.lang.String mimeType
com.tencent.bugly.proguard.aa: boolean I
org.jaudiotagger.audio.iff.ChunkSummary: java.lang.String chunkId
com.umeng.commonsdk.internal.a: int A
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey PRODUCER
org.repackage.com.vivo.identifier.IdentifierIdClient: java.lang.String w
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country HAITI
com.tencent.mm.opensdk.modelmsg.SendAuth$Req: java.lang.String TAG
com.google.android.gms.internal.play_billing.zzex: java.lang.Object zzk
com.tencent.mm.opensdk.modelbiz.OpenBusiLuckyMoney$Req: java.lang.String appId
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey TITLE_SORT
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey RATING
com.umeng.commonsdk.utils.d: java.lang.String ab
org.jaudiotagger.audio.ogg.util.OggPageHeader: int FIELD_CAPTURE_PATTERN_LENGTH
com.caij.puremusic.db.model.Song: long duration
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat CLEAR
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_POSITION_SYNC
com.caij.puremusic.model.Playlist: java.lang.String name
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int MODE_EXTENSION_NONE
com.tencent.mm.opensdk.openapi.WXApiImplComm: java.lang.String TAG
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script INDUS
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_GAME_LIVE
androidx.transition.ChangeBounds$7: androidx.transition.ChangeBounds$ViewBounds mViewBounds
com.caij.puremusic.db.model.SongQueries$searchSongsByTitle$2: com.caij.puremusic.db.model.SongQueries$searchSongsByTitle$2 INSTANCE
com.umeng.analytics.filter.EventList: int DELETE_LIST_DATA
com.umeng.commonsdk.vchannel.b: java.lang.String b
com.caij.puremusic.db.model.AlbumQueries$getAlbumByArtistId$1: com.caij.puremusic.db.model.AlbumQueries this$0
com.caij.puremusic.db.model.PlayCountEntityQueries$update$1: long $songId
com.google.android.gms.internal.play_billing.zzcj: com.google.android.gms.internal.play_billing.zzcj zzj
org.xmlpull.v1.XmlPullParser: int START_DOCUMENT
org.jcodec.containers.mp4.boxes.CleanApertureExtension: int horizOffsetDenominator
com.google.android.material.bottomsheet.BottomSheetBehavior: int fitToContentsOffset
com.umeng.commonsdk.statistics.proto.Response$e: java.util.Map d
org.simpleframework.xml.core.ClassScanner: org.simpleframework.xml.core.Function complete
com.caij.puremusic.drive.model.MediaStream$$serializer: com.caij.puremusic.drive.model.MediaStream$$serializer INSTANCE
com.umeng.analytics.pro.o$a: int z
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_COPYRIGHTINFO
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey TITLESORT
org.jaudiotagger.tag.id3.ID3v24Frames: java.util.EnumMap id3ToTagField
org.simpleframework.xml.core.Traverser: org.simpleframework.xml.stream.Style style
com.caij.puremusic.fragments.lyrics.ComnLyricsFragment$LyricsType: com.caij.puremusic.fragments.lyrics.ComnLyricsFragment$LyricsType LOACL_META_LYRICS
com.caij.puremusic.db.model.ServerSongCoverQueries$insert$1: com.caij.puremusic.db.model.ServerSongCover $ServerSongCover
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier ID32
com.caij.puremusic.drive.model.SubsonicAlbum: int duration
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey URL_WIKIPEDIA_RELEASE_SITE
org.simpleframework.xml.stream.OutputDocument: org.simpleframework.xml.stream.NodeWriter writer
org.jaudiotagger.audio.ogg.VorbisVersion: org.jaudiotagger.audio.ogg.VorbisVersion[] $VALUES
com.umeng.commonsdk.statistics.proto.b: com.umeng.analytics.pro.bz f
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country SOMALIA
com.caij.puremusic.db.model.ArtistQueries$ArtistByNameQuery: com.caij.puremusic.db.model.ArtistQueries this$0
com.tencent.mm.opensdk.modelmsg.WXMusicObject: java.lang.String songLyric
com.umeng.analytics.b: java.lang.String A
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey TITLE_SORT
com.umeng.analytics.pro.p: java.lang.Thread$UncaughtExceptionHandler a
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzU
com.tencent.mm.opensdk.modelmsg.SendAuth$Req: java.lang.String state
androidx.fragment.app.DialogFragment: java.lang.String SAVED_THEME
com.umeng.commonsdk.framework.a: int e
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_URL_COMMERCIAL
com.umeng.commonsdk.debug.UMLog: char BOTTOM_LEFT_CORNER
org.simpleframework.xml.core.StructureBuilder: boolean primitive
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_REVERB_FEEDBACK_LEFT_TO_RIGHT
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_WORK_PART_LEVEL1_ID
com.umeng.vt.diff.Channel$1: com.umeng.vt.diff.Channel this$0
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_ENCRYPTION
org.simpleframework.xml.core.CompositeArray: org.simpleframework.xml.strategy.Type type
com.google.android.gms.internal.play_billing.zzew: com.google.android.gms.internal.play_billing.zzew zzg
com.tencent.bugly.proguard.at$3: java.lang.Throwable c
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: org.jaudiotagger.audio.aiff.chunk.AiffCompressionType ll64
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: int indexedColouredCount
com.umeng.analytics.pro.o: long s
com.tencent.mm.opensdk.channel.MMessageActV2$Args: android.os.Bundle bundle
org.simpleframework.xml.core.FieldScanner: org.simpleframework.xml.core.Support support
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
com.tencent.mm.opensdk.modelmsg.WXEmojiObject: java.lang.String TAG
com.tencent.bugly.proguard.al: java.lang.String b
com.umeng.analytics.pro.am: java.lang.String X
com.umeng.commonsdk.utils.a: int e
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind MPEG4_AVC_PPS
com.tencent.mm.opensdk.modelmsg.WXMusicObject: java.lang.String musicUrl
com.tencent.bugly.proguard.aj: int g
com.thegrizzlylabs.sardineandroid.DavPrincipal: java.lang.String KEY_SELF
org.simpleframework.xml.core.InstantiatorBuilder: org.simpleframework.xml.core.LabelMap elements
com.tencent.mm.opensdk.modelmsg.WXEnterpriseCardObject: int LENGTH_LIMIT
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey LICENSE
com.alipay.sdk.m.r.a: com.alipay.sdk.m.r.a c
com.caij.puremusic.db.model.SongQueries$song$1: com.caij.puremusic.db.model.SongQueries this$0
com.umeng.commonsdk.framework.a: int u
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage NO_READER_FOR_THIS_FORMAT
com.caij.puremusic.drive.model.PlexArtistsResponse: com.caij.puremusic.drive.model.PlexArtistsResponse$Companion Companion
com.alipay.android.app.IRemoteServiceCallback$Stub: int TRANSACTION_isHideLoadingScreen
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey CONDUCTOR
com.umeng.commonsdk.statistics.idtracking.Envelope: byte[] mChecksum
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey IS_SOUNDTRACK
org.jcodec.containers.mp4.boxes.AliasBox: short volumeSignature
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey ENSEMBLE
com.google.android.gms.internal.play_billing.zza: com.google.android.gms.internal.play_billing.zza zzl
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey CLASSICAL_CATALOG
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_GENRE
com.caij.puremusic.drive.model.DriveFile: long createTime
com.tencent.bugly.proguard.ay: com.tencent.bugly.proguard.as i
org.jaudiotagger.audio.iff.ChunkSummary: long chunkSize
io.ktor.client.engine.HttpClientEngineBase: int closed
com.umeng.commonsdk.UMConfigure: java.lang.String KEY_FILE_NAME_LOG
com.umeng.analytics.pro.d: java.lang.String r
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_TITLE_SORT_ORDER
com.umeng.analytics.pro.o$a: int j
com.caij.puremusic.drive.model.SongItem: java.lang.String Album
com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport$SyncLevel: java.lang.String value
org.jaudiotagger.logging.PlainTextTagDisplayFormatter: org.jaudiotagger.logging.PlainTextTagDisplayFormatter formatter
com.umeng.analytics.pro.bs: int c
org.jaudiotagger.audio.mp4.Flatten: java.util.Map sampleProcessors
com.umeng.analytics.pro.l: int m
org.simpleframework.xml.core.CompositeInlineMap: org.simpleframework.xml.stream.Style style
com.umeng.analytics.pro.e: java.lang.String a
org.jaudiotagger.audio.asf.data.GUID: org.jaudiotagger.audio.asf.data.GUID GUID_HEADER_EXTENSION
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey ENCODER
com.tencent.bugly.proguard.br: java.lang.String d
com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat PREFER_RGB_565
com.umeng.analytics.pro.d: java.lang.String g
com.umeng.tunnel.UMChannelAgent: boolean vChannelReady
org.jaudiotagger.audio.ogg.OggVorbisTagReader$OggVorbisHeaderSizes: long commentHeaderStartPosition
org.simpleframework.xml.convert.ConverterFactory: org.simpleframework.xml.util.Cache cache
com.tencent.bugly.proguard.bv: java.util.ArrayList d
com.caij.puremusic.model.PlaylistWrapper: com.caij.puremusic.db.model.Song firstSong
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_RELATIVE_VOLUME_ADJUSTMENT
org.jaudiotagger.audio.mp3.VbriFrame: int VBRI_DELAY_BUFFER_SIZE
com.tencent.mm.opensdk.modelmsg.GetMessageFromWX$Req: java.lang.String lang
com.alipay.android.app.IAlixPay$Stub: int TRANSACTION_registerCallback
com.caij.puremusic.drive.model.BaiduDriveItem$$serializer: com.caij.puremusic.drive.model.BaiduDriveItem$$serializer INSTANCE
com.tencent.bugly.proguard.aa: java.lang.String o
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_OPEN_WEBVIEW
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey ALBUM_ARTIST
org.simpleframework.xml.core.GetPart: java.lang.annotation.Annotation label
com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModelDefault
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: int bitrateMaximal
com.tencent.mm.opensdk.modelmsg.WXEmojiPageSharedObject: int pageType
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country THE_DEMOCRATIC_REPUBLIC_OF_CONGO
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL2
org.simpleframework.xml.core.CacheLabel: org.simpleframework.xml.core.Expression expression
com.umeng.commonsdk.internal.a: int F
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey ARRANGER
org.jaudiotagger.audio.aiff.chunk.AiffChunkType: org.jaudiotagger.audio.aiff.chunk.AiffChunkType TAG
org.jaudiotagger.audio.generic.GenericAudioHeader: java.lang.Integer noOfChannels
com.umeng.commonsdk.utils.d: java.lang.String Z
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey SCRIPT
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status WAITING_FOR_SIZE
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a G
com.umeng.commonsdk.statistics.common.ULog: int LEVEL_WARN
com.umeng.commonsdk.statistics.idtracking.Envelope: java.lang.String dummyID2
org.jaudiotagger.tag.reference.PictureTypes: int PICTURE_TYPE_FIELD_SIZE
org.jcodec.containers.mp4.boxes.TrunBox: int FIRST_SAMPLE_FLAGS_AVAILABLE
org.simpleframework.xml.strategy.Allocate: org.simpleframework.xml.strategy.Value value
org.jaudiotagger.audio.mp3.MP3File: org.jaudiotagger.tag.lyrics3.AbstractLyrics3 lyrics3tag
com.thegrizzlylabs.sardineandroid.model.SearchRequest: java.lang.String language
com.caij.puremusic.drive.model.GoogleDriveFile$$serializer: com.caij.puremusic.drive.model.GoogleDriveFile$$serializer INSTANCE
org.jaudiotagger.tag.id3.ID3v24Tag: byte imageSizeRestriction
org.simpleframework.xml.core.Entry: java.lang.Class keyType
org.repackage.com.zui.deviceidservice.IDeviceidInterface$Stub: int c
org.jaudiotagger.tag.TagOptionSingleton: boolean id3v1SaveComment
com.umeng.analytics.pro.bo$b: byte i
com.caij.puremusic.db.model.PlaylistEntityQueries$insert$2: com.caij.puremusic.db.model.PlaylistEntityQueries$insert$2 INSTANCE
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script BALINESE
com.tencent.bugly.proguard.aa: int x
org.jaudiotagger.audio.asf.data.ContainerType: org.jaudiotagger.audio.asf.data.ContainerType METADATA_OBJECT
com.umeng.analytics.process.a$a: java.lang.String b
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_IMAGE_FORMAT
org.simpleframework.xml.core.ElementUnionParameter: int index
org.jaudiotagger.audio.aiff.chunk.CommentsChunk: int MARKERID_LENGTH
org.jaudiotagger.audio.mp3.XingFrame: int MAX_BUFFER_SIZE_NEEDED_TO_READ_XING
org.simpleframework.xml.core.GroupExtractor$Registry: org.simpleframework.xml.core.LabelMap elements
com.umeng.analytics.pro.e$d$a: java.lang.String k
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey ENSEMBLE
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockHeader: org.jaudiotagger.audio.flac.metadatablock.BlockType blockType
org.simpleframework.xml.util.LimitedCache: int capacity
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzc
com.umeng.commonsdk.statistics.common.DeviceConfig: boolean hasReadIDFA
org.jaudiotagger.tag.images.StandardArtwork: int pictureType
io.ktor.util.date.Month: io.ktor.util.date.Month NOVEMBER
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b a
com.umeng.analytics.pro.am: java.lang.String ac
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_WORK_PART_LEVEL2_ID
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier SDEP
com.umeng.commonsdk.utils.d: java.lang.String t
com.tencent.mm.opensdk.modelbiz.WXChannelOpenFeed$Req: java.lang.String TAG
com.tencent.bugly.proguard.c: java.lang.String c
com.umeng.commonsdk.UMConfigureInternation$1: android.content.Context a
org.jcodec.containers.mp4.boxes.FileTypeBox: int minorVersion
org.simpleframework.xml.core.ElementMapLabel: org.simpleframework.xml.core.Decorator decorator
org.jcodec.containers.mp4.boxes.MovieHeaderBox: float volume
org.jaudiotagger.tag.TagOptionSingleton: java.util.HashMap parenthesisMap
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessWebview$Req: int businessType
androidx.fragment.app.DialogFragment: boolean mDismissed
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier TFAD
com.umeng.commonsdk.statistics.b: java.lang.String f
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier DSTG
org.jaudiotagger.tag.id3.reference.MediaPlayerRating: org.jaudiotagger.tag.id3.reference.ID3Rating rating
com.tencent.bugly.proguard.bq: java.lang.String b
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MOOD_ELECTRONIC
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_AUDIO_SEEK_POINT_INDEX
com.google.android.material.bottomsheet.BottomSheetBehavior: int insetBottom
org.jaudiotagger.audio.ogg.util.VorbisHeader: int FIELD_PACKET_TYPE_POS
org.simpleframework.xml.core.GetPart: java.lang.reflect.Method method
com.tencent.mm.opensdk.constants.ConstantsAPI: java.lang.String TOKEN
com.umeng.analytics.b: com.umeng.analytics.pro.k e
com.caij.puremusic.db.model.PlaylistEntityQueries$playlists$2: com.caij.puremusic.db.model.PlaylistEntityQueries$playlists$2 INSTANCE
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_ARTIST_SORT_ORDER_MUSICBRAINZ
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_SYNC_LYRIC
org.jaudiotagger.audio.mp3.VbriFrame: int VBRI_AUDIOSIZE_BUFFER_SIZE
com.caij.puremusic.drive.model.SubsonicPlaylist: java.lang.String created
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country NORFOLK_ISLAND
com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport$SyncLevel: com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport$SyncLevel LEVEL_INFINITY
org.jaudiotagger.audio.mp3.MP3AudioHeader: int MIN_BUFFER_REMAINING_REQUIRED
com.tencent.bugly.proguard.av: com.tencent.bugly.proguard.ac c
com.caij.puremusic.drive.model.SubsonicAlbum: java.lang.String artistId
org.simpleframework.xml.core.Entry: java.lang.Class valueType
com.caij.puremusic.db.model.PlaylistEntityQueries$playlistByName$2: com.caij.puremusic.db.model.PlaylistEntityQueries$playlistByName$2 INSTANCE
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_DATETIME
com.thegrizzlylabs.sardineandroid.model.SyncCollection: java.lang.String syncLevel
com.caij.puremusic.drive.model.AlbumItem: java.lang.String Id
org.jaudiotagger.tag.datatype.TempoCode: int MAXIMUM_NO_OF_DIGITS
com.caij.puremusic.db.model.Song: java.lang.String artistName
org.jaudiotagger.tag.id3.framebody.FrameBodyTDAT: int MONTH_START
com.caij.puremusic.drive.model.JellyfinArtistResponse$$serializer: com.caij.puremusic.drive.model.JellyfinArtistResponse$$serializer INSTANCE
com.umeng.analytics.pro.be: com.umeng.analytics.pro.bu c
com.umeng.vt.diff.V: java.lang.String VERSION
org.jaudiotagger.tag.id3.ID3v23Tag: int MASK_V23_EMBEDDED_INFO_FLAG
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country SUDAN
org.jaudiotagger.audio.asf.data.MetadataContainer: org.jaudiotagger.audio.asf.data.ContainerType containerType
com.umeng.commonsdk.statistics.idtracking.j: java.lang.String a
com.google.common.hash.BloomFilterStrategies: com.google.common.hash.BloomFilterStrategies[] $VALUES
org.simpleframework.xml.stream.NodeWriter: boolean verbose
com.umeng.analytics.pro.bo: int l
org.jaudiotagger.audio.mp3.MP3File: int LOAD_IDV1TAG
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey ARTIST_SORT
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgram$Req: int MINIPROGRAM_TYPE_TEST
okhttp3.Protocol: okhttp3.Protocol$Companion Companion
org.jaudiotagger.audio.asf.data.AudioStreamChunk: long WMA_VBR
org.jaudiotagger.audio.SupportedFileFormat: org.jaudiotagger.audio.SupportedFileFormat AIFF
org.jaudiotagger.audio.real.RealChunk: java.lang.String id
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier STZ2
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_DESCRIPTION
org.jaudiotagger.tag.id3.framebody.FrameBodyWXXX: java.lang.String URL_LYRICS_SITE
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MOOD_HAPPY
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey URL_DISCOGS_ARTIST_SITE
org.jaudiotagger.audio.SupportedFileFormat: org.jaudiotagger.audio.SupportedFileFormat WMA
com.thegrizzlylabs.sardineandroid.DavPrincipal$PrincipalType: com.thegrizzlylabs.sardineandroid.DavPrincipal$PrincipalType HREF
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: int MASK_COMPRESSION
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey PART
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country SAUDI_ARABIA
com.umeng.commonsdk.debug.UMLogCommon: java.lang.String SC_10022
com.thegrizzlylabs.sardineandroid.DavResource$DavProperties: java.util.Map customProps
com.umeng.analytics.pro.am: java.lang.String aY
com.umeng.commonsdk.config.d: java.lang.String e
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey ARTISTS
com.caij.puremusic.drive.model.SubsonicSearchListResponse$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.simpleframework.xml.core.PrimitiveInlineList: java.lang.String parent
com.thegrizzlylabs.sardineandroid.model.Link: java.util.List dst
com.thegrizzlylabs.sardineandroid.DavAce$1: int[] $SwitchMap$com$thegrizzlylabs$sardineandroid$DavPrincipal$PrincipalType
com.caij.puremusic.drive.model.SubsonicAlbum: int songCount
com.tencent.mm.opensdk.constants.ConstantsAPI$Token: java.lang.String WX_LAUNCH_PARAM_KEY
com.tencent.mm.opensdk.utils.b: java.util.concurrent.ThreadPoolExecutor b
org.simpleframework.xml.core.AnnotationHandler: java.lang.String REQUIRED
org.jaudiotagger.audio.mp3.MPEGFrameHeader: java.util.Map samplingV1Map
com.umeng.commonsdk.framework.a: android.os.Handler b
com.caij.puremusic.db.model.Song: int year
com.umeng.analytics.pro.am: java.lang.String ai
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier RESC
com.umeng.analytics.pro.d: java.lang.String S
com.umeng.commonsdk.debug.UMLog: java.lang.String TOP_BORDER
org.simpleframework.xml.core.ElementMapLabel: java.lang.Class[] items
com.umeng.analytics.b: java.lang.String s
org.simpleframework.xml.core.AttributeParameter: java.lang.Object key
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP4_CHANGES_TO_FILE_FAILED_NO_DATA
com.caij.puremusic.db.model.SongEntityQueries$SongsFromPlaylistQuery$execute$1: com.caij.puremusic.db.model.SongEntityQueries$SongsFromPlaylistQuery this$0
com.google.common.reflect.TypeToken$TypeFilter: com.google.common.reflect.TypeToken$TypeFilter[] $VALUES
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_GENRE
org.jaudiotagger.audio.wav.WavChunkType: org.jaudiotagger.audio.wav.WavChunkType FORMAT
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType UNKNOWN
org.simpleframework.xml.transform.EnumTransform: java.lang.Class type
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean skipCollapsed
com.umeng.commonsdk.internal.c: java.lang.reflect.Method l
com.umeng.analytics.pro.cb: byte k
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country SAMOA
com.umeng.analytics.pro.o$a: int w
com.umeng.commonsdk.framework.a: java.util.ArrayList m
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_RECOMMENDED_BUFFER_SIZE
com.umeng.commonsdk.statistics.proto.Response$e: com.umeng.commonsdk.statistics.proto.Response$e c
org.jaudiotagger.tag.mp4.field.Mp4FieldType: int fileClassId
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt[] zzZ
org.jaudiotagger.audio.mp3.MP3AudioHeader: double timePerFrame
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzf
com.google.android.gms.auth.api.signin.internal.SignInConfiguration: android.os.Parcelable$Creator CREATOR
com.tencent.mm.opensdk.modelbiz.WXLaunchWxaRedirectingPage$ConstantsWxaRedirectingPage: java.lang.String KEY_INVOKE_TICKET
com.umeng.commonsdk.UMConfigure: boolean shouldCheckShareSdk
com.caij.puremusic.db.model.SongQueries$SongsByAlumIdQuery: long albumId
org.jcodec.containers.mp4.boxes.EsdsBox$DecoderConfig: int objectType
com.umeng.analytics.pro.o$a: int d
com.umeng.analytics.pro.bn: byte[] m
com.umeng.analytics.pro.l: boolean l
org.jaudiotagger.tag.id3.AbstractTagFrameBody: org.jaudiotagger.tag.id3.AbstractTagFrame header
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int layer
com.umeng.analytics.pro.o: java.lang.String r
org.jaudiotagger.tag.reference.MusicalKey: org.jaudiotagger.tag.reference.MusicalKey NOTE_A
com.caij.puremusic.db.model.AlbumQueries$album$2: com.caij.puremusic.db.model.AlbumQueries$album$2 INSTANCE
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzM
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_REVERB_FEEDBACK_LEFT_TO_LEFT
org.jaudiotagger.tag.id3.AbstractID3v1Tag: int TAG_LENGTH
org.simpleframework.xml.core.CompositeInlineMap: org.simpleframework.xml.core.Entry entry
org.jaudiotagger.tag.id3.ID3v24Tag: java.lang.String TYPE_CRCDATA
com.umeng.commonsdk.stateless.b$1: com.umeng.commonsdk.stateless.b a
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script YI
com.umeng.analytics.a: int e
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country TONGA
com.umeng.analytics.pro.am: java.lang.String E
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_CONTENT_GROUP_DESC
com.alipay.android.phone.mrpc.core.HttpUrlHeader: long serialVersionUID
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.umeng.analytics.pro.d: java.lang.String k
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier MVRA
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MUSICBRAINZ_RELEASEID
com.umeng.analytics.pro.am: java.lang.String aL
com.caij.puremusic.drive.model.ADriveItem: java.lang.String created_at
org.simpleframework.xml.core.MethodScanner: org.simpleframework.xml.core.Support support
com.umeng.commonsdk.config.d$d: com.umeng.commonsdk.config.d$d l
com.google.android.material.bottomsheet.BottomSheetBehavior$5: int val$state
com.caij.puremusic.drive.model.User$$serializer: com.caij.puremusic.drive.model.User$$serializer INSTANCE
com.tencent.bugly.proguard.w: boolean a
com.tencent.bugly.crashreport.common.strategy.StrategyBean: long v
com.caij.puremusic.fragments.NowPlayingScreen: int drawableResId
com.caij.puremusic.db.model.SongQueries$SearchSongsByTitleQuery: com.caij.puremusic.db.model.SongQueries this$0
com.tencent.bugly.proguard.bo: java.util.Map r
org.jaudiotagger.audio.ogg.util.OggPageHeader$HeaderTypeFlag: org.jaudiotagger.audio.ogg.util.OggPageHeader$HeaderTypeFlag CONTINUED_PACKET
com.caij.puremusic.drive.model.SongItem: java.util.List Artists
org.jaudiotagger.audio.mp3.VbriFrame: int BYTE_3
com.caij.puremusic.network.model.LastFmTrack$Track$Toptags$Tag: java.lang.String name
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey QUALITY
com.umeng.commonsdk.framework.UMWorkDispatch: int MSG_CHECKER_TIMER
org.jcodec.containers.mp4.boxes.GenericMediaInfoBox: short bOpColor
com.tencent.mm.opensdk.modelbiz.WXChannelJumpMiniProgramInfo: java.lang.String username
com.umeng.vt.diff.V: java.lang.String EVENT_BINDINGS
com.caij.puremusic.drive.model.PlexArtistsResponse$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey IS_CLASSICAL
com.alipay.android.phone.mrpc.core.HttpException: int NETWORK_SCHEDULE_ERROR
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State RESUMED
org.jaudiotagger.tag.datatype.MultipleTextEncodedStringNullTerminated$Values: java.util.List valueList
org.simpleframework.xml.stream.OutputElement: java.lang.String name
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int MASK_MP3_BITRATE
org.jaudiotagger.audio.aiff.AiffUtil: java.text.SimpleDateFormat dateFmt
com.caij.puremusic.db.model.SongEntityQueries$songsFromPlaylist$2: com.caij.puremusic.db.model.SongEntityQueries$songsFromPlaylist$2 INSTANCE
com.caij.puremusic.drive.model.Metadata: java.lang.String guid
com.caij.puremusic.drive.model.AlbumSubsonicResponse: java.lang.String version
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country AMERICAN_SAMOA
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey PERFORMER_NAME
com.umeng.commonsdk.framework.UMWorkDispatch: java.lang.String GENERAL_HEADER
org.simpleframework.xml.core.GetPart: org.simpleframework.xml.util.Cache cache
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey DJMIXER
com.caij.puremusic.db.model.SongQueries$SongsByArtistQuery$execute$1: com.caij.puremusic.db.model.SongQueries$SongsByArtistQuery this$0
org.jaudiotagger.audio.ogg.OggVorbisTagWriter: org.jaudiotagger.audio.ogg.OggVorbisTagReader reader
com.tencent.mm.opensdk.channel.MMessageActV2$Args: int flags
com.caij.puremusic.db.model.SongQueries$SongByPathQuery$execute$1: com.caij.puremusic.db.model.SongQueries$SongByPathQuery this$0
com.tencent.bugly.crashreport.crash.CrashDetailBean: boolean j
org.simpleframework.xml.core.ElementListUnionParameter: org.simpleframework.xml.core.Expression expression
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country MALAWI
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey CUSTOM4
com.caij.puremusic.drive.model.PlaylistResponse$$serializer: com.caij.puremusic.drive.model.PlaylistResponse$$serializer INSTANCE
com.google.android.gms.internal.play_billing.zzew: com.google.android.gms.internal.play_billing.zzew zza
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier TRACK_GAIN
com.tencent.mm.opensdk.constants.Build: int SUPPORTED_SEND_TO_STATUS
com.caij.puremusic.db.model.ServerAudioFormatQueries$insert$2: com.caij.puremusic.db.model.ServerAudioFormatQueries$insert$2 INSTANCE
com.tencent.mm.opensdk.modelmsg.WXMusicObject: int LENGTH_LIMIT
org.jaudiotagger.audio.ogg.util.VorbisHeader: int FIELD_PACKET_TYPE_LENGTH
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: java.lang.String md5
com.tencent.bugly.proguard.as: com.tencent.bugly.BuglyStrategy$a g
org.jcodec.containers.mp4.boxes.ChunkOffsetsBox: long[] chunkOffsets
org.jaudiotagger.tag.id3.Id3FieldType: org.jaudiotagger.tag.id3.Id3FieldType USER_DEFINED_TEXT
com.umeng.analytics.pro.am: java.lang.String aU
org.jaudiotagger.tag.vorbiscomment.VorbisCommentReader: int FIELD_USER_COMMENT_LIST_LENGTH
com.alipay.android.app.IAlixPay$Stub: int TRANSACTION_unregisterCallback
com.umeng.analytics.pro.aa: boolean b
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey CN_ID
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script MOON
org.jaudiotagger.tag.id3.AbstractID3v1Tag: java.util.regex.Pattern endofStringPattern
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey ALBUMARTISTSORT
com.umeng.analytics.pro.an: com.umeng.analytics.pro.bp s
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey TRACK_TOTAL
com.google.android.gms.internal.play_billing.zzew: com.google.android.gms.internal.play_billing.zzew zzk
com.caij.puremusic.drive.model.AlbumItem$$serializer: com.caij.puremusic.drive.model.AlbumItem$$serializer INSTANCE
com.tencent.mm.opensdk.modelbiz.OpenBusiLuckyMoney$Req: java.lang.String packageExt
org.jaudiotagger.tag.id3.ID3v23PreferredFrameOrderComparator: java.util.List frameIdsInPreferredOrder
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MOOD_PARTY
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a p
com.umeng.commonsdk.statistics.common.ReportPolicy: int IMMEDIATE
com.alipay.android.phone.mrpc.core.HttpException: int NETWORK_IO_EXCEPTION
org.simpleframework.xml.core.InstanceFactory$ValueInstance: org.simpleframework.xml.strategy.Value value
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey COVER_ART
com.umeng.analytics.pro.am: java.lang.String ap
org.simpleframework.xml.core.InstantiatorBuilder: org.simpleframework.xml.core.Detail detail
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_WORK_PART_LEVEL6_ID
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState CPU_ACQUIRED
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey ORIGINAL_YEAR
com.tencent.mm.opensdk.modelmsg.WXMediaMessage: int MESSAGE_EXT_LENGTH_LIMIT
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataCueSheet: java.nio.ByteBuffer data
com.umeng.commonsdk.statistics.proto.a$e: com.umeng.commonsdk.statistics.proto.a$e b
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse$$serializer: com.caij.puremusic.drive.model.JellyfinPlaylistsResponse$$serializer INSTANCE
com.umeng.analytics.AnalyticsConfig: java.lang.String c
com.umeng.analytics.pro.ao: java.lang.Object b
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzT
com.umeng.commonsdk.statistics.internal.c: boolean e
org.jaudiotagger.audio.io.FileOperator: int BUFFER_SIZE
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTagField: java.lang.String id
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country GREENLAND
org.jaudiotagger.tag.reference.PictureTypes: java.lang.String DEFAULT_VALUE
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_WORK_PART_LEVEL6_TYPE
com.tencent.bugly.proguard.aa: java.lang.String ac
com.umeng.analytics.pro.m: int b
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: okhttp3.OkHttpClient client
org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile: org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile SCALEABLE
com.caij.puremusic.drive.model.SubsonicPlaylist: java.lang.String owner
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_LAUNCH_WX_MINIPROGRAM
com.tencent.bugly.proguard.ag: com.tencent.bugly.proguard.ad b
com.caij.puremusic.drive.model.SubsonicSearchListResponse: com.caij.puremusic.drive.model.SubsonicSearchResponse subsonicResponse
org.jaudiotagger.tag.mp4.field.Mp4FieldType: java.util.HashMap fileClassIdFiedTypeMap
io.ktor.utils.io.ByteBufferChannel: io.ktor.utils.io.internal.JoiningState joining
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier INFU
org.jcodec.containers.mp4.boxes.TrackHeaderBox: long altGroup
org.simpleframework.xml.core.PrimitiveScanner: org.simpleframework.xml.core.Section section
com.tencent.bugly.proguard.ay: java.lang.Object j
com.umeng.commonsdk.utils.UMUtils: java.lang.String TAG
org.jaudiotagger.tag.id3.ID3v24Tag: int TAG_EXT_NUMBER_BYTES_DATA_LENGTH
org.jaudiotagger.tag.id3.ID3v24Tag: int MASK_V24_TAG_SIZE_RESTRICTIONS
org.jaudiotagger.tag.id3.ID3v22Tag: java.lang.String TYPE_COMPRESSION
org.jaudiotagger.audio.flac.FlacStreamReader: java.util.logging.Logger logger
com.caij.puremusic.drive.model.PlayListItem$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.umeng.commonsdk.internal.c: java.lang.Class i
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_RELEASETRACKID
com.umeng.vt.diff.V: java.lang.String SP_EDITS_FILE
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdTypeCountQuery: long albumId
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_TYER
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey WORK_PART_LEVEL2_TYPE
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.Id3FieldType fieldType
org.jaudiotagger.tag.id3.framebody.FrameBodyASPI: java.lang.String FRACTION_AT_INDEX
com.caij.puremusic.drive.model.OneDriveFile: com.caij.puremusic.drive.model.OneDriveFile$Companion Companion
com.caij.puremusic.db.model.Song: long sourceId
com.umeng.commonsdk.framework.UMModuleRegister: java.util.HashMap mModuleMap
org.jaudiotagger.tag.id3.ID3v23Frame$StatusFlags: java.lang.String TYPE_FILEALTERPRESERVATION
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier MDIA
com.caij.puremusic.drive.model.OneDriveFolder: int childCount
org.jaudiotagger.audio.opus.OpusHeader: int HEAD_CAPTURE_PATTERN_LENGTH
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: org.jaudiotagger.audio.aiff.chunk.AiffCompressionType FL32
org.jaudiotagger.tag.id3.ID3v23Tag: int MASK_V23_EXTENDED_HEADER
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL6_ID
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey CLASSICAL_CATALOG
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: org.jaudiotagger.audio.aiff.chunk.AiffCompressionType ALAW
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_RELEASEGROUPID
com.tencent.bugly.proguard.bt: java.util.Map g
com.umeng.analytics.pro.ay: com.umeng.analytics.pro.bu a
com.google.android.material.bottomsheet.BottomSheetDialog: com.google.android.material.bottomsheet.BottomSheetDialog$EdgeToEdgeCallback edgeToEdgeCallback
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b p
com.alipay.android.app.IRemoteServiceCallback$Stub: int TRANSACTION_startActivity
org.simpleframework.xml.core.ElementMapUnionLabel: org.simpleframework.xml.core.GroupExtractor extractor
com.tencent.bugly.proguard.ax: java.util.Map b
com.umeng.commonsdk.framework.a: android.content.IntentFilter k
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country PERU
com.alipay.sdk.m.u.g: com.alipay.sdk.m.u.g f
com.thegrizzlylabs.sardineandroid.model.Resourcetype: com.thegrizzlylabs.sardineandroid.model.Principal principal
org.jaudiotagger.tag.id3.valuepair.StandardIPLSKey: org.jaudiotagger.tag.id3.valuepair.StandardIPLSKey[] $VALUES
org.simpleframework.xml.core.Primitive: java.lang.Class expect
org.jaudiotagger.tag.mp4.Mp4NonStandardFieldKey: org.jaudiotagger.tag.mp4.Mp4NonStandardFieldKey APTY
org.jaudiotagger.audio.SupportedFileFormat: org.jaudiotagger.audio.SupportedFileFormat OGG
com.caij.puremusic.network.model.TokenStore: com.caij.puremusic.network.model.TokenStore INSTANCE
com.google.android.material.bottomsheet.BottomSheetBehavior: androidx.customview.widget.ViewDragHelper$Callback dragCallback
org.jaudiotagger.tag.id3.valuepair.MusicianCredits: java.util.Set musicianCredits
com.umeng.commonsdk.UMConfigure: java.lang.String WRAPER_TYPE_FLUTTER
com.google.android.exoplayer2.metadata.dvbsi.AppInfoTable: android.os.Parcelable$Creator CREATOR
com.umeng.analytics.pro.bn$a: boolean a
com.umeng.analytics.pro.l: boolean c
com.caij.puremusic.drive.model.DriveFile: java.lang.String id
com.alipay.android.phone.mrpc.core.o: byte[] c
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier DREF
com.caij.puremusic.db.model.PlaylistEntityQueries$SearchPlaylistByNameQuery: com.caij.puremusic.db.model.PlaylistEntityQueries this$0
com.umeng.commonsdk.statistics.idtracking.ImprintHandler$a: java.util.Map a
com.tencent.mm.opensdk.constants.ConstantsAPI$Token: java.lang.String WX_TOKEN_VALUE_MSG
com.tencent.bugly.crashreport.common.info.PlugInBean: java.lang.String c
org.simpleframework.xml.core.ElementUnionLabel: org.simpleframework.xml.core.GroupExtractor extractor
com.umeng.analytics.pro.u: long k
com.tencent.bugly.proguard.z: android.app.ActivityManager c
com.umeng.commonsdk.utils.UMUtils: java.lang.String SP_FILE_NAME
com.umeng.analytics.pro.u: java.lang.String c
org.jaudiotagger.tag.id3.framebody.FrameBodyTIPL: java.lang.String PRODUCER
com.tencent.mm.opensdk.constants.Build: int SUBSCRIBE_MESSAGE_SUPPORTED_SDK_INT
com.umeng.commonsdk.UMConfigureImpl: java.util.concurrent.CopyOnWriteArrayList b
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_DISCID
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey CONDUCTOR_SORT
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script KHAROSHTHI
kotlinx.serialization.json.internal.WriteMode: char end
com.caij.puremusic.network.model.LastFmAlbum$Album$Tags: java.util.List tag
com.umeng.analytics.filter.EventList: java.lang.String mEventListKey
org.jaudiotagger.audio.aiff.chunk.AiffChunkType: org.jaudiotagger.audio.aiff.chunk.AiffChunkType COMMENTS
org.jaudiotagger.audio.mp4.ChunkReader: org.jcodec.containers.mp4.boxes.SampleSizesBox stsz
com.tencent.mm.opensdk.modelmsg.LaunchFromWX$Req: java.lang.String messageAction
com.tencent.bugly.crashreport.crash.CrashDetailBean: java.lang.String f
com.tencent.mm.opensdk.constants.Build: int MINIPROGRAM_SUPPORTED_SDK_INT
com.umeng.analytics.process.UMProcessDBDatasSender: java.util.concurrent.ScheduledThreadPoolExecutor executor
org.jaudiotagger.audio.aiff.chunk.AiffChunkType: org.jaudiotagger.audio.aiff.chunk.AiffChunkType APPLICATION
com.google.common.base.AbstractIterator$State: com.google.common.base.AbstractIterator$State[] $VALUES
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey COUNTRY
org.simpleframework.xml.core.CompositeMapUnion: org.simpleframework.xml.core.Context context
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] $VALUES
org.jaudiotagger.audio.dsf.DsdChunk: long metadataOffset
org.repackage.com.meizu.flyme.openidsdk.b: org.repackage.com.meizu.flyme.openidsdk.OpenId c
com.caij.puremusic.drive.model.DavProperties: long modified
com.caij.puremusic.drive.model.DavProperties: long creation
com.umeng.commonsdk.internal.utils.e$a: java.lang.String[] b
org.simpleframework.xml.stream.OutputElement: org.simpleframework.xml.stream.OutputNode parent
com.tencent.bugly.crashreport.common.strategy.StrategyBean: boolean k
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String sSimSerialNumber
com.tencent.bugly.proguard.at: com.tencent.bugly.proguard.ac u
com.google.android.gms.internal.play_billing.zzfj: java.lang.String zzf
org.jcodec.containers.mp4.boxes.MovieHeaderBox: int[] matrix
org.jaudiotagger.tag.TagOptionSingleton: org.jaudiotagger.tag.options.PadNumberOption padNumberTotalLength
com.tencent.bugly.proguard.aa: java.lang.String aj
com.umeng.commonsdk.statistics.UMServerURL: java.lang.String PATH_PUSH_LOG
com.alipay.sdk.m.r.a: com.alipay.sdk.m.r.a d
com.caij.puremusic.drive.model.Location: com.caij.puremusic.drive.model.Location$Companion Companion
com.tencent.bugly.proguard.av: java.lang.Thread$UncaughtExceptionHandler f
com.umeng.analytics.pro.am: java.lang.String bb
com.caij.puremusic.db.model.Folder: int type
com.tencent.bugly.crashreport.common.strategy.StrategyBean: long w
org.jaudiotagger.audio.asf.data.AudioStreamChunk: long samplingRate
org.jaudiotagger.audio.mp4.Mp4FileReader: org.jaudiotagger.audio.mp4.Mp4InfoReader ir
org.simpleframework.xml.core.ElementArrayParameter: org.simpleframework.xml.core.Label label
com.umeng.commonsdk.utils.d: java.lang.String Y
com.tencent.bugly.proguard.as: java.util.Map j
com.umeng.commonsdk.statistics.internal.c: android.content.Context c
com.umeng.commonsdk.config.d$c: com.umeng.commonsdk.config.d$c m
com.umeng.analytics.pro.e$d$b: java.lang.String b
com.umeng.analytics.pro.e: int c
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_SELLER_NAME
com.tencent.mm.opensdk.modelbiz.SubscribeMessage$Req: java.lang.String reserved
org.jaudiotagger.audio.mp4.ChunkReader: long[] chunkOffsets
com.google.android.material.bottomsheet.BottomSheetBehavior: int SAVE_FIT_TO_CONTENTS
com.caij.puremusic.db.model.Song: java.lang.String albumArtist
org.jaudiotagger.tag.mp4.field.Mp4FieldType: org.jaudiotagger.tag.mp4.field.Mp4FieldType TEXT_JAPANESE
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_WORK_PART_LEVEL6_ID
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey IS_CLASSICAL
com.umeng.commonsdk.config.d: int g
com.alipay.tscenter.biz.rpc.vkeydfp.result.BaseResult: boolean success
org.simpleframework.xml.core.Variable$Adapter: org.simpleframework.xml.core.Label label
com.umeng.analytics.pro.a$a: int e
org.jaudiotagger.audio.generic.GenericAudioHeader: java.lang.Boolean isVbr
com.caij.puremusic.db.model.ServerLyrics: long sourceId
com.caij.puremusic.db.model.PlaylistEntityQueries$GetPlaylistEntityByIdQuery: com.caij.puremusic.db.model.PlaylistEntityQueries this$0
org.simpleframework.xml.util.Resolver$Stack: org.simpleframework.xml.util.Resolver this$0
org.jaudiotagger.tag.images.StandardArtwork: boolean isLinked
com.umeng.analytics.pro.au: com.umeng.analytics.pro.bz j
nl.adaptivity.xmlutil.serialization.OutputKind: nl.adaptivity.xmlutil.serialization.OutputKind[] $VALUES
org.jaudiotagger.utils.FileTypeUtil: java.lang.Integer[] mp3v1Sig_2
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey ENCODER
org.simpleframework.xml.stream.InputNodeMap: org.simpleframework.xml.stream.InputNode source
org.jaudiotagger.audio.asf.data.MetadataDescriptor: long DWORD_MAXVALUE
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country MOLDOVA
org.xmlpull.v1.XmlPullParser: int END_TAG
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: java.lang.String appId
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding QUALITY
com.caij.puremusic.network.model.LastFmTrack$Track$Toptags: java.util.List tag
com.umeng.analytics.pro.a$a: int b
org.repackage.com.vivo.identifier.IdentifierIdClient: org.repackage.com.vivo.identifier.IdentifierIdObserver r
com.caij.puremusic.drive.model.DavProperties: long contentLength
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_WORK_PART_LEVEL4_ID
com.umeng.analytics.pro.j: java.lang.String ah
com.caij.puremusic.drive.model.SubsonicResponse: com.caij.puremusic.drive.model.AlbumList albumList2
com.umeng.commonsdk.debug.UMLogCommon: java.lang.String SC_10016
com.caij.vip.GoodOrder: int state
org.simpleframework.xml.transform.DateType: org.simpleframework.xml.transform.DateType[] $VALUES
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey KEY_OLD
com.tencent.mm.opensdk.constants.Build: int EMOJI_SUPPORTED_SDK_INT
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_SET
com.umeng.commonsdk.internal.utils.b: long f
com.thegrizzlylabs.sardineandroid.DavResource: java.lang.String SEPARATOR
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String sAppPkgName
com.umeng.analytics.pro.e$b$b: java.lang.String f
nl.adaptivity.xmlutil.serialization.InputKind: nl.adaptivity.xmlutil.serialization.InputKind Element
com.google.android.material.bottomsheet.BottomSheetBehavior: int SAVE_HIDEABLE
org.jaudiotagger.tag.images.StandardArtwork: java.lang.String imageUrl
com.umeng.analytics.pro.bo$b: byte b
com.umeng.commonsdk.statistics.UMServerURL: java.lang.String SILENT_HEART_BEAT
org.jaudiotagger.tag.lyrics3.Lyrics3v2Fields: java.lang.String FIELD_V2_ADDITIONAL_MULTI_LINE_TEXT
com.caij.puremusic.db.model.PlaylistEntityQueries$PlaylistByNameQuery: java.lang.String playlistName
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_WORKID
org.repackage.com.zui.opendeviceidlibrary.BuildConfig: java.lang.String c
com.caij.puremusic.drive.model.AMediaContainer$$serializer: com.caij.puremusic.drive.model.AMediaContainer$$serializer INSTANCE
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean gestureInsetBottomIgnored
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_FILE_OWNER
com.tencent.mm.opensdk.modelmsg.WXGameVideoFileObject: java.lang.String filePath
com.google.common.collect.MapMakerInternalMap$Strength: com.google.common.collect.MapMakerInternalMap$Strength STRONG
io.ktor.websocket.CloseReason$Codes: io.ktor.websocket.CloseReason$Codes CLOSED_ABNORMALLY
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey GROUPING
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_WORK_PART_LEVEL3_TYPE
com.umeng.commonsdk.statistics.internal.StatTracer: java.lang.String KEY_CLIENT_REQUEST_LATENCY
org.simpleframework.xml.DefaultType: org.simpleframework.xml.DefaultType[] $VALUES
com.umeng.analytics.process.a: java.lang.String h
com.tencent.bugly.crashreport.biz.UserInfoBean: java.util.Map s
com.caij.puremusic.db.model.Album: java.lang.String composer
org.jaudiotagger.audio.asf.io.CountingOutputstream: java.io.OutputStream wrapped
org.jaudiotagger.tag.datatype.PartOfSet$PartOfSetValue: java.lang.Integer count
com.tencent.bugly.proguard.aa: java.lang.String g
com.google.android.gms.internal.play_billing.zzew: com.google.android.gms.internal.play_billing.zzew zzo
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: java.lang.String DEFAULT
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script SAMARITAN
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey ACOUSTID_ID
org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId: android.content.ServiceConnection e
com.caij.puremusic.db.model.SongQueries$songByPath$1: com.caij.puremusic.db.model.SongQueries this$0
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey ALBUM
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script OLD_PERSIAN
org.jaudiotagger.tag.id3.ID3v23Frame: int FRAME_FLAGS_SIZE
com.alipay.sdk.m.u.g: com.alipay.sdk.m.u.g q
org.simpleframework.xml.core.GroupExtractor: org.simpleframework.xml.core.LabelMap elements
com.thegrizzlylabs.sardineandroid.impl.SardineException: long serialVersionUID
com.umeng.analytics.pro.e$d$b: java.lang.String j
com.umeng.commonsdk.statistics.proto.a: int m
com.caij.puremusic.db.model.AlbumQueries$searchAlbumsByName$1: com.caij.puremusic.db.model.AlbumQueries this$0
com.umeng.analytics.pro.an$e: short l
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b k
org.jaudiotagger.tag.id3.valuepair.ID3V2ExtendedGenreTypes: org.jaudiotagger.tag.id3.valuepair.ID3V2ExtendedGenreTypes RX
com.tencent.bugly.CrashModule: com.tencent.bugly.CrashModule e
com.google.android.material.bottomsheet.BottomSheetBehavior$4: com.google.android.material.bottomsheet.BottomSheetBehavior this$0
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey ALBUM_ARTISTS
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey RECORD_LABEL
org.jaudiotagger.tag.id3.AbstractID3v2Tag: int FIELD_TAG_FLAG_LENGTH
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey ALBUM_ARTISTS
com.tencent.mm.opensdk.channel.a.a$a: java.lang.String a
org.jaudiotagger.tag.id3.AbstractID3v1Tag: int FIELD_TITLE_LENGTH
com.umeng.commonsdk.statistics.noise.Defcon: long MILLIS_24_HOURS
com.tencent.mm.opensdk.modelbiz.WXInvoiceAuthInsert$Req: java.lang.String TAG
com.google.android.gms.internal.play_billing.zzcj: com.google.android.gms.internal.play_billing.zzcj zzh
com.tencent.bugly.proguard.bt: long h
org.jaudiotagger.audio.mp3.MP3AudioHeader: long startByte
com.umeng.commonsdk.statistics.idtracking.h: java.lang.String c
org.jaudiotagger.audio.dsf.FmtChunk: java.util.logging.Logger logger
com.tencent.bugly.crashreport.common.strategy.StrategyBean: java.lang.String a
org.jaudiotagger.audio.mp3.MP3File: int LOAD_IDV2TAG
com.tencent.mm.opensdk.modelmsg.WXEmojiPageSharedObject: java.lang.String secondUrl
com.tencent.mm.opensdk.modelbiz.IWXChannelJumpInfo: int WX_CHANNEL_JUMP_TYPE_URL
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind MPEG4_VIDEO
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: java.lang.String provider
androidx.fragment.app.DialogFragment: android.content.DialogInterface$OnCancelListener mOnCancelListener
org.jaudiotagger.audio.aiff.ExtDouble: byte[] _rawData
com.umeng.commonsdk.statistics.idtracking.e: com.umeng.commonsdk.statistics.idtracking.e b
com.umeng.commonsdk.internal.c$1: android.content.Context a
com.caij.puremusic.db.model.SongEntityQueries$SongsFromPlaylistQuery: long playlistId
androidx.constraintlayout.core.widgets.ConstraintAnchor$Type: androidx.constraintlayout.core.widgets.ConstraintAnchor$Type[] $VALUES
com.thegrizzlylabs.sardineandroid.model.Group: java.lang.String href
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction VALUE
org.simpleframework.xml.core.ElementListUnionParameter: java.lang.Class type
com.tencent.bugly.proguard.bg: boolean c
com.caij.puremusic.db.model.SongEntityQueries$GetPlaylistLastAddSongQuery$execute$1: com.caij.puremusic.db.model.SongEntityQueries$GetPlaylistLastAddSongQuery this$0
org.simpleframework.xml.core.LabelGroup: java.util.List list
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey REMIXER
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey ACOUSTID_FINGERPRINT_OLD
org.simpleframework.xml.stream.Formatter: char[] DOUBLE
com.r0adkll.slidr.model.SlidrPosition: com.r0adkll.slidr.model.SlidrPosition HORIZONTAL
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_OPEN_RANK_LIST
com.tencent.bugly.proguard.ap: java.util.Map a
com.tencent.bugly.proguard.g: java.util.Map l
com.umeng.analytics.pro.br: int c
com.caij.puremusic.db.model.ServerAudioFormatQueries$GetByIdQuery: long id
com.tencent.bugly.proguard.aq: com.tencent.bugly.proguard.aq d
org.jaudiotagger.audio.ogg.util.OggPageHeader: boolean isValid
org.jaudiotagger.tag.id3.valuepair.TextEncoding: java.lang.String CHARSET_US_ASCII
com.umeng.analytics.pro.o$a: int m
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country LIBERIA
org.jaudiotagger.tag.id3.ID3v23Tag: byte REVISION
com.umeng.commonsdk.UMInnerImpl$2: android.content.Context a
org.simpleframework.xml.core.Source: org.simpleframework.xml.core.TemplateEngine engine
com.caij.vip.PayBody: int payType
org.jaudiotagger.audio.wav.chunk.WavChunkSummary: java.util.logging.Logger logger
com.tencent.mm.opensdk.modelmsg.WXMusicVideoObject: java.lang.String singerName
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String FBPM
org.jaudiotagger.test.MergeID3AndMP3Files$MP3FileFilter: boolean allowDirectories
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_OPEN_CUSTOMER_SERVICE_CHAT
com.tencent.bugly.proguard.aa: java.lang.String ai
org.jcodec.containers.mp4.boxes.GenericMediaInfoBox: short graphicsMode
com.tencent.mm.opensdk.modelmsg.WXMusicVideoObject: java.lang.String identification
org.jcodec.containers.mp4.boxes.MovieHeaderBox: int nextTrackId
com.umeng.analytics.pro.j: java.lang.String S
com.caij.puremusic.model.Home: java.util.List arrayList
com.tencent.mm.opensdk.modelbiz.WXChannelShareVideo$Req: com.tencent.mm.opensdk.modelbiz.IWXChannelJumpInfo jumpInfo
com.caij.puremusic.db.model.SongQueries$SongsByIdsQuery: com.caij.puremusic.db.model.SongQueries this$0
org.simpleframework.xml.stream.Formatter: org.simpleframework.xml.stream.OutputBuffer buffer
com.caij.puremusic.drive.model.EmbyFoldersResponse$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.thegrizzlylabs.sardineandroid.impl.SardineException: int statusCode
org.jaudiotagger.audio.mp3.XingFrame: int BYTE_2
org.simpleframework.xml.core.Source: org.simpleframework.xml.strategy.Strategy strategy
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey WORK
com.umeng.commonsdk.statistics.noise.ABTest: int mInterval
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType WIFI_P2P
org.jaudiotagger.audio.generic.AbstractTag$1: java.util.Iterator val$it
com.tencent.bugly.proguard.bo: java.lang.String e
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: java.util.Enumeration EMPTY_ENUMERATION
com.umeng.commonsdk.statistics.internal.StatTracer: int MAX_REQUEST_LIMIT
com.umeng.analytics.MobclickAgent$PageMode: com.umeng.analytics.MobclickAgent$PageMode AUTO
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey PART_OF_GAPLESS_ALBUM
com.umeng.commonsdk.framework.UMFrUtils: java.lang.String mDefaultEnvelopeDir
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b[] J
com.caij.puremusic.fragments.NowPlayingScreen: int id
org.simpleframework.xml.core.ObjectInstance: java.lang.Class type
org.simpleframework.xml.core.CacheLabel: org.simpleframework.xml.core.Contact contact
org.jcodec.containers.mp4.boxes.AudioSampleEntry: java.util.Set pcms
com.umeng.commonsdk.statistics.noise.ABTest: int mPolicy
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode REFUSED_STREAM
com.tencent.bugly.proguard.r: boolean d
com.umeng.analytics.pro.bv: int e
com.umeng.commonsdk.statistics.noise.ImLatent: long _ONE_HOURS_IN_MS
org.jaudiotagger.audio.generic.AudioFileReader: java.util.logging.Logger logger
org.jaudiotagger.tag.id3.ID3Tags: java.util.logging.Logger logger
com.tencent.bugly.proguard.aa: boolean S
com.thegrizzlylabs.sardineandroid.util.SardineUtil: java.lang.String CUSTOM_NAMESPACE_PREFIX
com.caij.puremusic.model.DriveFileParcelable: java.lang.String url
org.simpleframework.xml.stream.Indenter$Cache: int count
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country BHUTAN
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int VERSION_2_5
org.repackage.com.meizu.flyme.openidsdk.SupportInfo: java.lang.String a
org.jaudiotagger.audio.wav.WavTagWriter$BothTagsFileStructure: org.jaudiotagger.audio.wav.WavTagWriter this$0
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String id
com.tencent.mm.opensdk.modelmsg.SendTdiAuth$Resp: java.lang.String KEY_AUTH_BUFFER
com.umeng.analytics.pro.au: int c
com.thegrizzlylabs.sardineandroid.DavPrincipal: javax.xml.namespace.QName property
org.jaudiotagger.audio.wav.chunk.WavFormatChunk: java.lang.String WAV_RIFF_ENCODING_PREPEND
org.jaudiotagger.audio.mp3.XingFrame: byte[] XING_CBR_ID
com.tencent.bugly.proguard.s: long f
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MOOD_AROUSAL
com.caij.puremusic.model.PlaylistWrapper: com.caij.puremusic.db.model.PlaylistEntity playlistEntity
com.tencent.mm.opensdk.diffdev.a.c$a: com.tencent.mm.opensdk.diffdev.OAuthErrCode a
com.caij.puremusic.db.model.Folder: java.lang.String desc
com.caij.puremusic.network.model.LastFmTrack$Track$Album$Image: java.lang.String text
com.umeng.analytics.AnalyticsConfig: int e
com.umeng.commonsdk.internal.a: java.lang.String L
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportByInterval: long MIN_REPORT_INTERVAL
com.umeng.commonsdk.statistics.proto.Response: com.umeng.analytics.pro.bz STRUCT_DESC
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier UNMETERED_ONLY
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey ARTIST
org.jaudiotagger.audio.dsf.DsdChunk: long fileLength
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_SHOWMESSAGE_FROM_WX
com.alipay.android.phone.mrpc.core.HttpException: int NETWORK_SOCKET_EXCEPTION
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script BOOK_PAHLAVI
org.simpleframework.xml.core.PathParser: int off
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country SAINT_VINCENT_AND_THE_GRENADINES
org.simpleframework.xml.core.MethodPartFactory: org.simpleframework.xml.core.AnnotationFactory factory
org.jaudiotagger.tag.id3.valuepair.ImageFormats: java.util.Map imageFormatsToMimeType
org.slf4j.event.Level: org.slf4j.event.Level TRACE
com.bumptech.glide.load.EncodeStrategy: com.bumptech.glide.load.EncodeStrategy NONE
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_WORK_PART_LEVEL3
org.jaudiotagger.tag.id3.valuepair.ID3NumberTotalFields: java.util.EnumSet totalField
com.caij.puremusic.drive.model.AMediaContainer$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.simpleframework.xml.core.OverrideValue: org.simpleframework.xml.strategy.Value value
io.ktor.util.date.Month: io.ktor.util.date.Month JULY
com.umeng.analytics.pro.d: java.lang.String L
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] $VALUES
com.caij.puremusic.db.model.ServerAudioFormatQueries$GetByIdQuery$execute$1: com.caij.puremusic.db.model.ServerAudioFormatQueries$GetByIdQuery this$0
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag[] $VALUES
com.umeng.commonsdk.statistics.proto.b$e: com.umeng.commonsdk.statistics.proto.b$e a
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzr
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: int FIELD_VORBIS_VERSION_POS
com.umeng.commonsdk.statistics.proto.e: com.umeng.analytics.pro.bp g
com.caij.puremusic.db.model.Folder: long createTime
com.tencent.mm.opensdk.modelmsg.SendAuth$Req: int LENGTH_LIMIT
com.umeng.analytics.pro.j: java.lang.String r
org.jaudiotagger.tag.id3.ID3v24Tag: int MASK_V24_READ_ONLY
org.simpleframework.xml.core.PrimitiveKey: org.simpleframework.xml.core.Primitive root
com.caij.puremusic.drive.model.ArtistItem: com.caij.puremusic.drive.model.ImageTags ImageTags
com.umeng.analytics.pro.au: int d
com.tencent.bugly.crashreport.common.strategy.StrategyBean: java.lang.String r
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey QUALITY
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country SPAIN
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES
com.caij.puremusic.db.model.SongQueries$FirstSongByAlbumIdQuery: com.caij.puremusic.db.model.SongQueries this$0
com.google.common.hash.LittleEndianByteArray$UnsafeByteArray: com.google.common.hash.LittleEndianByteArray$UnsafeByteArray UNSAFE_LITTLE_ENDIAN
org.jaudiotagger.tag.mp4.Mp4TagFieldSubType: org.jaudiotagger.tag.mp4.Mp4TagFieldSubType BYTE
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_PUBLISHER
org.jaudiotagger.tag.id3.ID3v23Tag: byte MAJOR_VERSION
com.caij.puremusic.drive.model.PlaylistsMediaContainer: com.caij.puremusic.drive.model.PlaylistsMediaContainer$Companion Companion
com.tencent.mm.opensdk.constants.ConstantsAPI$WXMiniProgram: java.lang.String KEY_ACTIVITY_ID
org.jaudiotagger.tag.id3.ID3v24Tag: int TAG_EXT_HEADER_LENGTH
com.caij.puremusic.drive.model.PlexSectionsResponse: com.caij.puremusic.drive.model.PlexSectionsResponse$Companion Companion
com.bumptech.glide.Priority: com.bumptech.glide.Priority HIGH
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MOOD_RELAXED
org.jaudiotagger.audio.asf.io.ChunkHeaderReader: org.jaudiotagger.audio.asf.data.GUID[] APPLYING
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean paddingRightSystemWindowInsets
javax.xml.namespace.QName: java.lang.String namespaceURI
org.jaudiotagger.audio.aiff.chunk.AiffChunkType: org.jaudiotagger.audio.aiff.chunk.AiffChunkType CORRUPT_TAG_EARLY
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey SUBTITLE
io.ktor.utils.io.internal.JoiningState: java.lang.Object _closeWaitJob
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey TEMPO
org.jcodec.containers.mp4.boxes.TimecodeSampleEntry: int FLAG_24HOURMAX
com.google.common.base.Predicates$ObjectPredicate: com.google.common.base.Predicates$ObjectPredicate IS_NULL
org.jaudiotagger.audio.aiff.AiffTagFieldKey: org.jaudiotagger.audio.aiff.AiffTagFieldKey[] $VALUES
org.jcodec.containers.mp4.boxes.AliasBox: java.lang.String fileTypeName
org.simpleframework.xml.stream.InputAttribute: java.lang.String prefix
com.alipay.android.phone.mrpc.core.q: org.apache.http.HttpHost k
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey CUSTOM1
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey URL_DISCOGS_ARTIST_SITE
com.caij.puremusic.drive.model.DavResource: com.caij.puremusic.drive.model.DavResource$Companion Companion
org.jcodec.containers.mp4.boxes.Box: org.jcodec.containers.mp4.boxes.Header header
org.jaudiotagger.audio.AudioFile: java.lang.String extension
org.simpleframework.xml.core.AnnotationHandler: boolean required
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_ISRC
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MEDIA
org.jaudiotagger.tag.vorbiscomment.VorbisCommentReader: int FIELD_COMMENT_LENGTH_LENGTH
com.umeng.common.b: java.lang.String d
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey GROUPING
com.tencent.bugly.proguard.bo: java.util.Map B
org.simpleframework.xml.stream.Formatter: char[] SINGLE
com.tencent.bugly.crashreport.crash.CrashDetailBean: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey ENCODER
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey COVER_ART
com.alipay.tscenter.biz.rpc.vkeydfp.result.AppListResult: java.lang.String appListData
org.jaudiotagger.tag.TagOptionSingleton: boolean resetTextEncodingForExistingFrames
com.umeng.commonsdk.statistics.noise.ImLatent: int LATENT_MAX
org.jaudiotagger.logging.XMLTagDisplayFormatter: java.lang.String xmlCloseEnd
com.caij.puremusic.drive.model.SubsonicSong$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.umeng.commonsdk.vchannel.Sender: long lastTriggerTime
com.tencent.bugly.proguard.ao: java.util.concurrent.ExecutorService o
androidx.fragment.app.Fragment: android.view.ViewGroup mContainer
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier SRMB
com.caij.puremusic.drive.model.MediaContainer$$serializer: com.caij.puremusic.drive.model.MediaContainer$$serializer INSTANCE
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script CYRILLIC
com.caij.puremusic.db.model.FolderQueries: com.caij.puremusic.db.model.Folder$Adapter FolderAdapter
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_COMMENT
org.jaudiotagger.tag.id3.ID3v1Tag: java.util.EnumMap tagFieldToID3v1Field
com.caij.puremusic.drive.model.SongItem: java.lang.String AlbumArtist
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MUSICBRAINZ_RELEASE_STATUS
com.umeng.commonsdk.config.d$d: com.umeng.commonsdk.config.d$d e
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgramWithToken$Resp: int ERR_INVALID_TOKEN
com.umeng.commonsdk.internal.c$3: android.content.Context a
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MUSICBRAINZ_TRACK_ID
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat SRC
org.jaudiotagger.audio.wav.WavSubFormat: org.jaudiotagger.audio.wav.WavSubFormat FORMAT_GSM_COMPRESSED
com.caij.puremusic.drive.model.SubsonicSong: com.caij.puremusic.drive.model.SubsonicSong$Companion Companion
com.google.android.gms.internal.play_billing.zzcj: com.google.android.gms.internal.play_billing.zzcj zzf
com.umeng.commonsdk.statistics.common.DeviceTypeEnum: com.umeng.commonsdk.statistics.common.DeviceTypeEnum DEFAULT
com.tencent.mmkv.MMKVLogLevel: com.tencent.mmkv.MMKVLogLevel LevelError
com.umeng.analytics.pro.d: java.lang.String ar
com.umeng.analytics.vshelper.PageNameMonitor$a: com.umeng.analytics.vshelper.PageNameMonitor a
org.jaudiotagger.tag.id3.framebody.FrameBodyASPI: int DATA_LENGTH_FIELD_SIZE
org.jaudiotagger.tag.id3.ID3v24Tag: boolean footer
org.jaudiotagger.tag.TagOptionSingleton: boolean id3v1SaveGenre
org.jaudiotagger.tag.id3.AbstractID3v2Tag$2: int[] $SwitchMap$org$jaudiotagger$tag$FieldKey
com.umeng.commonsdk.UMConfigure: int DEVICE_TYPE_BOX
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_ALBUM
io.ktor.websocket.CloseReason$Codes: io.ktor.websocket.CloseReason$Codes GOING_AWAY
com.google.android.gms.internal.play_billing.zza: com.google.android.gms.internal.play_billing.zza zza
org.jcodec.containers.mp4.BoxFactory: org.jcodec.containers.mp4.IBoxFactory instance
com.alipay.android.app.IRemoteServiceCallback$Stub: int TRANSACTION_payEnd
com.umeng.commonsdk.stateless.a: java.lang.String k
com.google.android.material.bottomsheet.BottomSheetDragHandleView: int DEF_STYLE_RES
org.jaudiotagger.utils.DirectByteBufferUtils: java.util.logging.Logger LOGGER
org.simpleframework.xml.core.ElementParameter: java.lang.Object key
com.thegrizzlylabs.sardineandroid.model.Error: java.lang.Object any
org.jaudiotagger.audio.asf.io.FileHeaderReader: org.jaudiotagger.audio.asf.data.GUID[] APPLYING
com.caij.puremusic.db.model.SearchAlbumResultQueries$clear$1: com.caij.puremusic.db.model.SearchAlbumResultQueries$clear$1 INSTANCE
com.umeng.commonsdk.stateless.b: com.umeng.commonsdk.stateless.b$a i
org.jaudiotagger.audio.mp4.EncoderType: org.jaudiotagger.audio.mp4.EncoderType[] $VALUES
com.caij.puremusic.drive.model.SubPlayList$$serializer: com.caij.puremusic.drive.model.SubPlayList$$serializer INSTANCE
com.tencent.mm.opensdk.constants.Build: int SUBSCRIBE_MINI_PROGRAM_MSG_SUPPORTED_SDK_INT
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier TRGR
org.jaudiotagger.audio.SupportedFileFormat: org.jaudiotagger.audio.SupportedFileFormat OPUS
org.jcodec.containers.mp4.boxes.GenericMediaInfoBox: short gOpColor
com.umeng.analytics.process.a: java.lang.String e
com.umeng.commonsdk.stateless.a: java.lang.String e
com.tencent.bugly.proguard.bo: java.util.ArrayList p
com.umeng.commonsdk.statistics.proto.d: com.umeng.analytics.pro.bp i
com.tencent.mm.opensdk.modelbiz.JoinChatroom$Req: java.lang.String extMsg
com.umeng.commonsdk.internal.c: java.lang.String c
com.umeng.analytics.pro.bg: java.lang.Class a
com.thegrizzlylabs.sardineandroid.model.Owner: java.util.List content
com.thegrizzlylabs.sardineandroid.DavResource: java.lang.String DEFAULT_CONTENT_TYPE
androidx.appcompat.view.menu.ListMenuItemView: android.widget.RadioButton mRadioButton
org.simpleframework.xml.core.StructureBuilder: org.simpleframework.xml.core.LabelMap texts
com.umeng.analytics.pro.o$a: int h
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_URL_FILE_WEB
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$BreadthFirstEnumeration$Queue: org.jaudiotagger.utils.tree.DefaultMutableTreeNode$BreadthFirstEnumeration$Queue$QNode head
com.umeng.analytics.pro.bv: long h
org.jaudiotagger.tag.id3.ID3v2ChapterFrames: org.jaudiotagger.tag.id3.ID3v2ChapterFrames id3v2ChapterFrames
com.tencent.bugly.crashreport.crash.CrashDetailBean: long E
com.umeng.commonsdk.config.d: java.lang.String[] k
org.simpleframework.xml.transform.DateType: org.simpleframework.xml.transform.DateType FULL
com.umeng.analytics.pro.am: java.lang.String m
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey ENSEMBLE_SORT
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script LATIN_FRAKTUR_VARIANT
com.umeng.commonsdk.debug.UMLogCommon: java.lang.String SC_10011
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
com.tencent.bugly.proguard.at: boolean k
com.tencent.bugly.crashreport.crash.CrashDetailBean: java.lang.String w
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage GENERAL_READ_FAILED_FILE_TOO_SMALL
org.jaudiotagger.tag.mp4.field.Mp4FieldType: org.jaudiotagger.tag.mp4.field.Mp4FieldType TEXT_UTF16BE
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_GENERAL_ENCAPS_OBJECT
org.simpleframework.xml.core.ExpressionBuilder: org.simpleframework.xml.util.Cache cache
com.tencent.mm.opensdk.constants.Build: int SUPPORTED_SEND_WX_WEWORK_OBJECT
com.tencent.mm.opensdk.modelmsg.WXMediaMessage: com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject mediaObject
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey SHOW
com.umeng.commonsdk.UMConfigure$BS_TYPE: com.umeng.commonsdk.UMConfigure$BS_TYPE ULINK
com.umeng.commonsdk.statistics.noise.ImLatent: boolean mLatentActivite
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey ORIGINAL_ARTIST
org.jaudiotagger.audio.asf.data.MetadataDescriptor: int WORD_MAXVALUE
com.caij.puremusic.drive.model.AlbumItem: long RunTimeTicks
kotlinx.serialization.json.JsonArray: kotlinx.serialization.json.JsonArray$Companion Companion
com.umeng.analytics.process.a: java.lang.String a
org.jaudiotagger.audio.mp3.MPEGFrameHeader: java.util.Map mpegLayerMap
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage FLAC_NO_FLAC_HEADER_FOUND
org.jcodec.containers.mp4.boxes.EsdsBox: int trackId
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean expandedCornersRemoved
com.caij.puremusic.db.model.PlaybackSong: long id
nl.adaptivity.xmlutil.serialization.InputKind: nl.adaptivity.xmlutil.serialization.InputKind Attribute
com.umeng.commonsdk.internal.a: java.lang.String I
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzz
org.jaudiotagger.audio.wav.WavChunkType: org.jaudiotagger.audio.wav.WavChunkType FACT
com.umeng.analytics.filter.d: java.lang.String b
com.umeng.analytics.pro.bp: byte b
org.simpleframework.xml.core.CompositeListUnion: org.simpleframework.xml.stream.Style style
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier TAGS
org.jaudiotagger.audio.wav.chunk.WavId3Chunk: org.jaudiotagger.tag.wav.WavTag wavTag
org.simpleframework.xml.core.AnnotationHandler: boolean attribute
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country GUADELOUPE
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_COMMENT
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey ITUNES_GROUPING
com.umeng.commonsdk.internal.utils.c: android.content.BroadcastReceiver d
org.jaudiotagger.tag.asf.AsfTag: java.util.Set COMMON_FIELDS
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier BXML
org.jaudiotagger.audio.asf.data.AudioStreamChunk: long WMA
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MOOD_SAD
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: int peekHeight
com.umeng.analytics.pro.e$a$a: java.lang.String d
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country MALI
com.umeng.commonsdk.internal.a: int m
com.tencent.bugly.proguard.aa: java.lang.Object U
org.jcodec.containers.mp4.boxes.AliasBox: int UFT16VolumeName
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode CONNECT_ERROR
org.jaudiotagger.audio.mp3.MP3File: int LOAD_LYRICS3
com.alipay.apmobilesecuritysdk.d.e: java.util.Map a
org.simpleframework.xml.core.Comparer: java.lang.String NAME
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey WORK_PART_LEVEL1
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_COMPOSER
org.jcodec.containers.mp4.boxes.SoundMediaHeaderBox: short balance
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey WORK_PART_LEVEL2_TYPE
com.umeng.analytics.pro.d: java.lang.String aD
com.umeng.commonsdk.statistics.common.DeviceConfig: boolean hasReadSimSerialNumber
com.caij.puremusic.drive.model.OneDriveItem: java.lang.String webUrl
org.jaudiotagger.audio.mp3.MPEGFrameHeader: boolean isProtected
com.umeng.analytics.pro.o: int i
org.jaudiotagger.tag.id3.AbstractID3v2Tag: int FIELD_TAG_SIZE_LENGTH
org.simpleframework.xml.core.ClassScanner: org.simpleframework.xml.core.ConstructorScanner scanner
com.tencent.bugly.proguard.aa: java.lang.String t
com.umeng.analytics.pro.d: java.lang.String at
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey IS_SOUNDTRACK
com.caij.puremusic.drive.model.Multistatus$$serializer: com.caij.puremusic.drive.model.Multistatus$$serializer INSTANCE
com.umeng.commonsdk.utils.UMUtils: java.lang.String VALUE_SMS_VERSION
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: int colourDepth
com.tencent.mm.opensdk.modelmsg.SendAuth$Resp: java.lang.String url
org.repackage.com.meizu.flyme.openidsdk.b: org.repackage.com.meizu.flyme.openidsdk.OpenId d
org.simpleframework.xml.core.MethodDetail: java.lang.reflect.Method method
org.jaudiotagger.audio.mp3.VbriFrame: int VBRI_IDENTIFIER_BUFFER_SIZE
org.jaudiotagger.audio.AudioFile: java.io.File file
com.tencent.bugly.proguard.bq: long q
com.umeng.commonsdk.debug.UMLog: java.lang.String AQ
org.jaudiotagger.tag.id3.ID3v1FieldKey: org.jaudiotagger.tag.id3.ID3v1FieldKey COMMENT
com.tencent.mm.opensdk.modelmsg.SendAuth$Req: boolean isOption1
com.caij.puremusic.model.DriveFileParcelable: java.lang.String fileName
org.simpleframework.xml.core.GroupExtractor$Registry: org.simpleframework.xml.core.Label text
com.umeng.commonsdk.utils.d: java.lang.String F
com.tencent.mm.opensdk.modelbiz.CreateChatroom$Req: java.lang.String chatroomNickName
com.caij.puremusic.db.model.ServerArtistCover: java.lang.String url
com.thegrizzlylabs.sardineandroid.model.Propertybehavior: com.thegrizzlylabs.sardineandroid.model.Keepalive keepalive
com.tencent.bugly.proguard.bo: java.util.ArrayList A
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_URL_COPYRIGHT
com.umeng.commonsdk.statistics.common.MLog: int LEVEL_VERBOSE
com.umeng.analytics.pro.am: java.lang.String bh
com.caij.vip.PayInfos: java.util.List datas
org.jaudiotagger.audio.aiff.chunk.AiffChunkType: java.util.Map CODE_TYPE_MAP
com.umeng.analytics.pro.l$a: com.umeng.analytics.pro.l a
org.simpleframework.xml.core.CacheParameter: int index
org.simpleframework.xml.core.FieldContact: java.lang.annotation.Annotation label
org.jcodec.containers.mp4.boxes.TrackExtendsBox: int defaultSampleBytes
com.google.android.gms.internal.play_billing.zzff: int zze
com.caij.puremusic.drive.model.DropboxDriveItem: long size
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey URL_WIKIPEDIA_ARTIST_SITE
com.tencent.bugly.proguard.ai: com.tencent.bugly.proguard.w c
org.simpleframework.xml.core.ObjectInstance: org.simpleframework.xml.core.Context context
org.simpleframework.xml.transform.ArrayTransform: java.lang.Class entry
org.jaudiotagger.tag.id3.ID3v24Tag: java.lang.String TYPE_UPDATETAG
com.caij.puremusic.model.lyrics.Lyrics: boolean parsed
com.caij.puremusic.db.model.SongEntityQueries$getPlaylistLastAddSong$2: com.caij.puremusic.db.model.SongEntityQueries$getPlaylistLastAddSong$2 INSTANCE
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_ALBUMTYPE
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessWebview$Resp: java.lang.String resultInfo
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey ALBUM_ARTIST
com.tencent.bugly.proguard.ai: android.content.Context d
io.ktor.websocket.FrameType: int opcode
com.umeng.commonsdk.framework.UMModuleRegister: int PROCESS_EVENT_VALUE_HIGH
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority VERY_LOW
com.umeng.analytics.pro.bn: byte[] o
com.caij.puremusic.drive.model.JellyfinLoginResponse: com.caij.puremusic.drive.model.User User
com.tencent.bugly.proguard.at: com.tencent.bugly.proguard.at C
com.tencent.bugly.proguard.aa: java.lang.String H
org.jaudiotagger.audio.AudioFileIO: java.util.Map readers
com.umeng.analytics.pro.j: java.lang.String I
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_COMPOSER
com.tencent.mm.opensdk.modelmsg.SendAuth$Resp: java.lang.String TAG
com.umeng.commonsdk.debug.UMLogCommon: java.lang.String SC_10026
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier TITLE
org.repackage.a.a.a.a.c$a: org.repackage.a.a.a.a.c a
com.caij.puremusic.db.model.SongQueries$songsDateLastDesc$1: com.caij.puremusic.db.model.SongQueries this$0
com.umeng.commonsdk.config.d$c: com.umeng.commonsdk.config.d$c e
org.simpleframework.xml.core.StructureBuilder: org.simpleframework.xml.core.Model root
com.umeng.commonsdk.internal.c: java.lang.reflect.Method j
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] $VALUES
io.github.aakira.napier.LogLevel: io.github.aakira.napier.LogLevel WARNING
org.jaudiotagger.tag.id3.ID3v24Tag: int MASK_V24_TEXT_ENCODING_RESTRICTIONS
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean checkSignature
org.jcodec.containers.mp4.boxes.ColorExtension: byte RANGE_UNSPECIFIED
com.alipay.android.phone.mrpc.core.q: int m
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier MOOF
androidx.appcompat.widget.AppCompatImageView: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
com.caij.puremusic.drive.model.AlbumItem$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.umeng.commonsdk.stateless.a: long d
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier IPMC
org.jaudiotagger.tag.reference.Tagger: org.jaudiotagger.tag.reference.Tagger MP3TAG
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow DROP_OLDEST
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_RELEASE_COUNTRY
org.repackage.com.vivo.identifier.DataBaseOperation: java.lang.String e
com.caij.puremusic.network.model.Image: int height
com.umeng.analytics.pro.i$a: com.umeng.analytics.pro.i$a b
com.tencent.bugly.proguard.at: long i
com.thegrizzlylabs.sardineandroid.model.Grant: java.util.List privilege
com.tencent.bugly.proguard.at: java.lang.String q
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MOVEMENT_TOTAL
com.umeng.commonsdk.statistics.proto.e: java.util.Map d
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script BENGALI
org.jaudiotagger.audio.ogg.OggVorbisTagWriter: org.jaudiotagger.audio.ogg.OggVorbisCommentTagCreator tc
com.tencent.mm.opensdk.modelmsg.WXDynamicVideoMiniProgramObject: java.lang.String TAG
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier CLSF
org.simpleframework.xml.core.ElementListUnionParameter: org.simpleframework.xml.core.ElementListUnionParameter$Contact contact
com.alipay.android.phone.mrpc.core.HttpException: int NETWORK_SERVER_EXCEPTION
com.tencent.mm.opensdk.constants.ConstantsAPI$WXWebPage: java.lang.String KEY_ACTIVITY_ID
org.simpleframework.xml.core.LabelExtractor: org.simpleframework.xml.util.Cache cache
com.umeng.analytics.pro.am: java.lang.String am
com.umeng.analytics.pro.o: java.lang.reflect.Method z
org.koin.core.logger.Level: org.koin.core.logger.Level DEBUG
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier GNRE
org.jaudiotagger.tag.datatype.AbstractDataType: org.jaudiotagger.tag.id3.AbstractTagFrameBody frameBody
kotlin.time.DurationUnit: kotlin.time.DurationUnit HOURS
com.tencent.bugly.proguard.ao$a: long e
com.umeng.analytics.pro.u: java.lang.String g
org.jcodec.containers.mp4.boxes.ChannelBox$ChannelDescription: int channelLabel
org.jaudiotagger.tag.mp4.field.Mp4FieldType: org.jaudiotagger.tag.mp4.field.Mp4FieldType URL
org.jaudiotagger.tag.id3.ID3Frames: java.util.Map forcev22Tov23
org.jaudiotagger.tag.id3.ID3v1TagField: java.lang.String content
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_IS_COMPILATION
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: java.lang.Object p
com.caij.puremusic.db.model.SongQueries$SongsByArtistQuery: com.caij.puremusic.db.model.SongQueries this$0
com.umeng.analytics.b: com.umeng.common.ISysListener b
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script MALAYALAM
com.alipay.sdk.app.PayTask: java.lang.String c
org.jaudiotagger.audio.mp4.ChunkReader: long chunkTv
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPadding: int length
com.tencent.bugly.crashreport.biz.UserInfoBean: java.lang.String m
org.jaudiotagger.tag.id3.ID3v23Tag: java.lang.String TYPE_PADDINGSIZE
com.tencent.mm.opensdk.modelmsg.WXMusicVideoObject: java.lang.String songLyric
com.umeng.analytics.pro.an: com.umeng.analytics.pro.bp q
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier META
org.jaudiotagger.tag.id3.ID3v24Tag: byte textEncodingRestriction
com.tencent.mm.opensdk.modelmsg.WXAppLaunchData: java.lang.String ACTION_HANDLE_WXAPP_SHOW
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_SET
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_ENCODEDBY
com.umeng.analytics.pro.e$b$a: java.lang.String d
org.jcodec.containers.mp4.boxes.FileTypeBox: java.util.Collection compBrands
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b s
org.simpleframework.xml.core.ElementLabel: java.lang.String override
com.umeng.commonsdk.framework.UMModuleRegister: int PROCESS_EVENT_VALUE_LOW
com.google.android.gms.common.internal.zzj: android.os.Parcelable$Creator CREATOR
com.tencent.mm.opensdk.constants.ConstantsAPI$WXMiniProgram: int MINI_PROGRAM_TYPE_RELEASE
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country BENIN
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey ORIGINAL_ALBUM
com.tencent.mm.opensdk.diffdev.a.b: java.lang.String c
com.umeng.commonsdk.a: java.lang.Class a
org.jaudiotagger.tag.id3.ID3v24Tag: int TAG_EXT_HEADER_CRC_DATA_LENGTH
com.afollestad.materialdialogs.WhichButton: int index
com.umeng.commonsdk.internal.a: int z
com.caij.puremusic.db.model.SongQueries$songsByNameArtist$1: kotlin.jvm.functions.Function18 $mapper
org.jaudiotagger.tag.id3.ID3v22Frame: int FRAME_ID_SIZE
com.caij.puremusic.drive.model.Directory$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.umeng.analytics.pro.am: java.lang.String f
com.umeng.commonsdk.utils.d: java.lang.String o
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_HW_SW_SETTINGS
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey ENGINEER
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country PITCAIRN
org.simpleframework.xml.core.ElementArrayParameter: java.lang.Object key
io.ktor.util.date.WeekDay: io.ktor.util.date.WeekDay FRIDAY
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey COVERARTMIME
com.tencent.mm.opensdk.modelmsg.WXStateJumpChannelProfileInfo: java.lang.String TAG
org.simpleframework.xml.core.PathParser$PathSection: org.simpleframework.xml.core.PathParser this$0
org.jaudiotagger.audio.asf.data.GUID: org.jaudiotagger.audio.asf.data.GUID GUID_LANGUAGE_LIST
org.repackage.com.vivo.identifier.IdentifierIdClient: java.lang.String a
org.jaudiotagger.audio.dsf.DsdChunk: int CHUNKSIZE_LENGTH
org.jaudiotagger.audio.mp3.XingFrame: int BYTE_4
com.umeng.commonsdk.statistics.proto.a: java.lang.String b
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey WORK_PART_LEVEL6
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey ALBUM
com.tencent.bugly.proguard.aj: java.util.Map r
org.jaudiotagger.tag.id3.framebody.FrameBodyRBUF: int BUFFER_FIELD_SIZE
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey ALBUM_ARTIST
org.simpleframework.xml.core.PathParser: boolean attribute
org.simpleframework.xml.core.ElementArrayLabel: org.simpleframework.xml.core.Decorator decorator
kotlin.time.DurationUnit: kotlin.time.DurationUnit[] $VALUES
com.thegrizzlylabs.sardineandroid.DavQuota: long quotaAvailableBytes
com.umeng.commonsdk.utils.d: java.lang.String f
com.umeng.analytics.pro.an$e: java.util.Map k
com.caij.puremusic.drive.model.PlayListsSubsonicResponse: java.lang.String status
org.jaudiotagger.tag.id3.ID3v23Frame$StatusFlags: int MASK_FILE_ALTER_PRESERVATION
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.lang.String TYPE_DUPLICATEFRAMEID
com.thegrizzlylabs.sardineandroid.model.Privilege: java.util.List content
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage WMA_LENGTH_OF_DATA_IS_TOO_LARGE
com.tencent.bugly.proguard.bq: java.lang.String x
com.umeng.commonsdk.statistics.c: com.umeng.commonsdk.statistics.internal.c f
com.umeng.commonsdk.utils.d: java.lang.String an
org.jaudiotagger.audio.wav.chunk.WavFormatChunk: int EXTENSIBLE_DATA_SIZE
com.tencent.bugly.proguard.bb: java.lang.String f
com.tencent.bugly.proguard.bo: java.lang.String f
com.caij.puremusic.db.model.SongEntity: long playlistId
com.alipay.android.phone.mrpc.core.b$b: int b
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script CHAKMA
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country JERSEY
org.jaudiotagger.audio.mp3.XingFrame: int MPEG_VERSION_1_MODE_STEREO_OFFSET
com.umeng.analytics.pro.o$a: int u
com.caij.puremusic.drive.model.DriveFile: int sourceType
androidx.fragment.app.Fragment: boolean mMenuVisible
com.umeng.analytics.pro.d: java.lang.String aC
org.jcodec.containers.mp4.MP4Util$Movie: org.jcodec.containers.mp4.boxes.MovieBox moov
org.simpleframework.xml.stream.DocumentReader: java.lang.String RESERVED
org.simpleframework.xml.stream.StreamReader: org.simpleframework.xml.stream.EventNode peek
org.jaudiotagger.audio.SupportedFileFormat: java.util.Map extensionMap
org.simpleframework.xml.core.ElementMapParameter: java.lang.String name
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind DOLBY_V3_AUDIO
org.simpleframework.xml.core.Composite: org.simpleframework.xml.core.Context context
com.caij.puremusic.drive.model.BaiduFileResponse: java.util.List list
org.jcodec.containers.mp4.boxes.PixelAspectExt: int hSpacing
com.caij.vip.Activation: java.lang.String bindAccount
com.umeng.analytics.pro.am: java.lang.String s
com.caij.puremusic.drive.model.OneDriveFile: java.lang.String mimeType
org.simpleframework.xml.core.Composite$Builder: org.simpleframework.xml.core.Criteria criteria
org.simpleframework.xml.stream.OutputDocument: org.simpleframework.xml.stream.Mode mode
org.jcodec.containers.mp4.boxes.CleanApertureExtension: int apertureHeightDenominator
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country WALLIS_AND_FUTUNA
com.umeng.commonsdk.statistics.idtracking.Envelope: byte[] mSignature
com.caij.puremusic.drive.model.ADriveItem: java.lang.Long size
com.google.android.gms.internal.play_billing.zzcj: com.google.android.gms.internal.play_billing.zzcj zza
org.simpleframework.xml.core.CompositeInlineList: org.simpleframework.xml.core.CollectionFactory factory
com.umeng.commonsdk.utils.d: java.lang.String S
org.jaudiotagger.audio.opus.OpusHeader: java.lang.String HEAD_CAPTURE_PATTERN
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier STYP
org.repackage.com.vivo.identifier.DataBaseOperation: java.lang.String b
org.jaudiotagger.tag.id3.ID3v11Tag: int FIELD_TRACK_INDICATOR_LENGTH
com.umeng.analytics.pro.e$c$b: java.lang.String d
org.simpleframework.xml.core.ElementLabel: java.lang.String name
org.repackage.com.miui.deviceid.IdentifierManager: java.lang.reflect.Method e
com.caij.puremusic.drive.model.ADriveItem: java.lang.String drive_id
com.umeng.commonsdk.statistics.idtracking.Envelope: java.lang.String mVersion
com.tencent.bugly.BuglyStrategy: boolean k
com.umeng.analytics.process.UMProcessDBHelper$a: java.lang.String c
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country ROMANIA
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script BLISSYMBOLS
com.umeng.commonsdk.statistics.proto.b: com.umeng.analytics.pro.bp i
androidx.fragment.app.Fragment: java.lang.String mPreviousWho
com.caij.puremusic.db.model.FolderQueries$insertFolder$1: com.caij.puremusic.db.model.FolderQueries this$0
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script TAGBANWA
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_ALBUM_SORT_ORDER_ITUNES
com.umeng.commonsdk.debug.UMLog: java.lang.String DOUBLE_DIVIDER_AQ
com.umeng.commonsdk.utils.d: java.lang.String r
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.audio.asf.data.ContainerType lowestContainer
com.alipay.tscenter.biz.rpc.vkeydfp.request.AppListCmdRequest: java.lang.String token
org.jaudiotagger.audio.asf.data.GUID: org.jaudiotagger.audio.asf.data.GUID SCRIPT_COMMAND_OBJECT
com.umeng.umzid.ZIDManager$c: android.content.Context a
org.simpleframework.xml.core.ElementUnionParameter: java.lang.String name
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey SCRIPT
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_RELEASE_TYPE
org.jaudiotagger.tag.asf.AsfTagField: boolean $assertionsDisabled
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_RELEASEARTISTID
org.jaudiotagger.tag.images.AndroidArtwork: java.lang.String description
com.caij.puremusic.drive.model.Metadata: java.lang.String title
com.umeng.commonsdk.utils.d: java.lang.String ah
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey BARCODE
io.ktor.util.date.WeekDay: io.ktor.util.date.WeekDay[] $VALUES
com.tencent.mm.opensdk.modelmsg.WXWebpageObject: java.lang.String TAG
com.caij.puremusic.drive.model.ParentReference$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.tencent.bugly.crashreport.crash.CrashDetailBean: java.lang.String g
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey COMPOSER
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgram$Req: java.lang.String path
com.tencent.mm.opensdk.modelmsg.WXEmojiObject: byte[] emojiData
org.simpleframework.xml.core.Factory: org.simpleframework.xml.core.Support support
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: int FIELD_BITRATE_NOMAIML_LENGTH
com.google.android.gms.internal.play_billing.zzcb: com.google.android.gms.internal.play_billing.zzeh zzc
nl.adaptivity.xmlutil.core.KtXmlWriter$WriteState: nl.adaptivity.xmlutil.core.KtXmlWriter$WriteState[] $VALUES
org.simpleframework.xml.stream.OutputDocument: java.lang.String reference
org.jaudiotagger.audio.ogg.util.OggCRCFactory: java.util.logging.Logger logger
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MOVEMENT
com.caij.puremusic.views.TopAppBarLayout$AppBarMode: com.caij.puremusic.views.TopAppBarLayout$AppBarMode COLLAPSING
com.caij.puremusic.drive.model.MediaStream: java.lang.String Type
org.simpleframework.xml.core.InstantiatorBuilder: org.simpleframework.xml.core.Instantiator factory
org.jaudiotagger.tag.id3.AbstractID3v2Frame: java.lang.String TYPE_FRAME
com.umeng.commonsdk.stateless.a: java.lang.String h
com.umeng.commonsdk.utils.UMUtils: java.lang.String VALUE_VISUAL_VERSION
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script SYLOTI_NAGRI
com.umeng.analytics.pro.e$c$a: java.lang.String a
org.simpleframework.xml.stream.DocumentReader: org.simpleframework.xml.stream.EventNode peek
org.simpleframework.xml.stream.DocumentProvider: javax.xml.parsers.DocumentBuilderFactory factory
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: int FLAG_DEFAULT_SAMPLE_SIZE
org.jaudiotagger.audio.ogg.VorbisVersion: org.jaudiotagger.audio.ogg.VorbisVersion VERSION_ONE
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: java.text.SimpleDateFormat formatYearIn
com.umeng.commonsdk.statistics.proto.a: com.umeng.analytics.pro.bp h
com.umeng.commonsdk.framework.a: int v
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey ITUNES_GROUPING
com.caij.puremusic.drive.model.OneDriveItem: com.caij.puremusic.drive.model.OneDriveFolder folder
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String CONDUCTOR_SORT
org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistReadOptions: org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistReadOptions READ_ALBUMARTIST_THEN_JRIVER
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: org.jaudiotagger.audio.aiff.chunk.AiffCompressionType TWOS
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey ALBUM_SORT
com.umeng.commonsdk.utils.UMUtils: java.lang.String MOBILE_NETWORK
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdTypeCountQuery$execute$1: com.caij.puremusic.db.model.SongQueries this$1
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean marginLeftSystemWindowInsets
org.simpleframework.xml.stream.StreamReader$Text: javax.xml.stream.events.Characters text
com.google.android.material.bottomsheet.BottomSheetBehavior: int DEF_STYLE_RES
com.umeng.commonsdk.framework.UMLogDataProtocol$UMBusinessType: com.umeng.commonsdk.framework.UMLogDataProtocol$UMBusinessType U_ZeroEnv
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage GENERAL_READ
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b c
com.tencent.mm.opensdk.modelbiz.WXNontaxPay$Req: java.lang.String url
com.umeng.commonsdk.utils.a: long c
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode PROTOCOL_ERROR
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MOOD_PARTY
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat SATURATION
com.google.android.material.bottomsheet.BottomSheetBehavior: int STATE_HIDDEN
com.umeng.analytics.pro.e$d$a: java.lang.String e
com.umeng.commonsdk.statistics.c: java.lang.String o
androidx.preference.TwoStatePreference$SavedState: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_REVERB_RIGHT
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat OVERLAY
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey WORK_PART_LEVEL1_TYPE
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MOOD_ACOUSTIC
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_ELEMENT_ID
com.umeng.commonsdk.utils.d: java.lang.String a
org.jcodec.containers.mp4.boxes.AliasBox: int fileNumber
com.thegrizzlylabs.sardineandroid.model.SupportedReport: com.thegrizzlylabs.sardineandroid.model.Report report
io.ktor.util.date.Month: io.ktor.util.date.Month DECEMBER
com.google.android.gms.internal.play_billing.zza: com.google.android.gms.internal.play_billing.zza zzn
org.jcodec.containers.mp4.boxes.AliasBox: int parentDirId
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: org.jaudiotagger.audio.aiff.chunk.AiffCompressionType IN32
org.jcodec.containers.mp4.boxes.AliasBox: short kind
org.simpleframework.xml.stream.PullReader$Start: int line
com.caij.puremusic.db.model.PlaylistEntityQueries$renamePlaylist$1: java.lang.String $playlistName
com.umeng.commonsdk.statistics.noise.Defcon: com.umeng.commonsdk.statistics.noise.Defcon instanse
org.jaudiotagger.tag.mp4.field.Mp4TagBinaryField: int dataSize
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_SYNCHRONISED_TEMPO_LIST
com.umeng.analytics.pro.cb: byte j
android.support.v4.media.MediaMetadataCompat: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.play_billing.zzcj: com.google.android.gms.internal.play_billing.zzcj zzb
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_AUDIO_ENCRYPTION
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat MODULATE
com.caij.puremusic.db.model.SongEntityQueries$getPlaylistLastAddSong$1: kotlin.jvm.functions.Function3 $mapper
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP3_FRAME_IS_DATA_LENGTH_INDICATOR
org.jaudiotagger.tag.id3.valuepair.ImageFormats: java.lang.String MIME_TYPE_GIF
com.umeng.analytics.pro.i: java.lang.String f
org.repackage.com.zui.opendeviceidlibrary.BuildConfig: int e
org.simpleframework.xml.core.InstantiatorBuilder: org.simpleframework.xml.core.LabelMap texts
io.ktor.util.date.WeekDay: io.ktor.util.date.WeekDay SATURDAY
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String sOperator
org.jaudiotagger.tag.reference.GenreTypes: java.util.Map nameToIdMap
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey ENCODER
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MOOD_VALENCE
com.caij.puremusic.drive.model.PlayListItem: java.lang.String MediaType
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country SAINT_PIERRE_AND_MIQUELON
org.jaudiotagger.tag.flac.FlacTag: java.util.List images
org.jaudiotagger.audio.mp4.ChunkWriter: int sampleCount
org.jaudiotagger.tag.id3.framebody.FrameBodyTIPL: java.lang.String MIXER
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey TAGS
org.jaudiotagger.audio.mp3.MPEGFrameHeader: java.util.Map emphasisMap
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MOOD_DANCEABILITY
org.jaudiotagger.tag.id3.framebody.FrameBodyTDAT: int DAY_START
org.jaudiotagger.tag.id3.ID3v1Tag: int GENRE_UNDEFINED
com.umeng.analytics.pro.j: java.lang.String i
org.jcodec.containers.mp4.boxes.AudioSampleEntry: int compressionId
com.tencent.bugly.proguard.aa: java.lang.Object ax
com.thegrizzlylabs.sardineandroid.model.Limit: java.math.BigInteger nresults
io.github.aakira.napier.LogLevel: io.github.aakira.napier.LogLevel ASSERT
com.umeng.commonsdk.internal.a: int y
com.umeng.analytics.pro.e$a$b: java.lang.String b
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey OPUS
com.tencent.bugly.crashreport.crash.CrashDetailBean: java.lang.String p
com.caij.puremusic.drive.model.Prop: java.lang.String getcontentlength
org.jaudiotagger.audio.io.FileOperator: java.nio.ByteBuffer byteBuffer
com.caij.puremusic.db.model.Folder$Adapter: app.cash.sqldelight.ColumnAdapter typeAdapter
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MUSICBRAINZ_RELEASE_TRACK_ID
org.jaudiotagger.audio.mp3.VbriFrame: int VBRI_QUALITY_BUFFER_SIZE
org.xmlpull.v1.XmlPullParser: java.lang.String FEATURE_VALIDATION
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage ID3_TAG_FOOTER
com.umeng.analytics.pro.cb: byte d
com.umeng.commonsdk.statistics.noise.ImLatent: com.umeng.commonsdk.statistics.internal.StatTracer statTracer
com.tencent.bugly.proguard.bq: java.lang.String r
com.tencent.bugly.crashreport.crash.CrashDetailBean: java.lang.String o
com.tencent.mm.opensdk.diffdev.a.c: java.lang.String a
org.jaudiotagger.audio.asf.data.AudioStreamChunk: org.jaudiotagger.audio.asf.data.GUID errorConcealment
com.umeng.commonsdk.framework.UMModuleRegister: int PUSH_EVENT_VALUE_LOW
org.simpleframework.xml.strategy.ArrayValue: java.lang.Object value
com.tencent.bugly.proguard.aa: java.lang.String d
com.alipay.android.phone.mrpc.core.o: boolean g
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype EDGE
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey PART
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country SAINT_MARTIN
com.tencent.mm.opensdk.constants.ConstantsAPI$Token: java.lang.String WX_TOKEN_PLATFORMID_VALUE
com.alipay.apmobilesecuritysdk.e.c: java.lang.String c
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP3_FRAME_IS_ENCRYPTED
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country MAURITANIA
org.jaudiotagger.audio.SupportedFileFormat: org.jaudiotagger.audio.SupportedFileFormat MP3
com.umeng.commonsdk.stateless.b: android.os.HandlerThread c
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage FLAC_NO_BLOCKTYPE
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MUSICBRAINZ_WORK_ID
com.google.common.hash.LittleEndianByteArray$JavaLittleEndianBytes: com.google.common.hash.LittleEndianByteArray$JavaLittleEndianBytes[] $VALUES
com.umeng.analytics.pro.o$a: int k
org.jaudiotagger.tag.id3.AbstractID3v2Tag: long MAXIMUM_WRITABLE_CHUNK_SIZE
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script OL_CHIKI
com.google.android.datatransport.cct.internal.QosTier: int value
com.caij.puremusic.db.model.Artist: java.lang.String name
com.caij.puremusic.drive.model.BaiduDriveItem: com.caij.puremusic.drive.model.BaiduDriveItem$Companion Companion
org.jaudiotagger.tag.mp4.Mp4RatingValue: org.jaudiotagger.tag.mp4.Mp4RatingValue EXPLICIT
com.google.android.material.bottomsheet.BottomSheetDialog$EdgeToEdgeCallback: boolean lightStatusBar
io.ktor.websocket.FrameType: io.ktor.websocket.FrameType[] byOpcodeArray
org.simpleframework.xml.core.FieldContact: int modifier
org.jcodec.containers.mp4.boxes.SegmentIndexBox$Reference: boolean starts_with_SAP
com.alipay.sdk.m.u.g: com.alipay.sdk.m.u.g k
org.jcodec.containers.mp4.boxes.TimecodeSampleEntry: int FLAG_NEGATIVETIMEOK
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdCountQuery: long albumId
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey ORIGINAL_YEAR
androidx.constraintlayout.core.widgets.ConstraintAnchor$Type: androidx.constraintlayout.core.widgets.ConstraintAnchor$Type BASELINE
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int LAYER_III
org.jaudiotagger.audio.AudioFile: org.jaudiotagger.tag.Tag tag
org.jaudiotagger.tag.mp4.Mp4NonStandardFieldKey: org.jaudiotagger.tag.mp4.Mp4NonStandardFieldKey ALFN
org.jaudiotagger.audio.asf.io.CountingInputStream: long markPos
com.caij.puremusic.network.model.Artist: java.util.Map external_urls
org.simpleframework.xml.core.LabelKey: java.lang.Class label
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey ARTISTS_SORT
com.tencent.bugly.BuglyStrategy$a: int CRASHTYPE_COCOS2DX_LUA
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey CUSTOM5
com.umeng.commonsdk.framework.a: java.lang.String p
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage VORBIS_COMMENT_LENGTH_LARGE_THAN_HEADER
com.umeng.commonsdk.framework.a: java.lang.String q
org.jaudiotagger.tag.id3.ID3v24Frame: int encryptionMethod
com.umeng.commonsdk.framework.UMLogDataProtocol$UMBusinessType: com.umeng.commonsdk.framework.UMLogDataProtocol$UMBusinessType U_Silent
com.umeng.commonsdk.statistics.common.DeviceTypeEnum: java.lang.String description
org.jaudiotagger.audio.asf.data.GUID: org.jaudiotagger.audio.asf.data.GUID GUID_STREAM
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country TAJIKISTAN
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier IPHD
org.repackage.com.vivo.identifier.DataBaseOperation: java.lang.String d
org.jaudiotagger.logging.LogFormatter: java.util.Date date
com.google.android.gms.internal.play_billing.zzfv: java.lang.Object zzf
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataApplication: java.nio.ByteBuffer data
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey KEYWORD
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey URL_OFFICIAL_ARTIST_SITE
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_MUSICIAN_CREDITS
com.thegrizzlylabs.sardineandroid.model.Prop: com.thegrizzlylabs.sardineandroid.model.Acl acl
org.simpleframework.xml.core.ClassSchema: org.simpleframework.xml.core.Caller caller
org.simpleframework.xml.core.ObjectScanner: org.simpleframework.xml.core.StructureBuilder builder
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier[] $VALUES
org.jaudiotagger.tag.id3.framebody.FrameBodyPIC: java.lang.String IMAGE_IS_URL
com.alipay.android.phone.mrpc.core.HttpException: int NETWORK_UNKNOWN_ERROR
com.caij.puremusic.drive.model.PlexPlaylistsResponse$$serializer: com.caij.puremusic.drive.model.PlexPlaylistsResponse$$serializer INSTANCE
org.jaudiotagger.audio.SupportedFileFormat: java.lang.String filesuffix
com.umeng.commonsdk.statistics.internal.c$2: com.umeng.commonsdk.statistics.internal.c a
org.jaudiotagger.FileConstants: int BIT4
kotlinx.coroutines.DefaultExecutor: int debugStatus
com.caij.puremusic.drive.model.ADriveFileResponse: com.caij.puremusic.drive.model.ADriveFileResponse$Companion Companion
com.tencent.bugly.proguard.ba: java.lang.String a
com.umeng.analytics.pro.aq: java.lang.String b
com.umeng.commonsdk.statistics.idtracking.Envelope: int mLength
com.tencent.mm.opensdk.modelmsg.WXEmojiSharedObject: int packageflag
org.jaudiotagger.audio.asf.data.GUIDFormatException: long serialVersionUID
com.caij.puremusic.network.model.LastFmArtist$Artist$Stats: java.lang.String playcount
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL3_TYPE
io.ktor.websocket.CloseReason$Codes: io.ktor.websocket.CloseReason$Codes$Companion Companion
org.jaudiotagger.audio.aiff.AiffFileHeader: java.util.logging.Logger logger
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey[] $VALUES
com.umeng.analytics.pro.o: int h
org.simpleframework.xml.stream.NodeReader: org.simpleframework.xml.stream.EventReader reader
org.simpleframework.xml.core.TextList: org.simpleframework.xml.core.Primitive primitive
org.jcodec.containers.mp4.boxes.SampleToChunkBox: org.jcodec.containers.mp4.boxes.SampleToChunkBox$SampleToChunkEntry[] sampleToChunk
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int version
com.umeng.commonsdk.internal.a: int l
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MUSICBRAINZ_RELEASE_STATUS
org.jaudiotagger.tag.id3.AbstractID3v2Tag$1: org.jaudiotagger.tag.id3.AbstractID3v2Tag this$0
com.umeng.commonsdk.statistics.noise.Defcon: long MILLIS_4_HOURS
com.caij.puremusic.drive.model.PlexSectionsResponse$$serializer: com.caij.puremusic.drive.model.PlexSectionsResponse$$serializer INSTANCE
com.umeng.commonsdk.stateless.b: android.content.Context b
com.umeng.commonsdk.statistics.idtracking.e: java.lang.Object j
com.umeng.commonsdk.statistics.TagHelper: java.lang.Object lock
org.jaudiotagger.FileConstants: int BIT6
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey PERFORMER
com.caij.puremusic.drive.model.Media: java.util.List Part
com.alipay.tscenter.biz.rpc.vkeydfp.result.DeviceDataReportResult: java.lang.String appListVer
com.google.common.io.Files$FilePredicate: com.google.common.io.Files$FilePredicate[] $VALUES
com.umeng.analytics.pro.am: java.lang.String c
com.umeng.commonsdk.UMConfigureInternation: boolean isInternal
org.jcodec.containers.mp4.boxes.TimecodeSampleEntry: int frameDuration
com.caij.puremusic.db.model.SongQueries$SongsByNameAlbumQuery: java.lang.String value_
com.umeng.analytics.pro.j: java.lang.String o
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey CHOIR_SORT
com.umeng.commonsdk.utils.UMUtils: java.lang.String VALUE_VERIFY_VERSION
org.jaudiotagger.tag.id3.framebody.FrameBodyUFID: java.lang.String UFID_ID3TEST
com.tencent.bugly.proguard.ai: com.tencent.bugly.proguard.ai b
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country UNITED_STATES
org.jaudiotagger.audio.wav.chunk.WavFormatChunk: int channelMask
com.tencent.bugly.proguard.ac: com.tencent.bugly.proguard.ac d
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype HSPA
com.caij.puremusic.model.Data: java.lang.String pictureSmall
com.caij.puremusic.db.model.PlayCountEntityQueries$CheckSongExistInPlayCountQuery$execute$1: com.caij.puremusic.db.model.PlayCountEntityQueries$CheckSongExistInPlayCountQuery this$0
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey COVER_ART
com.umeng.analytics.pro.cb: byte i
org.jaudiotagger.tag.id3.ID3v1Tag: int BYTE_TO_UNSIGNED
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b F
com.tencent.mm.opensdk.modelmsg.WXWebpageObject: boolean isSecretMessage
org.simpleframework.xml.core.DetailScanner: java.lang.annotation.Annotation[] labels
com.google.android.material.bottomsheet.BottomSheetBehavior: java.util.Map importantForAccessibilityMap
org.jaudiotagger.audio.flac.FlacStreamReader: java.lang.String loggingName
com.alipay.android.phone.mrpc.core.b: org.apache.http.client.HttpClient d
org.simpleframework.xml.core.SignatureScanner: java.lang.Class type
com.umeng.commonsdk.UMConfigure: int DEVICE_TYPE_PHONE
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzH
org.jaudiotagger.audio.flac.metadatablock.BlockType: org.jaudiotagger.audio.flac.metadatablock.BlockType VORBIS_COMMENT
org.jcodec.containers.mp4.boxes.CleanApertureExtension: int apertureWidthNumerator
com.caij.puremusic.drive.model.AlbumItem: java.util.List Artists
com.caij.puremusic.model.CategoryInfo: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String ARRANGER_SORT
org.repackage.com.vivo.identifier.IdentifierIdClient: android.content.Context o
com.caij.vip.Activation: long expires
com.caij.puremusic.drive.model.AlbumMediaContainer$$serializer: com.caij.puremusic.drive.model.AlbumMediaContainer$$serializer INSTANCE
com.google.android.gms.internal.play_billing.zzfj: com.google.android.gms.internal.play_billing.zzfj zzb
com.tencent.mm.opensdk.modelbiz.SubscribeMessage$Resp: java.lang.String TAG
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_SYNC_TEMPO
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_SIGNATURE
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL6
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: int samplingRate
org.jaudiotagger.audio.wav.WavChunkType: org.jaudiotagger.audio.wav.WavChunkType CORRUPT_LIST
org.simpleframework.xml.stream.CamelCaseBuilder$Attribute: boolean capital
com.caij.puremusic.db.model.FolderQueries$selectAll$1: com.caij.puremusic.db.model.FolderQueries this$0
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.reference.Tagger tagger
com.umeng.analytics.pro.am: java.lang.String i
com.alipay.android.phone.mrpc.core.y: java.lang.Class b
com.tencent.mm.opensdk.constants.ConstantsAPI$AppSupportContentFlag: long MMAPP_SUPPORT_VIDEO
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_ALBUM_ARTIST_SORT_ORDER_ITUNES
org.jaudiotagger.tag.id3.ID3v24Tag: boolean tagRestriction
org.jaudiotagger.audio.asf.util.Utils: boolean $assertionsDisabled
com.afollestad.materialdialogs.LayoutMode: com.afollestad.materialdialogs.LayoutMode WRAP_CONTENT
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String suffix
com.caij.puremusic.drive.model.SongItem: java.lang.String PresentationUniqueKey
org.repackage.com.miui.deviceid.IdentifierManager: java.lang.reflect.Method f
com.umeng.analytics.pro.j: java.lang.String y
com.tencent.mm.opensdk.diffdev.a.d: com.tencent.mm.opensdk.diffdev.a.d f
androidx.activity.ComponentDialog: androidx.lifecycle.LifecycleRegistry _lifecycleRegistry
com.tencent.bugly.proguard.aa: android.content.Context X
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.internal.zas mResultGuardian
org.jaudiotagger.tag.id3.ID3v24Tag: int MASK_V24_FILE_ALTER_PRESERVATION
org.simpleframework.xml.transform.ClassTransform: java.lang.String LONG
org.jaudiotagger.tag.id3.valuepair.StandardIPLSKey: org.jaudiotagger.tag.id3.valuepair.StandardIPLSKey DJMIXER
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier UUID
org.jaudiotagger.audio.ogg.util.OggPageHeader$PacketStartAndLength: java.lang.Integer length
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportQuasiRealtime: long MIN_REPORT_INTERVAL
com.caij.puremusic.drive.model.Metadata: java.lang.String grandparentRatingKey
com.umeng.commonsdk.service.UMGlobalContext: android.content.Context mApplicationContext
org.simpleframework.xml.transform.StringArrayTransform: java.util.regex.Pattern pattern
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey CUSTOM_3
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat DST_OUT
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script MYANMAR
com.umeng.commonsdk.statistics.proto.e: long b
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier HNTI
org.jaudiotagger.tag.lyrics3.Lyrics3v2Fields: java.lang.String FIELD_V2_IMAGE
com.caij.puremusic.model.lyrics.SynchronizedLyricsLRC: int LRC_MINUTES_TO_MS_MULTIPLIER
org.simpleframework.xml.core.ElementUnionParameter: org.simpleframework.xml.core.ElementUnionParameter$Contact contact
com.tencent.bugly.proguard.bq: byte[] h
org.jcodec.containers.mp4.boxes.TrackHeaderBox: float height
com.caij.puremusic.drive.model.GoogleDriveFile$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.tencent.mm.opensdk.modelmsg.WXMusicObject: java.lang.String musicLowBandDataUrl
com.tencent.mm.opensdk.modelbiz.JoinChatroom$Req: java.lang.String chatroomNickName
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey DISC_TOTAL
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MOVEMENT_TOTAL
org.jcodec.containers.mp4.boxes.FielExtension: int order
org.jaudiotagger.audio.asf.data.ChunkContainer: boolean $assertionsDisabled
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP4_GENRE_OUT_OF_RANGE
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
org.jaudiotagger.tag.datatype.Lyrics3TimeStamp: long second
com.google.android.gms.internal.play_billing.zzfj: java.lang.String zzh
com.google.android.material.bottomsheet.BottomSheetDragHandleView$1: com.google.android.material.bottomsheet.BottomSheetDragHandleView this$0
kotlin.collections.State: kotlin.collections.State Done
com.thegrizzlylabs.sardineandroid.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
com.thegrizzlylabs.sardineandroid.model.Propstat: java.lang.String status
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey BARCODE
com.caij.puremusic.drive.model.Prop: java.lang.String creationdate
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country VENEZUELA
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String ACOUSTID_ID
org.jaudiotagger.logging.XMLTagDisplayFormatter: java.lang.String xmlSingleTagClose
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey COMMENT
org.jaudiotagger.tag.wav.WavTag: java.util.List chunkSummaryList
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: java.lang.String year
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType ETHERNET
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_POPULARIMETER
org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistReadOptions: org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistReadOptions[] $VALUES
com.umeng.analytics.AnalyticsConfig: java.lang.String d
org.jaudiotagger.tag.reference.Tagger: org.jaudiotagger.tag.reference.Tagger PICARD
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int LAYER_III_FRAME_SIZE_COEFFICIENT
org.jaudiotagger.audio.asf.data.ContainerType: boolean streamEnabled
io.github.aakira.napier.LogLevel: io.github.aakira.napier.LogLevel DEBUG
com.umeng.analytics.process.UMProcessDBDatasSender$1: com.umeng.analytics.process.UMProcessDBDatasSender a
org.simpleframework.xml.core.MethodName: org.simpleframework.xml.core.MethodType type
com.thegrizzlylabs.sardineandroid.DavAce: com.thegrizzlylabs.sardineandroid.DavPrincipal principal
org.jaudiotagger.tag.mp4.Mp4RatingValue: java.lang.String description
org.simpleframework.xml.transform.DefaultMatcher: org.simpleframework.xml.transform.Matcher stock
com.alipay.tscenter.biz.rpc.vkeydfp.result.DeviceDataReportResult: java.lang.String currentTime
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey ARRANGER_SORT
com.alipay.android.app.IRemoteServiceCallback$Stub: java.lang.String DESCRIPTOR
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey CONDUCTOR
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_FILE_OWNER
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b A
com.tencent.mm.opensdk.modelmsg.WXMusicVideoObject: com.tencent.mm.opensdk.modelmsg.WXMusicVipInfo musicVipInfo
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MOOD_DANCEABILITY
com.umeng.commonsdk.statistics.common.d: java.lang.String g
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier FPAR
com.tencent.bugly.proguard.bd: android.content.Context a
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey PERFORMER_NAME
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_GETMESSAGE_FROM_WX
org.jaudiotagger.audio.io.FileOperator: java.nio.channels.FileChannel fileChannel
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken STRING
org.jaudiotagger.audio.mp3.XingFrame: int MPEG_VERSION_1_MODE_MONO_OFFSET
com.umeng.analytics.pro.e$b: java.lang.String a
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey CHOIR
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat XOR
com.umeng.commonsdk.internal.a: int B
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType PNG_A
com.umeng.commonsdk.stateless.UMSLEnvelopeBuild$1: com.umeng.commonsdk.stateless.UMSLEnvelopeBuild b
com.alipay.apmobilesecuritysdk.face.APSecuritySdk$1: com.alipay.apmobilesecuritysdk.face.APSecuritySdk c
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey URL_OFFICIAL_ARTIST_SITE
com.umeng.commonsdk.debug.UMLogCommon: java.lang.String SC_10017
org.jaudiotagger.test.TestAudioTagger: int count
com.tencent.bugly.proguard.aa: java.lang.Object aw
com.umeng.analytics.pro.o$a: int a
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType MOBILE_SUPL
org.jcodec.containers.mp4.boxes.IListBox: java.lang.String FOURCC
com.umeng.commonsdk.statistics.common.DeviceTypeEnum: com.umeng.commonsdk.statistics.common.DeviceTypeEnum IDFA
org.xmlpull.v1.XmlPullParser: int CDSECT
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_APPBRAND
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int LAYER_I
org.koin.core.definition.Kind: org.koin.core.definition.Kind Singleton
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey QUALITY
com.tencent.mm.opensdk.modelbiz.WXChannelStartLive$Resp: java.lang.String extMsg
com.caij.puremusic.db.model.PlaybackSongQueries$insert$1: com.caij.puremusic.db.model.PlaybackSongQueries this$0
org.simpleframework.xml.stream.Formatter: org.simpleframework.xml.stream.Formatter$Tag last
com.tencent.mm.opensdk.modelpay.PayReq$Options: int callbackFlags
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MOVEMENT_TOTAL
org.jaudiotagger.tag.id3.ID3Compression: java.util.logging.Logger logger
com.tencent.mm.opensdk.modelbiz.OpenBusiLuckyMoney$Req: java.lang.String signature
org.jaudiotagger.tag.TagOptionSingleton: boolean originalSavedAfterAdjustingID3v2Padding
org.jaudiotagger.FileConstants: int BIT5
org.jaudiotagger.tag.reference.MusicalKey: org.jaudiotagger.tag.reference.MusicalKey[] $VALUES
org.jaudiotagger.audio.asf.data.MetadataDescriptor: java.math.BigInteger QWORD_MAXVALUE
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat SRC_IN
com.caij.vip.PayInfo: java.lang.String price
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey[] $VALUES
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: int lengthOfPictureInBytes
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a s
org.jaudiotagger.tag.TagOptionSingleton: org.jaudiotagger.audio.wav.WavSaveOptions wavSaveOptions
com.umeng.analytics.pro.bd: byte a
org.jcodec.containers.mp4.boxes.EsdsBox: int maxBitrate
com.alipay.apmobilesecuritysdk.e.f: java.lang.String c
com.umeng.commonsdk.internal.a: java.lang.String a
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country TOKELAU
com.tencent.bugly.proguard.at: android.content.Context c
org.jaudiotagger.tag.mp4.field.Mp4FieldType: org.jaudiotagger.tag.mp4.field.Mp4FieldType COVERART_PNG
org.simpleframework.xml.core.AttributeLabel: java.lang.String name
com.alipay.android.phone.mrpc.core.x: com.alipay.android.phone.mrpc.core.z b
org.jcodec.containers.mp4.boxes.MetaValue: int TYPE_INT_32
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MOOD_INSTRUMENTAL
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey ARTWORK
com.umeng.commonsdk.utils.JSONArraySortUtil: java.lang.String mCompareKey
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_JUMP_BIZ_WEBVIEW
com.caij.puremusic.db.model.HistoryEntityQueries$HistorySongsQuery: long timePlayed
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$BreadthFirstEnumeration$Queue$QNode: org.jaudiotagger.utils.tree.DefaultMutableTreeNode$BreadthFirstEnumeration$Queue$QNode next
org.jaudiotagger.tag.id3.ID3v24Tag: int MASK_V24_ENCRYPTION
org.jcodec.containers.mp4.boxes.UrlBox: java.lang.String url
io.ktor.websocket.FrameType: io.ktor.websocket.FrameType$Companion Companion
com.umeng.commonsdk.statistics.AnalyticsConstants: int commonDeviceType
com.tencent.mm.opensdk.modelmsg.WXStateJumpChannelProfileInfo: int USERNAME_LENGTH_LIMIT
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_BPM
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP3_UNABLE_TO_ENCODE_URL
org.jaudiotagger.audio.aiff.AiffInfoReader: java.util.logging.Logger logger
app.cash.sqldelight.ExecutableQuery: kotlin.jvm.functions.Function1 mapper
org.jaudiotagger.tag.id3.AbstractID3v1Tag: int TAG_DATA_LENGTH
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_ORIGARTIST
org.jaudiotagger.tag.id3.AbstractID3v2Tag: int FIELD_TAGID_LENGTH
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: int FIELD_VORBIS_VERSION_LENGTH
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country YEMEN
com.umeng.commonsdk.internal.a: int o
com.caij.puremusic.fragments.search.Filter: com.caij.puremusic.fragments.search.Filter PLAYLISTS
org.jaudiotagger.tag.mp4.Mp4TagFieldSubType: org.jaudiotagger.tag.mp4.Mp4TagFieldSubType TEXT
com.umeng.commonsdk.utils.d: java.lang.String n
com.umeng.analytics.pro.ab: com.umeng.analytics.pro.a d
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country JORDAN
org.jaudiotagger.audio.mp3.XingFrame: boolean isFrameCountEnabled
org.simpleframework.xml.stream.Format: java.lang.String prolog
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: int FIELD_FRAMING_FLAG_LENGTH
com.umeng.commonsdk.statistics.common.d$a$1: com.umeng.commonsdk.statistics.common.d$a a
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey DISC_TOTAL
org.simpleframework.xml.convert.Reference: java.lang.Class actual
com.caij.puremusic.drive.model.Part: int id
com.caij.puremusic.drive.model.BaiduFileResponse: int errno
com.umeng.commonsdk.statistics.c: java.lang.String a
com.tencent.bugly.proguard.ai: long f
com.caij.puremusic.drive.model.AlbumResponse: com.caij.puremusic.drive.model.AlbumResponse$Companion Companion
com.caij.puremusic.drive.model.OneDriveItem: java.lang.String lastModifiedDateTime
com.caij.puremusic.db.model.DriveFileDownUrlInfo: java.lang.String fileId
org.simpleframework.xml.core.CompositeArray: org.simpleframework.xml.core.ArrayFactory factory
com.umeng.analytics.pro.o: java.lang.String l
org.jaudiotagger.utils.FileTypeUtil: java.util.Map extensionMap
com.caij.puremusic.db.model.Song: long dateAdded
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country GUINEA
org.simpleframework.xml.core.ElementLabel: boolean required
org.jaudiotagger.tag.mp4.Mp4ContentTypeValue: org.jaudiotagger.tag.mp4.Mp4ContentTypeValue BOOKLET
com.caij.puremusic.util.theme.ThemeMode: com.caij.puremusic.util.theme.ThemeMode[] $VALUES
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_WORK_PART_LEVEL4_TYPE
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country MOROCCO
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MOVEMENT_TOTAL
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_TV
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP3_ID3TAG_LENGTH_INCORRECT
com.umeng.analytics.pro.am: java.lang.String aA
org.jaudiotagger.tag.lyrics3.Lyrics3v2Fields: java.lang.String FIELD_V2_ALBUM
com.caij.puremusic.network.model.LastFmAlbum$Album: java.lang.String playcount
org.jaudiotagger.tag.lyrics3.Lyrics3v1Iterator: int removeIndex
com.alipay.tscenter.biz.rpc.report.general.model.DataReportResult: java.util.Map resultData
com.afollestad.materialdialogs.WhichButton: com.afollestad.materialdialogs.WhichButton NEUTRAL
com.umeng.commonsdk.config.FieldManager: java.lang.String a
com.tencent.bugly.proguard.bs: java.lang.String a
org.simpleframework.xml.core.PathParser: java.util.List indexes
com.caij.puremusic.drive.model.OneDriveFileResponse: com.caij.puremusic.drive.model.OneDriveFileResponse$Companion Companion
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage SOURCE
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String album
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_MALL_PRODUCT
com.tencent.bugly.crashreport.crash.CrashDetailBean: java.lang.String u
org.jaudiotagger.audio.flac.metadatablock.BlockType: org.jaudiotagger.audio.flac.metadatablock.BlockType[] $VALUES
com.umeng.commonsdk.statistics.proto.b: long e
com.umeng.analytics.pro.s: android.content.Context g
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey GROUPING
org.jaudiotagger.tag.reference.Tagger: org.jaudiotagger.tag.reference.Tagger MEDIA_MONKEY
com.caij.vip.GoodOrder: int STATE_CREATED
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey ORGANIZATION
com.caij.vip.GoodOrder: long expires
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_WORK_PART_LEVEL1
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int emphasis
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier DINF
org.jaudiotagger.audio.opus.OpusFileReader: java.util.logging.Logger logger
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b o
com.umeng.analytics.pro.i: int b
com.caij.puremusic.drive.model.ADriveFileResponse$$serializer: com.caij.puremusic.drive.model.ADriveFileResponse$$serializer INSTANCE
com.caij.puremusic.drive.model.OneDriveItem: com.caij.puremusic.drive.model.ParentReference parentReference
org.jaudiotagger.audio.mp3.MPEGFrameHeader: byte[] mpegBytes
com.alipay.android.phone.mrpc.core.b: java.lang.String[] b
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier STSS
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_COMPOSER_SORT_ORDER_ITUNES
com.tencent.bugly.proguard.ag: java.text.SimpleDateFormat a
com.bumptech.glide.MemoryCategory: com.bumptech.glide.MemoryCategory LOW
org.simpleframework.xml.stream.Formatter$Tag: org.simpleframework.xml.stream.Formatter$Tag COMMENT
org.simpleframework.xml.core.ClassInstantiator: org.simpleframework.xml.core.Creator primary
com.umeng.commonsdk.statistics.noise.ImLatent: long _360HOURS_IN_MS
com.tencent.bugly.crashreport.common.info.PlugInBean: java.lang.String a
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType REFERENCE_TYPE
com.umeng.commonsdk.statistics.proto.Gender: com.umeng.commonsdk.statistics.proto.Gender MALE
com.umeng.commonsdk.statistics.proto.c: long e
com.umeng.commonsdk.utils.UMUtils: java.lang.String sAppVersionName
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_OPENSDK_LITEAPP
com.thegrizzlylabs.sardineandroid.model.Link: java.util.List src
org.jaudiotagger.audio.asf.data.EncryptionChunk: java.lang.String protectionType
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a t
com.tencent.bugly.proguard.bo: java.util.Map h
org.simpleframework.xml.stream.Formatter$Tag: org.simpleframework.xml.stream.Formatter$Tag START
com.umeng.analytics.pro.o: java.lang.String t
com.umeng.commonsdk.statistics.noise.Defcon: int LEVEL_1
com.caij.puremusic.drive.model.AlbumList$$serializer: com.caij.puremusic.drive.model.AlbumList$$serializer INSTANCE
org.jaudiotagger.tag.id3.AbstractID3v1Tag: java.lang.String TAG
org.simpleframework.xml.core.SignatureCreator: org.simpleframework.xml.core.Signature signature
com.umeng.analytics.pro.d: java.lang.String x
com.caij.puremusic.drive.model.AlbumArtist: java.lang.String Name
org.simpleframework.xml.stream.StreamReader$Start: javax.xml.stream.Location location
org.simpleframework.xml.core.MethodContact: java.lang.Class item
com.umeng.commonsdk.config.d: java.lang.String d
com.umeng.analytics.pro.bo: byte j
org.jaudiotagger.audio.asf.util.TagConverter: boolean $assertionsDisabled
org.simpleframework.xml.core.ElementListParameter: org.simpleframework.xml.core.Label label
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_CONDUCTOR
com.tencent.bugly.proguard.bb: java.lang.String e
com.umeng.analytics.pro.ad$b: android.os.IBinder a
org.simpleframework.xml.core.PrimitiveInlineList: org.simpleframework.xml.core.Primitive root
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country AZERBAIJAN
com.caij.puremusic.drive.model.Type$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.umeng.commonsdk.statistics.noise.ImLatent: android.content.Context context
com.google.android.gms.internal.play_billing.zzfb: com.google.android.gms.internal.play_billing.zzfb zzb
com.tencent.bugly.crashreport.biz.UserInfoBean: android.os.Parcelable$Creator CREATOR
com.umeng.commonsdk.framework.UMModuleRegister: java.lang.String SHARE
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzI
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP4_FILE_META_ATOM_CHILD_DATA_NOT_NULL
org.jaudiotagger.tag.id3.ID3v23Tag: java.lang.String TYPE_UNSYNCHRONISATION
com.caij.puremusic.db.model.ArtistQueries$deleteArtistById$2: com.caij.puremusic.db.model.ArtistQueries$deleteArtistById$2 INSTANCE
com.caij.puremusic.db.model.DriveFileDownUrlInfo: java.lang.String url
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey ACOUSTID_FINGERPRINT
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier SKIP
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_TITLE_SORT_OWNER
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MOOD_RELAXED
org.jaudiotagger.audio.asf.data.StreamChunk: long streamSpecificDataSize
com.caij.puremusic.drive.model.OneDriveItem: java.lang.String createdDateTime
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_TITLE_REFINEMENT
com.tencent.mm.opensdk.modelmsg.WXStateJumpChannelProfileInfo: java.lang.String username
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier ODTT
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MUSICBRAINZ_WORK_PART_LEVEL3_ID
com.caij.puremusic.model.Data: int nbFan
com.umeng.analytics.pro.bn: com.umeng.analytics.pro.bz h
org.jaudiotagger.tag.id3.AbstractID3v1Tag: int FIELD_ARTIST_POS
com.caij.puremusic.drive.model.SubsonicPlaylist: com.caij.puremusic.drive.model.SubsonicPlaylist$Companion Companion
com.caij.puremusic.db.model.SongQueries$GetArtistSongCountQuery: java.lang.String artistId_
com.umeng.analytics.pro.am: java.lang.String b
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat SRC_OUT
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind MPEG2_MAIN_VIDEO
com.umeng.commonsdk.statistics.common.ULog: java.lang.String TAG
com.umeng.analytics.pro.v: com.umeng.analytics.vshelper.a b
org.simpleframework.xml.core.Collector: org.simpleframework.xml.core.Collector$Registry alias
org.simpleframework.xml.core.TextListLabel: java.lang.String empty
com.alipay.apmobilesecuritysdk.face.EnvModeConfig: int ENVIRONMENT_PRE
androidx.constraintlayout.core.SolverVariable$Type: androidx.constraintlayout.core.SolverVariable$Type ERROR
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MUSICBRAINZ_WORK_PART_LEVEL1_ID
org.jaudiotagger.tag.id3.ID3v1Tag$1: int[] $SwitchMap$org$jaudiotagger$tag$FieldKey
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country PORTUGAL
com.umeng.commonsdk.statistics.c: com.umeng.commonsdk.statistics.idtracking.e h
org.jaudiotagger.audio.asf.data.ContainerType: boolean guidEnabled
com.umeng.commonsdk.statistics.proto.d$e: short e
com.tencent.bugly.proguard.aa: java.lang.String h
com.caij.puremusic.drive.model.WebDAVToken: java.lang.String username
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey DISC_TOTAL
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
com.thegrizzlylabs.sardineandroid.model.Activelock: java.lang.String timeout
com.umeng.commonsdk.vchannel.Sender: java.lang.String VCHANNEL_VERSION
com.tencent.bugly.proguard.bo: java.util.ArrayList z
com.alipay.sdk.m.j.c: com.alipay.sdk.m.j.c f
com.caij.puremusic.drive.model.SubsonicAlbum: java.lang.String id
com.alipay.apmobilesecuritysdk.f.b: com.alipay.apmobilesecuritysdk.f.b a
com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.shape.MaterialShapeDrawable materialShapeDrawable
com.umeng.analytics.pro.aq: java.lang.String k
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int HEADER_SIZE
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: java.lang.String time
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey INVOLVED_PERSON
org.jaudiotagger.audio.aiff.AiffType: java.lang.String code
com.umeng.analytics.pro.e$a: java.lang.String a
com.umeng.commonsdk.utils.d: java.lang.String I
com.tencent.mm.opensdk.diffdev.a.d: com.tencent.mm.opensdk.diffdev.a.d c
org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile: org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile MAIN
com.umeng.commonsdk.statistics.idtracking.e: long g
org.jaudiotagger.tag.id3.ID3v23Frame: int groupIdentifier
com.caij.puremusic.drive.model.JellyfinArtistResponse: int TotalRecordCount
org.simpleframework.xml.core.TextParameter: org.simpleframework.xml.core.Expression expression
com.caij.puremusic.drive.model.ParentReference: java.lang.String id
org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile: org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile HILN
org.jcodec.containers.mp4.boxes.SegmentIndexBox: org.jcodec.containers.mp4.boxes.SegmentIndexBox$Reference[] references
com.tencent.bugly.crashreport.crash.CrashDetailBean: long a
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country ZIMBABWE
com.caij.puremusic.drive.model.AlbumItem: boolean CanDelete
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey TEMPO
com.umeng.analytics.pro.cb: byte l
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey CUSTOM_1
com.thegrizzlylabs.sardineandroid.model.Multistatus: java.lang.String responsedescription
org.jaudiotagger.tag.id3.reference.MediaMonkeyPlayerRating: org.jaudiotagger.tag.id3.reference.ID3Rating rating
org.jaudiotagger.audio.mp3.MPEGFrameHeader: java.util.Map mpegVersionMap
com.umeng.commonsdk.config.d$d: com.umeng.commonsdk.config.d$d c
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: int FIELD_BITRATE_MIN_LENGTH
org.jaudiotagger.tag.mp4.field.Mp4FieldType: org.jaudiotagger.tag.mp4.field.Mp4FieldType GUID
com.umeng.analytics.process.a$a: java.lang.String g
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP3_FRAME_IS_COMPRESSED
org.jaudiotagger.tag.datatype.AbstractValuePair: java.util.List valueList
com.caij.puremusic.drive.model.PlexSectionsResponse$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.caij.puremusic.drive.model.PlexSongsResponse: com.caij.puremusic.drive.model.MediaContainer MediaContainer
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_UNKNOWN
com.tencent.bugly.proguard.aa: long ae
com.tencent.mm.opensdk.diffdev.a.b$a: java.lang.String b
org.jaudiotagger.audio.asf.io.AsfExtHeaderModifier: boolean $assertionsDisabled
com.tencent.bugly.proguard.au: com.tencent.bugly.proguard.aa c
org.jaudiotagger.tag.id3.ID3v24Tag: int MASK_V24_EXTENDED_HEADER
com.tencent.bugly.proguard.t: java.lang.String f
com.umeng.commonsdk.statistics.idtracking.i: java.lang.String a
com.tencent.bugly.proguard.ag$b: java.lang.String c
com.tencent.bugly.BuglyStrategy: boolean m
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: int noOfSamples
org.jaudiotagger.tag.id3.valuepair.TextEncoding: java.lang.String CHARSET_UTF_16
okhttp3.TlsVersion: okhttp3.TlsVersion SSL_3_0
org.jaudiotagger.tag.datatype.Lyrics3Image: org.jaudiotagger.tag.datatype.Lyrics3TimeStamp time
com.caij.puremusic.model.lyrics.Lyrics: boolean valid
com.umeng.analytics.pro.am: java.lang.String F
com.tencent.bugly.proguard.ax: long c
com.caij.puremusic.drive.model.PlexLoginResponse$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.jaudiotagger.tag.id3.ID3v24Tag: int MASK_V24_TAG_RESTRICTIONS
com.umeng.analytics.pro.ad$a: boolean a
nl.adaptivity.xmlutil.core.KtXmlWriter$EscapeMode: nl.adaptivity.xmlutil.core.KtXmlWriter$EscapeMode MINIMAL
com.tencent.bugly.proguard.ba: boolean e
org.simpleframework.xml.transform.DateType: org.simpleframework.xml.transform.DateType SHORT
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_EMOJILIST_SHARED
org.simpleframework.xml.core.LabelExtractor$LabelBuilder: java.lang.Class type
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_ALBUM_TYPE
com.tencent.bugly.crashreport.biz.UserInfoBean: long k
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_FILENAME
nl.adaptivity.xmlutil.serialization.OutputKind: nl.adaptivity.xmlutil.serialization.OutputKind Mixed
com.tencent.bugly.proguard.aj: java.lang.String q
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey TRACK
org.jaudiotagger.audio.wav.WavSubFormat: java.lang.String description
com.tencent.mm.opensdk.constants.ConstantsAPI$LaunchWX: int LAUNCH_WX_ENTRY_PENDING_INTENT_SEND_CODE
com.tencent.bugly.proguard.br: byte[] c
com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion JAVA9
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier DCFD
org.jaudiotagger.tag.id3.ID3v22Frames: java.util.EnumMap id3ToTagField
androidx.fragment.app.Fragment: int mBackStackNesting
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype CDMA
org.jaudiotagger.tag.id3.valuepair.V2GenreTypes: org.jaudiotagger.tag.id3.valuepair.V2GenreTypes v2GenresTypes
com.umeng.analytics.pro.am: java.lang.String Y
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey URL_DISCOGS_ARTIST_SITE
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage GENERAL_WRITE_PROBLEM_CLOSING_FILE_HANDLE
com.tencent.bugly.proguard.bq: java.util.Map k
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey URL_WIKIPEDIA_ARTIST_SITE
com.tencent.mm.opensdk.modelbiz.WXInvoiceAuthInsert$Req: int URL_LENGTH_LIMIT
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean detached
com.tencent.bugly.BuglyStrategy: int a
com.caij.puremusic.db.model.FolderQueries$insertFolder$2: com.caij.puremusic.db.model.FolderQueries$insertFolder$2 INSTANCE
org.xmlpull.v1.XmlPullParser: int ENTITY_REF
com.umeng.analytics.pro.am: java.lang.String aE
androidx.appcompat.widget.Toolbar: androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback
org.jaudiotagger.audio.AudioFileIO: org.jaudiotagger.audio.generic.ModificationHandler modificationHandler
org.simpleframework.xml.core.StructureBuilder: org.simpleframework.xml.core.Label text
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage GENERAL_WRITE_FAILED_TO_OPEN_FILE_FOR_EDITING
com.caij.puremusic.db.model.ArtistQueries$searchArtistByName$1: kotlin.jvm.functions.Function2 $mapper
com.caij.puremusic.db.model.SongEntityQueries$deleteSongFromPlaylist$2: com.caij.puremusic.db.model.SongEntityQueries$deleteSongFromPlaylist$2 INSTANCE
org.simpleframework.xml.core.CompositeInlineMap: org.simpleframework.xml.core.Converter key
com.umeng.analytics.pro.d: java.lang.String p
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b g
com.umeng.analytics.pro.ae: int a
org.jaudiotagger.tag.TagOptionSingleton: org.jaudiotagger.audio.wav.WavSaveOrder wavSaveOrder
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: int b
org.simpleframework.xml.stream.Splitter: java.lang.StringBuilder builder
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier ALBUM
com.google.android.material.checkbox.MaterialCheckBox$SavedState: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script JAPANESE
com.tencent.mm.opensdk.modelbiz.OpenWebview$Req: java.lang.String url
com.umeng.analytics.pro.am: java.lang.String e
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage ID3_UNABLE_TO_DECOMPRESS_FRAME
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_ORIGINAL_ALBUMID
org.jaudiotagger.tag.id3.ID3v24Tag: boolean unsynchronization
com.umeng.commonsdk.utils.d: java.lang.String J
com.caij.puremusic.drive.model.Directory: java.lang.String key
com.umeng.analytics.pro.j: java.lang.String C
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons RESUMED
org.simpleframework.xml.core.CompositeMap: org.simpleframework.xml.stream.Style style
com.tencent.mm.opensdk.modelmsg.WXStateSceneDataObject$IWXStateJumpInfo: int WX_STATE_JUMP_TYPE_UNKNOWN
com.umeng.analytics.pro.bv: int f
com.google.common.hash.Hashing$ChecksumType: com.google.common.hash.Hashing$ChecksumType ADLER_32
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand: android.os.Parcelable$Creator CREATOR
com.tencent.bugly.proguard.s: long j
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP4_REVERSE_DNS_FIELD_HAS_NO_DATA
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage ID3_TAG_CRC
org.jaudiotagger.tag.id3.framebody.FrameBodySYTC: int MILLISECONDS
com.umeng.analytics.b: org.json.JSONObject l
com.umeng.commonsdk.utils.d: java.lang.String am
org.jaudiotagger.audio.generic.AudioFileWriter: java.lang.String FILE_NAME_TOO_LONG2
org.jaudiotagger.tag.id3.ID3v24Tag: boolean updateTag
com.caij.puremusic.drive.model.AlbumResponse$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.jaudiotagger.audio.mp4.ChunkWriter: java.nio.channels.SeekableByteChannel out
com.alipay.apmobilesecuritysdk.f.b: java.lang.Thread b
com.tencent.mm.opensdk.modelbiz.WXChannelShareVideo$Req: java.lang.String videoPath
org.jaudiotagger.audio.asf.data.MetadataContainer: java.util.Map descriptors
org.jaudiotagger.tag.id3.ID3v11Tag: byte track
com.caij.puremusic.drive.model.ADriveFileResponse: java.lang.String next_marker
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MOOD_SAD
com.tencent.mmkv.MMKVLogLevel: com.tencent.mmkv.MMKVLogLevel[] $VALUES
com.caij.puremusic.drive.model.FMediaContainer$$serializer: com.caij.puremusic.drive.model.FMediaContainer$$serializer INSTANCE
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgram$Req: java.lang.String userName
org.jaudiotagger.utils.FileTypeUtil: java.lang.Integer[] mp3v1Sig_4
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat HUE
com.tencent.bugly.proguard.as: java.util.Map h
com.tencent.bugly.proguard.bg: boolean d
com.alipay.sdk.m.j.c: com.alipay.sdk.m.j.c j
org.jaudiotagger.tag.id3.AbstractID3v1Tag: java.lang.String TYPE_TITLE
com.umeng.analytics.pro.j: java.lang.String u
com.thegrizzlylabs.sardineandroid.model.Propstat: com.thegrizzlylabs.sardineandroid.model.Error error
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: int defaultSampleFlags
com.umeng.commonsdk.stateless.c: java.lang.String a
com.tencent.mm.opensdk.constants.ConstantsAPI$Token: java.lang.String WX_TOKEN_KEY
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey URL_OFFICIAL_RELEASE_SITE
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_SIGNATURE
com.tencent.mm.opensdk.modelmsg.WXDesignerSharedObject: java.lang.String designerRediretctUrl
org.repackage.com.meizu.flyme.openidsdk.OpenId: long a
com.umeng.commonsdk.utils.d: java.lang.String g
com.umeng.commonsdk.statistics.noise.Defcon: int LEVEL_3
com.umeng.analytics.pro.m: com.umeng.analytics.pro.m$a g
com.caij.puremusic.db.model.SongEntityQueries$CheckSongPlaylistExistsQuery: long playlistId
org.simpleframework.xml.core.AttributeLabel: org.simpleframework.xml.stream.Format format
com.caij.puremusic.drive.model.OneDriveFileResponse: java.lang.String context
com.tencent.mm.opensdk.modelmsg.WXMusicVipInfo: int LENGTH_LIMIT
kotlinx.coroutines.DispatchedCoroutine: int _decision
com.umeng.analytics.pro.j: java.lang.String Q
com.tencent.bugly.proguard.as: java.util.ArrayList i
org.jaudiotagger.tag.TagOptionSingleton: java.lang.String DEFAULT
com.google.android.material.bottomsheet.BottomSheetDragHandleView: java.lang.String clickToCollapseActionLabel
com.tencent.bugly.proguard.aa: java.lang.Object T
com.umeng.commonsdk.statistics.internal.c: com.umeng.commonsdk.statistics.internal.b d
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey ARTISTS_SORT
com.caij.puremusic.db.model.SongQueries$songsByIds$1: com.caij.puremusic.db.model.SongQueries this$0
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_ALBUMARTISTID
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind V2
com.tencent.bugly.proguard.at$3: byte[] e
com.umeng.commonsdk.stateless.b: java.util.LinkedList l
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_PRIVATE
io.ktor.websocket.CloseReason$Codes: io.ktor.websocket.CloseReason$Codes UNEXPECTED_CONDITION
com.umeng.commonsdk.framework.UMFrUtils: java.lang.String KEY_LAST_INSTANT_SUCC_BUILD_TIME
org.repackage.com.miui.deviceid.BuildConfig: boolean a
org.simpleframework.xml.core.Persister: org.simpleframework.xml.core.SessionManager manager
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: int value
com.umeng.analytics.MobclickAgent$EScenarioType: com.umeng.analytics.MobclickAgent$EScenarioType[] b
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b i
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country CONGO
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey LYRICIST
io.ktor.utils.io.ByteChannelSequentialBase: long _totalBytesWritten
org.json.alipay.c: char c
com.tencent.bugly.proguard.as: java.util.Map k
org.jcodec.containers.mp4.boxes.AliasBox: int VolumeMountPoint
com.caij.puremusic.db.model.SongQueries$songsByInfo$2: com.caij.puremusic.db.model.SongQueries$songsByInfo$2 INSTANCE
com.alipay.android.phone.mrpc.core.p: int c
org.jaudiotagger.audio.aiff.chunk.ID3Chunk: java.util.logging.Logger logger
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey INVOLVED_PERSON
com.tencent.bugly.proguard.ao: java.lang.StringBuilder e
com.tencent.bugly.proguard.aa: java.lang.String F
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_ORIGINALALBUMID
com.tencent.mm.opensdk.constants.ConstantsAPI$AppSupportContentFlag: long MMAPP_SUPPORT_AUDIO
com.caij.puremusic.model.UpdateInfo: java.lang.String md5
com.umeng.analytics.AnalyticsConfig: java.lang.Object f
org.jcodec.containers.mp4.boxes.SegmentIndexBox$Reference: long subsegment_duration
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey URL_LYRICS_SITE
org.jaudiotagger.audio.ogg.util.OggPageHeader: byte streamStructureRevision
org.jaudiotagger.tag.reference.Tagger: org.jaudiotagger.tag.reference.Tagger JRIVER
com.tencent.bugly.proguard.ao: boolean m
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode COMPRESSION_ERROR
com.tencent.bugly.proguard.bt: boolean b
com.tencent.mm.opensdk.modelmsg.WXEmojiPageSharedObject: java.lang.String iconUrl
com.tencent.bugly.proguard.bt: boolean o
com.tencent.bugly.BuglyStrategy: com.tencent.bugly.BuglyStrategy$a u
com.umeng.commonsdk.utils.UMUtils: java.lang.String WIFI
com.caij.puremusic.drive.model.SongItem: java.lang.String Name
com.umeng.analytics.pro.r: int a
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String artistId
org.jaudiotagger.tag.id3.valuepair.TextEncoding: java.lang.String CHARSET_UTF_16BE
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: android.content.Context k
com.umeng.commonsdk.UMConfigure: com.umeng.analytics.MobclickAgent$PageMode AUTO_ACTIVITY_PAGE_COLLECTION
com.alipay.tscenter.biz.rpc.vkeydfp.request.DeviceDataReportRequest: java.lang.String os
com.tencent.bugly.proguard.bq: java.lang.String e
org.simpleframework.xml.filter.EnvironmentFilter: org.simpleframework.xml.filter.Filter filter
org.jaudiotagger.tag.id3.ID3v23Frames: java.util.EnumMap tagFieldToId3
org.simpleframework.xml.convert.Registry: org.simpleframework.xml.util.Cache cache
com.caij.puremusic.db.model.AlbumQueries$deleteAlbumById$2: com.caij.puremusic.db.model.AlbumQueries$deleteAlbumById$2 INSTANCE
com.caij.puremusic.fragments.search.Filter: com.caij.puremusic.fragments.search.Filter[] $VALUES
com.caij.puremusic.drive.model.SongItem: java.lang.String Id
com.caij.puremusic.drive.model.Resourcetype: com.caij.puremusic.drive.model.Resourcetype$Companion Companion
com.tencent.bugly.crashreport.common.info.PlugInBean: java.lang.String b
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int MODE_EXTENSION_TWO
com.caij.puremusic.drive.model.ADriveItem$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind V1
com.thegrizzlylabs.sardineandroid.model.Resourcetype: com.thegrizzlylabs.sardineandroid.model.Collection collection
com.caij.puremusic.db.model.SongQueries$SearchSongsByTitleQuery: java.lang.String title
com.caij.puremusic.model.DriveFileParcelable: long updateTime
org.jaudiotagger.audio.aiff.chunk.ApplicationChunk: org.jaudiotagger.audio.aiff.AiffAudioHeader aiffHeader
com.umeng.commonsdk.config.d$c: com.umeng.commonsdk.config.d$c o
com.alipay.sdk.app.PayTask: com.alipay.sdk.m.x.a b
org.jaudiotagger.audio.mp4.ChunkReader: org.jcodec.containers.mp4.boxes.SampleEntry[] entries
org.jaudiotagger.audio.wav.chunk.WavFactChunk: boolean isValid
com.google.android.material.bottomsheet.BottomSheetDialog: boolean cancelable
com.caij.puremusic.drive.model.EmbyAlbumsResponse$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MUSICBRAINZ_ORIGINAL_RELEASEID
org.jaudiotagger.tag.datatype.Lyrics3Image: java.lang.String description
com.umeng.analytics.pro.by: byte a
org.jaudiotagger.tag.id3.framebody.FrameBodyASPI: java.lang.String INDEXED_DATA_LENGTH
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey WORK_PART_LEVEL5_TYPE
com.caij.puremusic.db.model.Album: long artistId
com.tencent.mm.opensdk.modelbiz.ChooseCardFromWXCardPackage$Req: java.lang.String nonceStr
org.jcodec.containers.mp4.boxes.TimecodeMediaInfoBox: short face
nl.adaptivity.xmlutil.serialization.OutputKind: nl.adaptivity.xmlutil.serialization.OutputKind Attribute
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_WORK_PART_LEVEL1_TYPE
com.umeng.commonsdk.statistics.proto.Response: int __RESP_CODE_ISSET_ID
com.tencent.mm.opensdk.modelpay.PayReq$Options: java.lang.String callbackClassName
org.jaudiotagger.audio.iff.IffHeaderChunk: int SIZE_LENGTH
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MOOD_ELECTRONIC
org.jaudiotagger.tag.wav.WavInfoTag: java.lang.Long endLocationInFile
androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState
com.umeng.commonsdk.framework.a: boolean l
com.caij.puremusic.db.model.PlayCountEntityQueries$update$1: long $playCount
com.umeng.commonsdk.internal.c: int f
androidx.fragment.app.DialogFragment: int STYLE_NO_INPUT
org.jaudiotagger.audio.ogg.util.OggPageHeader: int FIELD_PAGE_CHECKSUM_POS
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_PRODUCT
org.jaudiotagger.audio.generic.GenericAudioHeader: java.lang.Boolean isLossless
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country VIETNAM
com.caij.puremusic.drive.model.GoogleDriveFileResponse: java.lang.String kind
org.simpleframework.xml.core.ScannerFactory: org.simpleframework.xml.core.Support support
com.tencent.bugly.proguard.bb: java.lang.String h
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey DATE
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_TIME
com.umeng.analytics.pro.l: boolean b
com.tencent.mm.opensdk.diffdev.OAuthErrCode: com.tencent.mm.opensdk.diffdev.OAuthErrCode WechatAuth_Err_OK
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey ALBUM_SORT
com.caij.puremusic.db.model.AlbumQueries$GetAlbumByArtistIdQuery: com.caij.puremusic.db.model.AlbumQueries this$0
com.caij.puremusic.db.model.SongQueries$songsByArtist$1: kotlin.jvm.functions.Function18 $mapper
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_CREATE_CHATROOM
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding SIGNED
com.caij.puremusic.model.DeezerResponse: java.util.List data
com.umeng.commonsdk.statistics.idtracking.e$a: android.content.Context a
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey LYRICIST
org.simpleframework.xml.util.Resolver$Cache: org.simpleframework.xml.util.Resolver this$0
com.tencent.bugly.proguard.ay: com.tencent.bugly.proguard.bg m
com.alipay.apmobilesecuritysdk.face.APSecuritySdk$TokenResult: java.lang.String umidToken
org.simpleframework.xml.core.Revision: boolean equal
org.jaudiotagger.tag.datatype.NumberHashMap: boolean hasEmptyValue
com.umeng.analytics.pro.an$e: com.umeng.analytics.pro.an$e i
com.tencent.mm.opensdk.modelmsg.WXAppLaunchData: int launchType
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_WORK_COMPOSITION
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP4_FILE_CONTAINS_MULTIPLE_DATA_ATOMS
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier NEVER
org.jaudiotagger.tag.lyrics3.Lyrics3v2Fields: java.lang.String FIELD_V2_LYRICS_MULTI_LINE_TEXT
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a r
com.umeng.analytics.process.DBFileTraversalUtil: java.util.concurrent.ExecutorService a
org.simpleframework.xml.core.Composite: org.simpleframework.xml.core.Revision revision
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_WORK_PART_LEVEL6_ID
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey PRODUCTNUMBER
org.jaudiotagger.tag.images.AndroidArtwork: java.lang.String imageUrl
org.json.alipay.c: boolean d
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: com.tencent.bugly.proguard.aa d
com.tencent.bugly.proguard.bq: java.lang.String p
org.jaudiotagger.tag.id3.valuepair.TextEncoding: org.jaudiotagger.tag.id3.valuepair.TextEncoding textEncodings
com.umeng.analytics.AnalyticsConfig: java.lang.String b
org.jaudiotagger.tag.id3.AbstractID3v2Tag: int fileReadSize
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country ARUBA
com.tencent.bugly.crashreport.biz.UserInfoBean: int o
kotlin.reflect.KVariance: kotlin.reflect.KVariance OUT
org.simpleframework.xml.core.CompositeUnion: org.simpleframework.xml.core.Context context
com.caij.puremusic.db.model.HistoryEntityQueries$HistorySongsQuery: long value
com.tencent.mm.opensdk.constants.ConstantsAPI$AppSupportContentFlag: long MMAPP_SUPPORT_XLS
com.umeng.commonsdk.config.FieldManager: boolean c
com.umeng.commonsdk.framework.a: int g
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey TV_EPISODE_NUMBER
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey BPM
org.jaudiotagger.audio.ogg.util.OggPageHeader: int FIELD_STREAM_STRUCTURE_VERSION_POS
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script SARATI
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script OLD_PERMIC
org.jaudiotagger.audio.asf.data.ContentBranding: java.lang.String KEY_BANNER_IMAGE
com.tencent.bugly.crashreport.common.strategy.StrategyBean: java.lang.String q
org.jcodec.containers.mp4.boxes.SegmentIndexBox$Reference: long SAP_delta_time
com.thegrizzlylabs.sardineandroid.model.Response: java.util.List propstat
com.caij.puremusic.db.model.AlbumQueries$albums$1: kotlin.jvm.functions.Function11 $mapper
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country CAMBODIA
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage WMA_INVALID_GUID_USE
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country JAPAN
com.umeng.analytics.pro.bp: short c
org.simpleframework.xml.core.ElementListUnionLabel: org.simpleframework.xml.core.GroupExtractor extractor
org.jaudiotagger.tag.wav.WavTag: java.lang.String NULL
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_RELEASE_TIME
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b e
org.jaudiotagger.audio.flac.metadatablock.BlockType: org.jaudiotagger.audio.flac.metadatablock.BlockType SEEKTABLE
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country COTE_D_IVOIRE
com.alipay.tscenter.biz.rpc.report.general.model.DataReportResult: boolean success
com.umeng.commonsdk.statistics.noise.ImLatent: long latentHour
org.jcodec.containers.mp4.boxes.GamaExtension: float gamma
com.alipay.android.phone.mrpc.core.k$a: int a
com.caij.puremusic.model.AlbumWithCount: int count
org.jaudiotagger.audio.ogg.util.OggPageHeader: int FIELD_ABSOLUTE_GRANULE_POS
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: int bitrateNominal
com.caij.puremusic.db.model.PlaylistEntityQueries$getPlaylistEntityById$2: com.caij.puremusic.db.model.PlaylistEntityQueries$getPlaylistEntityById$2 INSTANCE
com.umeng.analytics.pro.j: java.lang.String f
com.tencent.mm.opensdk.modelpay.PayReq: java.lang.String extData
org.jaudiotagger.audio.ogg.util.OggPageHeader: boolean firstPage
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey CONTENT_TYPE
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country CAMEROON
org.jcodec.containers.mp4.boxes.HandlerBox: java.lang.String componentName
org.jaudiotagger.audio.asf.data.GUID: org.jaudiotagger.audio.asf.data.GUID GUID_STREAM_BITRATE_PROPERTIES
com.caij.puremusic.model.DriveFileParcelable: long fileLength
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MOOD_HAPPY
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: int id
com.tencent.mm.opensdk.modelmsg.SendAuth$Options: java.lang.String callbackClassName
org.jaudiotagger.tag.TagOptionSingleton: boolean id3v2PaddingCopyTag
com.caij.puremusic.fragments.AlbumCoverStyle: com.caij.puremusic.fragments.AlbumCoverStyle Card
com.umeng.commonsdk.utils.UMUtils: java.lang.String KEY_MIUI_VERSION_NAME
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey TV_SEASON
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_VALID_UNTIL
com.tencent.mm.opensdk.constants.ConstantsAPI: java.lang.String CHECK_SUM
org.jaudiotagger.audio.ogg.util.OggPageHeader: int FIELD_PAGE_SEGMENTS_LENGTH
org.jaudiotagger.audio.mp4.Mp4TagWriter: java.util.logging.Logger logger
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey SUBTITLE
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_RATING
com.umeng.commonsdk.statistics.common.MLog: int LEVEL_DEBUG
com.caij.puremusic.model.AlbumWrapper: java.util.List songs
org.jaudiotagger.tag.images.AndroidArtwork: byte[] binaryData
org.jcodec.containers.mp4.boxes.SampleSizesBox: int[] sizes
com.umeng.analytics.process.DBFileTraversalUtil$1: com.umeng.analytics.process.DBFileTraversalUtil$a c
org.simpleframework.xml.core.ClassInstantiator: org.simpleframework.xml.core.Detail detail
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier TKHD
com.umeng.commonsdk.statistics.proto.b$e: java.util.Map d
com.umeng.commonsdk.statistics.proto.b: java.lang.String a
com.umeng.commonsdk.statistics.proto.a: com.umeng.analytics.pro.bz g
com.umeng.commonsdk.statistics.proto.b: com.umeng.analytics.pro.bp g
org.simpleframework.xml.core.TextParameter: int index
org.jaudiotagger.utils.tree.TreePath: java.lang.Object lastPathComponent
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MOOD_RELAXED
org.jaudiotagger.utils.tree.TreeModelEvent: int[] childIndices
org.simpleframework.xml.core.TreeModel: org.simpleframework.xml.core.Detail detail
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType BLUETOOTH
org.jaudiotagger.tag.id3.ID3v23Tag: byte RELEASE
org.jaudiotagger.audio.ogg.util.VorbisPacketType: org.jaudiotagger.audio.ogg.util.VorbisPacketType COMMENT_HEADER
com.caij.puremusic.drive.model.PlaylistMetadata$$serializer: com.caij.puremusic.drive.model.PlaylistMetadata$$serializer INSTANCE
com.caij.puremusic.drive.model.Type$$serializer: com.caij.puremusic.drive.model.Type$$serializer INSTANCE
com.tencent.bugly.crashreport.common.strategy.StrategyBean: long p
com.umeng.analytics.pro.j: java.lang.String E
com.tencent.mm.opensdk.constants.ConstantsAPI: java.lang.String ACTION_HANDLE_APP_UNREGISTER
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: java.util.Map f
com.umeng.commonsdk.debug.UMLog: java.lang.String TAG
com.caij.puremusic.db.model.ArtistQueries$artistById$1: kotlin.jvm.functions.Function2 $mapper
com.umeng.commonsdk.statistics.proto.Response: int resp_code
com.caij.puremusic.db.model.SongQueries$SongsByAlumQuery: java.lang.String value
org.simpleframework.xml.core.EmptyExpression: org.simpleframework.xml.stream.Style style
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgramWithToken$Resp: java.lang.String extMsg
com.tencent.bugly.proguard.bf: long g
org.simpleframework.xml.core.CompositeList: java.lang.String name
org.repackage.com.meizu.flyme.openidsdk.SupportInfo: java.lang.Boolean b
com.umeng.analytics.pro.o$d: java.util.Map a
com.umeng.analytics.pro.o$a: int E
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey ENGINEER
com.caij.puremusic.db.model.Folder: java.lang.String extJson
com.caij.puremusic.drive.model.AlbumListResponse: com.caij.puremusic.drive.model.SubsonicResponse subsonicResponse
org.jaudiotagger.tag.id3.ID3v23Tag: int MASK_V23_CRC_DATA_PRESENT
com.tencent.bugly.proguard.g: java.util.Map i
org.jaudiotagger.test.ExtractID3TagFromFile$MP3FileFilter: org.jaudiotagger.test.ExtractID3TagFromFile this$0
com.bumptech.glide.Priority: com.bumptech.glide.Priority LOW
org.repackage.com.meizu.flyme.openidsdk.b: android.content.BroadcastReceiver h
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script ETHIOPIC
com.umeng.commonsdk.framework.UMModuleRegister: java.lang.String PUSH
com.umeng.commonsdk.framework.UMModuleRegister: java.lang.String PROCESS
com.umeng.commonsdk.statistics.proto.Response$e: com.umeng.commonsdk.statistics.proto.Response$e b
com.umeng.analytics.pro.o: java.lang.Class y
androidx.fragment.app.Fragment: boolean mRetainInstanceChangedWhileDetached
com.alipay.android.phone.mrpc.core.b: org.apache.http.HttpRequestInterceptor c
io.ktor.util.date.Month: io.ktor.util.date.Month MARCH
org.jcodec.containers.mp4.boxes.TimecodeMediaInfoBox: short size
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country GRENADA
org.simpleframework.xml.core.ExtractorFactory$ElementListExtractor: org.simpleframework.xml.stream.Format format
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_RELEASEGROUPID
com.caij.puremusic.db.model.SongEntityQueries$CheckSongPlaylistExistsQuery: com.caij.puremusic.db.model.SongEntityQueries this$0
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script DEVANAGARI
com.umeng.analytics.process.UMProcessDBHelper: com.umeng.analytics.process.UMProcessDBHelper mInstance
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country BRAZIL
org.simpleframework.xml.core.CompositeListUnion: org.simpleframework.xml.core.Group group
com.umeng.analytics.pro.y: java.util.List d
com.tencent.bugly.proguard.aa: java.lang.String l
com.umeng.analytics.AnalyticsConfig: java.lang.String GPU_RENDERER
org.simpleframework.xml.core.Introspector: java.lang.annotation.Annotation marker
org.repackage.com.vivo.identifier.IdentifierIdClient: java.lang.String d
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP4_FILE_NOT_AUDIO
org.simpleframework.xml.convert.Registry: org.simpleframework.xml.convert.RegistryBinder binder
org.jaudiotagger.audio.asf.data.MetadataDescriptor: int TYPE_GUID
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_URL_OFFICIAL_RADIO
org.jaudiotagger.tag.vorbiscomment.VorbisCommentReader: int FIELD_VENDOR_LENGTH_LENGTH
org.repackage.com.vivo.identifier.IdentifierIdClient: int i
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey ALBUM_ARTISTS_SORT
org.jaudiotagger.tag.lyrics3.FieldFrameBodyIMG: java.util.ArrayList images
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey WORK_TYPE
com.google.common.io.Files$FilePredicate: com.google.common.io.Files$FilePredicate IS_DIRECTORY
com.tencent.mm.opensdk.diffdev.a.b: com.tencent.mm.opensdk.diffdev.OAuthListener f
com.caij.puremusic.drive.model.PlayListSubsonicResponse: com.caij.puremusic.drive.model.PlayListSubsonicResponse$Companion Companion
com.umeng.vt.diff.V: int TYPE_ABTEST
com.tencent.mm.opensdk.modelmsg.WXMiniProgramObject: boolean isUpdatableMessage
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey INVOLVED_PEOPLE
com.umeng.commonsdk.config.d$c: com.umeng.commonsdk.config.d$c q
nl.adaptivity.xmlutil.EventType: nl.adaptivity.xmlutil.EventType START_ELEMENT
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String ENSEMBLE
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: int defaultSampleDuration
com.tencent.mm.opensdk.modelbiz.OpenBusiLuckyMoney$Req: java.lang.String signType
com.umeng.commonsdk.framework.UMLogDataProtocol$UMBusinessType: com.umeng.commonsdk.framework.UMLogDataProtocol$UMBusinessType U_INTERNAL
org.jaudiotagger.tag.id3.ID3v11Tag: int FIELD_TRACK_LENGTH
com.umeng.analytics.process.a: int g
org.simpleframework.xml.core.CacheLabel: org.simpleframework.xml.strategy.Type depend
com.umeng.analytics.pro.o: android.content.Context a
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_CHOOSE_CARD_FROM_EX_CARD_PACKAGE
org.jaudiotagger.audio.AudioFileIO: java.util.Map writers
io.ktor.utils.io.internal.AwaitingSlot: java.lang.Object suspension
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: char[] hexArray
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_ISRC
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey REMIXER
com.caij.puremusic.db.model.Album: int songCount
com.thegrizzlylabs.sardineandroid.model.Prop: java.lang.String displayname
com.umeng.analytics.pro.d: java.lang.String y
org.simpleframework.xml.core.ExtractorFactory$ExtractorBuilder: java.lang.Class label
org.jaudiotagger.audio.mp3.VbriFrame: int BYTE_4
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey ARTIST
com.caij.puremusic.db.model.AlbumQueries$insert$1: com.caij.puremusic.db.model.AlbumQueries this$0
org.simpleframework.xml.core.PathParser: org.simpleframework.xml.util.Cache attributes
org.jaudiotagger.tag.id3.AbstractID3v2Tag$FrameAndSubId: java.lang.String subId
org.repackage.com.meizu.flyme.openidsdk.OpenId: int d
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MUSICBRAINZ_WORK_PART_LEVEL5_ID
com.umeng.analytics.pro.ap: java.lang.String d
com.tencent.bugly.proguard.r: long b
org.jaudiotagger.tag.mp4.field.Mp4FieldType: org.jaudiotagger.tag.mp4.field.Mp4FieldType DATETIME
com.umeng.analytics.pro.d: java.lang.String w
com.umeng.commonsdk.statistics.idtracking.Envelope: int mTimestamp
com.tencent.mm.opensdk.modelmsg.WXGameVideoFileObject: java.lang.String thumbUrl
com.umeng.analytics.pro.aw: java.util.Comparator a
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int MODE_JOINT_STEREO
com.tencent.bugly.proguard.aa: boolean M
org.simpleframework.xml.core.ParameterFactory: org.simpleframework.xml.stream.Format format
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey CHOIR_SORT
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey ALBUM_SORT
cn.lyric.getter.api.tools.EventTools: cn.lyric.getter.api.tools.EventTools INSTANCE
org.jaudiotagger.audio.wav.WavChunkType: org.jaudiotagger.audio.wav.WavChunkType[] $VALUES
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_ORIGINAL_RELEASEID
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier RTNG
org.jaudiotagger.audio.asf.data.GUID: org.jaudiotagger.audio.asf.data.GUID GUID_CONTENT_ENCRYPTION
com.alipay.tscenter.biz.rpc.report.general.model.DataReportResult: java.lang.String resultCode
org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile: org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile CELP
com.umeng.analytics.pro.u: boolean l
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzu
com.umeng.commonsdk.statistics.common.DeviceTypeEnum: com.umeng.commonsdk.statistics.common.DeviceTypeEnum ANDROIDID
org.simpleframework.xml.core.TextParameter: java.lang.Object key
com.tencent.mm.opensdk.modelmsg.SendAuth$Options: int INVALID_FLAGS
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_ALBUM
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey TEMPO
com.umeng.commonsdk.utils.c: boolean i
com.caij.puremusic.db.model.SongQueries$allSongs$1: kotlin.jvm.functions.Function18 $mapper
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage NO_AUDIO_HEADER_FOUND
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier COMPOSER
com.caij.puremusic.db.model.AlbumQueries$searchAlbumsByName$1: kotlin.jvm.functions.Function11 $mapper
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script OGHAM
com.caij.puremusic.db.model.Song: java.lang.String title
org.simpleframework.xml.core.CompositeListUnion: org.simpleframework.xml.core.Context context
com.tencent.mm.opensdk.constants.ConstantsAPI$OpenWebviewType: int TYPE_SUBSCRIBE_MESSAGE
com.tencent.bugly.proguard.at: com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler t
org.simpleframework.xml.core.PathParser$PathSection: int begin
com.tencent.bugly.proguard.ay: boolean l
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey COUNTRY
com.google.android.gms.internal.play_billing.zza: com.google.android.gms.internal.play_billing.zza zzm
org.jaudiotagger.tag.id3.framebody.FrameBodyWXXX: java.lang.String URL_DISCOGS_ARTIST_SITE
com.caij.puremusic.db.model.ArtistQueries$ArtistByNameQuery: java.lang.String name
io.ktor.util.collections.CopyOnWriteHashMap: java.lang.Object current
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: int value
org.jaudiotagger.audio.flac.FlacTagCreator: java.util.logging.Logger logger
com.caij.puremusic.db.model.SongEntityQueries$deletePlaylistSongs$1: long $playlistId
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey ITUNES_GROUPING
org.jaudiotagger.tag.id3.ID3v23FieldKey: java.lang.String fieldName
com.google.android.material.bottomsheet.BottomSheetBehavior: int parentWidth
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType[] $VALUES
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MOOD_INSTRUMENTAL
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_OWNERSHIP
com.caij.puremusic.drive.model.SubsonicAlbum: java.lang.String artist
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey COMMENT
org.jaudiotagger.tag.id3.valuepair.ID3V2ExtendedGenreTypes: java.lang.String description
com.tencent.mm.opensdk.modelbase.BaseResp: java.lang.String openId
com.umeng.commonsdk.statistics.proto.Gender: com.umeng.commonsdk.statistics.proto.Gender FEMALE
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_TYPE_OF_EVENT
org.slf4j.event.Level: org.slf4j.event.Level DEBUG
org.simpleframework.xml.core.ElementArrayParameter: org.simpleframework.xml.core.ElementArrayParameter$Contact contact
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: int audioSampleRate
org.jaudiotagger.audio.flac.FlacTagReader$1: int[] $SwitchMap$org$jaudiotagger$audio$flac$metadatablock$BlockType
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey YEAR
com.afollestad.materialdialogs.WhichButton: com.afollestad.materialdialogs.WhichButton$Companion Companion
io.ktor.util.date.WeekDay: io.ktor.util.date.WeekDay WEDNESDAY
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_REMIXED
com.caij.puremusic.db.model.ServerSongCoverQueries$GetByIdQuery: com.caij.puremusic.db.model.ServerSongCoverQueries this$0
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_ARTIST
com.umeng.vt.diff.V: java.lang.String VISUAL_TRACK_TEXT
com.alipay.apmobilesecuritysdk.f.b: java.util.LinkedList c
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script KAITHI
com.caij.puremusic.drive.model.SubsonicSearchListResponse$$serializer: com.caij.puremusic.drive.model.SubsonicSearchListResponse$$serializer INSTANCE
org.jaudiotagger.tag.wav.WavTag: boolean isExistingId3Tag
com.umeng.commonsdk.statistics.idtracking.g: java.lang.String a
org.jaudiotagger.audio.generic.AudioFileWriter: java.lang.String WRITE_MODE
org.jaudiotagger.audio.wav.WavSaveOptions: org.jaudiotagger.audio.wav.WavSaveOptions[] $VALUES
org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistSaveOptions: org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistSaveOptions WRITE_BOTH
com.caij.puremusic.drive.model.Part: java.lang.String file
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockHeader: int BLOCK_LENGTH
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a C
com.tencent.mm.opensdk.modelmsg.WXVideoFileObject: java.lang.String filePath
com.umeng.commonsdk.config.d$d: com.umeng.commonsdk.config.d$d a
org.simpleframework.xml.core.CompositeMap: org.simpleframework.xml.core.MapFactory factory
org.jaudiotagger.tag.id3.ID3v24Frame: int FRAME_FLAGS_SIZE
com.alipay.tscenter.biz.rpc.vkeydfp.request.AppListCmdRequest: java.lang.String userId
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey CUSTOM_2
org.jaudiotagger.audio.real.RealChunk: int size
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey COMPOSER_SORT
org.jaudiotagger.tag.reference.MusicalKey: org.jaudiotagger.tag.reference.MusicalKey MINOR
org.jaudiotagger.tag.id3.ID3v11Tag: byte MAJOR_VERSION
org.jaudiotagger.audio.mp4.ChunkWriter: long[] offsets
com.umeng.analytics.process.a: int f
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_COMPOSER_SORT_ORDER_ITUNES
org.jaudiotagger.audio.opus.OpusHeader: int TAGS_CAPTURE_PATTERN_LENGTH
org.simpleframework.xml.core.GetPart: java.lang.String name
com.caij.puremusic.fragments.NowPlayingScreen: com.caij.puremusic.fragments.NowPlayingScreen BlurCard
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script AVESTAN
com.caij.puremusic.fragments.NowPlayingScreen: com.caij.puremusic.fragments.NowPlayingScreen Material
org.jaudiotagger.tag.id3.ID3v1Tag: int FIELD_COMMENT_LENGTH
com.tencent.bugly.proguard.ao: java.lang.StringBuilder f
androidx.fragment.app.DialogFragment: int STYLE_NO_FRAME
com.umeng.analytics.pro.am: java.lang.String af
org.jaudiotagger.audio.mp3.MPEGFrameHeader: java.lang.Integer bitRate
org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId$1: org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId a
com.alipay.android.phone.mrpc.core.q: org.apache.http.client.methods.HttpUriRequest f
org.simpleframework.xml.core.Caller: org.simpleframework.xml.core.Function persist
com.tencent.mm.opensdk.modelmsg.WXWebpageObject: java.lang.String webpageUrl
org.simpleframework.xml.stream.OutputElement: org.simpleframework.xml.stream.Mode mode
com.umeng.commonsdk.utils.d: java.lang.String ao
com.caij.puremusic.db.model.SongQueries$songsByTitle$1: com.caij.puremusic.db.model.SongQueries this$0
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype RTT
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier FTYP
org.jaudiotagger.audio.mp3.MPEGFrameHeader: boolean isPrivate
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode CANCEL
com.umeng.commonsdk.statistics.common.DeviceConfig: com.umeng.commonsdk.statistics.common.DeviceTypeEnum deviceTypeEnum
com.caij.puremusic.model.Home: int homeSection
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage GENERAL_WRITE_FAILED_BECAUSE_FILE_NOT_FOUND
com.tencent.mm.opensdk.modelpay.PayReq: java.lang.String sign
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_METHOD_SYMBOL
com.umeng.analytics.pro.j: java.lang.String t
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: java.lang.String MM_QUALITY
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script CHEROKEE
org.jcodec.containers.mp4.boxes.MovieHeaderBox: long duration
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MUSICBRAINZ_ARTISTID
com.alipay.apmobilesecuritysdk.face.APSecuritySdk$TokenResult: java.lang.String apdidToken
com.umeng.commonsdk.statistics.c: int e
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_WORK_PART_LEVEL2_ID
com.caij.puremusic.db.model.SongEntityQueries$GetSongEntityQuery: long songId
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country IRAQ
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey URL_DISCOGS_ARTIST_SITE
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage WMA_INVALID_STREAM_REFERNCE
org.simpleframework.xml.core.KeyBuilder$Key: org.simpleframework.xml.core.KeyBuilder$KeyType type
com.tencent.bugly.proguard.bq: java.lang.String c
com.umeng.analytics.pro.e$c$a: java.lang.String c
org.jcodec.containers.mp4.boxes.AudioSampleEntry: short revision
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey ACOUSTID_ID
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey REMIXER
org.jaudiotagger.tag.datatype.AbstractValuePair: java.util.Iterator iterator
com.caij.puremusic.drive.model.PlayListsResponse$$serializer: com.caij.puremusic.drive.model.PlayListsResponse$$serializer INSTANCE
com.tencent.mm.opensdk.modelmsg.WXAppExtendObject: int PATH_LENGTH_LIMIT
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzn
com.tencent.bugly.proguard.bq: java.lang.String n
com.umeng.analytics.pro.f$a: com.umeng.analytics.pro.f a
org.jaudiotagger.tag.reference.Languages: java.lang.String DEFAULT_ID
com.umeng.analytics.pro.am: java.lang.String L
com.umeng.vt.diff.Channel: java.lang.String UM_VISUAL_IMPRINT
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a h
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean fitToContents
com.caij.puremusic.model.UpdateInfo: boolean isGray
com.umeng.analytics.pro.i$a: com.umeng.analytics.pro.i$a d
org.jaudiotagger.tag.aiff.AiffTagFieldKey: java.lang.String fieldName
org.simpleframework.xml.core.TextLabel: boolean required
io.ktor.websocket.CloseReason$Codes: io.ktor.websocket.CloseReason$Codes NO_EXTENSION
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_LAUNCH_WX_SEND_TDI_AUTH
com.thegrizzlylabs.sardineandroid.model.Response: java.lang.String status
com.google.android.exoplayer2.metadata.id3.CommentFrame: android.os.Parcelable$Creator CREATOR
com.umeng.analytics.pro.o$c: com.umeng.commonsdk.statistics.common.ReportPolicy$ReportStrategy a
org.simpleframework.xml.core.Primitive: java.lang.String empty
com.umeng.commonsdk.debug.UMLog: java.lang.String TOP_BORDER_AQ
org.simpleframework.xml.core.Signature: java.lang.reflect.Constructor factory
org.simpleframework.xml.core.MethodDetail: java.lang.annotation.Annotation[] list
org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile: org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile TWIN_VQ
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_FINDER_START_LIVE
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey SINGLE_DISC_TRACK_NO
org.jaudiotagger.audio.ogg.OggVorbisCommentTagCreator: java.util.logging.Logger logger
com.caij.puremusic.db.model.PlaybackSong: int position
com.tencent.mm.opensdk.modelmsg.WXMusicVideoObject: long issueDate
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.util.HashMap encryptedFrameMap
com.umeng.analytics.pro.g: android.content.Context d
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_TDAT
org.simpleframework.xml.core.MethodType: org.simpleframework.xml.core.MethodType GET
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey ALBUM
org.jaudiotagger.audio.wav.chunk.WavInfoChunk: java.util.logging.Logger logger
org.jcodec.containers.mp4.boxes.TrunBox: int firstSampleFlags
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey QUALITY
com.umeng.analytics.pro.o$a: int f
org.jaudiotagger.audio.wav.WavRIFFHeader: java.lang.String WAVE_SIGNATURE
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey IS_SOUNDTRACK
com.caij.puremusic.db.model.SongQueries$GetArtistSongCountQuery$execute$1: com.caij.puremusic.db.model.SongQueries$GetArtistSongCountQuery this$0
com.umeng.commonsdk.UMConfigure: java.lang.String sChannel
org.jaudiotagger.tag.mp4.field.Mp4TagCoverField: int dataAndHeaderSize
com.tencent.mm.opensdk.constants.ConstantsAPI$WXApp: java.lang.String WXAPP_BROADCAST_PERMISSION
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey IS_CLASSICAL
org.jaudiotagger.audio.wav.WavOptions: org.jaudiotagger.audio.wav.WavOptions READ_ID3_UNLESS_ONLY_INFO_AND_SYNC
com.tencent.mm.opensdk.modelbiz.WXChannelOpenProfile$Req: java.lang.String userName
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgram$Req: java.lang.String path
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MOOD_HAPPY
com.tencent.bugly.proguard.bo: boolean u
com.google.android.exoplayer2.metadata.mp4.MotionPhotoMetadata: android.os.Parcelable$Creator CREATOR
com.umeng.analytics.pro.d: java.lang.String G
com.umeng.analytics.pro.ab: java.lang.String b
com.caij.puremusic.db.model.ServerAudioFormatQueries$getById$2: com.caij.puremusic.db.model.ServerAudioFormatQueries$getById$2 INSTANCE
org.jcodec.containers.mp4.boxes.SegmentIndexBox: int reference_count
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country SOUTH_GEORGIA_AND_THE_SOUTH_SANDWICH_Islands
org.jcodec.containers.mp4.boxes.PixelAspectExt: int vSpacing
org.jcodec.containers.mp4.boxes.EsdsBox$DescriptorParser: int SL_TAG
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: byte streamCount
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.lang.String TYPE_INVALIDFRAMES
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey CUSTOM1
com.tencent.mm.opensdk.modelmsg.WXEmojiPageSharedObject: int tid
org.jcodec.containers.mp4.boxes.EndianBox: java.nio.ByteOrder endian
com.tencent.bugly.crashreport.crash.CrashDetailBean: java.lang.String q
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode NONE
org.jaudiotagger.tag.datatype.StringHashMap: java.util.Map keyToValue
com.tencent.mm.opensdk.modelmsg.WXStateJumpMiniProgramInfo: java.lang.String path
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey ARTISTS
com.umeng.commonsdk.statistics.noise.ABTest: int mGroup
com.umeng.umzid.R$string: int app_name
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script KANNADA
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier IMIF
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey COVERART
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey URL_LYRICS_SITE
org.simpleframework.xml.core.ElementMapLabel: java.lang.String path
com.google.common.collect.MapMakerInternalMap$Strength: com.google.common.collect.MapMakerInternalMap$Strength[] $VALUES
com.umeng.commonsdk.UMConfigureImpl: android.content.Context g
com.tencent.mm.opensdk.modelmsg.WXStateSceneDataObject$IWXStateJumpInfo: int WX_STATE_JUMP_TYPE_MINI_PROGRAM
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_WORK_PART_LEVEL5
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_WORK_PART_LEVEL1_ID
com.caij.puremusic.drive.model.Prop$$serializer: com.caij.puremusic.drive.model.Prop$$serializer INSTANCE
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey WORK_PART_LEVEL4
org.jaudiotagger.audio.asf.data.AudioStreamChunk: long averageBytesPerSec
org.jaudiotagger.tag.id3.AbstractTagFrame: org.jaudiotagger.tag.id3.AbstractTagFrameBody frameBody
nl.adaptivity.xmlutil.XmlDeclMode: nl.adaptivity.xmlutil.XmlDeclMode[] $VALUES
com.tencent.bugly.proguard.ac: java.util.List e
org.jaudiotagger.audio.wav.WavSaveOptions: org.jaudiotagger.audio.wav.WavSaveOptions SAVE_EXISTING_AND_ACTIVE
org.jaudiotagger.audio.real.RealChunk: java.lang.String INDX
com.tencent.mm.opensdk.constants.ConstantsAPI$OpenWebviewType: int TYPE_PAYINSURANCE
org.simpleframework.xml.core.CacheLabel: org.simpleframework.xml.core.Label label
com.github.dhaval2404.imagepicker.constant.ImageProvider: com.github.dhaval2404.imagepicker.constant.ImageProvider[] $VALUES
com.tencent.bugly.proguard.t: long c
org.jaudiotagger.audio.mp4.Chunk: long offset
com.umeng.analytics.pro.cb: byte f
com.umeng.commonsdk.statistics.idtracking.Envelope: byte[] mEntity
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey GROUPING
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country LEBANON
com.umeng.commonsdk.utils.c: java.lang.String f
com.tencent.mm.opensdk.modelmsg.WXMediaMessage: java.lang.String TAG
org.simpleframework.xml.core.TreeModel: org.simpleframework.xml.core.Label text
org.simpleframework.xml.core.CacheLabel: boolean data
org.simpleframework.xml.core.CacheLabel: boolean required
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a x
com.umeng.analytics.pro.e$b$a: java.lang.String e
com.umeng.commonsdk.utils.UMUtils: java.lang.String VALUE_PUSH_VERSION
com.caij.puremusic.network.model.LastFmAlbum$Album$Tags: com.caij.puremusic.network.model.LastFmAlbum$Album this$0
androidx.fragment.app.Fragment: java.lang.String mTag
com.caij.puremusic.drive.model.WebDAVToken$$serializer: com.caij.puremusic.drive.model.WebDAVToken$$serializer INSTANCE
com.umeng.analytics.pro.d: java.lang.String ad
org.jaudiotagger.tag.id3.ID3v22Frames: java.util.EnumMap tagFieldToId3
androidx.appcompat.widget.AppCompatImageView: androidx.appcompat.widget.AppCompatImageHelper mImageHelper
com.umeng.analytics.pro.e$b$b: java.lang.String d
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey ALBUM_SORT
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_ORIGINAL_RELEASE_ID
com.umeng.analytics.pro.bq: byte a
com.alipay.tscenter.biz.rpc.report.general.model.DataReportRequest: java.lang.String rpcVersion
org.jaudiotagger.tag.mp4.field.Mp4TagReverseDnsField: java.lang.String content
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey TITLE_SORT
androidx.fragment.app.Fragment: boolean mPerformedCreateView
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: java.nio.ByteBuffer rawdata
com.caij.puremusic.fragments.NowPlayingScreen: com.caij.puremusic.fragments.NowPlayingScreen Gradient
com.google.android.exoplayer2.metadata.id3.GeobFrame: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_TEXT_ENCODING
org.jaudiotagger.tag.datatype.PartOfSet$PartOfSetValue: java.lang.Integer total
com.alipay.android.app.IAlixPay$Stub: int TRANSACTION_deployFastConnect
com.umeng.commonsdk.config.d$c: com.umeng.commonsdk.config.d$c i
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_LOCATION_SHARE
com.tencent.bugly.proguard.bq: int g
com.umeng.commonsdk.statistics.AnalyticsConstants: java.lang.String ZERO_RESPONSE_FLAG
org.jaudiotagger.tag.id3.AbstractID3v2Frame$StatusFlags: byte originalFlags
com.alipay.android.phone.mrpc.core.p: long e
org.jaudiotagger.audio.aiff.chunk.AiffChunkType: org.jaudiotagger.audio.aiff.chunk.AiffChunkType ANNOTATION
com.tencent.bugly.proguard.bb: long k
com.umeng.commonsdk.statistics.common.DataHelper: long ENVELOPE_ENTITY_RAW_LENGTH_MAX
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey WORK
com.tencent.mm.opensdk.modelbiz.WXChannelJumpMiniProgramInfo: int LENGTH_LIMIT
com.tencent.bugly.proguard.f: byte[] a
com.umeng.analytics.pro.bo: java.lang.Boolean p
com.caij.puremusic.db.model.FolderQueries$selectAll$1: kotlin.jvm.functions.Function7 $mapper
org.jaudiotagger.audio.dsf.ID3Chunk: java.util.logging.Logger logger
org.simpleframework.xml.core.CacheLabel: java.lang.String[] paths
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey COMPOSERSORT
com.caij.puremusic.db.model.SearchAlbumResultQueries$GetByIdQuery: com.caij.puremusic.db.model.SearchAlbumResultQueries this$0
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgram$Req: java.lang.String userName
com.google.common.hash.BloomFilterStrategies: com.google.common.hash.BloomFilterStrategies MURMUR128_MITZ_64
com.tencent.mm.opensdk.modelbiz.WXChannelOpenFeed$Req: int LENGTH_LIMIT
org.simpleframework.xml.core.CacheLabel: java.lang.String path
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP4_CHANGES_TO_FILE_FAILED
io.ktor.utils.io.jvm.javaio.BlockingAdapter: java.lang.Object state
com.umeng.commonsdk.internal.utils.d$a: java.lang.String l
com.caij.puremusic.db.model.ArtistQueries$SearchArtistByNameQuery$execute$1: com.caij.puremusic.db.model.ArtistQueries$SearchArtistByNameQuery this$0
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame: android.os.Parcelable$Creator CREATOR
com.umeng.commonsdk.framework.UMModuleRegister: android.content.Context mModuleAppContext
com.caij.puremusic.db.model.PlaybackSongQueries$getPlaybacksByType$1: com.caij.puremusic.db.model.PlaybackSongQueries this$0
com.thegrizzlylabs.sardineandroid.DavPrincipal: java.lang.String KEY_UNAUTHENTICATED
com.tencent.bugly.BuglyStrategy$a: int MAX_USERDATA_VALUE_LENGTH
org.jaudiotagger.test.TestAudioTagger$DirFilter: java.lang.String IDENT
com.tencent.bugly.proguard.ao: boolean a
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage WMA_LENGTH_OF_STRING_IS_TOO_LARGE
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country UNITED_ARAB_EMIRATES
com.caij.puremusic.drive.model.DropboxDriveItem$$serializer: com.caij.puremusic.drive.model.DropboxDriveItem$$serializer INSTANCE
org.jaudiotagger.tag.id3.valuepair.ID3V2ExtendedGenreTypes: org.jaudiotagger.tag.id3.valuepair.ID3V2ExtendedGenreTypes[] $VALUES
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MOOD_INSTRUMENTAL
org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile: org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile T_F_MAIN
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script LYCIAN
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey ORIGINAL_LYRICIST
com.tencent.mm.opensdk.constants.ConstantsAPI$AppSupportContentFlag: long MMAPP_SUPPORT_PPTX
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script GUJARATI
com.umeng.analytics.pro.d: java.lang.String as
org.jaudiotagger.audio.ogg.util.OggPageHeader: int FIELD_STREAM_SERIAL_NO_POS
org.jaudiotagger.tag.asf.AsfFieldKey: java.lang.String fieldName
org.simpleframework.xml.core.ExtractorFactory$ElementExtractor: org.simpleframework.xml.ElementUnion union
org.simpleframework.xml.core.ElementListLabel: java.lang.Class type
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey GENRE
com.alipay.tscenter.biz.rpc.report.general.model.DataReportRequest: java.util.Map bizData
com.caij.puremusic.drive.model.Media: int id
org.simpleframework.xml.strategy.Contract: java.lang.String mark
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_FILE_TYPE
androidx.constraintlayout.core.widgets.ConstraintAnchor$Type: androidx.constraintlayout.core.widgets.ConstraintAnchor$Type NONE
com.thegrizzlylabs.sardineandroid.DavAcl: java.lang.String group
org.simpleframework.xml.core.Composite$Builder: org.simpleframework.xml.core.Schema schema
org.jaudiotagger.audio.ogg.util.OggPageHeader: boolean lastPacketIncomplete
nl.adaptivity.xmlutil.serialization.XmlSerializationPolicy$XmlEncodeDefault: nl.adaptivity.xmlutil.serialization.XmlSerializationPolicy$XmlEncodeDefault NEVER
com.umeng.commonsdk.statistics.noise.ABTest: com.umeng.commonsdk.statistics.noise.ABTest instance
com.google.android.gms.auth.api.signin.internal.GoogleSignInOptionsExtensionParcelable: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey LANGUAGE
com.bumptech.glide.MemoryCategory: com.bumptech.glide.MemoryCategory[] $VALUES
com.tencent.mm.opensdk.modelmsg.WXGameVideoFileObject: java.lang.String videoUrl
com.caij.puremusic.db.model.FolderQueries$selectById$1: com.caij.puremusic.db.model.FolderQueries this$0
com.umeng.commonsdk.UMInnerImpl$1: android.content.Context a
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_JOIN_CHATROOM
com.caij.puremusic.db.model.SongQueries$GetSongBySourceQuery: com.caij.puremusic.db.model.SongQueries this$0
org.simpleframework.xml.transform.CharacterArrayTransform: java.lang.Class entry
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int EMPHASIS_5015MS
org.simpleframework.xml.stream.OutputElement: java.lang.String comment
org.simpleframework.xml.core.SetPart: java.lang.annotation.Annotation[] list
com.umeng.commonsdk.stateless.c: android.content.Context c
com.umeng.analytics.pro.am: java.lang.String aC
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier SCHM
org.jaudiotagger.tag.reference.MusicalKey: org.jaudiotagger.tag.reference.MusicalKey NOTE_G
com.tencent.bugly.proguard.bq: java.lang.String s
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script[] $VALUES
org.jaudiotagger.audio.wav.WavOptions: org.jaudiotagger.audio.wav.WavOptions READ_INFO_UNLESS_ONLY_ID3_AND_SYNC
com.umeng.analytics.pro.d: java.lang.String n
org.jaudiotagger.tag.id3.AbstractID3v2Frame: java.lang.String loggingFilename
com.thegrizzlylabs.sardineandroid.model.Lockinfo: com.thegrizzlylabs.sardineandroid.model.Owner owner
com.alipay.sdk.app.AuthTask: java.lang.Object c
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MUSICBRAINZ_WORK_PART_LEVEL5_ID
org.simpleframework.xml.convert.AnnotationStrategy: org.simpleframework.xml.strategy.Strategy strategy
com.caij.puremusic.drive.model.ADriveItem: java.lang.String updated_at
org.jaudiotagger.tag.mp4.field.Mp4FieldType: org.jaudiotagger.tag.mp4.field.Mp4FieldType ISRC
org.jaudiotagger.tag.id3.framebody.FrameBodyETCO: int MILLISECONDS
com.caij.puremusic.drive.model.AMetadata: java.lang.String summary
com.caij.puremusic.db.model.ServerSongCover: java.lang.String url
org.jaudiotagger.tag.id3.valuepair.InterpolationTypes: org.jaudiotagger.tag.id3.valuepair.InterpolationTypes interpolationTypes
com.umeng.commonsdk.config.d$c: com.umeng.commonsdk.config.d$c a
org.jaudiotagger.audio.asf.data.FileHeader: java.math.BigInteger duration
com.caij.puremusic.drive.model.PlaylistMetadata: java.lang.String type
com.caij.puremusic.network.model.ArtistWrapper: java.lang.String href
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_WORK_PART_LEVEL3
com.caij.puremusic.db.model.SongQueries$deleteSongBySource$2: com.caij.puremusic.db.model.SongQueries$deleteSongBySource$2 INSTANCE
org.simpleframework.xml.core.ElementArrayParameter: java.lang.String name
com.umeng.commonsdk.internal.a: int q
com.umeng.analytics.pro.j: java.lang.String am
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportQuasiRealtime: long MAX_REPORT_INTERVAL
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country BANGLADESH
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_URL_PAYMENT
org.jcodec.containers.mp4.BoxFactory: org.jcodec.containers.mp4.IBoxFactory waveext
org.jcodec.containers.mp4.boxes.TrackExtendsBox: int defaultSampleFlags
org.simpleframework.xml.core.ExpressionBuilder: java.lang.Class type
org.jaudiotagger.tag.mp4.Mp4FieldKey: java.lang.String fieldName
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind YV12_VIDEO
com.tencent.mm.opensdk.modelbiz.HandleScanResult$Req: java.lang.String scanResult
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey PERFORMER
com.caij.puremusic.drive.model.DropboxDriveFileResponse: boolean has_more
com.umeng.commonsdk.statistics.proto.c: com.umeng.analytics.pro.bp g
com.umeng.analytics.pro.am: java.lang.String aB
org.simpleframework.xml.core.ElementParameter: java.lang.String path
com.caij.vip.GoodOrder: float discountPrice
org.repackage.com.vivo.identifier.DataBaseOperation: int h
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier ISRC
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script LINEAR_A
org.jaudiotagger.tag.reference.Tagger: org.jaudiotagger.tag.reference.Tagger BEATUNES
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey GENRE
org.simpleframework.xml.core.ElementLabel: boolean data
org.jaudiotagger.tag.wav.WavInfoTag: java.lang.Long startLocationInFile
org.jaudiotagger.tag.TagOptionSingleton: boolean lyrics3KeepEmptyFieldIfRead
com.umeng.commonsdk.utils.d: java.lang.String L
com.alipay.android.phone.mrpc.core.b$b: java.lang.String a
org.simpleframework.xml.core.ConversionInstance: org.simpleframework.xml.strategy.Value value
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_ORIG_TITLE
org.simpleframework.xml.core.PrimitiveArray: org.simpleframework.xml.strategy.Type entry
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype GPRS
io.ktor.utils.io.pool.DefaultPool: long top
com.tencent.mm.opensdk.constants.ConstantsAPI$AppSupportContentFlag: long MMAPP_SUPPORT_DOCX
org.jcodec.containers.mp4.boxes.TrunBox: int sampleCount
com.google.android.exoplayer2.metadata.emsg.EventMessage: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey CUSTOM4
com.thegrizzlylabs.sardineandroid.model.Activelock: java.lang.String depth
com.google.android.gms.internal.play_billing.zzew: com.google.android.gms.internal.play_billing.zzew zzp
com.tencent.mm.opensdk.modelbiz.AddCardToWXCardPackage$WXCardItem: int cardState
com.caij.puremusic.model.CategoryInfo: boolean visible
org.simpleframework.xml.core.InstantiatorBuilder: java.util.List options
com.umeng.commonsdk.internal.c: java.lang.String a
com.bumptech.glide.MemoryCategory: com.bumptech.glide.MemoryCategory NORMAL
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey AMAZON_ID
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier TRAF
com.umeng.analytics.pro.am: java.lang.String aj
org.simpleframework.xml.core.TextLabel: org.simpleframework.xml.core.Introspector detail
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzA
nl.adaptivity.xmlutil.EventType: nl.adaptivity.xmlutil.EventType ENTITY_REF
com.caij.puremusic.drive.model.SongItem: java.util.Map ImageTags
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country SWAZILAND
com.caij.puremusic.drive.model.PlaylistsMediaContainer$$serializer: com.caij.puremusic.drive.model.PlaylistsMediaContainer$$serializer INSTANCE
com.google.android.gms.internal.play_billing.zzex: com.google.android.gms.internal.play_billing.zzex zzg
org.jaudiotagger.audio.generic.GenericAudioHeader: java.lang.Integer byteRate
com.umeng.commonsdk.statistics.common.ULog: int LEVEL_ERROR
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String ALBUM_ARTISTS
io.ktor.util.date.WeekDay: io.ktor.util.date.WeekDay MONDAY
com.caij.puremusic.network.model.LastFmAlbum$Album$Tag: java.lang.String url
org.simpleframework.xml.strategy.WriteGraph: java.lang.String length
com.tencent.mm.opensdk.constants.ConstantsAPI$AppSupportContentFlag: long MMAPP_SUPPORT_PICTURE
org.repackage.com.vivo.identifier.IdentifierIdClient: java.lang.String h
org.jaudiotagger.tag.id3.ID3v23Frame: int FRAME_GROUPING_INDICATOR_SIZE
com.tencent.mm.opensdk.modelbiz.WXPayInsurance$Req: int URL_LENGTH_LIMIT
org.jaudiotagger.audio.aiff.chunk.ApplicationChunk: java.lang.String SIGNATURE_PDOS
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType MOBILE_FOTA
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey ALBUMARTIST_JRIVER
com.tencent.mm.opensdk.modelmsg.WXVideoFileObject: int shareScene
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$getById$1: kotlin.jvm.functions.Function4 $mapper
com.caij.puremusic.drive.model.DriveFile: java.lang.String fileId
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey CATALOG_NO
com.tencent.mm.opensdk.modelmsg.WXAppLaunchData: java.lang.String message
io.ktor.util.date.WeekDay: io.ktor.util.date.WeekDay THURSDAY
kotlinx.serialization.json.JsonPrimitive: kotlinx.serialization.json.JsonPrimitive$Companion Companion
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: java.text.SimpleDateFormat formatTimeOut
org.simpleframework.xml.core.ParameterContact: java.lang.Class owner
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey ENSEMBLE_SORT
org.jaudiotagger.test.MergeID3AndMP3Files$DirFilter: java.lang.String IDENT
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey CUSTOM5
com.tencent.mm.opensdk.utils.Log: com.tencent.mm.opensdk.utils.ILog logImpl
org.jcodec.containers.mp4.boxes.MediaHeaderBox: long duration
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_WORK_PART_LEVEL5
org.jaudiotagger.tag.id3.ID3Frames: java.util.TreeSet binaryFrames
com.umeng.commonsdk.statistics.UMServerURL: java.lang.String OVERSEA_SECONDARY_URL
com.caij.puremusic.fragments.NowPlayingScreen: com.caij.puremusic.fragments.NowPlayingScreen Full
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_EQUALISATION2
com.thegrizzlylabs.sardineandroid.model.CurrentUserPrivilegeSet: java.util.List privileges
androidx.fragment.app.DialogFragment: boolean mShowsDialog
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey ORCHESTRA_SORT
org.simpleframework.xml.core.Factory: org.simpleframework.xml.strategy.Type type
com.umeng.commonsdk.internal.utils.c$1: com.umeng.commonsdk.internal.utils.c a
org.repackage.com.vivo.identifier.DataBaseOperation: java.lang.String g
com.caij.puremusic.network.model.LastFmAlbum$Album$Tag: java.lang.String name
com.umeng.analytics.pro.au: int e
com.caij.puremusic.drive.model.AlbumMetadata: com.caij.puremusic.drive.model.AlbumMetadata$Companion Companion
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String ALBUM_ARTIST
com.tencent.bugly.proguard.bo: java.util.ArrayList y
com.google.android.material.bottomsheet.BottomSheetBehavior: int peekHeight
com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion[] $VALUES
com.tencent.mm.opensdk.modelbiz.WXChannelShareVideo$Req: java.lang.String WX_CHANNEL_SHARE_VIDEO_JUMP_INFO_KEY_IDENTIFIER
org.jaudiotagger.tag.id3.ID3v22FieldKey: java.lang.String frameId
com.google.common.util.concurrent.AbstractFuture$Waiter: java.lang.Thread thread
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: int audioChannels
org.simpleframework.xml.core.ClassScanner: org.simpleframework.xml.Order order
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey WORK_TYPE
com.umeng.commonsdk.utils.d: java.lang.String N
org.simpleframework.xml.core.PrimitiveInlineList: org.simpleframework.xml.strategy.Type entry
com.umeng.commonsdk.UMConfigure: java.lang.String WRAPER_TYPE_NATIVE
com.tencent.mm.opensdk.modelmsg.WXLiteAppObject: java.lang.String query
org.jaudiotagger.tag.id3.valuepair.ImageFormats: java.lang.String V22_PNG_FORMAT
com.tencent.bugly.proguard.as: com.tencent.bugly.proguard.aw f
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$deleteSongBySource$2: com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$deleteSongBySource$2 INSTANCE
kotlinx.datetime.Instant: kotlinx.datetime.Instant$Companion Companion
com.umeng.analytics.pro.e$b$b: java.lang.String b
org.jcodec.containers.mp4.boxes.HandlerBox: java.lang.String componentManufacturer
org.jcodec.containers.mp4.boxes.AliasBox: int createdLocalDate
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
com.umeng.commonsdk.utils.UMUtils: java.lang.String sAppVersionCode
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MUSICBRAINZ_WORK_PART_LEVEL1_ID
com.caij.puremusic.db.model.SongEntityQueries$IsSongExistsInPlaylistQuery: long playlistId
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MUSICBRAINZ_RELEASE_TYPE
org.simpleframework.xml.core.ConstructorScanner: org.simpleframework.xml.core.Signature primary
org.simpleframework.xml.strategy.Contract: java.lang.String label
org.simpleframework.xml.core.AnnotationHandler: java.lang.String CLASS
io.ktor.websocket.FrameType: int maxOpcode
com.caij.puremusic.model.CategoryInfo$Category: int idHolder
org.simpleframework.xml.core.InstanceFactory$ClassInstance: org.simpleframework.xml.core.InstanceFactory this$0
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_APPDATA
com.tencent.mm.opensdk.modelmsg.SendTdiAuth$Resp: java.lang.String TAG
com.caij.puremusic.drive.model.DriveFile: java.lang.String fileName
com.tencent.bugly.proguard.bb: java.lang.String d
com.umeng.analytics.pro.e$a$a: java.lang.String e
com.umeng.commonsdk.config.d: java.lang.String c
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MOOD_INSTRUMENTAL
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country GUINEA_BISSAU
com.caij.puremusic.drive.model.SubsonicPlaylist: java.lang.String comment
com.umeng.commonsdk.utils.d: java.lang.String d
org.jaudiotagger.audio.generic.AudioFileWriter: java.util.logging.Logger logger
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MOVEMENT
com.tencent.mm.opensdk.modelbiz.WXChannelOpenLive$Req: java.lang.String TAG
com.tencent.bugly.proguard.l: java.lang.String b
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a J
org.jaudiotagger.tag.id3.ID3v24Tag: int MASK_V24_IMAGE_ENCODING
org.jaudiotagger.tag.id3.ID3v24Tag: java.lang.String TYPE_TEXTENCODINGRESTRICTION
org.jaudiotagger.tag.id3.ID3v24Tag: java.lang.String TYPE_UNSYNCHRONISATION
org.simpleframework.xml.core.PrimitiveValue: org.simpleframework.xml.strategy.Type type
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$deleteById$1: java.lang.String $fileId
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_PREVIEW_LENGTH
io.ktor.util.date.Month: io.ktor.util.date.Month FEBRUARY
com.umeng.analytics.pro.o$a: int F
com.caij.puremusic.util.theme.ThemeMode: com.caij.puremusic.util.theme.ThemeMode BLACK
com.google.android.gms.internal.play_billing.zza: com.google.android.gms.internal.play_billing.zza zzh
com.r0adkll.slidr.model.SlidrPosition: com.r0adkll.slidr.model.SlidrPosition BOTTOM
com.tencent.bugly.proguard.ba: java.lang.String c
com.umeng.commonsdk.statistics.proto.d$e: com.umeng.commonsdk.statistics.proto.d$e a
com.umeng.commonsdk.statistics.AnalyticsConstants: boolean CHECK_DEVICE
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: boolean skipCollapsed
com.umeng.analytics.pro.e$a$b: java.lang.String d
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String TONALITY
com.tencent.bugly.proguard.bt: java.lang.String j
org.jaudiotagger.tag.reference.MusicalKey: org.jaudiotagger.tag.reference.MusicalKey OFF_KEY
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate DEFAULT_DELEGATE
org.jaudiotagger.audio.mp3.MP3AudioHeader: int FILE_BUFFER_SIZE
org.jaudiotagger.test.MergeID3AndMP3Files$MP3FileFilter: org.jaudiotagger.test.MergeID3AndMP3Files this$0
com.google.android.material.bottomsheet.BottomSheetBehavior: java.util.ArrayList callbacks
com.umeng.commonsdk.internal.a: int i
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script ARABIC
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country NIUE
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MM_OCCASION
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat SRC_OVER
org.jaudiotagger.audio.SupportedFileFormat: org.jaudiotagger.audio.SupportedFileFormat RM
org.jaudiotagger.audio.wav.chunk.WavFormatChunk: int STANDARD_DATA_SIZE
com.alipay.android.phone.mrpc.core.HttpException: long serialVersionUID
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country CZECH_REPUBLIC
com.caij.puremusic.fragments.AlbumCoverStyle: com.caij.puremusic.fragments.AlbumCoverStyle Circle
com.umeng.analytics.pro.bn: byte[] k
com.tencent.bugly.proguard.aa: java.util.Map at
com.thegrizzlylabs.sardineandroid.util.SardineUtil: java.util.List DATETIME_FORMATS
org.jaudiotagger.utils.IntArrayList: java.util.List chunks
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey TITLE
com.caij.puremusic.network.model.TokenData: java.lang.Long expires_in
org.koin.core.logger.Level: org.koin.core.logger.Level WARNING
org.jcodec.containers.mp4.boxes.AudioSampleEntry: short version
com.caij.puremusic.drive.model.User: java.lang.String ServerId
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey ALBUM_ARTIST
com.tencent.bugly.proguard.g: java.lang.String e
org.jcodec.containers.mp4.boxes.MovieHeaderBox: float rate
com.umeng.commonsdk.UMConfigure: java.lang.String[] BUSINESS_TYPE
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$Req: int WXSceneSession
com.umeng.analytics.pro.bs: byte b
org.jcodec.containers.mp4.boxes.MetaValue: int TYPE_INT_V
org.simpleframework.xml.core.PrimitiveList: org.simpleframework.xml.core.Primitive root
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_WORK_PART_LEVEL5_ID
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey URL_WIKIPEDIA_ARTIST_SITE
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a q
org.simpleframework.xml.strategy.ReadState: org.simpleframework.xml.strategy.Contract contract
org.jaudiotagger.audio.mp3.XingFrame: byte[] XING_VBR_ID
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$OnPreAttachedListener mSavedStateAttachListener
com.tencent.mm.opensdk.modelmsg.SendAuth$Resp: java.lang.String code
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey ORCHESTRA
com.google.android.material.bottomappbar.BottomAppBar$SavedState: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_MOVEMENT_NO
com.google.android.material.color.utilities.QuantizerWu$Direction: com.google.android.material.color.utilities.QuantizerWu$Direction[] $VALUES
com.umeng.commonsdk.statistics.internal.StatTracer: java.lang.String KEY_LAST_REQ
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country WESTERN_SAHARA
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_WORK_ID
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey[] $VALUES
org.jaudiotagger.audio.wav.WavSaveOrder: org.jaudiotagger.audio.wav.WavSaveOrder[] $VALUES
org.simpleframework.xml.core.ClassType: java.lang.Class type
org.jaudiotagger.tag.id3.ID3v11Tag$1: int[] $SwitchMap$org$jaudiotagger$tag$FieldKey
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier CPRT
org.jaudiotagger.audio.AudioFile$1: int[] $SwitchMap$org$jaudiotagger$tag$reference$ID3V2Version
com.umeng.umzid.ZIDManager: com.umeng.umzid.ZIDManager c
org.jaudiotagger.tag.datatype.AbstractValuePair: java.util.Map valueToId
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey BARCODE
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_RELATIVE_VOLUME_ADJUSTMENT2
org.jaudiotagger.tag.id3.ID3v22Tag: boolean compression
org.jaudiotagger.audio.aiff.AiffAudioHeader: java.util.List applicationIdentifiers
com.umeng.commonsdk.utils.UMUtils: java.lang.String VALUE_REC_VERSION_NAME
com.google.android.material.bottomsheet.BottomSheetDialog$EdgeToEdgeCallback: android.view.Window window
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzL
org.jaudiotagger.audio.asf.data.AudioStreamChunk: long WMA_CBR
com.caij.puremusic.drive.model.SubsonicResponse: java.lang.String version
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey CUSTOM3
org.jaudiotagger.tag.id3.valuepair.ImageFormats: java.lang.String V22_BMP_FORMAT
org.jcodec.containers.mp4.boxes.HandlerBox: java.lang.String componentSubType
com.caij.puremusic.db.model.SongQueries$SongsByArtistIdWithLikeQuery: com.caij.puremusic.db.model.SongQueries this$0
com.umeng.commonsdk.statistics.idtracking.Envelope: java.lang.String dummyID1
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: int STREAM_INFO_DATA_LENGTH
androidx.fragment.app.Fragment: java.util.concurrent.atomic.AtomicInteger mNextLocalRequestCode
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_ALBUM_ARTIST_SORT_ORDER_ITUNES
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey GE_ID
com.bumptech.glide.request.RequestCoordinator$RequestState: com.bumptech.glide.request.RequestCoordinator$RequestState CLEARED
com.umeng.analytics.pro.o$d: java.lang.String c
com.umeng.analytics.pro.u: java.lang.String d
com.tencent.bugly.proguard.aa: boolean R
org.jaudiotagger.audio.ogg.OggVorbisCommentTagCreator: int FIELD_FRAMING_BIT_LENGTH
com.tencent.bugly.crashreport.crash.CrashDetailBean: java.lang.String s
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_TIMED_EVENT_LIST
org.repackage.com.miui.deviceid.IdentifierManager: java.lang.reflect.Method g
com.umeng.commonsdk.framework.a: java.util.concurrent.locks.ReentrantLock o
com.tencent.mm.opensdk.modelbiz.WXChannelJumpMiniProgramInfo: java.lang.String TAG
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String ENSEMBLE_SORT
org.jaudiotagger.tag.TagOptionSingleton: boolean id3v2PaddingWillShorten
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey URL_DISCOGS_ARTIST_SITE
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country CENTRAL_AFRICAN_REPUBLIC
com.tencent.bugly.proguard.ao: boolean n
com.google.android.gms.internal.play_billing.zza: com.google.android.gms.internal.play_billing.zza zzd
com.tencent.mm.opensdk.modelmsg.WXStateSceneDataObject: int LENGTH_LIMIT
io.ktor.utils.io.core.internal.ChunkBuffer: int refCount
org.simpleframework.xml.strategy.Name: java.lang.String MARK
org.simpleframework.xml.core.ElementParameter: java.lang.String name
com.tencent.mm.opensdk.modelbiz.SubscribeMessage$Resp: java.lang.String reserved
org.jaudiotagger.test.ExtractID3TagFromFile: java.lang.String IDENT
org.jaudiotagger.audio.ogg.util.VorbisPacketType: org.jaudiotagger.audio.ogg.util.VorbisPacketType[] $VALUES
org.simpleframework.xml.transform.DefaultMatcher: org.simpleframework.xml.transform.Matcher array
com.umeng.commonsdk.internal.a: int k
com.caij.puremusic.db.model.SongEntityQueries$IsSongExistsInPlaylistQuery$execute$1: com.caij.puremusic.db.model.SongEntityQueries$IsSongExistsInPlaylistQuery this$0
org.jaudiotagger.audio.asf.data.GUID: java.lang.String description
com.caij.puremusic.drive.model.PlexLoginResponse$$serializer: com.caij.puremusic.drive.model.PlexLoginResponse$$serializer INSTANCE
com.umeng.commonsdk.statistics.proto.Response: com.umeng.commonsdk.statistics.proto.d imprint
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy DEFAULT
com.umeng.analytics.pro.v: java.util.Map f
com.tencent.bugly.crashreport.common.strategy.StrategyBean: boolean f
com.tencent.mm.opensdk.modelbiz.ChooseCardFromWXCardPackage$Req: java.lang.String timeStamp
com.google.android.material.bottomsheet.BottomSheetBehavior: int SAVE_NONE
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey ENGINEER
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey AMAZON_ID
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey[] $VALUES
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: org.jaudiotagger.audio.aiff.chunk.AiffCompressionType MAC6
com.tencent.bugly.proguard.w: com.tencent.bugly.proguard.x c
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey PERIOD
org.jcodec.containers.mp4.boxes.Header: long MAX_UNSIGNED_INT
com.caij.puremusic.drive.model.PlexSectionsResponse: com.caij.puremusic.drive.model.FMediaContainer MediaContainer
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey[] $VALUES
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script NKO
androidx.viewpager.widget.ViewPager$SavedState: android.os.Parcelable$Creator CREATOR
org.repackage.com.zui.deviceidservice.IDeviceidInterface$Stub: java.lang.String g
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey BARCODE
com.tencent.mm.opensdk.modelmsg.WXAppExtendObject: java.lang.String filePath
org.simpleframework.xml.core.ElementLabel: org.simpleframework.xml.core.Decorator decorator
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_URL_PAYMENT
org.jaudiotagger.audio.ogg.util.OggPage: java.nio.ByteBuffer content
com.caij.puremusic.db.model.Album: int year
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind H261_VIDEO
io.github.aakira.napier.LogLevel: io.github.aakira.napier.LogLevel ERROR
org.simpleframework.xml.core.SessionManager$Reference: org.simpleframework.xml.core.Session session
com.google.android.gms.internal.play_billing.zzfm: java.lang.String zzf
org.simpleframework.xml.core.StructureBuilder: org.simpleframework.xml.core.LabelMap attributes
com.tencent.mm.opensdk.constants.ConstantsAPI$AppSupportContentFlag: long MMAPP_SUPPORT_TEXT
com.umeng.commonsdk.config.d$c: com.umeng.commonsdk.config.d$c b
org.jaudiotagger.tag.datatype.PartOfSet$PartOfSetValue: java.util.regex.Pattern trackNoPatternWithTotalCount
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType WIMAX
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a F
com.google.android.gms.internal.play_billing.zzff: com.google.android.gms.internal.play_billing.zzff zzb
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b E
com.tencent.mm.opensdk.modelmsg.WXLocationObject: double lng
org.jaudiotagger.audio.asf.AsfFileReader: java.util.logging.Logger LOGGER
com.caij.puremusic.model.Contributor: java.lang.String name
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTagField: java.lang.String content
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_DOCUMENT
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey ARRANGER
androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType[] $VALUES
com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat[] $VALUES
com.tencent.bugly.proguard.aq: android.content.IntentFilter a
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_WORK_PART_LEVEL3
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey TRACK
org.simpleframework.xml.core.SetPart: java.lang.String name
com.umeng.commonsdk.framework.UMModuleRegister: int INNER_EVENT_VALUE_LOW
com.tencent.mm.opensdk.modelmsg.WXEmojiSharedObject: java.lang.String url
org.jaudiotagger.audio.mp4.ChunkReader: int s2cIndex
org.jaudiotagger.tag.mp4.Mp4ContentTypeValue: org.jaudiotagger.tag.mp4.Mp4ContentTypeValue TV_SHOW
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MOOD_DANCEABILITY
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_PICTURE_DATA
com.tencent.bugly.proguard.ay: android.os.FileObserver k
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_FILE_TYPE
org.simpleframework.xml.core.CompositeInlineMap: org.simpleframework.xml.core.MapFactory factory
org.jaudiotagger.audio.mp4.ChunkReader: org.jcodec.containers.mp4.boxes.TimeToSampleBox$TimeToSampleEntry[] tts
com.google.android.gms.auth.api.signin.SignInAccount: android.os.Parcelable$Creator CREATOR
com.umeng.commonsdk.framework.a: com.umeng.commonsdk.framework.a$a i
com.bumptech.glide.Priority: com.bumptech.glide.Priority[] $VALUES
org.jaudiotagger.tag.id3.ID3v1FieldKey: org.jaudiotagger.tag.id3.ID3v1FieldKey TITLE
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL1_TYPE
com.thegrizzlylabs.sardineandroid.model.Supportedlock: java.util.List lockentryList
com.tencent.mm.opensdk.modelbase.BaseReq: java.lang.String openId
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzy
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_TERMS_OF_USE
org.jaudiotagger.tag.id3.ID3v23Frame: int FRAME_HEADER_SIZE
androidx.fragment.app.Fragment: int mState
androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.tencent.mm.opensdk.modelmsg.LaunchFromWX$Req: int MESSAGE_EXT_LENGTH_LIMIT
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_0
org.simpleframework.xml.core.ExtractorFactory: java.lang.annotation.Annotation label
com.caij.puremusic.db.model.SongQueries$SongsByInfoQuery$execute$1: com.caij.puremusic.db.model.SongQueries$SongsByInfoQuery this$0
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_RADIO_OWNER
com.tencent.bugly.proguard.g: boolean m
com.tencent.mm.opensdk.modelmsg.WXImageObject: byte[] imageData
com.google.common.base.Predicates$ObjectPredicate: com.google.common.base.Predicates$ObjectPredicate NOT_NULL
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status RUNNING
com.umeng.analytics.pro.bn: boolean d
com.caij.puremusic.db.model.ServerAudioFormat: java.lang.String sampleRate
com.umeng.commonsdk.stateless.b: android.content.IntentFilter j
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int MODE_EXTENSION_ON_OFF
org.jaudiotagger.tag.datatype.PartOfSet$PartOfSetValue: java.lang.String rawCount
com.tencent.mm.opensdk.modelbiz.WXChannelOpenEvent$Req: java.lang.String Key_ExtInfo
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey URL_WIKIPEDIA_ARTIST_SITE
com.thegrizzlylabs.sardineandroid.model.Activelock: com.thegrizzlylabs.sardineandroid.model.Lockscope lockscope
org.jaudiotagger.audio.dsf.DsdChunk: int DSD_HEADER_LENGTH
com.caij.puremusic.drive.model.Collection: com.caij.puremusic.drive.model.Collection$Companion Companion
com.google.android.exoplayer2.metadata.icy.IcyHeaders: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier MFRO
org.simpleframework.xml.stream.PullReader$Text: org.xmlpull.v1.XmlPullParser source
com.tencent.bugly.proguard.ay: java.util.concurrent.atomic.AtomicBoolean a
com.caij.puremusic.db.model.ServerArtistCover: long sourceId
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BEGIN_ARRAY
org.repackage.a.a.a.a.c: java.lang.String c
org.jaudiotagger.logging.LogFormatter: java.lang.String lineSeparator
org.jcodec.containers.mp4.boxes.TimeToSampleBox$TimeToSampleEntry: int sampleDuration
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: org.jaudiotagger.utils.tree.MutableTreeNode parent
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat HARD_LIGHT
com.tencent.mm.opensdk.diffdev.DiffDevOAuthFactory: int MAX_SUPPORTED_VERSION
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey URL_WIKIPEDIA_RELEASE_SITE
org.repackage.a.a.a.a.c: java.lang.String b
com.caij.puremusic.db.model.SongEntityQueries$GetSongEntityQuery: com.caij.puremusic.db.model.SongEntityQueries this$0
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MUSICBRAINZ_RELEASE_TRACK_ID
org.jcodec.containers.mp4.boxes.TimecodeMediaInfoBox: short[] bgcolor
org.jaudiotagger.tag.images.StandardArtwork: int width
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey ALBUM_ARTIST
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey LANGUAGE
com.tencent.bugly.proguard.aa: java.lang.String aa
com.tencent.bugly.proguard.at$3: java.lang.Thread b
com.umeng.commonsdk.statistics.idtracking.g: android.content.Context b
org.simpleframework.xml.core.ElementListUnionParameter: java.lang.String path
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey TITLE
com.tencent.mm.opensdk.openapi.MMSharedPreferences$REditor: android.content.ContentResolver cr
org.jaudiotagger.audio.asf.io.AsfHeaderReader: org.jaudiotagger.audio.asf.io.AsfHeaderReader FULL_READER
org.simpleframework.xml.core.TemplateEngine: org.simpleframework.xml.filter.Filter filter
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country GUATEMALA
com.umeng.analytics.pro.am: java.lang.String aI
com.tencent.bugly.crashreport.CrashReport$UserStrategy: com.tencent.bugly.crashreport.CrashReport$CrashHandleCallback c
com.tencent.bugly.proguard.at: java.lang.Boolean z
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: org.jaudiotagger.audio.aiff.chunk.AiffCompressionType rt29
kotlin.jvm.internal.Lambda: int arity
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country CHINA
org.jaudiotagger.test.TestAudioTagger$DirFilter: org.jaudiotagger.test.TestAudioTagger this$0
com.tencent.mm.opensdk.constants.Build: int VIDEO_FILE_SUPPORTED_SDK_INT
org.jaudiotagger.audio.asf.data.MetadataDescriptor: int TYPE_STRING
com.google.android.gms.internal.play_billing.zzfz: com.google.android.gms.internal.play_billing.zzfz zzb
com.umeng.analytics.pro.m: boolean c
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier XML$20
io.ktor.websocket.FrameType: io.ktor.websocket.FrameType BINARY
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey COMPILATION
com.alipay.sdk.m.r.a: com.alipay.sdk.m.r.a g
com.caij.vip.Activation: int tagCount
com.caij.puremusic.fragments.lyrics.ComnLyricsFragment$LyricsType: com.caij.puremusic.fragments.lyrics.ComnLyricsFragment$LyricsType[] $VALUES
com.caij.puremusic.model.AudioTagInfo: java.util.List filePaths
com.umeng.commonsdk.internal.utils.d$a: java.lang.String h
com.umeng.analytics.pro.e$c$a: java.lang.String f
com.umeng.commonsdk.statistics.common.d$a: java.io.FilenameFilter c
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey LABEL
com.caij.puremusic.drive.model.Media: com.caij.puremusic.drive.model.Media$Companion Companion
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country BAHRAIN
com.alipay.android.phone.mrpc.core.RpcException: java.lang.String mOperationType
com.alipay.android.app.IRemoteServiceCallback$Stub: int TRANSACTION_r03
com.umeng.commonsdk.statistics.common.MLog: int LEVEL_ERROR
org.simpleframework.xml.stream.Formatter: char[] LESS
com.tencent.mm.opensdk.constants.ConstantsAPI$LaunchWX: int LAUNCH_PENDING_INTENT_REQUEST_CODE
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_ORIG_FILENAME
org.jcodec.containers.mp4.boxes.CleanApertureExtension: int vertOffsetNumerator
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype EVDO_B
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b q
com.tencent.bugly.proguard.aa: boolean J
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script HAN_TRADITIONAL
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType[] $VALUES
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$PathBetweenNodesEnumeration: java.util.Stack stack
com.caij.puremusic.db.model.Album$Adapter: app.cash.sqldelight.ColumnAdapter songCountAdapter
org.simpleframework.xml.core.NamespaceDecorator: java.util.List scope
com.tencent.bugly.proguard.bn: byte a
com.tencent.bugly.proguard.l: java.nio.ByteBuffer a
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: org.jaudiotagger.audio.aiff.chunk.AiffCompressionType ulaw
com.umeng.commonsdk.internal.utils.c: boolean b
com.caij.puremusic.db.model.AlbumQueries$SearchAlbumsByNameQuery$execute$1: com.caij.puremusic.db.model.AlbumQueries$SearchAlbumsByNameQuery this$0
org.jaudiotagger.tag.TagOptionSingleton: boolean removeTrailingTerminatorOnWrite
com.tencent.mm.opensdk.constants.Build: int SUPPORTED_JOINT_PAY
org.jaudiotagger.audio.AudioFileIO: java.util.logging.Logger logger
org.repackage.com.vivo.identifier.DataBaseOperation: java.lang.String f
com.caij.puremusic.drive.model.ImageTags: java.lang.String Primary
com.umeng.commonsdk.statistics.UMServerURL: java.lang.String OVERSEA_DEFAULT_URL
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MOOD_VALENCE
com.umeng.commonsdk.statistics.proto.b: int c
com.umeng.commonsdk.statistics.common.d: java.lang.String c
org.simpleframework.xml.stream.PullReader$Start: java.lang.String prefix
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country SYRIA
org.jcodec.containers.mp4.boxes.TrackExtendsBox: int defaultSampleDescriptionIndex
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier IDAT
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockHeader: int dataLength
org.simpleframework.xml.stream.PrefixResolver: org.simpleframework.xml.stream.OutputNode source
kotlinx.coroutines.channels.ArrayChannel: int size
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey ARRANGER
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country IRELAND
org.jcodec.containers.mp4.boxes.AliasBox: short version
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_PREMIX_LEFT_TO_RIGHT
com.caij.puremusic.model.UpdateInfo$ForcedUpgradeInfo: android.os.Parcelable$Creator CREATOR
com.afollestad.materialdialogs.WhichButton: com.afollestad.materialdialogs.WhichButton NEGATIVE
com.google.android.material.bottomsheet.BottomSheetBehavior: int STATE_COLLAPSED
org.simpleframework.xml.stream.CamelCaseBuilder: boolean attribute
com.umeng.analytics.pro.o$c: int d
com.tencent.bugly.proguard.ay: java.lang.String e
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey CUSTOM5
org.jaudiotagger.audio.asf.data.Chunk: long position
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country ANTARCTICA
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_NUMBER
com.umeng.commonsdk.statistics.common.DeviceConfig: boolean hasReadOperatorName
com.caij.puremusic.drive.model.EmbyAlbumsResponse: int TotalRecordCount
com.umeng.analytics.pro.am: java.lang.String S
com.alipay.android.phone.mrpc.core.u: java.lang.String b
com.umeng.analytics.pro.am: java.lang.String bi
com.umeng.analytics.pro.bs: java.lang.String a
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType MOBILE_CBS
org.jaudiotagger.audio.opus.OpusHeader: int HEAD_CAPTURE_PATTERN_POS
com.tencent.mm.opensdk.modelbiz.AddCardToWXCardPackage$Resp: java.util.List cardArrary
com.caij.puremusic.db.model.PlaybackSongQueries$GetPlaybacksByTypeQuery$execute$1: com.caij.puremusic.db.model.PlaybackSongQueries$GetPlaybacksByTypeQuery this$1
org.jaudiotagger.audio.ogg.util.OggPageHeader: int streamSerialNumber
com.thegrizzlylabs.sardineandroid.DavAcl: java.lang.String owner
com.umeng.commonsdk.vchannel.a: java.lang.String g
com.caij.puremusic.network.model.TokenStore: java.lang.String TAG
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind MPEG4_ADTS_MAIN
org.jaudiotagger.tag.id3.ID3v24Frame: java.util.regex.Pattern validFrameIdentifier
org.jcodec.containers.mp4.boxes.ColorExtension: byte AVCOL_RANGE_JPEG
org.jaudiotagger.tag.id3.framebody.FrameBodyTDAT: int DATA_SIZE
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MOOD_DANCEABILITY
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script KHUTSURI
com.umeng.analytics.pro.d: java.lang.String[] aG
org.simpleframework.xml.strategy.Allocate: java.lang.String key
com.tencent.bugly.proguard.bq: long m
com.thegrizzlylabs.sardineandroid.model.SyncCollection: java.lang.String syncToken
org.jaudiotagger.tag.id3.reference.ITunesRating: org.jaudiotagger.tag.id3.reference.ID3Rating rating
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey BANNER_IMAGE_TYPE
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable mCollapseIcon
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey SCRIPT
org.jaudiotagger.audio.io.FileOperator: byte[] byteArray
com.umeng.commonsdk.statistics.internal.StatTracer: int mSuccessfulRequest
org.jaudiotagger.tag.id3.ID3v1Tag: byte REVISION
org.jcodec.containers.mp4.boxes.Edit: long mediaTime
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country THAILAND
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage OPERATION_NOT_SUPPORTED_FOR_FIELD
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey ALBUM_SORT
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_REMIXED
com.caij.puremusic.drive.model.GoogleDriveFile: com.caij.puremusic.drive.model.GoogleDriveFile$Companion Companion
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country[] $VALUES
com.caij.puremusic.db.model.SongQueries$songsByArtistIdWithLike$1: kotlin.jvm.functions.Function18 $mapper
org.simpleframework.xml.core.GetPart: java.lang.annotation.Annotation[] list
org.jaudiotagger.audio.wav.chunk.WavFormatChunk: int blockAlign
com.caij.puremusic.helper.BackupContent: com.caij.puremusic.helper.BackupContent SETTINGS
com.umeng.commonsdk.framework.a: android.os.HandlerThread a
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int BYTE_4
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype IWLAN
com.caij.puremusic.model.CategoryInfo$Category: int stringRes
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country MOZAMBIQUE
com.google.common.collect.AbstractIterator$State: com.google.common.collect.AbstractIterator$State READY
com.tencent.mm.opensdk.modelbiz.AddCardToWXCardPackage: java.lang.String TAG
com.umeng.analytics.vshelper.PageNameMonitor: java.lang.String currentCustomPage
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP4_FILE_NOT_CONTAINER
com.tencent.mm.opensdk.modelbiz.OpenBusiLuckyMoney$Req: java.lang.String timeStamp
com.umeng.analytics.pro.am: java.lang.String I
com.caij.puremusic.db.model.SongQueries$songByPath$1: kotlin.jvm.functions.Function18 $mapper
org.jaudiotagger.audio.generic.Utils: int BITS_IN_BYTE_MULTIPLIER
com.caij.puremusic.drive.model.AlbumListResponse$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.tencent.bugly.crashreport.crash.CrashDetailBean: java.lang.String n
com.caij.puremusic.model.UpdateInfo: boolean isCanIgnore
com.umeng.analytics.pro.o$d: java.lang.String b
org.jaudiotagger.tag.mp4.Mp4ContentTypeValue: int id
com.umeng.analytics.pro.j: java.lang.String B
com.tencent.mm.opensdk.modelbiz.WXLaunchWxaRedirectingPage$Req: java.lang.String invokeTicket
com.caij.puremusic.model.AbsCustomPlaylist$special$$inlined$inject$default$1: org.koin.core.component.KoinComponent $this_inject
com.tencent.mm.opensdk.modelmsg.LaunchFromWX$Req: int MESSAGE_ACTION_LENGTH_LIMIT
com.google.common.hash.LittleEndianByteArray$UnsafeByteArray: sun.misc.Unsafe theUnsafe
com.umeng.commonsdk.statistics.proto.d$e: com.umeng.commonsdk.statistics.proto.d$e c
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: org.jaudiotagger.audio.aiff.chunk.AiffCompressionType[] $VALUES
com.caij.puremusic.model.ArtworkInfo: android.graphics.Bitmap artwork
org.jaudiotagger.audio.ogg.util.OggPageHeader: int OGG_PAGE_HEADER_FIXED_LENGTH
com.thegrizzlylabs.sardineandroid.util.SardineUtil: java.lang.String DEFAULT_NAMESPACE_PREFIX
org.jaudiotagger.audio.asf.data.GUID: boolean $assertionsDisabled
org.jaudiotagger.tag.id3.framebody.FrameBodyETCO: int MPEG_FRAMES
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country BELIZE
androidx.fragment.app.DialogFragment: int STYLE_NO_TITLE
com.tencent.mm.opensdk.modelmsg.WXAppExtendObject: java.lang.String extInfo
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier ICNU
org.jaudiotagger.tag.id3.ID3v24Tag: int MASK_V24_GROUPING_IDENTITY
com.caij.puremusic.drive.model.SongItem: java.lang.String ServerId
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey PERFORMER_NAME_SORT
org.jaudiotagger.tag.id3.AbstractID3Tag: java.util.logging.Logger logger
com.umeng.analytics.pro.u: boolean j
org.simpleframework.xml.core.FieldContact: java.lang.annotation.Annotation[] list
com.caij.puremusic.drive.model.SubsonicSong: long duration
org.jcodec.containers.mp4.boxes.AudioSampleEntry: int kAudioFormatFlagIsSignedInteger
com.umeng.analytics.filter.b: com.umeng.analytics.filter.d a
com.tencent.mm.opensdk.diffdev.a.b$a: byte[] e
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_PLAY_COUNTER
org.jcodec.containers.mp4.BoxFactory: org.jcodec.containers.mp4.IBoxFactory timecode
com.caij.puremusic.db.model.FolderQueries$selectAll$2: com.caij.puremusic.db.model.FolderQueries$selectAll$2 INSTANCE
org.jcodec.containers.mp4.boxes.AliasBox: int AbsolutePath
com.caij.puremusic.db.model.SongQueries$songsByArtistIdWithLike$1: com.caij.puremusic.db.model.SongQueries this$0
com.umeng.analytics.pro.x: long a
org.jaudiotagger.tag.mp4.field.Mp4FieldType: org.jaudiotagger.tag.mp4.field.Mp4FieldType COVERART_JPEG
com.caij.puremusic.db.model.SongQueries$FirstSongByAlbumIdQuery: long albumId
com.caij.puremusic.db.model.ServerSongCoverQueries$GetBySourceQuery$execute$1: com.caij.puremusic.db.model.ServerSongCoverQueries$GetBySourceQuery this$0
org.simpleframework.xml.core.ModelAssembler: org.simpleframework.xml.stream.Format format
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$Req: com.tencent.mm.opensdk.modelmsg.WXMediaMessage message
com.tencent.bugly.proguard.bm: java.util.ArrayList b
org.simpleframework.xml.core.CompositeInlineList: org.simpleframework.xml.core.Traverser root
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MM_CUSTOM_2
org.jaudiotagger.tag.id3.ID3v24FieldKey: java.lang.String subId
com.thegrizzlylabs.sardineandroid.model.Prop: com.thegrizzlylabs.sardineandroid.model.Owner owner
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_WORK_PART_LEVEL2_TYPE
com.tencent.bugly.proguard.ay: int n
com.tencent.bugly.proguard.at: java.lang.String p
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MEDIA
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: java.text.SimpleDateFormat formatDateOut
com.umeng.commonsdk.statistics.internal.StatTracer$a: com.umeng.commonsdk.statistics.internal.StatTracer a
com.bumptech.glide.request.RequestCoordinator$RequestState: com.bumptech.glide.request.RequestCoordinator$RequestState RUNNING
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP4_CHANGES_TO_FILE_FAILED_DATA_CORRUPT
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country CUBA
com.tencent.bugly.proguard.as: java.util.Map l
com.tencent.mm.opensdk.modelbiz.AddCardToWXCardPackage$Req: java.util.List cardArrary
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MOOD_ELECTRONIC
org.jaudiotagger.audio.mp3.MP3AudioHeader: double trackLength
com.caij.puremusic.db.model.PlaylistEntityQueries$PlaylistByNameQuery: com.caij.puremusic.db.model.PlaylistEntityQueries this$0
org.jaudiotagger.audio.mp3.MP3AudioHeader: java.lang.Long audioDataEndPosition
kotlin.collections.State: kotlin.collections.State Failed
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey ARTISTS_SORT
org.simpleframework.xml.core.ElementUnionLabel: org.simpleframework.xml.ElementUnion union
com.tencent.mm.opensdk.constants.Build: int SUPPORTED_CHANNEL_SHARE_VIDEO
com.umeng.analytics.pro.g: java.util.concurrent.atomic.AtomicInteger a
org.jaudiotagger.utils.FileTypeUtil: java.lang.Integer[] mp4Sig
com.caij.puremusic.fragments.AlbumCoverStyle: int id
androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type VERTICAL_DIMENSION
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey IS_CLASSICAL
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a[] K
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_GROUP_DATA
com.caij.puremusic.db.model.SongQueries$delete$1: long $id
androidx.constraintlayout.core.widgets.ConstraintAnchor$Type: androidx.constraintlayout.core.widgets.ConstraintAnchor$Type RIGHT
kotlinx.coroutines.JobSupport: java.lang.Object _state
org.jaudiotagger.tag.id3.AbstractID3v2Tag$1: java.util.Iterator val$itHasNext
com.google.android.gms.common.internal.zat: android.os.Parcelable$Creator CREATOR
com.umeng.analytics.pro.d: java.lang.String a
org.simpleframework.xml.stream.OutputElement: org.simpleframework.xml.stream.NamespaceMap scope
com.tencent.mm.opensdk.modelmsg.WXMediaMessage: int MINI_PROGRAM__THUMB_LENGHT
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: int FIELD_FRAMING_FLAG_POS
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey REMIXER
com.alipay.android.phone.mrpc.core.p: com.alipay.android.phone.mrpc.core.HttpUrlHeader h
org.jaudiotagger.audio.SupportedFileFormat: org.jaudiotagger.audio.SupportedFileFormat AIFC
com.google.android.material.bottomsheet.BottomSheetDialog$EdgeToEdgeCallback: androidx.core.view.WindowInsetsCompat insetsCompat
org.jaudiotagger.audio.aiff.AiffAudioHeader: org.jaudiotagger.audio.aiff.AiffType fileType
com.tencent.bugly.proguard.s: boolean a
com.caij.puremusic.drive.model.Media$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.jcodec.containers.mp4.boxes.TrunBox: int dataOffset
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView
kotlinx.serialization.json.JsonObject: kotlinx.serialization.json.JsonObject$Companion Companion
org.jaudiotagger.tag.id3.ID3v24Tag: int TAG_EXT_HEADER_CRC_LENGTH
com.umeng.analytics.pro.bo: byte[] a
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int LAYER_II_SLOT_SIZE
com.tencent.mmkv.MMKVLogLevel: com.tencent.mmkv.MMKVLogLevel LevelInfo
com.tencent.mm.opensdk.diffdev.a.a: com.tencent.mm.opensdk.diffdev.OAuthListener d
com.caij.puremusic.drive.model.Directory: java.lang.String type
org.simpleframework.xml.core.DetailExtractor: org.simpleframework.xml.core.Support support
com.umeng.analytics.pro.an$e: java.lang.String m
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MUSICBRAINZ_RELEASE_TRACK_ID
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey TONALITY
com.alipay.apmobilesecuritysdk.face.APSecuritySdk$TokenResult: com.alipay.apmobilesecuritysdk.face.APSecuritySdk a
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzQ
com.umeng.analytics.pro.e: java.lang.String e
com.umeng.commonsdk.statistics.b: java.util.Map j
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State VISIBLE
org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId: boolean d
com.umeng.commonsdk.config.d: java.lang.String[] i
com.google.android.gms.internal.play_billing.zzew: com.google.android.gms.internal.play_billing.zzew zzf
com.umeng.commonsdk.UMInnerImpl: boolean isInternal
com.caij.puremusic.views.TopAppBarLayout$AppBarMode: com.caij.puremusic.views.TopAppBarLayout$AppBarMode SIMPLE
com.umeng.commonsdk.statistics.common.DeviceConfig: boolean hasReadOAID
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_WORK_PART_LEVEL2
com.tencent.bugly.proguard.aa: java.lang.String al
com.tencent.mm.opensdk.constants.Build: int FAVORITE_SUPPPORTED_SDK_INT
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier SBGP
org.jcodec.containers.mp4.BoxFactory: org.jcodec.containers.mp4.Boxes boxes
com.umeng.analytics.pro.ch: byte[] a
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a v
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script VAI
com.umeng.commonsdk.statistics.internal.StatTracer: int mLastRequestLatency
org.jaudiotagger.audio.iff.ChunkHeader: java.lang.String chunkId
org.jaudiotagger.audio.flac.FlacFileWriter: org.jaudiotagger.audio.flac.FlacTagWriter tw
com.caij.puremusic.db.model.DriveFileDownUrlInfo: long expiration
org.jaudiotagger.tag.id3.AbstractID3v1Tag: int FIELD_TAGID_LENGTH
com.tencent.mm.opensdk.diffdev.a.b: java.lang.String e
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script LATIN_GAELIC_VARIANT
org.simpleframework.xml.stream.CamelCaseStyle: org.simpleframework.xml.stream.Style style
com.github.dhaval2404.imagepicker.constant.ImageProvider: com.github.dhaval2404.imagepicker.constant.ImageProvider GALLERY
org.jaudiotagger.tag.datatype.TempoCode: int MINIMUM_NO_OF_DIGITS
com.umeng.analytics.pro.y: java.lang.String b
com.umeng.analytics.pro.j: java.lang.String ab
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey CHOIR
org.jaudiotagger.tag.id3.ID3Frames: java.util.TreeSet multipleFrames
com.caij.vip.AppGood: java.lang.String goodId
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script COPTIC
com.umeng.commonsdk.statistics.b: java.lang.String i
com.alipay.android.phone.mrpc.core.q: android.webkit.CookieManager i
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: float trackLength
com.caij.puremusic.drive.model.Multistatus: com.caij.puremusic.drive.model.Multistatus$Companion Companion
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier TWONKY_TRACKNO
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MUSICBRAINZ_RELEASE_COUNTRY
com.umeng.commonsdk.a: java.lang.reflect.Method b
com.caij.puremusic.drive.model.BaiduDriveItem: long size
com.umeng.commonsdk.utils.a: long b
org.jaudiotagger.audio.mp4.Mp4InfoReader: java.util.logging.Logger logger
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script BRAHMI
com.tencent.mm.opensdk.constants.Build: int SUPPORTED_SEND_AUTH_ADD_OPTIONS
org.jaudiotagger.tag.id3.framebody.FrameBodyASPI: int NO_OF_INDEX_POINTS_FIELD_SIZE
com.umeng.analytics.AnalyticsConfig: boolean CATCH_EXCEPTION
org.jaudiotagger.audio.wav.chunk.WavListChunk: org.jaudiotagger.tag.wav.WavTag tag
com.tencent.bugly.CrashModule: long a
com.bumptech.glide.load.engine.DecodeJob$RunReason: com.bumptech.glide.load.engine.DecodeJob$RunReason SWITCH_TO_SOURCE_SERVICE
nl.adaptivity.xmlutil.serialization.OutputKind: nl.adaptivity.xmlutil.serialization.OutputKind Inline
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey PART_NUMBER
com.umeng.commonsdk.utils.UMUtils: java.lang.String KEY_SHARED_PREFERENCES_NAME
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script PSALTER_PAHLAVI
org.jaudiotagger.tag.id3.ID3v22Tag: byte MAJOR_VERSION
com.alipay.android.phone.mrpc.core.e: int a
org.jaudiotagger.audio.ogg.util.OggPageHeader: boolean continuedPage
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NUMBER
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country BELARUS
com.umeng.analytics.pro.bn: byte[] i
com.alipay.android.phone.mrpc.core.y: com.alipay.android.phone.mrpc.core.z c
com.caij.puremusic.drive.model.Metadata: java.lang.String parentRatingKey
org.jaudiotagger.tag.mp4.Mp4TagFieldSubType: org.jaudiotagger.tag.mp4.Mp4TagFieldSubType GENRE
com.tencent.bugly.proguard.bt: int l
com.umeng.analytics.pro.d: java.lang.String c
com.tencent.mm.opensdk.modelbase.BaseResp$ErrCode: int ERR_BAN
com.tencent.mm.opensdk.modelmsg.WXVideoFileObject: java.lang.String TAG
org.jaudiotagger.audio.asf.io.EncryptionChunkReader: org.jaudiotagger.audio.asf.data.GUID[] APPLYING
org.jaudiotagger.tag.id3.ID3v11Tag: byte REVISION
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_EVENT_TIMING_CODES
com.umeng.analytics.pro.m: java.util.ArrayList f
com.alipay.tscenter.biz.rpc.vkeydfp.result.DeviceDataReportResult: java.lang.String apdid
org.simpleframework.xml.core.ElementListUnionParameter: int index
org.simpleframework.xml.core.CompositeMap: org.simpleframework.xml.core.Entry entry
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_LINKED_INFO
com.umeng.analytics.pro.cj: int f
com.caij.puremusic.db.model.PlayCountEntityQueries$update$2: com.caij.puremusic.db.model.PlayCountEntityQueries$update$2 INSTANCE
org.jcodec.containers.mp4.boxes.EsdsBox$DecoderConfig: int avgBitrate
com.umeng.analytics.pro.am: java.lang.String V
com.caij.puremusic.db.model.ServerSongCoverQueries$insert$2: com.caij.puremusic.db.model.ServerSongCoverQueries$insert$2 INSTANCE
com.caij.puremusic.drive.model.Location$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.caij.puremusic.network.model.LastFmArtist$Artist: com.caij.puremusic.network.model.LastFmArtist$Artist$Stats stats
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey TIMBRE
com.tencent.bugly.proguard.aj: com.tencent.bugly.proguard.af k
org.jaudiotagger.test.MergeID3AndMP3Files$DirFilter: org.jaudiotagger.test.MergeID3AndMP3Files this$0
org.simpleframework.xml.core.OverrideType: org.simpleframework.xml.strategy.Type type
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey RATING
org.jaudiotagger.logging.XMLTagDisplayFormatter: java.lang.String xmlCDataTagClose
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag PENALTY_DEATH
org.jaudiotagger.tag.TagOptionSingleton: boolean lyrics3Save
com.alipay.android.phone.mrpc.core.b$a: com.alipay.android.phone.mrpc.core.b a
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: int bitrateMaximal
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey TEMPO
com.caij.puremusic.model.Home: int titleRes
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier SWTC
com.umeng.commonsdk.statistics.common.ReportPolicy: int WIFIONLY
com.umeng.analytics.pro.bk: com.umeng.analytics.pro.bi c
com.caij.puremusic.db.model.PlaylistEntityQueries$SearchPlaylistByNameQuery$execute$1: com.caij.puremusic.db.model.PlaylistEntityQueries$SearchPlaylistByNameQuery this$0
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: int FLAG_DEFAILT_SAMPLE_FLAGS
org.xmlpull.v1.XmlPullParser: int COMMENT
org.jaudiotagger.tag.mp4.Mp4Tag: java.util.EnumMap tagFieldToMp4Field
org.jaudiotagger.tag.wav.WavInfoTag: java.util.List unrecognisedFields
com.umeng.analytics.pro.d: java.lang.String[] aH
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey ISRC
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind[] $VALUES
com.alipay.android.app.IAlixPay$Stub: int TRANSACTION_registerCallback03
com.umeng.commonsdk.statistics.AnalyticsConstants: java.lang.String[] APPLOG_URL_LIST
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey GENRE
com.caij.puremusic.db.model.SongQueries$SongByPathQuery: java.lang.String filePath
com.caij.puremusic.model.Playlist: android.os.Parcelable$Creator CREATOR
org.simpleframework.xml.core.InstantiatorBuilder: org.simpleframework.xml.core.Comparer comparer
com.google.android.gms.common.internal.MethodInvocation: android.os.Parcelable$Creator CREATOR
org.simpleframework.xml.core.PrimitiveKey: org.simpleframework.xml.stream.Style style
org.jaudiotagger.tag.id3.ID3v23Frame$StatusFlags: org.jaudiotagger.tag.id3.ID3v23Frame this$0
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MUSICBRAINZ_WORK_ID
com.caij.puremusic.drive.model.SubsonicResponse$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey TONALITY
com.caij.puremusic.network.model.Artist: java.util.List artists
org.simpleframework.xml.stream.PullReader$Start: java.lang.String name
androidx.preference.MultiSelectListPreference$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.metadata.scte35.SpliceNullCommand: android.os.Parcelable$Creator CREATOR
com.umeng.commonsdk.internal.a: int w
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier TIRI
com.umeng.commonsdk.utils.d: java.lang.String R
com.caij.puremusic.db.model.FolderQueries$deleteById$2: com.caij.puremusic.db.model.FolderQueries$deleteById$2 INSTANCE
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier VWDI
com.caij.vip.GoodOrder: java.lang.String outTradeNo
com.google.android.material.bottomsheet.BottomSheetBehavior: int activePointerId
org.simpleframework.xml.strategy.CycleStrategy: org.simpleframework.xml.strategy.Contract contract
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey COUNTRY
com.caij.puremusic.drive.model.Metadata: java.lang.String summary
com.umeng.analytics.pro.am: java.lang.String aq
com.umeng.commonsdk.statistics.common.DeviceTypeEnum: com.umeng.commonsdk.statistics.common.DeviceTypeEnum[] $VALUES
org.jcodec.containers.mp4.boxes.TrackHeaderBox: float width
org.repackage.com.vivo.identifier.IdentifierIdClient: int m
com.umeng.analytics.pro.j: java.lang.String aj
org.jaudiotagger.tag.lyrics3.Lyrics3v2Fields: byte[] crlfByte
com.umeng.commonsdk.UMConfigure: java.lang.String KEY_METHOD_NAME_SETDEBUGMODE
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.Id3FieldType fieldType
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey ALBUM_ARTISTS_SORT
com.caij.puremusic.db.model.SongQueries$songsDateLastDesc$2: com.caij.puremusic.db.model.SongQueries$songsDateLastDesc$2 INSTANCE
com.caij.puremusic.drive.model.AlbumMediaContainer$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: java.lang.String code
com.tencent.mm.opensdk.modelbiz.WXChannelOpenFeed$Req: java.lang.String nonceID
com.google.android.gms.signin.internal.zai: android.os.Parcelable$Creator CREATOR
com.caij.puremusic.fragments.NowPlayingScreen: com.caij.puremusic.fragments.NowPlayingScreen MD3
com.google.android.material.badge.BadgeState$State: android.os.Parcelable$Creator CREATOR
org.simpleframework.xml.core.PrimitiveValue: org.simpleframework.xml.core.Entry entry
org.repackage.com.vivo.identifier.IdentifierIdObserver: java.lang.String a
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_RELEASE_TYPE
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey OCCASION
okhttp3.TlsVersion: java.lang.String javaName
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag NETWORK_UNMETERED
com.umeng.analytics.pro.d: java.lang.String aa
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey WORK_PART_LEVEL5
org.jcodec.containers.mp4.boxes.ClipRegionBox: short rgnSize
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: int bitrateMinimal
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP3_UNABLE_TO_ADJUST_PADDING
androidx.fragment.app.DialogFragment: boolean mViewDestroyed
com.thegrizzlylabs.sardineandroid.model.Propfind: com.thegrizzlylabs.sardineandroid.model.Prop prop
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$PostorderEnumeration: java.util.Enumeration subtree
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey SUBTITLE
com.umeng.commonsdk.statistics.common.a$b: java.util.concurrent.LinkedBlockingQueue b
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_RELEASEID
com.caij.puremusic.drive.model.DavResource: java.lang.String HTTPD_UNIX_DIRECTORY_CONTENT_TYPE
com.google.android.exoplayer2.metadata.vorbis.VorbisComment: android.os.Parcelable$Creator CREATOR
com.tencent.mm.opensdk.modelpay.PayReq: java.lang.String signType
org.repackage.a.a.a.a.c: org.repackage.a.a.a.a a
org.jaudiotagger.tag.id3.ID3v11Tag: int FIELD_TRACK_POS
org.simpleframework.xml.core.CacheLabel: boolean text
com.umeng.analytics.AnalyticsConfig: java.lang.String mWrapperType
com.caij.puremusic.drive.model.AMediaContainer: com.caij.puremusic.drive.model.AMediaContainer$Companion Companion
com.caij.vip.GoodOrder: float payPrice
androidx.fragment.app.DialogFragment: java.lang.String SAVED_BACK_STACK_ID
com.bumptech.glide.load.EncodeStrategy: com.bumptech.glide.load.EncodeStrategy SOURCE
com.umeng.umzid.ZIDManager$c: com.umeng.umzid.ZIDManager b
org.jaudiotagger.utils.DirectByteBufferUtils$AndroidReleaseStrategy: org.jaudiotagger.utils.DirectByteBufferUtils$ReleaseStrategy INSTANCE
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier YRRC
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String sIDFA
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgram$Req: java.lang.String TAG
com.umeng.umzid.b: java.util.concurrent.ScheduledThreadPoolExecutor a
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey PART_TYPE
com.umeng.analytics.pro.cj: int d
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MEDIA
com.umeng.analytics.pro.at: short[] a
org.simpleframework.xml.core.AttributeLabel: boolean required
org.jaudiotagger.audio.asf.util.Utils: java.lang.String LINE_SEPARATOR
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a u
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED
com.caij.puremusic.db.model.PlaylistEntityQueries$getPlaylistEntityById$1: kotlin.jvm.functions.Function2 $mapper
org.jaudiotagger.audio.wav.chunk.WavId3Chunk: java.util.logging.Logger logger
com.umeng.vt.diff.Channel$1: android.content.Context val$context
com.tencent.mm.opensdk.modelmsg.GetMessageFromWX$Resp: java.lang.String TAG
org.simpleframework.xml.stream.NodeBuilder: org.simpleframework.xml.stream.Provider PROVIDER
org.simpleframework.xml.core.ElementListUnionLabel: org.simpleframework.xml.core.Contact contact
org.jaudiotagger.tag.TagOptionSingleton: boolean isWriteMp3GenresAsText
com.caij.puremusic.db.model.ServerArtistCoverQueries$insert$1: com.caij.puremusic.db.model.ServerArtistCover $ServerArtistCover
com.umeng.commonsdk.utils.d: java.lang.String ae
com.umeng.analytics.process.UMProcessDBDatasSender: com.umeng.analytics.process.UMProcessDBDatasSender mInstance
com.caij.puremusic.db.model.SongQueries$GetSongBySourceQuery: long sourceId
org.jcodec.containers.mp4.boxes.CleanApertureExtension: int apertureHeightNumerator
com.umeng.commonsdk.internal.a: int d
com.tencent.mm.opensdk.modelmsg.WXVideoObject: int LENGTH_LIMIT
org.koin.core.definition.Kind: org.koin.core.definition.Kind Scoped
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey URL_OFFICIAL_ARTIST_SITE
com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion JAVA7
com.tencent.bugly.proguard.aj: int a
com.umeng.analytics.pro.j: java.lang.String x
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey WORK_PART_LEVEL5
com.tencent.mm.opensdk.modelmsg.WXAppExtendObject: java.lang.String TAG
org.jaudiotagger.audio.mp4.ChunkReader: int sampleNo
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: java.lang.String TYPE_FRAMEUNSYNCHRONIZATION
com.tencent.mm.opensdk.constants.ConstantsAPI$WXMiniProgram: int MINI_PROGRAM_TYPE_PREVIEW
org.jaudiotagger.audio.mp4.ChunkReader: int curChunk
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzJ
com.umeng.analytics.pro.j: java.lang.String p
org.jaudiotagger.audio.mp4.Chunk: int UNEQUAL_DUR
com.google.android.gms.internal.play_billing.zzbt: int zzac
com.caij.puremusic.drive.model.MediaInfoWrapper: java.util.List songEntities
org.jaudiotagger.tag.id3.ID3v23FieldKey: java.lang.String frameId
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey ORCHESTRA
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country ETHIOPIA
org.jaudiotagger.audio.dsf.DsdChunk: int METADATA_OFFSET_LENGTH
androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type BASELINE
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country REUNION
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country HUNGARY
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_TERMS_OF_USE
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey ENCODER
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level HEADERS
com.caij.puremusic.db.model.SongEntityQueries$deleteSongFromPlaylist$1: long $songId
com.umeng.analytics.pro.o$a: int p
org.jaudiotagger.tag.id3.framebody.FrameBodyRBUF: int OFFSET_FIELD_SIZE
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgram$Req: int MINIPROGRAM_TYPE_PREVIEW
org.jaudiotagger.audio.aiff.chunk.AiffChunkType: org.jaudiotagger.audio.aiff.chunk.AiffChunkType FORMAT_VERSION
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_ENCODING_TIME
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey GENRE
com.tencent.mm.opensdk.diffdev.a.b$a: java.lang.String c
com.umeng.commonsdk.config.d$c: com.umeng.commonsdk.config.d$c f
com.umeng.commonsdk.UMConfigureImpl: int e
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey COMPOSER_SORT
com.google.android.material.search.SearchView$TransitionState: com.google.android.material.search.SearchView$TransitionState HIDDEN
org.jaudiotagger.audio.asf.io.ModificationResult: int chunkDifference
io.ktor.util.date.WeekDay: io.ktor.util.date.WeekDay SUNDAY
androidx.fragment.app.Fragment: int AWAITING_ENTER_EFFECTS
org.simpleframework.xml.core.TemplateEngine: int off
com.tencent.mm.opensdk.modelbiz.SubscribeMiniProgramMsg$Req: java.lang.String TAG
kotlinx.serialization.json.internal.WriteMode: kotlinx.serialization.json.internal.WriteMode[] $VALUES
com.caij.puremusic.db.model.SongQueries$GetSongCountBySourceIdQuery: com.caij.puremusic.db.model.SongQueries this$0
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey PRODUCER
com.caij.puremusic.drive.model.Type: java.lang.String title
com.google.android.gms.internal.play_billing.zzfv: com.google.android.gms.internal.play_billing.zzfm zzg
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String COUNTRY
org.jaudiotagger.tag.id3.ID3v23Tag: int crc32
com.umeng.analytics.pro.a$a: java.lang.String h
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MOVEMENT_TOTAL
org.jaudiotagger.logging.AbstractTagDisplayFormatter: java.util.HashMap hexBinaryMap
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_WORK_PART_LEVEL1
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_WORKID
com.tencent.bugly.BuglyStrategy: boolean p
org.jaudiotagger.tag.reference.Tagger: org.jaudiotagger.tag.reference.Tagger ITUNES
org.simpleframework.xml.core.ElementUnionLabel: org.simpleframework.xml.core.Expression path
org.jaudiotagger.tag.mp4.field.Mp4TrackField: int TRACK_NO_INDEX
com.umeng.commonsdk.stateless.a: java.lang.String a
com.caij.puremusic.drive.model.SongItem: java.lang.String LocationType
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_IS_COMPILATION
com.tencent.bugly.proguard.at$3: boolean a
com.caij.puremusic.db.model.ServerLyricsQueries$GetByIdQuery: long id
com.caij.puremusic.drive.model.Location: java.lang.String href
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_URL_ARTIST_WEB
org.jaudiotagger.tag.id3.framebody.FrameBodyWXXX: java.lang.String URL_WIKIPEDIA_ARTIST_SITE
com.umeng.commonsdk.framework.UMFrUtils: java.lang.String mDefaultEnvelopeDirPath
com.umeng.commonsdk.debug.UMLog: java.lang.String SINGLE_DIVIDER_AQ
com.umeng.commonsdk.statistics.b: java.lang.String c
com.caij.puremusic.db.model.HistoryEntityQueries$insert$2: com.caij.puremusic.db.model.HistoryEntityQueries$insert$2 INSTANCE
com.caij.puremusic.drive.model.WebDAVToken: com.caij.puremusic.drive.model.WebDAVToken$Companion Companion
com.caij.puremusic.drive.model.OneDriveFileResponse$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.tencent.bugly.proguard.bg: com.tencent.bugly.proguard.bf a
com.caij.puremusic.drive.model.PlaylistsMediaContainer$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.repackage.com.vivo.identifier.IdentifierIdClient: int l
com.umeng.analytics.pro.bd: byte c
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey PART_NUMBER
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey CHOIR
com.alipay.android.phone.mrpc.core.i: com.alipay.android.phone.mrpc.core.aa a
com.umeng.analytics.pro.bv: int d
com.bumptech.glide.load.PreferredColorSpace: com.bumptech.glide.load.PreferredColorSpace[] $VALUES
com.thegrizzlylabs.sardineandroid.model.Principal: com.thegrizzlylabs.sardineandroid.model.Self self
org.jaudiotagger.audio.wav.WavTagWriter$BothTagsFileStructure: boolean isContiguous
org.jaudiotagger.tag.TagOptionSingleton: boolean id3v2Save
org.jaudiotagger.audio.generic.Utils: int KILOBYTE_MULTIPLIER
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b r
com.tencent.bugly.crashreport.biz.UserInfoBean: long e
com.alipay.apmobilesecuritysdk.otherid.UmidSdkWrapper: java.lang.String cachedUmidToken
com.umeng.analytics.process.DBFileTraversalUtil: com.umeng.commonsdk.utils.FileLockUtil b
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: java.lang.String TYPE_DATALENGTHINDICATOR
com.umeng.analytics.pro.j: java.lang.String q
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script CIRTH
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] $VALUES
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey LYRICS
com.caij.puremusic.model.lyrics.Lyrics: com.caij.puremusic.db.model.Song song
com.umeng.commonsdk.stateless.b: int g
org.simpleframework.xml.core.PathParser: org.simpleframework.xml.strategy.Type type
com.caij.puremusic.drive.model.Metadata$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessView$Req: java.lang.String extInfo
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier CTTS
org.jaudiotagger.tag.datatype.TCONString: boolean isNullSeperateMultipleValues
com.google.android.material.bottomsheet.BottomSheetBehavior: android.util.SparseIntArray expandHalfwayActionIds
com.bumptech.glide.request.RequestCoordinator$RequestState: boolean isComplete
com.caij.puremusic.db.model.SongQueries$songsByAlum$1: kotlin.jvm.functions.Function18 $mapper
org.simpleframework.xml.core.LabelExtractor: org.simpleframework.xml.stream.Format format
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_AUDIO_ENCRYPTION
org.jaudiotagger.audio.opus.OpusHeader: byte[] HEAD_CAPTURE_PATTERN_AS_BYTES
com.caij.puremusic.drive.model.SongItem: java.util.List AlbumArtists
org.jaudiotagger.audio.iff.IffHeaderChunk: int SIGNATURE_LENGTH
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey PERIOD
com.google.android.material.bottomsheet.BottomSheetDialog: android.widget.FrameLayout bottomSheet
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey TITLE_MOVEMENT
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b x
com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport: com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport$SyncLevel syncLevel
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_DISCID
com.umeng.analytics.pro.o$c: int e
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey TITLE_SORT
org.jaudiotagger.tag.id3.valuepair.ImageFormats: java.lang.String V22_JPG_FORMAT
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
com.tencent.bugly.proguard.at: boolean n
com.caij.puremusic.drive.model.GoogleDriveFileResponse$$serializer: com.caij.puremusic.drive.model.GoogleDriveFileResponse$$serializer INSTANCE
com.caij.puremusic.drive.model.PlayListSubsonicResponse: com.caij.puremusic.drive.model.SubPlayList playlist
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage[] $VALUES
com.umeng.analytics.pro.o: java.lang.Object w
com.caij.puremusic.db.model.PlayCountEntity: long playCount
com.umeng.analytics.pro.j: java.lang.String ad
org.simpleframework.xml.core.Persister: org.simpleframework.xml.core.Support support
com.tencent.bugly.proguard.aj: long c
com.tencent.bugly.proguard.aa: java.util.List ay
com.caij.puremusic.drive.model.DriveFile: long fileLength
com.umeng.commonsdk.statistics.internal.StatTracer: java.lang.String KEY_CLIENT_REQUEST_TIME
com.umeng.analytics.pro.d: java.lang.String s
com.umeng.commonsdk.statistics.common.d$a: java.io.File b
com.tencent.mm.opensdk.modelmsg.WXMediaMessage: int DESCRIPTION_LENGTH_LIMIT
com.umeng.commonsdk.UMConfigureImpl: boolean d
org.jaudiotagger.utils.tree.TreePath: org.jaudiotagger.utils.tree.TreePath parentPath
com.tencent.bugly.proguard.bn: java.lang.String b
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey CLASSICAL_CATALOG
com.tencent.mm.opensdk.modelmsg.WXMusicObject: java.lang.String songAlbumUrl
com.caij.puremusic.drive.model.SubsonicSong: int track
kotlin.time.DurationUnit: java.util.concurrent.TimeUnit timeUnit
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_REVERB_FEEDBACK_RIGHT_TO_LEFT
com.caij.puremusic.drive.model.SubsonicPlaylist: java.lang.Boolean public
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier PCLR
com.umeng.commonsdk.utils.d: java.lang.String T
org.jaudiotagger.tag.mp4.Mp4ContentTypeValue: org.jaudiotagger.tag.mp4.Mp4ContentTypeValue NORMAL
com.caij.puremusic.db.model.SongQueries$song$1: kotlin.jvm.functions.Function18 $mapper
com.umeng.analytics.pro.bo$b: byte a
org.repackage.com.vivo.identifier.BuildConfig: boolean a
org.simpleframework.xml.core.ElementMapLabel: java.lang.String override
org.jcodec.containers.mp4.boxes.NodeBox: org.jcodec.containers.mp4.IBoxFactory factory
com.umeng.commonsdk.statistics.noise.ABTest: java.lang.String mPoli
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey PERIOD
com.umeng.analytics.pro.i: java.lang.String h
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country NETHERLANDS
org.jaudiotagger.tag.id3.framebody.AbstractID3v2FrameBody: int size
com.umeng.analytics.pro.cg: java.io.OutputStream b
com.caij.puremusic.db.model.SongQueries$songsByAlbumIdCount$1: com.caij.puremusic.db.model.SongQueries$songsByAlbumIdCount$1 INSTANCE
com.umeng.analytics.filter.a: com.umeng.analytics.filter.d a
org.jaudiotagger.audio.asf.data.MetadataDescriptor: java.util.logging.Logger LOGGER
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_UNSYNC_LYRICS
com.caij.puremusic.db.model.HistoryEntityQueries$updateHistorySong$1: long $timePlayed
org.jaudiotagger.tag.id3.framebody.FrameBodyASPI: java.lang.String NUMBER_OF_INDEX_POINTS
org.jaudiotagger.tag.TagOptionSingleton: boolean unsyncTags
com.umeng.commonsdk.statistics.UMServerURL: java.lang.String PATH_PUSH_LAUNCH
org.jaudiotagger.tag.id3.AbstractID3v2Frame: java.lang.String TYPE_FRAME_SIZE
com.tencent.bugly.proguard.ac: int a
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey ENSEMBLE_SORT
org.jaudiotagger.tag.id3.ID3v1Iterator: int COMMENT
com.caij.puremusic.network.model.LastFmArtist$Artist: java.util.List image
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: byte[] imageData
com.caij.puremusic.drive.model.User: com.caij.puremusic.drive.model.User$Companion Companion
org.jcodec.containers.mp4.boxes.SampleSizesBox: int defaultSize
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script CYRILLIC_OLD_CHURCH_SLAVONIC_VARIANT
com.umeng.umzid.ZIDManager$b: com.umeng.umzid.ZIDManager b
com.caij.puremusic.network.model.LastFmTrack$Track: com.caij.puremusic.network.model.LastFmTrack$Track$Wiki wiki
org.simpleframework.xml.core.AttributeLabel: org.simpleframework.xml.Attribute label
com.tencent.bugly.CrashModule: com.tencent.bugly.BuglyStrategy$a b
org.simpleframework.xml.core.Template: char[] buf
com.umeng.commonsdk.framework.a: int t
com.tencent.bugly.proguard.af: com.tencent.bugly.proguard.af a
org.simpleframework.xml.core.ElementMapUnionLabel: org.simpleframework.xml.core.Expression path
com.caij.puremusic.fragments.NowPlayingScreen: com.caij.puremusic.fragments.NowPlayingScreen Simple
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: boolean l
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey VENDOR
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier COPYRIGHT
com.thegrizzlylabs.sardineandroid.model.Prop: com.thegrizzlylabs.sardineandroid.model.QuotaAvailableBytes quotaAvailableBytes
org.simpleframework.xml.core.StructureBuilder: org.simpleframework.xml.core.Scanner scanner
com.caij.vip.ClientWeixinPayResponse: java.lang.String sign
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey KEY
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey ALBUMARTISTSSORT
com.umeng.commonsdk.internal.utils.c: android.content.Context c
com.caij.puremusic.drive.model.SubsonicAlbum: java.lang.String created
org.jaudiotagger.audio.dsf.DsdChunk: int FILESIZE_LENGTH
com.tencent.mm.opensdk.modelmsg.WXWebpageObject: java.lang.String canvasPageXml
com.tencent.bugly.proguard.bo: int k
com.caij.puremusic.drive.model.FMediaContainer: int size
com.caij.puremusic.drive.model.PlaylistResponse: com.caij.puremusic.drive.model.PlayListSubsonicResponse subsonicResponse
com.caij.puremusic.drive.model.MediaStream$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean nestedScrolled
org.simpleframework.xml.core.ElementArrayLabel: java.lang.String entry
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey IS_COMPILATION
com.tencent.bugly.proguard.bo: java.lang.String t
org.simpleframework.xml.core.ElementParameter: int index
com.caij.puremusic.db.model.HistoryEntity: long id
org.jaudiotagger.audio.mp4.Mp4FileReader: org.jaudiotagger.audio.mp4.Mp4TagReader tr
com.caij.puremusic.drive.model.AlbumItem: java.lang.String AlbumArtist
com.tencent.bugly.crashreport.crash.CrashDetailBean: java.lang.String m
com.umeng.commonsdk.UMConfigure: java.lang.String KEY_FILE_NAME_APPKEY
org.jcodec.containers.mp4.boxes.ReverseDnsBox$RdnsMeanBox: java.lang.String issuer
com.google.android.exoplayer2.metadata.flac.PictureFrame: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.audio.asf.data.VideoStreamChunk: long pictureWidth
org.jaudiotagger.audio.asf.data.AudioStreamChunk: long blockAlignment
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: int sampleDescriptionIndex
com.alipay.sdk.m.u.g: com.alipay.sdk.m.u.g[] s
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MUSICBRAINZ_WORK_PART_LEVEL2_ID
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mChildFragmentManager
com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker: boolean isContinueSettlingRunnablePosted
org.simpleframework.xml.stream.Verbosity: org.simpleframework.xml.stream.Verbosity HIGH
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey DISC_NO
com.umeng.analytics.pro.o: int f
com.tencent.bugly.proguard.br: java.util.Map j
com.caij.puremusic.drive.model.SongItem: java.util.List ArtistItems
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a H
com.tencent.bugly.proguard.bo: java.lang.String m
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier FREE
org.simpleframework.xml.core.ElementArrayParameter: int index
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag$1: int[] $SwitchMap$org$jaudiotagger$tag$vorbiscomment$VorbisAlbumArtistReadOptions
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script KHMER
org.jaudiotagger.tag.reference.Tagger: org.jaudiotagger.tag.reference.Tagger XIPH
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey TV_NETWORK
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey DJMIXER
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType FLOAT_TYPE
org.jcodec.containers.mp4.boxes.EsdsBox: java.util.Map audioProfileMap
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: int FIELD_BLOCKSIZE_POS
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String title
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_COUNTER
com.google.android.gms.internal.play_billing.zzcj: com.google.android.gms.internal.play_billing.zzcj zzg
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage ID_TAG_SIZE
org.jaudiotagger.audio.aiff.AiffInfoReader$1: int[] $SwitchMap$org$jaudiotagger$audio$aiff$chunk$AiffChunkType
com.umeng.analytics.pro.am: java.lang.String al
org.simpleframework.xml.stream.PullReader$Start: org.xmlpull.v1.XmlPullParser source
org.jcodec.containers.mp4.boxes.SampleSizesBox: int count
com.umeng.analytics.MobclickAgent$PageMode: com.umeng.analytics.MobclickAgent$PageMode LEGACY_AUTO
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey BPM
com.caij.puremusic.db.model.Folder: java.lang.String title
com.tencent.mm.opensdk.modelmsg.WXTextObject: java.lang.String text
com.google.common.base.AbstractIterator$State: com.google.common.base.AbstractIterator$State DONE
com.caij.puremusic.drive.model.User: java.lang.String Id
com.umeng.analytics.pro.b$a: java.lang.String d
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country MADAGASCAR
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MM_ORIGINAL_ARTIST
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey DISC_SUBTITLE
com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker: java.lang.Runnable continueSettlingRunnable
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_TIME_STAMP_FORMAT
kotlin.time.DurationUnit: kotlin.time.DurationUnit MICROSECONDS
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_RADIO_NAME
com.google.android.exoplayer2.metadata.id3.TextInformationFrame: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.audio.generic.Utils: java.util.Map boxed2primitive
com.umeng.commonsdk.config.d: java.util.Map l
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart UNDISPATCHED
com.tencent.bugly.proguard.ag$c: boolean d
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdTypeCountQuery: com.caij.puremusic.db.model.SongQueries this$0
org.jaudiotagger.audio.wav.WavTagWriter: java.lang.String loggingName
org.simpleframework.xml.transform.DefaultMatcher: org.simpleframework.xml.transform.Matcher matcher
com.tencent.bugly.proguard.aa: java.lang.String s
com.google.android.gms.common.internal.zav: android.os.Parcelable$Creator CREATOR
com.tencent.bugly.proguard.g: byte b
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype LTE_CA
com.umeng.analytics.pro.ao: java.lang.String e
com.umeng.commonsdk.utils.a: android.os.Handler g
org.jcodec.containers.mp4.boxes.AliasBox: int UTF16AbsolutePath
com.thegrizzlylabs.sardineandroid.model.Ace: com.thegrizzlylabs.sardineandroid.model.Protected protected1
org.jaudiotagger.tag.id3.ID3v24PreferredFrameOrderComparator: org.jaudiotagger.tag.id3.ID3v24PreferredFrameOrderComparator comparator
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_FILE
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country IRAN
org.jaudiotagger.tag.reference.ID3V2Version: org.jaudiotagger.tag.reference.ID3V2Version ID3_V24
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_END_TIME
org.jaudiotagger.tag.id3.ID3v1Tag: java.lang.String album
com.umeng.commonsdk.statistics.proto.b$e: com.umeng.commonsdk.statistics.proto.b$e b
com.umeng.analytics.pro.bx: int a
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country ANGUILLA
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey COPYRIGHT
com.alipay.android.phone.mrpc.core.l: java.util.concurrent.ThreadFactory i
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_CONTENT_TYPE
org.simpleframework.xml.core.Variable: java.lang.Object value
org.jaudiotagger.audio.mp4.Mp4TagReader: java.util.logging.Logger logger
com.umeng.analytics.pro.e$b$a: java.lang.String a
com.umeng.analytics.pro.am: java.lang.String ag
com.caij.puremusic.db.model.Song: long albumId
com.google.android.material.bottomsheet.BottomSheetBehavior: java.lang.ref.WeakReference nestedScrollingChildRef
org.simpleframework.xml.core.ElementMapUnionParameter: java.lang.String name
org.jaudiotagger.audio.asf.data.ContainerType: org.jaudiotagger.audio.asf.data.ContainerType EXTENDED_CONTENT
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason REASON_UNKNOWN
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_ARTISTID
com.umeng.commonsdk.statistics.proto.a: com.umeng.analytics.pro.bp k
org.jaudiotagger.audio.asf.data.ContainerType: org.jaudiotagger.audio.asf.data.GUID containerGUID
org.jaudiotagger.tag.id3.ID3v23Frames: org.jaudiotagger.tag.id3.ID3v23Frames id3v23Frames
org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.core.Entry entry
org.simpleframework.xml.core.AnnotationHandler: org.simpleframework.xml.core.Comparer comparer
org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile: int id
com.umeng.commonsdk.config.d$d: com.umeng.commonsdk.config.d$d d
com.tencent.bugly.proguard.bt: java.lang.String d
com.tencent.mm.opensdk.modelmsg.WXMiniProgramObject: int MINIPROGRAM_TYPE_PREVIEW
com.tencent.bugly.proguard.y: long a
org.simpleframework.xml.core.ClassScanner: org.simpleframework.xml.core.Function commit
com.umeng.analytics.pro.am: java.lang.String J
com.tencent.mm.opensdk.constants.Build: int WEISHI_MINIPROGRAM_SUPPORTED_SDK_INT
org.jaudiotagger.tag.reference.MusicalKey: org.jaudiotagger.tag.reference.MusicalKey FLAT
org.jcodec.containers.mp4.boxes.UdtaBox: java.lang.String FOURCC
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage ID3_INVALID_OR_UNKNOWN_FLAG_SET
com.caij.puremusic.drive.model.DropboxDriveFileResponse$$serializer: com.caij.puremusic.drive.model.DropboxDriveFileResponse$$serializer INSTANCE
com.umeng.analytics.pro.bo: long q
com.r0adkll.slidr.model.SlidrPosition: com.r0adkll.slidr.model.SlidrPosition TOP
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String sSecondImei
com.umeng.analytics.pro.e$d$a: java.lang.String f
com.umeng.analytics.pro.g$a: com.umeng.analytics.pro.g a
com.tencent.bugly.proguard.bh: com.tencent.bugly.proguard.bk b
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MUSICBRAINZ_RELEASEARTISTID
com.umeng.commonsdk.utils.d: java.lang.String W
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_TRDA
com.umeng.commonsdk.statistics.noise.ImLatent: int latentWindow
org.jaudiotagger.tag.lyrics3.FieldFrameBodyLYR: java.util.ArrayList lines
com.umeng.commonsdk.statistics.proto.c$e: com.umeng.commonsdk.statistics.proto.c$e a
com.caij.puremusic.drive.model.MediaStream: com.caij.puremusic.drive.model.MediaStream$Companion Companion
com.caij.puremusic.db.model.SongQueries$clear$1: com.caij.puremusic.db.model.SongQueries$clear$1 INSTANCE
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4TagFieldSubType subclassType
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country TAIWAN
com.umeng.analytics.process.c$a: android.database.sqlite.SQLiteOpenHelper b
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_RELEASE_STATUS
com.thegrizzlylabs.sardineandroid.model.QuotaUsedBytes: java.util.List content
com.caij.puremusic.fragments.lyrics.ComnLyricsFragment$LyricsType: com.caij.puremusic.fragments.lyrics.ComnLyricsFragment$LyricsType SERVER_META_LYRICS
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey WORK_PART_LEVEL3
org.jaudiotagger.audio.opus.OpusInfoReader: java.util.logging.Logger logger
com.caij.puremusic.db.model.Song$Adapter: app.cash.sqldelight.ColumnAdapter sourceTypeAdapter
com.google.android.exoplayer2.metadata.mp4.SmtaMetadataEntry: android.os.Parcelable$Creator CREATOR
com.tencent.mm.opensdk.modelmsg.WXWebpageObject: int LENGTH_LIMIT
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzW
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status[] $VALUES
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$Req: int WXSceneStatus
com.caij.puremusic.drive.model.WebDAVToken$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.umeng.commonsdk.internal.c: java.lang.reflect.Method k
com.umeng.commonsdk.statistics.proto.b$e: com.umeng.commonsdk.statistics.proto.b$e[] g
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage GENERAL_DELETE_FAILED_BECAUSE_FILE_IS_TOO_SMALL
com.caij.puremusic.drive.model.AlbumMediaContainer: java.util.List Metadata
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey URL_WIKIPEDIA_ARTIST_SITE
com.umeng.analytics.pro.b$a: int a
com.umeng.commonsdk.statistics.proto.c: com.umeng.analytics.pro.bz f
com.alipay.sdk.m.j.c: com.alipay.sdk.m.j.c e
org.jaudiotagger.audio.asf.data.MetadataDescriptor: int languageIndex
org.simpleframework.xml.core.ElementMapLabel: boolean data
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MM_ORIGINAL_LYRICIST
com.umeng.commonsdk.utils.b$a: com.umeng.commonsdk.utils.b a
com.tencent.bugly.proguard.ao: boolean b
org.jaudiotagger.tag.id3.Id3FieldType: org.jaudiotagger.tag.id3.Id3FieldType[] $VALUES
com.caij.puremusic.db.model.FolderQueries$SelectByIdQuery: long id
com.umeng.analytics.pro.cb: byte h
com.umeng.commonsdk.vchannel.a: java.lang.String h
com.caij.puremusic.drive.model.PlayListSubsonicResponse: java.lang.String status
org.simpleframework.xml.core.DetailScanner: org.simpleframework.xml.Namespace namespace
org.jaudiotagger.audio.mp3.LameFrame: int LAME_HEADER_BUFFER_SIZE
org.jaudiotagger.tag.wav.WavTag$1: int[] $SwitchMap$org$jaudiotagger$audio$wav$WavOptions
org.jaudiotagger.utils.IntArrayList: int DEFAULT_GROW_AMOUNT
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier ILOC
com.caij.puremusic.drive.model.ArtistItem: java.lang.String SortName
com.caij.puremusic.db.model.SongEntityQueries$GetPlayListSongCountQuery$execute$1: com.caij.puremusic.db.model.SongEntityQueries$GetPlayListSongCountQuery this$0
org.jaudiotagger.tag.mp4.field.Mp4FieldType: org.jaudiotagger.tag.mp4.field.Mp4FieldType DURATION
org.jcodec.containers.mp4.boxes.AudioSampleEntry: int kAudioFormatFlagIsBigEndian
org.jaudiotagger.audio.real.RealChunk: java.lang.String RMF
com.umeng.analytics.process.UMProcessDBHelper$a: java.lang.String h
com.tencent.mm.opensdk.modelmsg.WXStateSceneDataObject: java.lang.String TAG
org.jaudiotagger.tag.id3.ID3v24PreferredFrameOrderComparator: java.util.List frameIdsInPreferredOrder
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MOOD_VALENCE
com.alipay.sdk.m.j.c: com.alipay.sdk.m.j.c i
org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistSaveOptions: org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistSaveOptions WRITE_ALBUMARTIST_AND_DELETE_JRIVER_ALBUMARTIST
com.caij.puremusic.drive.model.PlaylistMetadata: java.lang.String key
com.google.common.collect.AbstractIterator$State: com.google.common.collect.AbstractIterator$State[] $VALUES
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessView$Resp: java.lang.String businessType
org.simpleframework.xml.core.ParameterFactory$ParameterBuilder: java.lang.Class label
org.jaudiotagger.audio.ogg.util.VorbisSetupHeader: java.util.logging.Logger logger
org.simpleframework.xml.core.CompositeList: org.simpleframework.xml.core.CollectionFactory factory
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey ITUNES_SMPB
com.tencent.bugly.proguard.au: com.tencent.bugly.proguard.au a
org.jaudiotagger.audio.mp3.MP3AudioHeader: java.lang.String encoder
org.jaudiotagger.tag.id3.AbstractID3v2Tag$1: java.util.Map$Entry latestEntry
org.simpleframework.xml.core.CompositeValue: org.simpleframework.xml.strategy.Type type
org.simpleframework.xml.core.FieldContact: java.lang.String name
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script GOTHIC
com.umeng.commonsdk.statistics.c: com.umeng.commonsdk.statistics.idtracking.ImprintHandler$a i
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MOOD_VALENCE
com.umeng.commonsdk.internal.a: int C
com.caij.puremusic.db.model.Folder: java.lang.String tokenJson
com.google.android.exoplayer2.metadata.Metadata: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.Fragment: android.os.Bundle mArguments
com.google.android.gms.internal.play_billing.zzfb: int zze
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey URL_OFFICIAL_ARTIST_SITE
org.jaudiotagger.audio.ogg.util.OggPageHeader: int FIELD_PAGE_SEGMENTS_POS
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType UNKNOWN
org.jaudiotagger.audio.mp3.XingFrame: int frameCount
com.umeng.analytics.pro.u: java.lang.String b
com.tencent.bugly.proguard.af: android.content.Context b
org.jaudiotagger.tag.mp4.Mp4ContentTypeValue: org.jaudiotagger.tag.mp4.Mp4ContentTypeValue BOOKMARK
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country CAYMAN_ISLANDS
com.tencent.mm.opensdk.modelmsg.WXStateSceneDataObject$IWXStateJumpInfo: int WX_STATE_JUMP_TYPE_CHANNEL_PROFILE
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey WORK_PART_LEVEL4
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode INADEQUATE_SECURITY
io.ktor.client.HttpClient: int closed
org.jcodec.containers.mp4.boxes.AudioSampleEntry: int kAudioFormatFlagIsAlignedHigh
com.google.common.base.Predicates$ObjectPredicate: com.google.common.base.Predicates$ObjectPredicate ALWAYS_FALSE
com.umeng.analytics.b: java.lang.String q
com.umeng.commonsdk.service.UMGlobalContext: java.lang.String mChannel
com.tencent.bugly.proguard.be: java.util.List a
org.simpleframework.xml.core.InstanceFactory$ValueInstance: java.lang.Class type
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: android.content.Context context
org.jaudiotagger.tag.id3.ID3v24Frames: org.jaudiotagger.tag.id3.ID3v24Frames id3v24Frames
nl.adaptivity.xmlutil.SimpleNamespaceContext: nl.adaptivity.xmlutil.SimpleNamespaceContext$Companion Companion
com.umeng.analytics.pro.d: java.lang.String J
com.umeng.analytics.pro.bq: int b
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding[] $VALUES
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country LESOTHO
com.tencent.bugly.crashreport.crash.CrashDetailBean: int l
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MUSICBRAINZ_ARTISTID
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String sMeid
com.caij.puremusic.db.model.Album: long id
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey DISCNUMBER
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey DISC_TOTAL
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_RELEASETRACKID
com.umeng.analytics.pro.am: java.lang.String y
com.google.android.material.bottomsheet.BottomSheetBehavior: android.view.VelocityTracker velocityTracker
com.google.android.gms.internal.play_billing.zzex: com.google.android.gms.internal.play_billing.zzex zze
org.jcodec.containers.mp4.boxes.ColorExtension: java.lang.Byte colorRange
com.umeng.analytics.pro.j: java.lang.String R
com.caij.puremusic.db.model.AlbumQueries$AlbumQuery: com.caij.puremusic.db.model.AlbumQueries this$0
com.caij.puremusic.util.CoverLyricsType: com.caij.puremusic.util.CoverLyricsType OVER_COVER
org.jaudiotagger.audio.dsf.DsfChunkType: org.jaudiotagger.audio.dsf.DsfChunkType FORMAT
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MEDIA
com.umeng.commonsdk.statistics.UMErrorCode: int E_UM_BE_FILE_OVERSIZE
com.caij.puremusic.db.model.SongQueries$FirstSongByAlbumIdQuery$execute$1: com.caij.puremusic.db.model.SongQueries this$1
io.ktor.util.date.Month: io.ktor.util.date.Month JUNE
org.jaudiotagger.tag.mp4.Mp4TagFieldSubType: org.jaudiotagger.tag.mp4.Mp4TagFieldSubType DISC_NO
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier IREF
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a a
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: java.lang.String compression
androidx.fragment.app.Fragment: int INITIALIZING
com.umeng.analytics.pro.an: java.util.Map k
com.alipay.android.app.IAlixPay$Stub: int TRANSACTION_test
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MOOD_PARTY
com.google.android.material.bottomsheet.BottomSheetDragHandleView: java.lang.String clickToExpandActionLabel
org.repackage.com.miui.deviceid.BuildConfig: java.lang.String f
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier CONDUCTOR
org.simpleframework.xml.core.Session: java.util.Map map
org.jaudiotagger.audio.aiff.AiffFileReader: org.jaudiotagger.audio.aiff.AiffInfoReader ir
org.jaudiotagger.tag.id3.valuepair.TextEncoding: java.util.Map idToCharset
com.umeng.analytics.pro.r: int b
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier ESDS
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State INVISIBLE
org.simpleframework.xml.stream.StreamReader: javax.xml.stream.XMLEventReader reader
org.simpleframework.xml.core.ClassSchema: java.lang.Class type
com.caij.puremusic.drive.model.Auth2Token$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.jcodec.containers.mp4.boxes.AudioSampleEntry: int kAudioFormatFlagIsPacked
org.jaudiotagger.tag.reference.MusicalKey: org.jaudiotagger.tag.reference.MusicalKey NOTE_F
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_TITLE_REFINEMENT
com.umeng.commonsdk.UMConfigure$1: android.content.Context a
androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type LEFT
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String CHOIR
com.umeng.commonsdk.statistics.UMServerURL: java.lang.String ZCFG_PATH
com.umeng.analytics.pro.o: java.lang.String x
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy IDENTITY
com.thegrizzlylabs.sardineandroid.DavResource$DavProperties: java.util.List resourceTypes
com.caij.puremusic.network.model.LastFmAlbum$Album$Wiki: java.lang.String published
com.tencent.mmkv.MMKVLogLevel: com.tencent.mmkv.MMKVLogLevel LevelNone
com.umeng.analytics.AnalyticsConfig: boolean CLEAR_EKV_BL
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean hideable
org.jaudiotagger.audio.asf.data.StreamChunk: org.jaudiotagger.audio.asf.data.GUID type
com.tencent.bugly.proguard.ar: int f
org.jaudiotagger.tag.id3.AbstractID3v2Tag: int FIELD_TAG_SIZE_POS
com.tencent.bugly.proguard.y: java.lang.String c
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType STRING_TYPE
org.simpleframework.xml.core.ElementListLabel: org.simpleframework.xml.core.Decorator decorator
com.tencent.bugly.crashreport.crash.CrashDetailBean: java.lang.String A
com.alipay.apmobilesecuritysdk.b.a: com.alipay.apmobilesecuritysdk.b.a b
org.jaudiotagger.tag.id3.framebody.FrameBodyDeprecated: org.jaudiotagger.tag.id3.framebody.AbstractID3v2FrameBody originalFrameBody
com.umeng.analytics.pro.j: java.lang.String W
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies: com.google.common.util.concurrent.CycleDetectingLockFactory$Policies DISABLED
com.umeng.analytics.pro.ab: android.content.ServiceConnection h
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_URL_SOURCE_WEB
org.simpleframework.xml.stream.CamelCaseBuilder: boolean element
org.simpleframework.xml.core.InstanceFactory: org.simpleframework.xml.util.Cache cache
com.caij.puremusic.drive.model.AlbumResponse: com.caij.puremusic.drive.model.AlbumSubsonicResponse subsonicResponse
org.jaudiotagger.audio.asf.data.EncryptionChunk: java.lang.String licenseURL
org.jaudiotagger.tag.id3.ID3Unsynchronization: java.util.logging.Logger logger
org.jcodec.containers.mp4.boxes.Header: long size
org.simpleframework.xml.stream.Formatter: java.lang.String prolog
org.jaudiotagger.tag.id3.ID3v24Frame$StatusFlags: int MASK_FILE_ALTER_PRESERVATION
com.thegrizzlylabs.sardineandroid.DavResource$DavProperties: com.thegrizzlylabs.sardineandroid.DavResource this$0
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country ANTIGUA_AND_BARBUDA
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority DEFAULT
com.umeng.umzid.ZIDManager: boolean b
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier CCID
org.jaudiotagger.audio.aiff.chunk.FormatVersionChunk: org.jaudiotagger.audio.aiff.AiffAudioHeader aiffHeader
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey INITIAL_KEY
com.tencent.bugly.proguard.aa: boolean Q
com.caij.puremusic.db.model.SongQueries$songByPath$2: com.caij.puremusic.db.model.SongQueries$songByPath$2 INSTANCE
com.tencent.bugly.proguard.aj: int m
org.simpleframework.xml.core.CompositeValue: org.simpleframework.xml.core.Context context
org.jaudiotagger.audio.asf.data.MetadataContainer: org.jaudiotagger.audio.asf.data.MetadataContainer$DescriptorPointer perfPoint
com.tencent.bugly.R$string: int app_name
com.tencent.bugly.BuglyStrategy: java.lang.String e
org.jaudiotagger.audio.ogg.util.OggCRCFactory: boolean init
com.caij.puremusic.fragments.AlbumCoverStyle: com.caij.puremusic.fragments.AlbumCoverStyle[] $VALUES
com.google.android.material.bottomsheet.BottomSheetBehavior: int NO_MAX_SIZE
org.jaudiotagger.tag.id3.framebody.FrameBodyASPI: java.lang.String INDEXED_DATA_START
org.jaudiotagger.audio.flac.FlacTagWriter: java.util.logging.Logger logger
org.simpleframework.xml.core.ElementArrayLabel: org.simpleframework.xml.core.Introspector detail
com.alipay.android.phone.mrpc.core.q: com.alipay.android.phone.mrpc.core.l a
com.umeng.analytics.pro.o: java.lang.String q
com.alipay.android.phone.mrpc.core.aa: java.lang.String a
org.simpleframework.xml.core.ModelAssembler: org.simpleframework.xml.core.Detail detail
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_WORK_COMPOSITION_ID
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey CHOIR_SORT
com.tencent.bugly.proguard.s: long d
com.caij.puremusic.drive.model.BaiduDriveItem$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.jaudiotagger.tag.TagOptionSingleton: java.lang.String language
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier SINF
androidx.constraintlayout.core.SolverVariable$Type: androidx.constraintlayout.core.SolverVariable$Type UNRESTRICTED
com.thegrizzlylabs.sardineandroid.model.Ace: com.thegrizzlylabs.sardineandroid.model.Grant grant
com.umeng.commonsdk.statistics.proto.c$e: com.umeng.commonsdk.statistics.proto.c$e c
org.jaudiotagger.tag.wav.WavTag: boolean isExistingInfoTag
com.caij.puremusic.db.model.ServerSongCoverQueries$getBySource$2: com.caij.puremusic.db.model.ServerSongCoverQueries$getBySource$2 INSTANCE
com.tencent.mm.opensdk.modelmsg.WXEmojiObject: java.lang.String emojiPath
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: java.util.Map FIELDKEY_TYPE_MAP
com.umeng.analytics.pro.m$a: com.umeng.analytics.pro.m a
org.simpleframework.xml.core.PrimitiveArray: org.simpleframework.xml.strategy.Type type
com.umeng.commonsdk.statistics.UMServerURL: java.lang.String PATH_ANALYTICS
com.caij.puremusic.db.model.AlbumQueries$album$1: kotlin.jvm.functions.Function11 $mapper
com.tencent.mm.opensdk.openapi.MMSharedPreferences$REditor: boolean clear
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country CANADA
com.umeng.analytics.pro.d: java.lang.String e
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier STSD
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey ENSEMBLE_SORT
org.jaudiotagger.tag.mp4.Mp4TagFieldSubType: org.jaudiotagger.tag.mp4.Mp4TagFieldSubType ARTWORK
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: com.umeng.commonsdk.statistics.internal.d e
org.repackage.com.miui.deviceid.IdentifierManager: java.lang.Class c
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode$Companion Companion
com.caij.puremusic.model.Genre: android.os.Parcelable$Creator CREATOR
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportQuasiRealtime: long mReportInterval
org.simpleframework.xml.strategy.Reference: java.lang.Class type
androidx.constraintlayout.motion.widget.MotionLayout$TransitionState: androidx.constraintlayout.motion.widget.MotionLayout$TransitionState MOVING
com.umeng.commonsdk.statistics.proto.d: int b
org.jcodec.containers.mp4.MP4Util$Movie: org.jcodec.containers.mp4.boxes.FileTypeBox ftyp
androidx.constraintlayout.core.widgets.ConstraintAnchor$Type: androidx.constraintlayout.core.widgets.ConstraintAnchor$Type CENTER_Y
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: boolean isValid
com.umeng.commonsdk.statistics.idtracking.e: long a
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey TRACK_TOTAL
com.caij.puremusic.drive.model.AlbumItem: java.lang.String ParentBackdropItemId
androidx.fragment.app.Fragment: int ACTIVITY_CREATED
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_TAGGING_TIME
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat DIFFERENCE
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey DJMIXER
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country CHRISTMAS_ISLAND
com.alipay.sdk.m.u.g: com.alipay.sdk.m.u.g i
com.tencent.mm.opensdk.modelmsg.SendAuth$Resp: int LENGTH_LIMIT
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers
org.jaudiotagger.tag.TagOptionSingleton: java.util.HashMap tagOptionTable
com.caij.puremusic.drive.model.ArtistItem: java.lang.String ServerId
org.simpleframework.xml.core.Support: org.simpleframework.xml.filter.Filter filter
com.caij.puremusic.drive.model.SubsonicResponse$$serializer: com.caij.puremusic.drive.model.SubsonicResponse$$serializer INSTANCE
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country GHANA
com.caij.puremusic.db.model.SongQueries$SongsByTitleQuery: com.caij.puremusic.db.model.SongQueries this$0
com.tencent.mm.opensdk.modelmsg.SendAuth$Resp: boolean authResult
com.umeng.analytics.Gender: int value
org.simpleframework.xml.transform.DateTransform: org.simpleframework.xml.transform.DateFactory factory
com.caij.puremusic.db.model.ServerAudioFormat: long sourceId
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_PLAYLIST_DELAY
com.caij.puremusic.db.model.ServerLyricsQueries$getById$1: kotlin.jvm.functions.Function3 $mapper
com.umeng.commonsdk.statistics.internal.a$a: com.umeng.commonsdk.statistics.internal.a a
org.jaudiotagger.tag.id3.framebody.FrameBodyAPIC: java.lang.String IMAGE_IS_URL
nl.adaptivity.xmlutil.core.KtXmlWriter$EscapeMode: nl.adaptivity.xmlutil.core.KtXmlWriter$EscapeMode ATTRCONTENTQUOT
com.google.common.base.AbstractIterator$State: com.google.common.base.AbstractIterator$State READY
com.umeng.commonsdk.debug.UMLogCommon: java.lang.String SC_10002
com.umeng.commonsdk.framework.UMWorkDispatch: android.os.HandlerThread mNetTask
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdQuery: com.caij.puremusic.db.model.SongQueries this$0
org.jaudiotagger.logging.PlainTextTagDisplayFormatter: java.lang.StringBuffer indent
org.simpleframework.xml.stream.Builder: org.simpleframework.xml.util.Cache elements
com.alipay.android.phone.mrpc.core.y: com.alipay.android.phone.mrpc.core.g a
org.jaudiotagger.audio.wav.chunk.WavListChunk: boolean isValid
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$clear$1: com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$clear$1 INSTANCE
org.jcodec.containers.mp4.boxes.EsdsBox$Descriptor: int size
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzx
com.umeng.umzid.Spy: boolean initSuccess
com.umeng.commonsdk.statistics.common.DeviceTypeEnum: com.umeng.commonsdk.statistics.common.DeviceTypeEnum IMEI
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int SYNC_BYTE2
com.caij.puremusic.db.model.ServerSongCoverQueries$GetByIdQuery$execute$1: com.caij.puremusic.db.model.ServerSongCoverQueries$GetByIdQuery this$0
com.umeng.commonsdk.vchannel.a: java.lang.String e
org.jcodec.containers.mp4.boxes.CleanApertureExtension: int horizOffsetNumerator
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script SYRIAC_EASTERN_VARIANT
org.simpleframework.xml.core.Signature: org.simpleframework.xml.core.ParameterMap parameters
org.simpleframework.xml.core.ElementArrayLabel: boolean required
com.caij.puremusic.db.model.Album$Adapter: app.cash.sqldelight.ColumnAdapter sourceTypeAdapter
com.google.android.material.internal.ParcelableSparseArray: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.id3.ID3v24Tag: java.lang.String TYPE_IMAGESIZERESTRICTION
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportQuasiRealtime: long DEFAULT_REPORT_INTERVAL
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_GIFTCARD
com.tencent.mm.opensdk.modelmsg.WXDesignerSharedObject: java.lang.String thumburl
com.tencent.mm.opensdk.modelmsg.WXVideoObject: java.lang.String TAG
com.umeng.commonsdk.internal.utils.k: java.lang.String b
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MOOD_AROUSAL
org.jaudiotagger.tag.mp4.Mp4NonStandardFieldKey: java.lang.String fieldName
com.umeng.analytics.pro.d: java.lang.String[] aF
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country KENYA
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$PostorderEnumeration: org.jaudiotagger.utils.tree.TreeNode root
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_MOVEMENT_NO
com.caij.puremusic.helper.BackupContent: com.caij.puremusic.helper.BackupContent[] $VALUES
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_WORK_PART_LEVEL6_TYPE
com.tencent.bugly.proguard.bu: java.lang.String e
org.jcodec.containers.mp4.boxes.AudioSampleEntry: int vendor
com.caij.puremusic.db.model.ArtistQueries$artistByName$1: kotlin.jvm.functions.Function2 $mapper
org.jaudiotagger.tag.id3.ID3v23Tag: int TAG_EXT_HEADER_DATA_LENGTH
com.caij.puremusic.drive.model.DavResource: com.caij.puremusic.drive.model.DavProperties props
com.google.android.material.bottomsheet.BottomSheetBehavior: int maxHeight
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MUSICBRAINZ_WORK
com.caij.puremusic.drive.model.ParentReference: java.lang.String path
com.caij.puremusic.drive.model.DriveFile: long updateTime
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int LAYER_I_SLOT_SIZE
org.simpleframework.xml.core.ElementParameter: org.simpleframework.xml.core.Expression expression
org.jaudiotagger.tag.mp4.Mp4RatingValue: org.jaudiotagger.tag.mp4.Mp4RatingValue[] $VALUES
com.caij.puremusic.model.lyrics.SynchronizedLyricsLRC: java.util.regex.Pattern LRC_TIME_PATTERN
org.jaudiotagger.tag.aiff.AiffTag: boolean isExistingId3Tag
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: boolean fitToContents
com.umeng.commonsdk.internal.utils.d$a: java.lang.String e
com.tencent.bugly.crashreport.crash.CrashDetailBean: long D
com.tencent.mm.opensdk.modelbiz.WXChannelOpenProfile$Req: int LENGTH_LIMIT
org.jaudiotagger.audio.mp3.MP3AudioHeader: java.util.logging.Logger logger
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey SUBTITLE
com.umeng.analytics.pro.d: java.lang.String V
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_WORK_COMPOSITION_ID
com.caij.puremusic.db.model.SongQueries$GetAlbumSongCountQuery$execute$1: com.caij.puremusic.db.model.SongQueries$GetAlbumSongCountQuery this$0
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey ORCHESTRA_SORT
com.caij.puremusic.drive.model.PlayListSubsonicResponse: java.lang.String version
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_TRDA
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: int FLAG_BASE_DATA_OFFSET
com.caij.puremusic.db.model.SongEntityQueries$IsSongExistsInPlaylistQuery: com.caij.puremusic.db.model.SongEntityQueries this$0
org.jaudiotagger.tag.id3.ID3v23Tag: boolean extended
com.caij.puremusic.model.CategoryInfo$Category: com.caij.puremusic.model.CategoryInfo$Category Playlists
com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport: java.util.logging.Logger log
com.umeng.analytics.pro.l: android.app.Application$ActivityLifecycleCallbacks g
org.jcodec.containers.mp4.boxes.ProductionApertureBox: java.lang.String PROF
com.caij.puremusic.drive.model.SongItem: java.lang.String MediaType
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int SCALE_BY_THOUSAND
com.umeng.analytics.pro.am: java.lang.String aK
com.umeng.commonsdk.statistics.proto.d: com.umeng.analytics.pro.bz f
com.umeng.analytics.AnalyticsConfig: long kContinueSessionMillis
org.jaudiotagger.audio.wav.WavTagReader: java.util.logging.Logger logger
com.tencent.bugly.proguard.av: java.lang.String h
com.tencent.mm.opensdk.modelmsg.WXVideoFileObject: int WXVideoFileShareSceneCommon
com.umeng.commonsdk.config.d$d: com.umeng.commonsdk.config.d$d[] m
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country SINGAPORE
org.json.alipay.b: java.lang.Object a
com.tencent.mm.opensdk.modelbiz.WXChannelOpenLive$Resp: java.lang.String extMsg
com.umeng.commonsdk.statistics.common.ReportPolicy: int SMART_POLICY
org.simpleframework.xml.stream.OutputAttribute: java.lang.String reference
com.tencent.bugly.proguard.aj: com.tencent.bugly.proguard.aa i
org.simpleframework.xml.core.Caller: org.simpleframework.xml.core.Function resolve
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: java.lang.String code
org.simpleframework.xml.core.CompositeMapUnion: org.simpleframework.xml.stream.Style style
org.jaudiotagger.audio.wav.WavSubFormat: int code
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int BYTE_2
org.simpleframework.xml.core.CacheParameter: java.lang.String name
com.caij.puremusic.db.model.HistoryEntity: long timePlayed
com.umeng.umzid.ZIDManager: boolean a
com.caij.puremusic.db.model.SongQueries$songsByInfo$1: com.caij.puremusic.db.model.SongQueries this$0
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey CUSTOM2
com.umeng.analytics.filter.b: java.lang.Object b
org.jaudiotagger.tag.id3.ID3v24Tag: byte textFieldSizeRestriction
com.tencent.mm.opensdk.modelmsg.WXWebpageObject: java.util.HashMap extraInfoMap
com.caij.puremusic.drive.model.PlexSongsResponse$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.umeng.commonsdk.statistics.SdkVersion: int SDK_TYPE
com.tencent.mm.opensdk.constants.ConstantsAPI$LaunchApplication: int LAUNCH_MODE_USING_PENDING_INTENT
com.thegrizzlylabs.sardineandroid.DavResource$DavProperties: java.lang.String contentType
org.jcodec.containers.mp4.boxes.TrackExtendsBox: int defaultSampleDuration
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier ODAF
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country MACEDONIA
com.umeng.commonsdk.BuildConfig: java.lang.String APPLICATION_ID
com.umeng.commonsdk.statistics.common.MLog: int LEVEL_INFO
com.tencent.bugly.proguard.aa: android.content.SharedPreferences P
org.jcodec.containers.mp4.boxes.ReverseDnsBox$RdnsNameBox: java.lang.String name
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey CUSTOM3
org.simpleframework.xml.core.ElementMapParameter: java.lang.Object key
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey ISRC
org.simpleframework.xml.stream.PullReader: org.simpleframework.xml.stream.EventNode peek
org.jaudiotagger.audio.asf.data.ChunkContainer: java.util.Map chunkTable
com.caij.puremusic.model.Data: java.lang.String picture
com.umeng.commonsdk.statistics.AnalyticsConstants: java.lang.String SDK_TYPE
com.caij.puremusic.drive.model.PlayListItem: java.lang.String Name
org.simpleframework.xml.core.ModelSection: org.simpleframework.xml.core.ModelMap models
org.simpleframework.xml.core.ElementUnionParameter: java.lang.Object key
org.simpleframework.xml.transform.ArrayTransform: org.simpleframework.xml.transform.Transform delegate
com.umeng.commonsdk.statistics.proto.Response: com.umeng.analytics.pro.bp MSG_FIELD_DESC
com.umeng.analytics.b: java.lang.String w
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: java.util.logging.Logger logger
com.google.android.material.bottomsheet.BottomSheetBehavior: int peekHeightMin
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_SET_SUBTITLE
com.thegrizzlylabs.sardineandroid.model.SyncCollection: com.thegrizzlylabs.sardineandroid.model.Prop prop
com.umeng.commonsdk.utils.d: java.lang.String P
org.jcodec.containers.mp4.boxes.AliasBox$ExtraField: int len
org.simpleframework.xml.core.AttributeLabel: org.simpleframework.xml.core.Decorator decorator
com.tencent.mm.opensdk.constants.ConstantsAPI$OpenWebviewType: int TYPE_NONTAX_PAY
com.umeng.analytics.filter.EventList: java.lang.String mEventListName
com.caij.puremusic.drive.model.Auth2Token: java.lang.String access_token
com.tencent.bugly.proguard.ao: boolean g
com.caij.puremusic.db.model.AlbumQueries$albums$2: com.caij.puremusic.db.model.AlbumQueries$albums$2 INSTANCE
com.alipay.android.phone.mrpc.core.a.e: int c
com.tencent.mm.opensdk.constants.Build: int MESSAGE_ACTION_SUPPPORTED_SDK_INT
org.jaudiotagger.audio.asf.data.MetadataDescriptor: int MAX_LANG_INDEX
com.caij.vip.GoodOrder: java.lang.String name
com.alipay.android.app.IAlixPay$Stub: int TRANSACTION_pay02
com.google.common.hash.Hashing$ChecksumType: com.google.common.hash.HashFunction hashFunction
com.tencent.mm.opensdk.modelmsg.WXMusicVideoObject: java.lang.String musicOperationUrl
com.umeng.analytics.pro.am: java.lang.String bg
org.jaudiotagger.audio.asf.data.StreamChunk: boolean contentEncrypted
org.simpleframework.xml.stream.Formatter: char[] OPEN
com.umeng.analytics.pro.u: java.lang.String a
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_WORK_PART_LEVEL6
com.caij.vip.PayInfo: java.lang.String title
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: java.lang.String MM_CUSTOM4
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier MOOV
com.umeng.analytics.pro.l: org.json.JSONArray i
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype IDEN
com.tencent.mm.opensdk.modelbiz.WXLaunchWxaRedirectingPage$Resp: java.lang.String TAG
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP4_NO_GENREID_FOR_GENRE
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$BreadthFirstEnumeration: org.jaudiotagger.utils.tree.DefaultMutableTreeNode$BreadthFirstEnumeration$Queue queue
androidx.fragment.app.Fragment: int mFragmentId
com.umeng.commonsdk.vchannel.Sender: long INTERVAL_THRESHOLD
org.jcodec.containers.mp4.boxes.AliasBox: int volumeAttributes
org.jaudiotagger.tag.id3.AbstractID3Tag: java.lang.String TAG_RELEASE
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey URL_OFFICIAL_ARTIST_SITE
org.simpleframework.xml.core.DefaultDetail: org.simpleframework.xml.DefaultType access
okhttp3.TlsVersion: okhttp3.TlsVersion[] $VALUES
org.jaudiotagger.audio.wav.WavSaveOptions: org.jaudiotagger.audio.wav.WavSaveOptions SAVE_ACTIVE
com.umeng.analytics.pro.d: java.lang.String ai
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country PAKISTAN
org.repackage.com.vivo.identifier.BuildConfig: java.lang.String c
com.caij.puremusic.db.model.PlaybackSongQueries$insert$1: com.caij.puremusic.db.model.PlaybackSong $PlaybackSong
com.caij.puremusic.db.model.Song: long size
com.alipay.tscenter.biz.rpc.vkeydfp.request.DeviceDataReportRequest: java.lang.String priApdid
org.simpleframework.xml.transform.StringArrayTransform: java.lang.String token
com.umeng.commonsdk.vchannel.b: java.lang.String e
org.simpleframework.xml.core.StructureBuilder: org.simpleframework.xml.core.InstantiatorBuilder resolver
com.alipay.android.phone.mrpc.core.x: com.alipay.android.phone.mrpc.core.g a
com.umeng.analytics.pro.e$d$b: java.lang.String e
org.simpleframework.xml.core.Support: org.simpleframework.xml.core.DetailExtractor details
org.simpleframework.xml.core.CompositeUnion: org.simpleframework.xml.strategy.Type type
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat COLOR_BURN
com.tencent.bugly.proguard.aa: java.lang.String Z
org.simpleframework.xml.core.ElementListParameter: org.simpleframework.xml.core.Expression expression
org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId: android.content.Context a
com.umeng.analytics.pro.a$a: int a
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MOOD
org.simpleframework.xml.core.AnnotationHandler: java.lang.String STRING
com.caij.puremusic.db.model.Song$Adapter: app.cash.sqldelight.ColumnAdapter yearAdapter
org.simpleframework.xml.core.PrimitiveKey: org.simpleframework.xml.core.Context context
org.simpleframework.xml.core.ElementArrayParameter: java.lang.String path
com.umeng.analytics.pro.j: java.lang.String Y
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String albumId
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey URL_PROMOTIONAL_SITE
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode PUBLICATION
org.jcodec.containers.mp4.boxes.AliasBox: int DriverName
com.umeng.commonsdk.statistics.proto.b: java.util.Map d
com.umeng.commonsdk.framework.UMWorkDispatch: java.lang.Object mSenderInitLock
com.umeng.commonsdk.statistics.common.DeviceConfig: boolean hasReadSerialNo
com.caij.puremusic.network.model.LastFmTrack$Track$Album: com.caij.puremusic.network.model.LastFmTrack$Track$Album$Attr attr
org.jaudiotagger.audio.asf.data.FileHeader: long uncompressedFrameSize
com.caij.puremusic.util.theme.ThemeMode: com.caij.puremusic.util.theme.ThemeMode AUTO
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey PART_TYPE
com.alipay.apmobilesecuritysdk.e.i: java.lang.String d
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_HANDLE_SCAN_RESULT
com.tencent.bugly.proguard.aa: java.util.List v
com.caij.puremusic.drive.model.GoogleDriveFileResponse: java.util.List files
com.caij.puremusic.drive.model.PlayListsSubsonicResponse$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.umeng.commonsdk.statistics.b: java.lang.String g
org.jaudiotagger.audio.SupportedFileFormat: org.jaudiotagger.audio.SupportedFileFormat M4P
com.tencent.bugly.proguard.w: com.tencent.bugly.proguard.w b
com.tencent.mm.opensdk.modelmsg.WXLiteAppObject: java.lang.String userName
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: org.jaudiotagger.audio.aiff.chunk.AiffCompressionType NONE
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey RELEASECOUNTRY
com.caij.puremusic.drive.model.SubsonicPlaylist$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICIP_ID
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: java.lang.String IMAGE_IS_URL
org.jcodec.containers.mp4.boxes.AudioSampleEntry: int bytesPerFrame
org.simpleframework.xml.stream.Formatter$Tag: org.simpleframework.xml.stream.Formatter$Tag[] $VALUES
com.umeng.analytics.pro.d: java.lang.String U
com.google.android.material.button.MaterialButton$SavedState: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.asf.AsfTag$AsfFieldIterator: boolean $assertionsDisabled
com.umeng.analytics.pro.e$d$a: java.lang.String i
com.tencent.mm.opensdk.modelmsg.WXAppExtendObject: int EXTINFO_LENGTH_LIMIT
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: int audioSampleRate
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdQuery: long albumId
org.jaudiotagger.audio.generic.AudioFileWriter: int FILE_NAME_TOO_LONG_SAFE_LIMIT
com.umeng.analytics.pro.am: java.lang.String aa
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey WORK
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script ORKHON
io.ktor.utils.io.ByteBufferChannel: long totalBytesWritten
com.umeng.analytics.pro.i: java.util.List j
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey WORK
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script MANICHAEAN
org.jaudiotagger.tag.mp4.Mp4TagFieldSubType: org.jaudiotagger.tag.mp4.Mp4TagFieldSubType[] $VALUES
org.jcodec.containers.mp4.boxes.TimecodeSampleEntry: int flags
org.jaudiotagger.tag.id3.ID3v1Iterator: int YEAR
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script LATIN
org.simpleframework.xml.transform.DateFactory: java.lang.reflect.Constructor factory
com.caij.puremusic.db.model.AlbumQueries$SearchAlbumsByNameQuery: com.caij.puremusic.db.model.AlbumQueries this$0
androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType START
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] $VALUES
com.tencent.mm.opensdk.modelmsg.WXMusicObject: java.lang.String musicDataUrl
io.ktor.utils.io.internal.RingBufferCapacity: int _availableForRead$internal
org.jcodec.containers.mp4.boxes.TrunBox: int SAMPLE_SIZE_AVAILABLE
org.repackage.com.zui.deviceidservice.IDeviceidInterface$Stub: int a
com.umeng.analytics.pro.am: java.lang.String H
org.jaudiotagger.audio.wav.WavChunkType: java.util.Map CODE_TYPE_MAP
org.simpleframework.xml.core.CacheParameter: org.simpleframework.xml.core.Expression expression
org.simpleframework.xml.core.AttributeLabel: org.simpleframework.xml.core.Expression path
com.caij.puremusic.network.model.LastFmArtist: com.caij.puremusic.network.model.LastFmArtist$Artist artist
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey KEY
okhttp3.Protocol: okhttp3.Protocol H2_PRIOR_KNOWLEDGE
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier AUTH
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdTypeCountQuery$execute$1: com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdTypeCountQuery this$0
com.umeng.umzid.ZIDManager$a: android.content.Context a
com.caij.vip.ClientWeixinPayResponse: java.lang.String prepayid
org.jcodec.containers.mp4.boxes.TimecodeMediaInfoBox: java.lang.String name
org.jaudiotagger.audio.flac.FlacStreamReader: int startOfFlacInFile
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey LANGUAGE
com.caij.puremusic.helper.BackupContent: com.caij.puremusic.helper.BackupContent PLAYLISTS
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey TIMBRE
org.simpleframework.xml.core.Support: org.simpleframework.xml.core.DetailExtractor defaults
org.simpleframework.xml.transform.DefaultMatcher: org.simpleframework.xml.transform.Matcher primitive
com.google.android.exoplayer2.metadata.id3.ApicFrame: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country ESTONIA
com.tencent.bugly.proguard.ao: java.text.SimpleDateFormat c
com.tencent.bugly.proguard.u: java.lang.String d
okhttp3.Protocol: okhttp3.Protocol SPDY_3
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_FILE_TYPE
org.simpleframework.xml.stream.StreamReader$Entry: javax.xml.stream.events.Attribute entry
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey ENSEMBLE
com.caij.puremusic.drive.model.ArtistItem: com.caij.puremusic.drive.model.ArtistItem$Companion Companion
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: com.umeng.commonsdk.statistics.idtracking.ImprintHandler j
org.jaudiotagger.tag.reference.Tagger: org.jaudiotagger.tag.reference.Tagger MEDIAPLAYER
com.umeng.analytics.pro.r: int d
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country MALTA
org.simpleframework.xml.stream.OutputAttribute: org.simpleframework.xml.stream.NamespaceMap scope
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String IS_SOUNDTRACK
com.umeng.commonsdk.UMConfigureImpl: java.util.concurrent.ScheduledExecutorService f
com.umeng.commonsdk.utils.d: java.lang.String M
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script SIGNWRITING
com.caij.puremusic.drive.model.BaiduDriveItem: long fs_id
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey COUNTRY
com.tencent.mm.opensdk.constants.ConstantsAPI$Token: java.lang.String WX_TOKEN_PLATFORMID_KEY
com.caij.puremusic.drive.model.DropboxDriveItem: java.lang.String path_display
org.repackage.com.vivo.identifier.IdentifierIdClient: java.lang.String f
org.jaudiotagger.audio.dsf.DsfChunkType: java.lang.String code
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: boolean i
org.simpleframework.xml.convert.ScannerBuilder$Entry: java.lang.Class root
org.jaudiotagger.tag.TagOptionSingleton: long writeChunkSize
org.jaudiotagger.tag.id3.ID3v24Frame: int FRAME_ENCRYPTION_INDICATOR_SIZE
com.afollestad.materialdialogs.WhichButton: com.afollestad.materialdialogs.WhichButton POSITIVE
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: int wxSdkVersion
com.google.android.gms.internal.play_billing.zzfj: int zzg
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportByInterval: long MAX_REPORT_INTERVAL
com.caij.puremusic.network.model.LastFmAlbum$Album$Image: java.lang.String Text
com.bumptech.glide.load.ImageHeaderParser$ImageType: boolean hasAlpha
com.caij.puremusic.drive.model.PlayListItem: java.lang.String Id
com.tencent.mm.opensdk.channel.a.a$a: java.lang.String b
org.simpleframework.xml.stream.HyphenBuilder$Parser: org.simpleframework.xml.stream.HyphenBuilder this$0
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey CDDB_IDS
org.jaudiotagger.tag.id3.framebody.FrameBodyTDAT: boolean monthOnly
org.jcodec.containers.mp4.boxes.AudioSampleEntry: int samplesPerPkt
com.alipay.android.phone.mrpc.core.l: long g
com.caij.puremusic.network.model.LastFmAlbum$Album: com.caij.puremusic.network.model.LastFmAlbum$Album$Tags tags
com.afollestad.materialdialogs.LayoutMode: com.afollestad.materialdialogs.LayoutMode MATCH_PARENT
com.umeng.analytics.pro.bv: int c
com.umeng.commonsdk.internal.a: int p
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL1
com.alipay.sdk.app.EnvUtils$EnvEnum: com.alipay.sdk.app.EnvUtils$EnvEnum SANDBOX
org.jaudiotagger.tag.lyrics3.Lyrics3v1: java.lang.String lyric
org.jaudiotagger.audio.ogg.util.OggPageHeader: int FIELD_ABSOLUTE_GRANULE_LENGTH
org.simpleframework.xml.core.MethodContact: java.lang.Class owner
org.simpleframework.xml.core.FieldScanner: org.simpleframework.xml.core.AnnotationFactory factory
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey IS_CLASSICAL
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: java.lang.String dataType
com.caij.puremusic.db.model.ArtistQueries$artistById$2: com.caij.puremusic.db.model.ArtistQueries$artistById$2 INSTANCE
org.jcodec.containers.mp4.boxes.IListBox: org.jcodec.containers.mp4.IBoxFactory factory
com.tencent.bugly.proguard.aa: long m
com.umeng.analytics.pro.am: java.lang.String K
org.jaudiotagger.tag.id3.AbstractID3v2Tag: int invalidFrames
com.caij.puremusic.db.model.ServerAudioFormat: java.lang.String mimeType
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a e
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int EMPHASIS_CCITT
com.umeng.commonsdk.statistics.internal.StatTracer: int mFailedRequest
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL3
com.umeng.commonsdk.statistics.noise.ImLatent: long mElapsed
org.simpleframework.xml.core.InstanceFactory$ValueInstance: org.simpleframework.xml.core.InstanceFactory this$0
kotlin.time.DurationUnit: kotlin.time.DurationUnit SECONDS
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country MONTSERRAT
androidx.lifecycle.ProcessLifecycleOwner$3$1: androidx.lifecycle.ProcessLifecycleOwner$3 this$1
org.jcodec.containers.mp4.boxes.TrackHeaderBox: float volume
com.alipay.android.phone.mrpc.core.u: byte[] a
org.jaudiotagger.audio.asf.data.ContentDescription: java.lang.String KEY_AUTHOR
com.alipay.android.phone.mrpc.core.HttpException: int NETWORK_SSL_EXCEPTION
com.umeng.analytics.pro.au: int h
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType WIFI
org.jaudiotagger.tag.mp4.field.Mp4FieldType: org.jaudiotagger.tag.mp4.field.Mp4FieldType IMPLICIT
com.caij.puremusic.drive.model.PlexArtistsResponse: com.caij.puremusic.drive.model.AMediaContainer MediaContainer
com.tencent.mm.opensdk.modelmsg.WXWebpageObject: java.lang.String extInfo
org.jaudiotagger.logging.XMLTagDisplayFormatter: org.jaudiotagger.logging.XMLTagDisplayFormatter formatter
org.jaudiotagger.audio.mp4.ChunkWriter: byte[] buf
com.umeng.analytics.b: com.umeng.analytics.filter.b x
com.umeng.commonsdk.internal.utils.k: java.lang.String d
org.simpleframework.xml.transform.ClassTransform: java.lang.String CHARACTER
org.jaudiotagger.audio.wav.WavInfoReader$1: int[] $SwitchMap$org$jaudiotagger$audio$wav$WavChunkType
org.simpleframework.xml.strategy.VisitorStrategy: org.simpleframework.xml.strategy.Strategy strategy
org.jaudiotagger.audio.ogg.util.OggPageHeader: int FIELD_HEADER_TYPE_FLAG_LENGTH
com.tencent.mm.opensdk.modelmsg.WXMusicVipInfo: java.lang.String musicId
com.caij.puremusic.db.model.PlaybackSong: long songId
org.jcodec.containers.mp4.boxes.NodeBox: java.util.List boxes
com.tencent.bugly.proguard.aa: java.util.Map W
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier HMHD
com.caij.puremusic.drive.model.ArtistItem: java.lang.String Type
com.caij.puremusic.db.model.PlaylistEntityQueries$CheckPlaylistExistsQuery$execute$1: com.caij.puremusic.db.model.PlaylistEntityQueries$CheckPlaylistExistsQuery this$0
com.umeng.analytics.pro.y: com.umeng.analytics.pro.w a
org.jcodec.containers.mp4.boxes.TrunBox: int[] sampleFlags
com.caij.puremusic.drive.model.Part: com.caij.puremusic.drive.model.Part$Companion Companion
com.caij.puremusic.db.model.SongQueries$SearchSongsByTitleQuery$execute$1: com.caij.puremusic.db.model.SongQueries$SearchSongsByTitleQuery this$0
com.umeng.analytics.AnalyticsConfig: java.lang.String h
org.jcodec.containers.mp4.boxes.MediaHeaderBox: int language
org.koin.core.logger.Level: org.koin.core.logger.Level ERROR
org.jaudiotagger.audio.mp4.Chunk: int sampleSize
org.jcodec.containers.mp4.boxes.ChunkOffsets64Box: long[] chunkOffsets
org.jaudiotagger.tag.datatype.Pair: java.lang.Object key
com.caij.puremusic.drive.model.OneDriveItem: java.lang.String name
org.jaudiotagger.tag.options.PadNumberOption: org.jaudiotagger.tag.options.PadNumberOption[] $VALUES
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script EGYPTIAN_HIEROGLYPHS
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP3_RECALCULATED_POSSIBLE_START_OF_MP3_AUDIO
com.umeng.analytics.pro.d: java.lang.String ac
org.jaudiotagger.tag.mp4.field.Mp4TagByteField: java.lang.String FALSE_VALUE
com.alipay.apmobilesecuritysdk.a.a: android.content.Context a
com.tencent.mm.opensdk.modelbiz.WXChannelBaseJumpInfo: java.lang.String extra
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country MONGOLIA
com.umeng.commonsdk.utils.d: java.lang.String p
org.simpleframework.xml.core.DetailScanner: org.simpleframework.xml.DefaultType override
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String sImsi
com.umeng.analytics.pro.f: java.lang.String a
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_WORK_PART_LEVEL3_TYPE
com.caij.puremusic.drive.model.JellyfinLoginResponse: com.caij.puremusic.drive.model.JellyfinLoginResponse$Companion Companion
org.jaudiotagger.tag.flac.FlacTag: org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag tag
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$PathBetweenNodesEnumeration: org.jaudiotagger.utils.tree.DefaultMutableTreeNode this$0
com.tencent.bugly.crashreport.biz.UserInfoBean: long g
com.umeng.commonsdk.internal.utils.d$a: java.lang.String d
com.umeng.commonsdk.internal.c: java.lang.String h
org.jaudiotagger.audio.flac.FlacStreamReader: java.nio.channels.FileChannel fc
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey WORK
androidx.fragment.app.DialogFragment: android.os.Handler mHandler
com.alipay.apmobilesecuritysdk.face.TMNTokenClient: com.alipay.apmobilesecuritysdk.face.TMNTokenClient a
com.umeng.analytics.pro.am: java.lang.String n
com.caij.puremusic.db.model.SongQueries$songsDateLastDesc$1: kotlin.jvm.functions.Function18 $mapper
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script REJANG
org.jaudiotagger.audio.ogg.util.OggPageHeader: int pageLength
com.tencent.mm.opensdk.modelmsg.WXEnterpriseCardObject: java.lang.String TAG
org.simpleframework.xml.core.PrimitiveList: org.simpleframework.xml.strategy.Type entry
com.tencent.mm.opensdk.diffdev.a.c: java.lang.String b
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP4_FILE_HAS_NO_METADATA
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_WORK_PART_LEVEL4_ID
org.simpleframework.xml.core.ElementParameter: org.simpleframework.xml.core.Label label
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_WORK_PART_LEVEL2_ID
org.jaudiotagger.tag.wav.WavTag: org.jaudiotagger.tag.wav.WavInfoTag infoTag
com.tencent.bugly.proguard.ao: java.lang.String j
org.simpleframework.xml.core.PrimitiveValue: org.simpleframework.xml.core.PrimitiveFactory factory
com.umeng.commonsdk.statistics.proto.e: com.umeng.analytics.pro.bp h
kotlin.collections.State: kotlin.collections.State Ready
com.thegrizzlylabs.sardineandroid.model.Propertybehavior: com.thegrizzlylabs.sardineandroid.model.Omit omit
com.caij.puremusic.drive.model.JellyfinArtistResponse: com.caij.puremusic.drive.model.JellyfinArtistResponse$Companion Companion
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MOOD
com.umeng.commonsdk.statistics.proto.a: java.util.Map e
org.simpleframework.xml.util.WeakCache$SegmentList: org.simpleframework.xml.util.WeakCache this$0
com.tencent.bugly.crashreport.crash.h5.H5JavaScriptInterface: java.lang.Thread c
org.koin.core.logger.Level: org.koin.core.logger.Level INFO
com.umeng.commonsdk.internal.utils.j: java.lang.String b
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind PCM_BIG_ENDIAN_AUDIO
com.caij.puremusic.db.model.ArtistQueries$ArtistByIdQuery: long id
org.jaudiotagger.audio.wav.chunk.WavInfoChunk: java.lang.String loggingName
com.google.android.material.search.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.preference.EditTextPreference$SavedState: android.os.Parcelable$Creator CREATOR
androidx.window.core.SpecificationComputer$VerificationMode: androidx.window.core.SpecificationComputer$VerificationMode LOG
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgramWithToken$Req: java.lang.String token
com.tencent.mm.opensdk.modelmsg.WXEmojiObject: int CONTENT_LENGTH_LIMIT
com.tencent.bugly.proguard.aa: java.util.HashMap K
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage GENERAL_SET_CREATION_TIME_FAILED
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MOOD_INSTRUMENTAL
com.umeng.commonsdk.UMConfigure$2: android.content.Context a
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country NIGER
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey PERFORMER_NAME_SORT
org.jaudiotagger.utils.DirectByteBufferUtils: org.jaudiotagger.utils.DirectByteBufferUtils$ReleaseStrategy releaseStrategy
org.jaudiotagger.audio.aiff.AiffTagFieldKey: java.lang.String fieldName
com.umeng.analytics.pro.s: int c
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey ORIGINAL_ALBUM
com.google.android.material.bottomsheet.BottomSheetBehavior$3: boolean val$shouldHandleGestureInsets
org.simpleframework.xml.core.Support: org.simpleframework.xml.core.InstanceFactory instances
com.umeng.analytics.pro.am: java.lang.String aG
org.jaudiotagger.FileConstants: int BIT3
com.umeng.commonsdk.UMConfigure$BS_TYPE: com.umeng.commonsdk.UMConfigure$BS_TYPE APM
com.umeng.commonsdk.statistics.common.DeviceConfig: boolean hasReadImsi
org.jaudiotagger.audio.wav.WavSaveOrder: org.jaudiotagger.audio.wav.WavSaveOrder ID3_THEN_INFO
org.simpleframework.xml.core.ElementMapUnionLabel: org.simpleframework.xml.core.Label label
com.umeng.analytics.pro.e$b$b: java.lang.String a
org.jaudiotagger.audio.asf.AsfFileReader: org.jaudiotagger.audio.asf.io.AsfHeaderReader HEADER_READER
com.google.android.gms.internal.play_billing.zzfs: java.lang.String zzf
org.simpleframework.xml.core.ModelSection: org.simpleframework.xml.core.LabelMap elements
com.umeng.commonsdk.statistics.idtracking.h: java.lang.String a
org.simpleframework.xml.stream.Splitter: int count
com.caij.puremusic.network.model.LastFmTrack$Track$Album: java.util.List image
com.caij.puremusic.db.model.ServerLyricsQueries$GetByIdQuery$execute$1: com.caij.puremusic.db.model.ServerLyricsQueries$GetByIdQuery this$0
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: java.lang.String g
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: org.jaudiotagger.tag.FieldKey fieldKey
com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat PREFER_ARGB_8888
com.thegrizzlylabs.sardineandroid.impl.BasicAuthenticator: java.lang.String password
com.google.common.reflect.TypeToken$TypeFilter: com.google.common.reflect.TypeToken$TypeFilter IGNORE_TYPE_VARIABLE_OR_WILDCARD
org.jaudiotagger.tag.id3.valuepair.StandardIPLSKey: org.jaudiotagger.tag.id3.valuepair.StandardIPLSKey PRODUCER
org.jaudiotagger.tag.reference.ISOCountry: java.util.Map codeMap
com.tencent.mm.opensdk.modelmsg.WXAppLaunchData: java.lang.String ACTION_HANDLE_WXAPPLAUNCH
androidx.fragment.app.Fragment: boolean mUserVisibleHint
com.umeng.commonsdk.internal.utils.d$a: java.lang.String b
org.simpleframework.xml.strategy.Name: java.lang.String LABEL
org.simpleframework.xml.core.ExtractorFactory$ElementMapExtractor: org.simpleframework.xml.core.Contact contact
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_FINDER_OPEN_EVENT
com.google.common.base.Predicates$ObjectPredicate: com.google.common.base.Predicates$ObjectPredicate ALWAYS_TRUE
io.ktor.util.date.Month: java.lang.String value
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_MEDIA_TYPE
com.umeng.analytics.pro.j: java.lang.String n
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_REMIXED
org.jaudiotagger.tag.id3.ID3v24Tag: int MASK_V24_FOOTER_PRESENT
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_FINDER_SHARE_VIDEO
com.tencent.bugly.proguard.ac: long b
com.tencent.mm.opensdk.modelmsg.WXImageObject: java.lang.String imagePath
com.caij.vip.ClientWeixinPayResponse: java.lang.String partnerid
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level BASIC
com.caij.puremusic.fragments.NowPlayingScreen: com.caij.puremusic.fragments.NowPlayingScreen Fit
com.umeng.analytics.pro.am: java.lang.String aS
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey SCRIPT
com.yalantis.ucrop.model.AspectRatio: android.os.Parcelable$Creator CREATOR
com.umeng.commonsdk.vchannel.b: java.util.Map f
com.umeng.commonsdk.UMConfigureImpl: int h
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_LOCATION
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey CUSTOM4
nl.adaptivity.xmlutil.core.XmlVersion: nl.adaptivity.xmlutil.core.XmlVersion XML11
org.slf4j.event.Level: org.slf4j.event.Level ERROR
com.caij.puremusic.model.UpdateInfo$ForcedUpgradeInfo: java.util.List forcedUpgradeVersionCodes
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_ALBUM_SORT_ORDER_MUSICBRAINZ
com.umeng.analytics.pro.e$d$b: java.lang.String a
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_TITLE_SORT_ORDER_ITUNES
com.alipay.android.phone.mrpc.core.e: com.alipay.android.phone.mrpc.core.d b
org.simpleframework.xml.core.PrimitiveValue: org.simpleframework.xml.core.Primitive root
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int MODE_DUAL_CHANNEL
com.tencent.mm.opensdk.modelbiz.WXQRCodePay$Req: java.lang.String extraMsg
com.caij.puremusic.db.model.ServerArtistCoverQueries$deleteSongBySource$2: com.caij.puremusic.db.model.ServerArtistCoverQueries$deleteSongBySource$2 INSTANCE
org.simpleframework.xml.core.OverrideType: java.lang.Class override
com.umeng.commonsdk.utils.d: java.lang.String v
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey FBPM
com.caij.puremusic.db.model.SongQueries: com.caij.puremusic.db.model.Song$Adapter SongAdapter
com.bumptech.glide.Priority: com.bumptech.glide.Priority IMMEDIATE
com.caij.puremusic.db.model.PlayCountEntityQueries$update$1: long $timePlayed
org.jaudiotagger.tag.mp4.field.Mp4TrackField: int NONE_END_VALUE_INDEX
com.caij.puremusic.drive.model.Auth2Token$$serializer: com.caij.puremusic.drive.model.Auth2Token$$serializer INSTANCE
org.jaudiotagger.tag.options.PadNumberOption: org.jaudiotagger.tag.options.PadNumberOption PAD_ONE_ZERO
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
org.jaudiotagger.audio.asf.io.MetadataReader: boolean $assertionsDisabled
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_ENCODEDBY
com.umeng.commonsdk.statistics.idtracking.Envelope: int CODEX_ENCRYPT
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey DJMIXER
org.jaudiotagger.audio.mp3.LameFrame: java.lang.String encoder
com.google.android.material.bottomsheet.BottomSheetDialog: boolean canceledOnTouchOutsideSet
org.simpleframework.xml.core.KeyBuilder$Key: java.lang.String value
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey ORIGINAL_LYRICIST
com.google.android.material.search.SearchView$TransitionState: com.google.android.material.search.SearchView$TransitionState[] $VALUES
com.alipay.tscenter.biz.rpc.vkeydfp.request.AppListCmdRequest: java.lang.String apdid
com.umeng.commonsdk.statistics.proto.a$e: java.util.Map e
org.simpleframework.xml.core.ClassScanner: org.simpleframework.xml.core.Function validate
org.jaudiotagger.tag.mp4.Mp4NonStandardFieldKey: java.lang.String description
com.tencent.mm.opensdk.modelbiz.WXLaunchWxaRedirectingPage$ConstantsWxaRedirectingPage: java.lang.String KEY_CALLBACK_MSG
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MUSICBRAINZ_RELEASE_TYPE
org.simpleframework.xml.core.Function: boolean contextual
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country SIERRA_LEONE
org.jcodec.containers.mp4.MP4Util$Atom: org.jcodec.containers.mp4.boxes.Header header
com.umeng.analytics.pro.j: java.lang.String Z
com.umeng.commonsdk.framework.UMWorkDispatch: android.os.Handler mTaskHandler
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey DISC_NO
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: boolean isLossless
com.tencent.bugly.crashreport.common.strategy.StrategyBean: boolean g
org.jaudiotagger.tag.reference.GenreTypes: int MAX_GENRE_ID
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey TONALITY
com.caij.puremusic.fragments.AlbumCoverStyle: int drawableResId
nl.adaptivity.xmlutil.serialization.XmlSerializationPolicy$XmlEncodeDefault: nl.adaptivity.xmlutil.serialization.XmlSerializationPolicy$XmlEncodeDefault ANNOTATED
com.tencent.bugly.proguard.ag$a: com.tencent.bugly.proguard.ag a
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler a
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_URL_FILE_WEB
com.tencent.bugly.proguard.an: java.net.Proxy a
org.jcodec.containers.mp4.boxes.TimeToSampleBox$TimeToSampleEntry: int sampleCount
com.tencent.bugly.proguard.bf: long b
org.jaudiotagger.audio.ogg.OggVorbisCommentTagCreator: byte[] capturePattern
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType PROXY
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_MPEG_LOCATION_LOOKUP_TABLE
com.tencent.bugly.proguard.at: com.tencent.bugly.BuglyStrategy$a x
com.tencent.bugly.proguard.t: java.lang.String b
com.umeng.analytics.pro.bb: long a
com.alipay.apmobilesecuritysdk.e.c: java.lang.String a
androidx.constraintlayout.core.widgets.ConstraintAnchor$Type: androidx.constraintlayout.core.widgets.ConstraintAnchor$Type CENTER
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String UNKNOW
com.umeng.commonsdk.internal.utils.f: java.lang.String a
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey CHOIR
org.jaudiotagger.audio.dsf.DsfChunkType: org.jaudiotagger.audio.dsf.DsfChunkType DATA
com.umeng.analytics.pro.d: java.lang.String l
com.tencent.mm.opensdk.modelbiz.WXChannelOpenProfile$Resp: java.lang.String extMsg
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey CUSTOM_5
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey TITLE_SORT
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_PUBLISHER
org.repackage.com.zui.deviceidservice.IDeviceidInterface$Stub$Proxy: android.os.IBinder a
com.tencent.bugly.proguard.bu: java.lang.String c
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_ENCRYPTION
org.jaudiotagger.tag.asf.AsfFieldKey: java.util.Map FIELD_ID_MAP
com.alipay.apmobilesecuritysdk.e.f: java.lang.String b
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script SHAVIAN
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script TENGWAR
com.google.android.material.bottomsheet.BottomSheetDialog: boolean edgeToEdgeEnabled
com.umeng.analytics.process.UMProcessDBHelper: com.umeng.commonsdk.utils.FileLockUtil mFileLock
com.tencent.bugly.proguard.n: byte[] b
com.umeng.commonsdk.statistics.common.DeviceConfig: boolean hasReadAndroidID
com.tencent.mm.opensdk.modelbiz.IWXChannelJumpInfo: int WX_CHANNEL_JUMP_TYPE_MINI_PROGRAM
com.tencent.mm.opensdk.diffdev.a.d: int a
com.tencent.bugly.proguard.bq: java.lang.String u
org.jcodec.containers.mp4.boxes.AliasBox: int AppleRemoteAccessDialup
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey FBPM
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey WORK_PART_LEVEL6_TYPE
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: java.util.List formatters
com.caij.puremusic.drive.model.AlbumMetadata: java.lang.String title
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DOTS
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String BARCODE
org.simpleframework.xml.stream.Indenter: int indent
com.umeng.commonsdk.statistics.SdkVersion: java.lang.String MINI_VERSION
org.jaudiotagger.tag.id3.AbstractID3v1Tag: int FIELD_ALBUM_POS
org.jaudiotagger.tag.id3.AbstractTag: java.lang.String TYPE_TAG
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_WORK_PART_LEVEL2_TYPE
com.caij.puremusic.db.model.Song: long dateModified
com.umeng.analytics.pro.j: java.lang.String L
com.caij.puremusic.db.model.SongQueries$GetAlbumSongCountQuery: com.caij.puremusic.db.model.SongQueries this$0
com.caij.puremusic.network.model.LastFmTrack$Track$Album$Image: java.lang.String size
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey LOCATION
com.umeng.commonsdk.statistics.SdkVersion: java.lang.String SDK_VERSION
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int MASK_MP3_MODE_EXTENSION
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MUSICBRAINZ_RELEASE_GROUP_ID
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier ODHD
com.umeng.analytics.b: java.lang.String z
com.tencent.bugly.BuglyStrategy: boolean v
com.tencent.bugly.proguard.ai: java.util.Map e
org.jaudiotagger.tag.id3.ID3Frames: java.util.Map forcev24Tov23
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey COMPOSER
com.tencent.mm.opensdk.diffdev.OAuthErrCode: com.tencent.mm.opensdk.diffdev.OAuthErrCode WechatAuth_Err_Cancel
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage OGG_VORBIS_NO_SETUP_BLOCK
org.jaudiotagger.audio.asf.io.ModificationResult: long byteDifference
com.tencent.bugly.proguard.at: int A
nl.adaptivity.xmlutil.core.KtXmlWriter$WriteState: nl.adaptivity.xmlutil.core.KtXmlWriter$WriteState AfterDocTypeDecl
com.tencent.mm.opensdk.modelpay.PayReq: int EXTDATA_MAX_LENGTH
com.umeng.analytics.pro.bv: int b
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag$1: int[] $SwitchMap$org$jaudiotagger$tag$vorbiscomment$VorbisAlbumArtistSaveOptions
org.jaudiotagger.audio.asf.AsfFileWriter: boolean $assertionsDisabled
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country SWITZERLAND
com.umeng.commonsdk.utils.UMUtils: java.lang.String VALUE_SHARE_VERSION
org.jaudiotagger.audio.flac.FlacStreamReader: java.lang.String FLAC_STREAM_IDENTIFIER
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_PAY_BY_WX
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_MIME_TYPE
com.umeng.commonsdk.statistics.proto.e: com.umeng.analytics.pro.bp i
com.umeng.analytics.pro.o$d: long d
com.umeng.analytics.pro.bf: com.umeng.analytics.pro.bc b
nl.adaptivity.xmlutil.core.XmlVersion: nl.adaptivity.xmlutil.core.XmlVersion XML10
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_FINDER_OPEN_FEED
com.thegrizzlylabs.sardineandroid.model.Deny: java.util.List privilege
org.jaudiotagger.audio.dsf.DsfChunkType: org.jaudiotagger.audio.dsf.DsfChunkType DSD
org.jaudiotagger.audio.aiff.chunk.ApplicationChunk: java.lang.String SIGNATURE_STOC
com.thegrizzlylabs.sardineandroid.DavResource: int status
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_ALBUMID
com.tencent.mm.opensdk.diffdev.OAuthErrCode: com.tencent.mm.opensdk.diffdev.OAuthErrCode WechatAuth_Err_Auth_Stopped
com.umeng.analytics.pro.j: java.lang.String P
com.umeng.analytics.pro.j: java.lang.String ap
org.jaudiotagger.audio.mp3.XingFrame: int XING_FRAMECOUNT_BUFFER_SIZE
com.umeng.commonsdk.UMConfigure: java.lang.Object lock
org.jcodec.containers.mp4.boxes.DataBox: byte[] data
com.umeng.analytics.AnalyticsConfig: java.lang.String RTD_START_TIME
com.umeng.commonsdk.vchannel.a: java.lang.String a
com.thegrizzlylabs.sardineandroid.util.SardineUtil: javax.xml.parsers.DocumentBuilderFactory factory
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_COPYRIGHTINFO
org.jaudiotagger.tag.id3.ID3v23Tag: java.lang.String TYPE_EXTENDED
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country BOTSWANA
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MOVEMENT
com.thegrizzlylabs.sardineandroid.impl.BasicAuthenticator: java.lang.String userName
com.caij.vip.PayInfo: com.caij.vip.AppGood appGood
com.caij.puremusic.db.model.ServerArtistCoverQueries$insert$2: com.caij.puremusic.db.model.ServerArtistCoverQueries$insert$2 INSTANCE
com.tencent.bugly.proguard.at: com.tencent.bugly.proguard.ay w
org.jcodec.containers.mp4.boxes.FullBox: byte version
com.umeng.commonsdk.statistics.noise.ABTest: android.content.Context context
org.simpleframework.xml.core.ExtractorFactory$ElementExtractor: org.simpleframework.xml.core.Contact contact
com.umeng.commonsdk.statistics.proto.Response: long serialVersionUID
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NAME
org.jaudiotagger.audio.ogg.util.OggPageHeader: int MAXIMUM_PAGE_HEADER_SIZE
com.umeng.analytics.pro.i$a: com.umeng.analytics.pro.i$a c
com.tencent.mm.opensdk.channel.MMessageActV2$Args: java.lang.String token
org.jaudiotagger.tag.id3.framebody.FrameBodyUFID: java.lang.String UFID_MUSICBRAINZ
com.thegrizzlylabs.sardineandroid.model.Source: java.util.List link
com.google.android.material.bottomsheet.BottomSheetBehavior: int expandedOffset
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: java.text.SimpleDateFormat formatMonthOut
com.google.android.material.bottomsheet.BottomSheetBehavior: int gestureInsetBottom
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MOOD_AGGRESSIVE
com.tencent.mm.opensdk.channel.a.a$a: java.lang.String c
org.jaudiotagger.audio.mp3.VbriFrame: int MAX_BUFFER_SIZE_NEEDED_TO_READ_VBRI
com.umeng.commonsdk.statistics.common.ReportPolicy$DefconPolicy: com.umeng.commonsdk.statistics.internal.StatTracer tracer
com.umeng.analytics.pro.am: java.lang.String aD
com.umeng.analytics.pro.bu: com.umeng.analytics.pro.ci g
com.alipay.android.phone.mrpc.core.l: com.alipay.android.phone.mrpc.core.l b
com.tencent.mm.opensdk.modelbiz.SubscribeMessage$Req: int LENGTH_LIMIT
com.google.android.material.bottomsheet.BottomSheetBehavior: int STATE_EXPANDED
org.repackage.com.meizu.flyme.openidsdk.ValueData: java.lang.String a
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MOVEMENT
org.simpleframework.xml.strategy.ArrayValue: java.lang.Class type
com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion CURRENT
com.umeng.analytics.pro.j: java.lang.String s
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey COMPOSER
com.google.android.material.bottomsheet.BottomSheetBehavior: int VIEW_INDEX_ACCESSIBILITY_DELEGATE_VIEW
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockHeader: boolean isLastBlock
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MUSICBRAINZ_RELEASE_COUNTRY
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_WORK_PART_LEVEL4_TYPE
org.jaudiotagger.tag.datatype.AbstractDataType: int size
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey ORIGINAL_LYRICIST
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_WORKID
com.umeng.commonsdk.framework.UMLogDataProtocol$UMBusinessType: com.umeng.commonsdk.framework.UMLogDataProtocol$UMBusinessType U_APP
com.umeng.commonsdk.statistics.common.ReportPolicy$SmartPolicy: com.umeng.commonsdk.statistics.internal.StatTracer mTracer
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_SYNCHRONISED_TEMPO
org.simpleframework.xml.core.SignatureBuilder: org.simpleframework.xml.core.SignatureBuilder$ParameterTable table
com.caij.puremusic.drive.model.Part: int duration
com.umeng.analytics.pro.an: int A
org.jaudiotagger.audio.ogg.OggVorbisCommentTagCreator: byte[] prefix
org.simpleframework.xml.core.ElementUnionParameter: java.lang.Class type
com.caij.puremusic.views.BreadCrumbLayout$Crumb: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.id3.ID3v2ChapterFrames: java.lang.String FRAME_ID_TABLE_OF_CONTENT
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_URL_PUBLISHERS
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MOVEMENT_NO
com.tencent.mm.opensdk.modelmsg.WXMiniProgramObject: boolean isSecretMessage
com.alipay.android.phone.mrpc.core.a.b: java.lang.Object b
com.tencent.mm.opensdk.diffdev.a.c: int d
com.umeng.commonsdk.statistics.internal.c: int b
org.simpleframework.xml.core.Source: org.simpleframework.xml.core.Support support
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey LYRICIST
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String PERIOD
org.jaudiotagger.tag.id3.AggregatedFrame: java.util.Set frames
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: int PRECISION_YEAR
org.jaudiotagger.tag.reference.Languages: int LANGUAGE_FIELD_SIZE
org.jaudiotagger.audio.wav.chunk.WavFormatChunk: boolean isValid
org.jaudiotagger.audio.opus.OpusHeader: int TAGS_CAPTURE_PATTERN_POS
com.caij.puremusic.db.model.ServerLyricsQueries$insert$1: com.caij.puremusic.db.model.ServerLyrics $ServerLyrics
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind MPEG2_HIGH_VIDEO
com.tencent.bugly.crashreport.biz.UserInfoBean: int p
com.caij.puremusic.drive.model.FMediaContainer: java.lang.String title1
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier NMHD
kotlin.collections.State: kotlin.collections.State[] $VALUES
org.repackage.com.zui.opendeviceidlibrary.BuildConfig: java.lang.String d
com.umeng.analytics.pro.e$b$a: java.lang.String b
org.jaudiotagger.audio.generic.AudioFileWriter: java.lang.String FILE_NAME_TOO_LONG
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: java.lang.String c
com.umeng.common.a: java.lang.String a
com.google.android.material.bottomsheet.BottomSheetBehavior: int SAVE_PEEK_HEIGHT
org.jaudiotagger.audio.mp3.MP3File: org.jaudiotagger.tag.id3.ID3v1Tag id3v1tag
com.umeng.commonsdk.utils.d: java.lang.String C
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey RANKING
com.umeng.analytics.pro.an: java.lang.String i
com.umeng.commonsdk.statistics.internal.StatTracer: long firstActivateTime
org.simpleframework.xml.core.ParameterContact: java.lang.annotation.Annotation label
org.simpleframework.xml.stream.Verbosity: org.simpleframework.xml.stream.Verbosity LOW
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script MEITEI_MAYEK
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey ORIGINAL_ALBUM
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_EQUALISATION
org.simpleframework.xml.core.AttributeParameter: org.simpleframework.xml.core.AttributeParameter$Contact contact
com.caij.puremusic.drive.model.Prop: java.lang.String displayname
com.umeng.analytics.pro.aq: java.lang.String h
com.alipay.apmobilesecuritysdk.e.i: java.lang.String b
org.jcodec.containers.mp4.boxes.MediaHeaderBox: long modified
com.umeng.commonsdk.statistics.proto.e: com.umeng.commonsdk.statistics.proto.e$e[] m
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_EMAIL
com.thegrizzlylabs.sardineandroid.model.Keepalive: java.util.List content
com.alipay.android.phone.mrpc.core.z: java.util.concurrent.atomic.AtomicInteger d
org.jaudiotagger.audio.mp4.EncoderType: org.jaudiotagger.audio.mp4.EncoderType DRM_AAC
org.json.alipay.b: java.util.Map b
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
org.jaudiotagger.audio.asf.io.AsfHeaderReader: org.jaudiotagger.audio.asf.io.AsfHeaderReader INFO_READER
com.umeng.analytics.b: com.umeng.analytics.pro.l g
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey CLASSICAL_NICKNAME
com.caij.puremusic.drive.model.AMetadata: com.caij.puremusic.drive.model.AMetadata$Companion Companion
com.caij.puremusic.db.model.PlayCountEntityQueries$CheckSongExistInPlayCountQuery: long songId
com.umeng.commonsdk.statistics.proto.b: com.umeng.analytics.pro.bp h
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey TRACK
com.tencent.mm.opensdk.modelbiz.WXChannelOpenLive$Req: int LENGTH_LIMIT
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey CUSTOM5
org.jaudiotagger.tag.datatype.EventTimingCode: org.jaudiotagger.tag.datatype.NumberHashMap type
com.umeng.commonsdk.statistics.proto.c: java.util.List b
com.caij.puremusic.drive.model.Metadata: java.lang.String grandparentTitle
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey CUSTOM5
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey WORK_PART_LEVEL3
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_OPEN_BUSINESS_VIEW
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script LYDIAN
org.jaudiotagger.tag.id3.ID3v24Frame: int FRAME_DATA_LENGTH_SIZE
com.tencent.bugly.proguard.bq: java.lang.String l
com.umeng.commonsdk.debug.UMLogCommon: java.lang.String SC_10007
org.jaudiotagger.tag.id3.ID3v1FieldKey: org.jaudiotagger.tag.id3.ID3v1FieldKey TRACK
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey ISRC_MMBETA
org.jaudiotagger.audio.ogg.util.VorbisPacketType: org.jaudiotagger.audio.ogg.util.VorbisPacketType AUDIO
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier IINF
com.umeng.analytics.AnalyticsConfig: double[] a
com.caij.puremusic.drive.model.Location$$serializer: com.caij.puremusic.drive.model.Location$$serializer INSTANCE
org.simpleframework.xml.core.CompositeMap: org.simpleframework.xml.core.Converter key
org.jaudiotagger.audio.mp4.ChunkWriter: int curChunk
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse: com.caij.puremusic.drive.model.JellyfinPlaylistsResponse$Companion Companion
com.umeng.commonsdk.statistics.proto.b: long b
com.umeng.commonsdk.statistics.idtracking.Envelope: byte[] SEED
com.tencent.mm.opensdk.modelmsg.SendAuth$Req: java.lang.String scope
org.jcodec.containers.mp4.boxes.MediaHeaderBox: long created
com.tencent.mm.opensdk.modelmsg.WXMediaMessage: int THUMB_LENGTH_LIMIT
com.umeng.commonsdk.statistics.proto.a$e: com.umeng.commonsdk.statistics.proto.a$e d
org.jaudiotagger.tag.reference.MusicalKey: org.jaudiotagger.tag.reference.MusicalKey NOTE_C
com.google.android.material.bottomsheet.BottomSheetBehavior: int SAVE_SKIP_COLLAPSED
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage GENERAL_WRITE_FAILED_TO_CREATE_TEMPORARY_FILE_IN_FOLDER
com.caij.puremusic.network.model.LastFmAlbum$Album$Wiki: com.caij.puremusic.network.model.LastFmAlbum$Album this$0
com.umeng.analytics.pro.g: android.database.sqlite.SQLiteOpenHelper b
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL2_TYPE
org.simpleframework.xml.core.ElementMapLabel: org.simpleframework.xml.ElementMap label
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_TIME
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_WORK_PART_LEVEL6
com.umeng.commonsdk.utils.d: java.lang.String U
com.umeng.analytics.pro.an$e: com.umeng.analytics.pro.an$e b
com.tencent.mm.opensdk.modelbase.BaseResp$ErrCode: int ERR_AUTH_DENIED
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MOOD_SAD
org.jcodec.containers.mp4.boxes.MovieHeaderBox: long created
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_JUMP_TO_BIZ_PROFILE
com.caij.puremusic.drive.model.JellyfinSongListResponse: int StartIndex
com.caij.puremusic.db.model.ServerAudioFormatQueries$deleteById$2: com.caij.puremusic.db.model.ServerAudioFormatQueries$deleteById$2 INSTANCE
org.repackage.com.zui.deviceidservice.IDeviceidInterface$Stub: int f
com.umeng.commonsdk.config.b: java.lang.Object b
com.umeng.common.b$a: com.umeng.common.b a
org.jaudiotagger.audio.aiff.chunk.AiffChunkType: org.jaudiotagger.audio.aiff.chunk.AiffChunkType AUTHOR
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country LUXEMBOURG
org.jaudiotagger.audio.generic.GenericAudioHeader: java.lang.Long audioDataEndPosition
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_EMBED_FLAG
com.thegrizzlylabs.sardineandroid.model.Prop: com.thegrizzlylabs.sardineandroid.model.PrincipalCollectionSet principalCollectionSet
com.caij.puremusic.db.model.FolderQueries$insertFolder$1: com.caij.puremusic.db.model.Folder $Folder
org.repackage.com.meizu.flyme.openidsdk.OpenId: java.lang.String b
org.jaudiotagger.tag.id3.framebody.FrameBodyTIPL: java.lang.String ARRANGER
org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.stream.Style style
org.jaudiotagger.tag.mp4.Mp4RatingValue: int id
org.simpleframework.xml.core.ClassInstantiator: org.simpleframework.xml.core.ParameterMap registry
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String sOperatorName
com.umeng.analytics.pro.d: java.lang.String ab
com.alipay.tscenter.biz.rpc.vkeydfp.result.DeviceDataReportResult: java.lang.String version
com.umeng.analytics.pro.am: java.lang.String bn
org.jaudiotagger.tag.id3.AbstractID3v2Frame: org.jaudiotagger.tag.id3.AbstractID3v2Frame$StatusFlags statusFlags
com.tencent.mm.opensdk.modelmsg.WXMusicVideoObject: java.lang.String musicDataUrl
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script SINHALA
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_ENCRYPTED_DATABLOCK
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey TITLE_MOVEMENT
com.umeng.commonsdk.internal.utils.j: java.lang.String c
org.jaudiotagger.audio.flac.FlacAudioHeader: java.lang.String md5
com.caij.puremusic.db.model.SongQueries$deleteSongBySource$1: long $sourceId
org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile: java.lang.String description
org.jaudiotagger.tag.id3.AbstractID3v2Frame: java.lang.String identifier
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdQuery$execute$1: com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdQuery this$0
com.thegrizzlylabs.sardineandroid.model.Ace: com.thegrizzlylabs.sardineandroid.model.Deny deny
org.jaudiotagger.tag.id3.ID3v22FieldKey: java.lang.String fieldName
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_WORK_COMPOSITION
io.ktor.utils.io.ByteChannelSequentialBase: java.lang.Object _closed
com.tencent.bugly.crashreport.common.strategy.StrategyBean: java.lang.String b
com.umeng.analytics.pro.e$a$a: java.lang.String a
com.umeng.commonsdk.statistics.proto.d: byte l
org.repackage.com.miui.deviceid.BuildConfig: java.lang.String b
org.jaudiotagger.audio.asf.data.MetadataContainer$DescriptorPointer: org.jaudiotagger.audio.asf.data.MetadataDescriptor desc
com.umeng.analytics.pro.am: java.lang.String ba
org.jcodec.containers.mp4.boxes.ClipRegionBox: short x
com.umeng.commonsdk.internal.c: java.lang.String d
com.umeng.analytics.pro.bj: com.umeng.analytics.pro.bi a
com.umeng.commonsdk.statistics.proto.d: java.util.Map d
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier MECO
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a D
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy PREVENT_WHEN_EMPTY
StatusBarLyric.API.StatusBarLyric: boolean useSystemMusicActive
com.tencent.mm.opensdk.modelbiz.WXQRCodePay$Req: java.lang.String TAG
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int MASK_MP3_PROTECTION
com.tencent.bugly.BuglyStrategy$a: int CRASHTYPE_JAVA_CRASH
org.jaudiotagger.audio.aiff.chunk.ID3Chunk: org.jaudiotagger.tag.aiff.AiffTag aiffTag
org.simpleframework.xml.transform.DateType: org.simpleframework.xml.transform.DateType NORMAL
org.jaudiotagger.utils.FileTypeUtil: java.lang.Integer[] mp3v1Sig_3
com.caij.puremusic.db.model.SongQueries$songsByNameArtist$1: com.caij.puremusic.db.model.SongQueries this$0
org.jaudiotagger.tag.id3.ID3v23Frame$EncodingFlags: org.jaudiotagger.tag.id3.ID3v23Frame this$0
org.simpleframework.xml.convert.ConverterScanner: org.simpleframework.xml.convert.ScannerBuilder builder
com.umeng.commonsdk.debug.UMLogCommon: java.lang.String SC_10019
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country NICARAGUA
androidx.customview.view.AbsSavedState: android.os.Parcelable mSuperState
org.simpleframework.xml.core.CacheLabel: org.simpleframework.xml.core.Decorator decorator
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
com.tencent.bugly.proguard.ai: long k
org.simpleframework.xml.core.MethodScanner: org.simpleframework.xml.core.MethodScanner$PartMap write
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_COMPOSER_SORT_ORDER_ITUNES
org.jaudiotagger.tag.reference.Tagger: org.jaudiotagger.tag.reference.Tagger GODFATHER
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country EL_SALVADOR
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country BURUNDI
com.google.android.exoplayer2.drm.DrmInitData: android.os.Parcelable$Creator CREATOR
com.tencent.bugly.proguard.ao$a: long c
com.alipay.sdk.m.u.g: com.alipay.sdk.m.u.g r
org.jaudiotagger.tag.TagOptionSingleton: int numberMP3SyncFrame
com.alipay.android.phone.mrpc.core.l: int h
org.jaudiotagger.audio.ogg.OggFileReader: org.jaudiotagger.audio.ogg.util.OggInfoReader ir
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataSeekTable: java.nio.ByteBuffer data
org.jaudiotagger.audio.mp4.RelocateMP4Editor: java.util.logging.Logger logger
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage NO_PERMISSIONS_TO_WRITE_TO_FILE
com.tencent.bugly.proguard.ax: java.lang.String e
org.jcodec.containers.mp4.boxes.HandlerBox: int componentFlagsMask
com.tencent.mm.opensdk.diffdev.DiffDevOAuthFactory: int VERSION_1
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script OSMANYA
com.tencent.mm.opensdk.diffdev.a.d: com.tencent.mm.opensdk.diffdev.a.d[] h
com.tencent.bugly.proguard.e: java.util.HashMap i
com.tencent.bugly.proguard.aa: com.tencent.bugly.proguard.q N
com.umeng.commonsdk.internal.utils.d$a: java.lang.String a
org.simpleframework.xml.core.Entry: java.lang.String entry
com.umeng.commonsdk.UMConfigure: java.lang.String WRAPER_TYPE_PHONEGAP
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_RADIO_NAME
com.umeng.commonsdk.statistics.proto.c: java.lang.String c
androidx.constraintlayout.core.widgets.ConstraintAnchor$Type: androidx.constraintlayout.core.widgets.ConstraintAnchor$Type LEFT
com.caij.puremusic.drive.model.DavResource: java.lang.String[] SUPPORTED_DATE_FORMATS
com.umeng.commonsdk.utils.d: java.lang.String ac
com.tencent.bugly.proguard.bv: java.lang.String b
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_GENERAL_ENCAPS_OBJECT
org.jaudiotagger.tag.TagOptionSingleton: java.lang.String defaultOptions
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey ITUNES_GROUPING
com.caij.puremusic.db.model.PlaylistEntityQueries$renamePlaylist$1: long $playListId
com.google.android.material.bottomsheet.BottomSheetBehavior: java.lang.String TAG
com.alipay.android.phone.mrpc.core.b: java.lang.RuntimeException e
com.tencent.mm.opensdk.modelbiz.SubscribeMessage$Req: java.lang.String TAG
org.jaudiotagger.tag.id3.ID3v23Tag: boolean experimental
org.simpleframework.xml.core.Support: org.simpleframework.xml.transform.Transformer transform
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey WORK_PART_LEVEL2
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey BPM
org.jcodec.containers.mp4.boxes.TimecodeSampleEntry: byte numFrames
com.caij.puremusic.db.model.AlbumQueries: com.caij.puremusic.db.model.Album$Adapter AlbumAdapter
org.jaudiotagger.tag.datatype.EventTimingCode: org.jaudiotagger.tag.datatype.NumberFixedLength timestamp
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_USER_DEFINED_INFO
org.jaudiotagger.tag.id3.ID3v23FieldKey: java.lang.String subId
com.umeng.commonsdk.statistics.b: java.lang.String d
org.jaudiotagger.tag.mp4.field.Mp4TrackField: int NONE_VALUE_INDEX
org.simpleframework.xml.core.SignatureCreator: java.lang.Class type
com.caij.puremusic.drive.model.SubsonicSearchResponse: com.caij.puremusic.drive.model.SubsonicSearchResponse$Companion Companion
com.tencent.bugly.proguard.aq: android.content.Context b
com.umeng.commonsdk.internal.a: int D
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
com.caij.puremusic.db.model.SongEntityQueries$GetPlaylistLastAddSongQuery: long playlistId
com.bumptech.glide.request.RequestCoordinator$RequestState: com.bumptech.glide.request.RequestCoordinator$RequestState FAILED
com.caij.puremusic.drive.model.BaiduDriveItem: long server_mtime
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_WORK_COMPOSITION_ID
com.tencent.bugly.crashreport.crash.CrashDetailBean: int t
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey LYRICS
com.umeng.commonsdk.statistics.common.d: android.content.Context b
org.jaudiotagger.utils.IntArrayList: int _size
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey URL_DISCOGS_RELEASE_SITE
com.caij.puremusic.db.model.SongEntityQueries$getPlayListSongCount$1: com.caij.puremusic.db.model.SongEntityQueries$getPlayListSongCount$1 INSTANCE
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_ALBUM_STATUS
org.jaudiotagger.tag.datatype.SynchronisedTempoCode: org.jaudiotagger.tag.datatype.TempoCode tempo
org.simpleframework.xml.core.VersionLabel: java.lang.String name
com.thegrizzlylabs.sardineandroid.model.Ace: com.thegrizzlylabs.sardineandroid.model.Inherited inherited
org.jaudiotagger.tag.id3.AbstractID3v1Tag: java.util.logging.Logger logger
com.caij.puremusic.drive.model.PlexLoginResponse: com.caij.puremusic.drive.model.PlexUser user
org.jcodec.containers.mp4.boxes.EsdsBox: java.util.Map kindMap
org.jaudiotagger.audio.generic.AbstractTag: int commonNumber
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey ALBUM_ARTISTS
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey DIRECTOR
org.jaudiotagger.logging.AbstractTagDisplayFormatter: int level
org.repackage.com.vivo.identifier.DataBaseOperation: int k
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey LYRICIST_MM3BETA
org.simpleframework.xml.core.Composite$Builder: org.simpleframework.xml.core.Composite composite
com.tencent.mm.opensdk.diffdev.a.d: com.tencent.mm.opensdk.diffdev.a.d d
com.tencent.bugly.crashreport.crash.CrashDetailBean: long F
com.caij.puremusic.db.model.PlaylistEntityQueries$searchPlaylistByName$1: kotlin.jvm.functions.Function2 $mapper
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey ITUNES_GROUPING
io.ktor.websocket.CloseReason$Codes: io.ktor.websocket.CloseReason$Codes CANNOT_ACCEPT
com.caij.puremusic.drive.model.DropboxDriveFileResponse: com.caij.puremusic.drive.model.DropboxDriveFileResponse$Companion Companion
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag DETECT_WRONG_FRAGMENT_CONTAINER
com.caij.puremusic.db.model.ServerArtistCover: java.lang.String id
com.caij.puremusic.drive.model.OneDriveItem$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.caij.puremusic.db.model.HistoryEntityQueries$getById$1: kotlin.jvm.functions.Function2 $mapper
com.tencent.mm.opensdk.modelbase.BaseResp$ErrCode: int ERR_USER_CANCEL
org.jaudiotagger.tag.reference.Languages: java.lang.String DEFAULT_VALUE
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_USER_DEFINED_INFO
com.umeng.analytics.pro.d: java.lang.String ay
org.jaudiotagger.audio.asf.data.ContentBranding: java.lang.String KEY_BANNER_TYPE
com.umeng.analytics.pro.o$a: int q
com.umeng.commonsdk.statistics.noise.ImLatent: int _DEFAULT_MIN_LATENT
com.tencent.mm.opensdk.constants.ConstantsAPI$OpenWebviewType: int TYPE_SUBSCRIBE_MINI_PROGRAM_MSG
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey COPYRIGHT
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: java.lang.String fieldName
com.tencent.mm.opensdk.modelbiz.WXChannelShareVideo$Req: java.lang.String extData
com.google.android.gms.internal.play_billing.zzfs: int zzd
org.jcodec.containers.mp4.boxes.MetaValue: int TYPE_FLOAT_32
com.alipay.android.phone.mrpc.core.l: long f
org.jaudiotagger.audio.mp4.EncoderType: java.lang.String description
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: int samplingRatePerChannel
com.umeng.analytics.pro.i$a: com.umeng.analytics.pro.i$a a
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String path
com.tencent.bugly.proguard.ay: android.content.Context g
org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile: org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile HVXC
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country MAURITIUS
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String PART_NUMBER
org.jaudiotagger.tag.images.ImageHandlingFactory: org.jaudiotagger.tag.images.AndroidImageHandler androidImageHandler
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MOOD_VALENCE
org.xmlpull.v1.XmlPullParser: int TEXT
org.simpleframework.xml.stream.Indenter: int index
com.alipay.android.phone.mrpc.core.z: java.lang.ThreadLocal a
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_WORK
com.caij.vip.PayInfo: int type
kotlin.reflect.KVariance: kotlin.reflect.KVariance[] $VALUES
com.caij.puremusic.db.model.SongQueries$SongsByArtistQuery: java.lang.String value
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MEDIA
org.jaudiotagger.audio.mp3.XingFrame: int XING_IDENTIFIER_BUFFER_SIZE
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey CUSTOM1
org.simpleframework.xml.core.CompositeArray: org.simpleframework.xml.strategy.Type entry
org.jaudiotagger.audio.mp3.MPEGFrameHeader: java.lang.String versionAsString
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode NO_ERROR
org.simpleframework.xml.core.ParameterFactory$ParameterBuilder: java.lang.Class entry
com.google.android.material.color.utilities.QuantizerWu$Direction: com.google.android.material.color.utilities.QuantizerWu$Direction BLUE
com.tencent.bugly.crashreport.common.strategy.StrategyBean: java.lang.String c
com.umeng.analytics.pro.bo: byte i
com.tencent.bugly.proguard.ab: java.lang.String[] c
org.jaudiotagger.tag.mp4.field.Mp4TagRawBinaryField: int dataSize
com.umeng.commonsdk.statistics.common.MLog: int LEVEL_WARN
com.umeng.commonsdk.statistics.common.DeviceTypeEnum: java.lang.String deviceIdType
com.umeng.commonsdk.statistics.common.ReportPolicy$DebugPolicy: com.umeng.commonsdk.statistics.internal.StatTracer mTracer
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind MPEG1_ADTS
org.jcodec.containers.mp4.boxes.Box$LeafBox: java.nio.ByteBuffer data
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country TOGO
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey ALBUM_ARTIST
com.umeng.commonsdk.statistics.proto.a$e: short f
androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey COMPILATION
com.umeng.analytics.pro.ap: java.lang.String e
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey ORIGINAL_ARTIST
org.jaudiotagger.audio.mp3.XingFrame: java.nio.ByteBuffer header
org.simpleframework.xml.core.StructureBuilder: org.simpleframework.xml.core.Support support
com.umeng.analytics.pro.am: java.lang.String R
org.simpleframework.xml.core.CacheParameter: java.lang.Object key
org.simpleframework.xml.stream.Format: org.simpleframework.xml.stream.Verbosity verbosity
com.umeng.analytics.pro.d: java.lang.String B
org.jaudiotagger.tag.mp4.Mp4TagFieldSubType: org.jaudiotagger.tag.mp4.Mp4TagFieldSubType NUMBER
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: boolean k
com.umeng.analytics.b: java.lang.String C
com.umeng.analytics.pro.bn: byte[] l
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey TRACK_TOTAL
org.jaudiotagger.audio.asf.data.StreamBitratePropertiesChunk: java.util.List streamNumbers
org.jaudiotagger.audio.wav.WavTagWriter$BothTagsFileStructure: boolean isAtEnd
com.tencent.bugly.proguard.x: android.content.Context c
org.jaudiotagger.tag.id3.ID3v23PreferredFrameOrderComparator: org.jaudiotagger.tag.id3.ID3v23PreferredFrameOrderComparator comparator
com.google.android.gms.internal.play_billing.zza: com.google.android.gms.internal.play_billing.zza zzf
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey ORCHESTRA_SORT
com.alipay.tscenter.biz.rpc.vkeydfp.request.AppListCmdRequest: java.lang.String applist
com.caij.puremusic.db.model.SongQueries$songsByIds$1: kotlin.jvm.functions.Function18 $mapper
com.umeng.analytics.pro.d: java.lang.String Y
com.tencent.mm.opensdk.modelpay.PayResp: java.lang.String prepayId
com.umeng.analytics.pro.r$a: com.umeng.analytics.pro.r a
org.repackage.com.miui.deviceid.BuildConfig: int e
com.caij.puremusic.db.model.ServerArtistCoverQueries$deleteById$2: com.caij.puremusic.db.model.ServerArtistCoverQueries$deleteById$2 INSTANCE
org.simpleframework.xml.core.PathParser: int count
org.simpleframework.xml.core.Support: org.simpleframework.xml.core.ScannerFactory scanners
com.tencent.bugly.crashreport.crash.CrashDetailBean: java.lang.String Z
com.caij.puremusic.db.model.ServerSongCoverQueries$GetBySourceQuery: long sourceId
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$PostorderEnumeration: java.util.Enumeration children
org.simpleframework.xml.core.ObjectScanner: org.simpleframework.xml.core.Detail detail
org.simpleframework.xml.strategy.CycleStrategy: org.simpleframework.xml.strategy.WriteState write
com.caij.puremusic.drive.model.Auth2Token: java.lang.String scope
org.jcodec.containers.mp4.boxes.AliasBox: short fsId
com.alipay.android.phone.mrpc.core.k$a: int b
org.simpleframework.xml.core.ElementMapLabel: java.lang.String parent
org.jaudiotagger.audio.asf.data.VideoStreamChunk: byte[] codecId
com.tencent.bugly.crashreport.crash.CrashDetailBean: long C
com.caij.puremusic.network.model.Artist: java.lang.String name
com.caij.puremusic.drive.model.AlbumListResponse: com.caij.puremusic.drive.model.AlbumListResponse$Companion Companion
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_WORK_PART_LEVEL5_ID
com.google.android.material.bottomsheet.BottomSheetDialog: boolean canceledOnTouchOutside
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country MONACO
com.umeng.analytics.pro.d: java.lang.String W
com.caij.puremusic.drive.model.SubsonicResponse: java.lang.String status
com.alipay.sdk.m.u.g: com.alipay.sdk.m.u.g d
androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType NONE
org.simpleframework.xml.stream.Formatter: char[] GREATER
com.caij.puremusic.drive.model.EmbyAlbumsResponse: java.util.List Items
org.simpleframework.xml.core.PrimitiveValue: org.simpleframework.xml.stream.Style style
com.umeng.commonsdk.internal.a: int u
com.tencent.mm.opensdk.modelmsg.LaunchFromWX$Req: java.lang.String messageExt
org.jaudiotagger.tag.id3.ID3v23Frame: java.util.regex.Pattern validFrameIdentifier
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_SUBSCRIBE_MESSAGE
com.tencent.bugly.CrashModule: int c
com.google.android.gms.internal.play_billing.zzew: com.google.android.gms.internal.play_billing.zzew zzd
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey TITLE_MOVEMENT
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier ODDA
com.caij.puremusic.drive.model.ImageTags$$serializer: com.caij.puremusic.drive.model.ImageTags$$serializer INSTANCE
com.tencent.bugly.crashreport.crash.CrashDetailBean: java.util.Map h
com.alipay.android.phone.mrpc.core.l: android.content.Context a
com.bumptech.glide.load.PreferredColorSpace: com.bumptech.glide.load.PreferredColorSpace DISPLAY_P3
org.jaudiotagger.tag.id3.ID3v1TagField: java.lang.String id
org.jaudiotagger.audio.mp4.Chunk: int sampleDur
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country BARBADOS
com.tencent.bugly.proguard.aa: int p
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockHeader: byte[] bytes
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey GENRE
com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion JAVA8
com.umeng.analytics.pro.e$a$b: java.lang.String c
org.jaudiotagger.tag.id3.ID3v24Tag: byte RELEASE
com.caij.puremusic.drive.model.Auth2Token: java.lang.String token_type
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MOOD_AROUSAL
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script TIFINAGH
com.tencent.bugly.crashreport.crash.CrashDetailBean: java.lang.String e
org.jaudiotagger.audio.ogg.util.OggPageHeader: int FIELD_PAGE_SEQUENCE_NO_POS
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_MUSIC_CD_ID
org.koin.core.definition.Kind: org.koin.core.definition.Kind[] $VALUES
com.umeng.umzid.b$a: java.util.concurrent.atomic.AtomicInteger a
com.caij.puremusic.drive.model.JellyfinSongListResponse: int TotalRecordCount
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_SYNC_TEMPO
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.lang.String TYPE_BODY
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier SDVP
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script KOREAN
com.tencent.bugly.proguard.bp: java.util.ArrayList b
org.jaudiotagger.tag.id3.ID3v23Frame$EncodingFlags: int MASK_GROUPING_IDENTITY
com.umeng.commonsdk.statistics.proto.Response$e: short e
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey PERFORMER_NAME
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey PRODUCER
com.caij.puremusic.db.model.PlaybackSongQueries$getPlaybacksByType$2: com.caij.puremusic.db.model.PlaybackSongQueries$getPlaybacksByType$2 INSTANCE
androidx.fragment.app.Fragment: boolean mRestored
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_VOLUME_ADJUSTMENT
org.jaudiotagger.tag.options.PadNumberOption: org.jaudiotagger.tag.options.PadNumberOption PAD_THREE_ZERO
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_ID3V2_FRAME_DESCRIPTION
com.alipay.android.phone.mrpc.core.f: com.alipay.android.phone.mrpc.core.d a
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey AMAZON_ID
com.tencent.mm.opensdk.channel.MMessageActV2$Args: java.lang.String targetPkgName
com.caij.vip.ClientWeixinPayResponse: java.lang.String timestamp
org.jcodec.containers.mp4.boxes.MetaValue: int TYPE_BMP
org.jaudiotagger.audio.asf.io.StreamBitratePropertiesReader: org.jaudiotagger.audio.asf.data.GUID[] APPLYING
org.simpleframework.xml.stream.Formatter$Tag: org.simpleframework.xml.stream.Formatter$Tag END
com.tencent.mm.opensdk.modelbiz.OpenWebview$Req: int MAX_URL_LENGHT
com.caij.vip.AppGood: float discount
com.umeng.commonsdk.framework.a: int s
com.umeng.analytics.pro.am: java.lang.String aN
org.jaudiotagger.tag.aiff.AiffTag: java.util.List chunkSummaryList
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country PALESTINIAN_TERRITORY_OCCUPIED
org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistReadOptions: org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistReadOptions READ_ALBUMARTIST
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
org.simpleframework.xml.core.ElementMapLabel: org.simpleframework.xml.core.Expression cache
com.thegrizzlylabs.sardineandroid.model.Owner: java.lang.String href
com.tencent.bugly.proguard.bb: long j
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey RANKING
org.simpleframework.xml.core.CacheParameter: java.lang.annotation.Annotation annotation
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey CLASSICAL_NICKNAME
org.jaudiotagger.utils.IntArrayList: int _start
com.alipay.sdk.m.u.g: com.alipay.sdk.m.u.g j
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier TIBR
com.tencent.bugly.proguard.av: java.lang.Thread$UncaughtExceptionHandler e
org.jaudiotagger.audio.mp3.XingFrame: int XING_HEADER_BUFFER_SIZE
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey ALBUM
com.caij.puremusic.db.model.PlayCountEntityQueries$checkSongExistInPlayCount$1: kotlin.jvm.functions.Function3 $mapper
com.umeng.analytics.pro.bn: byte[] n
com.umeng.commonsdk.statistics.noise.ImLatent: java.lang.Object mLatentLock
com.caij.puremusic.db.model.HistoryEntityQueries$getById$2: com.caij.puremusic.db.model.HistoryEntityQueries$getById$2 INSTANCE
org.simpleframework.xml.strategy.TreeStrategy: org.simpleframework.xml.strategy.Loader loader
org.jaudiotagger.audio.aiff.AiffType: org.jaudiotagger.audio.aiff.AiffType AIFC
org.jaudiotagger.tag.TagOptionSingleton: int playerCompatability
org.jcodec.containers.mp4.boxes.ChannelBox$ChannelDescription: float[] coordinates
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey CDDB_1
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat[] $VALUES
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_ORIG_FILENAME
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey CLASSICAL_NICKNAME
androidx.constraintlayout.core.SolverVariable$Type: androidx.constraintlayout.core.SolverVariable$Type UNKNOWN
com.caij.puremusic.fragments.GridStyle: com.caij.puremusic.fragments.GridStyle[] $VALUES
org.jaudiotagger.audio.asf.data.MetadataDescriptor: org.jaudiotagger.audio.asf.data.ContainerType containerType
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MOOD_HAPPY
com.umeng.analytics.pro.am: java.lang.String bj
com.google.android.material.timepicker.TimeModel: android.os.Parcelable$Creator CREATOR
com.umeng.analytics.pro.ad: int b
com.tencent.mmkv.MMKVRecoverStrategic: com.tencent.mmkv.MMKVRecoverStrategic OnErrorDiscard
org.jaudiotagger.tag.datatype.EventTimingCode: int SIZE
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage ASF_FILE_HEADER_MISSING
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b G
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MOOD_VALENCE
com.caij.puremusic.drive.model.OneDriveItem: com.caij.puremusic.drive.model.OneDriveFile file
com.alipay.apmobilesecuritysdk.e.i: java.util.Map f
com.umeng.analytics.pro.bo$b: byte c
com.alipay.android.app.IRemoteServiceCallback$Stub: int TRANSACTION_getVersion
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding FIXED
org.jcodec.containers.mp4.boxes.HandlerBox: java.lang.String componentType
com.umeng.commonsdk.UMConfigure$BS_TYPE: com.umeng.commonsdk.UMConfigure$BS_TYPE ZID
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_ALBUMID
com.tencent.mm.opensdk.diffdev.a.a: java.util.List b
com.umeng.commonsdk.utils.d: java.lang.String al
com.umeng.tunnel.UMChannelAgent: java.lang.String UMENG_VCHANNEL
com.caij.puremusic.db.model.ServerAudioFormatQueries$clear$1: com.caij.puremusic.db.model.ServerAudioFormatQueries$clear$1 INSTANCE
org.jaudiotagger.tag.id3.ID3v1Tag: java.lang.String year
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MOVEMENT_NO
com.tencent.bugly.crashreport.crash.CrashDetailBean: long H
org.simpleframework.xml.core.TextParameter: java.lang.Class type
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MUSICBRAINZ_WORK_PART_LEVEL6_ID
com.umeng.commonsdk.stateless.a: java.lang.String j
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MOOD_DANCEABILITY
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey WORK_PART_LEVEL1
com.tencent.mm.opensdk.diffdev.DiffDevOAuthFactory: java.lang.String TAG
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype HSUPA
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_LINKED_INFO
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey AK_ID
org.jaudiotagger.audio.mp3.MPEGFrameHeader: java.util.Map modeExtensionLayerIIIMap
com.caij.puremusic.db.model.SongQueries$SongsByInfoQuery: java.lang.String value__
org.jaudiotagger.utils.IntArrayList: int[] storage
com.umeng.analytics.b: com.umeng.analytics.pro.m y
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey LYRICS
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_USER_DEFINED_INFO
org.simpleframework.xml.core.VersionLabel: java.lang.Class type
org.jaudiotagger.tag.lyrics3.Lyrics3v2Fields: org.jaudiotagger.tag.lyrics3.Lyrics3v2Fields lyrics3Fields
org.jcodec.containers.mp4.boxes.CompositionOffsetsBox$Entry: int count
org.jaudiotagger.audio.generic.GenericAudioHeader: java.lang.String encodingType
com.caij.puremusic.db.model.PlaybackSongQueries$clear$1: com.caij.puremusic.db.model.PlaybackSongQueries$clear$1 INSTANCE
com.tencent.bugly.proguard.at: boolean b
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey RATING
org.jaudiotagger.tag.id3.ID3v1FieldKey: org.jaudiotagger.tag.id3.ID3v1FieldKey[] $VALUES
com.thegrizzlylabs.sardineandroid.model.Response: com.thegrizzlylabs.sardineandroid.model.Error error
com.tencent.bugly.crashreport.biz.UserInfoBean: java.util.Map r
org.simpleframework.xml.stream.OutputDocument: java.lang.String name
com.caij.puremusic.db.model.PlaylistEntityQueries$playlistByName$1: kotlin.jvm.functions.Function2 $mapper
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL5_TYPE
org.jaudiotagger.audio.ogg.util.OggPageHeader: boolean lastPage
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector DAY
com.umeng.analytics.pro.e$d$b: java.lang.String g
org.simpleframework.xml.core.DetailScanner: java.lang.Class type
org.simpleframework.xml.strategy.TreeStrategy: java.lang.String label
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey PART
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode SYNCHRONIZED
org.simpleframework.xml.util.Resolver: org.simpleframework.xml.util.Resolver$Cache cache
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey CONDUCTOR_SORT
org.jcodec.containers.mp4.boxes.PartialSyncSamplesBox: java.lang.String STPS
com.google.android.material.sidesheet.SideSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
io.ktor.websocket.CloseReason$Codes: io.ktor.websocket.CloseReason$Codes NOT_CONSISTENT
org.simpleframework.xml.core.Primitive: org.simpleframework.xml.strategy.Type type
com.caij.puremusic.db.model.SongQueries$GetArtistSongCountQuery: com.caij.puremusic.db.model.SongQueries this$0
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: int MASK_DATA_LENGTH_INDICATOR
com.alipay.sdk.m.u.g: com.alipay.sdk.m.u.g p
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State GONE
org.jcodec.containers.mp4.boxes.CleanApertureExtension: int apertureWidthDenominator
com.caij.puremusic.model.UpdateInfo: java.lang.String url
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey QUALITY
com.tencent.bugly.crashreport.common.strategy.StrategyBean: boolean n
org.jcodec.containers.mp4.boxes.ChannelBox$ChannelDescription: int channelFlags
org.jaudiotagger.tag.asf.AsfTagBannerField: boolean $assertionsDisabled
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons UNDECIDED
com.tencent.mm.opensdk.modelbiz.WXPayInsurance$Req: java.lang.String TAG
org.jaudiotagger.tag.id3.ID3v1Iterator: int TITLE
com.umeng.vt.diff.Event: int MAX_PROPERTY_LENGTH
com.tencent.bugly.proguard.bt: com.tencent.bugly.proguard.bs m
com.tencent.bugly.proguard.ao: java.lang.Object q
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level BODY
com.tencent.mm.opensdk.diffdev.a.c: com.tencent.mm.opensdk.diffdev.OAuthListener c
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country LIECHTENSTEIN
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int MODE_EXTENSION_ON_ON
com.caij.vip.PayBody: java.lang.String body
com.alipay.android.phone.mrpc.core.m: com.alipay.android.phone.mrpc.core.q a
com.tencent.bugly.BuglyStrategy$a: int CRASHTYPE_ANR
org.json.alipay.a: java.util.ArrayList a
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country PUERTO_RICO
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country DENMARK
com.caij.puremusic.network.model.LastFmArtist$Artist$Image: java.lang.String size
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a y
com.tencent.mm.opensdk.diffdev.OAuthErrCode: com.tencent.mm.opensdk.diffdev.OAuthErrCode WechatAuth_Err_Timeout
org.simpleframework.xml.stream.PullReader$Entry: java.lang.String prefix
org.simpleframework.xml.core.ArrayInstance: int length
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country NEW_ZEALAND
org.simpleframework.xml.core.Variable: org.simpleframework.xml.core.Label label
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script BUHID
com.alipay.android.phone.mrpc.core.q: com.alipay.android.phone.mrpc.core.o c
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script TAMIL
com.umeng.analytics.AnalyticsConfig: boolean enable
com.alipay.sdk.m.u.g: com.alipay.sdk.m.u.g c
com.umeng.analytics.pro.d: java.lang.String H
com.umeng.analytics.b: com.umeng.analytics.pro.p c
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier VMHD
com.tencent.bugly.crashreport.biz.UserInfoBean: java.lang.String d
org.simpleframework.xml.core.Primitive: org.simpleframework.xml.core.Context context
org.jaudiotagger.audio.wav.WavChunkType: org.jaudiotagger.audio.wav.WavChunkType LIST
org.simpleframework.xml.core.ExtractorFactory$ElementListExtractor: org.simpleframework.xml.core.Contact contact
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_ORIGARTIST
org.jaudiotagger.tag.images.StandardArtwork: java.lang.String mimeType
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage WMA_INVALID_LANGUAGE_USE
com.tencent.mm.opensdk.constants.ConstantsAPI$AppSupportContentFlag: long MMAPP_SUPPORT_DOC
com.tencent.bugly.proguard.at: boolean B
com.tencent.bugly.BuglyStrategy: boolean r
com.umeng.commonsdk.utils.UMUtils: java.lang.String KEY_LAST_APP_KEY
com.caij.puremusic.db.model.PlayCountEntityQueries$insert$1: com.caij.puremusic.db.model.PlayCountEntity $PlayCountEntity
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier MVEX
org.jaudiotagger.tag.mp4.field.Mp4TagByteField: int realDataLength
com.umeng.commonsdk.statistics.idtracking.h: android.content.Context e
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MOOD_PARTY
org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistSaveOptions: org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistSaveOptions WRITE_JRIVER_ALBUMARTIST_AND_DELETE_ALBUMARTIST
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script CYPRIOT
com.alipay.android.app.IAlixPay$Stub: int TRANSACTION_manager
com.tencent.bugly.proguard.bl: java.lang.String d
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_TITLE_REFINEMENT
org.koin.core.definition.Kind: org.koin.core.definition.Kind Factory
com.umeng.commonsdk.service.UMGlobalContext: java.lang.String mProcessName
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: android.util.SparseArray valueMap
com.umeng.analytics.MobclickAgent$PageMode: com.umeng.analytics.MobclickAgent$PageMode[] a
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status OK
com.umeng.analytics.AnalyticsConfig: java.lang.String DEBUG_MODE_PERIOD
com.caij.puremusic.drive.model.ADriveItem: com.caij.puremusic.drive.model.ADriveItem$Companion Companion
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a A
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] $VALUES
org.jaudiotagger.audio.generic.ModificationHandler: java.util.Vector listeners
org.simpleframework.xml.core.TemplateFilter: org.simpleframework.xml.core.Context context
com.caij.puremusic.network.model.LastFmAlbum$Album$Image: java.lang.String size
com.caij.puremusic.drive.model.Auth2Token: long createTime
org.jaudiotagger.audio.wav.WavChunkType: org.jaudiotagger.audio.wav.WavChunkType INFO
com.umeng.commonsdk.statistics.idtracking.e: java.util.Set h
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag DETECT_TARGET_FRAGMENT_USAGE
com.caij.puremusic.drive.model.SubPlayList$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.alipay.tscenter.biz.rpc.vkeydfp.request.AppListCmdRequest: java.lang.String os
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_ORIGINAL_ALBUMID
org.jaudiotagger.tag.mp4.field.Mp4TagTextNumberField: java.util.List numbers
org.jaudiotagger.utils.DirectByteBufferUtils$UnsupportedJvmReleaseStrategy: org.jaudiotagger.utils.DirectByteBufferUtils$ReleaseStrategy INSTANCE
com.umeng.analytics.pro.am: java.lang.String ae
com.caij.puremusic.drive.model.Prop: com.caij.puremusic.drive.model.Resourcetype resourcetype
com.caij.puremusic.db.model.SongQueries$SongsByInfoQuery: java.lang.String value_
com.umeng.commonsdk.utils.d: java.lang.String k
com.umeng.analytics.pro.j: java.lang.String A
com.tencent.bugly.proguard.au: com.tencent.bugly.proguard.as d
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey WINAMP_PUBLISHER
com.alipay.tscenter.biz.rpc.vkeydfp.result.DeviceDataReportResult: java.lang.String vkeySwitch
org.jcodec.containers.mp4.boxes.TimecodeSampleEntry: java.lang.String TMCD
com.tencent.bugly.proguard.bu: long a
com.umeng.commonsdk.vchannel.b: long c
com.tencent.mm.opensdk.modelmsg.WXMiniProgramObject: boolean withShareTicket
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier ODRM
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier ODRB
org.jcodec.containers.mp4.boxes.TrackHeaderBox: int[] matrix
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: java.text.SimpleDateFormat formatHoursOut
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage GENERAL_DELETE_FAILED_FILE_LOCKED
org.jaudiotagger.tag.mp4.Mp4TagFieldSubType: org.jaudiotagger.tag.mp4.Mp4TagFieldSubType UNKNOWN
org.jaudiotagger.tag.id3.valuepair.ID3NumberTotalFields: java.util.EnumSet numberField
com.tencent.mm.opensdk.modelmsg.WXDesignerSharedObject: java.lang.String url
com.google.android.material.bottomsheet.BottomSheetBehavior: int parentHeight
com.umeng.analytics.pro.an: int f
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_PLAY_COUNTER
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: int value
com.tencent.mm.opensdk.modelmsg.WXAppLaunchData: java.lang.String ACTION_HANDLE_WXAPP_RESULT
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_TYPE_OF_CHANNEL
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgram$Req: int miniprogramType
com.tencent.mm.opensdk.modelmsg.WXAppExtendObject: int CONTENT_LENGTH_LIMIT
com.umeng.analytics.pro.d: java.lang.String i
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag PENALTY_LOG
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey ACOUSTID_FINGERPRINT_OLD
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag DETECT_SET_USER_VISIBLE_HINT
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey DISC_NO
com.umeng.analytics.process.UMProcessDBHelper$a: int a
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country GUERNSEY
com.tencent.mm.opensdk.modelmsg.WXEmojiSharedObject: java.lang.String packageid
org.simpleframework.xml.core.ArrayInstance: org.simpleframework.xml.strategy.Value value
org.simpleframework.xml.stream.OutputStack: java.util.Set active
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
org.jaudiotagger.audio.ogg.util.VorbisPacketType: org.jaudiotagger.audio.ogg.util.VorbisPacketType SETUP_HEADER
com.tencent.bugly.proguard.aa: android.content.SharedPreferences O
org.simpleframework.xml.stream.OutputAttribute: org.simpleframework.xml.stream.OutputNode source
org.simpleframework.xml.core.DetailExtractor: org.simpleframework.xml.DefaultType override
com.tencent.bugly.proguard.at: com.tencent.bugly.proguard.ak v
com.umeng.commonsdk.statistics.proto.d$e: java.lang.String f
org.repackage.com.meizu.flyme.openidsdk.b: org.repackage.com.meizu.flyme.openidsdk.SupportInfo g
org.jaudiotagger.utils.tree.TreeModelEvent: org.jaudiotagger.utils.tree.TreePath path
com.caij.puremusic.drive.model.SubsonicSearchResponse: com.caij.puremusic.drive.model.SearchResult3 searchResult3
com.caij.puremusic.drive.model.AlbumSubsonicResponse$$serializer: com.caij.puremusic.drive.model.AlbumSubsonicResponse$$serializer INSTANCE
org.jcodec.containers.mp4.boxes.EsdsBox$DescriptorParser: int DC_TAG
org.jaudiotagger.tag.reference.Languages: java.lang.String WINAMP_ID
com.caij.puremusic.db.model.SongEntityQueries$GetPlayListSongCountQuery: long playlistId
org.jaudiotagger.audio.asf.data.GUID: int GUID_LENGTH
org.jaudiotagger.tag.id3.valuepair.SynchronisedLyricsContentType: org.jaudiotagger.tag.id3.valuepair.SynchronisedLyricsContentType eventTimingTypes
org.jcodec.containers.mp4.boxes.EsdsBox: java.nio.ByteBuffer streamInfo
org.jaudiotagger.audio.asf.data.FileHeader: long flags
com.caij.puremusic.drive.model.Response: java.util.List propstat
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL2_ID
org.simpleframework.xml.strategy.ReadGraph: java.lang.String mark
com.umeng.commonsdk.statistics.proto.a$e: java.lang.String g
org.simpleframework.xml.convert.RegistryBinder: org.simpleframework.xml.convert.ConverterFactory factory
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey ARTISTSORT
org.jaudiotagger.tag.reference.ISOCountry: java.util.Map descriptionMap
io.ktor.client.call.HttpClientCall: int received
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MUSICBRAINZ_WORK_COMPOSITION_ID
org.jaudiotagger.tag.id3.ID3v23Frame$EncodingFlags: java.lang.String TYPE_ENCRYPTION
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat SOFT_LIGHT
com.tencent.mm.opensdk.modelbiz.WXChannelOpenFeed$Req: boolean notGetReleatedList
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey CLASSICAL_NICKNAME
org.jaudiotagger.tag.aiff.AiffTag: boolean isIncorrectlyAlignedTag
com.umeng.commonsdk.internal.a: int s
org.simpleframework.xml.core.ExtractorFactory$ElementMapExtractor: org.simpleframework.xml.stream.Format format
com.caij.puremusic.model.Data: java.lang.String name
org.jcodec.containers.mp4.MP4Util: java.util.logging.Logger LOGGER
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind H264_VIDEO
com.tencent.bugly.proguard.z: java.lang.String[] b
com.umeng.commonsdk.framework.a: android.os.Handler c
com.alipay.android.phone.mrpc.core.q: java.lang.String d
com.umeng.commonsdk.statistics.noise.ImLatent: int _DEFAULT_MIN_HOURS
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzk
com.caij.puremusic.db.model.PlaylistEntityQueries$checkPlaylistExists$1: com.caij.puremusic.db.model.PlaylistEntityQueries$checkPlaylistExists$1 INSTANCE
com.caij.puremusic.drive.model.ParentReference$$serializer: com.caij.puremusic.drive.model.ParentReference$$serializer INSTANCE
org.jaudiotagger.tag.id3.valuepair.ReceivedAsTypes: org.jaudiotagger.tag.id3.valuepair.ReceivedAsTypes receivedAsTypes
com.tencent.bugly.crashreport.crash.CrashDetailBean: java.util.Map i
androidx.fragment.app.Fragment: java.lang.Boolean mSavedUserVisibleHint
com.caij.puremusic.db.model.SongQueries$songsByAlumId$1: com.caij.puremusic.db.model.SongQueries this$0
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey METADATA_BLOCK_PICTURE
com.tencent.mm.opensdk.modelmsg.WXMediaMessage: int sdkVer
com.umeng.commonsdk.utils.UMUtils: java.lang.String VALUE_ASMS_VERSION
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey AMAZON_ID
com.umeng.commonsdk.internal.utils.d$a: java.lang.String j
com.caij.puremusic.db.model.SongEntity: long key
com.caij.puremusic.drive.model.Propstat: java.lang.String status
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey DESCRIPTION
com.caij.puremusic.drive.model.GoogleDriveFile: java.lang.String createdTime
androidx.fragment.app.DialogFragment: java.lang.String SAVED_STYLE
org.simpleframework.xml.core.ElementListLabel: org.simpleframework.xml.core.Expression cache
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey ARTIST
com.umeng.commonsdk.statistics.c: int n
com.umeng.commonsdk.UMConfigure: int preInitInvokedFlag
org.jaudiotagger.tag.TagOptionSingleton: byte id3v24UnicodeTextEncoding
com.umeng.commonsdk.statistics.b: java.lang.String e
org.jaudiotagger.audio.generic.GenericAudioHeader: java.lang.Long audioDataLength
com.tencent.bugly.proguard.aa: com.tencent.bugly.proguard.aa aq
com.tencent.bugly.proguard.bc: java.lang.String b
org.simpleframework.xml.core.Collector: org.simpleframework.xml.core.Collector$Registry registry
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_MUSIC_VIDEO
org.jaudiotagger.audio.asf.data.MetadataDescriptor: int TYPE_WORD
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey WORK_PART_LEVEL2_TYPE
com.tencent.bugly.proguard.p: com.tencent.bugly.proguard.w d
com.umeng.analytics.pro.j: java.lang.String M
com.google.android.gms.internal.play_billing.zzfv: int zze
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier HDLR
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_3
com.alipay.android.phone.mrpc.core.HttpException: int NETWORK_UNAVAILABLE
com.tencent.bugly.crashreport.crash.CrashDetailBean: java.lang.String aa
org.jaudiotagger.audio.mp3.XingFrame: boolean isAudioSizeEnabled
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MUSICIP_ID
org.jaudiotagger.audio.asf.data.ContainerType: org.jaudiotagger.audio.asf.data.ContainerType CONTENT_BRANDING
com.umeng.analytics.filter.EventList: android.content.Context mAppContext
com.caij.puremusic.db.model.SongQueries$SongsByAlumIdQuery: com.caij.puremusic.db.model.SongQueries this$0
com.tencent.mm.opensdk.modelbase.BaseResp: java.lang.String transaction
com.tencent.mm.opensdk.modelpay.PayReq: java.lang.String partnerId
com.tencent.mm.opensdk.constants.Build: java.lang.String SDK_VERSION_NAME
com.caij.puremusic.db.model.SongQueries$SongsByIdsQuery: java.util.Collection id
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_ITUNES_GROUPING
org.jaudiotagger.tag.id3.ID3v24Frame$StatusFlags: org.jaudiotagger.tag.id3.ID3v24Frame this$0
org.jcodec.containers.mp4.boxes.MovieFragmentHeaderBox: int sequenceNumber
com.caij.puremusic.fragments.GridStyle: com.caij.puremusic.fragments.GridStyle ColoredCard
com.caij.puremusic.drive.model.JellyfinSongListResponse: com.caij.puremusic.drive.model.JellyfinSongListResponse$Companion Companion
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MOOD_ELECTRONIC
org.jaudiotagger.audio.aiff.AiffAudioHeader: java.lang.String audioEncoding
com.caij.vip.AppGood: java.lang.String orderName
org.jaudiotagger.tag.mp4.field.Mp4TagBinaryField: boolean isBinary
com.umeng.analytics.pro.j: java.lang.String aq
org.jaudiotagger.tag.id3.ID3Frames: java.util.TreeSet extensionFrames
com.umeng.analytics.pro.an$e: com.umeng.analytics.pro.an$e h
org.jaudiotagger.audio.mp4.Chunk: int entry
com.umeng.commonsdk.statistics.common.MLog: boolean DEBUG
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$Req: int scene
org.jaudiotagger.tag.id3.framebody.FrameBodyASPI: java.lang.String BITS_PER_INDEX_POINT
org.jaudiotagger.tag.id3.AbstractID3v1Tag: int FIELD_TAGID_POS
com.tencent.mm.opensdk.modelbiz.WXNontaxPay$Req: int URL_LENGTH_LIMIT
org.jcodec.containers.mp4.boxes.SegmentIndexBox$Reference: long referenced_size
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey PERIOD
com.alipay.android.phone.mrpc.core.l: com.alipay.android.phone.mrpc.core.b d
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason SERVER_ERROR
com.r0adkll.slidr.model.SlidrPosition: com.r0adkll.slidr.model.SlidrPosition VERTICAL
com.tencent.bugly.proguard.o: int id
com.umeng.commonsdk.framework.UMFrUtils: java.lang.Object mEnvelopeFileLock
com.umeng.commonsdk.config.d$c: com.umeng.commonsdk.config.d$c d
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey CUSTOM3
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MOVEMENT
com.google.android.material.search.SearchView$TransitionState: com.google.android.material.search.SearchView$TransitionState SHOWN
org.repackage.com.zui.opendeviceidlibrary.BuildConfig: java.lang.String b
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: int noOfChannels
org.jaudiotagger.tag.TagOptionSingleton: boolean truncateTextWithoutErrors
com.umeng.analytics.Gender: com.umeng.analytics.Gender[] a
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey BPM
com.umeng.analytics.pro.am: java.lang.String ax
com.alipay.sdk.m.u.g: com.alipay.sdk.m.u.g n
com.umeng.commonsdk.statistics.idtracking.e: java.io.File d
io.ktor.websocket.FrameType: boolean controlFrame
org.simpleframework.xml.core.ElementUnionLabel: org.simpleframework.xml.core.Contact contact
org.simpleframework.xml.strategy.ReadState: org.simpleframework.xml.strategy.Loader loader
com.umeng.commonsdk.statistics.proto.e: int k
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdCountQuery: com.caij.puremusic.db.model.SongQueries this$0
com.umeng.commonsdk.debug.UMLog: int JSON_INDENT
org.repackage.com.meizu.flyme.openidsdk.b: org.repackage.com.meizu.flyme.openidsdk.b e
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String ALBUM_ARTISTS_SORT
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_INVOLVED_PEOPLE
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script GEORGIAN
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow DROP_LATEST
com.caij.puremusic.drive.model.SubsonicSearchResponse$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
androidx.preference.PreferenceGroup$SavedState: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier ALAC
com.tencent.bugly.BuglyStrategy: java.lang.String h
com.caij.puremusic.drive.model.AMetadata: java.lang.String key
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country FAROE_ISLANDS
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey RECORD_LABEL
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey TIMBRE
org.jaudiotagger.audio.asf.data.GUID: int hash
org.jaudiotagger.audio.wav.WavSaveOptions: org.jaudiotagger.audio.wav.WavSaveOptions SAVE_BOTH_AND_SYNC
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey TRACKNUMBER
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MUSICBRAINZ_DISC_ID
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_EMOTIONLIST_SHARED
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MUSICBRAINZ_WORK_ID
org.jaudiotagger.audio.mp3.MP3AudioHeader: java.lang.String TYPE_MP3
com.umeng.analytics.pro.d: java.lang.String au
org.jaudiotagger.tag.id3.ID3v24Frame: int FRAME_GROUPING_INDICATOR_SIZE
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey OCCASION
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country UZBEKISTAN
org.jaudiotagger.tag.id3.ID3v22Frame: java.util.regex.Pattern validFrameIdentifier
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind MPEG4_ADTS_SCALEABLE_SAMPLING
org.simpleframework.xml.core.LabelExtractor$LabelBuilder: java.lang.Class label
org.repackage.com.zui.deviceidservice.IDeviceidInterface$Stub: int e
com.tencent.bugly.proguard.e: int j
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_COMMERCIAL_FRAME
com.alipay.android.phone.mrpc.core.HttpException: java.lang.String mMsg
com.caij.puremusic.db.model.ServerAudioFormatQueries$getById$1: kotlin.jvm.functions.Function5 $mapper
com.r0adkll.slidr.model.SlidrPosition: com.r0adkll.slidr.model.SlidrPosition[] $VALUES
org.jaudiotagger.tag.id3.valuepair.StandardIPLSKey: java.util.Map lookup
com.umeng.commonsdk.utils.d: java.lang.String D
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey CLASSICAL_CATALOG
org.simpleframework.xml.core.Entry: org.simpleframework.xml.ElementMap label
com.umeng.analytics.pro.l: com.umeng.analytics.pro.ar q
com.tencent.mm.opensdk.modelbiz.ChooseCardFromWXCardPackage$Req: java.lang.String appId
com.umeng.analytics.pro.l: android.app.Application k
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: boolean allowsChildren
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey TITLE_MOVEMENT
org.jaudiotagger.audio.mp3.MPEGFrameHeader: java.lang.String emphasisAsString
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int MASK_MP3_FREQUENCY
com.tencent.mm.opensdk.modelmsg.WXMediaMessage: java.lang.String ACTION_WXAPPMESSAGE
org.jaudiotagger.tag.id3.ID3v23Tag: int paddingSize
org.simpleframework.xml.core.FieldScanner: org.simpleframework.xml.core.ContactMap done
com.umeng.analytics.process.DBFileTraversalUtil$1: java.io.File a
org.simpleframework.xml.core.ObjectScanner: org.simpleframework.xml.core.Structure structure
org.simpleframework.xml.core.ElementArrayLabel: org.simpleframework.xml.ElementArray label
androidx.fragment.app.Fragment: boolean mAdded
com.caij.puremusic.model.AbsCustomPlaylist: kotlin.Lazy songRepository$delegate
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey REMIXER
com.umeng.commonsdk.internal.a: int E
com.bumptech.glide.Priority: com.bumptech.glide.Priority NORMAL
com.umeng.analytics.process.a: java.lang.String c
com.umeng.commonsdk.statistics.internal.StatTracer: long lastRequestTime
com.caij.puremusic.drive.model.ArtistItem: java.lang.Integer PrimaryImageAspectRatio
org.jaudiotagger.tag.id3.framebody.FrameBodyTDAT: int DAY_END
com.caij.puremusic.db.model.SongQueries$firstSongByAlbumId$1: kotlin.jvm.functions.Function18 $mapper
org.jaudiotagger.tag.id3.AbstractID3v2Tag$1: java.util.Iterator val$it
org.simpleframework.xml.core.KeyBuilder$KeyType: org.simpleframework.xml.core.KeyBuilder$KeyType ATTRIBUTE
org.jcodec.containers.mp4.boxes.EsdsBox: int objectType
com.umeng.analytics.pro.an: byte C
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_SET_SUBTITLE
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
org.jaudiotagger.audio.ogg.util.OggPageHeader: byte[] segmentTable
com.umeng.commonsdk.statistics.proto.Response: byte __isset_bitfield
org.jaudiotagger.audio.ogg.util.VorbisHeader: java.lang.String CAPTURE_PATTERN
com.caij.puremusic.drive.model.ParentReference: com.caij.puremusic.drive.model.ParentReference$Companion Companion
org.jaudiotagger.audio.AudioFileIO: org.jaudiotagger.audio.AudioFileIO defaultInstance
kotlinx.serialization.json.internal.WriteMode: char begin
com.umeng.analytics.pro.a$a: int f
nl.adaptivity.xmlutil.serialization.OutputKind: nl.adaptivity.xmlutil.serialization.OutputKind Element
org.jcodec.containers.mp4.boxes.TrackHeaderBox: long created
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: int MASK_FRAME_UNSYNCHRONIZATION
com.caij.puremusic.fragments.NowPlayingScreen: com.caij.puremusic.fragments.NowPlayingScreen Plain
com.alipay.tscenter.biz.rpc.vkeydfp.request.DeviceDataReportRequest: java.lang.String version
org.jaudiotagger.audio.asf.data.GUID: java.util.regex.Pattern GUID_PATTERN
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String WORK_TYPE
com.tencent.mm.opensdk.modelbase.BaseReq: java.lang.String transaction
com.caij.vip.AppGood: java.lang.String payHint
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int SYNC_SIZE
com.caij.puremusic.db.model.SongQueries$songsByTitle$2: com.caij.puremusic.db.model.SongQueries$songsByTitle$2 INSTANCE
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_MUSIC_CD_ID
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey ITUNES_GROUPING
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey PART_NUMBER
org.simpleframework.xml.core.CompositeUnion: org.simpleframework.xml.core.Group group
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script DESERET
com.umeng.commonsdk.internal.a: java.lang.String e
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country CYPRUS
com.umeng.analytics.pro.an: int j
com.caij.puremusic.model.AbsCustomPlaylist$special$$inlined$inject$default$2: org.koin.core.qualifier.Qualifier $qualifier
org.jaudiotagger.tag.TagOptionSingleton: boolean id3v1SaveYear
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype[] $VALUES
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MOOD_INSTRUMENTAL
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_PRICE_PAID
com.umeng.analytics.pro.cj: int a
com.umeng.commonsdk.utils.d: java.lang.String q
com.umeng.analytics.pro.i: java.lang.String k
com.umeng.commonsdk.statistics.idtracking.e: java.lang.String c
com.google.android.exoplayer2.metadata.flac.VorbisComment: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey RANKING
com.umeng.analytics.pro.am: java.lang.String ah
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_ACCOMPANIMENT
com.caij.puremusic.drive.model.JellyfinSongListResponse$$serializer: com.caij.puremusic.drive.model.JellyfinSongListResponse$$serializer INSTANCE
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzX
kotlin.time.DurationUnit: kotlin.time.DurationUnit NANOSECONDS
com.umeng.commonsdk.debug.UMLogCommon: java.lang.String SC_10009
org.simpleframework.xml.core.CacheLabel: boolean inline
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country MYANMAR
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: int bitrateNominal
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script POLLARD_PHONETIC
com.tencent.mm.opensdk.modelbiz.ChooseCardFromWXCardPackage$Req: java.lang.String canMultiSelect
org.simpleframework.xml.core.ElementMapUnionLabel: org.simpleframework.xml.core.Contact contact
com.umeng.analytics.pro.bf: java.util.Map c
com.tencent.mm.opensdk.openapi.MMSharedPreferences: java.lang.String[] columns
com.caij.puremusic.fragments.search.Filter: com.caij.puremusic.fragments.search.Filter SONGS
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgram$Req: int MINIPTOGRAM_TYPE_RELEASE
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP3_REFERENCE_KEY_INVALID
org.jaudiotagger.tag.datatype.PartOfSet$PartOfSetValue: java.lang.String rawTotal
com.caij.vip.GoodOrder: float totalPrice
org.jaudiotagger.audio.aiff.AiffAudioHeader$Endian: org.jaudiotagger.audio.aiff.AiffAudioHeader$Endian LITTLE_ENDIAN
com.tencent.bugly.crashreport.crash.CrashDetailBean: java.lang.String O
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey TAGS
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey PURCHASE_DATE
androidx.appcompat.widget.ActionMenuPresenter$SavedState: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_URL_PAYMENT
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey OPUS
com.umeng.commonsdk.debug.UMLogCommon: java.lang.String SC_10015
com.umeng.analytics.pro.bh: java.util.Map d
org.repackage.com.zui.deviceidservice.IDeviceidInterface$Stub: int d
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage NOT_STANDARD_MP$_GENRE
org.simpleframework.xml.core.AttributeParameter: int index
org.simpleframework.xml.stream.OutputNodeMap: org.simpleframework.xml.stream.OutputNode source
com.google.common.collect.Iterators$EmptyModifiableIterator: com.google.common.collect.Iterators$EmptyModifiableIterator INSTANCE
com.umeng.commonsdk.statistics.c: java.lang.String p
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportByInterval: long mReportInterval
com.caij.puremusic.drive.model.JellyfinFolder: java.lang.String Name
com.umeng.analytics.pro.ah: boolean a
com.google.android.gms.internal.play_billing.zzcj: java.lang.Class zzl
org.jaudiotagger.audio.dsf.ID3Chunk: java.nio.ByteBuffer dataBuffer
kotlin.SafePublicationLazyImpl: java.lang.Object _value
org.jaudiotagger.audio.mp4.ChunkReader: org.jcodec.containers.mp4.boxes.SampleToChunkBox$SampleToChunkEntry[] sampleToChunk
com.umeng.analytics.pro.d: java.lang.String z
com.umeng.analytics.pro.e$d$a: java.lang.String a
com.tencent.bugly.crashreport.crash.CrashDetailBean: int U
com.tencent.mm.opensdk.modelbiz.WXChannelOpenEvent$Req: java.lang.String TAG
com.caij.puremusic.db.model.Artist: long id
com.umeng.commonsdk.config.d$c: com.umeng.commonsdk.config.d$c s
org.simpleframework.xml.core.MethodContact: java.lang.String name
com.tencent.mm.opensdk.diffdev.a.d: com.tencent.mm.opensdk.diffdev.a.d e
org.jcodec.containers.mp4.boxes.VideoMediaHeaderBox: int graphicsMode
com.umeng.commonsdk.utils.c: int e
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_HW_SW_SETTINGS
com.umeng.analytics.pro.cj: int e
org.simpleframework.xml.core.PrimitiveKey: org.simpleframework.xml.core.Entry entry
org.jaudiotagger.tag.id3.ID3v24Tag: boolean experimental
org.jaudiotagger.audio.asf.data.AsfHeader: java.nio.charset.Charset ASF_CHARSET
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey ARTISTS_SORT
org.simpleframework.xml.core.ElementMapUnionParameter: java.lang.Object key
io.ktor.util.date.Month: io.ktor.util.date.Month OCTOBER
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean marginTopSystemWindowInsets
org.jaudiotagger.tag.id3.AbstractID3v1Tag: java.lang.String TYPE_GENRE
org.jaudiotagger.audio.asf.io.EncodingChunkReader: org.jaudiotagger.audio.asf.data.GUID[] APPLYING
org.jaudiotagger.audio.ogg.util.OggCRCFactory: long[] crc_lookup
com.caij.vip.Activation: java.util.Date createdAt
org.jaudiotagger.tag.aiff.AiffTagFieldKey: org.jaudiotagger.tag.aiff.AiffTagFieldKey TIMESTAMP
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey COMMENT
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_SYNC_TEMPO
androidx.constraintlayout.core.widgets.ConstraintAnchor$Type: androidx.constraintlayout.core.widgets.ConstraintAnchor$Type CENTER_X
com.alipay.apmobilesecuritysdk.e.b: java.lang.String c
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP4_CANNOT_FIND_AUDIO
org.jaudiotagger.audio.iff.ChunkHeader: int CHUNK_HEADER_SIZE
org.jcodec.containers.mp4.boxes.TrackExtendsBox: int trackId
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String WIFI
org.jaudiotagger.tag.TagOptionSingleton: java.util.HashMap keywordMap
com.tencent.bugly.crashreport.crash.CrashDetailBean: java.lang.String N
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_REVERB
com.umeng.commonsdk.framework.UMModuleRegister: java.lang.String ANALYTICS
org.jaudiotagger.tag.mp4.Mp4FieldKey: java.lang.String identifier
org.simpleframework.xml.core.TreeModel: org.simpleframework.xml.core.Label list
com.umeng.commonsdk.vchannel.a: java.lang.String c
kotlin.io.FileWalkDirection: kotlin.io.FileWalkDirection[] $VALUES
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey ALBUM_ARTIST_SORT
com.umeng.analytics.a: long h
com.tencent.bugly.proguard.aa: long a
com.tencent.mm.opensdk.modelmsg.GetMessageFromWX$Resp: com.tencent.mm.opensdk.modelmsg.WXMediaMessage message
org.jcodec.containers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox: long baseMediaDecodeTime
com.google.common.collect.AbstractIterator$State: com.google.common.collect.AbstractIterator$State FAILED
org.jaudiotagger.audio.flac.FlacTagCreator: org.jaudiotagger.tag.vorbiscomment.VorbisCommentCreator creator
com.caij.puremusic.drive.model.BaiduDriveItem: java.lang.String dlink
com.umeng.analytics.pro.a$a: int g
com.alipay.android.app.IAlixPay$Stub: int TRANSACTION_getVersion
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: java.util.logging.Logger logger
com.umeng.commonsdk.stateless.UMSLEnvelopeBuild$1: android.content.Context a
org.jaudiotagger.audio.asf.io.RandomAccessFileInputstream: java.io.RandomAccessFile source
com.umeng.analytics.process.UMProcessDBHelper$a: java.lang.String b
com.tencent.mm.opensdk.modelmsg.SendAuth$Resp: java.lang.String lang
com.umeng.analytics.vshelper.b: int b
nl.adaptivity.xmlutil.EventType: nl.adaptivity.xmlutil.EventType END_DOCUMENT
com.umeng.commonsdk.vchannel.b: java.lang.String a
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey CATALOG_NO
com.alipay.sdk.m.j.c: com.alipay.sdk.m.j.c g
com.umeng.analytics.pro.d: java.lang.String A
com.umeng.commonsdk.statistics.b: java.lang.String b
com.umeng.commonsdk.debug.UMLogCommon: java.lang.String SC_10023
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b w
org.simpleframework.xml.core.ElementMapUnionParameter: org.simpleframework.xml.core.Label label
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey TAGS
org.jaudiotagger.tag.id3.framebody.FrameBodyASPI: int DATA_START_FIELD_SIZE
org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistReadOptions: org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistReadOptions READ_JRIVER_THEN_ALBUMARTIST
com.umeng.analytics.pro.e$c$b: java.lang.String b
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MUSICBRAINZ_RELEASE_GROUP_ID
com.caij.puremusic.db.model.ServerSongCoverQueries$deleteSongBySource$1: long $sourceId
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier SGPD
org.jaudiotagger.audio.asf.util.ChunkPositionComparator: long serialVersionUID
org.jaudiotagger.audio.mp3.VbriFrame: int BYTE_2
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey URL_WIKIPEDIA_ARTIST_SITE
com.caij.puremusic.db.model.SongEntityQueries$GetPlaylistLastAddSongQuery: com.caij.puremusic.db.model.SongEntityQueries this$0
org.simpleframework.xml.stream.DocumentReader: org.simpleframework.xml.stream.NodeExtractor queue
com.thegrizzlylabs.sardineandroid.model.Ace: com.thegrizzlylabs.sardineandroid.model.Principal principal
com.umeng.commonsdk.internal.utils.e$a: com.umeng.commonsdk.internal.utils.e$a[] c
org.jcodec.containers.mp4.boxes.MovieHeaderBox: long modified
com.tencent.mm.opensdk.modelpay.PayReq$Options: int INVALID_FLAGS
kotlinx.serialization.json.JsonElement: kotlinx.serialization.json.JsonElement$Companion Companion
com.google.common.reflect.TypeToken$TypeFilter: com.google.common.reflect.TypeToken$TypeFilter INTERFACE_ONLY
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier TSEL
com.google.android.exoplayer2.metadata.icy.IcyInfo: android.os.Parcelable$Creator CREATOR
com.caij.puremusic.db.model.SongQueries$SongsByNameArtistQuery: com.caij.puremusic.db.model.SongQueries this$0
com.tencent.bugly.BuglyStrategy: boolean j
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey ARTISTS
com.caij.puremusic.db.model.ServerAudioFormatQueries$GetByIdQuery: com.caij.puremusic.db.model.ServerAudioFormatQueries this$0
com.tencent.bugly.proguard.g: int h
com.umeng.analytics.a: int d
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier RATING
com.umeng.commonsdk.statistics.common.a$a: java.lang.String a
com.umeng.commonsdk.utils.d: java.lang.String V
io.ktor.websocket.CloseReason$Codes: io.ktor.websocket.CloseReason$Codes[] $VALUES
org.jaudiotagger.tag.wav.WavTag: java.util.logging.Logger logger
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey LYRICS_SYNCHRONISED
com.umeng.commonsdk.statistics.proto.e$e: com.umeng.commonsdk.statistics.proto.e$e b
com.tencent.mm.opensdk.constants.Build: int NON_TAX_PAY_SDK_INT
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey CDDB_TRACKNUMBER
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MOOD
com.alipay.android.app.IAlixPay$Stub: int TRANSACTION_Pay
com.caij.puremusic.drive.model.Metadata: java.lang.String grandparentKey
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier MERE
com.umeng.commonsdk.utils.a: boolean d
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgramEnvironment$Req: java.lang.String TAG
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey SINGLE_DISC_TRACK_NO
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey INVOLVED_PERSON
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country ANDORRA
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: java.util.Map lookup
com.caij.vip.PayBody: int source
com.google.android.material.bottomsheet.BottomSheetBehavior: int state
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: byte audioChannels
com.tencent.bugly.proguard.aa: java.util.Map ao
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies: com.google.common.util.concurrent.CycleDetectingLockFactory$Policies[] $VALUES
com.umeng.commonsdk.utils.d: java.lang.String c
org.jaudiotagger.tag.id3.TyerTdatAggregatedFrame: java.lang.String ID_TYER_TDAT
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
com.caij.puremusic.drive.model.DriveFile: boolean isDirectory
androidx.fragment.app.Fragment: int mContainerId
com.caij.puremusic.drive.model.Response$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_WORK_PART_LEVEL6_TYPE
com.umeng.analytics.pro.am: java.lang.String av
com.umeng.analytics.pro.y: com.umeng.analytics.pro.y c
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason PAYLOAD_TOO_BIG
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: int FIELD_AUDIO_CHANNELS_POS
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int LAYER_II
com.tencent.bugly.proguard.aj: com.tencent.bugly.proguard.ah n
com.alipay.android.phone.mrpc.core.l: long e
com.google.android.material.bottomsheet.BottomSheetBehavior: int maxWidth
org.jaudiotagger.tag.id3.ID3v24Tag: int MASK_V24_FRAME_UNSYNCHRONIZATION
com.caij.puremusic.drive.model.PlexAlbumsResponse$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.umeng.commonsdk.statistics.UMErrorCode: int E_UM_BE_NOT_MAINPROCESS
com.caij.puremusic.drive.model.Metadata: java.lang.String parentKey
org.simpleframework.xml.core.CompositeValue: org.simpleframework.xml.core.Traverser root
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String WORK
com.umeng.analytics.filter.d: boolean e
com.umeng.analytics.pro.j: java.lang.String ac
org.jaudiotagger.tag.TagOptionSingleton: boolean isWriteWavForTwonky
com.caij.puremusic.drive.model.Collection$$serializer: com.caij.puremusic.drive.model.Collection$$serializer INSTANCE
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_PRELOAD_MINI_PROGRAM
com.tencent.mm.opensdk.modelmsg.WXMiniProgramObject: java.lang.String TAG
com.tencent.bugly.CrashModule: int MODULE_ID
com.caij.vip.GoodOrder: java.lang.String goodId
com.umeng.analytics.pro.am: java.lang.String C
com.umeng.commonsdk.framework.UMModuleRegister: int SHARE_EVENT_VALUE_HIGH
com.tencent.mm.opensdk.modelmsg.WXWeWorkObject: java.lang.String TAG
org.jaudiotagger.tag.id3.ID3v23Frame$StatusFlags: java.lang.String TYPE_TAGALTERPRESERVATION
org.simpleframework.xml.core.FieldContact: java.lang.reflect.Field field
com.caij.puremusic.drive.model.SongItem: java.util.List MediaStreams
com.umeng.commonsdk.statistics.b: int k
org.jaudiotagger.audio.flac.FlacTagWriter$MetadataBlockInfo: java.util.List metadataBlockSeekTable
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier JP2C
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: int minBlockSize
com.google.android.gms.internal.play_billing.zzfb: com.google.android.gms.internal.play_billing.zzfj zzf
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: org.jaudiotagger.audio.aiff.chunk.AiffCompressionType ULAW
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey CONDUCTOR_SORT
com.tencent.mm.opensdk.modelpay.PayReq: java.lang.String appId
org.simpleframework.xml.core.AttributeLabel: java.lang.Class type
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey TITLE
org.jaudiotagger.audio.wav.chunk.WavInfoChunk: org.jaudiotagger.tag.wav.WavInfoTag wavInfoTag
com.umeng.analytics.pro.an: java.lang.String h
com.caij.puremusic.model.UpdateInfo: long createTime
com.tencent.mmkv.MMKVRecoverStrategic: com.tencent.mmkv.MMKVRecoverStrategic[] $VALUES
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: int width
org.jaudiotagger.audio.aiff.AiffFileHeader: java.lang.String FORM
com.tencent.bugly.proguard.bv: java.lang.String c
com.tencent.bugly.crashreport.crash.CrashDetailBean: java.lang.String c
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
com.umeng.analytics.pro.cb: byte c
com.umeng.analytics.pro.j: java.lang.String k
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean ignoreEvents
com.google.android.gms.internal.play_billing.zzby: com.google.android.gms.internal.play_billing.zzbs zzb
com.caij.puremusic.model.Contributor: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MEDIA
com.umeng.commonsdk.statistics.common.MLog: java.lang.String TAG
org.jaudiotagger.audio.mp3.MPEGFrameHeader: java.util.Map modeExtensionMap
com.umeng.analytics.pro.am: java.lang.String W
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: com.tencent.bugly.crashreport.crash.jni.NativeExceptionHandler f
org.jaudiotagger.tag.id3.ID3v24Frame$StatusFlags: int MASK_TAG_ALTER_PRESERVATION
androidx.fragment.app.Fragment: java.lang.String mTargetWho
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier STSH
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind ALAW_AUDIO
org.simpleframework.xml.core.CacheLabel: java.lang.annotation.Annotation annotation
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MUSICBRAINZ_WORK_COMPOSITION_ID
org.jaudiotagger.audio.ogg.OggVorbisCommentTagCreator: org.jaudiotagger.tag.vorbiscomment.VorbisCommentCreator creator
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey ISRC
com.umeng.analytics.pro.l: java.util.Map h
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_URL_OFFICIAL_RADIO
io.ktor.websocket.FrameType: io.ktor.websocket.FrameType PING
com.tencent.bugly.crashreport.biz.UserInfoBean: long h
org.jaudiotagger.tag.id3.ID3v24Tag: int paddingSize
org.jcodec.containers.mp4.boxes.TrackHeaderBox: int trackId
com.tencent.bugly.proguard.bf: java.lang.String e
com.umeng.analytics.pro.e$a$a: java.lang.String b
com.tencent.mm.opensdk.modelmsg.WXGameVideoFileObject: java.lang.String TAG
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script CHAM
com.umeng.analytics.pro.an: com.umeng.analytics.pro.bp n
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_SEEK
com.tencent.mm.opensdk.modelbiz.SubscribeMessage$Resp: int scene
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_COPYRIGHTINFO
com.thegrizzlylabs.sardineandroid.model.Prop: java.lang.String getetag
com.google.android.material.bottomsheet.BottomSheetBehavior: float hideFriction
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: com.umeng.commonsdk.statistics.idtracking.ImprintHandler$a h
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MOOD_VALENCE
app.cash.sqldelight.BaseTransacterImpl: app.cash.sqldelight.db.SqlDriver driver
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b v
com.thegrizzlylabs.sardineandroid.model.Principal: com.thegrizzlylabs.sardineandroid.model.All all
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.lang.String TYPE_FILEREADSIZE
org.jaudiotagger.tag.TagOptionSingleton: byte timeStampFormat
org.jaudiotagger.audio.mp3.VbriFrame: int BYTE_1
com.caij.puremusic.drive.model.EmbyFoldersResponse: java.util.List Items
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script THAANA
com.caij.puremusic.helper.BackupContent: com.caij.puremusic.helper.BackupContent CUSTOM_ARTIST_IMAGES
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_URL_COMMERCIAL
com.caij.puremusic.drive.model.AlbumSubsonicResponse: com.caij.puremusic.drive.model.AlbumSubsonicResponse$Companion Companion
com.alipay.apmobilesecuritysdk.face.APSecuritySdk: com.alipay.apmobilesecuritysdk.face.APSecuritySdk a
org.simpleframework.xml.core.CacheParameter: boolean attribute
com.umeng.umzid.ZIDManager$a: com.umeng.umzid.ZIDManager c
com.umeng.analytics.pro.i: android.content.Context d
com.tencent.bugly.proguard.k$a: byte a
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey TITLE
com.caij.vip.GoodOrder: long createTime
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_RECOMMENDED_BUFFER_SIZE
com.caij.puremusic.drive.model.DropboxDriveItem: java.lang.String client_modified
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] $VALUES
com.alipay.android.phone.mrpc.core.l: java.util.concurrent.ThreadPoolExecutor c
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country COLOMBIA
com.caij.puremusic.db.model.AlbumQueries$AlbumQuery$execute$1: com.caij.puremusic.db.model.AlbumQueries$AlbumQuery this$0
com.umeng.analytics.AnalyticsConfig: java.lang.String mWrapperVersion
com.umeng.analytics.pro.o$c: int b
org.jcodec.containers.mp4.Boxes: java.util.Map mappings
com.caij.puremusic.drive.model.BaiduFileResponse$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_HW_SW_SETTINGS
com.caij.puremusic.drive.model.Type: boolean active
org.jaudiotagger.tag.id3.AbstractID3v1Tag: int FIELD_GENRE_POS
com.tencent.mm.opensdk.modelbiz.WXQRCodePay$Req: java.lang.String codeContent
org.jaudiotagger.tag.reference.Tagger: org.jaudiotagger.tag.reference.Tagger JAIKOZ
org.jaudiotagger.tag.vorbiscomment.VorbisCommentReader: int FIELD_VENDOR_STRING_POS
io.ktor.util.date.Month: io.ktor.util.date.Month AUGUST
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType MOBILE
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int MASK_MP3_HOME
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState BLOCKING
org.simpleframework.xml.strategy.Reference: java.lang.Object value
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_LAUNCH_BY_WX
org.simpleframework.xml.core.ConstructorScanner: java.util.List signatures
com.tencent.bugly.proguard.t: java.lang.String e
com.google.android.material.bottomsheet.BottomSheetBehavior: int lastStableState
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_FINDER_OPEN_LIVE
org.jaudiotagger.audio.wav.chunk.WavFormatChunk: org.jaudiotagger.audio.wav.WavSubFormat wsf
com.caij.vip.AppGood: long expires
org.simpleframework.xml.util.Dictionary: org.simpleframework.xml.util.Dictionary$Table map
com.google.android.gms.internal.play_billing.zzew: com.google.android.gms.internal.play_billing.zzew zzn
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: int height
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype COMBINED
com.umeng.analytics.process.UMProcessDBHelper$1: com.umeng.analytics.process.UMProcessDBHelper a
androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType GIF
com.tencent.bugly.proguard.bq: java.lang.String t
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String ORCHESTRA
com.tencent.bugly.proguard.ai: long g
com.google.common.hash.BloomFilterStrategies: com.google.common.hash.BloomFilterStrategies MURMUR128_MITZ_32
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey CLASSICAL_CATALOG
com.alipay.android.phone.mrpc.core.ad: java.lang.String a
com.caij.puremusic.drive.model.EmbyFoldersResponse: com.caij.puremusic.drive.model.EmbyFoldersResponse$Companion Companion
com.tencent.bugly.proguard.ai: com.tencent.bugly.proguard.ah a
org.jcodec.containers.mp4.boxes.ColorExtension: short matrixIndex
com.google.android.gms.internal.play_billing.zzex: com.google.android.gms.internal.play_billing.zzex zzd
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script MONGOLIAN
com.tencent.bugly.proguard.br: java.lang.String f
com.umeng.analytics.pro.am: java.lang.String t
com.caij.puremusic.drive.model.PlayListItem: java.lang.String LocationType
org.jaudiotagger.tag.id3.valuepair.TextEncoding: byte UTF_16BE
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
org.jaudiotagger.tag.id3.ID3v11Tag: int FIELD_COMMENT_POS
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICIP_PUID
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_TRACK
com.umeng.analytics.pro.o: long k
com.umeng.commonsdk.statistics.c: com.umeng.commonsdk.statistics.noise.Defcon k
com.google.android.material.bottomsheet.BottomSheetBehavior: int lastNestedScrollDy
org.jaudiotagger.audio.asf.data.StreamBitratePropertiesChunk: java.util.List bitRates
com.caij.puremusic.db.model.SongQueries$SongsByArtistIdWithLikeQuery$execute$1: com.caij.puremusic.db.model.SongQueries$SongsByArtistIdWithLikeQuery this$0
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey ALBUM_ARTIST_SORT
com.thegrizzlylabs.sardineandroid.model.PrincipalCollectionSet: java.lang.String href
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: org.jaudiotagger.audio.aiff.chunk.AiffCompressionType RAW
org.jaudiotagger.audio.asf.data.GUID: org.jaudiotagger.audio.asf.data.GUID GUID_UNSPECIFIED
com.caij.puremusic.drive.model.Resourcetype: com.caij.puremusic.drive.model.Collection collection
org.jaudiotagger.tag.id3.ID3v23Frame$StatusFlags: int MASK_READ_ONLY
com.tencent.mm.opensdk.modelbiz.JoinChatroom$Req: java.lang.String groupId
org.jaudiotagger.tag.id3.ID3Frames: java.util.Map convertv24Tov23
com.tencent.mm.opensdk.modelpay.PayReq: com.tencent.mm.opensdk.modelpay.PayReq$Options options
com.umeng.analytics.pro.o: java.lang.String o
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey PERFORMER
com.thegrizzlylabs.sardineandroid.model.Lockentry: com.thegrizzlylabs.sardineandroid.model.Lockscope lockscope
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey WORK_TYPE
com.google.android.gms.internal.play_billing.zza: com.google.android.gms.internal.play_billing.zza zzj
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzN
com.caij.puremusic.drive.model.PlayListsSubsonicResponse: com.caij.puremusic.drive.model.PlayListsSubsonicResponse$Companion Companion
com.umeng.analytics.pro.d: java.lang.String Q
com.caij.puremusic.fragments.lyrics.ComnLyricsFragment$LyricsType: com.caij.puremusic.fragments.lyrics.ComnLyricsFragment$LyricsType NONE_LYRICS
com.caij.puremusic.drive.model.PlexUser: java.lang.String username
com.tencent.bugly.proguard.g: byte[] g
com.tencent.bugly.proguard.s: long e
org.jaudiotagger.audio.mp3.VbriFrame: int VBRI_HEADER_BUFFER_SIZE
org.simpleframework.xml.core.TextParameter: java.lang.String name
com.tencent.bugly.proguard.p: boolean e
com.tencent.bugly.proguard.at$3: boolean g
org.simpleframework.xml.core.ElementListLabel: java.lang.String name
org.simpleframework.xml.core.CompositeListUnion: org.simpleframework.xml.core.LabelMap elements
com.alipay.android.phone.mrpc.core.HttpUrlHeader: java.util.Map headers
com.caij.puremusic.db.model.SongQueries$SongsByAlumQuery: com.caij.puremusic.db.model.SongQueries this$0
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey URL_DISCOGS_RELEASE_SITE
com.umeng.commonsdk.internal.a: java.lang.String K
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier PADB
org.jaudiotagger.tag.TagOptionSingleton: boolean padNumbers
org.simpleframework.xml.strategy.Contract: java.lang.String length
org.simpleframework.xml.stream.HyphenStyle: org.simpleframework.xml.stream.Builder builder
org.simpleframework.xml.core.GetPart: org.simpleframework.xml.core.MethodType type
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey DJMIXER
org.simpleframework.xml.filter.StackFilter: java.util.Stack stack
org.jaudiotagger.tag.id3.ID3v24Tag: int MASK_V24_TEXT_FIELD_SIZE_RESTRICTIONS
com.umeng.analytics.pro.e$d$a: java.lang.String d
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier MVHD
com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport$SyncLevel: com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport$SyncLevel LEVEL_1
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_ATTACHED_PICTURE
org.jaudiotagger.tag.id3.ID3Frames: java.util.Map convertv23Tov22
com.caij.puremusic.drive.model.ImageTags: com.caij.puremusic.drive.model.ImageTags$Companion Companion
com.umeng.commonsdk.utils.UMUtils: java.lang.String SD_PERMISSION
androidx.fragment.app.Fragment: boolean mDetached
com.umeng.commonsdk.statistics.c: long l
com.tencent.bugly.proguard.at: java.lang.String j
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding[] $VALUES
com.thegrizzlylabs.sardineandroid.model.PrincipalURL: java.lang.String href
org.jaudiotagger.audio.asf.io.AsfHeaderReader: org.jaudiotagger.audio.asf.io.AsfHeaderReader TAG_READER
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: int defaultSampleSize
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int LAYER_I_FRAME_SIZE_COEFFICIENT
com.umeng.analytics.pro.o: com.umeng.analytics.pro.o$c b
org.jaudiotagger.audio.generic.AbstractTag$1: java.util.Iterator fieldsIt
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey PRODUCER
org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.strategy.Type type
com.alipay.sdk.m.j.c: com.alipay.sdk.m.j.c d
com.caij.puremusic.fragments.GridStyle: com.caij.puremusic.fragments.GridStyle Grid
org.repackage.com.vivo.identifier.IdentifierIdClient: java.lang.String z
com.tencent.bugly.proguard.at: com.tencent.bugly.proguard.av s
com.umeng.analytics.b: com.umeng.analytics.pro.v d
com.alipay.apmobilesecuritysdk.e.c: java.lang.String d
org.jaudiotagger.tag.id3.framebody.FrameBodyEncrypted: java.lang.String identifier
org.jaudiotagger.tag.TagOptionSingleton: boolean id3v1SaveArtist
com.caij.puremusic.fragments.NowPlayingScreen: com.caij.puremusic.fragments.NowPlayingScreen Card
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey OCCASION
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script BATAK
com.umeng.commonsdk.internal.utils.c$a: com.umeng.commonsdk.internal.utils.c a
com.umeng.commonsdk.statistics.UMErrorCode: int E_UM_BE_JSON_FAILED
com.tencent.bugly.proguard.t: long a
org.jcodec.containers.mp4.boxes.MovieHeaderBox: int timescale
org.simpleframework.xml.core.Structure: org.simpleframework.xml.core.Label text
org.jaudiotagger.tag.reference.MusicalKey: org.jaudiotagger.tag.reference.MusicalKey NOTE_E
org.simpleframework.xml.core.Introspector: org.simpleframework.xml.core.Contact contact
com.alipay.android.phone.mrpc.core.z: byte c
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier OCHD
org.simpleframework.xml.stream.Formatter: char[] NAMESPACE
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_WORK_PART_LEVEL5_TYPE
io.ktor.utils.io.internal.JoiningState: int closed
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MOOD_RELAXED
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MUSICBRAINZ_WORK_PART_LEVEL3_ID
org.simpleframework.xml.core.LabelGroup: int size
com.umeng.analytics.pro.am: java.lang.String U
com.umeng.commonsdk.debug.UMLog: int KEYLENGTH
com.umeng.analytics.process.a$a: java.lang.String d
com.caij.puremusic.network.model.SearchResponse: com.caij.puremusic.network.model.ArtistWrapper tracks
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey SUBTITLE
org.jaudiotagger.tag.aiff.AiffTagFieldKey: org.jaudiotagger.tag.aiff.AiffTagFieldKey[] $VALUES
org.jaudiotagger.tag.id3.ID3v23Frame$EncodingFlags: java.lang.String TYPE_COMPRESSION
com.umeng.commonsdk.config.d$c: com.umeng.commonsdk.config.d$c j
com.umeng.analytics.pro.j: java.lang.String b
org.jaudiotagger.tag.id3.valuepair.ReceivedAsTypes: int RECEIVED_AS_FIELD_SIZE
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MIXER
com.tencent.bugly.proguard.aa: byte b
com.thegrizzlylabs.sardineandroid.impl.SardineException: java.lang.String responsePhrase
com.caij.puremusic.model.UpdateInfo: int type
com.umeng.analytics.pro.bo: com.umeng.analytics.pro.bz d
com.umeng.analytics.pro.aa: com.umeng.analytics.pro.z a
com.tencent.bugly.proguard.at: com.tencent.bugly.proguard.as r
org.jaudiotagger.tag.id3.ID3v1Tag: java.lang.String title
com.umeng.analytics.process.UMProcessDBHelper$a: java.lang.String g
com.thegrizzlylabs.sardineandroid.model.Prop: com.thegrizzlylabs.sardineandroid.model.Lockdiscovery lockdiscovery
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier PAEN
org.jaudiotagger.audio.aiff.AiffAudioHeader: org.jaudiotagger.audio.aiff.AiffAudioHeader$Endian endian
com.umeng.analytics.pro.e$d$a: java.lang.String j
com.thegrizzlylabs.sardineandroid.model.Lockentry: com.thegrizzlylabs.sardineandroid.model.Locktype locktype
com.umeng.analytics.pro.ao: java.lang.String d
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier ALBM
com.caij.puremusic.model.CategoryInfo$Category: int icon
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: org.jaudiotagger.audio.aiff.chunk.AiffCompressionType alaw
com.umeng.commonsdk.statistics.proto.c: com.umeng.commonsdk.statistics.proto.c$e[] k
org.jaudiotagger.tag.id3.ID3v24Frame$StatusFlags: java.lang.String TYPE_READONLY
org.jaudiotagger.audio.wav.WavRIFFHeader: java.lang.String RIFF_SIGNATURE
org.repackage.com.vivo.identifier.IdentifierIdClient: org.repackage.com.vivo.identifier.DataBaseOperation C
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_JUMP_BIZ_TEMPSESSION
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_COMPOSER
com.caij.puremusic.db.model.ServerArtistCoverQueries$deleteById$1: java.lang.String $id
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey ALBUMSORT
io.github.aakira.napier.LogLevel: io.github.aakira.napier.LogLevel VERBOSE
com.umeng.analytics.pro.j: java.lang.String j
com.thegrizzlylabs.sardineandroid.model.Principal: java.lang.String href
org.jaudiotagger.audio.mp3.VbriFrame: java.nio.ByteBuffer header
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey SUBTITLE
com.umeng.analytics.pro.bn: int a
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey TITLE_MOVEMENT
org.jaudiotagger.audio.asf.data.AsfHeader: byte[] ZERO_TERM
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country LIBYAN_ARAB_JAMAHIRIYA
nl.adaptivity.xmlutil.EventType: nl.adaptivity.xmlutil.EventType ATTRIBUTE
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country GAMBIA
com.umeng.commonsdk.statistics.proto.c$e: java.util.Map d
org.simpleframework.xml.util.WeakCache$SegmentList: int size
com.umeng.commonsdk.vchannel.a: java.lang.String j
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.umeng.analytics.a: int g
com.umeng.analytics.pro.bt: byte c
javax.xml.namespace.QName: java.lang.String prefix
com.thegrizzlylabs.sardineandroid.model.Principal: com.thegrizzlylabs.sardineandroid.model.Unauthenticated unauthenticated
com.tencent.mm.opensdk.modelbiz.WXChannelOpenEvent$Req: java.lang.String extInfo
com.caij.puremusic.util.theme.ThemeMode: com.caij.puremusic.util.theme.ThemeMode DARK
com.umeng.analytics.pro.d: java.lang.String T
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status FATAL_ERROR
com.umeng.analytics.pro.e$c$a: java.lang.String d
com.alipay.android.phone.mrpc.core.o: java.util.Map f
org.jaudiotagger.audio.asf.data.AudioStreamChunk: long WMA_LOSSLESS
org.jaudiotagger.audio.ogg.util.OggPageHeader: int MAXIMUM_PAGE_SIZE
com.tencent.mm.opensdk.modelbiz.WXChannelOpenEvent$Req: java.lang.String eventId
org.jcodec.containers.mp4.boxes.ClipRegionBox: short width
com.umeng.commonsdk.statistics.idtracking.Envelope: java.lang.String mAddress
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean peekHeightAuto
org.jcodec.containers.mp4.boxes.ChannelBox: org.jcodec.containers.mp4.boxes.ChannelBox$ChannelDescription[] descriptions
com.tencent.bugly.proguard.at: boolean e
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType INT_TYPE
com.umeng.analytics.pro.e$d$b: java.lang.String d
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_WORK_COMPOSITION
com.umeng.analytics.pro.j: java.lang.String U
com.umeng.analytics.pro.am: java.lang.String w
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey ISRC
com.umeng.analytics.pro.l$1: com.umeng.analytics.pro.l a
com.caij.puremusic.db.model.SongQueries$SongsByArtistIdWithLikeQuery: java.lang.String artistId_
org.jaudiotagger.tag.datatype.AbstractIntStringValuePair: java.lang.Integer key
com.tencent.mm.opensdk.modelmsg.WXMusicVideoObject: int duration
com.caij.puremusic.db.model.SongQueries$songsByTitle$1: kotlin.jvm.functions.Function18 $mapper
com.umeng.analytics.pro.o$a: int i
com.google.android.material.navigation.NavigationBarView$SavedState: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey LANGUAGE
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage GENERAL_READ_FAILED_DO_NOT_HAVE_PERMISSION_TO_READ_FILE
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey ACOUSTID_FINGERPRINT
com.tencent.bugly.crashreport.crash.CrashDetailBean: java.lang.String v
org.simpleframework.xml.core.CacheLabel: java.lang.Object key
com.umeng.analytics.pro.e$d$b: java.lang.String k
com.tencent.bugly.proguard.bq: java.util.Map z
org.jcodec.containers.mp4.boxes.TrackHeaderBox: short layer
org.jaudiotagger.audio.mp4.Mp4TagWriter: org.jaudiotagger.tag.mp4.Mp4TagCreator tc
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier ELST
com.tencent.mm.opensdk.modelbiz.WXInvoiceAuthInsert$Req: java.lang.String url
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: org.jaudiotagger.audio.aiff.chunk.AiffCompressionType fl32
com.thegrizzlylabs.sardineandroid.model.SyncCollection: com.thegrizzlylabs.sardineandroid.model.Limit limit
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country URUGUAY
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey CUSTOM1
com.tencent.mm.opensdk.constants.ConstantsAPI$LaunchWX: int LAUNCH_PENDING_INTENT_SEND_CODE
com.tencent.bugly.proguard.s: android.app.Application$ActivityLifecycleCallbacks k
org.jaudiotagger.audio.ogg.util.OggPageHeader: long absoluteGranulePosition
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String artist
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int MODE_MONO
org.simpleframework.xml.strategy.CycleStrategy: org.simpleframework.xml.strategy.ReadState read
com.google.android.material.bottomsheet.BottomSheetBehavior$1: android.view.View val$child
com.umeng.analytics.pro.am: java.lang.String aQ
com.caij.puremusic.model.DriveFileParcelable: long sourceId
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey ARTISTS
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script LANNA
com.umeng.commonsdk.statistics.a: java.lang.String a
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String created
com.caij.puremusic.drive.model.OneDriveFileResponse$$serializer: com.caij.puremusic.drive.model.OneDriveFileResponse$$serializer INSTANCE
org.jaudiotagger.tag.id3.valuepair.ImageFormats: java.lang.String MIME_TYPE_JPG
org.jaudiotagger.tag.id3.ID3v11Tag: int TRACK_MAX_VALUE
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier ARTIST
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey URL_LYRICS_SITE
androidx.appcompat.widget.AppCompatImageView: boolean mHasLevel
com.umeng.commonsdk.statistics.internal.StatTracer: long mLastSuccessfulRequestTime
com.google.android.material.bottomsheet.BottomSheetDialog: com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback bottomSheetCallback
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_INITIAL_KEY
com.umeng.commonsdk.internal.c$2: com.umeng.commonsdk.listener.OnGetOaidListener b
org.jaudiotagger.tag.reference.GenreTypes: org.jaudiotagger.tag.reference.GenreTypes genreTypes
com.google.android.material.bottomsheet.BottomSheetDialog$3: com.google.android.material.bottomsheet.BottomSheetDialog this$0
org.simpleframework.xml.core.Structure: org.simpleframework.xml.core.Instantiator factory
org.jaudiotagger.audio.flac.FlacTagReader: java.util.logging.Logger logger
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country BURKINA_FASO
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockHeader: int HEADER_LENGTH
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country SENEGAL
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey PART_TYPE
androidx.fragment.app.Fragment: android.os.Bundle mSavedViewRegistryState
com.umeng.commonsdk.internal.a: int h
com.thegrizzlylabs.sardineandroid.model.Prop: java.util.List any
com.umeng.common.a: java.lang.String b
com.tencent.bugly.crashreport.crash.CrashDetailBean: java.util.Map T
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey DISC_NO
org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.core.Traverser root
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier STSZ
com.tencent.mm.opensdk.modelmsg.GetMessageFromWX$Req: java.lang.String country
com.tencent.mm.opensdk.modelmsg.SendAuth$Resp: int ERR_SCOPE_SNSAPI_WXAAPP_INFO_CAN_ONLY_AUTHORIZED_SEPARATELY
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MOOD_SAD
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier EDTS
org.jaudiotagger.audio.SupportedFileFormat: org.jaudiotagger.audio.SupportedFileFormat DSF
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country UKRAINE
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country SAN_MARINO
org.jcodec.containers.mp4.boxes.SimpleBoxFactory: org.jcodec.containers.mp4.Boxes boxes
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MM_QUALITY
com.umeng.vt.diff.V: java.lang.String SP_BINDINGS_KEY
com.tencent.mm.opensdk.constants.Build: int OPENID_SUPPORTED_SDK_INT
com.alipay.apmobilesecuritysdk.a.a: com.alipay.apmobilesecuritysdk.b.a b
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_ALBUM_ARTIST_SORT_ORDER_ITUNES
com.caij.puremusic.db.model.PlaylistEntityQueries$GetPlaylistEntityByIdQuery: long playListId
org.jaudiotagger.audio.dsf.FmtChunk: long chunkSizeLength
org.jaudiotagger.tag.id3.ID3v1Tag: byte genre
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey FBPM
com.thegrizzlylabs.sardineandroid.util.SardineUtil: java.lang.String DEFAULT_NAMESPACE_URI
org.simpleframework.xml.strategy.Name: java.lang.String LENGTH
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey YEAR
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country MEXICO
org.jaudiotagger.audio.ogg.OggVorbisTagReader$OggVorbisHeaderSizes: java.util.List packetList
com.umeng.analytics.MobclickAgent$EScenarioType: int a
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MOOD_AGGRESSIVE
org.jcodec.containers.mp4.boxes.AliasBox: java.lang.String creatorName
com.umeng.commonsdk.stateless.d: int a
com.tencent.mm.opensdk.openapi.MMSharedPreferences: com.tencent.mm.opensdk.openapi.MMSharedPreferences$REditor editor
com.caij.puremusic.model.DriveFileParcelable: java.lang.String fileId
com.umeng.analytics.pro.o$a: int g
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script TAI_LE
com.caij.puremusic.drive.model.BaiduDriveItem: int isdir
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey CHOIR_SORT
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean shouldRemoveExpandedCorners
androidx.fragment.app.DialogFragment: java.lang.Runnable mDismissRunnable
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey ORCHESTRA
com.tencent.mm.opensdk.modelmsg.WXMediaMessage: java.lang.String title
com.caij.puremusic.drive.model.DropboxDriveItem: java.lang.String tag
com.tencent.mm.opensdk.diffdev.OAuthErrCode: com.tencent.mm.opensdk.diffdev.OAuthErrCode WechatAuth_Err_NormalErr
com.umeng.commonsdk.framework.UMModuleRegister: int APPSTATUS_SWITCH_HIGH
org.jaudiotagger.tag.id3.framebody.FrameBodyTIME: boolean hoursOnly
com.google.android.gms.internal.play_billing.zzew: com.google.android.gms.internal.play_billing.zzew zzl
com.caij.puremusic.fragments.GridStyle: com.caij.puremusic.fragments.GridStyle Circular
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP3_RECALCULATED_START_OF_MP3_AUDIO
com.tencent.bugly.proguard.br: java.util.Map h
com.google.android.material.bottomsheet.BottomSheetBehavior: int STATE_HALF_EXPANDED
com.umeng.analytics.b: org.json.JSONObject m
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey DISCSUBTITLE
com.umeng.analytics.pro.bo$b: byte f
org.jaudiotagger.tag.reference.MusicalKey: java.util.HashMap halfKeyMap
com.umeng.analytics.pro.j: java.lang.String l
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey ORIGINAL_ALBUM
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector YEAR
org.jaudiotagger.audio.aiff.chunk.AiffChunkType: org.jaudiotagger.audio.aiff.chunk.AiffChunkType NAME
org.jaudiotagger.audio.mp3.VbriFrame: boolean vbr
com.caij.puremusic.drive.model.SubsonicAlbum: java.util.List song
com.tencent.mm.opensdk.modelbiz.WXLaunchWxaRedirectingPage$Req: java.lang.String callbackActivity
org.jaudiotagger.audio.asf.data.FileHeader: java.math.BigInteger timeEndPos
org.simpleframework.xml.core.CompositeMapUnion: org.simpleframework.xml.core.LabelMap elements
org.jcodec.containers.mp4.boxes.AliasBox: short recordSize
com.umeng.commonsdk.statistics.idtracking.a: java.util.List d
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String parent
com.caij.puremusic.db.model.PlaybackSongQueries$GetPlaybacksByTypeQuery$execute$1: com.caij.puremusic.db.model.PlaybackSongQueries this$0
com.tencent.bugly.proguard.bo: java.util.Map v
org.simpleframework.xml.core.CacheLabel: java.lang.String[] names
com.caij.puremusic.drive.model.Directory$$serializer: com.caij.puremusic.drive.model.Directory$$serializer INSTANCE
org.jaudiotagger.audio.ogg.VorbisVersion: java.lang.String displayName
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MOOD_ACOUSTIC
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey CONDUCTOR_SORT
com.tencent.mm.opensdk.constants.ConstantsAPI$WXApp: java.lang.String WXAPP_PACKAGE_NAME
com.umeng.analytics.pro.an: com.umeng.analytics.pro.bp u
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey WORK_PARTOF_LEVEL3_TYPE
com.google.android.material.bottomsheet.BottomSheetDialog: androidx.coordinatorlayout.widget.CoordinatorLayout coordinator
org.jaudiotagger.tag.lyrics3.Lyrics3v2Fields: java.lang.String FIELD_V2_ARTIST
com.thegrizzlylabs.sardineandroid.model.Inherited: java.lang.String href
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey GROUPING
com.tencent.mm.opensdk.modelpay.JumpToOfflinePay$Req: java.lang.String TAG
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_MOVEMENT
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey ORCHESTRA
com.caij.puremusic.db.model.SongQueries$SongsByInfoQuery: com.caij.puremusic.db.model.SongQueries this$0
org.simpleframework.xml.core.CompositeMap: org.simpleframework.xml.core.Converter value
org.jaudiotagger.audio.generic.GenericAudioHeader: java.lang.Integer samplingRate
com.caij.puremusic.drive.model.ArtistItem$$serializer: com.caij.puremusic.drive.model.ArtistItem$$serializer INSTANCE
com.alipay.apmobilesecuritysdk.e.i: java.lang.String e
org.jcodec.containers.mp4.boxes.CompositionOffsetsBox: org.jcodec.containers.mp4.boxes.CompositionOffsetsBox$Entry[] entries
com.google.common.hash.Hashing$ChecksumType: com.google.common.hash.Hashing$ChecksumType[] $VALUES
com.tencent.mm.opensdk.modelbase.BaseResp$ErrCode: int ERR_SENT_FAILED
org.simpleframework.xml.core.EmptyExpression: java.util.List list
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL6_TYPE
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$PreorderEnumeration: java.util.Stack stack
org.jaudiotagger.tag.TagOptionSingleton: java.util.HashMap lyrics3SaveFieldMap
com.tencent.mm.opensdk.modelmsg.WXWeWorkObject: byte[] data
org.jaudiotagger.tag.images.StandardArtwork: byte[] binaryData
org.jaudiotagger.tag.id3.ID3v24Tag: int MASK_V24_COMPRESSION
org.simpleframework.xml.core.FieldDetail: java.lang.annotation.Annotation[] list
org.jaudiotagger.tag.datatype.NumberVariableLength: int MINIMUM_NO_OF_DIGITS
org.jaudiotagger.audio.mp4.ChunkWriter: org.jaudiotagger.utils.IntArrayList sampleSizes
org.jaudiotagger.tag.id3.AbstractID3v1Tag: int FIELD_ARTIST_LENGTH
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MOOD_RELAXED
com.caij.puremusic.drive.model.ADriveItem: java.lang.String name
com.umeng.analytics.pro.ab: android.content.Context g
com.tencent.mm.opensdk.diffdev.a.b$a: java.lang.String d
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey TEMPO
com.alipay.android.phone.mrpc.core.z: java.lang.ThreadLocal b
org.jaudiotagger.tag.mp4.field.Mp4TagReverseDnsField: java.lang.String issuer
com.umeng.commonsdk.statistics.common.a$a: boolean b
org.jaudiotagger.audio.iff.ChunkHeader: java.nio.ByteOrder byteOrder
com.tencent.mm.opensdk.modelmsg.WXMediaMessage: int TITLE_LENGTH_LIMIT
com.tencent.bugly.proguard.at$3: com.tencent.bugly.proguard.at h
com.tencent.bugly.proguard.bg: int f
com.tencent.bugly.crashreport.CrashReport: android.content.Context a
com.google.android.material.textfield.TextInputLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.umeng.analytics.pro.cb: byte e
com.umeng.analytics.pro.e$d$b: java.lang.String i
com.caij.puremusic.drive.model.ArtistItem: java.lang.Long RunTimeTicks
org.jaudiotagger.utils.tree.DefaultTreeModel: org.jaudiotagger.utils.tree.TreeNode root
com.tencent.mm.opensdk.modelbiz.WXChannelBaseJumpInfo: java.lang.String wording
org.jaudiotagger.tag.datatype.Pair: java.lang.Object value
org.simpleframework.xml.core.TreeModel: java.lang.String prefix
org.simpleframework.xml.core.ElementListUnionParameter: java.lang.String name
org.simpleframework.xml.core.AnnotationHandler: java.lang.String EQUAL
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage GENERAL_WRITE_FAILED_TO_MODIFY_TEMPORARY_FILE_IN_FOLDER
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$Req: com.tencent.mm.opensdk.modelmsg.SendMessageToWX$IWXSceneDataObject sceneDataObject
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey WORK_PART_LEVEL3_TYPE
com.tencent.mm.opensdk.diffdev.OAuthErrCode: int code
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script PAHAWH_HMONG
org.jaudiotagger.tag.images.AndroidArtwork: boolean isLinked
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_OWNERSHIP
org.jaudiotagger.tag.mp4.Mp4ContentTypeValue: java.lang.String description
com.tencent.bugly.crashreport.common.strategy.StrategyBean: long e
com.caij.puremusic.db.model.SongQueries$firstSongByAlbumId$2: com.caij.puremusic.db.model.SongQueries$firstSongByAlbumId$2 INSTANCE
org.jaudiotagger.tag.id3.valuepair.SynchronisedLyricsContentType: int CONTENT_KEY_FIELD_SIZE
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey ACOUSTID_ID
com.tencent.bugly.proguard.at: int a
org.jaudiotagger.tag.id3.AbstractTagFrameBody: java.util.ArrayList objectList
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey TITLE_SORT
org.simpleframework.xml.core.TemplateFilter: org.simpleframework.xml.filter.Filter filter
com.umeng.analytics.process.UMProcessDBDatasSender$ConstructMessageCallback: com.umeng.analytics.process.UMProcessDBDatasSender a
com.tencent.bugly.proguard.as: com.tencent.bugly.proguard.ac e
com.caij.puremusic.fragments.AlbumCoverStyle: com.caij.puremusic.fragments.AlbumCoverStyle Flat
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey LYRICS
com.tencent.bugly.proguard.aa: java.lang.String r
com.umeng.commonsdk.framework.UMFrUtils: java.lang.Object mEnvelopeBuildTimeLock
org.jcodec.containers.mp4.boxes.Header: java.util.logging.Logger LOGGER
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MUSICBRAINZ_RELEASE_GROUP_ID
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script ORIYA
org.jaudiotagger.logging.XMLTagDisplayFormatter: java.lang.String xmlCloseStart
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_TORY
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_ID
com.umeng.commonsdk.config.d$d: com.umeng.commonsdk.config.d$d i
org.simpleframework.xml.stream.CamelCaseBuilder$Element: org.simpleframework.xml.stream.CamelCaseBuilder this$0
com.umeng.analytics.pro.v: org.json.JSONArray d
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey PERFORMER_NAME_SORT
com.umeng.analytics.pro.am: java.lang.String u
com.caij.puremusic.drive.model.ArtistItem: java.lang.String Name
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType WEBP_A
com.umeng.analytics.process.UMProcessDBHelper: android.content.Context mContext
org.simpleframework.xml.core.CompositeInlineList: org.simpleframework.xml.strategy.Type type
com.caij.puremusic.db.model.SearchAlbumResultQueries$GetByIdQuery: java.lang.String id
org.jaudiotagger.audio.opus.OpusVorbisTagWriter: org.jaudiotagger.audio.ogg.OggVorbisCommentTagCreator tc
org.jaudiotagger.audio.asf.data.ContentDescription: java.util.Set ALLOWED
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey DISCNUMBER
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: int FLAG_DEFAILT_SAMPLE_DURATION
com.umeng.analytics.pro.bp: java.lang.String a
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MUSICBRAINZ_RELEASEID
com.caij.puremusic.db.model.SongEntity: long songId
com.tencent.bugly.proguard.o: java.lang.String version
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey BPM
org.jaudiotagger.tag.id3.ID3v23Frame: int encryptionMethod
com.google.android.gms.internal.play_billing.zzew: com.google.android.gms.internal.play_billing.zzex zzt
com.caij.puremusic.db.model.ArtistQueries$SearchArtistByNameQuery: java.lang.String name
com.umeng.analytics.pro.am: java.lang.String T
com.caij.puremusic.model.smartplaylist.ShuffleAllPlaylist: android.os.Parcelable$Creator CREATOR
com.caij.puremusic.service.PlaybackLocation: com.caij.puremusic.service.PlaybackLocation LOCAL
com.thegrizzlylabs.sardineandroid.DavResource$DavProperties: java.util.Date creation
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier MEHD
com.tencent.bugly.proguard.ag$c: long c
org.jcodec.containers.mp4.BoxFactory: org.jcodec.containers.mp4.IBoxFactory audio
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_WORK_PART_LEVEL2
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MUSICIP_ID
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MOOD_PARTY
com.thegrizzlylabs.sardineandroid.DavResource: java.util.logging.Logger log
com.caij.puremusic.network.model.LastFmAlbum$Album: java.lang.String name
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_WORK_COMPOSITION_ID
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country ISLE_OF_MAN
com.tencent.mm.opensdk.utils.b: android.content.Context a
com.umeng.analytics.pro.bo$b: byte h
com.tencent.bugly.proguard.ao: com.tencent.bugly.proguard.ao$a h
com.umeng.commonsdk.debug.UMLog: java.lang.String BOTTOM_BORDER
org.jaudiotagger.audio.generic.GenericAudioHeader: java.lang.Long audioDataStartPosition
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MUSICBRAINZ_WORK_PART_LEVEL6_ID
com.umeng.commonsdk.framework.a: android.net.ConnectivityManager j
org.jaudiotagger.tag.id3.ID3v24Tag: int crcData
okhttp3.Protocol: okhttp3.Protocol HTTP_2
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier SIDX
com.umeng.analytics.pro.am: java.lang.String bm
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode FLOW_CONTROL_ERROR
org.jaudiotagger.audio.asf.data.MetadataDescriptor: int TYPE_BOOLEAN
org.jaudiotagger.tag.id3.ID3v24Frame: int FRAME_ID_SIZE
com.caij.puremusic.drive.model.Directory: com.caij.puremusic.drive.model.Directory$Companion Companion
com.google.android.material.bottomsheet.BottomSheetDialog$4: com.google.android.material.bottomsheet.BottomSheetDialog this$0
com.umeng.analytics.pro.o$a: int s
nl.adaptivity.xmlutil.core.KtXmlWriter$EscapeMode: nl.adaptivity.xmlutil.core.KtXmlWriter$EscapeMode[] $VALUES
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MM_CUSTOM_3
com.umeng.analytics.b: java.lang.String r
com.caij.puremusic.views.TopAppBarLayout$AppBarMode: com.caij.puremusic.views.TopAppBarLayout$AppBarMode[] $VALUES
org.jaudiotagger.audio.flac.FlacTagWriter$MetadataBlockInfo: java.util.List metadataBlockCueSheet
com.tencent.bugly.proguard.al: boolean c
com.alipay.android.phone.mrpc.core.RpcException: long serialVersionUID
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status FAILED
com.umeng.analytics.pro.j: java.lang.String X
com.tencent.mm.opensdk.modelmsg.WXMediaMessage: byte[] thumbData
com.caij.puremusic.db.model.SongEntityQueries$IsSongExistsInPlaylistQuery: long songId
org.simpleframework.xml.stream.InputElement: org.simpleframework.xml.stream.EventNode node
org.simpleframework.xml.core.PathParser: java.lang.String path
com.caij.puremusic.db.model.ServerSongCoverQueries$GetByIdQuery: java.lang.String id
com.tencent.mm.opensdk.modelbiz.ChooseCardFromWXCardPackage: java.lang.String TAG
com.tencent.mm.opensdk.constants.ConstantsAPI$WXMiniProgram: java.lang.String KEY_PARAMETER_INFO_LIST
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey PODCAST_KEYWORD
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey ENCODEDBY
org.jaudiotagger.audio.mp3.XingFrame: int MPEG_VERSION_2_MODE_STEREO_OFFSET
org.jcodec.containers.mp4.boxes.MetaValue: int TYPE_INT_8
org.simpleframework.xml.convert.AnnotationStrategy: org.simpleframework.xml.convert.ConverterScanner scanner
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy STRING
StatusBarLyric.API.StatusBarLyric: java.lang.String icon
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind MPEG4_AUDIO
org.simpleframework.xml.core.SessionManager$Reference: int count
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey PRODUCER
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MOOD_INSTRUMENTAL
com.caij.puremusic.db.model.ServerAudioFormatQueries$deleteById$1: long $id
com.umeng.commonsdk.statistics.internal.c: boolean g
com.caij.puremusic.drive.model.OneDriveFolder: com.caij.puremusic.drive.model.OneDriveFolder$Companion Companion
com.umeng.commonsdk.UMConfigure$BS_TYPE: com.umeng.commonsdk.UMConfigure$BS_TYPE USMS
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: java.lang.String originalID
com.tencent.bugly.proguard.br: long e
com.umeng.analytics.pro.an: com.umeng.analytics.pro.bp v
com.umeng.analytics.pro.an: int d
kotlin.io.FileWalkDirection: kotlin.io.FileWalkDirection BOTTOM_UP
org.jcodec.containers.mp4.boxes.MetaValue: int type
com.alipay.tscenter.biz.rpc.vkeydfp.request.DeviceDataReportRequest: java.lang.String pubApdid
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_OFFSET
org.simpleframework.xml.core.TemplateEngine: org.simpleframework.xml.core.Template text
com.caij.puremusic.drive.model.Response: java.lang.String status
com.umeng.commonsdk.utils.a: android.os.HandlerThread f
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.lang.String TYPE_EMPTYFRAMEBYTES
com.caij.puremusic.db.model.SongQueries$SongsByArtistIdWithLikeQuery: java.lang.String artistId___
com.umeng.analytics.pro.am: java.lang.String ak
org.jaudiotagger.tag.id3.framebody.FrameBodyPOPM: java.lang.String MEDIA_MONKEY_NO_EMAIL
org.jaudiotagger.tag.datatype.AbstractDataType: java.util.logging.Logger logger
com.umeng.analytics.pro.j: java.lang.String al
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey URL_OFFICIAL_ARTIST_SITE
com.umeng.analytics.pro.am: java.lang.String v
com.caij.puremusic.db.model.HistoryEntityQueries$insert$1: com.caij.puremusic.db.model.HistoryEntity $HistoryEntity
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource LOCAL
org.jaudiotagger.tag.id3.valuepair.ID3V2ExtendedGenreTypes: org.jaudiotagger.tag.id3.valuepair.ID3V2ExtendedGenreTypes CR
com.tencent.mm.opensdk.constants.Build: int SUPPORTED_CHANNEL_OPEN_LIVE
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country BELGIUM
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey BANNER_IMAGE
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey WORK_PART_LEVEL5_TYPE
org.jaudiotagger.audio.opus.OpusFileWriter: org.jaudiotagger.audio.opus.OpusVorbisTagWriter vtw
com.tencent.bugly.proguard.ak: java.util.concurrent.ScheduledExecutorService c
org.jaudiotagger.utils.DirectByteBufferUtils$OpenJdkReleaseStrategy: org.jaudiotagger.utils.DirectByteBufferUtils$ReleaseStrategy INSTANCE
com.google.android.material.slider.BaseSlider$SliderState: android.os.Parcelable$Creator CREATOR
com.tencent.bugly.crashreport.crash.CrashDetailBean: java.lang.String P
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: int FLAG_SAMPLE_DESCRIPTION_INDEX
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MUSICBRAINZ_TRACK_ID
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: android.os.Parcelable$Creator CREATOR
com.umeng.analytics.pro.bo: byte[] c
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MIXER
androidx.fragment.app.Fragment: int AWAITING_EXIT_EFFECTS
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_LINKED_INFO
org.jaudiotagger.tag.mp4.field.Mp4TagReverseDnsField: java.lang.String descriptor
org.jcodec.containers.mp4.boxes.NodeBox: java.util.logging.Logger LOGGER
org.jaudiotagger.tag.images.AndroidArtwork: int width
org.jaudiotagger.audio.ogg.util.OggPageHeader: int FIELD_SEGMENT_TABLE_POS
com.google.android.gms.internal.play_billing.zzfb: int zzd
com.tencent.bugly.crashreport.crash.anr.TraceFileHelper$a: java.util.Map d
com.umeng.common.AnalyticsSdkVersion: java.lang.String SDK_VERSION
com.tencent.bugly.proguard.aa: java.lang.Object av
com.tencent.mm.opensdk.modelbiz.CreateChatroom$Resp: java.lang.String extMsg
androidx.fragment.app.Fragment: boolean mHasMenu
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzd
com.umeng.analytics.b: java.lang.String B
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.test.MergeID3AndMP3Files: int failed
org.jaudiotagger.audio.ogg.util.OggPageHeader: byte[] rawHeaderData
com.bumptech.glide.load.EncodeStrategy: com.bumptech.glide.load.EncodeStrategy TRANSFORMED
com.google.common.hash.Hashing$ChecksumType: com.google.common.hash.Hashing$ChecksumType CRC_32
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MOOD
com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport: java.lang.String syncToken
com.caij.puremusic.db.model.PlaybackSong$Adapter: app.cash.sqldelight.ColumnAdapter typeAdapter
com.caij.puremusic.drive.model.FMediaContainer$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.simpleframework.xml.core.ScannerFactory: org.simpleframework.xml.util.Cache cache
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey RATING
com.tencent.bugly.crashreport.crash.CrashDetailBean: int b
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey SINGLE_DISC_TRACK_NO
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP4_UNABLE_READ_REVERSE_DNS_FIELD
com.tencent.bugly.proguard.bo: java.util.Map s
com.tencent.mm.opensdk.modelmsg.WXVideoFileObject: int FILE_SIZE_LIMIT
com.alipay.tscenter.biz.rpc.vkeydfp.request.DeviceDataReportRequest: java.lang.String apdid
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script HIRAGANA_KATAKANA
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentViewLifecycleOwner mViewLifecycleOwner
com.caij.puremusic.model.smartplaylist.AbsSmartPlaylist: int iconRes
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier CSLG
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey IS_SOUNDTRACK
com.caij.puremusic.db.model.SongQueries$songsOrderDateAdd$1: com.caij.puremusic.db.model.SongQueries this$0
com.google.android.material.search.SearchView$TransitionState: com.google.android.material.search.SearchView$TransitionState SHOWING
com.caij.puremusic.drive.model.MediaInfoWrapper: java.util.List songs
org.jaudiotagger.audio.iff.ChunkHeader: long startLocationInFile
com.google.android.gms.internal.play_billing.zzew: com.google.android.gms.internal.play_billing.zzew zzr
com.umeng.commonsdk.statistics.proto.d: long e
com.umeng.commonsdk.statistics.c: java.lang.String q
org.jaudiotagger.audio.wav.WavOptions: org.jaudiotagger.audio.wav.WavOptions READ_INFO_ONLY
org.jaudiotagger.tag.mp4.Mp4NonStandardFieldKey: org.jaudiotagger.tag.mp4.Mp4NonStandardFieldKey AAPR
org.jaudiotagger.tag.reference.MusicalKey: org.jaudiotagger.tag.reference.MusicalKey NOTE_D
com.tencent.bugly.proguard.aa: long ag
com.google.android.gms.internal.play_billing.zzcb: int zzd
com.caij.puremusic.db.model.SongQueries$getSongBySource$2: com.caij.puremusic.db.model.SongQueries$getSongBySource$2 INSTANCE
nl.adaptivity.xmlutil.XmlDeclMode: nl.adaptivity.xmlutil.XmlDeclMode Auto
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: java.lang.String date
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource RESOURCE_DISK_CACHE
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: int FIELD_AUDIO_SAMPLE_RATE_POS
com.caij.puremusic.drive.model.Metadata: int parentIndex
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier MP4A
com.umeng.analytics.pro.i$a: com.umeng.analytics.pro.i$a e
com.umeng.analytics.pro.e: java.lang.String b
nl.adaptivity.xmlutil.EventType: nl.adaptivity.xmlutil.EventType IGNORABLE_WHITESPACE
org.jaudiotagger.tag.images.StandardImageHandler: org.jaudiotagger.tag.images.StandardImageHandler instance
com.thegrizzlylabs.sardineandroid.model.Locktoken: java.lang.String href
org.jaudiotagger.tag.mp4.Mp4ContentTypeValue: org.jaudiotagger.tag.mp4.Mp4ContentTypeValue MUSIC_VIDEO
org.jaudiotagger.audio.asf.io.AsfExtHeaderModifier: java.util.List modifierList
org.simpleframework.xml.core.ElementListLabel: boolean required
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] $VALUES
com.alipay.android.phone.mrpc.core.m: com.alipay.android.phone.mrpc.core.l b
com.tencent.mm.opensdk.modelpay.PayReq: java.lang.String nonceStr
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script TAGALOG
androidx.constraintlayout.core.SolverVariable$Type: androidx.constraintlayout.core.SolverVariable$Type[] $VALUES
io.ktor.util.date.Month: io.ktor.util.date.Month MAY
com.umeng.analytics.pro.o$a: int c
com.google.android.gms.internal.play_billing.zza: com.google.android.gms.internal.play_billing.zza zzb
com.thegrizzlylabs.sardineandroid.model.Group: java.util.List content
com.alipay.sdk.app.PayTask: java.lang.String d
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgram$Req: java.lang.String extData
com.caij.puremusic.drive.model.AMetadata: java.lang.String type
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MOOD_AROUSAL
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier MVCG
com.umeng.commonsdk.statistics.noise.ImLatent: long _36HOURS_IN_MS
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_LENGTH
com.umeng.analytics.pro.am: java.lang.String aw
com.umeng.analytics.pro.an: int e
com.tencent.bugly.proguard.bv: java.util.Map e
org.jaudiotagger.tag.mp4.field.Mp4DiscNoField: int DISC_TOTAL_INDEX
com.caij.puremusic.db.model.ArtistQueries$ArtistByIdQuery$execute$1: com.caij.puremusic.db.model.ArtistQueries$ArtistByIdQuery this$0
com.caij.puremusic.drive.model.Prop: java.lang.String getlastmodified
com.thegrizzlylabs.sardineandroid.model.Prop: com.thegrizzlylabs.sardineandroid.model.QuotaUsedBytes quotaUsedBytes
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_URL_COPYRIGHT
com.umeng.commonsdk.framework.UMWorkDispatch: java.lang.String GENERAL_CONTENT
org.repackage.com.vivo.identifier.DataBaseOperation: int i
org.jaudiotagger.audio.wav.WavOptions: org.jaudiotagger.audio.wav.WavOptions READ_ID3_UNLESS_ONLY_INFO
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP4_CHANGES_TO_FILE_FAILED_INCORRECT_NUMBER_OF_TRACKS
com.umeng.analytics.pro.e$d$b: java.lang.String l
org.jaudiotagger.tag.mp4.Mp4TagFieldSubType: org.jaudiotagger.tag.mp4.Mp4TagFieldSubType REVERSE_DNS
com.umeng.commonsdk.stateless.a: long c
com.tencent.mm.opensdk.modelmsg.WXMediaMessage: java.lang.String mediaTagName
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: int MASK_GROUPING_IDENTITY
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey CATALOGNO
com.thegrizzlylabs.sardineandroid.model.Propfind: com.thegrizzlylabs.sardineandroid.model.Allprop allprop
com.umeng.commonsdk.statistics.proto.b: int k
com.umeng.commonsdk.config.d$c: com.umeng.commonsdk.config.d$c r
org.jaudiotagger.tag.id3.AbstractTagItem: java.util.logging.Logger logger
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage GENERAL_READ_FAILED_UNABLE_TO_CLOSE_RANDOM_ACCESS_FILE
org.jaudiotagger.tag.id3.Id3FieldType: org.jaudiotagger.tag.id3.Id3FieldType TEXT
com.umeng.analytics.MobclickAgent$PageMode: com.umeng.analytics.MobclickAgent$PageMode MANUAL
com.umeng.commonsdk.statistics.idtracking.b: android.content.Context b
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: int pictureType
com.tencent.bugly.crashreport.crash.h5.H5JavaScriptInterface: java.util.Map e
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country GREECE
com.tencent.bugly.proguard.p: boolean c
io.ktor.websocket.CloseReason$Codes: io.ktor.websocket.CloseReason$Codes TOO_BIG
com.umeng.commonsdk.statistics.internal.c: boolean f
com.tencent.bugly.proguard.x: int b
com.umeng.analytics.pro.am: java.lang.String aR
com.alipay.apmobilesecuritysdk.b.a: int a
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey COPYRIGHT
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_LAUNCH_WX_WXA_REDIRECTING_PAGE
com.umeng.analytics.pro.bn: byte[] j
com.tencent.mm.opensdk.modelpay.PayResp: java.lang.String returnKey
com.caij.puremusic.fragments.NowPlayingScreen: com.caij.puremusic.fragments.NowPlayingScreen[] $VALUES
org.jaudiotagger.tag.TagOptionSingleton: byte id3v24DefaultTextEncoding
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_LENGTH
com.caij.puremusic.drive.model.SongItem: java.lang.String ParentId
org.repackage.com.vivo.identifier.DataBaseOperation: java.lang.String c
com.umeng.commonsdk.UMConfigure$BS_TYPE: com.umeng.commonsdk.UMConfigure$BS_TYPE PUSH
com.umeng.analytics.pro.bl: com.umeng.analytics.pro.bi a
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzD
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_MPEG_LOCATION_LOOKUP_TABLE
com.caij.puremusic.drive.model.OneDriveFolder$$serializer: com.caij.puremusic.drive.model.OneDriveFolder$$serializer INSTANCE
org.jaudiotagger.tag.mp4.field.Mp4FieldType: org.jaudiotagger.tag.mp4.field.Mp4FieldType INTEGER
com.thegrizzlylabs.sardineandroid.DavAce: java.util.List granted
androidx.fragment.app.DialogFragment: int mTheme
org.jaudiotagger.audio.aiff.AiffTagReader: java.util.logging.Logger logger
com.umeng.commonsdk.debug.UMLogCommon: java.lang.String SC_10021
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: boolean isValid
org.simpleframework.xml.transform.DateType: org.simpleframework.xml.transform.DateType$DateFormat format
com.umeng.commonsdk.framework.UMWorkDispatch: int MSG_DELAY_PROCESS
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey RELEASECOUNTRY
com.umeng.analytics.pro.o$a: int y
org.jaudiotagger.audio.asf.io.ChunkRemover: boolean $assertionsDisabled
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b H
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country EGYPT
kotlinx.serialization.json.internal.WriteMode: kotlinx.serialization.json.internal.WriteMode LIST
com.umeng.commonsdk.statistics.idtracking.c: java.lang.String a
org.simpleframework.xml.stream.HyphenStyle: org.simpleframework.xml.stream.Style style
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey OPUS
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Parcelable$Creator CREATOR
com.caij.puremusic.drive.model.SubsonicAlbum: java.lang.String name
com.tencent.bugly.proguard.s: java.lang.Class l
org.jaudiotagger.audio.asf.io.MetadataReader: org.jaudiotagger.audio.asf.data.GUID[] APPLYING
org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile: org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile[] $VALUES
org.simpleframework.xml.core.VersionLabel: org.simpleframework.xml.core.Decorator decorator
org.jaudiotagger.tag.id3.ID3v11Tag: int FIELD_COMMENT_LENGTH
com.umeng.analytics.pro.u: android.content.Context i
com.caij.puremusic.drive.model.PlaylistsMediaContainer: java.util.List Metadata
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MOOD_SAD
com.umeng.commonsdk.statistics.c: int d
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: com.tencent.bugly.proguard.ak e
com.thegrizzlylabs.sardineandroid.DavAce: boolean isprotected
com.tencent.bugly.proguard.aa: java.lang.Object V
org.jaudiotagger.tag.id3.AbstractID3v1Tag: java.lang.String TYPE_YEAR
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey WORK_PART_LEVEL3_TYPE
com.caij.puremusic.drive.model.PlayListItem: long RunTimeTicks
com.caij.puremusic.model.DriveFileParcelable: boolean isDirectory
com.google.android.gms.signin.internal.zaa: android.os.Parcelable$Creator CREATOR
com.umeng.analytics.pro.bt: byte b
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_GENRE
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey CUSTOM
com.umeng.commonsdk.statistics.proto.e$e: short e
com.caij.vip.AppGood: java.lang.String name
com.caij.puremusic.db.model.SongQueries$SongsDateLastDescQuery: long dateAdded
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey ORCHESTRA
com.umeng.commonsdk.framework.UMFrUtils: java.lang.String sCurrentProcessName
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType[] $VALUES
kotlin.reflect.KVariance: kotlin.reflect.KVariance IN
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey ORIGINAL_ARTIST
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage ENCODE
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier DSGD
com.tencent.bugly.proguard.aa: java.lang.String an
org.repackage.com.meizu.flyme.openidsdk.OpenIdHelper: java.lang.String a
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MOOD_AGGRESSIVE
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MOOD_HAPPY
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL5_ID
com.tencent.mm.opensdk.modelmsg.GetMessageFromWX$Req: java.lang.String username
com.tencent.bugly.proguard.bn: byte[] d
org.jaudiotagger.tag.id3.ID3v24Tag: java.lang.String TYPE_EXPERIMENTAL
com.umeng.commonsdk.debug.UMLogCommon: java.lang.String SC_10001
androidx.fragment.app.DialogFragment: int mBackStackId
io.ktor.websocket.CloseReason$Codes: short code
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_CARD_SHARE
org.jaudiotagger.tag.id3.ID3Frames: java.util.Map forcev23Tov22
org.simpleframework.xml.stream.PullReader: org.xmlpull.v1.XmlPullParser parser
io.ktor.websocket.FrameType: io.ktor.websocket.FrameType CLOSE
org.simpleframework.xml.stream.Indenter$Cache: java.lang.String[] list
com.umeng.commonsdk.internal.a: int t
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey SINGLE_DISC_TRACK_NO
com.umeng.analytics.process.DBFileTraversalUtil$1: com.umeng.commonsdk.utils.FileLockCallback b
org.jaudiotagger.audio.ogg.OggFileReader: org.jaudiotagger.audio.ogg.OggVorbisTagReader vtr
com.umeng.analytics.pro.e$a$b: java.lang.String a
com.umeng.commonsdk.statistics.common.ReportPolicy: int BATCH_BY_INTERVAL
com.caij.puremusic.db.model.ServerLyrics: long id
com.tencent.mm.opensdk.constants.Build: int SDK_INT
nl.adaptivity.xmlutil.EventType: nl.adaptivity.xmlutil.EventType[] $VALUES
org.jaudiotagger.audio.asf.data.GUID: org.jaudiotagger.audio.asf.data.GUID GUID_EXTENDED_CONTENT_DESCRIPTION
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script RUNIC
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey CUSTOM2
org.jcodec.containers.mp4.boxes.MediaHeaderBox: int timescale
com.caij.puremusic.db.model.PlaybackSongQueries$getPlaybacksByType$1: kotlin.jvm.functions.Function4 $mapper
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: short preSkip
org.simpleframework.xml.core.MethodContact: org.simpleframework.xml.core.MethodPart set
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey ASIN
com.tencent.bugly.proguard.ao$a: java.io.File b
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey WORK_TYPE
org.simpleframework.xml.transform.ClassTransform: java.lang.String FLOAT
org.jaudiotagger.tag.id3.ID3v24Frame: int FRAME_SIZE_SIZE
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL4
org.simpleframework.xml.core.ModelSection: org.simpleframework.xml.core.Model model
com.umeng.analytics.pro.d: java.lang.String N
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_ORIG_LYRICIST
com.alipay.android.phone.mrpc.core.a: boolean f
com.alipay.sdk.m.u.g: com.alipay.sdk.m.u.g e
nl.adaptivity.xmlutil.EventType: nl.adaptivity.xmlutil.EventType CDSECT
com.caij.puremusic.drive.model.SubsonicSong: int bitRate
com.caij.puremusic.drive.model.Metadata: int duration
com.google.common.base.AbstractIterator$State: com.google.common.base.AbstractIterator$State NOT_READY
com.bumptech.glide.load.PreferredColorSpace: com.bumptech.glide.load.PreferredColorSpace SRGB
com.umeng.analytics.pro.d: java.lang.String ah
com.caij.puremusic.drive.model.BaiduDriveItem: long server_ctime
org.simpleframework.xml.core.CacheLabel: java.lang.Class type
com.umeng.analytics.process.UMProcessDBDatasSender$ReplaceCallback: com.umeng.analytics.process.UMProcessDBDatasSender a
com.thegrizzlylabs.sardineandroid.DavPrincipal: java.lang.String value
com.umeng.analytics.pro.ap: java.lang.String c
com.umeng.commonsdk.debug.UMLogCommon: java.lang.String SC_10003
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey URL_DISCOGS_RELEASE_SITE
com.tencent.bugly.proguard.bu: boolean h
com.caij.puremusic.drive.model.Auth2Token: java.lang.String refresh_token
com.tencent.bugly.crashreport.common.strategy.StrategyBean: java.lang.String s
com.google.android.exoplayer2.metadata.mp4.SlowMotionData$Segment: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.audio.asf.io.ChunkRemover: java.util.Set toRemove
org.jaudiotagger.audio.wav.WavInfoReader: java.lang.String loggingName
org.jaudiotagger.tag.id3.valuepair.TextEncoding: java.lang.String CHARSET_UTF_8
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype TD_SCDMA
com.caij.puremusic.model.AbsCustomPlaylist$special$$inlined$inject$default$1: kotlin.jvm.functions.Function0 $parameters
com.umeng.analytics.pro.d: java.lang.String t
com.umeng.analytics.pro.am: java.lang.String O
org.simpleframework.xml.core.PathParser: int start
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_RELEASE_TRACKID
org.jcodec.containers.mp4.boxes.SampleToChunkBox$SampleToChunkEntry: int entry
com.caij.puremusic.db.model.ServerAudioFormatQueries$deleteSongBySource$1: long $sourceId
org.repackage.com.vivo.identifier.BuildConfig: java.lang.String f
com.umeng.commonsdk.statistics.proto.b: byte m
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: java.util.EnumMap tagFieldToOggField
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey URL_OFFICIAL_RELEASE_SITE
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey URL_DISCOGS_RELEASE_SITE
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$Builder: java.lang.String KEY_IDENTIFIER
org.jaudiotagger.audio.mp3.MP3AudioHeader: long fileSize
com.caij.puremusic.drive.model.Part: java.lang.String key
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState DORMANT
com.tencent.mm.opensdk.modelpay.PayResp: java.lang.String extData
com.umeng.analytics.a: int c
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_TRACKID
com.caij.puremusic.drive.model.AlbumSubsonicResponse: com.caij.puremusic.drive.model.SubsonicAlbum album
com.google.android.material.bottomsheet.BottomSheetBehavior$3: com.google.android.material.bottomsheet.BottomSheetBehavior this$0
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey KEY
com.umeng.commonsdk.internal.utils.k: java.lang.String a
org.simpleframework.xml.core.PathParser: java.lang.String cache
com.caij.puremusic.model.ArtistWrapper: com.caij.puremusic.db.model.Artist artist
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_UNSYNC_LYRICS
com.caij.puremusic.model.Data: java.lang.String tracklist
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey RANKING
com.tencent.bugly.crashreport.crash.CrashDetailBean: long K
org.simpleframework.xml.core.AttributeParameter: java.lang.String path
androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type BOTTOM
com.caij.puremusic.db.model.Song: long id
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey ENSEMBLE_SORT
org.simpleframework.xml.core.KeyBuilder: org.simpleframework.xml.core.Label label
com.umeng.commonsdk.statistics.internal.a: java.lang.String b
org.jcodec.containers.mp4.boxes.AliasBox: int AppleShareZoneName
org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistSaveOptions: org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistSaveOptions[] $VALUES
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey KEY
com.umeng.analytics.b: java.lang.String D
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script EGYPTIAN_DEMOTIC
com.caij.puremusic.drive.model.PlayListsSubsonicResponse: com.caij.puremusic.drive.model.PlayLists playlists
org.jaudiotagger.tag.reference.Tagger: org.jaudiotagger.tag.reference.Tagger[] $VALUES
com.umeng.commonsdk.internal.utils.e$a: com.umeng.commonsdk.internal.utils.e$a a
org.simpleframework.xml.core.PathParser: java.lang.StringBuilder builder
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage GENERAL_GET_CREATION_TIME_FAILED
com.umeng.common.b: java.lang.String c
org.jaudiotagger.utils.IntArrayList: int growAmount
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country PARAGUAY
com.umeng.analytics.pro.d: java.lang.String P
org.simpleframework.xml.core.GroupExtractor: org.simpleframework.xml.core.GroupExtractor$Registry registry
com.umeng.analytics.pro.bi: java.lang.String c
com.tencent.mm.opensdk.modelbiz.SubscribeMessage$Resp: java.lang.String action
com.alipay.sdk.m.j.c: java.lang.String b
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country NAURU
org.simpleframework.xml.core.ElementUnionParameter: org.simpleframework.xml.core.Expression expression
com.caij.puremusic.model.lyrics.AbsSynchronizedLyrics: int TIME_OFFSET_MS
com.umeng.commonsdk.stateless.a: java.lang.String g
org.repackage.com.vivo.identifier.IdentifierIdClient: org.repackage.com.vivo.identifier.IdentifierIdObserver s
com.caij.puremusic.drive.model.AlbumList: com.caij.puremusic.drive.model.AlbumList$Companion Companion
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: int minFrameSize
com.umeng.commonsdk.statistics.proto.b: int l
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MUSICBRAINZ_RELEASEARTISTID
org.simpleframework.xml.core.AnnotationHandler: java.lang.String ATTRIBUTE
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country CHAD
com.alipay.sdk.m.j.c: com.alipay.sdk.m.j.c[] k
com.caij.puremusic.db.model.PlaybackSong$Adapter: app.cash.sqldelight.ColumnAdapter positionAdapter
org.simpleframework.xml.core.FieldContact: org.simpleframework.xml.util.Cache cache
com.umeng.analytics.MobclickAgent$EScenarioType: com.umeng.analytics.MobclickAgent$EScenarioType E_UM_NORMAL
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat DST_IN
org.jaudiotagger.tag.id3.valuepair.ImageFormats: java.lang.String MIME_TYPE_JPEG
com.tencent.mm.opensdk.modelmsg.WXMusicVideoObject: java.lang.String hdAlbumThumbFilePath
com.alipay.tscenter.biz.rpc.report.general.model.DataReportRequest: java.util.Map deviceData
com.tencent.mm.opensdk.modelpay.PayReq: java.lang.String packageValue
com.github.dhaval2404.imagepicker.constant.ImageProvider: com.github.dhaval2404.imagepicker.constant.ImageProvider CAMERA
org.jcodec.containers.mp4.boxes.SegmentIndexBox: int reserved
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String OPUS
com.tencent.mm.opensdk.modelmsg.WXMusicVipInfo: java.lang.String TAG
com.umeng.analytics.pro.au: int b
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey ALBUM_ARTIST_SORT
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_WORK_PART_LEVEL5_TYPE
org.simpleframework.xml.core.ElementMapLabel: boolean inline
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType MOBILE_IMS
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier GENRE
org.jaudiotagger.tag.wav.WavTag: boolean isIncorrectlyAlignedTag
org.jaudiotagger.audio.SupportedFileFormat: org.jaudiotagger.audio.SupportedFileFormat AIF
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey IS_COMPILATION
org.simpleframework.xml.stream.Indenter: org.simpleframework.xml.stream.Indenter$Cache cache
com.umeng.analytics.pro.bo: byte k
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey ARRANGER
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey ORIGINAL_ALBUM
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country BOUVET_ISLAND
com.google.android.material.datepicker.CalendarConstraints: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey ARRANGER
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_TIMED_EVENT
org.jaudiotagger.tag.id3.valuepair.ChannelTypes: org.jaudiotagger.tag.id3.valuepair.ChannelTypes channelTypes
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey ALBUM_ARTIST_SORT
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country ALGERIA
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country SRI_LANKA
org.jaudiotagger.tag.id3.framebody.FrameBodyTCMP: java.lang.String IS_COMPILATION
org.simpleframework.xml.core.ElementListLabel: java.lang.String override
com.caij.puremusic.model.lyrics.AbsSynchronizedLyrics: int offset
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey SCRIPT
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country GEORGIA
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: boolean hoursOnly
com.google.android.gms.internal.play_billing.zzfz: int zzd
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: boolean monthOnly
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey CHOIR
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MUSICBRAINZ_TRACK_ID
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey IS_COMPILATION
com.umeng.commonsdk.BuildConfig: java.lang.String BUILD_TYPE
org.jaudiotagger.tag.id3.ID3v24Tag: int MASK_V24_DATA_LENGTH_INDICATOR
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_WORK_PART_LEVEL4_TYPE
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_TRACK
android.support.v4.media.session.ParcelableVolumeInfo: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.audio.asf.data.GUID: org.jaudiotagger.audio.asf.data.GUID GUID_AUDIO_ERROR_CONCEALEMENT_ABSENT
com.caij.puremusic.db.model.SongQueries$getSongBySource$1: com.caij.puremusic.db.model.SongQueries this$0
com.caij.puremusic.fragments.search.Filter: com.caij.puremusic.fragments.search.Filter GENRES
org.jcodec.containers.mp4.boxes.SegmentTypeBox: java.util.Collection compBrands
com.caij.puremusic.db.model.PlayCountEntity: long timePlayed
com.caij.puremusic.network.model.LastFmArtist$Artist$Image: java.lang.String Text
org.simpleframework.xml.stream.StreamReader$Start: javax.xml.stream.events.StartElement element
com.alipay.sdk.app.PayTask: java.util.Map g
com.tencent.bugly.proguard.aa: java.util.List L
com.caij.puremusic.drive.model.DropboxDriveItem: com.caij.puremusic.drive.model.DropboxDriveItem$Companion Companion
com.umeng.commonsdk.internal.a: int r
com.caij.puremusic.model.Contributor: java.lang.String link
org.simpleframework.xml.stream.Format: org.simpleframework.xml.stream.Style style
com.caij.puremusic.drive.model.ADriveItem: java.lang.String type
org.simpleframework.xml.core.Caller: org.simpleframework.xml.core.Function validate
org.jaudiotagger.logging.XMLTagDisplayFormatter: java.lang.String xmlOpenEnd
com.caij.puremusic.db.model.PlayCountEntityQueries$playCountSongs$2: com.caij.puremusic.db.model.PlayCountEntityQueries$playCountSongs$2 INSTANCE
com.caij.puremusic.drive.model.BaiduFileResponse: com.caij.puremusic.drive.model.BaiduFileResponse$Companion Companion
com.caij.puremusic.drive.model.PlayListItem: java.lang.String SortName
org.jaudiotagger.tag.id3.ID3v24Tag: int MASK_V24_TAG_UPDATE
com.umeng.analytics.pro.j: java.lang.String H
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey ORCHESTRA_SORT
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage ARTWORK_CANNOT_BE_CREATED_WITH_THIS_METHOD
com.umeng.commonsdk.statistics.UMErrorCode: int E_UM_BE_OK
com.tencent.mm.opensdk.modelbiz.ChooseCardFromWXCardPackage$Req: java.lang.String cardType
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b f
org.jcodec.containers.mp4.boxes.GenericMediaInfoBox: short balance
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage GENERIC_NOT_SUPPORTED
com.umeng.commonsdk.stateless.a: java.lang.String b
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey IS_SOUNDTRACK
com.caij.puremusic.drive.model.BaiduFileResponse$$serializer: com.caij.puremusic.drive.model.BaiduFileResponse$$serializer INSTANCE
org.simpleframework.xml.core.Composite$Builder: org.simpleframework.xml.core.Instance value
com.umeng.commonsdk.framework.UMWorkDispatch: java.lang.String KEY_EXCEPTION
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgram$Resp: java.lang.String extMsg
org.simpleframework.xml.filter.SystemFilter: org.simpleframework.xml.filter.Filter filter
com.caij.puremusic.drive.model.EmbyAlbumsResponse$$serializer: com.caij.puremusic.drive.model.EmbyAlbumsResponse$$serializer INSTANCE
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script SYRIAC_WESTERN_VARIANT
org.jaudiotagger.audio.mp4.Mp4TagReader$1: int[] $SwitchMap$org$jaudiotagger$tag$mp4$Mp4TagFieldSubType
com.alipay.apmobilesecuritysdk.face.APSecuritySdk$1: java.util.Map a
org.jaudiotagger.audio.mp3.MP3AudioHeader: int CONVERTS_BYTE_TO_BITS
com.umeng.commonsdk.statistics.common.ULog: boolean DEBUG
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey URL_WIKIPEDIA_RELEASE_SITE
org.jaudiotagger.tag.datatype.PartOfSet$PartOfSetValue: java.lang.String rawText
com.umeng.analytics.pro.am: java.lang.String au
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.os.Parcelable$Creator CREATOR
com.caij.puremusic.model.lyrics.SynchronizedLyricsLRC: java.util.regex.Pattern LRC_ATTRIBUTE_PATTERN
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzP
org.jaudiotagger.tag.id3.valuepair.StandardIPLSKey: org.jaudiotagger.tag.id3.valuepair.StandardIPLSKey MIXER
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country KYRGYZSTAN
org.jaudiotagger.audio.mp4.ChunkReader: org.jcodec.containers.mp4.boxes.SampleDescriptionBox stsd
org.jaudiotagger.audio.SupportedFileFormat: org.jaudiotagger.audio.SupportedFileFormat MP4
org.jcodec.containers.mp4.boxes.EsdsBox$DecoderSpecific: java.nio.ByteBuffer data
com.tencent.bugly.proguard.p: java.util.List b
org.simpleframework.xml.core.CompositeInlineMap: org.simpleframework.xml.core.Converter value
com.tencent.bugly.proguard.aa: java.lang.String i
kotlin.io.FileWalkDirection: kotlin.io.FileWalkDirection TOP_DOWN
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_WORK_PART_LEVEL1
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String KEY_EMUI_VERSION_CODE
org.simpleframework.xml.stream.PullReader$Entry: java.lang.String value
org.jaudiotagger.tag.lyrics3.FieldFrameBodyUnsupported: byte[] value
com.tencent.bugly.crashreport.crash.CrashDetailBean: java.lang.String B
org.simpleframework.xml.core.TextListLabel: org.simpleframework.xml.Text text
com.tencent.bugly.BuglyStrategy: boolean s
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart LAZY
org.jaudiotagger.audio.asf.io.LanguageListReader: boolean $assertionsDisabled
org.simpleframework.xml.core.MethodScanner: org.simpleframework.xml.core.MethodPartFactory factory
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason MESSAGE_TOO_OLD
org.simpleframework.xml.stream.OutputDocument: org.simpleframework.xml.stream.OutputStack stack
com.caij.puremusic.db.model.Song: java.lang.String artistId
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country QATAR
com.alipay.android.phone.mrpc.core.RpcException: java.lang.String mMsg
com.umeng.commonsdk.internal.utils.c: java.lang.String a
com.tencent.bugly.proguard.p: boolean a
com.umeng.commonsdk.internal.utils.b: int e
com.umeng.analytics.pro.am: java.lang.String a
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country AFGHANISTAN
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype EVDO_0
com.umeng.commonsdk.framework.a: boolean r
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_ARTIST
org.jcodec.containers.mp4.boxes.ColorExtension: java.lang.String type
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script OLD_HUNGARIAN
com.umeng.commonsdk.debug.UMLog: char MIDDLE_CORNER
com.umeng.analytics.pro.s: java.lang.String a
org.repackage.com.vivo.identifier.IdentifierIdClient: java.lang.Object t
com.caij.puremusic.db.model.SongQueries$insertOrReplace$1: com.caij.puremusic.db.model.Song $Song
com.tencent.bugly.crashreport.crash.CrashDetailBean: long Q
com.tencent.bugly.proguard.aa: java.lang.String G
com.umeng.commonsdk.config.d$d: com.umeng.commonsdk.config.d$d b
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int SYNC_BIT_ANDSAMPING_BYTE3
com.tencent.bugly.proguard.c: com.tencent.bugly.proguard.k d
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey TONALITY
org.repackage.com.vivo.identifier.DataBaseOperation: int j
com.tencent.bugly.proguard.aa: long C
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey CONDUCTOR
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat LIGHTEN
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey CONDUCTOR
org.jaudiotagger.tag.mp4.field.Mp4TagBinaryField: byte[] dataBytes
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_URL_PUBLISHERS
com.caij.puremusic.drive.model.GoogleDriveFileResponse$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.jaudiotagger.audio.wav.WavChunkType: org.jaudiotagger.audio.wav.WavChunkType DATA
com.google.android.material.bottomsheet.BottomSheetBehavior: int insetTop
org.jaudiotagger.logging.PlainTextTagDisplayFormatter: java.lang.StringBuffer sb
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier ILST
com.caij.puremusic.drive.model.ADriveFileResponse$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey INVOLVED_PERSON
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage VORBIS_COMMENT_LENGTH_TOO_LARGE
com.tencent.bugly.proguard.bt: boolean c
com.umeng.vt.diff.V: java.lang.String VISUAL_TRACK_STYLE
com.thegrizzlylabs.sardineandroid.model.Prop: com.thegrizzlylabs.sardineandroid.model.PrincipalURL principalURL
org.jcodec.containers.mp4.boxes.AudioSampleEntry: short channelCount
com.umeng.commonsdk.internal.b: android.content.Context a
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey KEYS
com.google.android.material.datepicker.DateValidatorPointForward: android.os.Parcelable$Creator CREATOR
org.simpleframework.xml.core.CompositeListUnion: org.simpleframework.xml.core.Expression path
org.simpleframework.xml.core.Session: boolean strict
org.jaudiotagger.tag.mp4.Mp4NonStandardFieldKey: org.jaudiotagger.tag.mp4.Mp4NonStandardFieldKey ADCP
org.jaudiotagger.audio.mp3.MPEGFrameHeader: java.util.Map bitrateMap
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country COOK_ISLANDS
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country CHILE
com.umeng.commonsdk.statistics.proto.b$e: java.lang.String f
org.jaudiotagger.tag.TagOptionSingleton: org.jaudiotagger.tag.reference.ID3V2Version id3v2Version
org.jaudiotagger.audio.asf.data.FileHeader: java.math.BigInteger timeStartPos
com.caij.puremusic.model.lyrics.AbsSynchronizedLyrics: android.util.SparseArray lines
org.simpleframework.xml.strategy.ReadGraph: java.lang.String label
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey OCCASION
org.jaudiotagger.tag.id3.ID3v11Tag: int TRACK_MIN_VALUE
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
com.umeng.analytics.filter.d: java.security.MessageDigest c
com.tencent.bugly.proguard.o: java.lang.String versionKey
org.jcodec.containers.mp4.boxes.TrunBox: int[] sampleSize
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int VERSION_2
org.simpleframework.xml.util.Resolver: org.simpleframework.xml.util.Resolver$Stack stack
com.thegrizzlylabs.sardineandroid.BuildConfig: boolean DEBUG
com.tencent.bugly.proguard.aa: boolean f
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage GENERAL_INVALID_NULL_ARGUMENT
com.tencent.bugly.proguard.ab: java.util.ArrayList a
com.caij.puremusic.fragments.AlbumCoverStyle: int titleRes
com.umeng.commonsdk.utils.d: java.lang.String af
androidx.fragment.app.Fragment: boolean mIsCreated
com.umeng.analytics.pro.s: org.json.JSONObject h
com.thegrizzlylabs.sardineandroid.model.Response: com.thegrizzlylabs.sardineandroid.model.Location location
com.umeng.analytics.pro.an: long l
com.tencent.mm.opensdk.openapi.MMSharedPreferences$REditor: java.util.Set remove
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MOVEMENT_NO
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP4_UNABLE_TO_PRIME_FILE_FOR_WRITE_SAFETLY
org.jaudiotagger.audio.asf.data.ContainerType: java.math.BigInteger maximumDataLength
com.umeng.analytics.pro.an: com.umeng.analytics.pro.an$e[] D
com.tencent.mm.opensdk.modelbiz.SubscribeMessage$Req: java.lang.String templateID
com.umeng.commonsdk.statistics.TagHelper: java.util.Map moduleTags
com.thegrizzlylabs.sardineandroid.util.SardineUtil: java.lang.String CUSTOM_NAMESPACE_URI
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_DISC_ID
org.jaudiotagger.tag.id3.valuepair.ImageFormats: java.lang.String V22_PDF_FORMAT
org.simpleframework.xml.transform.ClassTransform: java.lang.String BOOLEAN
com.alipay.sdk.m.r.a: java.lang.String a
org.jaudiotagger.tag.TagOptionSingleton: java.util.HashMap replaceWordMap
com.umeng.analytics.pro.a$a: int c
com.umeng.analytics.pro.o: android.content.SharedPreferences c
com.umeng.commonsdk.statistics.proto.Response: com.umeng.analytics.pro.bp RESP_CODE_FIELD_DESC
com.caij.puremusic.db.model.PlaylistEntityQueries$playlists$1: kotlin.jvm.functions.Function2 $mapper
com.tencent.mm.opensdk.modelbiz.WXLaunchWxaRedirectingPage$Resp: java.lang.String callbackActivity
com.tencent.bugly.crashreport.crash.CrashDetailBean: java.lang.String x
org.jaudiotagger.tag.id3.AbstractID3v2Tag: int FIELD_TAG_MAJOR_VERSION_LENGTH
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype EHRPD
org.simpleframework.xml.core.AttributeParameter: java.lang.Class type
org.jaudiotagger.tag.id3.ID3Frames: java.util.TreeSet supportedFrames
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzi
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int MASK_MP3_VERSION
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int MODE_STEREO
org.jaudiotagger.tag.id3.AbstractID3v2Frame$StatusFlags: java.lang.String TYPE_FLAGS
com.umeng.analytics.pro.am: java.lang.String o
com.umeng.analytics.pro.bo$b: byte j
org.jcodec.containers.mp4.boxes.NameBox: java.lang.String name
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script RONGORONGO
org.jcodec.containers.mp4.boxes.SegmentIndexBox$Reference: int SAP_type
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_CONTENT_GROUP_DESC
com.thegrizzlylabs.sardineandroid.model.Property: org.w3c.dom.Element property
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String sAppName
com.umeng.commonsdk.internal.b: com.umeng.commonsdk.internal.b b
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey ALBUM
com.tencent.mm.opensdk.modelbiz.WXChannelJumpUrlInfo: java.lang.String url
com.tencent.mm.opensdk.constants.ConstantsAPI$WXMiniProgram: int MINI_PROGRAM_TYPE_TEST
org.simpleframework.xml.stream.Splitter: int off
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_RELEASEID
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage WMA_LENGTH_OF_LANGUAGE_IS_TOO_LARGE
com.umeng.commonsdk.statistics.internal.StatTracer: java.lang.String KEY_CLIENT_REQUEST_FAILED
com.caij.puremusic.db.model.SongQueries$songsByAlumId$2: com.caij.puremusic.db.model.SongQueries$songsByAlumId$2 INSTANCE
com.thegrizzlylabs.sardineandroid.util.SardineUtil: java.lang.String[] SUPPORTED_DATE_FORMATS
org.jaudiotagger.logging.LogFormatter: java.lang.String IDENT
com.umeng.commonsdk.statistics.common.DeviceConfig: int DEFAULT_TIMEZONE
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind PCM_LITTLE_ENDIAN_AUDIO
org.jaudiotagger.tag.id3.AbstractID3v2Tag: int FIELD_TAG_MAJOR_VERSION_POS
com.google.android.gms.internal.play_billing.zzfv: com.google.android.gms.internal.play_billing.zzfv zzb
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey OPUS
okhttp3.Protocol: okhttp3.Protocol[] $VALUES
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_URL_SOURCE_WEB
org.jcodec.containers.mp4.boxes.Edit: float rate
com.caij.puremusic.drive.model.PlayListSubsonicResponse$$serializer: com.caij.puremusic.drive.model.PlayListSubsonicResponse$$serializer INSTANCE
org.jaudiotagger.tag.lyrics3.Lyrics3v1Iterator: org.jaudiotagger.tag.lyrics3.Lyrics3v1 tag
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script INSCRIPTIONAL_PAHLAVI
org.simpleframework.xml.stream.NodeWriter: org.simpleframework.xml.stream.OutputStack stack
com.caij.puremusic.db.model.ServerLyricsQueries$clear$1: com.caij.puremusic.db.model.ServerLyricsQueries$clear$1 INSTANCE
org.simpleframework.xml.core.ElementMapLabel: org.simpleframework.xml.core.Introspector detail
org.jaudiotagger.tag.id3.AbstractID3v2Frame: int frameSize
com.tencent.mm.opensdk.modelbiz.SubscribeMessage$Resp: java.lang.String templateID
com.umeng.analytics.pro.cg: java.io.InputStream a
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_WORK
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script LINEAR_B
org.repackage.com.vivo.identifier.IdentifierIdObserver: int c
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat MULTIPLY
okhttp3.internal.http2.ErrorCode: int httpCode
org.simpleframework.xml.core.Variable$Adapter: java.lang.Object value
org.simpleframework.xml.core.TextParameter: java.lang.String path
com.caij.puremusic.drive.model.AMetadata: java.lang.String title
io.ktor.util.date.Month: io.ktor.util.date.Month APRIL
org.jaudiotagger.tag.id3.ID3v23Frames: java.util.EnumMap id3ToTagField
com.alipay.apmobilesecuritysdk.e.h: java.lang.String a
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: boolean n
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script SYRIAC_ESTRANGELO_VARIANT
org.jaudiotagger.audio.asf.io.ChunkContainerReader: boolean eachChunkOnce
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey ARRANGER_SORT
org.jaudiotagger.audio.flac.metadatablock.BlockType: org.jaudiotagger.audio.flac.metadatablock.BlockType PADDING
com.umeng.commonsdk.config.FieldManager: com.umeng.commonsdk.config.b b
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICIP_ID
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey ARRANGER_SORT
com.google.android.material.bottomsheet.BottomSheetBehavior: float maximumVelocity
com.umeng.commonsdk.statistics.UMErrorCode: int E_UM_BE_ERROR_WORK_MODE
com.caij.vip.GoodOrder: java.lang.String appid
com.tencent.bugly.proguard.ao$a: boolean a
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country SLOVAKIA
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_WORK_PART_LEVEL3_ID
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_WORK_PART_LEVEL4_TYPE
com.tencent.bugly.proguard.g: java.lang.String f
com.caij.puremusic.network.model.LastFmAlbum$Album$Tag: com.caij.puremusic.network.model.LastFmAlbum$Album this$0
org.jcodec.containers.mp4.boxes.ColorExtension: short transferFunctionIndex
org.jcodec.containers.mp4.MP4Util$Movie: java.util.List others
com.tencent.bugly.proguard.g: int c
io.ktor.util.date.Month: io.ktor.util.date.Month$Companion Companion
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a o
org.simpleframework.xml.stream.InputAttribute: java.lang.String name
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_PUBLISHER
org.jaudiotagger.tag.id3.AbstractID3v2Tag: int FIELD_TAG_MINOR_VERSION_POS
com.thegrizzlylabs.sardineandroid.DavResource$DavProperties: java.lang.String etag
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: org.jaudiotagger.audio.aiff.chunk.AiffCompressionType SOWT
com.tencent.mm.opensdk.channel.a.a$a: long d
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$BreadthFirstEnumeration$Queue: org.jaudiotagger.utils.tree.DefaultMutableTreeNode$BreadthFirstEnumeration$Queue$QNode tail
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_WORK_PART_LEVEL1_TYPE
com.tencent.bugly.crashreport.common.strategy.StrategyBean: boolean h
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_PURCHASE_DATE
com.umeng.commonsdk.framework.a: int f
com.umeng.commonsdk.statistics.proto.Response: java.lang.String msg
com.umeng.analytics.pro.o$a: int b
org.jaudiotagger.audio.mp3.MPEGFrameHeader: byte[] header
com.umeng.commonsdk.statistics.common.DeviceConfig: boolean hasReadImeiOrMeid
com.umeng.commonsdk.utils.c: java.lang.String g
org.jaudiotagger.tag.reference.ID3V2Version: org.jaudiotagger.tag.reference.ID3V2Version[] $VALUES
com.umeng.analytics.pro.d: java.lang.String aq
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: boolean j
com.google.android.material.search.SearchBar$SavedState: android.os.Parcelable$Creator CREATOR
com.umeng.commonsdk.config.FieldManager$a: com.umeng.commonsdk.config.FieldManager a
com.caij.puremusic.drive.model.PlayListItem: com.caij.puremusic.drive.model.PlayListItem$Companion Companion
com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport: java.lang.Integer limit
com.umeng.commonsdk.UMConfigure$BS_TYPE: com.umeng.commonsdk.UMConfigure$BS_TYPE UREC
com.caij.puremusic.network.model.Artist: com.caij.puremusic.network.model.Artist album
io.ktor.websocket.CloseReason$Codes: io.ktor.websocket.CloseReason$Codes PROTOCOL_ERROR
com.umeng.analytics.pro.j: java.lang.String D
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_PLAYLIST_DELAY
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: java.lang.String MM_OCCASION
com.alipay.apmobilesecuritysdk.face.EnvModeConfig: int ENVIRONMENT_ONLINE
org.simpleframework.xml.core.ElementMapUnionParameter: int index
com.caij.puremusic.db.model.PlaylistEntityQueries$insert$1: com.caij.puremusic.db.model.PlaylistEntity $PlaylistEntity
androidx.fragment.app.Fragment: boolean mInLayout
org.jaudiotagger.audio.dsf.FmtChunk: int FMT_CHUNK_MIN_DATA_SIZE_
com.umeng.analytics.pro.am: java.lang.String x
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_OPEN_QRCODE_PAY
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey ACOUSTID_FINGERPRINT
org.jaudiotagger.logging.XMLTagDisplayFormatter: java.lang.String xmlCDataTagOpen
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason MAX_RETRIES_REACHED
com.caij.puremusic.drive.model.BaiduDriveItem: int category
com.umeng.commonsdk.statistics.common.DeviceConfig: boolean hasReadMac
org.jaudiotagger.audio.asf.io.ChunkContainerReader: boolean hasFailingReaders
com.caij.puremusic.db.model.ArtistQueries$deleteArtistById$1: long $id
org.simpleframework.xml.core.VersionLabel: org.simpleframework.xml.core.Expression path
com.umeng.commonsdk.utils.d: java.lang.String A
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] $VALUES
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzC
org.repackage.a.a.a.a.c: java.lang.Object d
org.jaudiotagger.audio.ogg.OggFileReader: java.util.logging.Logger logger
com.caij.puremusic.drive.model.SongItem: int IndexNumber
com.alipay.android.phone.mrpc.core.s: java.lang.Boolean a
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey COUNTRY
com.umeng.analytics.pro.bo: com.umeng.analytics.pro.at m
org.simpleframework.xml.DefaultType: org.simpleframework.xml.DefaultType FIELD
com.tencent.bugly.proguard.as: int a
com.tencent.bugly.proguard.aa: java.lang.String Y
org.simpleframework.xml.core.Entry: java.lang.String DEFAULT_NAME
com.umeng.analytics.pro.j: java.lang.String K
com.caij.puremusic.drive.model.DriveFile: java.lang.String url
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey ARTIST_SORT
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey URL_LYRICS_SITE
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey ARTIST
com.tencent.bugly.proguard.bu: byte b
org.jaudiotagger.tag.id3.ID3v1Iterator: int GENRE
com.umeng.analytics.pro.ac: java.lang.String a
com.thegrizzlylabs.sardineandroid.DavResource: long DEFAULT_CONTENT_LENGTH
com.caij.puremusic.drive.model.PlayLists$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.alipay.apmobilesecuritysdk.e.c: java.lang.String b
com.caij.puremusic.drive.model.User: java.lang.String Name
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country JAMAICA
com.caij.puremusic.drive.model.PlayListsResponse$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.jaudiotagger.audio.mp3.MPEGFrameHeader: java.util.Map samplesPerFrameV25Map
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country AUSTRIA
com.umeng.commonsdk.config.d: java.lang.String[] j
com.bumptech.glide.request.RequestCoordinator$RequestState: com.bumptech.glide.request.RequestCoordinator$RequestState PAUSED
com.tencent.bugly.crashreport.biz.UserInfoBean: java.lang.String j
org.repackage.com.vivo.identifier.IdentifierIdClient: java.lang.String g
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzY
org.jaudiotagger.audio.AudioFile: java.util.logging.Logger logger
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country ZAMBIA
org.jaudiotagger.tag.id3.AbstractID3v2Tag: int duplicateBytes
org.jaudiotagger.tag.id3.ID3v1FieldKey: org.jaudiotagger.tag.id3.ID3v1FieldKey YEAR
org.jcodec.containers.mp4.boxes.LoadSettingsBox: int preloadFlags
com.umeng.commonsdk.utils.c: java.lang.String h
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country ICELAND
com.tencent.bugly.proguard.av: android.content.Context a
org.simpleframework.xml.transform.ClassTransform: java.lang.String INTEGER
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_GROUP_SYMBOL
com.caij.puremusic.model.smartplaylist.TopTracksPlaylist: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.mp4.field.Mp4FieldType: org.jaudiotagger.tag.mp4.field.Mp4FieldType UPC
org.jaudiotagger.audio.asf.data.Chunk: org.jaudiotagger.audio.asf.data.GUID guid
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_OWNER
com.caij.puremusic.db.model.SongEntityQueries$checkSongPlaylistExists$1: com.caij.puremusic.db.model.SongEntityQueries$checkSongPlaylistExists$1 INSTANCE
org.jaudiotagger.utils.DirectByteBufferUtils$OpenJdkReleaseStrategy: java.lang.reflect.Method viewedBufferMethod
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey CLASSICAL_CATALOG
com.tencent.mm.opensdk.modelbiz.OpenBusiLuckyMoney$Req: java.lang.String nonceStr
com.umeng.analytics.pro.ad$a: java.util.concurrent.LinkedBlockingQueue b
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_WORK_COMPOSITION
org.simpleframework.xml.stream.Formatter: java.io.Writer result
org.jaudiotagger.tag.options.PadNumberOption: org.jaudiotagger.tag.options.PadNumberOption PAD_TWO_ZERO
com.tencent.mm.opensdk.modelmsg.WXMediaMessage: java.lang.String messageExt
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country LAO_PEOPLES_DEMOCRATIC_REPUBLIC
org.simpleframework.xml.core.PrimitiveArray: org.simpleframework.xml.core.ArrayFactory factory
com.tencent.bugly.crashreport.crash.anr.TraceFileHelper$a: long c
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier MVCI
com.umeng.analytics.pro.cb: byte a
com.umeng.commonsdk.statistics.idtracking.h: java.lang.String d
com.caij.puremusic.drive.model.PlayListItem: boolean CanDelete
org.jaudiotagger.audio.wav.WavTagWriter$InfoFieldWriterOrderComparator: org.jaudiotagger.audio.wav.WavTagWriter this$0
com.umeng.analytics.process.UMProcessDBDatasSender: java.util.List mGeneralBodyIds
org.jaudiotagger.audio.wav.WavSubFormat: org.jaudiotagger.audio.wav.WavSubFormat FORMAT_FLOAT
com.caij.puremusic.db.model.SongEntityQueries$CheckSongPlaylistExistsQuery: long songId
org.jaudiotagger.audio.generic.Utils: java.util.logging.Logger logger
com.umeng.analytics.pro.bo$b: byte l
org.simpleframework.xml.core.DetailScanner: java.util.List fields
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey INVOLVED_PERSON
com.umeng.analytics.AnalyticsConfig: boolean g
com.tencent.mm.opensdk.constants.Build: int SUPPORT_SEND_MUSIC_VIDEO_MESSAGE
com.caij.puremusic.drive.model.MediaInfoWrapper: java.util.List playlistEntities
com.tencent.mm.opensdk.constants.ConstantsAPI: java.lang.String APP_PACKAGE
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.audio.dsf.DsfChunkType: org.jaudiotagger.audio.dsf.DsfChunkType ID3
org.jcodec.containers.mp4.boxes.ClipRegionBox: short y
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script PHAGS_PA
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_WORK_PART_LEVEL4
com.caij.puremusic.db.model.PlayCountEntityQueries$insert$2: com.caij.puremusic.db.model.PlayCountEntityQueries$insert$2 INSTANCE
org.repackage.com.vivo.identifier.IdentifierIdClient: java.lang.String b
org.simpleframework.xml.core.Entry: java.lang.String value
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier FECI
com.caij.puremusic.drive.model.AlbumSubsonicResponse: java.lang.String status
org.simpleframework.xml.core.TextLabel: org.simpleframework.xml.Text label
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int MODE_EXTENSION_THREE
com.umeng.commonsdk.statistics.common.ReportPolicy$DebugPolicy: long ReportInterval
com.google.android.material.bottomsheet.BottomSheetDragHandleView: com.google.android.material.bottomsheet.BottomSheetBehavior bottomSheetBehavior
com.tencent.mm.opensdk.modelmsg.WXMusicObject: int LYRIC_LENGTH_LIMIT
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_BPM
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier SCHI
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_URL_FILE_WEB
com.umeng.commonsdk.BuildConfig: java.lang.String VERSION_NAME
io.ktor.util.date.Month: io.ktor.util.date.Month JANUARY
androidx.fragment.app.Fragment: boolean mRemoving
com.caij.puremusic.db.model.PlayCountEntityQueries$deleteById$2: com.caij.puremusic.db.model.PlayCountEntityQueries$deleteById$2 INSTANCE
com.umeng.analytics.b: com.umeng.analytics.pro.u f
com.umeng.commonsdk.utils.d: java.lang.String z
com.umeng.commonsdk.internal.utils.j: java.lang.String a
org.jaudiotagger.audio.mp3.LameFrame: int LAME_ID_SIZE
com.tencent.mm.opensdk.modelmsg.WXVideoObject: java.lang.String videoLowBandUrl
org.jaudiotagger.audio.mp3.MP3AudioHeader: int NO_SECONDS_IN_HOUR
org.jcodec.containers.mp4.boxes.FielExtension: int type
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_OPENSDK_APPBRAND_WEISHIVIDEO
org.jaudiotagger.tag.id3.ID3v1Tag: int FIELD_COMMENT_POS
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey COVER_ART
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox$Factory: org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox box
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: byte streamCountTwoChannel
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_WORK_PART_LEVEL1_TYPE
org.jaudiotagger.tag.TagOptionSingleton: boolean isEncodeUTF16BomAsLittleEndian
com.caij.puremusic.db.model.ArtistQueries$ArtistByIdQuery: com.caij.puremusic.db.model.ArtistQueries this$0
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
com.caij.puremusic.drive.model.SubsonicSearchResponse: java.lang.String status
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey GROUPING
com.caij.puremusic.db.model.ArtistQueries$artists$2: com.caij.puremusic.db.model.ArtistQueries$artists$2 INSTANCE
com.umeng.commonsdk.internal.a: int n
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgram$Resp: java.lang.String extMsg
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_UNKNOWN
org.jaudiotagger.audio.ogg.util.OggPageHeader: int FIELD_PAGE_SEQUENCE_NO_LENGTH
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey TONALITY
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey ALBUM_ARTISTS_SORT
com.google.android.gms.internal.play_billing.zza: com.google.android.gms.internal.play_billing.zzx zzp
com.caij.puremusic.drive.model.Part$$serializer: com.caij.puremusic.drive.model.Part$$serializer INSTANCE
org.jaudiotagger.tag.id3.ID3v23Tag: boolean unsynchronization
com.thegrizzlylabs.sardineandroid.model.Prop: java.lang.String creationdate
com.umeng.commonsdk.internal.crash.UMCrashManager: java.lang.Object mObject
com.caij.vip.GoodOrder: java.lang.String orderId
com.umeng.analytics.pro.l: java.lang.Object j
com.caij.vip.PayBody: java.lang.String outTradeNo
com.caij.puremusic.db.model.AlbumQueries$GetAlbumByArtistIdQuery$execute$1: com.caij.puremusic.db.model.AlbumQueries$GetAlbumByArtistIdQuery this$0
com.google.android.gms.internal.play_billing.zzfj: int zze
nl.adaptivity.xmlutil.core.XmlVersion: java.lang.String versionString
org.jaudiotagger.audio.wav.WavChunkType: org.jaudiotagger.audio.wav.WavChunkType CORRUPT_ID3_EARLY
com.google.common.hash.LittleEndianByteArray$UnsafeByteArray: int BYTE_ARRAY_BASE_OFFSET
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_BUFFER_SIZE
com.umeng.commonsdk.utils.UMUtils: java.lang.String UNKNOW
org.jaudiotagger.tag.TagOptionSingleton: byte id3v23DefaultTextEncoding
org.jaudiotagger.tag.asf.AsfTagCoverField: java.lang.String description
com.umeng.analytics.pro.s: java.lang.String f
com.umeng.analytics.pro.bo$b: byte g
org.jaudiotagger.tag.id3.ID3v23Frame$EncodingFlags: java.lang.String TYPE_GROUPIDENTITY
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey FBPM
org.simpleframework.xml.stream.DocumentReader$Start: org.w3c.dom.Element element
org.jaudiotagger.tag.id3.ID3v23Tag: boolean crcDataFlag
com.tencent.bugly.proguard.bo: java.util.ArrayList q
org.simpleframework.xml.core.ElementMapLabel: boolean required
org.jaudiotagger.tag.mp4.field.Mp4FieldType: org.jaudiotagger.tag.mp4.field.Mp4FieldType HTML
org.jcodec.containers.mp4.boxes.CompositionOffsetsBox$LongEntry: long count
com.umeng.commonsdk.statistics.proto.Response: com.umeng.analytics.pro.bp IMPRINT_FIELD_DESC
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MOVEMENT_TOTAL
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey TRACKTOTAL
org.jaudiotagger.audio.asf.data.GUID: java.util.Map GUID_TO_CONFIGURED
androidx.constraintlayout.core.SolverVariable$Type: androidx.constraintlayout.core.SolverVariable$Type CONSTANT
com.caij.puremusic.model.lyrics.Lyrics: java.util.ArrayList FORMATS
com.tencent.mm.opensdk.modelmsg.WXMiniProgramObject: java.lang.String path
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country INDONESIA
com.umeng.commonsdk.debug.UMLogCommon: java.lang.String SC_10014
com.umeng.analytics.vshelper.PageNameMonitor: java.lang.Object lock
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey ENGINEER
com.umeng.analytics.pro.am: java.lang.String r
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier SMHD
org.jcodec.containers.mp4.boxes.EsdsBox: int avgBitrate
com.tencent.bugly.proguard.i: java.lang.StringBuilder a
org.simpleframework.xml.core.VersionLabel: org.simpleframework.xml.Version label
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP3_START_OF_AUDIO_CONFIRMED
com.caij.puremusic.drive.model.Propstat$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.umeng.analytics.pro.bo: byte[] r
org.simpleframework.xml.core.CompositeArray: java.lang.String parent
com.google.android.gms.internal.play_billing.zza: com.google.android.gms.internal.play_billing.zza zze
com.umeng.analytics.process.UMProcessDBHelper$ProcessToMainCallback: com.umeng.analytics.process.UMProcessDBHelper a
com.umeng.analytics.pro.d: java.lang.String j
org.simpleframework.xml.core.Support: org.simpleframework.xml.transform.Matcher matcher
org.jcodec.containers.mp4.boxes.EsdsBox: int bufSize
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey ORIGINAL_ARTIST
com.caij.puremusic.helper.BackupContent: com.caij.puremusic.helper.BackupContent USER_IMAGES
com.umeng.analytics.pro.d: java.lang.String m
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: java.lang.String fieldName
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.Id3FieldType fieldType
org.simpleframework.xml.core.TextLabel: java.lang.String empty
org.simpleframework.xml.core.CompositeUnion: org.simpleframework.xml.core.LabelMap elements
com.alipay.android.phone.mrpc.core.q: boolean o
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a f
nl.adaptivity.xmlutil.core.KtXmlWriter$WriteState: nl.adaptivity.xmlutil.core.KtXmlWriter$WriteState AfterXmlDecl
com.caij.puremusic.db.model.PlaybackSongQueries$GetPlaybacksByTypeQuery: com.caij.puremusic.db.model.PlaybackSongQueries this$0
com.caij.puremusic.fragments.NowPlayingScreen: com.caij.puremusic.fragments.NowPlayingScreen Peek
com.tencent.bugly.proguard.aa: java.lang.Boolean am
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey DJMIXER
com.tencent.mm.opensdk.constants.ConstantsAPI$AppSupportContentFlag: long MMAPP_SUPPORT_LOCATION
com.umeng.analytics.pro.ae: org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId b
com.tencent.mm.opensdk.modelmsg.WXGameVideoFileObject: int URL_LENGTH_LIMIT
com.caij.puremusic.db.model.ServerArtistCoverQueries$GetByIdQuery: com.caij.puremusic.db.model.ServerArtistCoverQueries this$0
com.caij.puremusic.drive.model.AlbumMetadata: java.lang.String thumb
org.jaudiotagger.tag.datatype.NumberHashMap: java.util.Map keyToValue
com.tencent.bugly.proguard.aa: java.util.Map ar
com.tencent.bugly.proguard.aa: boolean n
com.tencent.mm.opensdk.diffdev.OAuthErrCode: com.tencent.mm.opensdk.diffdev.OAuthErrCode WechatAuth_Err_JsonDecodeErr
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey RECORD_LABEL
org.jaudiotagger.logging.FileSystemMessage: org.jaudiotagger.logging.FileSystemMessage PERMISSION_DENIED
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_PRELOAD_MINI_PROGRAM_ENVIRONMENT
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey KEY
com.umeng.commonsdk.stateless.c: int b
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: com.umeng.commonsdk.statistics.proto.d i
com.tencent.bugly.proguard.bv: byte a
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
com.umeng.analytics.pro.l: com.umeng.analytics.vshelper.a f
com.tencent.mm.opensdk.channel.MMessageActV2: java.lang.String DEFAULT_ENTRY_CLASS_NAME
com.caij.puremusic.model.DriveFileParcelable: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_INVOLVED_PEOPLE
com.tencent.mm.opensdk.modelmsg.WXFileObject: java.lang.String filePath
io.ktor.utils.io.ByteChannelSequentialBase: long _totalBytesRead
org.jaudiotagger.audio.aiff.AiffAudioHeader: java.lang.String name
com.caij.puremusic.db.model.SongQueries$getSongBySource$1: kotlin.jvm.functions.Function18 $mapper
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_CONDUCTOR
org.jaudiotagger.audio.asf.data.AudioStreamChunk: byte[] codecData
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country MALAYSIA
org.jaudiotagger.audio.asf.data.AudioStreamChunk: int bitsPerSample
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle$State mMaxState
org.jaudiotagger.audio.ogg.OggFileWriter: java.util.logging.Logger logger
org.jaudiotagger.tag.id3.framebody.FrameBodyWXXX: java.lang.String URL_WIKIPEDIA_RELEASE_SITE
org.jcodec.containers.mp4.boxes.FileTypeBox: java.lang.String majorBrand
com.thegrizzlylabs.sardineandroid.model.Prop: java.lang.String getlastmodified
com.caij.puremusic.db.model.AlbumQueries$AlbumQuery: long id
com.umeng.commonsdk.UMConfigure: java.lang.String KEY_METHOD_NAME_SETCHANNEL
nl.adaptivity.xmlutil.serialization.InputKind: nl.adaptivity.xmlutil.serialization.InputKind Text
org.jaudiotagger.audio.ogg.util.OggPageHeader: int FIELD_CAPTURE_PATTERN_POS
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey SF_ID
org.simpleframework.xml.stream.OutputElement: org.simpleframework.xml.stream.OutputNodeMap table
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.thegrizzlylabs.sardineandroid.model.Lockdiscovery: java.util.List activelock
org.jcodec.containers.mp4.boxes.Header: byte[] FOURCC_FREE
org.simpleframework.xml.core.ClassScanner: org.simpleframework.xml.Root root
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country FRANCE
org.jaudiotagger.tag.mp4.Mp4NonStandardFieldKey: org.jaudiotagger.tag.reference.Tagger tagger
com.umeng.commonsdk.internal.a: int j
org.jaudiotagger.tag.TagOptionSingleton: boolean filenameTagSave
io.ktor.utils.io.ByteBufferChannel: java.lang.Object _readOp
org.simpleframework.xml.core.Template: java.lang.String cache
org.repackage.com.vivo.identifier.IdentifierIdClient: org.repackage.com.vivo.identifier.IdentifierIdClient B
com.tencent.bugly.proguard.s: int c
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a m
com.umeng.analytics.pro.am: java.lang.String Z
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_WORK_PART_LEVEL3
org.jaudiotagger.audio.SupportedFileFormat: org.jaudiotagger.audio.SupportedFileFormat WAV
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey CLASSICAL_NICKNAME
com.caij.puremusic.network.model.Artist: java.lang.String href
org.jaudiotagger.tag.id3.valuepair.ImageFormats: java.lang.String MIME_TYPE_PICT
com.umeng.commonsdk.config.d$d: com.umeng.commonsdk.config.d$d g
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a d
com.tencent.bugly.proguard.s: long i
io.ktor.util.date.WeekDay: java.lang.String value
com.umeng.commonsdk.internal.b: com.umeng.commonsdk.internal.c c
com.umeng.commonsdk.statistics.proto.d$e: java.util.Map d
com.umeng.commonsdk.config.b: java.util.Map a
org.simpleframework.xml.core.LabelMap: org.simpleframework.xml.core.Policy policy
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey PERFORMER_NAME
org.jaudiotagger.tag.asf.AsfTagCoverField: int imageDataSize
com.caij.puremusic.model.Data: boolean radio
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MOOD_ACOUSTIC
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script BUGINESE
com.umeng.analytics.pro.an: int B
org.jaudiotagger.tag.id3.ID3v11Tag: byte RELEASE
org.simpleframework.xml.core.Factory: org.simpleframework.xml.core.Context context
org.jaudiotagger.tag.id3.ID3v22Tag: byte RELEASE
com.bumptech.glide.load.engine.DecodeJob$RunReason: com.bumptech.glide.load.engine.DecodeJob$RunReason[] $VALUES
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country SAO_TOME_AND_PRINCIPE
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode[] $VALUES
com.tencent.bugly.proguard.s: com.tencent.bugly.proguard.r b
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode INTERNAL_ERROR
com.caij.puremusic.db.model.HistoryEntityQueries$historySongs$2: com.caij.puremusic.db.model.HistoryEntityQueries$historySongs$2 INSTANCE
org.repackage.com.meizu.flyme.openidsdk.ValueData: long c
com.tencent.bugly.proguard.bf: boolean c
com.umeng.commonsdk.statistics.AnalyticsConstants: java.lang.String CFG_FIELD_KEY
com.thegrizzlylabs.sardineandroid.model.QuotaAvailableBytes: java.util.List content
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country DJIBOUTI
androidx.fragment.app.DialogFragment: android.app.Dialog mDialog
org.repackage.com.vivo.identifier.IdentifierIdClient: java.lang.String A
com.thegrizzlylabs.sardineandroid.DavPrincipal$PrincipalType: com.thegrizzlylabs.sardineandroid.DavPrincipal$PrincipalType PROPERTY
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_SENDAUTH
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType BOOLEAN_TYPE
com.caij.puremusic.db.model.FolderQueries$SelectByIdQuery: com.caij.puremusic.db.model.FolderQueries this$0
com.umeng.commonsdk.service.UMGlobalContext: java.lang.String TAG
org.simpleframework.xml.core.ElementParameter: org.simpleframework.xml.core.ElementParameter$Contact contact
androidx.preference.Preference$BaseSavedState: android.os.Parcelable$Creator CREATOR
org.repackage.com.vivo.identifier.IdentifierIdObserver: org.repackage.com.vivo.identifier.IdentifierIdClient d
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_SYNC_LYRIC
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage ID3_TAG_CRC_SIZE
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier SUBS
org.jaudiotagger.tag.id3.ID3v24FieldKey: java.lang.String frameId
org.jaudiotagger.audio.wav.chunk.WavListChunk: java.lang.String loggingName
com.alipay.sdk.m.j.c: int a
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b j
org.simpleframework.xml.core.PrimitiveList: org.simpleframework.xml.core.CollectionFactory factory
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$GetByIdQuery: com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries this$0
com.umeng.analytics.pro.d: java.lang.String aj
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MOOD_AROUSAL
com.umeng.commonsdk.statistics.proto.Response: java.util.Map metaDataMap
com.thegrizzlylabs.sardineandroid.DavResource$DavProperties: java.lang.String displayName
com.umeng.analytics.pro.s: int d
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP4_UNABLE_TO_FIND_NEXT_ATOM_BECAUSE_IDENTIFIER_IS_INVALID
com.tencent.bugly.proguard.ag$c: java.lang.String f
com.tencent.mm.opensdk.modelmsg.SendAuth$Req: java.lang.String extData
com.tencent.bugly.proguard.bl: java.lang.String c
com.caij.puremusic.drive.model.Collection: java.lang.String name
com.caij.puremusic.drive.model.SubPlayList: com.caij.puremusic.drive.model.SubPlayList$Companion Companion
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey PART_TYPE
org.jaudiotagger.audio.asf.io.ContentBrandingReader: boolean $assertionsDisabled
com.umeng.commonsdk.statistics.proto.e: long e
io.ktor.websocket.FrameType: io.ktor.websocket.FrameType PONG
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_PAY_INSURANCE
com.caij.puremusic.db.model.Album: java.lang.String albumName
com.umeng.analytics.pro.an$e: com.umeng.analytics.pro.an$e[] n
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_DESIGNER_SHARED
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey WORK_PART_LEVEL4_TYPE
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey GROUPING
androidx.fragment.app.DialogFragment: java.lang.String SAVED_SHOWS_DIALOG
com.caij.puremusic.network.model.LastFmAlbum: com.caij.puremusic.network.model.LastFmAlbum$Album album
com.tencent.mm.opensdk.diffdev.a.a: com.tencent.mm.opensdk.diffdev.a.b c
com.umeng.commonsdk.framework.a: android.content.BroadcastReceiver x
com.tencent.mm.opensdk.diffdev.a.b$a: com.tencent.mm.opensdk.diffdev.OAuthErrCode a
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage GENERAL_DELETE_FAILED
org.jcodec.containers.mp4.boxes.CleanApertureExtension: int vertOffsetDenominator
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_ARTIST_SORT_ORDER_ITUNES
org.jaudiotagger.tag.id3.framebody.FrameBodyPOPM: int RATING_FIELD_SIZE
com.caij.puremusic.drive.model.PlayListsSubsonicResponse$$serializer: com.caij.puremusic.drive.model.PlayListsSubsonicResponse$$serializer INSTANCE
com.tencent.mm.opensdk.modelmsg.WXMiniProgramObject: int disableforward
com.tencent.mm.opensdk.modelmsg.WXEmojiSharedObject: java.lang.String TAG
org.simpleframework.xml.core.ClassSchema: org.simpleframework.xml.core.Decorator decorator
com.umeng.analytics.pro.aq: java.lang.String c
com.tencent.bugly.proguard.s: long h
org.jaudiotagger.tag.id3.ID3v24Tag: int MASK_V24_IMAGE_SIZE_RESTRICTIONS
com.alipay.android.phone.mrpc.core.q: java.lang.String p
com.tencent.bugly.proguard.ao: android.content.Context k
com.umeng.commonsdk.UMConfigure: java.lang.String KEY_METHOD_NAME_SETAPPKEY
org.jcodec.containers.mp4.boxes.ReverseDnsBox$RdnsNameBox: java.lang.String FOURCC
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey ENSEMBLE_SORT
com.tencent.bugly.crashreport.biz.UserInfoBean: long f
org.simpleframework.xml.core.ElementArrayParameter: java.lang.Class type
org.jaudiotagger.audio.ogg.util.OggPageHeader: int FIELD_HEADER_TYPE_FLAG_POS
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b I
com.tencent.mm.opensdk.modelmsg.WXStateSceneDataObject$IWXStateJumpInfo: int WX_STATE_JUMP_TYPE_URL
org.jaudiotagger.audio.wav.WavSubFormat: org.jaudiotagger.audio.wav.WavSubFormat FORMAT_MULAW
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP4_IMAGE_FORMAT_IS_NOT_TO_EXPECTED_TYPE
com.umeng.commonsdk.statistics.AnalyticsConstants: boolean SUB_PROCESS_EVENT
com.tencent.mm.opensdk.modelbiz.WXChannelOpenProfile$Req: java.lang.String TAG
org.jaudiotagger.audio.iff.ChunkSummary: long fileStartLocation
com.caij.puremusic.util.CoverLyricsType: com.caij.puremusic.util.CoverLyricsType REPLACE_COVER
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.lang.Long startLocationInFile
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier SRPP
com.umeng.analytics.pro.e$d$b: java.lang.String h
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_LAUNCH_WX_MINIPROGRAM_WITH_TOKEN
com.caij.puremusic.drive.model.SubsonicPlaylist: java.lang.String id
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: java.lang.String a
io.github.aakira.napier.LogLevel: io.github.aakira.napier.LogLevel[] $VALUES
com.caij.puremusic.db.model.ArtistQueries$artists$1: kotlin.jvm.functions.Function2 $mapper
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country COCOS_KEELING_ISLANDS
com.umeng.commonsdk.UMConfigure: java.lang.Object PreInitLock
org.jaudiotagger.audio.flac.metadatablock.BlockType: int id
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country NEPAL
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a w
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier SRMC
com.tencent.mm.opensdk.modelbiz.WXChannelShareVideo$Req: java.lang.String TAG
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country INDIA
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: java.lang.String MM_CUSTOM5
nl.adaptivity.xmlutil.core.KtXmlWriter$EscapeMode: nl.adaptivity.xmlutil.core.KtXmlWriter$EscapeMode ATTRCONTENTAPOS
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script CANADIAN_SYLLABICS
org.jaudiotagger.tag.id3.ID3v22Frame: int FRAME_SIZE_SIZE
org.jaudiotagger.audio.asf.data.MetadataContainerFactory: org.jaudiotagger.audio.asf.data.MetadataContainerFactory INSTANCE
com.tencent.bugly.proguard.e: com.tencent.bugly.proguard.g g
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey ENCODED_BY
com.umeng.commonsdk.statistics.proto.e: java.util.Map j
org.jcodec.containers.mp4.boxes.TimecodeSampleEntry: int timescale
org.simpleframework.xml.stream.OutputStack$Sequence: org.simpleframework.xml.stream.OutputStack this$0
com.umeng.analytics.pro.bo$b: byte d
org.jaudiotagger.audio.ogg.util.OggPageHeader$HeaderTypeFlag: org.jaudiotagger.audio.ogg.util.OggPageHeader$HeaderTypeFlag START_OF_BITSTREAM
com.umeng.analytics.pro.i$a: com.umeng.analytics.pro.i$a[] g
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: long baseDataOffset
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey CHOIR_SORT
androidx.window.core.SpecificationComputer$VerificationMode: androidx.window.core.SpecificationComputer$VerificationMode STRICT
androidx.fragment.app.DialogFragment: int STYLE_NORMAL
kotlin.reflect.KVariance: kotlin.reflect.KVariance INVARIANT
com.thegrizzlylabs.sardineandroid.model.Propertyupdate: java.util.List removeOrSet
com.tencent.mm.opensdk.modelmsg.WXMusicVideoObject: int HD_ALBUM_FILE_LENGTH
org.jaudiotagger.audio.generic.GenericAudioHeader: java.lang.Double trackLength
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_TITLE
com.tencent.bugly.proguard.aa: long A
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey PRODUCER
com.tencent.bugly.crashreport.crash.CrashDetailBean: byte[] Y
org.jaudiotagger.audio.iff.IffHeaderChunk: int HEADER_LENGTH
com.caij.puremusic.db.model.ServerLyricsQueries$GetByIdQuery: com.caij.puremusic.db.model.ServerLyricsQueries this$0
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind ADPCM_AUDIO
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10$2: com.tencent.mm.opensdk.openapi.BaseWXApiImplV10 this$0
com.tencent.mm.opensdk.constants.ConstantsAPI$AppSupportContentFlag: long MMAPP_SUPPORT_PDF
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country TURKMENISTAN
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MUSICBRAINZ_WORK_PART_LEVEL5_ID
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessView$Req: java.lang.String TAG
com.umeng.analytics.pro.am: java.lang.String B
com.tencent.bugly.BuglyStrategy: boolean n
com.caij.puremusic.network.model.LastFmArtist$Artist$Stats: java.lang.String listeners
com.tencent.bugly.proguard.t: long g
org.jcodec.containers.mp4.boxes.GenericMediaInfoBox: short rOpColor
com.google.android.gms.internal.play_billing.zzex: com.google.android.gms.internal.play_billing.zzex zzb
com.umeng.analytics.pro.j: java.lang.String F
com.umeng.commonsdk.internal.a: java.lang.String b
org.jcodec.containers.mp4.boxes.TrunBox: int[] sampleCompositionOffset
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey WORK_PART_LEVEL6_TYPE
org.simpleframework.xml.core.ElementMapParameter: org.simpleframework.xml.core.ElementMapParameter$Contact contact
org.jaudiotagger.tag.id3.valuepair.ImageFormats: java.lang.String MIME_TYPE_PDF
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: java.lang.String MM_CUSTOM3
org.simpleframework.xml.core.CacheParameter: java.lang.String string
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey PERFORMER_NAME_SORT
com.tencent.bugly.proguard.aa: java.lang.String u
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$Req: java.lang.String TAG
com.tencent.mm.opensdk.modelmsg.WXImageObject: int PATH_LENGTH_LIMIT
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
org.slf4j.event.Level: org.slf4j.event.Level WARN
org.jaudiotagger.audio.asf.data.ChunkContainer: java.util.Set MULTI_CHUNKS
com.caij.puremusic.db.model.SongEntityQueries$insert$1: com.caij.puremusic.db.model.SongEntity $SongEntity
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgram$Req: java.lang.String extData
kotlinx.serialization.json.internal.WriteMode: kotlinx.serialization.json.internal.WriteMode POLY_OBJ
com.caij.puremusic.db.model.SongEntityQueries$SongsFromPlaylistQuery: com.caij.puremusic.db.model.SongEntityQueries this$0
com.umeng.commonsdk.UMConfigure: java.lang.String WRAPER_TYPE_REACTNATIVE
com.umeng.analytics.pro.e$b$b: java.lang.String e
com.umeng.analytics.pro.am: java.lang.String Q
com.tencent.mm.opensdk.constants.ConstantsAPI$LaunchApplication: int LAUNCH_MODE_USING_START_ACTIVITY
org.jaudiotagger.logging.LogFormatter: java.lang.String ACTION_PERFORMED
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind JPEG_VIDEO
org.jaudiotagger.audio.mp4.Chunk: long startTv
org.jaudiotagger.tag.TagOptionSingleton: boolean id3v1SaveAlbum
org.jaudiotagger.audio.mp4.Flatten: java.util.List listeners
org.jaudiotagger.audio.asf.data.LanguageList: java.util.List languages
com.tencent.mm.opensdk.modelbase.BaseResp: int errCode
org.jaudiotagger.tag.id3.ID3v24Tag: java.lang.String TYPE_TAGSIZERESTRICTION
com.umeng.analytics.b: boolean n
com.tencent.mm.opensdk.channel.MMessageActV2: java.lang.String MM_MSG_ENTRY_CLASS_NAME
com.caij.puremusic.db.model.SongQueries$songsByAlbumId$1: kotlin.jvm.functions.Function18 $mapper
org.jaudiotagger.tag.id3.AbstractID3v2Tag$FrameAndSubId: org.jaudiotagger.tag.FieldKey genericKey
com.caij.puremusic.db.model.SongQueries$SongsByTitleQuery: java.lang.String value
com.caij.puremusic.drive.model.SearchResult3: java.util.List song
com.google.android.gms.internal.play_billing.zzfs: int zze
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey SCORE
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey COMPOSER_SORT
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_ALBUM_ARTISTID
com.umeng.analytics.pro.aq: java.lang.String e
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MM_CUSTOM_4
com.tencent.bugly.crashreport.crash.CrashDetailBean: boolean d
org.jaudiotagger.audio.flac.metadatablock.BlockType: org.jaudiotagger.audio.flac.metadatablock.BlockType APPLICATION
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country SVALBARD_AND_JAN_MAYEN
com.caij.vip.Activation: int limitTagCount
com.tencent.bugly.crashreport.common.strategy.StrategyBean: long o
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
com.tencent.mm.opensdk.modelbiz.OpenWebview$Resp: java.lang.String result
com.caij.puremusic.db.model.ArtistQueries$artistByName$2: com.caij.puremusic.db.model.ArtistQueries$artistByName$2 INSTANCE
com.umeng.commonsdk.statistics.proto.c: java.util.Map j
com.caij.vip.Activation: java.lang.String code
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessView$Req: java.lang.String businessType
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script GLAGOLITIC
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country TURKS_AND_CAICOS_ISLANDS
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey TRACK
com.caij.puremusic.drive.model.MediaStream: int Index
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_LANGUAGE
io.ktor.utils.io.ByteChannelSequentialBase: java.lang.Object lastReadView$delegate
com.tencent.mm.opensdk.constants.Build: int SEND_25M_IMAGE_SDK_INT
com.alipay.apmobilesecuritysdk.e.b: java.lang.String b
com.thegrizzlylabs.sardineandroid.DavResource: com.thegrizzlylabs.sardineandroid.DavResource$DavProperties props
com.tencent.bugly.proguard.ag$b: java.lang.String a
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier GRPI
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: java.lang.Object g
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: java.lang.String ITUNES_NORMALIZATION
org.jaudiotagger.audio.aiff.AiffFileWriter: org.jaudiotagger.audio.aiff.AiffTagWriter tw
org.repackage.com.vivo.identifier.IdentifierIdClient: int k
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country COSTA_RICA
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_1
com.caij.puremusic.model.UpdateInfo: android.os.Parcelable$Creator CREATOR
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype GSM
com.tencent.bugly.crashreport.crash.CrashDetailBean: long I
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country MAYOTTE
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget
com.tencent.mm.opensdk.modelmsg.SendAuth$Options: int callbackFlags
org.jaudiotagger.tag.id3.framebody.FrameBodyTIPL: java.lang.String DJMIXER
com.umeng.analytics.pro.am: java.lang.String M
com.umeng.commonsdk.config.FieldManager: java.lang.Object d
com.umeng.analytics.pro.e$d$a: java.lang.String b
org.jaudiotagger.tag.id3.ID3v24FieldKey: java.lang.String fieldName
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage ID3_TAG_PADDING_SIZE
org.jaudiotagger.audio.dsf.DsdChunk: long chunkSizeLength
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons COROUTINE_SUSPENDED
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_WORK_PART_LEVEL5_ID
org.jaudiotagger.audio.mp3.MPEGFrameHeader: java.util.Map samplesPerFrameV1Map
com.tencent.mm.opensdk.modelmsg.WXLocationObject: double lat
org.jaudiotagger.audio.asf.io.ModificationResult: java.util.Set occuredGUIDs
com.tencent.mm.opensdk.constants.ConstantsAPI: java.lang.String SDK_VERSION
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage ID3_EXTENDED_HEADER_SIZE_TOO_SMALL
com.tencent.bugly.BuglyStrategy$a: int CRASHTYPE_NATIVE
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey WORK_PART_LEVEL6_TYPE
com.tencent.bugly.proguard.ao: int p
com.caij.puremusic.drive.model.PlexUser$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype EVDO_A
org.jaudiotagger.tag.id3.ID3v1FieldKey: org.jaudiotagger.tag.id3.ID3v1FieldKey ALBUM
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL5
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier UINF
org.jaudiotagger.logging.FileSystemMessage: org.jaudiotagger.logging.FileSystemMessage[] $VALUES
org.simpleframework.xml.core.CacheLabel: java.lang.String override
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind MPEG1_VIDEO
org.simpleframework.xml.stream.Mode: org.simpleframework.xml.stream.Mode[] $VALUES
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MUSICBRAINZ_WORK_PART_LEVEL6_ID
org.simpleframework.xml.core.DetailExtractor: org.simpleframework.xml.util.Cache methods
org.jaudiotagger.tag.id3.AbstractID3v2Tag$FrameAndSubId: org.jaudiotagger.tag.id3.AbstractID3v2Tag this$0
com.alipay.sdk.app.AuthTask: android.app.Activity a
com.tencent.mm.opensdk.modelmsg.ShowMessageFromWX$Req: java.lang.String country
com.umeng.analytics.pro.o: java.lang.String e
org.xmlpull.v1.XmlPullParser: int PROCESSING_INSTRUCTION
com.google.android.gms.internal.play_billing.zza: com.google.android.gms.internal.play_billing.zza zzg
org.simpleframework.xml.core.ElementLabel: org.simpleframework.xml.core.Expression cache
com.tencent.bugly.proguard.bq: java.lang.String f
com.thegrizzlylabs.sardineandroid.model.Propstat: java.lang.String responsedescription
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country PAPUA_NEW_GUINEA
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey ACOUSTID_FINGERPRINT
com.umeng.vt.diff.V: int TYPE_GENERALTRACK
org.simpleframework.xml.core.InstanceFactory$ClassInstance: java.lang.Object value
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey RATING
com.umeng.analytics.pro.e$d$a: java.lang.String g
com.caij.puremusic.db.model.AlbumQueries$album$1: com.caij.puremusic.db.model.AlbumQueries this$0
org.slf4j.event.Level: org.slf4j.event.Level INFO
com.caij.puremusic.db.model.PlaylistEntityQueries$SearchPlaylistByNameQuery: java.lang.String value
org.jaudiotagger.FileConstants: int BIT0
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_ADD_CARD_TO_EX_CARD_PACKAGE
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State INITIALIZED
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType COLOR_DRAWABLE_TYPE
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] $VALUES
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier TRUN
com.thegrizzlylabs.sardineandroid.model.Multistatus: java.lang.String syncToken
org.jcodec.containers.mp4.boxes.AudioSampleEntry: int lpcmFlags
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey WORK_PART_LEVEL4_TYPE
org.jaudiotagger.tag.id3.framebody.FrameBodyWXXX: java.lang.String URL_OFFICIAL_RELEASE_SITE
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a c
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a k
com.umeng.analytics.pro.o$a: int n
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey ARRANGER
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey ARTISTS_SORT
com.google.common.base.AbstractIterator$State: com.google.common.base.AbstractIterator$State FAILED
org.simpleframework.xml.transform.Transformer: org.simpleframework.xml.transform.Matcher matcher
com.umeng.commonsdk.statistics.c$1: com.umeng.commonsdk.statistics.c a
org.jaudiotagger.tag.id3.AbstractID3v1Tag: int FIELD_YEAR_LENGTH
org.simpleframework.xml.core.ModelSection: org.simpleframework.xml.core.LabelMap attributes
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier LABEL
org.slf4j.event.Level: java.lang.String levelStr
com.umeng.commonsdk.framework.UMFrUtils: java.lang.String KEY_LAST_SUCC_BUILD_TIME
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_SET
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey CONDUCTOR
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier TITL
com.tencent.mm.opensdk.utils.a: android.net.Uri a
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country SERBIA
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey TONALITY
com.caij.puremusic.drive.model.Resourcetype$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.umeng.commonsdk.statistics.c: int c
org.jcodec.containers.mp4.boxes.EsdsBox$DecoderConfig: int bufSize
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean paddingLeftSystemWindowInsets
androidx.fragment.app.DialogFragment: boolean mCancelable
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_MEDIA_TYPE
org.simpleframework.xml.core.CacheParameter: boolean primitive
com.umeng.commonsdk.statistics.common.ReportPolicy: int BATCH_AT_TERMINATE
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzb
org.jaudiotagger.tag.datatype.PartOfSet$PartOfSetValue: java.util.regex.Pattern trackNoPattern
com.caij.puremusic.drive.model.AlbumListResponse$$serializer: com.caij.puremusic.drive.model.AlbumListResponse$$serializer INSTANCE
com.tencent.mm.opensdk.constants.Build: int PAY_INSURANCE_SDK_INT
com.umeng.analytics.pro.i$a: com.umeng.analytics.pro.i$a f
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTagField: java.lang.String ERRONEOUS_ID
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_BUSINESS_CARD
androidx.fragment.app.Fragment: java.lang.Object USE_DEFAULT_TRANSITION
org.jaudiotagger.audio.asf.io.ContentBrandingReader: org.jaudiotagger.audio.asf.data.GUID[] APPLYING
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: java.lang.String TYPE_GROUPIDENTITY
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String contentType
com.umeng.analytics.pro.j: java.lang.String w
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MM_PUBLISHER
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country SOUTH_AFRICA
com.tencent.bugly.proguard.bv: java.util.Map g
org.jaudiotagger.test.MergeID3AndMP3Files: int count
com.google.android.gms.signin.internal.zak: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey DISC_TOTAL
com.caij.puremusic.drive.model.JellyfinLoginResponse: java.lang.String AccessToken
com.tencent.bugly.proguard.bo: com.tencent.bugly.proguard.bm w
com.umeng.analytics.pro.bt: byte d
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType MOBILE_HIPRI
org.jaudiotagger.audio.mp3.MP3File: int MINIMUM_FILESIZE
org.jaudiotagger.audio.mp4.ChunkReader: java.nio.channels.SeekableByteChannel input
com.tencent.mm.opensdk.modelmsg.WXMusicVideoObject: java.lang.String TAG
com.caij.puremusic.drive.model.AMetadata: java.lang.String thumb
org.jaudiotagger.audio.aiff.AiffAudioHeader: java.util.List annotations
com.tencent.bugly.proguard.u: long a
com.umeng.analytics.pro.cj: int c
org.jaudiotagger.audio.wav.WavSubFormat: org.jaudiotagger.audio.wav.WavSubFormat FORMAT_ALAW
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: java.lang.String MM_PREFIX
org.jaudiotagger.audio.aiff.chunk.CommentsChunk: int TIMESTAMP_LENGTH
com.tencent.bugly.proguard.ag$c: java.lang.String a
com.caij.puremusic.drive.model.MediaInfoWrapper: java.util.List albums
org.jaudiotagger.audio.mp3.MP3AudioHeader: java.text.SimpleDateFormat timeOutFormat
org.jaudiotagger.audio.mp4.Mp4AudioHeader: java.lang.String brand
com.tencent.bugly.crashreport.biz.UserInfoBean: long a
com.umeng.analytics.pro.d: java.lang.String am
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey PART_NUMBER
org.jaudiotagger.tag.id3.framebody.FrameBodyASPI: int BITS_PER_INDEX_POINTS_FIELD_SIZE
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MOOD_SAD
org.jaudiotagger.tag.id3.valuepair.TextEncoding: java.lang.String CHARSET_ISO_8859_1
org.jaudiotagger.tag.reference.Tagger: java.lang.String desc
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_USER_DEFINED_URL
org.jaudiotagger.audio.opus.OpusFileWriter: java.util.logging.Logger logger
com.tencent.mm.opensdk.modelmsg.WXMusicVideoObject: int URL_LENGTH_LIMIT
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_REVERB
com.caij.puremusic.drive.model.SubsonicPlaylist: java.lang.String name
org.simpleframework.xml.core.ExtractorFactory: org.simpleframework.xml.stream.Format format
com.caij.puremusic.db.model.ServerLyricsQueries$deleteById$2: com.caij.puremusic.db.model.ServerLyricsQueries$deleteById$2 INSTANCE
com.caij.puremusic.db.model.AlbumQueries$deleteAlbumById$1: long $id
org.simpleframework.xml.core.CompositeArray: org.simpleframework.xml.core.Traverser root
androidx.fragment.app.Fragment: java.lang.Boolean mIsPrimaryNavigationFragment
org.simpleframework.xml.core.InstanceFactory$ClassInstance: java.lang.Class type
org.simpleframework.xml.core.CompositeInlineList: org.simpleframework.xml.strategy.Type entry
com.tencent.mm.opensdk.diffdev.a.d: com.tencent.mm.opensdk.diffdev.a.d b
com.alipay.apmobilesecuritysdk.e.i: java.lang.String c
com.alipay.apmobilesecuritysdk.face.EnvModeConfig: int ENVIRONMENT_AAA
com.tencent.bugly.proguard.g: java.util.Map j
org.simpleframework.xml.core.ElementMapLabel: org.simpleframework.xml.core.Entry entry
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_CONTACT_URL
com.umeng.analytics.pro.bd: byte b
org.simpleframework.xml.core.CompositeList: org.simpleframework.xml.strategy.Type entry
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: java.text.SimpleDateFormat formatYearOut
com.caij.puremusic.db.model.SongQueries$songsByInfo$1: kotlin.jvm.functions.Function18 $mapper
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey ARTIST_SORT
com.caij.puremusic.db.model.ServerLyricsQueries$getById$2: com.caij.puremusic.db.model.ServerLyricsQueries$getById$2 INSTANCE
org.jcodec.containers.mp4.boxes.AliasBox: int DirectoryName
com.alipay.tscenter.biz.rpc.vkeydfp.result.AppListCmdResult: boolean needRetry
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey TRACK
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey ISRC
com.caij.puremusic.db.model.ServerSongCoverQueries$getById$1: kotlin.jvm.functions.Function3 $mapper
org.jaudiotagger.audio.dsf.DsfChunkType: java.util.Map CODE_TYPE_MAP
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_WORK
org.jaudiotagger.tag.id3.ID3v24Tag: boolean extended
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a B
com.umeng.analytics.pro.v: int c
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BEGIN_OBJECT
io.ktor.websocket.CloseReason$Codes: io.ktor.websocket.CloseReason$Codes INTERNAL_ERROR
org.repackage.com.vivo.identifier.IdentifierIdClient: int j
com.umeng.commonsdk.debug.UMLog: java.lang.String SINGLE_DIVIDER
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MOOD_AGGRESSIVE
com.thegrizzlylabs.sardineandroid.model.Prop: java.lang.String getcontenttype
com.umeng.commonsdk.framework.UMModuleRegister: int PUSH_EVENT_VALUE_HIGH
org.jaudiotagger.tag.id3.AbstractID3v2Frame$EncodingFlags: byte flags
com.google.android.material.bottomsheet.BottomSheetDialog: com.google.android.material.bottomsheet.BottomSheetBehavior behavior
org.simpleframework.xml.core.DetailScanner: boolean required
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey ACOUSTID_FINGERPRINT
com.tencent.mm.opensdk.modelmsg.WXMiniProgramObject: int miniprogramType
com.alipay.apmobilesecuritysdk.face.APSecuritySdk$1: com.alipay.apmobilesecuritysdk.face.APSecuritySdk$InitResultListener b
com.google.common.util.concurrent.AbstractFuture$Waiter: com.google.common.util.concurrent.AbstractFuture$Waiter next
org.jaudiotagger.audio.mp3.MP3File: org.jaudiotagger.tag.id3.ID3v24Tag id3v2Asv24tag
org.simpleframework.xml.transform.Transformer: org.simpleframework.xml.util.Cache error
org.simpleframework.xml.transform.Transformer: org.simpleframework.xml.util.Cache cache
org.jcodec.containers.mp4.boxes.TimecodeMediaInfoBox: short font
com.caij.puremusic.drive.model.ADriveFileResponse: java.util.List items
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.play_billing.zzew: com.google.android.gms.internal.play_billing.zzew zzi
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_REVERB_BOUNCE_RIGHT
com.tencent.bugly.proguard.ar: java.lang.String c
com.tencent.mm.opensdk.modelbiz.ChooseCardFromWXCardPackage$Resp: java.lang.String cardItemList
com.tencent.mm.opensdk.modelmsg.WXImageObject: java.lang.String TAG
com.tencent.bugly.BuglyStrategy$a: int CRASHTYPE_COCOS2DX_JS
org.xmlpull.v1.XmlPullParser: java.lang.String FEATURE_REPORT_NAMESPACE_ATTRIBUTES
org.simpleframework.xml.transform.ArrayMatcher: org.simpleframework.xml.transform.Matcher primary
com.caij.vip.GoodOrder: int STATE_PAYED
org.jaudiotagger.audio.ogg.OggVorbisTagReader$OggVorbisHeaderSizes: long setupHeaderStartPosition
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String sOAID
com.tencent.bugly.crashreport.common.strategy.StrategyBean: long d
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script HANGUL
org.simpleframework.xml.core.Source: org.simpleframework.xml.core.Session session
com.umeng.commonsdk.framework.UMWorkDispatch: int MSG_SEND_EVENT
org.jaudiotagger.audio.iff.Chunk: org.jaudiotagger.audio.iff.ChunkHeader chunkHeader
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script HANUNOO
com.umeng.commonsdk.debug.UMLogCommon: java.lang.String SC_10008
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey ARTIST
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP4_CHANGES_TO_FILE_FAILED_INCORRECT_OFFSETS
com.caij.puremusic.model.Data: java.lang.String pictureXl
org.simpleframework.xml.core.SignatureCreator: java.util.List list
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MUSICBRAINZ_WORK_PART_LEVEL1_ID
org.jaudiotagger.audio.flac.FlacFileReader: org.jaudiotagger.audio.flac.FlacTagReader tr
com.umeng.commonsdk.framework.UMModuleRegister: java.lang.String APPSTATUS
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: int trackId
com.caij.puremusic.drive.model.SubsonicPlaylist: java.lang.String coverArt
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey URL_WIKIPEDIA_RELEASE_SITE
com.umeng.commonsdk.internal.utils.f: java.lang.String b
com.umeng.analytics.pro.an: java.lang.String a
com.tencent.mm.opensdk.modelbiz.CreateChatroom$Req: java.lang.String extMsg
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_PRICE_STRING
com.google.android.material.stateful.ExtendableSavedState: android.os.Parcelable$Creator CREATOR
com.umeng.commonsdk.stateless.a: java.lang.String i
org.jaudiotagger.audio.mp3.VbriFrame: byte[] VBRI_VBR_ID
org.jaudiotagger.audio.mp3.LameFrame: int ENCODER_SIZE
org.jaudiotagger.tag.datatype.AbstractDataType: java.lang.Object value
org.simpleframework.xml.stream.PullProvider: org.xmlpull.v1.XmlPullParserFactory factory
com.umeng.analytics.pro.o$a: int l
com.caij.puremusic.db.model.Album: long dateModified
org.jaudiotagger.audio.mp4.Chunk: int sampleCount
com.tencent.bugly.proguard.br: java.lang.String g
com.google.android.material.bottomsheet.BottomSheetBehavior$1: int val$finalState
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: org.jaudiotagger.audio.aiff.chunk.AiffCompressionType rt24
com.caij.puremusic.drive.model.PlayListSubsonicResponse$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.util.HashMap frameMap
org.repackage.com.vivo.identifier.IdentifierIdClient: java.lang.String c
org.xmlpull.v1.XmlPullParser: int END_DOCUMENT
com.umeng.commonsdk.statistics.internal.a: android.content.Context a
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_ALBUMID
com.google.android.material.bottomsheet.BottomSheetBehavior: float HIDE_THRESHOLD
org.jcodec.containers.mp4.boxes.IListBox: java.util.Map values
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey COMMENT
com.google.android.material.bottomsheet.BottomSheetBehavior: int initialY
com.umeng.analytics.pro.au: int g
org.simpleframework.xml.core.DefaultScanner: org.simpleframework.xml.core.Scanner scanner
org.jaudiotagger.tag.id3.ID3Frames: java.util.TreeSet discardIfFileAlteredFrames
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country FALKLAND_ISLANDS
com.alipay.android.phone.mrpc.core.a.b: java.lang.String a
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType ANIMATED_AVIF
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier JP2I
com.umeng.analytics.pro.a$a: int d
com.umeng.commonsdk.framework.a: java.lang.Object w
org.jaudiotagger.audio.mp3.VbriFrame: int audioSize
com.tencent.bugly.crashreport.common.strategy.StrategyBean: boolean m
com.umeng.analytics.pro.am: java.lang.String A
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier CMAP
org.jaudiotagger.audio.aiff.chunk.AiffChunkType: org.jaudiotagger.audio.aiff.chunk.AiffChunkType CORRUPT_TAG_LATE
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$GetByIdQuery$execute$1: com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$GetByIdQuery this$0
com.umeng.commonsdk.framework.UMWorkDispatch: com.umeng.commonsdk.framework.a mSender
org.xmlpull.v1.XmlPullParser: int START_TAG
com.caij.puremusic.drive.model.Media: java.lang.String container
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: java.lang.String MM_CUSTOM1
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: java.lang.String TAG
com.caij.puremusic.drive.model.WebDAVToken: java.lang.String url
com.tencent.bugly.proguard.n: byte[] a
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b b
com.tencent.bugly.proguard.y: long e
com.caij.puremusic.db.model.SongQueries$GetArtistSongCountQuery: java.lang.String artistId__
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zze
com.umeng.analytics.pro.am: java.lang.String q
com.caij.puremusic.fragments.search.Filter: com.caij.puremusic.fragments.search.Filter NO_FILTER
com.umeng.commonsdk.statistics.proto.c$e: short e
org.jcodec.containers.mp4.boxes.VideoMediaHeaderBox: int rOpColor
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_POSITION_SYNC
org.jaudiotagger.audio.opus.OpusVorbisTagWriter: org.jaudiotagger.audio.opus.OpusVorbisTagReader reader
com.umeng.commonsdk.statistics.proto.a: byte n
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status INVALID_PAYLOAD
com.umeng.analytics.pro.j: java.lang.String af
org.simpleframework.xml.core.ClassSchema: boolean primitive
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier STCO
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_ACCOMPANIMENT
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTagField: boolean common
com.tencent.bugly.proguard.bq: byte[] y
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier RESD
org.jaudiotagger.audio.opus.OpusFileReader: org.jaudiotagger.audio.opus.OpusInfoReader ir
org.jcodec.containers.mp4.boxes.MetaValue: int TYPE_JPEG
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey RECORD_LABEL
org.jaudiotagger.audio.aiff.chunk.AiffChunkType: org.jaudiotagger.audio.aiff.chunk.AiffChunkType COMMON
com.caij.puremusic.db.model.ArtistQueries$insert$2: com.caij.puremusic.db.model.ArtistQueries$insert$2 INSTANCE
com.caij.puremusic.drive.model.SubsonicSong: boolean isDir
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_POSITION
com.umeng.commonsdk.statistics.common.DeviceTypeEnum: com.umeng.commonsdk.statistics.common.DeviceTypeEnum SERIALNO
com.tencent.mm.opensdk.modelmsg.WXMiniProgramObject: java.util.HashMap extraInfoMap
com.umeng.commonsdk.statistics.proto.Response$e: java.lang.String f
com.umeng.analytics.pro.bn: int e
com.tencent.bugly.proguard.bq: java.lang.String d
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
androidx.fragment.app.DialogFragment: int mStyle
org.simpleframework.xml.core.MethodContact: java.lang.Class[] items
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_URL
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country SAINT_BARTHOLEMY
com.tencent.mm.opensdk.modelbiz.WXChannelBaseJumpInfo: java.lang.String TAG
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MOOD_RELAXED
com.tencent.mm.opensdk.modelmsg.WXMediaMessage: java.lang.String messageAction
org.jcodec.containers.mp4.boxes.TrunBox: int SAMPLE_FLAGS_AVAILABLE
org.jaudiotagger.audio.wav.WavOptions: org.jaudiotagger.audio.wav.WavOptions READ_ID3_ONLY
com.caij.puremusic.network.model.LastFmAlbum$Album: java.util.List image
com.caij.puremusic.drive.model.SearchResult3: com.caij.puremusic.drive.model.SearchResult3$Companion Companion
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_WORK_PART_LEVEL3_ID
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey URL_OFFICIAL_RELEASE_SITE
com.umeng.analytics.pro.d: java.lang.String d
com.umeng.analytics.pro.j: java.lang.String G
org.jaudiotagger.audio.SupportedFileFormat: org.jaudiotagger.audio.SupportedFileFormat M4A
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b D
com.tencent.bugly.proguard.aq: boolean e
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey COMPOSER
org.jaudiotagger.audio.mp3.MPEGFrameHeader: java.lang.String channelModeAsString
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey URL_OFFICIAL_RELEASE_SITE
org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile: org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile MAIN_SYNTHESIS
androidx.fragment.app.Fragment: boolean mCalled
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey ORIGINAL_YEAR
org.jaudiotagger.audio.asf.io.CountingInputStream: long readCount
com.umeng.analytics.pro.d: java.lang.String f
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: int PRECISION_HOUR
org.simpleframework.xml.core.Primitive: org.simpleframework.xml.core.PrimitiveFactory factory
com.tencent.bugly.crashreport.crash.CrashDetailBean: long J
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey GENRE_CUSTOM
org.jaudiotagger.audio.asf.data.MetadataDescriptor: byte[] content
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean draggable
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country VIRGIN_ISLANDS_US
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICIP_PUID
com.umeng.analytics.pro.j: java.lang.String a
com.caij.puremusic.drive.model.SearchResult3$$serializer: com.caij.puremusic.drive.model.SearchResult3$$serializer INSTANCE
com.caij.puremusic.fragments.NowPlayingScreen: int titleRes
com.umeng.commonsdk.service.UMGlobalContext: java.lang.String mAppkey
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey PART_TYPE
com.umeng.commonsdk.statistics.idtracking.e: long f
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script UGARITIC
com.tencent.mm.opensdk.modelbiz.WXChannelOpenEvent$Resp: java.lang.String Key_ExtMsg
org.simpleframework.xml.core.MethodName: java.lang.String name
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country PHILIPPINES
com.caij.puremusic.db.model.ServerSongCoverQueries$GetBySourceQuery: com.caij.puremusic.db.model.ServerSongCoverQueries this$0
org.simpleframework.xml.core.ExtractorFactory$ElementListExtractor: org.simpleframework.xml.ElementListUnion union
com.tencent.bugly.proguard.ag$b: long b
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag[] $VALUES
com.umeng.analytics.pro.o$a: int C
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag DEVICE_IDLE
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean marginRightSystemWindowInsets
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
com.umeng.analytics.pro.cb: byte m
com.umeng.commonsdk.internal.utils.k: java.lang.String c
com.umeng.commonsdk.vchannel.a: java.lang.String b
com.caij.puremusic.drive.model.PlayListsResponse: com.caij.puremusic.drive.model.PlayListsResponse$Companion Companion
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey ACOUSTID_ID
com.caij.puremusic.drive.model.JellyfinArtistResponse$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.simpleframework.xml.convert.RegistryStrategy: org.simpleframework.xml.convert.Registry registry
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_ENCRYPTED_FRAME
com.umeng.analytics.process.UMProcessDBDatasSender: int UM_PROCESS_CONSTRUCTMESSAGE
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String SCRIPT
com.tencent.mm.opensdk.constants.Build: int SUPPORTED_PRELOAD_MINI_PROGRAM
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: int PRECISION_SECOND
org.simpleframework.xml.core.MethodDetail: java.lang.String name
com.caij.puremusic.db.model.ServerLyrics: java.lang.String url
com.caij.puremusic.db.model.SearchAlbumResultQueries$deleteById$1: java.lang.String $id
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey DISC_SUBTITLE
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_WORK_PART_LEVEL3_TYPE
com.thegrizzlylabs.sardineandroid.model.Prop: com.thegrizzlylabs.sardineandroid.model.Supportedlock supportedlock
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MOOD_DANCEABILITY
com.afollestad.materialdialogs.WhichButton: com.afollestad.materialdialogs.WhichButton[] $VALUES
com.tencent.bugly.proguard.ar: boolean d
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_ORIG_FILENAME
org.jcodec.containers.mp4.boxes.ClearApertureBox: float height
org.simpleframework.xml.core.PrimitiveScanner: org.simpleframework.xml.core.Detail detail
org.repackage.com.meizu.flyme.openidsdk.ValueData: int b
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String sSerialNo
com.umeng.commonsdk.UMConfigure: boolean preInitComplete
com.umeng.commonsdk.statistics.proto.d: com.umeng.analytics.pro.bp g
com.caij.puremusic.db.model.SongQueries$songsByAlbumId$1: com.caij.puremusic.db.model.SongQueries this$0
org.jaudiotagger.tag.id3.AbstractID3v2Frame: org.jaudiotagger.tag.id3.AbstractID3v2Frame$EncodingFlags encodingFlags
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.lang.String TYPE_HEADER
org.jaudiotagger.audio.mp3.XingFrame: int audioSize
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country HONG_KONG
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier PDIN
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script MANDAEAN
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag DETECT_FRAGMENT_TAG_USAGE
org.jcodec.containers.mp4.boxes.EsdsBox$DecoderConfig: int maxBitrate
org.xmlpull.v1.XmlPullParser: java.lang.String FEATURE_PROCESS_NAMESPACES
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_OPENSDK_APPBRAND
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier SEGR
org.jaudiotagger.tag.id3.ID3v22Tag: int MASK_V22_UNSYNCHRONIZATION
com.caij.puremusic.drive.model.PlaylistMetadata$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.tencent.bugly.BuglyStrategy: java.lang.String g
com.tencent.bugly.proguard.at: int m
org.simpleframework.xml.core.ElementArrayLabel: org.simpleframework.xml.stream.Format format
org.simpleframework.xml.core.Entry: org.simpleframework.xml.core.Contact contact
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_MUSIC_CD_ID
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey ENSEMBLE
org.jaudiotagger.tag.mp4.field.Mp4TagReverseDnsField: int dataSize
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage WMA_INVALID_FIELD_NAME
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_ISRC
com.tencent.mm.opensdk.modelmsg.WXTextObject: int LENGTH_LIMIT
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_LENGTH
org.jaudiotagger.audio.ogg.OggVorbisTagWriter: java.util.logging.Logger logger
com.caij.puremusic.drive.model.Media$$serializer: com.caij.puremusic.drive.model.Media$$serializer INSTANCE
com.caij.puremusic.network.model.SearchResponse: com.caij.puremusic.network.model.ArtistWrapper albums
org.simpleframework.xml.core.LabelKey: java.lang.Class owner
com.umeng.analytics.pro.l: java.lang.Object p
com.umeng.commonsdk.UMConfigure: boolean isInit
com.tencent.bugly.crashreport.crash.CrashDetailBean: boolean R
org.jaudiotagger.audio.asf.data.FileHeader: java.math.BigInteger packageCount
com.alipay.tscenter.biz.rpc.report.general.model.DataReportRequest: java.lang.String bizType
org.jaudiotagger.tag.datatype.AbstractValuePair: java.util.Map idToValue
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey YEAR
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey WORK_PART_LEVEL4_TYPE
com.umeng.commonsdk.statistics.proto.b: java.util.Map j
org.jaudiotagger.tag.reference.ISOScript: java.util.Map descriptionMap
org.jaudiotagger.audio.asf.data.FileHeader: java.math.BigInteger fileSize
com.tencent.bugly.proguard.x: java.lang.String a
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzG
com.umeng.commonsdk.statistics.common.ReportPolicy$LatentPolicy: long start
org.jaudiotagger.audio.SupportedFileFormat: org.jaudiotagger.audio.SupportedFileFormat[] $VALUES
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country COMOROS
com.caij.puremusic.db.model.SongQueries$SongsByNameArtistQuery: java.lang.String value
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_WORK_PART_LEVEL6
com.umeng.commonsdk.statistics.idtracking.d: java.lang.String a
com.umeng.commonsdk.statistics.noise.ImLatent: int _DEFAULT_MAX_LATENT
org.jaudiotagger.tag.id3.ID3v1Iterator: org.jaudiotagger.tag.id3.ID3v1Tag id3v1tag
com.umeng.analytics.pro.cb: byte g
com.umeng.analytics.pro.u: java.lang.String f
com.caij.puremusic.db.model.SongQueries$delete$2: com.caij.puremusic.db.model.SongQueries$delete$2 INSTANCE
com.caij.puremusic.db.model.PlaybackSong: int type
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country FIJI
org.simpleframework.xml.core.ElementListLabel: org.simpleframework.xml.ElementList label
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_POPULARIMETER
com.umeng.analytics.pro.o$a: int A
com.thegrizzlylabs.sardineandroid.model.Remove: com.thegrizzlylabs.sardineandroid.model.Prop prop
io.ktor.websocket.CloseReason$Codes: io.ktor.websocket.CloseReason$Codes TRY_AGAIN_LATER
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction[] $VALUES
org.jaudiotagger.audio.asf.data.MetadataDescriptor: boolean $assertionsDisabled
com.umeng.commonsdk.statistics.a: java.lang.String b
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country NORWAY
com.umeng.commonsdk.statistics.common.a$c: android.os.IBinder a
com.umeng.analytics.pro.bi: byte b
org.simpleframework.xml.core.Composite: org.simpleframework.xml.core.Primitive primitive
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine$AuthenticationInterceptor: java.lang.String password
nl.adaptivity.xmlutil.serialization.OutputKind: nl.adaptivity.xmlutil.serialization.OutputKind Text
com.umeng.commonsdk.framework.UMLogDataProtocol$UMBusinessType: com.umeng.commonsdk.framework.UMLogDataProtocol$UMBusinessType[] $VALUES
com.tencent.mm.opensdk.channel.MMessageActV2$Args: int launchMode
com.umeng.commonsdk.statistics.proto.c: com.umeng.analytics.pro.bp i
org.jaudiotagger.tag.reference.MusicalKey: int MAX_KEY_LENGTH
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey URL_WIKIPEDIA_ARTIST_SITE
com.umeng.analytics.pro.e$c$a: java.lang.String b
org.simpleframework.xml.core.AttributeLabel: org.simpleframework.xml.core.Introspector detail
com.umeng.commonsdk.statistics.proto.b$e: com.umeng.commonsdk.statistics.proto.b$e c
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String ARTISTS
org.jaudiotagger.audio.mp3.MPEGFrameHeader: java.util.Map samplingV25Map
com.caij.puremusic.db.model.Song: java.lang.String url
org.simpleframework.xml.core.MethodType: int prefix
org.simpleframework.xml.core.Support: org.simpleframework.xml.core.LabelExtractor labels
com.alipay.android.phone.mrpc.core.RpcException: int mCode
org.jaudiotagger.utils.DirectByteBufferUtils$OpenJdkReleaseStrategy: java.lang.reflect.Method cleanMethod
org.jaudiotagger.tag.wav.WavTag: org.jaudiotagger.tag.id3.AbstractID3v2Tag id3Tag
org.simpleframework.xml.core.TemplateEngine: org.simpleframework.xml.core.Template name
org.jaudiotagger.audio.iff.IffHeaderChunk: java.util.logging.Logger logger
com.umeng.commonsdk.UMConfigure: java.lang.String WRAPER_TYPE_UNITY
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country MICRONESIA
org.jaudiotagger.audio.ogg.util.OggPageHeader: java.util.logging.Logger logger
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: int FIELD_BITRATE_MIN_POS
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country HONDURAS
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind MPEG2_SIMPLE_VIDEO
com.caij.puremusic.db.model.SearchAlbumResultQueries$GetByIdQuery$execute$1: com.caij.puremusic.db.model.SearchAlbumResultQueries$GetByIdQuery this$0
org.jaudiotagger.audio.asf.data.VideoStreamChunk: long pictureHeight
org.jcodec.containers.mp4.boxes.IListBox: java.util.List rdnsValues
org.jaudiotagger.tag.TagOptionSingleton: org.jaudiotagger.audio.wav.WavOptions wavOptions
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey SINGLE_DISC_TRACK_NO
org.simpleframework.xml.core.CacheLabel: java.lang.String name
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_WORK_PART_LEVEL5_TYPE
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey CONDUCTOR_SORT
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a l
com.tencent.bugly.proguard.x: java.util.List d
com.umeng.analytics.pro.am: java.lang.String k
com.tencent.mm.opensdk.constants.Build: int CHECK_TOKEN_SDK_INT
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey ACOUSTID_ID
com.tencent.bugly.proguard.ai: java.lang.Object j
com.umeng.analytics.pro.ch: int b
org.jaudiotagger.audio.wav.WavCleaner: java.util.logging.Logger logger
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean updateImportantForAccessibilityOnSiblings
org.simpleframework.xml.stream.Splitter: char[] text
com.tencent.mm.opensdk.constants.Build: int INVOICE_AUTH_INSERT_SDK_INT
org.jaudiotagger.audio.aiff.AiffType: org.jaudiotagger.audio.aiff.AiffType[] $VALUES
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey COVER_ART_URL
com.google.android.material.bottomsheet.BottomSheetBehavior: int collapsedOffset
com.umeng.analytics.pro.f: android.content.Context b
org.simpleframework.xml.core.ClassSchema: org.simpleframework.xml.core.Section section
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_ARTISTID
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey QUALITY
com.caij.puremusic.drive.model.GoogleDriveFile: long size
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey CHOIR_SORT
org.jaudiotagger.audio.generic.GenericTag$GenericTagTextField: java.lang.String content
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int BYTE_3
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_ALBUMSTATUS
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MOOD_AROUSAL
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey SHOW_SORT
com.tencent.bugly.proguard.aa: long B
com.alipay.apmobilesecuritysdk.face.TMNTokenClient$1: java.util.Map a
com.caij.puremusic.db.model.ServerAudioFormatQueries$deleteSongBySource$2: com.caij.puremusic.db.model.ServerAudioFormatQueries$deleteSongBySource$2 INSTANCE
org.simpleframework.xml.core.CacheLabel: boolean attribute
io.ktor.utils.io.internal.CancellableReusableContinuation: java.lang.Object state
org.jaudiotagger.audio.aiff.chunk.AiffChunkType: org.jaudiotagger.audio.aiff.chunk.AiffChunkType COPYRIGHT
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType NONE
com.caij.puremusic.drive.model.ADriveItem: java.lang.String file_extension
android.support.v4.media.MediaDescriptionCompat: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.Fragment: int mTargetRequestCode
com.umeng.analytics.AnalyticsConfig: java.lang.String RTD_PERIOD
com.caij.puremusic.model.UpdateInfo: java.lang.String sha1
com.umeng.analytics.pro.j: java.lang.String ao
com.google.android.material.bottomsheet.BottomSheetDragHandleView: java.lang.String clickFeedback
com.umeng.analytics.pro.j: java.lang.String c
com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion JAVA6
com.umeng.commonsdk.statistics.proto.a: com.umeng.analytics.pro.bp i
com.umeng.analytics.pro.an$e: com.umeng.analytics.pro.an$e j
com.tencent.bugly.proguard.ba: long b
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: int maxBlockSize
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzK
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MOOD_INSTRUMENTAL
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey PERFORMER_NAME
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType DIMENSION_TYPE
com.alipay.android.phone.mrpc.core.q: java.lang.String q
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_LANGUAGE
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL1_ID
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP4_FILE_IS_VIDEO
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzcj zzab
org.simpleframework.xml.core.Introspector: org.simpleframework.xml.core.Label label
org.jaudiotagger.test.ExtractID3TagFromFile$MP3FileFilter: boolean allowDirectories
org.jaudiotagger.audio.SupportedFileFormat: org.jaudiotagger.audio.SupportedFileFormat M4B
com.tencent.bugly.proguard.ao: java.lang.String i
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int MASK_MP3_EMPHASIS
com.umeng.analytics.pro.bo: short n
org.jaudiotagger.tag.id3.ID3Frames: java.util.Map forcev23Tov24
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MOOD
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey BARCODE
org.jaudiotagger.tag.id3.ID3v1Tag: java.lang.String comment
org.jcodec.containers.mp4.boxes.CompositionOffsetsBox$LongEntry: long offset
com.caij.puremusic.db.model.ServerArtistCoverQueries$GetByIdQuery: java.lang.String id
org.jaudiotagger.audio.ogg.util.OggPageHeader: int MAXIMUM_PAGE_DATA_SIZE
org.jaudiotagger.audio.asf.io.WriteableChunkModifer: org.jaudiotagger.audio.asf.io.WriteableChunk writableChunk
org.jaudiotagger.audio.real.RealChunk: java.lang.String CONT
org.jaudiotagger.audio.wav.WavTagWriter: java.util.logging.Logger logger
com.thegrizzlylabs.sardineandroid.DavResource$DavProperties: java.lang.Long contentLength
com.umeng.commonsdk.internal.a: int x
org.jaudiotagger.audio.mp4.ChunkReader: int ttsInd
com.tencent.mm.opensdk.openapi.MMSharedPreferences: java.util.HashMap values
org.jaudiotagger.audio.mp4.ChunkWriter: java.nio.channels.SeekableByteChannel input
org.jaudiotagger.tag.asf.AsfTagField: org.jaudiotagger.audio.asf.data.MetadataDescriptor toWrap
com.umeng.commonsdk.debug.SelfChecker: java.lang.String[] FILELIST
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey BPM
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportWifiOnly: android.content.Context mContext
com.umeng.commonsdk.statistics.common.d: java.lang.String e
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean paddingTopSystemWindowInsets
com.umeng.commonsdk.statistics.common.HelperUtils: java.lang.String LINE_SEPARATOR
com.caij.puremusic.drive.model.ArtistItem$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country FINLAND
com.tencent.bugly.proguard.bu: java.util.Map f
org.jaudiotagger.audio.asf.io.CountingOutputstream: boolean $assertionsDisabled
com.tencent.bugly.proguard.aa: java.lang.String k
com.umeng.commonsdk.UMConfigure$BS_TYPE: com.umeng.commonsdk.UMConfigure$BS_TYPE UVERIFY
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey ALBUMARTIST
org.jaudiotagger.audio.wav.WavOptions: org.jaudiotagger.audio.wav.WavOptions READ_INFO_UNLESS_ONLY_ID3
org.jaudiotagger.tag.mp4.field.Mp4TagByteField: byte[] bytedata
org.jaudiotagger.audio.SupportedFileFormat: org.jaudiotagger.audio.SupportedFileFormat UNKNOWN
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_PREMIX_RIGHT_TO_LEFT
com.umeng.analytics.pro.s: int b
androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour MATCH_PARENT
com.tencent.bugly.BuglyStrategy: boolean q
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage MP3_FRAME_IS_GROUPED
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey ALBUM_SORT
com.umeng.analytics.pro.am: java.lang.String bk
com.thegrizzlylabs.sardineandroid.model.Set: com.thegrizzlylabs.sardineandroid.model.Prop prop
com.caij.puremusic.drive.model.OneDriveFileResponse: int count
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey CUSTOM2
org.simpleframework.xml.strategy.WriteGraph: java.lang.String mark
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey CUSTOM4
com.google.android.gms.internal.play_billing.zzex: com.google.android.gms.internal.play_billing.zzex zzi
com.tencent.mm.opensdk.modelmsg.WXTextObject: java.lang.String TAG
org.jaudiotagger.FileConstants: int BIT2
com.umeng.analytics.pro.am: java.lang.String p
org.jaudiotagger.audio.aiff.chunk.AiffChunkType: org.jaudiotagger.audio.aiff.chunk.AiffChunkType[] $VALUES
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country UNITED_STATES_MINOR_OUTLYING_ISLANDS
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey CUSTOM2
org.simpleframework.xml.convert.Reference: java.lang.Object data
org.simpleframework.xml.stream.InputPosition: org.simpleframework.xml.stream.EventNode source
com.umeng.analytics.pro.d: java.lang.String av
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage OGG_VORBIS_NO_FRAMING_BIT
org.jaudiotagger.tag.id3.ID3v24Tag: int MASK_V24_EXPERIMENTAL
com.umeng.commonsdk.utils.d: java.lang.String ai
com.tencent.mm.opensdk.modelbase.BaseResp$ErrCode: int ERR_COMM
org.simpleframework.xml.core.SetPart: java.lang.annotation.Annotation label
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_ITUNES_GROUPING
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey URL_LYRICS_SITE
org.jaudiotagger.FileConstants: int BIT1
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier DRMS
com.caij.puremusic.drive.model.PlexUser: com.caij.puremusic.drive.model.PlexUser$Companion Companion
com.umeng.commonsdk.statistics.proto.e$e: com.umeng.commonsdk.statistics.proto.e$e[] g
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String sWifiMac
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country VIRGIN_ISLANDS_BRITISH
com.tencent.bugly.crashreport.biz.UserInfoBean: java.lang.String c
org.jaudiotagger.audio.asf.data.MetadataDescriptor: int TYPE_DWORD
com.umeng.commonsdk.utils.UMUtils: java.lang.String KEY_CHANNEL
com.umeng.analytics.pro.d: java.lang.String M
com.caij.puremusic.db.model.SongQueries$songsByArtist$2: com.caij.puremusic.db.model.SongQueries$songsByArtist$2 INSTANCE
org.jaudiotagger.tag.mp4.field.Mp4FieldType: org.jaudiotagger.tag.mp4.field.Mp4FieldType[] $VALUES
org.repackage.com.zui.deviceidservice.IDeviceidInterface$Stub: int b
com.caij.puremusic.network.model.Image: int width
com.umeng.commonsdk.internal.a: java.lang.String J
com.tencent.mm.opensdk.modelmsg.WXStateJumpMiniProgramInfo: java.lang.String TAG
com.umeng.commonsdk.utils.d: java.lang.String X
org.repackage.com.meizu.flyme.openidsdk.b: org.repackage.com.meizu.flyme.openidsdk.OpenId a
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_WORK_PART_LEVEL3_TYPE
com.tencent.mm.opensdk.modelbiz.AddCardToWXCardPackage$WXCardItem: java.lang.String cardId
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: java.lang.String DEFAULT_VENDOR
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL3_ID
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MOOD_SAD
com.umeng.analytics.b: java.lang.String v
org.jcodec.containers.mp4.boxes.TimeToSampleBox: org.jcodec.containers.mp4.boxes.TimeToSampleBox$TimeToSampleEntry[] entries
com.umeng.analytics.pro.j: java.lang.String ak
org.jaudiotagger.audio.aiff.AiffTagWriter: java.util.logging.Logger logger
com.caij.puremusic.drive.model.SubsonicAlbum: com.caij.puremusic.drive.model.SubsonicAlbum$Companion Companion
com.umeng.commonsdk.internal.c: boolean m
com.tencent.bugly.proguard.e: java.util.HashMap h
org.jaudiotagger.tag.TagOptionSingleton: boolean preserveFileIdentity
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MUSICBRAINZ_WORK_PART_LEVEL2
com.caij.puremusic.network.model.Artist: java.lang.String id
com.tencent.bugly.proguard.u: android.content.SharedPreferences f
com.caij.puremusic.service.PlaybackLocation: com.caij.puremusic.service.PlaybackLocation[] $VALUES
com.caij.puremusic.model.DeezerResponse: java.lang.String next
com.tencent.bugly.proguard.aa: boolean D
com.tencent.mm.opensdk.constants.Build: int PAY_SUPPORTED_SDK_INT
com.google.android.gms.internal.play_billing.zzfs: com.google.android.gms.internal.play_billing.zzfs zzb
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_SYNCHRONISED_TEMPO_DATA
com.google.android.material.bottomsheet.BottomSheetDragHandleView: boolean clickToExpand
com.umeng.vt.diff.V: int TYPE_AUTOTRACK
com.thegrizzlylabs.sardineandroid.DavAce: java.util.List denied
org.repackage.com.vivo.identifier.IdentifierIdClient: android.os.Handler v
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey PERFORMER_NAME_SORT
org.jaudiotagger.audio.generic.GenericAudioHeader: java.lang.Integer bitRate
com.tencent.bugly.crashreport.crash.CrashDetailBean: java.util.Map X
org.jaudiotagger.tag.id3.ID3TextEncodingConversion: java.util.logging.Logger logger
com.tencent.bugly.proguard.ar: boolean e
com.umeng.analytics.pro.am: java.lang.String ad
org.jaudiotagger.audio.asf.data.EncryptionChunk: java.lang.String keyID
org.jaudiotagger.tag.mp4.field.Mp4TagTextField: int dataSize
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey BARCODE
com.caij.puremusic.drive.model.PlexPlaylistsResponse: com.caij.puremusic.drive.model.PlexPlaylistsResponse$Companion Companion
org.jaudiotagger.audio.generic.GenericAudioHeader: java.lang.Integer bitsPerSample
com.umeng.analytics.pro.bv: int a
com.caij.puremusic.drive.model.OneDriveFolder$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
com.tencent.mm.opensdk.modelbiz.JoinChatroom$Resp: java.lang.String extMsg
com.umeng.commonsdk.statistics.noise.ABTest: float mProb13
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_TSIZ
org.jaudiotagger.audio.mp3.MPEGFrameHeader: java.lang.Integer samplingRate
com.tencent.mm.opensdk.diffdev.DiffDevOAuthFactory: com.tencent.mm.opensdk.diffdev.IDiffDevOAuth v1Instance
com.google.android.gms.internal.play_billing.zzew: com.google.android.gms.internal.play_billing.zzew zzb
com.umeng.analytics.pro.c: java.lang.String a
org.simpleframework.xml.core.Template: int count
com.umeng.analytics.pro.an$e: com.umeng.analytics.pro.an$e d
com.umeng.analytics.pro.i: java.lang.String e
com.tencent.bugly.proguard.bn: byte[] c
org.jaudiotagger.tag.mp4.field.Mp4FieldType: org.jaudiotagger.tag.mp4.field.Mp4FieldType COVERART_GIF
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country NEW_CALEDONIA
org.simpleframework.xml.core.LabelKey: java.lang.String name
com.tencent.bugly.proguard.u: com.tencent.bugly.proguard.u b
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: java.lang.String MM_CUSTOM2
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script CUNEIFORM_SUMERO_AKKADIAN
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey VERSION
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_IS_COMPILATION
com.umeng.commonsdk.statistics.a: int c
com.umeng.commonsdk.config.d$c: com.umeng.commonsdk.config.d$c g
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat DST_OVER
org.jaudiotagger.tag.datatype.PartOfSet$PartOfSetValue: java.lang.String extra
com.google.android.exoplayer2.metadata.id3.InternalFrame: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey ORIGINAL_YEAR
com.google.android.material.bottomsheet.BottomSheetBehavior: int PEEK_HEIGHT_AUTO
org.simpleframework.xml.util.WeakCache: org.simpleframework.xml.util.WeakCache$SegmentList list
com.tencent.mm.opensdk.constants.Build: int OFFLINE_PAY_SDK_INT
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_PICTURE_TYPE
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_TORY
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MOOD_SAD
com.umeng.analytics.pro.j: java.lang.String m
com.umeng.analytics.pro.j: java.lang.String d
org.jaudiotagger.tag.id3.ID3v1FieldKey: org.jaudiotagger.tag.id3.ID3v1FieldKey GENRE
com.umeng.analytics.pro.am: java.lang.String j
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String MOBILE_NETWORK
com.umeng.commonsdk.utils.c: int c
kotlinx.coroutines.CancellableContinuationImpl: int _decision
com.umeng.analytics.pro.bo$b: byte e
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MOVEMENT
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.lang.String duplicateFrameId
com.tencent.mm.opensdk.modelmsg.WXStateJumpUrlInfo: int LENGTH_LIMIT
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_TEXT
com.umeng.common.a: java.lang.String c
com.umeng.analytics.pro.am: java.lang.String G
com.umeng.analytics.pro.j: java.lang.String O
com.google.android.material.navigation.NavigationBarPresenter$SavedState: android.os.Parcelable$Creator CREATOR
com.bumptech.glide.request.RequestCoordinator$RequestState: com.bumptech.glide.request.RequestCoordinator$RequestState[] $VALUES
org.jaudiotagger.tag.id3.ID3v1FieldKey: org.jaudiotagger.tag.id3.ID3v1FieldKey ARTIST
com.umeng.analytics.b: int p
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey CUSTOM_4
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier TREF
com.google.common.io.Files$FilePredicate: com.google.common.io.Files$FilePredicate IS_FILE
com.caij.puremusic.db.model.FolderQueries$SelectByIdQuery$execute$1: com.caij.puremusic.db.model.FolderQueries$SelectByIdQuery this$0
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey OCCASION
com.umeng.analytics.pro.bo$a: long a
com.umeng.commonsdk.statistics.idtracking.Envelope: byte[] identity
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier PERF
org.simpleframework.xml.core.Caller: org.simpleframework.xml.core.Function commit
com.umeng.analytics.c: java.lang.String[] a
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey ACOUSTID_ID
com.caij.puremusic.drive.model.OneDriveItem: java.lang.String id
com.google.android.gms.internal.play_billing.zza: com.google.android.gms.internal.play_billing.zza zzc
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage FLAC_CONTAINS_ID3TAG
com.caij.puremusic.fragments.search.Filter: com.caij.puremusic.fragments.search.Filter ARTISTS
com.tencent.bugly.proguard.c: java.util.HashMap b
org.jaudiotagger.tag.lyrics3.Lyrics3v2: java.util.HashMap fieldMap
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country BOSNIA_AND_HERZEGOVINA
org.simpleframework.xml.core.StructureBuilder: org.simpleframework.xml.core.ModelAssembler assembler
com.tencent.bugly.proguard.aj: com.tencent.bugly.proguard.ai l
com.alipay.apmobilesecuritysdk.e.f: java.lang.String a
com.tencent.bugly.BuglyStrategy$a: int CRASHTYPE_BLOCK
org.simpleframework.xml.strategy.Name: java.lang.String REFER
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey RECORD_LABEL
org.simpleframework.xml.core.GroupExtractor: java.lang.annotation.Annotation label
com.caij.puremusic.db.model.PlaylistEntityQueries$CheckPlaylistExistsQuery: long playListId
com.tencent.bugly.proguard.bd: com.tencent.bugly.proguard.ac d
org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile: org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile TTSI
com.google.common.collect.MapMakerInternalMap$Strength: com.google.common.collect.MapMakerInternalMap$Strength WEAK
org.jaudiotagger.tag.id3.ID3v1Tag: java.lang.String artist
com.tencent.bugly.BuglyStrategy: boolean l
org.jaudiotagger.tag.id3.AbstractID3v2Frame$StatusFlags: org.jaudiotagger.tag.id3.AbstractID3v2Frame this$0
com.umeng.commonsdk.utils.d: java.lang.String aj
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier YEAR
com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Listener listeners
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
com.caij.puremusic.db.model.AlbumQueries$SearchAlbumsByNameQuery: java.lang.String albumName
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzO
org.jaudiotagger.audio.mp3.VbriFrame: int VBRI_FRAMECOUNT_BUFFER_SIZE
com.umeng.analytics.pro.d: java.lang.String u
org.jaudiotagger.tag.images.ImageHandlingFactory: org.jaudiotagger.tag.images.StandardImageHandler standardImageHandler
com.thegrizzlylabs.sardineandroid.model.Location: java.lang.String href
com.umeng.commonsdk.utils.d: java.lang.String h
com.umeng.analytics.pro.d: java.lang.String R
org.simpleframework.xml.core.Caller: org.simpleframework.xml.core.Function complete
com.umeng.commonsdk.statistics.UMServerURL: java.lang.String DEFAULT_URL
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey ORIGINAL_ARTIST
com.tencent.bugly.crashreport.crash.CrashDetailBean: java.lang.String M
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_URL_ARTIST_WEB
com.tencent.bugly.crashreport.common.info.PlugInBean: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.audio.asf.data.ContentDescription: java.lang.String KEY_TITLE
com.umeng.commonsdk.debug.UMLog: java.lang.String MIDDLE_BORDER
org.jcodec.containers.mp4.boxes.EsdsBox$DescriptorParser: int ES_TAG
org.jaudiotagger.tag.id3.framebody.FrameBodyUnsupported: java.lang.String identifier
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country MARTINIQUE
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding MEMORY
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
com.umeng.analytics.pro.d: java.lang.String E
org.jaudiotagger.tag.id3.ID3v24Tag: int MASK_V24_UNSYNCHRONIZATION
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MOOD_ACOUSTIC
com.caij.puremusic.db.model.SearchAlbumResultQueries$deleteById$2: com.caij.puremusic.db.model.SearchAlbumResultQueries$deleteById$2 INSTANCE
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_ORIG_TITLE
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey URL_DISCOGS_ARTIST_SITE
com.tencent.bugly.proguard.bb: java.lang.String g
org.jaudiotagger.tag.id3.ID3v1Tag: byte MAJOR_VERSION
com.thegrizzlylabs.sardineandroid.model.SupportedReportSet: java.util.List supportedReport
com.alipay.apmobilesecuritysdk.face.TMNTokenClient$1: com.alipay.apmobilesecuritysdk.face.TMNTokenClient d
com.tencent.bugly.proguard.av: com.tencent.bugly.proguard.as b
com.caij.puremusic.drive.model.PlaylistMetadata: java.lang.String ratingKey
com.umeng.analytics.pro.j: java.lang.String z
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_RECIEVED_AS
com.tencent.bugly.crashreport.crash.CrashDetailBean: java.util.Map z
org.jaudiotagger.audio.mp3.XingFrame: int XING_FLAG_BUFFER_SIZE
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey IS_COMPILATION
org.jaudiotagger.tag.id3.AbstractID3v2Tag: int FIELD_TAGID_POS
com.umeng.analytics.pro.ay: com.umeng.analytics.pro.ch b
org.jaudiotagger.tag.mp4.field.Mp4TagReverseDnsField: java.lang.String IDENTIFIER
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String IS_CLASSICAL
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country EQUATORIAL_GUINEA
com.tencent.bugly.proguard.s: int g
org.jaudiotagger.audio.asf.io.ChunkContainerReader: java.util.logging.Logger LOGGER
com.umeng.commonsdk.UMConfigure: java.lang.String TAG
com.tencent.mm.opensdk.modelmsg.WXMiniProgramObject: java.lang.String webpageUrl
org.jcodec.containers.mp4.boxes.AudioSampleEntry: int pktSize
com.umeng.commonsdk.statistics.UMErrorCode: int E_UM_BE_EMPTY_URL_PATH
org.jaudiotagger.tag.reference.ISOScript$Script: java.lang.String description
com.tencent.bugly.proguard.bo: long b
org.simpleframework.xml.stream.OutputAttribute: java.lang.String value
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: byte channelMapFamily
org.jaudiotagger.tag.TagOptionSingleton: boolean isWriteMp4GenresAsText
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MOOD_ACOUSTIC
com.google.android.exoplayer2.metadata.id3.UrlLinkFrame: android.os.Parcelable$Creator CREATOR
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind PRIVATE_AUDIO
org.jaudiotagger.audio.aiff.chunk.TextChunk: org.jaudiotagger.audio.aiff.AiffAudioHeader aiffAudioHeader
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind MPEG4_ADTS_LOW_COMPLEXITY
androidx.fragment.app.DialogFragment: android.content.DialogInterface$OnDismissListener mOnDismissListener
com.tencent.bugly.proguard.ag$c: java.lang.String b
org.jaudiotagger.utils.tree.EventListenerList: java.lang.Object[] listenerList
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country ISRAEL
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_USER_DEFINED_URL
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey AUTHOR
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MOOD_VALENCE
org.simpleframework.xml.stream.OutputDocument: java.lang.String value
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country FRENCH_SOUTHERN_TERRITORIES
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessWebview$Resp: int businessType
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_ARTISTID
org.jaudiotagger.tag.id3.ID3v24Frames: java.util.EnumMap tagFieldToId3
com.umeng.analytics.process.UMProcessDBDatasSender: int UM_PROCESS_EVENT_KEY
org.jcodec.containers.mp4.boxes.AliasBox: java.lang.String fileName
com.alipay.apmobilesecuritysdk.f.c: com.alipay.apmobilesecuritysdk.f.b a
com.umeng.analytics.pro.cj: int b
com.umeng.commonsdk.internal.c: java.lang.String b
org.simpleframework.xml.core.VersionLabel: org.simpleframework.xml.core.Introspector detail
com.caij.puremusic.drive.model.AlbumList$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.umeng.commonsdk.config.d$c: com.umeng.commonsdk.config.d$c n
org.simpleframework.xml.stream.PullReader$Entry: java.lang.String reference
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey TEMPO
androidx.fragment.app.DialogFragment: java.lang.String SAVED_DIALOG_STATE_TAG
com.google.android.material.bottomsheet.BottomSheetBehavior: int childHeight
org.simpleframework.xml.util.Resolver$Stack$Sequence: int cursor
org.jaudiotagger.tag.id3.ID3v22Tag: java.lang.String TYPE_UNSYNCHRONISATION
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier ULST
org.simpleframework.xml.core.MethodContact: org.simpleframework.xml.core.MethodPart get
com.bumptech.glide.load.engine.DecodeJob$RunReason: com.bumptech.glide.load.engine.DecodeJob$RunReason INITIALIZE
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey ORIGINAL_ALBUM_TITLE
com.caij.puremusic.model.UpdateInfo: java.lang.String versionName
org.simpleframework.xml.core.TextLabel: java.lang.Class type
com.umeng.commonsdk.stateless.b: android.os.Handler d
org.jaudiotagger.audio.asf.data.AudioStreamChunk: long compressionFormat
org.jaudiotagger.tag.reference.MusicalKey: java.util.HashMap groundKeyMap
com.google.android.datatransport.cct.internal.QosTier: android.util.SparseArray valueMap
androidx.appcompat.app.AppCompatDialog: androidx.appcompat.app.AppCompatDelegate mDelegate
com.umeng.commonsdk.statistics.UMServerURL: java.lang.String PATH_INNER_CRASH
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_ATTACHED_PICTURE
com.tencent.bugly.crashreport.crash.anr.TraceFileHelper$a: java.lang.String b
com.tencent.mm.opensdk.modelmsg.WXVideoFileObject: int WXVideoFileShareSceneFromWX
com.umeng.commonsdk.statistics.b: boolean l
com.caij.puremusic.db.model.SearchAlbumResultQueries$getById$2: com.caij.puremusic.db.model.SearchAlbumResultQueries$getById$2 INSTANCE
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_JOINT_PAY
com.umeng.analytics.pro.au: com.umeng.analytics.pro.bp l
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey MUSICBRAINZ_RELEASEID
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey PERFORMER_NAME
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey CONDUCTOR_MM3BETA
com.tencent.mm.opensdk.diffdev.a.a$a$a: com.tencent.mm.opensdk.diffdev.a.a$a a
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey CUSTOM2
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_WORK_PART_LEVEL1_ID
com.tencent.bugly.proguard.ax: java.lang.String a
androidx.fragment.app.Fragment: boolean mFromLayout
org.simpleframework.xml.stream.InputAttribute: java.lang.Object source
org.simpleframework.xml.core.DetailScanner: boolean strict
org.jcodec.containers.mp4.boxes.Edit: long duration
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_MOVEMENT
android.support.v4.media.RatingCompat: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.audio.asf.data.StreamChunk: boolean $assertionsDisabled
org.jaudiotagger.tag.id3.reference.ID3Rating$1: int[] $SwitchMap$org$jaudiotagger$tag$reference$Tagger
org.jaudiotagger.audio.asf.io.AsfExtHeaderReader: boolean $assertionsDisabled
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource REMOTE
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey CONTACT
org.jaudiotagger.tag.TagOptionSingleton: boolean id3v1SaveTrack
com.umeng.commonsdk.statistics.idtracking.f: android.content.Context b
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MM_ORIGINAL_YEAR
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country CROATIA
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script BRAILLE
com.tencent.bugly.proguard.bo: java.util.ArrayList o
com.tencent.bugly.proguard.z: java.lang.String[] a
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country CAPE_VERDE
com.tencent.bugly.crashreport.common.strategy.StrategyBean: boolean i
com.thegrizzlylabs.sardineandroid.DavPrincipal: java.lang.String KEY_ALL
com.umeng.analytics.filter.EventList: com.umeng.commonsdk.utils.FileLockUtil mFileLock
com.tencent.mm.opensdk.modelmsg.WXWeWorkObject: int subType
androidx.fragment.app.Fragment: int CREATED
com.tencent.mm.opensdk.constants.Build: int SEND_TO_SPECIFIED_CONTACT_SDK_INT
com.umeng.commonsdk.debug.UMLogCommon: java.lang.String SC_10005
com.umeng.commonsdk.utils.UMUtils: java.lang.Object spLock
com.caij.puremusic.drive.model.AlbumItem: java.lang.String Name
com.alipay.android.phone.mrpc.core.q: android.content.Context b
org.jaudiotagger.audio.asf.data.MetadataDescriptor: int TYPE_QWORD
com.umeng.analytics.process.UMProcessDBHelper$a: int e
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MUSICBRAINZ_WORK_COMPOSITION_ID
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MOVEMENT
com.tencent.mm.opensdk.modelbiz.WXChannelJumpUrlInfo: java.lang.String TAG
com.caij.puremusic.fragments.AlbumCoverStyle: com.caij.puremusic.fragments.AlbumCoverStyle Normal
io.ktor.websocket.FrameType: io.ktor.websocket.FrameType TEXT
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier FIIN
nl.adaptivity.xmlutil.XmlDeclMode: nl.adaptivity.xmlutil.XmlDeclMode$Companion Companion
org.jaudiotagger.tag.id3.ID3v1Iterator: int TRACK
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey ARRANGER
com.umeng.analytics.pro.bi: boolean a
com.caij.puremusic.db.model.SongQueries$searchSongsByTitle$1: com.caij.puremusic.db.model.SongQueries this$0
com.caij.puremusic.drive.model.Metadata: java.lang.String type
com.alipay.apmobilesecuritysdk.e.f: java.lang.String e
com.umeng.analytics.pro.ag: java.lang.String a
com.tencent.mm.opensdk.constants.ConstantsAPI$OpenWebviewType: int TYPE_INVOICE_AUTH_INSERT
com.caij.puremusic.db.model.ServerArtistCoverQueries$getById$2: com.caij.puremusic.db.model.ServerArtistCoverQueries$getById$2 INSTANCE
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey WORK_PART_LEVEL6
com.alipay.android.phone.mrpc.core.q: org.apache.http.protocol.HttpContext g
com.umeng.analytics.pro.i: int c
com.tencent.bugly.proguard.br: byte[] i
com.caij.puremusic.drive.model.Propstat: com.caij.puremusic.drive.model.Prop prop
com.caij.puremusic.db.model.PlaylistEntityQueries$deleteById$2: com.caij.puremusic.db.model.PlaylistEntityQueries$deleteById$2 INSTANCE
com.tencent.mm.opensdk.constants.Build: int SCAN_QRCODE_AUTH_SUPPORTED_SDK_INT
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier FIRE
com.tencent.bugly.proguard.ay: android.app.ActivityManager b
com.caij.puremusic.drive.model.AlbumResponse$$serializer: com.caij.puremusic.drive.model.AlbumResponse$$serializer INSTANCE
org.simpleframework.xml.core.ElementListLabel: java.lang.String path
org.jaudiotagger.audio.asf.data.FileHeader: long minPackageSize
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script MAYAN_HIEROGLYPHS
org.jcodec.containers.mp4.boxes.AliasBox: java.lang.String volumeName
org.simpleframework.xml.stream.OutputElement: java.lang.String value
com.umeng.commonsdk.utils.d: java.lang.String K
com.umeng.analytics.pro.o$a: int B
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MOVEMENT_NO
org.jcodec.containers.mp4.boxes.TrunBox: int SAMPLE_COMPOSITION_OFFSET_AVAILABLE
org.jcodec.containers.mp4.boxes.ClearApertureBox: java.lang.String CLEF
com.tencent.bugly.BuglyStrategy: long f
com.tencent.bugly.proguard.aj: long b
org.jaudiotagger.tag.mp4.field.Mp4TagTextField: java.lang.String content
com.caij.puremusic.db.model.ServerLyricsQueries$deleteSongBySource$2: com.caij.puremusic.db.model.ServerLyricsQueries$deleteSongBySource$2 INSTANCE
org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile: org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile WAVETABLE
org.simpleframework.xml.core.ElementLabel: org.simpleframework.xml.Element label
org.simpleframework.xml.core.ExtractorFactory$ElementExtractor: org.simpleframework.xml.stream.Format format
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_TRACK
org.jaudiotagger.audio.mp3.MP3AudioHeader: org.jaudiotagger.audio.mp3.MPEGFrameHeader mp3FrameHeader
com.caij.puremusic.db.model.HistoryEntityQueries$deleteById$1: long $id
org.simpleframework.xml.core.KeyBuilder$KeyType: org.simpleframework.xml.core.KeyBuilder$KeyType[] $VALUES
org.jaudiotagger.audio.asf.io.ContentDescriptionReader: org.jaudiotagger.audio.asf.data.GUID[] APPLYING
org.jaudiotagger.audio.asf.io.ChunkContainerReader: java.util.Map readerMap
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_GENRE
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey ORIGINAL_ALBUM
com.alipay.android.phone.mrpc.core.p: java.lang.String g
com.umeng.analytics.pro.ae: boolean d
org.jaudiotagger.audio.ogg.util.VorbisHeader: int FIELD_CAPTURE_PATTERN_POS
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_RELEASE_GROUPID
org.jaudiotagger.tag.id3.ID3v24Tag: byte tagSizeRestriction
com.caij.puremusic.drive.model.DriveFile: java.lang.String filePath
com.caij.puremusic.db.model.SongQueries$SongsByArtistIdWithLikeQuery: java.lang.String artistId
org.jaudiotagger.tag.id3.AbstractID3v1Tag: java.lang.String TYPE_ALBUM
com.caij.puremusic.drive.model.SongItem: com.caij.puremusic.drive.model.SongItem$Companion Companion
com.caij.puremusic.db.model.PlaylistEntity: java.lang.String playlistName
org.jaudiotagger.tag.id3.ID3v22Tag: byte REVISION
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_MOVEMENT_NO
com.umeng.analytics.pro.cj: long g
com.umeng.commonsdk.framework.UMEnvelopeBuild: boolean transmissionSendFlag
com.umeng.commonsdk.statistics.AnalyticsConstants: java.lang.String OS
org.simpleframework.xml.transform.RegistryMatcher: org.simpleframework.xml.util.Cache types
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country SAINT_LUCIA
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey CUSTOM3
androidx.appcompat.app.AppCompatDialog: androidx.core.view.KeyEventDispatcher$Component mKeyDispatcher
com.tencent.mm.opensdk.modelmsg.WXStateSceneDataObject: java.lang.String stateTitle
com.tencent.mm.opensdk.diffdev.a.b: java.lang.String b
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey DISC_SUBTITLE
com.caij.puremusic.fragments.GridStyle: com.caij.puremusic.fragments.GridStyle Image
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage DATA_CACHE
com.tencent.bugly.proguard.bf: android.os.Handler a
org.jaudiotagger.audio.real.RealChunk: java.lang.String MDPR
io.ktor.utils.io.internal.RingBufferCapacity: int _pendingToFlush
com.tencent.bugly.proguard.ai: java.util.concurrent.LinkedBlockingQueue h
com.caij.puremusic.model.CategoryInfo$Category: com.caij.puremusic.model.CategoryInfo$Category Home
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey ALBUM_ARTISTS_SORT
com.bumptech.glide.MemoryCategory: com.bumptech.glide.MemoryCategory HIGH
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart ATOMIC
org.jaudiotagger.audio.asf.data.ContentBranding: boolean $assertionsDisabled
com.alipay.sdk.m.u.g: com.alipay.sdk.m.u.g m
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey TRACK_TOTAL
org.simpleframework.xml.stream.OutputAttribute: java.lang.String name
org.simpleframework.xml.strategy.ObjectValue: java.lang.Object value
com.google.android.material.bottomsheet.BottomSheetDialogFragment: boolean waitingForDismissAllowingStateLoss
org.simpleframework.xml.core.ObjectScanner: org.simpleframework.xml.core.ClassScanner scanner
com.tencent.mm.opensdk.modelmsg.WXLiteAppObject: java.lang.String webpageUrl
org.simpleframework.xml.core.ClassScanner: org.simpleframework.xml.core.NamespaceDecorator decorator
com.tencent.bugly.proguard.at: int h
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier CDEF
androidx.lifecycle.ProcessLifecycleOwner$3: androidx.lifecycle.ProcessLifecycleOwner this$0
com.thegrizzlylabs.sardineandroid.DavResource: int DEFAULT_STATUS_CODE
org.jcodec.containers.mp4.boxes.MetaValue: byte[] data
nl.adaptivity.xmlutil.serialization.XmlSerializationPolicy$XmlEncodeDefault: nl.adaptivity.xmlutil.serialization.XmlSerializationPolicy$XmlEncodeDefault[] $VALUES
org.simpleframework.xml.core.DetailScanner: java.util.List methods
com.google.android.material.bottomsheet.BottomSheetDialogFragment$BottomSheetDismissCallback: com.google.android.material.bottomsheet.BottomSheetDialogFragment this$0
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey CLASSICAL_NICKNAME
com.alipay.tscenter.biz.rpc.vkeydfp.request.DeviceDataReportRequest: java.lang.String umidToken
com.tencent.mm.opensdk.constants.ConstantsAPI: java.lang.String ACTION_REFRESH_WXAPP
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script EGYPTIAN_HIERATIC
com.alipay.sdk.m.u.g: com.alipay.sdk.m.u.g g
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object onCloseHandler
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country NAMIBIA
org.jaudiotagger.tag.lyrics3.Lyrics3v2Fields: java.lang.String FIELD_V2_TRACK
org.jaudiotagger.audio.mp4.Chunk: int[] sampleSizes
com.caij.puremusic.model.CategoryInfo$Category: int id
org.jaudiotagger.tag.reference.MusicalKey: java.lang.String value
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_UNIQUE_FILE_ID
com.umeng.analytics.pro.au: long m
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey IS_CLASSICAL
com.caij.puremusic.db.model.ServerArtistCoverQueries$GetByIdQuery$execute$1: com.caij.puremusic.db.model.ServerArtistCoverQueries$GetByIdQuery this$0
com.caij.puremusic.drive.model.GoogleDriveFile: java.lang.String modifiedTime
com.tencent.bugly.proguard.bq: java.lang.String w
com.thegrizzlylabs.sardineandroid.model.Multistatus: java.util.List response
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey INVOLVED_PERSON
org.jaudiotagger.tag.id3.framebody.FrameBodyTIPL: java.lang.String ENGINEER
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey CUSTOM3
org.jcodec.containers.mp4.boxes.SegmentIndexBox$Reference: boolean reference_type
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: int n
com.tencent.bugly.proguard.g: int d
com.umeng.commonsdk.config.d: java.lang.String f
com.umeng.analytics.pro.o: java.lang.String m
org.simpleframework.xml.core.Structure: org.simpleframework.xml.core.Model model
com.tencent.bugly.proguard.ao: java.lang.String l
com.caij.puremusic.network.model.Artist: java.lang.String type
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact ADDING
org.simpleframework.xml.core.CacheLabel: boolean list
org.simpleframework.xml.stream.PullReader$Start: java.lang.String reference
com.caij.puremusic.db.model.ServerSongCoverQueries$clear$1: com.caij.puremusic.db.model.ServerSongCoverQueries$clear$1 INSTANCE
com.google.android.gms.internal.play_billing.zzcj: java.lang.Class zzm
com.umeng.commonsdk.utils.d: java.lang.String ag
org.simpleframework.xml.util.WeakCache$SegmentList: java.util.List list
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey OPUS
org.simpleframework.xml.core.Structure: org.simpleframework.xml.core.Label version
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzl
com.caij.puremusic.model.ArtistWrapper: java.util.List songs
androidx.fragment.app.DialogFragment: boolean mCreatingDialog
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country ITALY
com.caij.puremusic.db.model.SongQueries$SongByPathQuery: com.caij.puremusic.db.model.SongQueries this$0
org.jcodec.containers.mp4.boxes.TrackHeaderBox: long modified
org.simpleframework.xml.core.PrimitiveArray: java.lang.String parent
org.simpleframework.xml.core.MethodContact: java.lang.Class type
com.alipay.android.phone.mrpc.core.a: int d
org.jcodec.containers.mp4.boxes.TimecodeMediaInfoBox: short[] color
com.alipay.android.phone.mrpc.core.p: long f
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MOOD_ACOUSTIC
org.simpleframework.xml.stream.NodeWriter: java.util.Set active
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_ORIG_LYRICIST
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt zzh
org.simpleframework.xml.filter.MapFilter: java.util.Map map
com.umeng.analytics.pro.e$b$a: java.lang.String c
com.umeng.commonsdk.statistics.common.MLog: int LOG_MAXLENGTH
com.bumptech.glide.load.EncodeStrategy: com.bumptech.glide.load.EncodeStrategy[] $VALUES
kotlinx.coroutines.InvokeOnCancelling: int _invoked
org.jaudiotagger.audio.mp3.MPEGFrameHeader: java.util.Map samplesPerFrameMap
com.caij.puremusic.db.model.SongQueries$songsByNameAlbum$2: com.caij.puremusic.db.model.SongQueries$songsByNameAlbum$2 INSTANCE
org.jaudiotagger.audio.wav.WavCleaner: java.io.File path
com.umeng.analytics.pro.e$b$a: java.lang.String f
com.alipay.android.phone.mrpc.core.o: java.lang.String d
io.ktor.utils.io.ByteChannelSequentialBase: int channelSize
com.umeng.analytics.pro.u: java.lang.String e
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_MUSIC
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey ISVBR
com.caij.puremusic.db.model.HistoryEntityQueries$historySongs$1: kotlin.jvm.functions.Function2 $mapper
org.jaudiotagger.tag.id3.ID3v22Tag: int MASK_V22_COMPRESSION
org.jaudiotagger.utils.tree.DefaultTreeModel: org.jaudiotagger.utils.tree.EventListenerList listenerList
com.tencent.bugly.proguard.av: int j
org.jaudiotagger.audio.real.RealChunk: byte[] bytes
org.jaudiotagger.audio.asf.data.ContainerType: boolean multiValued
com.umeng.commonsdk.statistics.proto.c$e: java.lang.String f
org.simpleframework.xml.core.InstantiatorBuilder: org.simpleframework.xml.core.LabelMap attributes
io.ktor.websocket.CloseReason$Codes: io.ktor.websocket.CloseReason$Codes VIOLATED_POLICY
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey CHOIR
org.jaudiotagger.audio.wav.WavSaveOptions: org.jaudiotagger.audio.wav.WavSaveOptions SAVE_BOTH
com.google.android.material.bottomsheet.BottomSheetBehavior: int STATE_SETTLING
org.jaudiotagger.tag.id3.ID3v22PreferredFrameOrderComparator: java.util.List frameIdsInPreferredOrder
com.umeng.commonsdk.statistics.c: com.umeng.commonsdk.statistics.noise.ABTest j
com.caij.puremusic.db.model.SongQueries$SongQuery$execute$1: com.caij.puremusic.db.model.SongQueries$SongQuery this$0
com.caij.puremusic.drive.model.JellyfinArtistResponse: int StartIndex
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MOOD
nl.adaptivity.xmlutil.EventType: nl.adaptivity.xmlutil.EventType COMMENT
com.caij.puremusic.db.model.SongQueries$allSongs$1: com.caij.puremusic.db.model.SongQueries this$0
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey LYRICS
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt[] zzaa
com.tencent.mm.opensdk.modelpay.PayReq: java.lang.String TAG
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey PERIOD
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MOOD
com.umeng.commonsdk.framework.a: int d
com.caij.puremusic.network.model.LastFmTrack$Track: java.lang.String name
com.umeng.commonsdk.UMConfigure$BS_TYPE: com.umeng.commonsdk.UMConfigure$BS_TYPE GAME
com.umeng.commonsdk.statistics.idtracking.Envelope: byte[] mGuid
org.jaudiotagger.audio.mp3.XingFrame: int BYTE_3
org.simpleframework.xml.core.ElementListLabel: org.simpleframework.xml.stream.Format format
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey MUSICBRAINZ_RELEASE_GROUP_ID
org.jaudiotagger.tag.id3.ID3v1TagField: boolean common
com.tencent.mm.opensdk.constants.ConstantsAPI: int COMMAND_SUBSCRIBE_MINI_PROGRAM_MSG
com.caij.puremusic.drive.model.PlexSongsResponse$$serializer: com.caij.puremusic.drive.model.PlexSongsResponse$$serializer INSTANCE
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_OLD_TV
com.alipay.android.phone.mrpc.core.d: com.alipay.android.phone.mrpc.core.b a
com.tencent.mm.opensdk.constants.Build: int SUPPORTED_CHANNEL_OPEN_FEED
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] $VALUES
com.thegrizzlylabs.sardineandroid.model.Prop: java.lang.String getcontentlength
com.tencent.bugly.proguard.bg: com.tencent.bugly.proguard.bg$a g
org.jaudiotagger.audio.asf.data.ContentBranding: java.util.Set ALLOWED
com.tencent.mm.opensdk.modelpay.PayReq: java.lang.String prepayId
org.jaudiotagger.tag.datatype.StringHashMap: boolean hasEmptyValue
com.caij.puremusic.model.CategoryInfo$Category: com.caij.puremusic.model.CategoryInfo$Category[] $VALUES
org.simpleframework.xml.core.ElementUnionLabel: org.simpleframework.xml.core.Label label
com.caij.puremusic.views.BreadCrumbLayout$SavedStateWrapper: android.os.Parcelable$Creator CREATOR
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage ID3_TAG_EXTENDED
com.caij.puremusic.db.model.FolderQueries$selectById$1: kotlin.jvm.functions.Function7 $mapper
com.tencent.bugly.proguard.bu: java.lang.String d
org.simpleframework.xml.stream.OutputBuffer: java.lang.StringBuilder text
org.jaudiotagger.tag.id3.ID3v23Tag: int TAG_EXT_HEADER_LENGTH
com.umeng.analytics.pro.ad: java.lang.String a
com.caij.puremusic.network.model.TokenStore: android.content.SharedPreferences sharedPreferences
com.umeng.commonsdk.statistics.proto.a$e: com.umeng.commonsdk.statistics.proto.a$e c
org.simpleframework.xml.core.TreeModel: org.simpleframework.xml.core.TreeModel$OrderList order
org.jaudiotagger.audio.asf.data.ContainerType: org.jaudiotagger.audio.asf.data.ContainerType[] $VALUES
org.jaudiotagger.tag.id3.valuepair.TextEncoding: int TEXT_ENCODING_FIELD_SIZE
org.jaudiotagger.tag.id3.framebody.FrameBodyWXXX: java.lang.String URL_DISCOGS_RELEASE_SITE
com.caij.puremusic.drive.model.MediaContainer$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey ORIGINAL_LYRICIST
com.umeng.commonsdk.internal.crash.UMCrashManager: java.lang.String CM_VERSION
com.caij.puremusic.drive.model.PlayListItem$$serializer: com.caij.puremusic.drive.model.PlayListItem$$serializer INSTANCE
io.ktor.utils.io.ByteChannelSequentialBase: java.lang.Object _lastReadView
org.jaudiotagger.audio.ogg.OggVorbisTagReader: java.util.logging.Logger logger
com.caij.puremusic.drive.model.Media: java.lang.String audioCodec
com.umeng.commonsdk.statistics.idtracking.Envelope: int CODEX_NORMAL
kotlin.time.DurationUnit: kotlin.time.DurationUnit MILLISECONDS
nl.adaptivity.xmlutil.XmlDeclMode: nl.adaptivity.xmlutil.XmlDeclMode Charset
com.tencent.mm.opensdk.modelmsg.WXDesignerSharedObject: java.lang.String designerName
com.tencent.mm.opensdk.modelbiz.WXInvoiceAuthInsert$Resp: java.lang.String wxOrderId
org.simpleframework.xml.core.TextList: org.simpleframework.xml.strategy.Type type
com.umeng.analytics.pro.au: int i
com.caij.puremusic.drive.model.GoogleDriveFileResponse: boolean incompleteSearch
org.simpleframework.xml.core.ElementMapLabel: java.lang.Class type
org.jaudiotagger.tag.id3.ID3v22Frames: java.lang.String FRAME_ID_V2_ATTACHED_PICTURE
com.tencent.bugly.proguard.aa: java.lang.String e
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
com.umeng.analytics.Gender: com.umeng.analytics.Gender Male
org.simpleframework.xml.core.CompositeInlineList: java.lang.String name
com.caij.puremusic.drive.model.EmbyAlbumsResponse: com.caij.puremusic.drive.model.EmbyAlbumsResponse$Companion Companion
com.caij.puremusic.drive.model.PlayListItem: java.lang.String Type
kotlinx.serialization.json.JsonNull: kotlinx.serialization.json.JsonNull INSTANCE
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat LUMINOSITY
com.umeng.commonsdk.UMConfigure: java.lang.String WRAPER_TYPE_HYBRID
com.google.android.gms.internal.play_billing.zzbt: java.lang.Class zzad
org.jaudiotagger.audio.asf.data.MetadataContainer$DescriptorPointer: boolean $assertionsDisabled
org.simpleframework.xml.core.ElementArrayLabel: org.simpleframework.xml.core.Expression path
com.umeng.analytics.pro.bh: byte b
com.tencent.bugly.proguard.r: boolean e
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockHeader: java.util.logging.Logger logger
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey MUSICBRAINZ_RELEASE_TYPE
com.umeng.analytics.pro.i: int a
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$OnMenuItemClickListener mOnMenuItemClickListener
androidx.fragment.app.Fragment: int ATTACHED
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_WORK_PART_LEVEL6_ID
com.umeng.analytics.pro.e$c: java.lang.String a
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_UNIQUE_FILE_ID
org.jaudiotagger.tag.id3.ID3v2ChapterFrames: java.lang.String FRAME_ID_CHAPTER
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier DEFAULT
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: int FIELD_BITRATE_MAX_POS
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey PART_NUMBER
org.jaudiotagger.audio.aiff.AiffAudioHeader: java.lang.String author
org.slf4j.event.Level: org.slf4j.event.Level[] $VALUES
org.jaudiotagger.audio.real.RealChunk: java.lang.String PROP
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String MOOD_PARTY
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: short outputGain
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey SCRIPT
org.simpleframework.xml.strategy.WriteGraph: java.lang.String label
com.umeng.commonsdk.debug.UMLog: char TOP_LEFT_CORNER
com.caij.puremusic.drive.model.DropboxDriveFileResponse: java.lang.String cursor
org.jcodec.containers.mp4.boxes.CompositionOffsetsBox$Entry: int offset
com.caij.puremusic.fragments.NowPlayingScreen: com.caij.puremusic.fragments.NowPlayingScreen Flat
com.umeng.commonsdk.utils.b: java.lang.Object b
org.simpleframework.xml.core.ClassScanner: org.simpleframework.xml.core.Function replace
org.repackage.com.vivo.identifier.IdentifierIdClient: android.os.HandlerThread u
androidx.constraintlayout.motion.widget.MotionLayout$TransitionState: androidx.constraintlayout.motion.widget.MotionLayout$TransitionState FINISHED
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey PRODUCER
org.jaudiotagger.audio.ogg.util.OggPageHeader: byte[] CAPTURE_PATTERN
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
org.simpleframework.xml.core.CompositeMapUnion: org.simpleframework.xml.core.Group group
org.simpleframework.xml.stream.CamelCaseBuilder$Element: boolean capital
org.jaudiotagger.audio.mp4.ChunkReader: int ttsSubInd
org.simpleframework.xml.core.FieldDetail: java.lang.reflect.Field field
org.jaudiotagger.audio.ogg.util.VorbisSetupHeader: boolean isValid
org.simpleframework.xml.core.CompositeValue: org.simpleframework.xml.stream.Style style
org.jcodec.containers.mp4.boxes.Box: int MAX_BOX_SIZE
com.caij.puremusic.drive.model.OneDriveItem: long size
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country PALAU
com.google.android.material.search.SearchView$TransitionState: com.google.android.material.search.SearchView$TransitionState HIDING
org.simpleframework.xml.core.SetPart: org.simpleframework.xml.util.Cache cache
com.caij.puremusic.drive.model.OneDriveFile$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country TANZANIA
org.jaudiotagger.audio.flac.FlacFileReader: org.jaudiotagger.audio.flac.FlacInfoReader ir
com.tencent.mm.opensdk.channel.MMessageActV2: java.lang.String MM_ENTRY_PACKAGE_NAME
org.simpleframework.xml.core.ClassScanner: org.simpleframework.xml.core.Support support
com.caij.puremusic.drive.model.Metadata: int addedAt
org.simpleframework.xml.util.WeakCache$Segment: org.simpleframework.xml.util.WeakCache this$0
com.tencent.mm.opensdk.modelbiz.SubscribeMiniProgramMsg$Req: java.lang.String miniProgramAppId
nl.adaptivity.xmlutil.XmlDeclMode: nl.adaptivity.xmlutil.XmlDeclMode Minimal
com.caij.puremusic.drive.model.SubPlayList: java.util.List entry
org.simpleframework.xml.core.SignatureScanner: org.simpleframework.xml.core.SignatureBuilder builder
com.google.android.gms.internal.play_billing.zzcj: com.google.android.gms.internal.play_billing.zzcj zze
com.thegrizzlylabs.sardineandroid.DavPrincipal$PrincipalType: com.thegrizzlylabs.sardineandroid.DavPrincipal$PrincipalType[] $VALUES
kotlin.collections.State: kotlin.collections.State NotReady
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage OGG_CONTAINS_ID3TAG
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier UNRECOGNIZED
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MOOD_RELAXED
org.jaudiotagger.audio.mp3.MPEGFrameHeader: boolean isPadding
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier TRAK
com.caij.puremusic.drive.model.Propstat$$serializer: com.caij.puremusic.drive.model.Propstat$$serializer INSTANCE
com.tencent.bugly.crashreport.crash.h5.H5JavaScriptInterface: java.util.HashSet a
com.thegrizzlylabs.sardineandroid.BuildConfig: java.lang.String BUILD_TYPE
org.jaudiotagger.audio.mp4.EncoderType: org.jaudiotagger.audio.mp4.EncoderType APPLE_LOSSLESS
com.tencent.bugly.proguard.aj: int e
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a b
org.json.alipay.c: int a
com.alipay.apmobilesecuritysdk.face.APSecuritySdk: java.lang.Object c
org.simpleframework.xml.core.ExtractorFactory$ExtractorBuilder: java.lang.Class type
org.jaudiotagger.tag.id3.AbstractID3v1Tag: int FIELD_TITLE_POS
org.simpleframework.xml.transform.LocaleTransform: java.util.regex.Pattern pattern
org.jaudiotagger.tag.reference.Languages: org.jaudiotagger.tag.reference.Languages languageTypes
com.google.android.gms.internal.play_billing.zzew: com.google.android.gms.internal.play_billing.zzew[] zzs
com.umeng.commonsdk.utils.UMUtils: java.lang.String VALUE_LINK_VERSION
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey MUSICBRAINZ_WORK_PART_LEVEL4_ID
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MUSICBRAINZ_WORKID
com.umeng.commonsdk.statistics.idtracking.f: java.lang.String a
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey MUSICBRAINZ_ALBUMARTISTID
com.caij.puremusic.model.UpdateInfo: java.lang.String appId
com.umeng.vt.diff.V: java.lang.String VISUAL_TRACK_PG
com.caij.puremusic.db.model.AlbumQueries$GetAlbumByArtistIdQuery: long artistId
com.caij.puremusic.model.lyrics.Lyrics: java.lang.String data
com.umeng.commonsdk.internal.utils.d$a: java.lang.String k
org.jaudiotagger.tag.id3.valuepair.TextEncoding: byte UTF_8
com.caij.puremusic.drive.model.OneDriveFile$$serializer: com.caij.puremusic.drive.model.OneDriveFile$$serializer INSTANCE
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage GENERAL_WRITE_FAILED_BECAUSE_FILE_IS_TOO_SMALL
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier GITN
com.umeng.analytics.process.c: android.content.Context c
androidx.fragment.app.Fragment: boolean mBeingSaved
com.tencent.bugly.proguard.c: java.util.HashMap e
androidx.constraintlayout.core.widgets.ConstraintAnchor$Type: androidx.constraintlayout.core.widgets.ConstraintAnchor$Type BOTTOM
com.umeng.analytics.pro.an: com.umeng.analytics.pro.bp t
com.caij.puremusic.db.model.AlbumQueries$insert$2: com.caij.puremusic.db.model.AlbumQueries$insert$2 INSTANCE
com.umeng.analytics.pro.bm: java.lang.Class a
com.caij.puremusic.db.model.SongQueries$allSongs$2: com.caij.puremusic.db.model.SongQueries$allSongs$2 INSTANCE
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country TRINIDAD_AND_TOBAGO
com.umeng.analytics.pro.am: java.lang.String at
org.jaudiotagger.audio.flac.FlacStreamReader: int FLAC_STREAM_IDENTIFIER_LENGTH
com.umeng.analytics.vshelper.b: java.lang.String a
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_LYRICS
com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport$SyncLevel: com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport$SyncLevel[] $VALUES
com.caij.puremusic.db.model.ServerArtistCoverQueries$deleteSongBySource$1: long $sourceId
com.thegrizzlylabs.sardineandroid.model.Report: org.w3c.dom.Element any
com.caij.puremusic.util.theme.ThemeMode: com.caij.puremusic.util.theme.ThemeMode LIGHT
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier FRMA
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country TUNISIA
org.jaudiotagger.tag.id3.AbstractID3v1Tag: byte[] TAG_ID
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage FINISHED
org.jaudiotagger.audio.aiff.AiffAudioHeader$Endian: org.jaudiotagger.audio.aiff.AiffAudioHeader$Endian[] $VALUES
com.umeng.analytics.pro.au: int f
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine$AuthenticationInterceptor: com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine this$0
com.caij.puremusic.db.model.ServerSongCover: long sourceId
org.jaudiotagger.audio.asf.data.StreamChunk: int streamNumber
com.alipay.sdk.m.r.a: com.alipay.sdk.m.r.a[] h
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier ALBUM_GAIN
com.tencent.mm.opensdk.openapi.MMSharedPreferences: android.content.ContentResolver cr
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_GAME_VIDEO_FILE
org.jaudiotagger.tag.id3.ID3v1Iterator: int ALBUM
org.jaudiotagger.tag.datatype.DataTypes: java.lang.String OBJ_REVERB_BOUNCE_LEFT
org.jcodec.containers.mp4.boxes.SegmentIndexBox: long reference_ID
com.umeng.commonsdk.statistics.internal.c$3: com.umeng.commonsdk.statistics.internal.c a
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: java.text.SimpleDateFormat formatDateIn
com.umeng.analytics.pro.br: byte a
com.umeng.commonsdk.debug.UMRTLog: java.lang.String RTLOG_PROP
org.simpleframework.xml.core.Composite$Injector: org.simpleframework.xml.core.Composite this$0
com.alipay.android.phone.mrpc.core.p: java.lang.String d
com.tencent.mm.opensdk.modelmsg.WXMiniProgramObject: java.lang.String userName
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessWebview$Req: java.util.HashMap queryInfo
org.jcodec.containers.mp4.boxes.SampleEntry: short drefInd
androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type[] $VALUES
org.repackage.com.vivo.identifier.IdentifierIdClient: org.repackage.com.vivo.identifier.IdentifierIdObserver q
com.tencent.bugly.proguard.bf: java.util.List f
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
org.simpleframework.xml.core.ElementParameter: java.lang.Class type
com.google.common.hash.LittleEndianByteArray$UnsafeByteArray: com.google.common.hash.LittleEndianByteArray$UnsafeByteArray[] $VALUES
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey MUSICBRAINZ_DISC_ID
com.umeng.analytics.pro.an: com.umeng.analytics.pro.bp p
com.umeng.commonsdk.statistics.common.d: com.umeng.commonsdk.statistics.common.d$a d
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script TAI_VIET
com.umeng.analytics.pro.j: java.lang.String aa
androidx.appcompat.widget.Toolbar: androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback
com.umeng.commonsdk.statistics.common.ULog: int LEVEL_VERBOSE
com.caij.puremusic.fragments.GridStyle: int id
com.tencent.mm.opensdk.constants.Build: int OPEN_BUSINESS_WEBVIEW_SDK_INT
org.jaudiotagger.audio.asf.io.ChunkHeaderReader: org.jaudiotagger.audio.asf.io.ChunkHeaderReader INSTANCE
org.simpleframework.xml.core.TextList: org.simpleframework.xml.core.CollectionFactory factory
org.simpleframework.xml.core.GroupExtractor: org.simpleframework.xml.core.ExtractorFactory factory
com.google.android.material.bottomsheet.BottomSheetDragHandleView: boolean interactable
com.caij.puremusic.fragments.AlbumCoverStyle: com.caij.puremusic.fragments.AlbumCoverStyle FullCard
org.jaudiotagger.tag.id3.ID3v24Frames: java.lang.String FRAME_ID_UNSYNC_LYRICS
com.caij.puremusic.drive.model.Part$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.umeng.analytics.pro.e$c$b: java.lang.String a
com.alipay.android.phone.mrpc.core.q: org.apache.http.client.CookieStore h
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: int MASK_ENCRYPTION
org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId: org.repackage.com.zui.deviceidservice.IDeviceidInterface b
org.simpleframework.xml.core.DefaultScanner: org.simpleframework.xml.core.Detail detail
org.jcodec.containers.mp4.boxes.SampleToChunkBox$SampleToChunkEntry: int count
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey MM_ORIGINAL_ALBUM_TITLE
com.umeng.analytics.pro.am: java.lang.String ao
com.alipay.apmobilesecuritysdk.face.EnvModeConfig: int ENVIRONMENT_SIT
org.simpleframework.xml.core.Persister: org.simpleframework.xml.strategy.Strategy strategy
com.caij.puremusic.drive.model.PlexUser: java.lang.String uuid
com.umeng.analytics.pro.j: java.lang.String an
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country BOLIVIA
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: java.lang.String description
org.jaudiotagger.tag.id3.ID3v23Frames: java.lang.String FRAME_ID_V3_ITUNES_GROUPING
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority HIGHEST
org.jcodec.containers.mp4.BoxFactory: org.jcodec.containers.mp4.IBoxFactory sample
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag DETECT_FRAGMENT_REUSE
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier PITM
com.caij.puremusic.db.model.Album: java.lang.String url
org.jaudiotagger.audio.ogg.util.OggPageHeader$HeaderTypeFlag: org.jaudiotagger.audio.ogg.util.OggPageHeader$HeaderTypeFlag END_OF_BITSTREAM
com.umeng.analytics.process.UMProcessDBDatasSender: android.content.Context mContext
com.umeng.analytics.pro.d: java.lang.String q
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: int PRECISION_MONTH
com.umeng.analytics.pro.l: boolean o
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country KOREA_SOUTH
org.jaudiotagger.tag.id3.ID3v11Tag: java.lang.String TYPE_TRACK
org.jaudiotagger.tag.id3.ID3v24Tag: int MASK_V24_CRC_DATA_PRESENT
com.tencent.mm.opensdk.diffdev.a.c$a: java.lang.String b
org.jaudiotagger.audio.iff.ChunkHeader: long size
org.simpleframework.xml.stream.OutputDocument: org.simpleframework.xml.stream.OutputNodeMap table
com.umeng.analytics.pro.bn: boolean c
com.umeng.commonsdk.utils.c: int d
com.umeng.analytics.pro.bo: com.umeng.analytics.pro.bp o
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey SOURCEMEDIA
com.tencent.mm.opensdk.diffdev.a.a: android.os.Handler a
com.caij.puremusic.db.model.ServerSongCoverQueries$getById$2: com.caij.puremusic.db.model.ServerSongCoverQueries$getById$2 INSTANCE
com.umeng.commonsdk.utils.UMUtils: java.lang.String VALUE_GAME_VERSION
com.tencent.bugly.crashreport.crash.CrashDetailBean: java.lang.String L
com.umeng.commonsdk.UMConfigure: java.lang.String sAppkey
org.jaudiotagger.tag.id3.framebody.FrameBodyTDAT: int MONTH_END
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier IPRO
com.tencent.bugly.proguard.aj: com.tencent.bugly.proguard.ah o
org.simpleframework.xml.core.DetailScanner: java.lang.String name
com.umeng.analytics.pro.j: java.lang.String v
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey YEAR
com.caij.puremusic.drive.model.AlbumMetadata$$serializer: kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor
com.umeng.commonsdk.statistics.proto.c: java.util.Map a
org.jaudiotagger.tag.id3.ID3v22Frame: int FRAME_HEADER_SIZE
com.google.android.gms.common.internal.TelemetryData: android.os.Parcelable$Creator CREATOR
org.jcodec.containers.mp4.boxes.SegmentIndexBox: long timescale
com.alipay.tscenter.biz.rpc.vkeydfp.request.DeviceDataReportRequest: java.lang.String token
org.jcodec.containers.mp4.boxes.MetaValue: int TYPE_STRING_UTF16
com.umeng.commonsdk.utils.d: java.lang.String ak
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int SYNC_BYTE1
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$Req: int WXSceneTimeline
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int TYPE_RECORD
com.tencent.bugly.proguard.ao: int d
org.jaudiotagger.tag.datatype.SynchronisedTempoCode: org.jaudiotagger.tag.datatype.NumberFixedLength timestamp
com.caij.puremusic.drive.model.SubsonicSong: long size
org.jcodec.containers.mp4.boxes.AudioSampleEntry: short sampleSize
org.simpleframework.xml.core.LabelKey: java.lang.Class type
StatusBarLyric.API.StatusBarLyric: java.lang.String serviceName
com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Waiter waiters
com.alipay.tscenter.biz.rpc.vkeydfp.result.BaseResult: java.lang.String resultCode
org.simpleframework.xml.core.Structure: boolean primitive
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String sAndroidID
org.jaudiotagger.tag.id3.valuepair.ImageFormats: java.lang.String MIME_TYPE_TIFF
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country NORTHERN_MARIANA_ISLANDS
com.tencent.mm.opensdk.modelmsg.WXImageObject: int CONTENT_LENGTH_LIMIT
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey REMIXER
com.caij.puremusic.drive.model.AlbumList: java.util.List album
com.caij.puremusic.network.model.LastFmArtist$Artist$Bio: java.lang.String content
com.thegrizzlylabs.sardineandroid.model.Lockinfo: com.thegrizzlylabs.sardineandroid.model.Lockscope lockscope
com.umeng.commonsdk.statistics.noise.Defcon: int LEVEL_2
org.simpleframework.xml.core.CompositeMapUnion: org.simpleframework.xml.core.Expression path
com.umeng.analytics.pro.e$c$a: java.lang.String e
com.umeng.commonsdk.framework.UMFrUtils: java.lang.String getCurrentProcessName(android.content.Context)
org.jaudiotagger.tag.id3.ID3v24Tag: java.util.Comparator getPreferredFrameOrderComparator()
com.caij.puremusic.drive.model.PlexSectionsResponse: PlexSectionsResponse()
com.caij.puremusic.drive.model.PlayListsResponse: int hashCode()
com.tencent.mmkv.MMKV: void sync(boolean)
com.caij.puremusic.drive.model.PlayListItem: java.lang.String component1()
com.umeng.commonsdk.statistics.proto.d: boolean e()
com.umeng.analytics.b: void a(java.lang.String)
com.umeng.commonsdk.statistics.proto.a$d: com.umeng.commonsdk.statistics.proto.a$c a()
com.caij.puremusic.db.model.Song: java.lang.String getArtistId()
org.jaudiotagger.tag.images.Artwork: void setLinked(boolean)
org.jcodec.containers.mp4.boxes.DataBox: org.jcodec.containers.mp4.boxes.DataBox createDataBox(int,int,byte[])
org.jaudiotagger.audio.mp3.XingFrame: int getAudioSize()
org.simpleframework.xml.core.InstantiatorBuilder: void validateConstructors(org.simpleframework.xml.core.LabelMap)
org.simpleframework.xml.core.CacheLabel: org.simpleframework.xml.core.Label getLabel(java.lang.Class)
com.tencent.bugly.crashreport.CrashReport: void postException(java.lang.Thread,int,java.lang.String,java.lang.String,java.lang.String,java.util.Map)
org.jaudiotagger.tag.datatype.PairedTextEncodedStringNullTerminated$ValuePairs: void add(java.lang.String,java.lang.String)
org.simpleframework.xml.core.AnnotationFactory: java.lang.annotation.Annotation getInstance(java.lang.Class,java.lang.Class[])
org.simpleframework.xml.core.TreeModel$OrderList: TreeModel$OrderList()
com.caij.puremusic.db.model.Album: java.lang.String component8()
com.umeng.commonsdk.internal.UMInternalManagerAgent: void sendInternalEnvelopeByStateful2(android.content.Context)
org.jaudiotagger.tag.id3.ID3v23Frame: int getGroupIdentifier()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
android.support.v4.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker: void continueSettlingToState(int)
org.jcodec.containers.mp4.boxes.MovieFragmentHeaderBox: void parse(java.nio.ByteBuffer)
org.simpleframework.xml.core.PathParser: boolean isEmpty()
com.umeng.commonsdk.statistics.common.ReportPolicy$SmartPolicy: ReportPolicy$SmartPolicy(com.umeng.commonsdk.statistics.internal.StatTracer)
org.simpleframework.xml.core.Expression: java.lang.String getFirst()
org.jaudiotagger.tag.datatype.NumberFixedLength: void setSize(int)
com.tencent.bugly.proguard.l: void a(java.lang.Object,int)
kotlin.NoWhenBranchMatchedException: NoWhenBranchMatchedException()
com.google.android.material.slider.Slider: void setHaloRadius(int)
org.jaudiotagger.tag.id3.AbstractID3v2Frame: int getFrameIdSize()
com.umeng.commonsdk.statistics.common.ReportPolicy$LatentPolicy: ReportPolicy$LatentPolicy(int)
org.simpleframework.xml.core.GroupExtractor$Registry: void registerText(org.simpleframework.xml.core.Label)
com.tencent.bugly.proguard.at: com.tencent.bugly.proguard.at a(android.content.Context,boolean,com.tencent.bugly.BuglyStrategy$a)
org.simpleframework.xml.stream.Attribute: java.lang.String getName()
com.caij.puremusic.db.model.PlayCountEntity: com.caij.puremusic.db.model.PlayCountEntity copy(long,long,long)
com.google.android.material.appbar.AppBarLayout: void setLiftableOverrideEnabled(boolean)
org.jaudiotagger.audio.asf.data.MetadataContainerFactory: org.jaudiotagger.audio.asf.data.MetadataContainerFactory getInstance()
com.umeng.common.b: void a(android.content.Context,java.lang.String)
com.caij.puremusic.db.model.SongQueries$getSongCountBySourceId$1: SongQueries$getSongCountBySourceId$1()
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$BreadthFirstEnumeration: DefaultMutableTreeNode$BreadthFirstEnumeration(org.jaudiotagger.utils.tree.DefaultMutableTreeNode,org.jaudiotagger.utils.tree.TreeNode)
com.google.common.base.Function: java.lang.Object apply(java.lang.Object)
com.umeng.analytics.pro.aw$a: int compare(java.lang.Object,java.lang.Object)
com.umeng.commonsdk.statistics.common.d: void a(java.lang.String,java.lang.String)
com.caij.puremusic.network.model.LastFmAlbum$Album: void setListeners(java.lang.String)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHintFromLayout()
org.simpleframework.xml.stream.OutputNode: boolean isCommitted()
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
com.tencent.mm.opensdk.modelbiz.AddCardToWXCardPackage$Req: void toBundle(android.os.Bundle)
com.caij.puremusic.drive.model.OneDriveItem: java.lang.String component6()
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage[] values()
com.tencent.bugly.proguard.as: void a(java.util.Map,com.tencent.bugly.crashreport.crash.CrashDetailBean)
com.caij.puremusic.db.model.PlayCountEntityQueries$update$1: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query songsByNameAlbum(java.lang.String,java.lang.String,kotlin.jvm.functions.Function18)
org.jaudiotagger.audio.asf.io.AsfExtHeaderModifier: void copyChunk(org.jaudiotagger.audio.asf.data.GUID,java.io.InputStream,java.io.OutputStream)
org.json.alipay.b: boolean b(java.lang.String)
com.caij.puremusic.drive.model.PlexSectionsResponse: com.caij.puremusic.drive.model.FMediaContainer getMediaContainer()
org.simpleframework.xml.core.PrimitiveScanner$EmptySection: java.lang.String getPrefix()
org.jcodec.containers.mp4.boxes.TrackHeaderBox: int getNo()
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse: int getStartIndex()
org.jaudiotagger.tag.reference.GenreTypes: java.lang.Integer getIdForName(java.lang.String)
com.umeng.vt.diff.Channel: void storeConfig(java.util.Map)
com.umeng.commonsdk.statistics.proto.Response: com.umeng.analytics.pro.bp access$400()
com.umeng.commonsdk.config.a: boolean a(int,int)
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: boolean isUserOpened()
org.simpleframework.xml.stream.Indenter: java.lang.String indent(int)
org.simpleframework.xml.core.Entry: boolean isAttribute()
nl.adaptivity.xmlutil.serialization.InputKind: boolean mapsTo$xmlutil_serialization(nl.adaptivity.xmlutil.serialization.structure.XmlDescriptor)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockHeader: MetadataBlockHeader(java.nio.ByteBuffer)
com.caij.puremusic.db.model.ServerLyricsQueries$insert$1: ServerLyricsQueries$insert$1(com.caij.puremusic.db.model.ServerLyrics)
com.tencent.bugly.proguard.e: byte[] a()
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
org.jaudiotagger.audio.mp3.MPEGFrameHeader: java.lang.String getChannelModeAsString()
com.caij.puremusic.model.CategoryInfo: int component1()
com.caij.puremusic.drive.model.AMediaContainer$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.tencent.mm.opensdk.modelbiz.WXOpenCustomerServiceChat$Resp: WXOpenCustomerServiceChat$Resp(android.os.Bundle)
com.tencent.bugly.proguard.ao: java.lang.String b()
org.jcodec.containers.mp4.boxes.TimecodeSampleEntry: void parse(java.nio.ByteBuffer)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMR: FrameBodyCOMR(byte,java.lang.String,java.lang.String,java.lang.String,byte,java.lang.String,java.lang.String,java.lang.String,byte[])
com.caij.puremusic.drive.model.EmbyFoldersResponse$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.tag.asf.AsfTag: org.jaudiotagger.tag.asf.AsfTagTextField createRatingField(java.lang.String)
com.google.android.material.appbar.CollapsingToolbarLayout: void setTitleEnabled(boolean)
com.tencent.mm.opensdk.diffdev.IDiffDevOAuth: void detach()
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportByInterval: ReportPolicy$ReportByInterval(com.umeng.commonsdk.statistics.internal.StatTracer,long)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
com.caij.puremusic.drive.model.Metadata$Companion: Metadata$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.slider.BaseSlider: void setHaloTintList(android.content.res.ColorStateList)
org.jaudiotagger.tag.id3.framebody.FrameBodyGRID: FrameBodyGRID()
org.simpleframework.xml.Serializer: java.lang.Object read(java.lang.Class,java.io.File,boolean)
org.jaudiotagger.tag.id3.framebody.FrameBodyTCON: FrameBodyTCON(byte,java.lang.String)
com.caij.puremusic.drive.model.Metadata: java.util.List component16()
com.caij.puremusic.preferences.DurationPreference: DurationPreference(android.content.Context,android.util.AttributeSet,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.tencent.bugly.proguard.bg: void a(com.tencent.bugly.proguard.bf)
org.simpleframework.xml.stream.CamelCaseStyle: CamelCaseStyle()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
com.tencent.mm.opensdk.diffdev.a.b: boolean a()
com.tencent.mm.opensdk.modelbiz.JoinChatroom$Resp: boolean checkArgs()
org.jaudiotagger.audio.aiff.chunk.FormatVersionChunk: FormatVersionChunk(org.jaudiotagger.audio.iff.ChunkHeader,java.nio.ByteBuffer,org.jaudiotagger.audio.aiff.AiffAudioHeader)
org.xmlpull.v1.XmlPullParser: java.lang.String getNamespaceUri(int)
com.caij.puremusic.db.model.PlaybackSongQueries$getPlaybacksByType$2: com.caij.puremusic.db.model.PlaybackSong invoke(long,int,long,int)
org.simpleframework.xml.transform.DateType: org.simpleframework.xml.transform.DateType$DateFormat getFormat()
org.jaudiotagger.audio.asf.io.FileHeaderReader: org.jaudiotagger.audio.asf.data.GUID[] getApplyingIds()
nl.adaptivity.xmlutil.serialization.XmlSerializationPolicy$XmlEncodeDefault: nl.adaptivity.xmlutil.serialization.XmlSerializationPolicy$XmlEncodeDefault[] $values()
com.umeng.analytics.pro.at: void d()
com.tencent.bugly.crashreport.BuglyLog: void e(java.lang.String,java.lang.String)
org.jcodec.containers.mp4.MP4Util: org.jcodec.containers.mp4.boxes.MovieBox createRefMovie(java.nio.channels.FileChannel,java.lang.String)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
org.simpleframework.xml.util.Dictionary: int size()
org.simpleframework.xml.core.DefaultScanner: org.simpleframework.xml.core.Function getPersist()
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
com.tencent.bugly.proguard.x: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)
org.simpleframework.xml.core.DefaultDetail: org.simpleframework.xml.NamespaceList getNamespaceList()
org.simpleframework.xml.core.Signature: java.lang.String toString()
org.simpleframework.xml.core.Primitive: Primitive(org.simpleframework.xml.core.Context,org.simpleframework.xml.strategy.Type)
kotlin.sequences.SequencesKt___SequencesKt$flatMap$2: SequencesKt___SequencesKt$flatMap$2()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getStrokeColor()
org.jaudiotagger.tag.id3.framebody.FrameBodyWXXX: java.lang.String getUrlLinkWithoutTrailingNulls()
com.tencent.bugly.proguard.bt: void a(java.lang.StringBuilder,int)
org.simpleframework.xml.stream.EventToken: boolean isEnd()
com.tencent.mm.opensdk.diffdev.a.a: boolean auth(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.tencent.mm.opensdk.diffdev.OAuthListener)
com.caij.puremusic.drive.model.AlbumMediaContainer$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
org.simpleframework.xml.core.MethodScanner: void validate(org.simpleframework.xml.core.MethodPart,java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyUSER: FrameBodyUSER()
org.simpleframework.xml.stream.Formatter: char[] symbol(char)
org.jaudiotagger.tag.reference.Tagger: java.lang.String toString()
com.thegrizzlylabs.sardineandroid.model.Prop: void setCreationdate(java.lang.String)
org.jaudiotagger.audio.aiff.AiffFileReader: AiffFileReader()
com.caij.puremusic.db.model.SongQueries$songsByAlbumIdTypeCount$1: java.lang.Long invoke(app.cash.sqldelight.db.SqlCursor)
com.tencent.mm.opensdk.diffdev.a.a$a: void onQrcodeScanned()
org.simpleframework.xml.stream.DocumentReader: org.simpleframework.xml.stream.EventNode read()
org.simpleframework.xml.core.Schema: org.simpleframework.xml.core.Decorator getDecorator()
com.umeng.commonsdk.statistics.proto.Response$c: Response$c(com.umeng.commonsdk.statistics.proto.Response$1)
com.caij.puremusic.drive.model.AlbumMediaContainer$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.db.model.SongQueries$SongsByAlumQuery: void addListener(app.cash.sqldelight.Query$Listener)
org.jcodec.containers.mp4.boxes.ChannelBox$ChannelDescription: int getChannelFlags()
com.umeng.analytics.process.UMProcessDBDatasSender: org.json.JSONObject generalHeader()
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTagField: void copy(byte[],byte[],int)
org.jaudiotagger.tag.flac.FlacTag: void addField(java.lang.String,java.lang.String)
org.simpleframework.xml.core.AttributeLabel: java.lang.String getName()
com.tencent.bugly.proguard.p: void a(com.tencent.bugly.proguard.o)
org.jaudiotagger.audio.mp4.Flatten: void flattenOnTop(org.jcodec.containers.mp4.MP4Util$Movie,java.io.File)
com.umeng.analytics.b: void h()
org.simpleframework.xml.core.TextListLabel: java.lang.annotation.Annotation getAnnotation()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void setField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
com.alipay.apmobilesecuritysdk.e.h: long h(android.content.Context,java.lang.String)
androidx.constraintlayout.helper.widget.Flow: void setPaddingLeft(int)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTagField: boolean isCommon()
com.umeng.analytics.pro.bp: bp()
com.caij.puremusic.service.MusicService: MusicService()
org.jaudiotagger.tag.id3.ID3v23Frame$StatusFlags: void createStructure()
org.jaudiotagger.tag.id3.framebody.FrameBodyPRIV: FrameBodyPRIV(java.lang.String,byte[])
com.google.android.material.bottomsheet.BottomSheetBehavior$4: int clampViewPositionHorizontal(android.view.View,int,int)
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: byte getChannelMapFamily()
com.tencent.mm.opensdk.modelbiz.OpenRankList$Req: OpenRankList$Req()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpecResource(int)
androidx.appcompat.widget.AppCompatTextClassifierHelper$Api26Impl: android.view.textclassifier.TextClassifier getTextClassifier(android.widget.TextView)
com.caij.puremusic.drive.model.SongItem: void write$Self(com.caij.puremusic.drive.model.SongItem,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.tencent.bugly.BuglyStrategy: void setCallBackType(int)
org.simpleframework.xml.core.LabelExtractor: org.simpleframework.xml.core.LabelGroup getUnion(org.simpleframework.xml.core.Contact,java.lang.annotation.Annotation)
com.google.android.material.slider.Slider: void setThumbElevation(float)
com.umeng.analytics.pro.o: long f()
com.tencent.bugly.proguard.ab: long j()
org.koin.core.logger.Level: org.koin.core.logger.Level valueOf(java.lang.String)
org.jaudiotagger.tag.mp4.Mp4Tag: org.jaudiotagger.tag.mp4.Mp4TagField getFirstField(org.jaudiotagger.tag.FieldKey)
com.alipay.android.phone.mrpc.core.b: org.apache.http.entity.AbstractHttpEntity a(byte[])
org.simpleframework.xml.core.Traverser: org.simpleframework.xml.core.Decorator getDecorator(java.lang.Class)
org.jcodec.containers.mp4.boxes.FielExtension: boolean topFieldFirst()
org.jaudiotagger.audio.generic.Utils: Utils()
com.google.android.material.navigation.NavigationBarView: void setItemActiveIndicatorWidth(int)
org.simpleframework.xml.core.ExtractorFactory$ElementMapExtractor: org.simpleframework.xml.ElementMap[] getAnnotations()
com.caij.puremusic.db.model.HistoryEntityQueries$HistorySongsQuery: java.lang.String toString()
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(int)
com.umeng.commonsdk.utils.UMUtils: java.lang.String getUUIDForZid(android.content.Context)
org.jaudiotagger.tag.asf.AsfTagCoverField: int getPictureType()
org.jaudiotagger.audio.wav.WavSubFormat: int getCode()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpec(com.google.android.material.animation.MotionSpec)
com.afollestad.materialdialogs.internal.button.DialogActionButtonLayout: void setCheckBoxPrompt(androidx.appcompat.widget.AppCompatCheckBox)
com.tencent.bugly.proguard.ap: android.content.SharedPreferences a(java.lang.String,android.content.Context)
androidx.core.widget.ImageViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
org.jaudiotagger.audio.mp3.MP3File: void delete(org.jaudiotagger.tag.id3.AbstractTag)
org.jaudiotagger.audio.SupportedFileFormat: org.jaudiotagger.audio.SupportedFileFormat valueOf(java.lang.String)
org.jaudiotagger.tag.lyrics3.Lyrics3v1: Lyrics3v1(org.jaudiotagger.tag.lyrics3.Lyrics3v1)
org.jaudiotagger.audio.mp4.Mp4TagReader: void createMp4Field(org.jaudiotagger.tag.mp4.Mp4Tag,org.jcodec.containers.mp4.boxes.MetaBox,org.jcodec.containers.mp4.boxes.IListBox)
org.jaudiotagger.audio.flac.FlacTagWriter: FlacTagWriter()
androidx.preference.ListPreferenceDialogFragmentCompat: ListPreferenceDialogFragmentCompat()
com.umeng.analytics.pro.a$a: android.os.IBinder asBinder()
org.jaudiotagger.tag.id3.AbstractTagFrame: boolean equals(java.lang.Object)
androidx.customview.widget.ViewDragHelper$Callback: int getOrderedChildIndex(int)
org.jcodec.containers.mp4.boxes.NameBox: int estimateSize()
com.google.common.hash.BloomFilterStrategies$2: boolean put(java.lang.Object,com.google.common.hash.Funnel,int,com.google.common.hash.BloomFilterStrategies$LockFreeBitArray)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: int getInvalidFrames()
org.simpleframework.xml.core.ConstructorScanner: java.util.List getSignatures()
com.google.android.material.card.MaterialCardView: void setCheckedIconGravity(int)
com.caij.puremusic.db.model.PlaylistEntityQueries: app.cash.sqldelight.Query getPlaylistEntityById(long)
com.caij.puremusic.model.CategoryInfo$Creator: com.caij.puremusic.model.CategoryInfo createFromParcel(android.os.Parcel)
org.simpleframework.xml.core.Reflector: java.lang.reflect.ParameterizedType getParameterType(java.lang.reflect.Method,int)
org.jaudiotagger.audio.asf.io.AsfStreamer: void createModifiedCopy(java.io.InputStream,java.io.OutputStream,java.util.List)
com.google.android.material.slider.Slider: android.content.res.ColorStateList getTrackActiveTintList()
org.jaudiotagger.tag.id3.framebody.FrameBodyPIC: byte[] getImageData()
com.caij.puremusic.drive.model.AlbumItem: java.lang.String component6()
androidx.core.app.ActivityCompat$Api23Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyCHAP: FrameBodyCHAP(java.nio.ByteBuffer,int)
com.caij.puremusic.drive.model.JellyfinArtistResponse: int getStartIndex()
com.umeng.analytics.pro.g$a: com.umeng.analytics.pro.g a()
com.caij.puremusic.network.model.Artist: java.util.List getImages()
com.caij.puremusic.model.lyrics.Lyrics: boolean isValid()
org.simpleframework.xml.core.Persister: boolean validate(java.lang.Class,java.io.File,boolean)
com.caij.puremusic.db.model.Song$Adapter: app.cash.sqldelight.ColumnAdapter getTrackNumberAdapter()
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyNumberTotal: AbstractFrameBodyNumberTotal()
org.jaudiotagger.audio.asf.data.ContentBranding: void setBannerImageURL(java.lang.String)
org.jaudiotagger.tag.TagOptionSingleton: void setWriteMp4GenresAsText(boolean)
com.tencent.mm.opensdk.modelmsg.LaunchFromWX$Req: LaunchFromWX$Req(android.os.Bundle)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: void move(java.lang.String,java.lang.String)
org.jaudiotagger.audio.mp4.Flatten: void addProgressListener(org.jaudiotagger.audio.mp4.Flatten$ProgressListener)
com.caij.puremusic.drive.model.AlbumMetadata: com.caij.puremusic.drive.model.AlbumMetadata copy$default(com.caij.puremusic.drive.model.AlbumMetadata,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
androidx.core.view.ViewCompat$Api26Impl: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
org.simpleframework.xml.core.DetailScanner: java.lang.Class getType()
com.caij.puremusic.drive.model.SubsonicSong: boolean component11()
org.simpleframework.xml.strategy.Loader: Loader()
com.caij.puremusic.drive.model.PlayListItem: boolean equals(java.lang.Object)
org.jaudiotagger.tag.TagOptionSingleton: int getNumberMP3SyncFrame()
org.jaudiotagger.tag.datatype.NumberVariableLength: void readByteArray(byte[],int)
com.google.common.reflect.TypeToken$TypeFilter: com.google.common.reflect.TypeToken$TypeFilter[] values()
com.tencent.bugly.crashreport.CrashReport$a: java.lang.String a()
com.caij.puremusic.drive.model.Location$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.caij.puremusic.db.model.ArtistQueries$ArtistByNameQuery: java.lang.String toString()
com.google.android.material.bottomsheet.BottomSheetDialog$2: void onClick(android.view.View)
com.caij.puremusic.db.model.ServerArtistCover: boolean equals(java.lang.Object)
org.jaudiotagger.utils.PrimitiveUtils: int safeLongToInt(long)
com.google.android.material.bottomsheet.BottomSheetBehavior: int access$1900(com.google.android.material.bottomsheet.BottomSheetBehavior)
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
org.simpleframework.xml.core.Label: boolean isUnion()
com.umeng.commonsdk.utils.a: boolean a(com.umeng.commonsdk.utils.a)
org.simpleframework.xml.core.DefaultDetail: java.lang.Class getType()
androidx.appcompat.widget.AppCompatCheckedTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.constraintlayout.core.SolverVariable$Type: androidx.constraintlayout.core.SolverVariable$Type[] values()
com.google.android.material.progressindicator.CircularProgressIndicator: void setIndicatorDirection(int)
com.tencent.mm.opensdk.modelbiz.WXNontaxPay$Resp: void fromBundle(android.os.Bundle)
nl.adaptivity.xmlutil.serialization.XmlSerializationPolicy$XmlEncodeDefault: XmlSerializationPolicy$XmlEncodeDefault(java.lang.String,int)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
org.jaudiotagger.tag.asf.AsfTag: void addField(org.jaudiotagger.tag.TagField)
androidx.fragment.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
org.simpleframework.xml.core.PersistenceException: PersistenceException(java.lang.String,java.lang.Object[])
com.caij.puremusic.db.model.SongQueries$songsByInfo$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
com.caij.puremusic.db.model.HistoryEntityQueries$deleteById$2: HistoryEntityQueries$deleteById$2()
com.umeng.analytics.pro.i: void k()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: void writeObject(java.io.ObjectOutputStream)
org.jaudiotagger.audio.mp4.Flatten: void flattenChannel(org.jcodec.containers.mp4.MP4Util$Movie,java.nio.channels.FileChannel)
com.umeng.commonsdk.statistics.proto.b$e: com.umeng.commonsdk.statistics.proto.b$e a(int)
org.jaudiotagger.audio.mp4.RelocateMP4Editor: java.nio.ByteBuffer fetchBox(java.nio.channels.FileChannel,org.jcodec.containers.mp4.MP4Util$Atom)
com.google.android.material.internal.VisibilityAwareImageButton: int getUserSetVisibility()
com.caij.puremusic.drive.model.PlayLists$Companion: PlayLists$Companion()
com.umeng.analytics.pro.bf$a: void b(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyUnsupported: boolean equals(java.lang.Object)
com.umeng.analytics.pro.bp: boolean a(com.umeng.analytics.pro.bp)
com.thegrizzlylabs.sardineandroid.model.Principal: java.lang.String getHref()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
com.umeng.commonsdk.statistics.idtracking.e: void a(long)
org.json.alipay.b: b(java.util.Map)
org.jaudiotagger.tag.id3.framebody.FrameBodyPOPM: FrameBodyPOPM(org.jaudiotagger.tag.id3.framebody.FrameBodyPOPM)
org.simpleframework.xml.core.CompositeListUnion: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object)
com.umeng.commonsdk.statistics.common.MLog: void i(java.lang.Throwable)
org.simpleframework.xml.core.ExtractorFactory$ElementExtractor: org.simpleframework.xml.core.Label getLabel(org.simpleframework.xml.Element)
org.jaudiotagger.tag.images.AndroidArtwork: byte[] getBinaryData()
com.caij.puremusic.db.model.SongQueries$song$1: java.lang.Object invoke(java.lang.Object)
com.tencent.bugly.proguard.aa: java.lang.String F()
com.google.android.material.internal.NavigationMenuItemView: void setActionView(android.view.View)
com.umeng.analytics.pro.ao: void a(android.database.sqlite.SQLiteDatabase)
com.umeng.analytics.pro.ao: void b()
com.google.android.material.slider.BaseSlider: android.content.res.ColorStateList getTickActiveTintList()
org.simpleframework.xml.core.CompositeListUnion: CompositeListUnion(org.simpleframework.xml.core.Context,org.simpleframework.xml.core.Group,org.simpleframework.xml.core.Expression,org.simpleframework.xml.strategy.Type)
com.thegrizzlylabs.sardineandroid.model.Prop: com.thegrizzlylabs.sardineandroid.model.Lockdiscovery getLockdiscovery()
com.google.android.material.chip.Chip: void setIconEndPadding(float)
com.thegrizzlylabs.sardineandroid.model.Propfind: void setProp(com.thegrizzlylabs.sardineandroid.model.Prop)
org.jaudiotagger.tag.EmptyFrameException: EmptyFrameException(java.lang.Throwable)
com.google.android.material.checkbox.MaterialCheckBox: void setErrorAccessibilityLabelResource(int)
com.caij.puremusic.network.model.LastFmAlbum$Album$Image: LastFmAlbum$Album$Image()
StatusBarLyric.API.StatusBarLyric: boolean hasEnable()
nl.adaptivity.xmlutil.serialization.OutputKind: boolean isTextual()
org.jaudiotagger.tag.datatype.PartOfSet$PartOfSetValue: boolean equals(java.lang.Object)
com.caij.puremusic.db.model.PlaylistEntityQueries$GetPlaylistEntityByIdQuery: PlaylistEntityQueries$GetPlaylistEntityByIdQuery(com.caij.puremusic.db.model.PlaylistEntityQueries,long,kotlin.jvm.functions.Function1)
org.simpleframework.xml.stream.OutputAttribute: java.lang.String getComment()
androidx.appcompat.app.AppCompatDelegate$Api24Impl: android.os.LocaleList localeListForLanguageTags(java.lang.String)
org.simpleframework.xml.core.ElementListUnionParameter: boolean isPrimitive()
com.umeng.commonsdk.UMConfigureInternation$1: void run()
org.jaudiotagger.tag.id3.framebody.FrameBodyOWNE: FrameBodyOWNE()
org.jaudiotagger.tag.id3.ID3v1Tag: void addField(org.jaudiotagger.tag.images.Artwork)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onDetachedFromLayoutParams()
com.umeng.analytics.pro.bf$d: com.umeng.analytics.pro.bf$c a()
org.jaudiotagger.audio.asf.io.ChunkRemover: boolean isApplicable(org.jaudiotagger.audio.asf.data.GUID)
com.caij.puremusic.network.model.TokenData: void setToken_type(java.lang.String)
org.simpleframework.xml.stream.OutputBuffer: void append(char)
org.simpleframework.xml.core.Contact: java.lang.Class getDeclaringClass()
androidx.appcompat.widget.DropDownListView$Api21Impl: void drawableHotspotChanged(android.view.View,float,float)
androidx.fragment.app.DialogFragment: void setCancelable(boolean)
com.umeng.commonsdk.internal.d: void a(android.content.Context)
androidx.core.widget.TextViewCompat$Api28Impl: void setFirstBaselineToTopHeight(android.widget.TextView,int)
com.umeng.commonsdk.statistics.proto.a$e: short a()
com.umeng.commonsdk.debug.UMLog: void aq(int,java.lang.String,java.lang.String)
org.jaudiotagger.tag.images.AndroidArtwork: java.lang.Object getImage()
org.simpleframework.xml.core.Context: boolean setOverride(org.simpleframework.xml.strategy.Type,java.lang.Object,org.simpleframework.xml.stream.OutputNode)
com.umeng.analytics.c: void b(android.content.Context)
com.tencent.bugly.proguard.aa: void d(java.lang.String)
com.caij.puremusic.db.model.Folder: java.lang.String getExtJson()
com.tencent.mm.opensdk.modelbase.BaseReq: void fromBundle(android.os.Bundle)
org.simpleframework.xml.core.CompositeKey: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.lang.Object)
org.simpleframework.xml.stream.EventElement: boolean isStart()
org.jaudiotagger.tag.id3.framebody.FrameBodyPIC: void setupObjectList()
org.jaudiotagger.audio.exceptions.CannotReadException: CannotReadException()
com.caij.puremusic.views.PermissionItem: void setButtonClick(kotlin.jvm.functions.Function0)
org.jaudiotagger.tag.images.AndroidImageHandler: byte[] writeImage(java.awt.image.BufferedImage,java.lang.String)
org.jcodec.containers.mp4.boxes.EsdsBox: org.jcodec.containers.mp4.boxes.EsdsBox newEsdsBox()
org.simpleframework.xml.transform.CharacterArrayTransform: CharacterArrayTransform(java.lang.Class)
com.google.android.material.bottomsheet.BottomSheetDialog: boolean shouldWindowCloseOnTouchOutside()
com.caij.puremusic.drive.model.OneDriveItem$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.jcodec.containers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox: java.lang.String fourcc()
org.simpleframework.xml.core.ClassInstantiator: java.util.List getParameters()
org.simpleframework.xml.stream.StreamReader$Entry: java.lang.Object getSource()
com.tencent.bugly.proguard.q: boolean setNativeIsAppForeground(boolean)
com.caij.puremusic.db.model.ServerArtistCoverQueries$clear$1: java.lang.Object invoke(java.lang.Object)
androidx.constraintlayout.motion.widget.MotionLayout: void setTransitionState(android.os.Bundle)
org.jaudiotagger.tag.id3.valuepair.ID3NumberTotalFields: boolean isNumber(org.jaudiotagger.tag.FieldKey)
com.tencent.bugly.proguard.ay: com.tencent.bugly.crashreport.crash.CrashDetailBean a(com.tencent.bugly.proguard.ax)
com.umeng.commonsdk.UMConfigure$3: void run()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: org.jaudiotagger.tag.TagField getFirstField(org.jaudiotagger.tag.FieldKey)
com.umeng.commonsdk.framework.a$a: a$a(java.lang.String)
org.simpleframework.xml.strategy.TreeStrategy: org.simpleframework.xml.strategy.Value readArray(java.lang.Class,org.simpleframework.xml.stream.NodeMap)
com.google.android.material.chip.Chip: void setChipIconTintResource(int)
com.caij.puremusic.drive.model.PlayListsResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.PlayListsResponse)
com.thegrizzlylabs.sardineandroid.model.Activelock: void setOwner(com.thegrizzlylabs.sardineandroid.model.Owner)
org.json.alipay.b: java.lang.Object a(java.lang.String)
com.caij.puremusic.model.DeezerResponse: java.util.List component1()
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior()
com.tencent.bugly.proguard.r: void a(boolean)
org.simpleframework.xml.core.PrimitiveArray: boolean isOverridden(org.simpleframework.xml.stream.OutputNode,java.lang.Object)
org.jaudiotagger.tag.aiff.AiffTag: int getFieldCountIncludingSubValues()
com.umeng.commonsdk.statistics.proto.Response$a: Response$a()
org.jaudiotagger.tag.id3.framebody.FrameBodyTIT1: FrameBodyTIT1(byte,java.lang.String)
com.umeng.analytics.MobclickAgent: void onResume(android.content.Context)
com.umeng.analytics.process.c: com.umeng.analytics.process.c$a c(java.lang.String)
org.jcodec.containers.mp4.boxes.MovieExtendsHeaderBox: void doWrite(java.nio.ByteBuffer)
com.caij.puremusic.drive.model.AlbumMetadata: java.lang.String component2()
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.String permissionToOp(java.lang.String)
com.caij.puremusic.MainModuleKt$mainModule$1$2: MainModuleKt$mainModule$1$2()
com.caij.puremusic.db.model.FolderQueries: app.cash.sqldelight.Query selectAll(kotlin.jvm.functions.Function7)
org.jcodec.containers.mp4.boxes.SoundMediaHeaderBox: org.jcodec.containers.mp4.boxes.SoundMediaHeaderBox createSoundMediaHeaderBox()
com.umeng.commonsdk.statistics.common.d$a: int c()
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: int getLayoutDirection(android.graphics.drawable.Drawable)
com.thegrizzlylabs.sardineandroid.model.Set: Set()
androidx.viewpager.widget.ViewPager: void setPageMargin(int)
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZResource(int)
com.umeng.commonsdk.debug.UMLog: void aq(java.lang.String,int,java.lang.String)
com.thegrizzlylabs.sardineandroid.Sardine: java.util.List list(java.lang.String,int)
org.simpleframework.xml.core.TextParameter: java.lang.Object getKey()
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
com.google.android.material.appbar.CollapsingToolbarLayout: int getMaxLines()
com.caij.puremusic.db.model.AlbumQueries$SearchAlbumsByNameQuery$execute$1: java.lang.Object invoke(java.lang.Object)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
org.jaudiotagger.tag.datatype.SynchronisedTempoCode: void setTempo(int)
com.caij.puremusic.db.model.AlbumQueries$SearchAlbumsByNameQuery: void addListener(app.cash.sqldelight.Query$Listener)
org.simpleframework.xml.stream.CamelCaseStyle: CamelCaseStyle(boolean)
org.jaudiotagger.tag.id3.ID3v1Tag: boolean hasField(org.jaudiotagger.tag.FieldKey)
org.jcodec.containers.mp4.boxes.MdtaBox: int estimateSize()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataSeekTable: int getLength()
org.jaudiotagger.tag.asf.AsfTag$AsfFieldIterator: AsfTag$AsfFieldIterator(java.util.Iterator)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterTextColor()
com.tencent.bugly.proguard.bc: java.lang.String a()
org.jaudiotagger.audio.flac.FlacTagWriter: void insertUsingDirectBuffer(java.lang.String,org.jaudiotagger.tag.Tag,java.nio.channels.FileChannel,org.jaudiotagger.audio.flac.FlacTagWriter$MetadataBlockInfo,org.jaudiotagger.audio.flac.FlacStreamReader,int)
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: byte[] a()
androidx.constraintlayout.motion.widget.MotionLayout: float getTargetPosition()
org.jaudiotagger.tag.id3.ID3v23Tag: java.util.List convertFrame(org.jaudiotagger.tag.id3.AbstractID3v2Frame)
com.caij.puremusic.drive.model.PlexUser$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.caij.puremusic.drive.model.AlbumResponse$Companion: AlbumResponse$Companion()
com.google.android.material.bottomsheet.BottomSheetBehavior: void setHideFriction(float)
androidx.appcompat.app.AppCompatDialog: void setContentView(android.view.View)
org.jaudiotagger.tag.id3.framebody.FrameBodyGRP1: FrameBodyGRP1(byte,java.lang.String)
org.simpleframework.xml.core.ClassType: java.lang.Class getType()
org.jaudiotagger.tag.images.ImageHandler: boolean isMimeTypeWritable(java.lang.String)
com.umeng.analytics.pro.ce: ce()
org.jaudiotagger.tag.id3.AggregatedFrame: java.nio.charset.Charset getEncoding()
com.tencent.mm.opensdk.diffdev.OAuthErrCode: com.tencent.mm.opensdk.diffdev.OAuthErrCode[] values()
com.umeng.analytics.pro.i: org.json.JSONObject f()
org.simpleframework.xml.core.ObjectScanner: org.simpleframework.xml.core.Function getComplete()
com.google.common.hash.LittleEndianByteArray$JavaLittleEndianBytes$1: long getLongLittleEndian(byte[],int)
org.simpleframework.xml.stream.OutputStack: java.util.Iterator iterator()
org.simpleframework.xml.core.ElementListUnionLabel: boolean isRequired()
com.yalantis.ucrop.view.OverlayView: void setCropGridColor(int)
org.jaudiotagger.audio.generic.GenericTag: java.util.List getFields(org.jaudiotagger.tag.FieldKey)
android.support.v4.media.RatingCompat$Api19Impl: float getPercentRating(android.media.Rating)
com.google.android.material.search.SearchView: android.widget.EditText getEditText()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextAppearance(int)
com.caij.puremusic.drive.model.ArtistItem: java.lang.String getType()
com.caij.puremusic.db.model.HistoryEntity: long getId()
org.simpleframework.xml.core.PathParser$PathSection: org.simpleframework.xml.core.Expression getPath(int,int)
org.jcodec.containers.mp4.boxes.DataInfoBox: org.jcodec.containers.mp4.boxes.DataRefBox getDref()
com.umeng.analytics.pro.o: void g(org.json.JSONObject)
com.caij.puremusic.db.model.HistoryEntityQueries$insert$1: HistoryEntityQueries$insert$1(com.caij.puremusic.db.model.HistoryEntity)
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMR: FrameBodyCOMR()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: java.lang.String getMimeType()
com.umeng.commonsdk.statistics.common.HelperUtils: java.lang.String readFile(java.io.File)
org.jaudiotagger.audio.generic.AudioFileModificationAdapter: void fileOperationFinished(java.io.File)
com.google.android.material.bottomsheet.BottomSheetBehavior: void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int)
com.caij.puremusic.db.model.ServerSongCoverQueries$getById$2: com.caij.puremusic.db.model.ServerSongCover invoke(java.lang.String,long,java.lang.String)
org.jcodec.containers.mp4.boxes.MovieBox: long getDuration()
com.thegrizzlylabs.sardineandroid.DavResource: java.lang.String getCreationDate(com.thegrizzlylabs.sardineandroid.model.Response)
org.jaudiotagger.audio.asf.io.ContentBrandingReader: org.jaudiotagger.audio.asf.data.Chunk read(org.jaudiotagger.audio.asf.data.GUID,java.io.InputStream,long)
org.simpleframework.xml.core.VersionLabel: org.simpleframework.xml.core.Contact getContact()
androidx.constraintlayout.widget.Barrier: void setAllowsGoneWidget(boolean)
org.simpleframework.xml.core.Converter: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.lang.Object)
com.umeng.commonsdk.statistics.internal.c: void a(com.umeng.commonsdk.statistics.internal.b)
com.umeng.commonsdk.statistics.noise.ABTest: com.umeng.commonsdk.statistics.noise.ABTest getService(android.content.Context)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyLYR: void write(java.io.RandomAccessFile)
org.jcodec.containers.mp4.IBoxFactory: org.jcodec.containers.mp4.boxes.Box newBox(org.jcodec.containers.mp4.boxes.Header)
com.caij.puremusic.drive.model.JellyfinLoginResponse: int hashCode()
com.umeng.vt.diff.Event: void reflectTrack(android.content.Context,java.lang.String,java.util.Map)
com.google.android.material.chip.ChipGroup: void setShowDividerVertical(int)
com.umeng.analytics.pro.a: java.lang.String a(java.lang.String)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void setFrame(org.jaudiotagger.tag.id3.AbstractID3v2Frame)
androidx.core.view.AccessibilityDelegateCompat: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
com.caij.puremusic.drive.model.JellyfinSongListResponse$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
org.jcodec.containers.mp4.boxes.ReverseDnsBox$RdnsNameBox: org.jcodec.containers.mp4.boxes.ReverseDnsBox$RdnsNameBox createRdnsNameBox(java.lang.String)
com.google.android.material.bottomsheet.BottomSheetBehavior: android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
com.tencent.mm.opensdk.modelbiz.SubscribeMiniProgramMsg$Resp: SubscribeMiniProgramMsg$Resp()
com.umeng.commonsdk.statistics.proto.e$e: com.umeng.commonsdk.statistics.proto.e$e[] values()
org.simpleframework.xml.convert.AnnotationStrategy: boolean write(org.simpleframework.xml.strategy.Type,java.lang.Object,org.simpleframework.xml.stream.NodeMap)
androidx.fragment.app.Fragment: int getEnterAnim()
com.caij.puremusic.db.model.PlaybackSong: int component2()
com.umeng.analytics.pro.cj: cj(int,java.lang.String,java.lang.Throwable)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSOC: FrameBodyTSOC(org.jaudiotagger.tag.id3.framebody.FrameBodyTSOC)
com.caij.puremusic.drive.model.Media: java.lang.String getAudioCodec()
com.tencent.bugly.proguard.at: com.tencent.bugly.proguard.av a(com.tencent.bugly.proguard.at)
org.simpleframework.xml.core.PrimitiveArray: java.lang.Object read(org.simpleframework.xml.stream.InputNode)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
org.simpleframework.xml.core.Composite: void validate(org.simpleframework.xml.stream.InputNode,org.simpleframework.xml.core.Label)
com.umeng.analytics.pro.bo: short v()
com.caij.puremusic.drive.adrive.Auth20Activity: Auth20Activity()
org.simpleframework.xml.transform.AtomicLongTransform: java.lang.String write(java.lang.Object)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyIMG: boolean equals(java.lang.Object)
org.simpleframework.xml.core.DefaultDetail: boolean isPrimitive()
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
com.tencent.bugly.proguard.aa: com.tencent.bugly.proguard.aa b()
org.jaudiotagger.tag.id3.AbstractTagItem: void read(java.nio.ByteBuffer)
com.tencent.mm.opensdk.modelmsg.WXGameLiveObject: WXGameLiveObject()
org.jaudiotagger.tag.id3.AbstractID3v2Frame: java.lang.String getContent()
org.jaudiotagger.utils.tree.EventListenerList: int getListenerCount(java.lang.Class)
com.umeng.analytics.pro.aw: boolean b(java.nio.ByteBuffer)
org.jcodec.containers.mp4.boxes.TrackHeaderBox: org.jcodec.containers.mp4.boxes.TrackHeaderBox createTrackHeaderBox(int,long,float,float,long,long,float,short,long,int[])
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: void setDescription(java.lang.String)
com.caij.puremusic.drive.model.MediaContainer: boolean equals(java.lang.Object)
org.jaudiotagger.audio.asf.util.Utils: void writeUINT32(long,java.io.OutputStream)
androidx.core.view.ActionProvider: ActionProvider(android.content.Context)
com.umeng.analytics.pro.o: org.json.JSONObject l()
org.jaudiotagger.tag.mp4.field.Mp4TagTextField: org.jaudiotagger.tag.mp4.field.Mp4FieldType getFieldType()
org.jaudiotagger.tag.id3.ID3v1Tag: java.util.Iterator iterator()
org.simpleframework.xml.strategy.ReadGraph: org.simpleframework.xml.strategy.Value readValue(org.simpleframework.xml.strategy.Type,java.lang.Class,org.simpleframework.xml.stream.NodeMap,java.lang.String)
com.tencent.bugly.proguard.al: boolean b(java.lang.Throwable)
com.umeng.vt.diff.V: V()
com.google.android.material.progressindicator.BaseProgressIndicator: void setTrackColor(int)
com.google.android.material.imageview.ShapeableImageView: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
org.jaudiotagger.tag.id3.framebody.FrameBodyTDAT: boolean isMonthOnly()
com.tencent.mm.opensdk.modelbiz.WXLaunchWxaRedirectingPage: WXLaunchWxaRedirectingPage()
com.caij.puremusic.db.model.ServerLyrics: boolean equals(java.lang.Object)
com.caij.puremusic.db.model.PlayCountEntityQueries$insert$1: java.lang.Object invoke(java.lang.Object)
com.umeng.commonsdk.statistics.proto.d: com.umeng.commonsdk.statistics.proto.d a(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyWCOM: FrameBodyWCOM(java.nio.ByteBuffer,int)
com.thegrizzlylabs.sardineandroid.DavResource: java.util.List access$600(com.thegrizzlylabs.sardineandroid.DavResource,com.thegrizzlylabs.sardineandroid.model.Response)
org.jaudiotagger.audio.SupportedFileFormat$1: org.jaudiotagger.tag.Tag createDefaultTag()
com.tencent.mmkv.MMKV: boolean reKey(java.lang.String)
com.umeng.commonsdk.framework.a: java.util.concurrent.locks.ReentrantLock f()
androidx.customview.widget.ViewDragHelper$Callback: void onViewReleased(android.view.View,float,float)
com.umeng.analytics.pro.ci: boolean a()
org.simpleframework.xml.core.ElementMapLabel: org.simpleframework.xml.core.Converter getConverter(org.simpleframework.xml.core.Context)
com.caij.puremusic.db.model.Folder$Adapter: Folder$Adapter(app.cash.sqldelight.ColumnAdapter)
org.jcodec.containers.mp4.boxes.EditListBox: org.jcodec.containers.mp4.boxes.EditListBox createEditListBox(java.util.List)
com.alipay.android.phone.mrpc.core.i: boolean d()
com.umeng.analytics.process.UMProcessDBHelper$InsertEventCallback: boolean onFileLock(java.io.File,int)
com.thegrizzlylabs.sardineandroid.model.Propstat: void setStatus(java.lang.String)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataSeekTable: MetadataBlockDataSeekTable(org.jaudiotagger.audio.flac.metadatablock.MetadataBlockHeader,java.nio.channels.FileChannel)
com.google.common.reflect.Types$JavaVersion: java.lang.String typeName(java.lang.reflect.Type)
io.ktor.http.HttpHeaderValueParserKt$parseHeaderValueItem$parameters$1: HttpHeaderValueParserKt$parseHeaderValueItem$parameters$1()
io.ktor.websocket.CloseReason$Codes: short getCode()
org.simpleframework.xml.stream.Formatter$Tag: org.simpleframework.xml.stream.Formatter$Tag valueOf(java.lang.String)
org.simpleframework.xml.stream.Mode: Mode(java.lang.String,int)
androidx.constraintlayout.motion.widget.MotionLayout: void setTransitionDuration(int)
org.jaudiotagger.tag.images.StandardImageHandler: void reduceQuality(org.jaudiotagger.tag.images.Artwork,int)
com.caij.puremusic.fragments.player.normal.PlayerFragment: PlayerFragment()
com.alipay.sdk.app.PayTask: java.lang.String pay(java.lang.String,boolean)
org.simpleframework.xml.core.Source: boolean isFloat(org.simpleframework.xml.strategy.Type)
com.caij.puremusic.model.UpdateInfo$ForcedUpgradeInfo$1: java.lang.Object createFromParcel(android.os.Parcel)
org.simpleframework.xml.Serializer: java.lang.Object read(java.lang.Object,java.io.File)
com.umeng.commonsdk.framework.UMWorkDispatch: void init()
com.umeng.analytics.process.UMProcessDBHelper$InsertEventCallback: boolean onFileLock(java.lang.String)
com.tencent.bugly.proguard.ab: java.lang.String a(android.content.Context)
org.simpleframework.xml.core.Composite: void validateElement(org.simpleframework.xml.stream.InputNode,org.simpleframework.xml.core.Section,org.simpleframework.xml.core.LabelMap)
com.afollestad.materialdialogs.WhichButton: com.afollestad.materialdialogs.WhichButton[] values()
org.jaudiotagger.tag.id3.ID3v23Tag: int getSize()
com.caij.puremusic.model.DriveFileParcelable: int getSourceType()
com.caij.puremusic.model.AbsCustomPlaylist: com.caij.puremusic.repository.TopPlayedRepository getTopPlayedRepository()
org.simpleframework.xml.core.CacheLabel: java.lang.Object getEmpty(org.simpleframework.xml.core.Context)
com.umeng.analytics.b: void a(java.lang.String,java.lang.Object)
org.simpleframework.xml.stream.DocumentReader$Start: java.lang.String getPrefix()
com.alipay.android.phone.mrpc.core.b: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)
org.jaudiotagger.tag.id3.framebody.FrameBodySIGN: byte[] getSignature()
com.caij.puremusic.drive.model.JellyfinLoginResponse: java.lang.String component1()
com.umeng.analytics.pro.ci: int d(byte[],int,int)
org.jaudiotagger.tag.id3.framebody.FrameBodyXSOA: FrameBodyXSOA()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)
org.jaudiotagger.tag.id3.framebody.FrameBodySEEK: void setupObjectList()
com.caij.puremusic.util.theme.ThemeMode: com.caij.puremusic.util.theme.ThemeMode[] values()
com.tencent.mm.opensdk.modelmsg.WXLocationObject: WXLocationObject()
com.caij.puremusic.preferences.AlbumCoverStylePreference: AlbumCoverStylePreference(android.content.Context)
org.jaudiotagger.tag.reference.ISOCountry: org.jaudiotagger.tag.reference.ISOCountry$Country getCountryByDescription(java.lang.String)
org.simpleframework.xml.core.TextListLabel: java.lang.String getOverride()
com.tencent.mm.opensdk.modelmsg.WXEmojiPageSharedObject: boolean checkArgs()
com.google.android.material.imageview.ShapeableImageView: int getPaddingStart()
com.umeng.analytics.pro.bf: java.util.Map a(java.util.Map)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSOC: FrameBodyTSOC(byte,java.lang.String)
com.caij.puremusic.db.model.ServerArtistCoverQueries$GetByIdQuery: java.lang.String getId()
com.umeng.analytics.pro.x: long a()
com.caij.puremusic.fragments.other.VolumeFragment: VolumeFragment()
com.google.android.material.search.SearchBar: void setElevation(float)
com.caij.puremusic.db.model.SongQueries$songsByTitle$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
com.tencent.mm.opensdk.modelbiz.WXPayInsurance$Resp: WXPayInsurance$Resp()
com.tencent.mm.opensdk.modelmsg.WXDynamicVideoMiniProgramObject: int type()
com.caij.puremusic.drive.model.Response: void getStatus$annotations()
com.umeng.analytics.pro.ch: void b()
com.tencent.bugly.crashreport.CrashReport: void testJavaCrash()
com.umeng.analytics.pro.bn: void a()
org.simpleframework.xml.core.PathParser: void build()
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: com.umeng.commonsdk.statistics.proto.d d(com.umeng.commonsdk.statistics.proto.d)
org.jaudiotagger.audio.aiff.chunk.AnnotationChunk: AnnotationChunk(org.jaudiotagger.audio.iff.ChunkHeader,java.nio.ByteBuffer,org.jaudiotagger.audio.aiff.AiffAudioHeader)
org.jaudiotagger.audio.aiff.AiffType: AiffType(java.lang.String,int,java.lang.String)
org.jcodec.containers.mp4.boxes.TrunBox$Factory: org.jcodec.containers.mp4.boxes.TrunBox$Factory sampleSize(int[])
com.umeng.commonsdk.UMConfigure: boolean checkShareSdk(java.lang.Class)
com.tencent.mm.opensdk.modelmsg.WXWebpageObject: java.lang.String getExtra(java.lang.String,java.lang.String)
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$2: void handlePotentialDeadlock(com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException)
com.caij.puremusic.drive.model.SubsonicAlbum: int getPlayCount()
org.simpleframework.xml.strategy.ObjectValue: ObjectValue(java.lang.Class)
org.jaudiotagger.tag.TagOptionSingleton: void setID3V2Version(org.jaudiotagger.tag.reference.ID3V2Version)
org.jaudiotagger.tag.mp4.Mp4Tag: java.lang.String toString()
com.caij.puremusic.drive.model.Media: java.lang.String getContainer()
org.jaudiotagger.audio.generic.GenericAudioHeader: java.lang.String getFormat()
com.caij.puremusic.db.model.ServerSongCoverQueries: app.cash.sqldelight.Query getBySource(long,kotlin.jvm.functions.Function3)
com.alipay.android.phone.mrpc.core.RpcException: RpcException(java.lang.Integer,java.lang.Throwable)
com.tencent.bugly.proguard.bp: void a(com.tencent.bugly.proguard.l)
org.jaudiotagger.tag.id3.ID3v22PreferredFrameOrderComparator: org.jaudiotagger.tag.id3.ID3v22PreferredFrameOrderComparator getInstanceof()
com.caij.puremusic.drive.model.PlayListItem$Companion: kotlinx.serialization.KSerializer serializer()
com.caij.puremusic.model.ArtworkInfo: android.graphics.Bitmap getArtwork()
com.google.android.material.appbar.AppBarLayout: AppBarLayout(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.activities.base.AbsThemeActivity: AbsThemeActivity()
com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion[] $values()
com.caij.puremusic.lyrics.LrcView: void setFlag(java.lang.Object)
androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)
com.tencent.bugly.proguard.bf: long b()
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: void setText(java.lang.String)
com.caij.puremusic.drive.model.DropboxDriveFileResponse: java.lang.String getCursor()
com.alipay.apmobilesecuritysdk.common.a: boolean a(java.util.List)
com.tencent.mm.opensdk.modelbiz.WXPayInsurance$Resp: int getType()
com.caij.puremusic.drive.model.AMediaContainer: java.util.List getMetadata()
com.umeng.commonsdk.statistics.common.ULog: void i(java.util.Locale,java.lang.String,java.lang.Object[])
com.umeng.analytics.pro.an: com.umeng.analytics.pro.an c(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setElevation(float)
androidx.core.text.ICUCompat$Api24Impl: java.lang.String getScript(java.lang.Object)
io.ktor.websocket.CloseReason$Codes: io.ktor.websocket.CloseReason$Codes[] $values()
com.umeng.analytics.pro.ay: java.lang.Object a(byte,byte[],com.umeng.analytics.pro.bc,com.umeng.analytics.pro.bc[])
com.umeng.commonsdk.config.FieldManager: android.util.Pair a(java.lang.String)
com.thegrizzlylabs.sardineandroid.util.SardineUtil: java.util.List toQName(java.util.List)
org.jcodec.containers.mp4.boxes.TrunBox: boolean isFirstSampleFlagsAvailable()
com.caij.puremusic.drive.model.AlbumMetadata$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
org.jcodec.containers.mp4.boxes.EsdsBox$NodeDescriptor: EsdsBox$NodeDescriptor(int,java.util.Collection)
org.jcodec.containers.mp4.boxes.MovieExtendsBox: org.jcodec.containers.mp4.boxes.MovieExtendsBox createMovieExtendsBox()
androidx.window.core.SpecificationComputer$VerificationMode: androidx.window.core.SpecificationComputer$VerificationMode valueOf(java.lang.String)
org.jcodec.containers.mp4.boxes.TimeToSampleBox$TimeToSampleEntry: int getSampleDuration()
com.caij.puremusic.db.model.AlbumQueries$album$2: com.caij.puremusic.db.model.Album invoke(long,int,java.lang.String,long,long,java.lang.String,long,java.lang.String,java.lang.String,int,int)
androidx.fragment.app.Fragment: android.content.res.Resources getResources()
com.umeng.commonsdk.statistics.proto.a$a: a$a(com.umeng.commonsdk.statistics.proto.a$1)
com.tencent.bugly.proguard.am: boolean a(java.lang.String,java.lang.String,int)
com.google.android.material.button.MaterialButton: void setInsetBottom(int)
com.umeng.analytics.process.b: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)
org.simpleframework.xml.stream.StreamReader$Start: java.lang.String getPrefix()
com.tencent.mm.opensdk.modelbase.BaseResp: void toBundle(android.os.Bundle)
com.caij.puremusic.drive.model.ADriveItem$Companion: ADriveItem$Companion()
com.caij.puremusic.network.model.Artist: void setImages(java.util.List)
org.json.alipay.b$a: boolean equals(java.lang.Object)
org.simpleframework.xml.core.CacheLabel: boolean isCollection()
com.caij.puremusic.drive.model.DavResource: java.lang.String[] access$getSUPPORTED_DATE_FORMATS$cp()
com.umeng.commonsdk.UMInnerImpl$1: void run()
org.jcodec.containers.mp4.boxes.ReverseDnsBox$RdnsMeanBox: java.lang.String fourcc()
org.repackage.com.vivo.identifier.IdentifierIdClient: java.lang.String c()
com.thegrizzlylabs.sardineandroid.impl.handler.VoidResponseHandler: java.lang.Object handleResponse(okhttp3.Response)
com.thegrizzlylabs.sardineandroid.Sardine: java.util.List list(java.lang.String)
androidx.mediarouter.app.MediaRouteButton: void setVisibility(int)
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdTypeCountQuery$execute$1: SongQueries$SongsByAlbumIdTypeCountQuery$execute$1(com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdTypeCountQuery,com.caij.puremusic.db.model.SongQueries)
com.umeng.commonsdk.statistics.proto.b: com.umeng.analytics.pro.bp m()
com.tencent.mm.opensdk.modelbiz.WXPayInsurance$Resp: void fromBundle(android.os.Bundle)
com.google.android.material.chip.Chip: void setTextAppearanceResource(int)
com.umeng.commonsdk.service.UMGlobalContext: java.lang.String getAppVersion()
com.caij.puremusic.drive.model.Part$Companion: Part$Companion()
com.umeng.analytics.pro.bo: void a()
com.caij.puremusic.db.model.PlaybackSongQueries$GetPlaybacksByTypeQuery: java.lang.String toString()
com.caij.puremusic.db.model.SearchAlbumResultQueries$deleteById$1: java.lang.Object invoke(java.lang.Object)
com.google.android.material.navigation.NavigationBarMenuView: void setItemBackgroundRes(int)
com.tencent.mm.opensdk.modelbiz.SubscribeMessage$Req: void fromBundle(android.os.Bundle)
org.simpleframework.xml.core.CacheLabel: org.simpleframework.xml.core.Contact getContact()
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: long getPosition(android.media.session.PlaybackState)
com.caij.puremusic.drive.model.SubsonicResponse: SubsonicResponse(java.lang.String,java.lang.String,com.caij.puremusic.drive.model.AlbumList,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
org.jcodec.containers.mp4.boxes.EsdsBox$DescriptorParser: org.jcodec.containers.mp4.boxes.EsdsBox$NodeDescriptor parseNodeDesc(java.nio.ByteBuffer)
org.simpleframework.xml.core.DetailScanner: java.util.List getMethods()
org.jaudiotagger.tag.id3.AbstractTagItem: boolean equals(java.lang.Object)
com.google.android.gms.internal.play_billing.zzew: com.google.android.gms.internal.play_billing.zzew[] values()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: int readThreeByteInteger(byte,byte,byte)
org.jaudiotagger.audio.wav.WavCleaner: void main(java.lang.String[])
org.jaudiotagger.tag.mp4.field.Mp4TagBinaryField: boolean isEmpty()
org.jaudiotagger.audio.asf.io.ChunkModifier: boolean isApplicable(org.jaudiotagger.audio.asf.data.GUID)
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
org.jaudiotagger.tag.id3.framebody.FrameBodyENCR: void setOwner(java.lang.String)
com.google.android.material.appbar.CollapsingToolbarLayout: float getExpandedTitleTextSize()
com.tencent.mm.opensdk.openapi.IWXAPI: boolean registerApp(java.lang.String,long)
com.caij.puremusic.drive.model.PlayListItem$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.caij.puremusic.db.model.SongQueries$SearchSongsByTitleQuery: void addListener(app.cash.sqldelight.Query$Listener)
com.google.android.material.chip.Chip: void setBackgroundResource(int)
com.umeng.analytics.pro.p: void a(java.lang.Throwable)
org.jaudiotagger.tag.datatype.NumberVariableLength: int getSize()
com.caij.puremusic.drive.model.EmbyFoldersResponse: com.caij.puremusic.drive.model.EmbyFoldersResponse copy(java.util.List)
com.caij.puremusic.drive.model.OneDriveFolder$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.caij.puremusic.preferences.DurationPreference: DurationPreference(android.content.Context,android.util.AttributeSet,int,int)
com.caij.puremusic.db.model.PlaylistEntityQueries: app.cash.sqldelight.Query searchPlaylistByName(java.lang.String)
com.caij.puremusic.db.model.SongQueries$SongsByAlumIdQuery: void addListener(app.cash.sqldelight.Query$Listener)
com.caij.puremusic.db.model.ServerAudioFormatQueries$deleteById$2: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.db.model.SongQueries$songsByAlbumId$2: SongQueries$songsByAlbumId$2()
com.umeng.analytics.pro.an: void B()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
com.caij.puremusic.db.model.SongEntityQueries$GetPlaylistLastAddSongQuery$execute$1: java.lang.Object invoke(java.lang.Object)
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority valueOf(java.lang.String)
com.tencent.bugly.proguard.d: d()
com.tencent.bugly.proguard.aa: void a(java.lang.String,java.lang.String)
org.jaudiotagger.audio.exceptions.UnableToCreateFileException: UnableToCreateFileException(java.lang.String)
com.caij.puremusic.drive.model.SubsonicSearchResponse: java.lang.String component1()
com.umeng.analytics.pro.an$a: void b(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
com.caij.puremusic.db.model.AlbumQueries$GetAlbumByArtistIdQuery$execute$1: AlbumQueries$GetAlbumByArtistIdQuery$execute$1(com.caij.puremusic.db.model.AlbumQueries$GetAlbumByArtistIdQuery)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)
org.jaudiotagger.audio.dsf.DsdChunk: long getChunkSizeLength()
com.thegrizzlylabs.sardineandroid.impl.handler.MultiStatusResponseHandler: java.lang.Object handleResponse(okhttp3.Response)
com.caij.puremusic.drive.model.SubsonicPlaylist: java.lang.Boolean component5()
com.umeng.commonsdk.internal.d: d()
com.google.android.material.appbar.CollapsingToolbarLayout: long getScrimAnimationDuration()
com.tencent.bugly.proguard.n: boolean a(boolean,boolean)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentMode()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockHeader: MetadataBlockHeader(boolean,org.jaudiotagger.audio.flac.metadatablock.BlockType,int)
com.umeng.commonsdk.statistics.proto.b$e: com.umeng.commonsdk.statistics.proto.b$e[] values()
android.support.v4.media.MediaDescriptionCompat$Api21Impl: void setIconUri(android.media.MediaDescription$Builder,android.net.Uri)
org.simpleframework.xml.core.ElementLabel: java.lang.Object getEmpty(org.simpleframework.xml.core.Context)
com.google.android.material.datepicker.MaterialTextInputPicker: MaterialTextInputPicker()
androidx.core.content.pm.PackageInfoCompat$Api28Impl: long getLongVersionCode(android.content.pm.PackageInfo)
com.alipay.android.phone.mrpc.core.aa: boolean c()
com.caij.puremusic.drive.model.PlayListItem$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.PlayListItem)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(int)
com.tencent.bugly.proguard.as: void a(java.util.ArrayList,com.tencent.bugly.crashreport.crash.CrashDetailBean,android.content.Context)
org.jaudiotagger.tag.id3.AbstractTagFrameBody: byte getTextEncoding()
org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId: org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId$CallBack a(org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId)
org.simpleframework.xml.core.Reflector: boolean isUpperCase(char)
com.caij.puremusic.db.model.AlbumQueries$albums$1: AlbumQueries$albums$1(kotlin.jvm.functions.Function11,com.caij.puremusic.db.model.AlbumQueries)
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getTrackDrawable()
org.jaudiotagger.audio.generic.GenericAudioHeader: java.lang.String getEncodingType()
com.umeng.commonsdk.utils.UMUtils: boolean checkMetaData(android.content.Context,java.lang.String)
com.caij.puremusic.db.model.ArtistQueries: app.cash.sqldelight.Query artistByName(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
com.umeng.analytics.pro.bo: com.umeng.analytics.pro.br n()
com.caij.puremusic.drive.model.PlexArtistsResponse: boolean equals(java.lang.Object)
com.umeng.analytics.pro.ch: int a(byte[],int,int)
org.jaudiotagger.audio.asf.data.MetadataDescriptor: void setString(java.lang.String)
com.afollestad.materialdialogs.internal.message.DialogContentLayout: DialogContentLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.checkbox.MaterialCheckBox: android.graphics.drawable.Drawable getButtonDrawable()
org.simpleframework.xml.core.GroupExtractor: java.lang.String toString()
org.jaudiotagger.audio.real.RealFileReader: org.jaudiotagger.audio.real.RealChunk findContChunk(java.io.RandomAccessFile)
org.simpleframework.xml.core.PathParser: java.lang.String getElementPath(java.lang.String,java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
org.jaudiotagger.tag.id3.framebody.FrameBodyTBPM: FrameBodyTBPM(java.nio.ByteBuffer,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
com.caij.puremusic.drive.model.OneDriveFolder$$serializer: com.caij.puremusic.drive.model.OneDriveFolder deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$PathBetweenNodesEnumeration: boolean hasMoreElements()
com.google.android.material.slider.BaseSlider: float getMinSeparation()
com.caij.puremusic.drive.model.SubsonicSong: int component16()
com.caij.puremusic.db.model.ServerLyricsQueries$clear$1: void invoke(kotlin.jvm.functions.Function1)
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdTypeCountQuery: java.lang.String toString()
com.caij.puremusic.drive.model.PlayListsResponse: PlayListsResponse(com.caij.puremusic.drive.model.PlayListsSubsonicResponse,int,kotlin.jvm.internal.DefaultConstructorMarker)
org.jaudiotagger.tag.mp4.Mp4FieldKey: boolean isReverseDnsType()
org.simpleframework.xml.core.LabelKey: java.lang.String toString()
com.tencent.mm.opensdk.modelmsg.WXMiniProgramObject: void unserialize(android.os.Bundle)
org.jaudiotagger.tag.PaddingException: PaddingException(java.lang.String,java.lang.Throwable)
com.caij.puremusic.drive.model.SubsonicAlbum: int component6()
org.jaudiotagger.audio.mp4.EncoderType: EncoderType(java.lang.String,int,java.lang.String)
org.simpleframework.xml.core.TemplateEngine: void replace(java.lang.String)
com.caij.puremusic.drive.model.ParentReference$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: boolean hasFrameOfType(java.lang.String)
org.simpleframework.xml.core.Signature: boolean isEmpty()
org.jaudiotagger.utils.tree.DefaultTreeModel: void nodesWereRemoved(org.jaudiotagger.utils.tree.TreeNode,int[],java.lang.Object[])
org.jaudiotagger.tag.id3.ID3v1Tag: void addField(org.jaudiotagger.tag.TagField)
org.jaudiotagger.tag.id3.ID3v23Tag: java.util.List getAll(org.jaudiotagger.tag.FieldKey)
org.jaudiotagger.tag.id3.valuepair.ID3V2ExtendedGenreTypes: org.jaudiotagger.tag.id3.valuepair.ID3V2ExtendedGenreTypes valueOf(java.lang.String)
com.thegrizzlylabs.sardineandroid.model.Keepalive: Keepalive()
com.thegrizzlylabs.sardineandroid.model.Prop: com.thegrizzlylabs.sardineandroid.model.Acl getAcl()
org.jaudiotagger.tag.id3.framebody.FrameBodyTSOA: FrameBodyTSOA(org.jaudiotagger.tag.id3.framebody.FrameBodyTSOA)
com.alipay.apmobilesecuritysdk.common.a: boolean a(android.content.Context)
org.jaudiotagger.tag.id3.ID3v24Frame: boolean isBinary()
com.caij.puremusic.db.model.SongQueries$SongQuery: java.lang.String toString()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
org.jaudiotagger.tag.InvalidFrameIdentifierException: InvalidFrameIdentifierException(java.lang.String)
com.alipay.apmobilesecuritysdk.a.a: com.alipay.sdk.m.f0.c b(java.util.Map)
com.tencent.mm.opensdk.modelbase.BaseResp: int getType()
org.jaudiotagger.tag.id3.framebody.FrameBodyAPIC: void setImageData(byte[])
org.simpleframework.xml.core.ElementMapUnionLabel: java.lang.String getEntry()
org.jaudiotagger.tag.lyrics3.Lyrics3v2: void write(java.io.RandomAccessFile)
com.alipay.sdk.app.EnvUtils$EnvEnum: com.alipay.sdk.app.EnvUtils$EnvEnum valueOf(java.lang.String)
org.jcodec.containers.mp4.boxes.FileTypeBox: java.lang.String getMajorBrand()
com.google.android.material.navigation.NavigationBarMenuView: int getItemActiveIndicatorHeight()
com.umeng.commonsdk.statistics.proto.d$b: com.umeng.analytics.pro.cc b()
com.tencent.mm.opensdk.utils.ILog: void v(java.lang.String,java.lang.String)
com.umeng.commonsdk.statistics.proto.Response$d: com.umeng.analytics.pro.cc b()
org.jaudiotagger.tag.id3.framebody.FrameBodyTOPE: FrameBodyTOPE()
org.jaudiotagger.tag.id3.ID3v22Frame: int getSize()
org.simpleframework.xml.strategy.Reference: int getLength()
com.yalantis.ucrop.view.TransformImageView: void setImageMatrix(android.graphics.Matrix)
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$deleteSongBySource$2: void invoke(kotlin.jvm.functions.Function1)
org.simpleframework.xml.core.ElementListUnionLabel: boolean isTextList()
org.simpleframework.xml.core.SignatureCreator: java.lang.Class getType()
com.tencent.bugly.proguard.be: java.lang.String b(java.lang.String)
com.thegrizzlylabs.sardineandroid.model.Link: java.util.List getSrc()
com.caij.puremusic.network.model.TokenStore: void save(com.caij.puremusic.network.model.TokenData)
com.umeng.analytics.pro.bn: bn(com.umeng.analytics.pro.ci)
com.umeng.analytics.pro.cj: cj(java.lang.String)
org.jaudiotagger.tag.asf.AsfTag: void deleteField(org.jaudiotagger.tag.asf.AsfFieldKey)
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: java.lang.String getNativeKeyValueList()
com.alipay.apmobilesecuritysdk.e.f: void e(java.lang.String)
com.umeng.analytics.pro.bn: void a(short)
com.caij.puremusic.db.model.HistoryEntityQueries: void updateHistorySong(long,long)
com.caij.puremusic.drive.model.SubsonicAlbum: java.lang.String component7()
com.caij.puremusic.db.model.SongQueries$GetArtistSongCountQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.caij.puremusic.drive.model.PlaylistsMediaContainer$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.heinrichreimersoftware.materialintro.view.InkPageIndicator: int getRequiredWidth()
org.jaudiotagger.tag.datatype.StringDate: StringDate(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody)
com.caij.puremusic.db.model.SongQueries$SongsByAlumIdQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.jaudiotagger.audio.asf.data.MetadataContainer: boolean containsDescriptor(org.jaudiotagger.audio.asf.data.MetadataDescriptor)
com.google.android.material.card.MaterialCardView: void setDragged(boolean)
org.simpleframework.xml.core.DetailScanner: boolean isInstantiable()
com.caij.puremusic.db.model.ArtistQueries: app.cash.sqldelight.db.SqlDriver access$getDriver(com.caij.puremusic.db.model.ArtistQueries)
org.jaudiotagger.audio.generic.Utils: java.lang.String readString(java.nio.ByteBuffer,int)
org.simpleframework.xml.core.Collector$Registry: java.util.Iterator iterator()
org.jaudiotagger.tag.images.StandardArtwork: int getWidth()
org.jaudiotagger.audio.ogg.OggFileReader: void summarizeOggPageHeaders(java.io.File)
com.caij.puremusic.model.CategoryInfo$Category: com.caij.puremusic.model.CategoryInfo$Category[] values()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintList(android.content.res.ColorStateList)
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: void setStreamCountTwoChannel(byte)
com.caij.puremusic.drive.model.GoogleDriveFileResponse$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.db.model.Artist: com.caij.puremusic.db.model.Artist copy(long,java.lang.String)
org.simpleframework.xml.core.Label: boolean isRequired()
org.json.alipay.JSONException: JSONException(java.lang.String)
com.umeng.analytics.pro.w: void a(android.content.Context,java.lang.String)
org.jaudiotagger.audio.asf.data.AsfHeader: org.jaudiotagger.audio.asf.data.MetadataContainer findExtendedContentDescription()
org.jcodec.containers.mp4.boxes.NodeBox: void addFirst(org.jcodec.containers.mp4.boxes.MovieHeaderBox)
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$deleteSongBySource$2: java.lang.Object invoke(java.lang.Object)
com.google.android.material.card.MaterialCardView: void setCheckable(boolean)
org.simpleframework.xml.DefaultType: org.simpleframework.xml.DefaultType[] values()
org.simpleframework.xml.core.GetPart: java.lang.Class getType()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int)
com.bumptech.glide.request.SingleRequest$Status: SingleRequest$Status(java.lang.String,int)
com.caij.puremusic.drive.model.MediaStream$Companion: kotlinx.serialization.KSerializer serializer()
com.umeng.commonsdk.UMConfigure: void init(android.content.Context,int,java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setSwitchPadding(int)
org.jaudiotagger.audio.wav.WavCleaner: int findEndOfDataChunk()
com.google.android.material.chip.Chip: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
com.tencent.mm.opensdk.openapi.MMSharedPreferences$REditor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)
com.umeng.commonsdk.statistics.proto.a$e: com.umeng.commonsdk.statistics.proto.a$e b(int)
org.jaudiotagger.tag.mp4.Mp4Tag: java.lang.String getValue(org.jaudiotagger.tag.FieldKey,int)
org.jaudiotagger.tag.id3.framebody.FrameBodyTPE4: FrameBodyTPE4()
org.jaudiotagger.tag.id3.AbstractID3v2Tag$1: AbstractID3v2Tag$1(org.jaudiotagger.tag.id3.AbstractID3v2Tag,java.util.Iterator,java.util.Iterator)
com.tencent.bugly.proguard.w: boolean a(com.tencent.bugly.proguard.w,int,java.lang.String,com.tencent.bugly.proguard.v)
org.jaudiotagger.tag.aiff.AiffTag: AiffTag()
com.caij.puremusic.fragments.base.AbsRecyclerViewFragment: AbsRecyclerViewFragment()
org.simpleframework.xml.stream.PullReader: PullReader(org.xmlpull.v1.XmlPullParser)
com.caij.puremusic.db.model.PlayCountEntityQueries$deleteById$2: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.tag.wav.WavTag: java.util.List getFields(java.lang.String)
app.cash.sqldelight.ExecutableQuery: java.util.List executeAsList()
org.jaudiotagger.audio.exceptions.NoReadPermissionsException: NoReadPermissionsException(java.lang.Throwable)
org.jaudiotagger.tag.id3.ID3v24Tag: java.util.List getAll(org.jaudiotagger.tag.FieldKey)
com.alipay.apmobilesecuritysdk.otherid.UmidSdkWrapper: java.lang.String getSecurityToken(android.content.Context)
com.umeng.analytics.pro.ai: ai()
com.caij.puremusic.db.model.FolderQueries$SelectByIdQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.simpleframework.xml.strategy.Reference: void setValue(java.lang.Object)
com.caij.puremusic.drive.model.AlbumSubsonicResponse: AlbumSubsonicResponse(int,java.lang.String,java.lang.String,com.caij.puremusic.drive.model.SubsonicAlbum,kotlinx.serialization.internal.SerializationConstructorMarker)
com.caij.puremusic.drive.model.Prop: Prop()
com.tencent.mm.opensdk.modelmsg.WXImageObject: void setImagePath(java.lang.String)
com.caij.puremusic.db.model.ArtistQueries$clear$1: ArtistQueries$clear$1()
com.umeng.analytics.pro.x: void a(android.content.Context,java.lang.String)
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries: void insert(com.caij.puremusic.db.model.DriveFileDownUrlInfo)
org.jaudiotagger.tag.datatype.AbstractDataType: java.lang.String getIdentifier()
com.google.common.hash.BloomFilterStrategies$1: boolean mightContain(java.lang.Object,com.google.common.hash.Funnel,int,com.google.common.hash.BloomFilterStrategies$LockFreeBitArray)
com.thegrizzlylabs.sardineandroid.model.Set: void setProp(com.thegrizzlylabs.sardineandroid.model.Prop)
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingLeft()
com.umeng.analytics.pro.an: int k()
com.caij.puremusic.network.model.Artist: java.lang.String component6()
com.thegrizzlylabs.sardineandroid.model.Propstat: java.lang.String getResponsedescription()
org.jcodec.containers.mp4.BoxFactory: org.jcodec.containers.mp4.IBoxFactory getDefault()
com.umeng.commonsdk.statistics.proto.b$a: b$a()
org.simpleframework.xml.core.Introspector: org.simpleframework.xml.core.Contact getContact()
com.google.android.material.search.SearchBar: void setTitle(java.lang.CharSequence)
org.simpleframework.xml.core.MethodScanner: void build()
com.umeng.analytics.pro.bn: void g()
org.simpleframework.xml.core.EmptyMatcher: EmptyMatcher()
org.jaudiotagger.audio.mp3.MP3AudioHeader: void setBitRate()
com.thegrizzlylabs.sardineandroid.model.Grant: java.util.List getPrivilege()
org.jaudiotagger.audio.exceptions.CannotWriteException: CannotWriteException()
androidx.fragment.app.Fragment: int getNextTransition()
org.jaudiotagger.logging.PlainTextTagDisplayFormatter: java.lang.String toString()
com.google.android.material.materialswitch.MaterialSwitch: void setThumbIconTintList(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api31Impl: void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: boolean isNodeRelated(org.jaudiotagger.utils.tree.DefaultMutableTreeNode)
com.caij.puremusic.db.model.ServerAudioFormatQueries$insert$2: void invoke(kotlin.jvm.functions.Function1)
com.umeng.analytics.pro.bn: void a(java.nio.ByteBuffer)
com.alipay.android.phone.mrpc.core.k$a: k$a(int,int,int)
org.jaudiotagger.audio.mp4.Chunk: int getDuration()
org.simpleframework.xml.core.ParameterFactory: org.simpleframework.xml.core.ParameterFactory$ParameterBuilder getBuilder(java.lang.annotation.Annotation)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
com.caij.puremusic.fragments.GridStyle: int getId()
com.caij.puremusic.drive.model.Prop: void setGetcontentlength(java.lang.String)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedSize()
com.caij.puremusic.drive.model.ADriveFileResponse: int hashCode()
com.caij.puremusic.drive.model.Resourcetype$$serializer: Resourcetype$$serializer()
com.tencent.bugly.proguard.aq: void b(android.content.Context)
org.jaudiotagger.tag.images.ImageHandler: byte[] writeImage(java.awt.image.BufferedImage,java.lang.String)
com.google.common.io.Files$FilePredicate$1: boolean apply(java.lang.Object)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: void checkUploadRecordCrash()
org.jcodec.containers.mp4.boxes.MediaHeaderBox: long getModified()
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getMaterialThemeColorsTintList()
com.tencent.mm.opensdk.modelmsg.LaunchFromWX$Resp: LaunchFromWX$Resp(android.os.Bundle)
org.simpleframework.xml.core.ObjectInstance: java.lang.Object setInstance(java.lang.Object)
com.thegrizzlylabs.sardineandroid.model.Keepalive: java.util.List getContent()
org.jaudiotagger.tag.datatype.AbstractDataType: void readByteArray(byte[])
com.google.android.material.chip.Chip: void setChipMinHeight(float)
org.jaudiotagger.audio.ogg.OggVorbisTagReader: boolean isVorbisCommentHeader(byte[])
org.jaudiotagger.test.MergeID3AndMP3Files$MP3FileFilter: MergeID3AndMP3Files$MP3FileFilter(org.jaudiotagger.test.MergeID3AndMP3Files,boolean)
com.tencent.mm.opensdk.openapi.MMSharedPreferences$REditor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)
org.jaudiotagger.audio.mp4.RelocateMP4Editor: org.jcodec.containers.mp4.boxes.Box parseBox(java.nio.ByteBuffer)
com.bumptech.glide.load.DataSource: DataSource(java.lang.String,int)
org.jaudiotagger.tag.id3.AggregatedFrame: AggregatedFrame()
org.jaudiotagger.audio.asf.AsfFileReader: boolean determineVariableBitrate(org.jaudiotagger.audio.asf.data.AsfHeader)
com.tencent.mm.opensdk.modelmsg.GetMessageFromWX$Resp: void toBundle(android.os.Bundle)
org.jaudiotagger.tag.id3.framebody.FrameBodyWORS: java.lang.String getIdentifier()
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode[] $values()
org.simpleframework.xml.core.StructureBuilder: void validate(java.lang.Class)
com.tencent.bugly.BuglyStrategy: com.tencent.bugly.BuglyStrategy setUserInfoActivity(java.lang.Class)
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$Builder: WXMediaMessage$Builder()
org.simpleframework.xml.core.Creator: org.simpleframework.xml.core.Signature getSignature()
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setRefreshing(boolean)
com.umeng.commonsdk.statistics.proto.d: com.umeng.analytics.pro.bz m()
org.simpleframework.xml.stream.PullReader$Text: PullReader$Text(org.xmlpull.v1.XmlPullParser)
org.simpleframework.xml.core.ElementMapUnionParameter: java.lang.String getPath()
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse$$serializer: com.caij.puremusic.drive.model.JellyfinPlaylistsResponse deserialize(kotlinx.serialization.encoding.Decoder)
org.simpleframework.xml.core.FieldDetail: java.lang.reflect.Field getField()
androidx.mediarouter.app.MediaRouteExpandCollapseButton: MediaRouteExpandCollapseButton(android.content.Context,android.util.AttributeSet)
kotlinx.serialization.json.JsonArray$Companion: kotlinx.serialization.KSerializer serializer()
com.umeng.vt.diff.Event: Event()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,androidx.core.view.WindowInsetsCompat)
com.caij.puremusic.db.model.SongQueries$SongByPathQuery$execute$1: java.lang.Object invoke(java.lang.Object)
org.jcodec.containers.mp4.boxes.TrunBox$Factory: org.jcodec.containers.mp4.boxes.TrunBox create()
com.caij.puremusic.drive.model.AlbumArtist: java.lang.String component1()
com.caij.puremusic.drive.model.AlbumItem: java.lang.String toString()
androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)
com.umeng.analytics.pro.as: boolean a(long,int)
io.ktor.websocket.FrameType: io.ktor.websocket.FrameType[] $values()
nl.adaptivity.xmlutil.serialization.OutputKind: OutputKind(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.bumptech.glide.request.RequestCoordinator$RequestState: boolean isComplete()
org.jaudiotagger.tag.id3.ID3v24PreferredFrameOrderComparator: org.jaudiotagger.tag.id3.ID3v24PreferredFrameOrderComparator getInstanceof()
com.caij.puremusic.drive.model.PlexSectionsResponse: void write$Self(com.caij.puremusic.drive.model.PlexSectionsResponse,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
org.jaudiotagger.tag.mp4.field.Mp4TagTextField: boolean isEmpty()
org.simpleframework.xml.ElementList: boolean data()
org.jaudiotagger.utils.tree.EventListenerList: int getListenerCount(java.lang.Object[],java.lang.Class)
com.caij.puremusic.db.model.ArtistQueries$artists$2: com.caij.puremusic.db.model.Artist invoke(long,java.lang.String)
org.jcodec.containers.mp4.boxes.HandlerBox: int getComponentFlags()
com.caij.puremusic.views.BreadCrumbLayout: BreadCrumbLayout(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.db.model.PlaybackSong: int getPosition()
org.simpleframework.xml.core.Session: boolean containsKey(java.lang.Object)
org.jaudiotagger.tag.id3.ID3v1Tag: java.lang.String getValue(org.jaudiotagger.tag.FieldKey,int)
com.umeng.commonsdk.statistics.proto.a: void n()
com.caij.puremusic.drive.model.Propstat: com.caij.puremusic.drive.model.Prop getProp()
com.google.android.material.card.MaterialCardView: void setRippleColor(android.content.res.ColorStateList)
com.umeng.commonsdk.statistics.proto.b$e: com.umeng.commonsdk.statistics.proto.b$e a(java.lang.String)
org.jaudiotagger.tag.asf.AbstractAsfTagImageField: AbstractAsfTagImageField(java.lang.String)
com.caij.puremusic.drive.model.ADriveItem: java.lang.String getFile_id()
com.caij.puremusic.db.model.SongQueries$GetAlbumSongCountQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.simpleframework.xml.core.ElementArrayLabel: java.lang.Class getType()
org.jaudiotagger.audio.asf.io.ContentDescriptionReader: org.jaudiotagger.audio.asf.data.Chunk read(org.jaudiotagger.audio.asf.data.GUID,java.io.InputStream,long)
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
org.xmlpull.v1.XmlPullParser: int getLineNumber()
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getAppVersionCode(android.content.Context)
com.umeng.commonsdk.statistics.b: java.lang.String a(java.lang.String)
org.jaudiotagger.tag.TagOptionSingleton: boolean isLyrics3SaveEmptyField()
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
org.jcodec.containers.mp4.boxes.EsdsBox: org.jcodec.containers.mp4.boxes.EsdsBox createEsdsBox(java.nio.ByteBuffer,int,int,int,int,int)
androidx.activity.ComponentDialog: void onStop()
org.jaudiotagger.tag.id3.ID3v22Tag: void translateFrame(org.jaudiotagger.tag.id3.AbstractID3v2Frame)
com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()
androidx.fragment.app.Fragment: boolean isResumed()
com.umeng.analytics.pro.an: java.nio.ByteBuffer u()
com.caij.puremusic.drive.model.DriveFile: int getSourceType()
org.simpleframework.xml.core.SignatureBuilder: void build(org.simpleframework.xml.core.SignatureBuilder$ParameterTable,org.simpleframework.xml.core.SignatureBuilder$ParameterList,int)
com.tencent.bugly.proguard.o: o()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
com.google.android.material.button.MaterialButton: void setChecked(boolean)
org.simpleframework.xml.core.CollectionFactory: org.simpleframework.xml.core.Instance getInstance(org.simpleframework.xml.stream.InputNode)
org.simpleframework.xml.core.Composite: void validateSection(org.simpleframework.xml.stream.InputNode,org.simpleframework.xml.core.Section)
org.simpleframework.xml.core.ElementListUnionLabel: java.lang.String[] getNames()
com.tencent.mm.opensdk.modelbiz.WXChannelJumpUrlInfo: void serialize(android.os.Bundle)
com.umeng.commonsdk.statistics.internal.StatTracer: void logFailedRequest()
com.umeng.commonsdk.internal.c$4: void onGetOaid(java.lang.String)
org.jaudiotagger.audio.wav.WavTagWriter: void delete(org.jaudiotagger.tag.Tag,java.nio.channels.FileChannel)
com.caij.puremusic.MainModuleKt$roomModule$1$15: MainModuleKt$roomModule$1$15()
com.umeng.commonsdk.statistics.proto.b$e: com.umeng.commonsdk.statistics.proto.b$e valueOf(java.lang.String)
com.alipay.apmobilesecuritysdk.face.APSecuritySdk$InitResultListener: void onResult(com.alipay.apmobilesecuritysdk.face.APSecuritySdk$TokenResult)
org.jaudiotagger.tag.id3.framebody.FrameBodyTCMP: FrameBodyTCMP()
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: boolean isEmpty()
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: java.util.List patch(java.lang.String,java.util.List,java.util.List)
org.jaudiotagger.audio.asf.io.ChunkContainerReader: org.jaudiotagger.audio.asf.data.ChunkContainer createContainer(long,java.math.BigInteger,java.io.InputStream)
org.jcodec.containers.mp4.boxes.ChannelBox: int getChannelLayout()
com.caij.puremusic.drive.model.SubsonicPlaylist: SubsonicPlaylist(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,int,int,java.lang.String,java.lang.String,java.lang.String)
com.caij.puremusic.db.model.AlbumQueries$clear$1: AlbumQueries$clear$1()
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: java.lang.String lock(java.lang.String)
okhttp3.logging.HttpLoggingInterceptor$Level: HttpLoggingInterceptor$Level(java.lang.String,int)
org.jcodec.containers.mp4.boxes.ReverseDnsBox$RdnsNameBox: void parse(java.nio.ByteBuffer)
androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)
androidx.fragment.app.Fragment: androidx.loader.app.LoaderManager getLoaderManager()
org.simpleframework.xml.core.ElementListLabel: java.lang.String toString()
com.caij.puremusic.drive.model.DropboxDriveItem: java.lang.String getTag()
com.google.android.material.textfield.TextInputLayout: void setMinWidth(int)
org.jcodec.containers.mp4.boxes.MovieExtendsHeaderBox: MovieExtendsHeaderBox(org.jcodec.containers.mp4.boxes.Header)
org.jaudiotagger.audio.mp3.MP3AudioHeader: java.lang.Long getAudioDataEndPosition()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
org.jaudiotagger.audio.AudioFile: org.jaudiotagger.tag.Tag getTag()
com.caij.puremusic.drive.model.EmbyAlbumsResponse: java.lang.String toString()
com.tencent.mm.opensdk.modelmsg.WXStateJumpMiniProgramInfo: void unserialize(android.os.Bundle)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
org.jaudiotagger.audio.asf.data.GUID: org.jaudiotagger.audio.asf.data.GUID parseGUID(java.lang.String)
com.tencent.mm.opensdk.modelmsg.WXTextObject: WXTextObject(java.lang.String)
org.simpleframework.xml.core.PathParser: java.lang.String getFirst()
org.simpleframework.xml.stream.Indenter: java.lang.String push()
com.caij.puremusic.drive.model.SubsonicAlbum: int hashCode()
com.alipay.android.phone.mrpc.core.HttpUrlHeader: void setHeaders(java.util.Map)
org.jaudiotagger.tag.datatype.SynchronisedTempoCode: int hashCode()
com.caij.puremusic.drive.model.Auth2Token: Auth2Token(int,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,long,kotlinx.serialization.internal.SerializationConstructorMarker)
org.jaudiotagger.audio.generic.Utils: java.nio.ByteBuffer fetchFromChannel(java.nio.channels.ReadableByteChannel,int)
org.simpleframework.xml.transform.StringArrayTransform: java.lang.String write(java.lang.String[],java.lang.String)
com.umeng.commonsdk.statistics.common.a$c: a$c(android.os.IBinder)
com.caij.puremusic.db.model.PlaylistEntityQueries$CheckPlaylistExistsQuery: java.lang.String toString()
com.thegrizzlylabs.sardineandroid.model.Location: Location()
com.caij.puremusic.drive.model.DropboxDriveItem$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.umeng.analytics.pro.ac: boolean b()
org.jaudiotagger.tag.id3.framebody.FrameBodyWCOM: FrameBodyWCOM(org.jaudiotagger.tag.id3.framebody.FrameBodyWCOM)
org.simpleframework.xml.filter.SystemFilter: java.lang.String replace(java.lang.String)
org.simpleframework.xml.core.MethodPart: java.lang.Class getDeclaringClass()
com.alipay.android.phone.mrpc.core.x: java.lang.Object a(java.lang.Class)
org.jaudiotagger.audio.generic.GenericTag: java.util.List getAll(org.jaudiotagger.tag.FieldKey)
androidx.core.app.RemoteInput$Api26Impl: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)
com.umeng.analytics.pro.bb: bb(java.lang.String,java.lang.Throwable)
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior()
com.caij.puremusic.drive.model.PlaylistMetadata: java.lang.String component3()
org.jaudiotagger.tag.TagOptionSingleton: java.util.HashMap getLyrics3SaveFieldMap()
androidx.fragment.app.Fragment: void onPrimaryNavigationFragmentChanged(boolean)
com.umeng.commonsdk.statistics.proto.c: com.umeng.analytics.pro.av deepCopy()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
com.google.common.hash.LittleEndianByteArray$JavaLittleEndianBytes: long getLongLittleEndian(byte[],int)
org.jaudiotagger.audio.flac.FlacFileReader: FlacFileReader()
com.umeng.analytics.pro.bf: java.lang.Object a(com.umeng.analytics.pro.bc)
com.caij.puremusic.db.model.ServerSongCoverQueries$GetBySourceQuery$execute$1: ServerSongCoverQueries$GetBySourceQuery$execute$1(com.caij.puremusic.db.model.ServerSongCoverQueries$GetBySourceQuery)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
org.simpleframework.xml.core.CacheParameter: boolean isText()
com.google.android.material.materialswitch.MaterialSwitch: void setTrackTintList(android.content.res.ColorStateList)
org.jcodec.containers.mp4.boxes.MetaValue: MetaValue(int,int,byte[])
org.simpleframework.xml.stream.InputAttribute: java.lang.Object getSource()
org.jaudiotagger.tag.mp4.field.Mp4TagTextNumberField: java.util.List getNumbers()
org.jaudiotagger.audio.ogg.util.OggPage: java.nio.ByteBuffer getContent()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealScrimColor(int)
com.bumptech.glide.manager.SupportRequestManagerFragment: SupportRequestManagerFragment()
org.simpleframework.xml.stream.Formatter: void writeText(java.lang.String)
com.umeng.commonsdk.internal.d: org.json.JSONArray h(android.content.Context)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
com.caij.puremusic.network.model.LastFmTrack$Track: com.caij.puremusic.network.model.LastFmTrack$Track$Wiki getWiki()
org.simpleframework.xml.core.Label: org.simpleframework.xml.core.Decorator getDecorator()
com.google.android.material.appbar.CollapsingToolbarLayout: void setLineSpacingMultiplier(float)
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgramWithToken$Resp: void toBundle(android.os.Bundle)
io.ktor.http.URLUtilsKt$appendUrlFullPath$2: URLUtilsKt$appendUrlFullPath$2()
org.jaudiotagger.audio.asf.util.Utils: java.math.BigInteger readBig64(java.io.InputStream)
com.caij.puremusic.drive.model.AlbumList: AlbumList(java.util.List)
org.simpleframework.xml.core.CompositeUnion: java.lang.Object read(org.simpleframework.xml.stream.InputNode)
org.jaudiotagger.tag.id3.ID3v1Tag: void addField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
org.jaudiotagger.tag.id3.framebody.FrameBodyTDTG: java.lang.String getIdentifier()
com.caij.puremusic.db.model.ServerAudioFormatQueries$getById$2: com.caij.puremusic.db.model.ServerAudioFormat invoke(long,long,java.lang.String,java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidth(int)
org.jaudiotagger.tag.id3.ID3v24Frame: void write(java.io.ByteArrayOutputStream)
org.jaudiotagger.audio.asf.data.GUID: java.lang.String getDescription()
com.caij.puremusic.db.model.PlaylistEntityQueries$renamePlaylist$2: PlaylistEntityQueries$renamePlaylist$2()
org.simpleframework.xml.stream.OutputNode: void setMode(org.simpleframework.xml.stream.Mode)
com.tencent.mm.opensdk.modelbiz.WXChannelOpenEvent$Req: boolean checkArgs()
com.tencent.bugly.proguard.ag$a: com.tencent.bugly.proguard.ag a()
org.simpleframework.xml.stream.Indenter: Indenter()
org.jaudiotagger.tag.lyrics3.Lyrics3v1: Lyrics3v1()
org.simpleframework.xml.core.GroupExtractor$Registry: void register(java.lang.Class,org.simpleframework.xml.core.Label)
com.umeng.analytics.pro.bf$b: bf$b()
org.jaudiotagger.audio.wav.WavOptions: WavOptions(java.lang.String,int)
org.jaudiotagger.tag.id3.framebody.FrameBodyRVAD: FrameBodyRVAD(org.jaudiotagger.tag.id3.framebody.FrameBodyRVA2)
com.umeng.analytics.pro.aa: java.lang.String a(android.content.Context)
com.thegrizzlylabs.sardineandroid.model.Ace: com.thegrizzlylabs.sardineandroid.model.Protected getProtected()
com.caij.puremusic.db.model.PlaybackSongQueries$insert$1: PlaybackSongQueries$insert$1(com.caij.puremusic.db.model.PlaybackSongQueries,com.caij.puremusic.db.model.PlaybackSong)
com.caij.puremusic.db.model.SongQueries$songsByArtistIdWithLike$1: java.lang.Object invoke(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: android.widget.ImageView$ScaleType getEndIconScaleType()
com.yalantis.ucrop.view.TransformImageView: float getCurrentAngle()
org.jaudiotagger.tag.id3.framebody.FrameBodyRVAD: void setupObjectList()
com.caij.puremusic.db.model.ArtistQueries$deleteArtistById$2: ArtistQueries$deleteArtistById$2()
org.jaudiotagger.tag.TagOptionSingleton: void setWriteWavForTwonky(boolean)
com.thegrizzlylabs.sardineandroid.Sardine: java.util.List list(java.lang.String,int,boolean)
org.simpleframework.xml.stream.Style: java.lang.String getElement(java.lang.String)
org.jcodec.containers.mp4.boxes.VideoMediaHeaderBox: int getbOpColor()
org.koin.core.definition.Kind: Kind(java.lang.String,int)
org.simpleframework.xml.stream.Position: int getLine()
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
com.umeng.analytics.pro.aq: aq()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyIMG: void addImage(org.jaudiotagger.tag.datatype.Lyrics3Image)
org.jaudiotagger.tag.datatype.TextEncodedStringSizeTerminated: void readByteArray(byte[],int)
com.tencent.bugly.crashreport.BuglyLog: void setCache(int)
com.alipay.apmobilesecuritysdk.e.i: java.lang.String b()
com.umeng.analytics.pro.bo: com.umeng.analytics.pro.bs h()
com.caij.puremusic.service.PlaybackLocation: PlaybackLocation(java.lang.String,int)
com.google.common.collect.MapMakerInternalMap$Strength: com.google.common.collect.MapMakerInternalMap$Strength valueOf(java.lang.String)
org.jaudiotagger.audio.asf.data.Chunk: java.lang.String prettyPrint(java.lang.String)
com.umeng.commonsdk.statistics.common.d: android.content.SharedPreferences f()
org.jaudiotagger.audio.asf.data.MetadataDescriptor: void setBinaryValue(byte[])
com.caij.puremusic.drive.model.Location$Companion: Location$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.jcodec.containers.mp4.boxes.MediaInfoBox: java.lang.String fourcc()
org.simpleframework.xml.core.Context: java.lang.String getProperty(java.lang.String)
com.tencent.bugly.proguard.ai: void a(int,com.tencent.bugly.proguard.bq,java.lang.String,java.lang.String,com.tencent.bugly.proguard.ah,boolean)
com.alipay.android.phone.mrpc.core.b: com.alipay.android.phone.mrpc.core.b$b a(com.alipay.android.phone.mrpc.core.b)
org.jaudiotagger.tag.id3.ID3v24Frame: ID3v24Frame(java.lang.String)
com.caij.puremusic.db.model.AlbumQueries$album$2: AlbumQueries$album$2()
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.caij.puremusic.drive.model.User$Companion: User$Companion()
com.umeng.commonsdk.config.FieldManager: boolean b()
com.caij.puremusic.drive.model.Collection$$serializer: Collection$$serializer()
com.umeng.commonsdk.UMConfigure: java.lang.String getUMIDString(android.content.Context)
com.alipay.android.phone.mrpc.core.b: b(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)
org.simpleframework.xml.core.DefaultDetail: org.simpleframework.xml.Order getOrder()
com.afollestad.materialdialogs.color.view.ColorCircleView: int getBorder()
com.tencent.bugly.proguard.ap: long d(byte[])
org.jaudiotagger.tag.datatype.ID3v2LyricLine: void setTimeStamp(long)
org.jaudiotagger.audio.wav.WavTagWriter: void writeBothTags(java.nio.channels.FileChannel,java.nio.ByteBuffer,java.nio.ByteBuffer)
com.tencent.bugly.crashreport.crash.anr.TraceFileHelper: com.tencent.bugly.crashreport.crash.anr.TraceFileHelper$a readTargetDumpInfo(java.lang.String,java.lang.String,boolean)
com.caij.puremusic.drive.model.User$$serializer: com.caij.puremusic.drive.model.User deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.audio.asf.data.ContentBranding: long writeInto(java.io.OutputStream)
com.caij.puremusic.db.model.AlbumQueries: app.cash.sqldelight.Query getAlbumByArtistId(long)
org.jaudiotagger.audio.asf.data.AudioStreamChunk: long getAverageBytesPerSec()
org.jaudiotagger.logging.PlainTextTagDisplayFormatter: PlainTextTagDisplayFormatter()
org.simpleframework.xml.core.ScannerFactory: org.simpleframework.xml.core.Scanner getInstance(java.lang.Class)
org.jaudiotagger.tag.id3.framebody.FrameBodyTOPE: java.lang.String getIdentifier()
org.simpleframework.xml.stream.OutputElement: org.simpleframework.xml.stream.NamespaceMap getNamespaces()
com.umeng.analytics.pro.bv: bv(int,java.lang.String,java.lang.Throwable)
com.google.android.material.textfield.TextInputLayout: TextInputLayout(android.content.Context,android.util.AttributeSet)
org.simpleframework.xml.core.Variable: boolean isCollection()
com.tencent.mm.opensdk.modelbiz.WXChannelStartLive$Resp: WXChannelStartLive$Resp()
com.umeng.commonsdk.framework.UMFrUtils: void updateLastSuccessfulBuildTime(android.content.Context)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)
com.caij.puremusic.drive.model.AlbumMediaContainer: java.util.List component1()
androidx.fragment.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getEnterTransitionCallback()
nl.adaptivity.xmlutil.serialization.InputKind: InputKind(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.common.reflect.Types$JavaVersion: Types$JavaVersion(java.lang.String,int)
com.caij.puremusic.drive.model.Collection: java.lang.String getName()
android.support.v4.media.RatingCompat$Api19Impl: android.media.Rating newUnratedRating(int)
com.caij.puremusic.drive.model.Prop: void setCreationdate(java.lang.String)
androidx.fragment.app.Fragment: void setSharedElementEnterTransition(java.lang.Object)
com.caij.puremusic.network.model.Artist: com.caij.puremusic.network.model.Artist getAlbum()
com.tencent.bugly.proguard.g: g()
org.simpleframework.xml.core.OverrideType: OverrideType(org.simpleframework.xml.strategy.Type,java.lang.Class)
org.simpleframework.xml.stream.InputNode: boolean isElement()
com.tencent.bugly.crashreport.CrashReport: void setSdkExtraData(android.content.Context,java.lang.String,java.lang.String)
com.umeng.commonsdk.statistics.proto.e: void b(boolean)
com.caij.puremusic.network.model.ArtistWrapper: com.caij.puremusic.network.model.ArtistWrapper copy(java.lang.String,java.lang.Integer,java.util.List)
com.caij.puremusic.db.model.AlbumQueries$insert$2: void invoke(kotlin.jvm.functions.Function1)
com.alipay.android.phone.mrpc.core.o: int hashCode()
com.caij.puremusic.db.model.SongQueries$songsByArtist$2: com.caij.puremusic.db.model.Song invoke(long,java.lang.String,int,int,long,java.lang.String,java.lang.String,long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,long,long)
com.thegrizzlylabs.sardineandroid.impl.handler.ExistsResponseHandler: java.lang.Boolean handleResponse(okhttp3.Response)
org.simpleframework.xml.core.ElementListUnionLabel: boolean isData()
com.google.android.material.navigationrail.NavigationRailView: com.google.android.material.navigationrail.NavigationRailMenuView getNavigationRailMenuView()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.umeng.analytics.pro.b$a$a: b$a$a(android.os.IBinder)
org.jaudiotagger.tag.datatype.PartOfSet$PartOfSetValue: void setTotal(java.lang.String)
com.umeng.analytics.pro.bu: bu()
com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleGravity(int)
com.yalantis.ucrop.view.OverlayView: void setOverlayViewChangeListener(com.yalantis.ucrop.callback.OverlayViewChangeListener)
org.jaudiotagger.audio.asf.AsfFileReader: org.jaudiotagger.tag.Tag getTag(java.io.RandomAccessFile)
org.simpleframework.xml.core.PrimitiveValue: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object)
com.alipay.android.app.IRemoteServiceCallback$Stub: IRemoteServiceCallback$Stub()
com.umeng.analytics.pro.b$a: android.os.IBinder asBinder()
android.support.v4.media.AudioAttributesImplApi26Parcelizer: AudioAttributesImplApi26Parcelizer()
com.caij.puremusic.db.model.ServerSongCoverQueries$GetByIdQuery$execute$1: ServerSongCoverQueries$GetByIdQuery$execute$1(com.caij.puremusic.db.model.ServerSongCoverQueries$GetByIdQuery)
org.jcodec.containers.mp4.boxes.TrackHeaderBox: void setWidth(float)
com.umeng.commonsdk.internal.utils.a: java.lang.String j(android.content.Context)
com.umeng.commonsdk.statistics.b: int[] b(android.content.Context)
org.simpleframework.xml.core.Composite: void readVersion(org.simpleframework.xml.stream.InputNode,java.lang.Object,org.simpleframework.xml.core.Schema)
com.umeng.analytics.pro.f: void a(android.database.sqlite.SQLiteDatabase,java.lang.String)
cn.lyric.getter.api.tools.EventTools: void sendLyric(android.content.Context,java.lang.String,java.lang.String)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$BreadthFirstEnumeration$Queue: java.lang.Object dequeue()
org.simpleframework.xml.stream.OutputElement: void setMode(org.simpleframework.xml.stream.Mode)
com.caij.puremusic.drive.model.AlbumSubsonicResponse: com.caij.puremusic.drive.model.AlbumSubsonicResponse copy(java.lang.String,java.lang.String,com.caij.puremusic.drive.model.SubsonicAlbum)
kotlinx.serialization.json.JsonElement$Companion: kotlinx.serialization.KSerializer serializer()
com.caij.puremusic.drive.model.SongItem: boolean getIsFolder()
com.tencent.mm.opensdk.diffdev.IDiffDevOAuth: void removeListener(com.tencent.mm.opensdk.diffdev.OAuthListener)
com.thegrizzlylabs.sardineandroid.model.Lockentry: void setLockscope(com.thegrizzlylabs.sardineandroid.model.Lockscope)
com.umeng.commonsdk.statistics.proto.c: void a(boolean)
com.caij.puremusic.db.model.ServerSongCoverQueries$GetBySourceQuery$execute$1: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.drive.model.DavResource: long getModified()
org.simpleframework.xml.transform.DateType: java.lang.String getText(java.util.Date)
com.alipay.sdk.m.u.g: com.alipay.sdk.m.u.g valueOf(java.lang.String)
com.google.common.collect.AbstractIterator$State: AbstractIterator$State(java.lang.String,int)
org.repackage.a.a.a.a.b: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
androidx.appcompat.widget.AppCompatTextHelper$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
com.tencent.mm.opensdk.modelbiz.WXLaunchWxaRedirectingPage$Resp: void fromBundle(android.os.Bundle)
org.jcodec.containers.mp4.boxes.LoadSettingsBox: int getPreloadDuration()
com.thegrizzlylabs.sardineandroid.Sardine: void setCustomProps(java.lang.String,java.util.Map,java.util.List)
com.caij.puremusic.db.model.FolderQueries$selectAll$2: FolderQueries$selectAll$2()
com.umeng.commonsdk.statistics.idtracking.b: b(android.content.Context)
com.tencent.bugly.proguard.bg: void run()
com.thegrizzlylabs.sardineandroid.model.Lockinfo: void setLocktype(com.thegrizzlylabs.sardineandroid.model.Locktype)
com.caij.puremusic.db.model.SongQueries$GetSongBySourceQuery: SongQueries$GetSongBySourceQuery(com.caij.puremusic.db.model.SongQueries,long,kotlin.jvm.functions.Function1)
org.jaudiotagger.utils.tree.DefaultTreeModel: void addTreeModelListener(org.jaudiotagger.utils.tree.TreeModelListener)
com.caij.puremusic.drive.model.DriveFile: long getSourceId()
org.repackage.com.zui.deviceidservice.IDeviceidInterface$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
com.umeng.commonsdk.debug.UMLog: UMLog()
org.jaudiotagger.tag.id3.ID3v22Frame: ID3v22Frame(java.nio.ByteBuffer,java.lang.String)
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
com.tencent.mm.opensdk.channel.MMessageActV2$Args: java.lang.String toString()
org.jcodec.containers.mp4.boxes.MediaHeaderBox: long getCreated()
org.json.alipay.c: java.lang.String toString()
com.umeng.commonsdk.UMConfigure: com.umeng.commonsdk.listener.OnGetOaidListener access$000()
com.caij.puremusic.db.model.SearchAlbumResultQueries$insert$1: SearchAlbumResultQueries$insert$1(com.caij.puremusic.db.model.SearchAlbumResult)
com.umeng.analytics.pro.l$1: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.caij.puremusic.drive.model.JellyfinSongListResponse$Companion: JellyfinSongListResponse$Companion()
com.thegrizzlylabs.sardineandroid.DavResource: java.lang.String getModifiedDate(com.thegrizzlylabs.sardineandroid.model.Response)
com.umeng.commonsdk.config.b: void a(java.lang.String,java.lang.Boolean)
org.simpleframework.xml.stream.Formatter: void write(char)
com.umeng.analytics.pro.a: java.lang.String b()
androidx.core.view.ViewCompat$Api17Impl: void setLayoutDirection(android.view.View,int)
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgramWithToken$Req: WXLaunchMiniProgramWithToken$Req()
com.umeng.commonsdk.internal.d: void b(android.content.Context)
com.tencent.bugly.crashreport.CrashReport: java.net.Proxy getHttpProxy()
com.caij.puremusic.drive.model.Media: Media(int,int,int,int,int,java.lang.String,java.lang.String,java.util.List,kotlinx.serialization.internal.SerializationConstructorMarker)
org.jaudiotagger.tag.id3.ID3v24Frame: int getGroupIdentifier()
org.jaudiotagger.audio.wav.WavTagWriter$InfoFieldWriterOrderComparator: WavTagWriter$InfoFieldWriterOrderComparator(org.jaudiotagger.audio.wav.WavTagWriter)
com.caij.puremusic.db.model.SongEntityQueries$getPlaylistLastAddSong$2: com.caij.puremusic.db.model.SongEntity invoke(long,long,long)
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: int getPreferredWriteOrder()
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: java.util.List getValues()
org.simpleframework.xml.core.StructureBuilder: void process(org.simpleframework.xml.core.Contact,java.lang.annotation.Annotation,org.simpleframework.xml.core.LabelMap)
org.simpleframework.xml.stream.Indenter: Indenter(org.simpleframework.xml.stream.Format,int)
com.umeng.commonsdk.config.b: com.umeng.commonsdk.config.b b()
com.caij.puremusic.db.model.SongQueries$SongsByNameArtistQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.jaudiotagger.tag.datatype.ID3v2LyricLine: java.lang.String getText()
org.simpleframework.xml.core.PathParser: boolean isPath()
com.umeng.analytics.Gender: Gender(java.lang.String,int,int,com.umeng.analytics.Gender$1)
com.caij.puremusic.drive.model.AlbumMetadata$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.caij.puremusic.db.model.ServerSongCoverQueries$getBySource$1: ServerSongCoverQueries$getBySource$1(kotlin.jvm.functions.Function3)
com.caij.puremusic.drive.model.PlaylistsMediaContainer: boolean equals(java.lang.Object)
com.umeng.analytics.pro.au: au(int)
com.alipay.android.phone.mrpc.core.HttpException: HttpException(java.lang.Integer,java.lang.String)
com.thegrizzlylabs.sardineandroid.model.SupportedReport: SupportedReport()
org.simpleframework.xml.transform.DoubleTransform: java.lang.String write(java.lang.Double)
com.google.android.material.bottomsheet.BottomSheetDialog$EdgeToEdgeCallback: BottomSheetDialog$EdgeToEdgeCallback(android.view.View,androidx.core.view.WindowInsetsCompat)
com.caij.puremusic.drive.model.PlexLoginResponse: PlexLoginResponse(com.caij.puremusic.drive.model.PlexUser)
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: void unsetUnsynchronised()
com.google.android.material.card.MaterialCardView: void setStrokeColor(int)
com.umeng.analytics.pro.o: void a(java.lang.Object)
org.simpleframework.xml.stream.NodeMap: org.simpleframework.xml.stream.Node get(java.lang.String)
com.tencent.bugly.proguard.o: java.lang.String[] getTables()
org.simpleframework.xml.core.Reflector: java.lang.Class getParameterDependent(java.lang.reflect.Constructor,int)
com.caij.puremusic.db.model.PlayCountEntity: com.caij.puremusic.db.model.PlayCountEntity copy$default(com.caij.puremusic.db.model.PlayCountEntity,long,long,long,int,java.lang.Object)
kotlin.coroutines.EmptyCoroutineContext: EmptyCoroutineContext()
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
com.caij.puremusic.db.model.SongEntityQueries$songsFromPlaylist$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
com.umeng.analytics.pro.bo: void a(com.umeng.analytics.pro.bs)
com.umeng.commonsdk.framework.UMFrUtils: java.io.File getEnvelopeFile(android.content.Context)
org.jaudiotagger.tag.datatype.Lyrics3TimeStamp: java.lang.String writeString()
com.caij.puremusic.drive.model.OneDriveFile: com.caij.puremusic.drive.model.OneDriveFile copy$default(com.caij.puremusic.drive.model.OneDriveFile,java.lang.String,int,java.lang.Object)
com.google.android.material.button.MaterialButton: int getIconPadding()
com.thegrizzlylabs.sardineandroid.DavQuota: long getUsed(com.thegrizzlylabs.sardineandroid.model.Response)
org.jaudiotagger.tag.datatype.SynchronisedTempoCode: long getTimestamp()
com.umeng.analytics.pro.an: boolean p()
com.caij.puremusic.drive.model.SubsonicAlbum$$serializer: SubsonicAlbum$$serializer()
org.jaudiotagger.audio.real.RealChunk: int getSize()
org.simpleframework.xml.core.LabelExtractor: org.simpleframework.xml.core.Label getLabel(org.simpleframework.xml.core.Contact,java.lang.annotation.Annotation,java.lang.annotation.Annotation)
org.simpleframework.xml.core.GetPart: java.lang.annotation.Annotation getAnnotation()
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyETT: java.lang.String getTitle()
org.simpleframework.xml.core.ElementUnionParameter: java.lang.Class getType()
com.google.android.material.navigation.NavigationBarMenuView: int getItemPaddingTop()
org.json.alipay.b: b()
com.caij.puremusic.db.model.PlaybackSong: long component1()
com.caij.puremusic.db.model.AlbumQueries$SearchAlbumsByNameQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId: java.lang.String e()
org.jaudiotagger.tag.mp4.field.Mp4TagTextField: byte[] getDataBytes()
org.repackage.com.meizu.flyme.openidsdk.b: java.lang.String b(android.content.Context,org.repackage.com.meizu.flyme.openidsdk.OpenId)
com.caij.puremusic.model.Playlist: long getId()
com.caij.puremusic.drive.model.SearchResult3$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.audio.exceptions.CannotReadException: CannotReadException(java.lang.Throwable)
org.jcodec.containers.mp4.boxes.MovieHeaderBox: float getVolume()
androidx.appcompat.widget.AppCompatRadioButton: void setEmojiCompatEnabled(boolean)
com.caij.puremusic.drive.model.SubsonicResponse: java.lang.String getStatus()
com.caij.puremusic.MainModuleKt$roomModule$1$5: MainModuleKt$roomModule$1$5()
org.jaudiotagger.audio.asf.data.AudioStreamChunk: int getKbps()
androidx.appcompat.widget.AppCompatImageView: boolean hasOverlappingRendering()
com.caij.puremusic.db.model.ArtistQueries$deleteArtistById$1: ArtistQueries$deleteArtistById$1(long)
org.jcodec.containers.mp4.boxes.MediaInfoBox: MediaInfoBox(org.jcodec.containers.mp4.boxes.Header)
com.caij.puremusic.fragments.GridStyle: com.caij.puremusic.fragments.GridStyle valueOf(java.lang.String)
com.caij.puremusic.drive.model.PlexPlaylistsResponse: com.caij.puremusic.drive.model.PlexPlaylistsResponse copy(com.caij.puremusic.drive.model.PlaylistsMediaContainer)
com.google.android.material.internal.VisibilityAwareImageButton: void setVisibility(int)
org.simpleframework.xml.stream.OutputStack$Sequence: OutputStack$Sequence(org.simpleframework.xml.stream.OutputStack)
org.simpleframework.xml.core.EmptyExpression: java.lang.String getPath()
com.caij.puremusic.drive.model.EmbyAlbumsResponse: EmbyAlbumsResponse(java.util.List,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.caij.puremusic.drive.model.AlbumSubsonicResponse$Companion: kotlinx.serialization.KSerializer serializer()
org.jaudiotagger.tag.datatype.Lyrics3TimeStamp: void setMinute(long)
code.name.monkey.appthemehelper.common.prefs.supportv7.ATESwitchPreference: ATESwitchPreference(android.content.Context,android.util.AttributeSet,int,int)
com.caij.puremusic.drive.model.PlayListSubsonicResponse$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.fragments.playlists.PlaylistDetailsFragment: PlaylistDetailsFragment()
org.jaudiotagger.tag.datatype.PairedTextEncodedStringNullTerminated$ValuePairs: java.util.List getMapping()
org.simpleframework.xml.core.TextLabel: org.simpleframework.xml.core.Decorator getDecorator()
com.umeng.analytics.pro.o: java.lang.String m()
org.simpleframework.xml.core.ObjectScanner: void field(org.simpleframework.xml.core.Detail)
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: void a(java.lang.String)
com.tencent.mm.opensdk.modelmsg.WXGameLiveObject: boolean checkArgs()
com.caij.puremusic.drive.model.PlexLoginResponse$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.tencent.mm.opensdk.R: R()
com.caij.puremusic.db.model.SongQueries$songsByArtist$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.tag.flac.FlacTag: org.jaudiotagger.tag.images.Artwork getFirstArtwork()
com.umeng.analytics.pro.bo: void B()
com.tencent.bugly.proguard.bt: void a(com.tencent.bugly.proguard.l)
com.umeng.analytics.pro.h: boolean a(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String)
com.caij.puremusic.drive.model.BaiduFileResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.BaiduFileResponse)
com.google.android.material.slider.BaseSlider: void setTrackInactiveTintList(android.content.res.ColorStateList)
com.caij.puremusic.drive.model.AlbumList$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyLYR: java.lang.String getLyric()
com.umeng.analytics.pro.r: void b(org.json.JSONObject,android.content.Context)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: java.util.List getAll(org.jaudiotagger.tag.FieldKey)
com.caij.puremusic.drive.model.DropboxDriveItem$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
com.umeng.analytics.pro.s: boolean b(java.util.Map)
org.simpleframework.xml.strategy.ObjectValue: void setValue(java.lang.Object)
org.jaudiotagger.audio.mp4.Flatten: int calcProgress(int,int,int)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
com.tencent.bugly.proguard.s: void c(android.content.Context,com.tencent.bugly.BuglyStrategy)
com.caij.puremusic.db.model.ServerArtistCoverQueries$clear$1: void invoke(kotlin.jvm.functions.Function1)
com.caij.puremusic.drive.model.PlexSectionsResponse: boolean equals(java.lang.Object)
com.google.android.exoplayer2.audio.AudioAttributes$Api32: void setSpatializationBehavior(android.media.AudioAttributes$Builder,int)
com.alipay.android.phone.mrpc.core.b: long b(java.lang.String)
org.simpleframework.xml.Serializer: void write(java.lang.Object,org.simpleframework.xml.stream.OutputNode)
com.umeng.analytics.pro.y: void a(long)
org.simpleframework.xml.stream.StreamReader$Start: java.lang.String getReference()
com.umeng.analytics.pro.be: java.lang.String a(com.umeng.analytics.pro.av,java.lang.String)
com.google.common.reflect.Types$JavaVersion$1: java.lang.reflect.Type newArrayType(java.lang.reflect.Type)
nl.adaptivity.xmlutil.EventType: boolean isIgnorable()
org.jaudiotagger.tag.id3.framebody.FrameBodyUFID: void setUniqueIdentifier(byte[])
org.jaudiotagger.tag.id3.ID3v22Tag: org.jaudiotagger.tag.id3.ID3v22Frame createFrame(java.lang.String)
org.simpleframework.xml.convert.RegistryStrategy: org.simpleframework.xml.convert.Converter lookup(org.simpleframework.xml.strategy.Type,org.simpleframework.xml.strategy.Value)
org.simpleframework.xml.core.FieldScanner$FieldKey: boolean equals(java.lang.Object)
com.caij.puremusic.model.Data: Data(java.lang.String,java.lang.String,java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String)
org.simpleframework.xml.core.ElementLabel: java.lang.Class getType()
com.caij.puremusic.drive.model.JellyfinLoginResponse$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.google.android.material.navigation.NavigationBarItemView: void setEnabled(boolean)
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: BottomSheetBehavior$SavedState(android.os.Parcelable,com.google.android.material.bottomsheet.BottomSheetBehavior)
com.google.android.datatransport.cct.internal.QosTier: QosTier(java.lang.String,int,int)
org.simpleframework.xml.stream.Formatter: void data(java.lang.String)
com.caij.puremusic.db.model.SongQueries$GetSongBySourceQuery: long getSourceId()
org.jaudiotagger.utils.tree.DefaultTreeModel: void fireTreeNodesChanged(java.lang.Object,java.lang.Object[],int[],java.lang.Object[])
com.umeng.commonsdk.framework.UMEnvelopeBuild: java.lang.String imprintProperty(android.content.Context,java.lang.String,java.lang.String)
org.jaudiotagger.utils.tree.TreeModelListener: void treeNodesRemoved(org.jaudiotagger.utils.tree.TreeModelEvent)
org.jaudiotagger.audio.asf.io.ChunkHeaderReader: org.jaudiotagger.audio.asf.io.ChunkHeaderReader getInstance()
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
org.jaudiotagger.audio.exceptions.CannotReadVideoException: CannotReadVideoException(java.lang.String,java.lang.Throwable)
com.caij.puremusic.db.model.ServerArtistCoverQueries$getById$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(android.graphics.drawable.Drawable)
org.jaudiotagger.tag.id3.framebody.FrameBodyTDAT: java.lang.String getIdentifier()
com.caij.puremusic.drive.model.AlbumList: java.util.List component1()
com.umeng.commonsdk.statistics.internal.c: android.content.Context a(com.umeng.commonsdk.statistics.internal.c)
com.caij.puremusic.preferences.DurationPreference: DurationPreference(android.content.Context)
com.tencent.bugly.proguard.u: com.tencent.bugly.proguard.u a()
org.simpleframework.xml.core.TextListLabel: org.simpleframework.xml.strategy.Type getDependent()
org.simpleframework.xml.core.MethodPart: java.lang.Class getType()
org.jaudiotagger.tag.id3.AbstractID3v2Frame: java.lang.String getId()
com.caij.puremusic.drive.model.AlbumListResponse: AlbumListResponse()
com.umeng.analytics.pro.ci: void c()
com.caij.puremusic.drive.model.Directory$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
org.jaudiotagger.audio.ogg.util.OggPageHeader$PacketStartAndLength: void setStartPosition(int)
com.caij.puremusic.db.model.AlbumQueries$SearchAlbumsByNameQuery: AlbumQueries$SearchAlbumsByNameQuery(com.caij.puremusic.db.model.AlbumQueries,java.lang.String,kotlin.jvm.functions.Function1)
androidx.constraintlayout.widget.Constraints: androidx.constraintlayout.widget.ConstraintSet getConstraintSet()
com.caij.puremusic.db.model.FolderQueries$insertFolder$1: FolderQueries$insertFolder$1(com.caij.puremusic.db.model.Folder,com.caij.puremusic.db.model.FolderQueries)
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: int getMinBitrate()
org.jaudiotagger.tag.lyrics3.Lyrics3v2Field: Lyrics3v2Field(org.jaudiotagger.tag.lyrics3.AbstractLyrics3v2FieldFrameBody)
com.caij.puremusic.db.model.PlaylistEntityQueries$searchPlaylistByName$2: PlaylistEntityQueries$searchPlaylistByName$2()
org.jaudiotagger.audio.generic.AbstractTag: org.jaudiotagger.tag.TagField getFirstField(org.jaudiotagger.tag.FieldKey)
com.tencent.mm.opensdk.modelpay.WXJointPay$JointPayReq: void toBundle(android.os.Bundle)
androidx.core.app.RemoteInput$Api20Impl: android.os.Bundle getResultsFromIntent(android.content.Intent)
com.tencent.mm.opensdk.modelbiz.WXChannelOpenLive$Resp: WXChannelOpenLive$Resp(android.os.Bundle)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyIMG: FieldFrameBodyIMG(org.jaudiotagger.tag.datatype.Lyrics3Image)
com.umeng.analytics.pro.o$d: o$d(java.lang.String,java.util.Map,java.lang.String,long)
org.simpleframework.xml.core.Model: org.simpleframework.xml.core.Label getText()
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse: void write$Self(com.caij.puremusic.drive.model.JellyfinPlaylistsResponse,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
androidx.fragment.app.Fragment: java.util.ArrayList getSharedElementTargetNames()
org.simpleframework.xml.stream.EventAttribute: java.lang.String getReference()
com.tencent.mm.opensdk.modelmsg.SendAuth$Options: SendAuth$Options()
org.jaudiotagger.tag.TagOptionSingleton: void setWavOptions(org.jaudiotagger.audio.wav.WavOptions)
com.alipay.apmobilesecuritysdk.e.i: void b(java.lang.String)
com.umeng.analytics.process.c: com.umeng.analytics.process.c a(android.content.Context)
com.caij.puremusic.drive.model.Metadata: java.lang.String getType()
com.caij.puremusic.drive.model.Metadata$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.alipay.android.phone.mrpc.core.x: com.alipay.android.phone.mrpc.core.g a()
com.umeng.analytics.filter.EventList: void eventListChange()
com.caij.puremusic.db.model.HistoryEntity: java.lang.String toString()
org.repackage.com.vivo.identifier.IdentifierIdClient: org.repackage.com.vivo.identifier.DataBaseOperation e()
com.umeng.umzid.c: java.lang.String a(java.lang.String)
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler getInstance()
com.thegrizzlylabs.sardineandroid.model.Prop: com.thegrizzlylabs.sardineandroid.model.Supportedlock getSupportedlock()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State)
org.jaudiotagger.tag.id3.ID3v24Frame$StatusFlags: byte convertV3ToV4Flags(byte)
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
com.tencent.bugly.crashreport.CrashReport: void setIsAppForeground(android.content.Context,boolean)
org.jaudiotagger.audio.asf.data.AsfHeader: org.jaudiotagger.audio.asf.data.ContentDescription findContentDescription()
com.tencent.bugly.proguard.as: void a(java.util.List,boolean,long,java.lang.String,java.lang.String)
org.jaudiotagger.tag.id3.ID3v22Frame: boolean equals(java.lang.Object)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
com.umeng.commonsdk.statistics.b: int a(android.content.Context,com.umeng.commonsdk.statistics.idtracking.Envelope,java.lang.String,java.lang.String,java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyTIT3: FrameBodyTIT3(org.jaudiotagger.tag.id3.framebody.FrameBodyTIT3)
com.google.android.material.card.MaterialCardView: void setCardElevation(float)
org.simpleframework.xml.core.DetailScanner: org.simpleframework.xml.NamespaceList getNamespaceList()
com.alipay.apmobilesecuritysdk.otherid.UmidSdkWrapper: UmidSdkWrapper()
com.thegrizzlylabs.sardineandroid.model.Property$PropertyConverter: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object)
com.thegrizzlylabs.sardineandroid.model.Link: java.util.List getDst()
org.jaudiotagger.audio.asf.data.EncryptionChunk: void setLicenseURL(java.lang.String)
com.yalantis.ucrop.view.GestureCropImageView: float getDoubleTapTargetScale()
com.tencent.mmkv.MMKV: boolean isFileValid(java.lang.String,java.lang.String)
org.simpleframework.xml.core.Model: void validate(java.lang.Class)
org.simpleframework.xml.core.ElementMapUnionLabel: ElementMapUnionLabel(org.simpleframework.xml.core.Contact,org.simpleframework.xml.ElementMapUnion,org.simpleframework.xml.ElementMap,org.simpleframework.xml.stream.Format)
com.caij.puremusic.db.model.ArtistQueries$ArtistByIdQuery$execute$1: java.lang.Object invoke(java.lang.Object)
org.jcodec.containers.mp4.boxes.NodeBox: void findBox(org.jcodec.containers.mp4.boxes.Box,java.util.List,java.util.Collection)
com.thegrizzlylabs.sardineandroid.model.Resourcetype: com.thegrizzlylabs.sardineandroid.model.Principal getPrincipal()
androidx.core.view.ViewCompat$Api26Impl: boolean isKeyboardNavigationCluster(android.view.View)
com.caij.puremusic.drive.model.Collection: void write$Self(com.caij.puremusic.drive.model.Collection,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.caij.puremusic.preferences.BlacklistPreferenceDialog: BlacklistPreferenceDialog()
com.caij.puremusic.drive.model.JellyfinArtistResponse: int hashCode()
org.jaudiotagger.tag.images.AndroidArtwork: java.lang.String getDescription()
com.umeng.analytics.b: b(com.umeng.analytics.b$1)
org.jaudiotagger.tag.mp4.Mp4Tag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.mp4.Mp4FieldKey,java.lang.String)
me.tankery.lib.circularseekbar.CircularSeekBar: void setPointerAngle(float)
com.caij.puremusic.drive.model.AlbumResponse: AlbumResponse(com.caij.puremusic.drive.model.AlbumSubsonicResponse)
com.umeng.analytics.process.DBFileTraversalUtil: void traverseDBFiles(java.lang.String,com.umeng.commonsdk.utils.FileLockCallback,com.umeng.analytics.process.DBFileTraversalUtil$a)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: int getScrimColor(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyINF: FieldFrameBodyINF()
org.simpleframework.xml.core.TextListLabel: java.lang.String toString()
com.caij.puremusic.drive.model.SubsonicResponse$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnClickListener(android.view.View$OnClickListener)
org.simpleframework.xml.core.ConversionInstance: java.lang.Object setInstance(java.lang.Object)
com.tencent.mm.opensdk.modelbiz.WXPayInsurance$Req: void fromBundle(android.os.Bundle)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
org.jaudiotagger.test.TestAudioTagger$DirFilter: boolean accept(java.io.File)
com.caij.puremusic.drive.model.Collection$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.google.common.reflect.Types$JavaVersion$1: java.lang.reflect.GenericArrayType newArrayType(java.lang.reflect.Type)
com.afollestad.materialdialogs.color.view.PreviewFrameView: boolean getSupportCustomAlpha()
org.jcodec.containers.mp4.boxes.SampleEntry: void setMediaType(java.lang.String)
androidx.core.view.AccessibilityDelegateCompat: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
com.umeng.commonsdk.statistics.proto.Response: com.umeng.commonsdk.statistics.proto.d getImprint()
org.jaudiotagger.tag.id3.framebody.FrameBodyPOPM: void parseString(java.lang.String)
com.umeng.analytics.pro.bz: bz()
org.jaudiotagger.utils.IntArrayList: int shift()
androidx.appcompat.app.AppCompatDelegate$Api33Impl: android.os.LocaleList localeManagerGetApplicationLocales(java.lang.Object)
org.simpleframework.xml.stream.InputElement: java.lang.String getPrefix()
com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)
org.jaudiotagger.tag.TagOptionSingleton: void setWavSaveOrder(org.jaudiotagger.audio.wav.WavSaveOrder)
com.google.android.material.appbar.CollapsingToolbarLayout: int getScrimVisibleHeightTrigger()
org.jaudiotagger.utils.tree.TreeModelEvent: java.lang.Object[] getPath()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
com.tencent.bugly.crashreport.CrashReport: void postCatchedException(java.lang.Throwable,java.lang.Thread,boolean)
org.jcodec.containers.mp4.boxes.MovieFragmentHeaderBox: void setSequenceNumber(int)
com.umeng.commonsdk.statistics.internal.a: com.umeng.commonsdk.statistics.internal.a a(android.content.Context)
org.simpleframework.xml.core.StructureBuilder: void union(org.simpleframework.xml.core.Contact,java.lang.annotation.Annotation,org.simpleframework.xml.core.LabelMap)
android.support.v4.media.RatingCompat$Api19Impl: boolean isThumbUp(android.media.Rating)
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getAppSHA1Key(android.content.Context)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] values()
com.caij.puremusic.drive.model.SongItem: java.util.List getAlbumArtists()
com.umeng.analytics.MobclickAgent: void setSessionContinueMillis(long)
org.repackage.com.vivo.identifier.BuildConfig: BuildConfig()
org.jaudiotagger.audio.asf.util.TagConverter: org.jaudiotagger.audio.asf.data.MetadataContainer[] distributeMetadata(org.jaudiotagger.tag.asf.AsfTag)
com.caij.puremusic.model.Data: int hashCode()
org.jaudiotagger.tag.id3.ID3v23Frame$StatusFlags: ID3v23Frame$StatusFlags(org.jaudiotagger.tag.id3.ID3v23Frame)
com.umeng.analytics.pro.s: void a(java.lang.String,java.util.Map,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
org.jaudiotagger.audio.aiff.AiffAudioHeader$Endian: AiffAudioHeader$Endian(java.lang.String,int)
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.field.Mp4FieldType getFieldType()
com.umeng.analytics.pro.l$1: void onActivityStarted(android.app.Activity)
com.umeng.analytics.pro.bv: bv(int)
com.tencent.bugly.proguard.as: com.tencent.bugly.proguard.ar b(android.database.Cursor)
com.tencent.mm.opensdk.modelmsg.WXEmojiObject: boolean checkArgs()
com.caij.puremusic.db.model.SongQueries$allSongs$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.tag.id3.ID3v22Tag: ID3v22Tag(java.nio.ByteBuffer,java.lang.String)
com.google.android.material.search.SearchView$Behavior: SearchView$Behavior()
org.jaudiotagger.tag.id3.valuepair.EventTimingTypes: EventTimingTypes()
com.google.android.material.navigation.NavigationBarItemView: void setChecked(boolean)
com.tencent.bugly.proguard.bn: void a(com.tencent.bugly.proguard.k)
org.simpleframework.xml.core.ElementMapParameter: boolean isRequired()
org.simpleframework.xml.core.Decorator: void decorate(org.simpleframework.xml.stream.OutputNode)
org.simpleframework.xml.core.Persister: Persister()
org.jaudiotagger.audio.generic.AbstractTag: boolean isEmpty()
com.google.common.base.Function: boolean equals(java.lang.Object)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: java.util.List list(java.lang.String)
org.jaudiotagger.audio.asf.data.MetadataDescriptor: java.math.BigInteger asNumber()
org.jaudiotagger.tag.id3.AbstractID3v2Tag$1: java.lang.Object next()
com.tencent.bugly.crashreport.CrashReport: void setDeviceId(android.content.Context,java.lang.String)
com.caij.puremusic.db.model.PlaylistEntityQueries$PlaylistByNameQuery: java.lang.String toString()
com.google.android.material.button.MaterialButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.tencent.mm.opensdk.modelbiz.WXChannelShareVideo$Resp: boolean checkArgs()
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
org.simpleframework.xml.transform.ArrayTransform: java.lang.Object read(java.lang.String[],int)
org.simpleframework.xml.core.TextParameter: java.lang.String getName()
org.jaudiotagger.tag.datatype.StringFixedLength: boolean equals(java.lang.Object)
com.umeng.analytics.pro.o: o(com.umeng.analytics.pro.o$1)
com.google.android.material.appbar.AppBarLayout: int getPendingAction()
org.jaudiotagger.audio.mp3.MPEGFrameHeader: MPEGFrameHeader()
app.cash.sqldelight.BaseTransacterImpl: void notifyQueries(int,kotlin.jvm.functions.Function1)
org.simpleframework.xml.stream.Format: org.simpleframework.xml.stream.Verbosity getVerbosity()
org.simpleframework.xml.core.ElementListLabel: org.simpleframework.xml.core.Contact getContact()
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
com.caij.puremusic.drive.model.User$Companion: kotlinx.serialization.KSerializer serializer()
com.umeng.commonsdk.statistics.common.c: void a()
org.simpleframework.xml.core.Context: boolean isPrimitive(java.lang.Class)
com.caij.puremusic.db.model.AlbumQueries$clear$1: void invoke(kotlin.jvm.functions.Function1)
com.caij.puremusic.util.theme.ThemeMode: com.caij.puremusic.util.theme.ThemeMode valueOf(java.lang.String)
androidx.appcompat.view.WindowCallbackWrapper$Api24Impl: void onProvideKeyboardShortcuts(android.view.Window$Callback,java.util.List,android.view.Menu,int)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$BreadthFirstEnumeration: boolean hasMoreElements()
com.umeng.analytics.pro.bu: long x()
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollX(android.view.accessibility.AccessibilityRecord)
com.umeng.commonsdk.internal.c: void c()
org.jaudiotagger.utils.tree.DefaultTreeModel: void removeTreeModelListener(org.jaudiotagger.utils.tree.TreeModelListener)
org.simpleframework.xml.NamespaceList: org.simpleframework.xml.Namespace[] value()
org.jaudiotagger.tag.reference.ISOScript$Script: java.lang.String getDescription()
org.simpleframework.xml.ElementArray: java.lang.String entry()
com.caij.puremusic.db.model.Folder: java.lang.String component5()
com.tencent.bugly.crashreport.CrashReport: void setDeviceModel(android.content.Context,java.lang.String)
org.jaudiotagger.audio.AudioFileIO: org.jaudiotagger.audio.AudioFile readFileAs(java.io.File,java.lang.String)
org.simpleframework.xml.stream.OutputAttribute: org.simpleframework.xml.stream.Node getParent()
org.jaudiotagger.tag.mp4.field.Mp4TagCoverField: org.jaudiotagger.tag.mp4.field.Mp4FieldType getFieldType()
org.simpleframework.xml.core.StructureBuilder: boolean isEmpty()
com.caij.puremusic.drive.model.SubsonicSearchResponse: java.lang.String component2()
com.caij.puremusic.db.model.SongEntityQueries: app.cash.sqldelight.Query getSongEntity(long,long)
com.caij.puremusic.db.model.SongEntityQueries: SongEntityQueries(app.cash.sqldelight.db.SqlDriver)
com.alipay.apmobilesecuritysdk.e.f: void a(java.lang.String)
com.tencent.bugly.proguard.l: void a(long,int)
com.caij.puremusic.network.model.LastFmAlbum: com.caij.puremusic.network.model.LastFmAlbum$Album getAlbum()
org.simpleframework.xml.core.SignatureCreator: org.simpleframework.xml.core.Signature getSignature()
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: void move(java.lang.String,java.lang.String,boolean,java.lang.String)
com.umeng.analytics.pro.an: void i(boolean)
com.google.android.material.navigation.NavigationBarItemView: void setItemPosition(int)
org.simpleframework.xml.stream.InputNode: org.simpleframework.xml.stream.Position getPosition()
com.umeng.commonsdk.BuildConfig: BuildConfig()
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query getArtistSongCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.umeng.commonsdk.stateless.d: byte[] b(byte[])
com.google.android.material.card.MaterialCardView: int getContentPaddingRight()
org.simpleframework.xml.core.PrimitiveList: java.lang.Object read(org.simpleframework.xml.stream.InputNode)
com.caij.puremusic.db.model.ServerSongCoverQueries$GetByIdQuery: java.lang.String getId()
com.thegrizzlylabs.sardineandroid.Sardine: java.lang.String lock(java.lang.String,int)
com.caij.puremusic.db.model.HistoryEntityQueries$insert$1: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.drive.model.OneDriveFolder: com.caij.puremusic.drive.model.OneDriveFolder copy$default(com.caij.puremusic.drive.model.OneDriveFolder,int,int,java.lang.Object)
com.caij.puremusic.drive.model.Part$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.umeng.commonsdk.utils.b: com.umeng.commonsdk.utils.b a()
org.jaudiotagger.audio.mp4.Mp4TagWriter: void write(org.jaudiotagger.audio.AudioFile,java.io.RandomAccessFile,java.io.RandomAccessFile)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyNumberTotal: java.lang.String getTotalAsText()
org.jaudiotagger.audio.generic.GenericAudioHeader: boolean isLossless()
com.thegrizzlylabs.sardineandroid.DavResource: java.util.Map getCustomProps()
com.google.android.material.textfield.TextInputLayout: int getCounterMaxLength()
org.jaudiotagger.audio.asf.data.Chunk: java.lang.String toString()
com.thegrizzlylabs.sardineandroid.util.EntityWithAnyElementConverter: java.util.Map getEntityFields()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
org.simpleframework.xml.stream.NodeMap: org.simpleframework.xml.stream.Node remove(java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconTintResource(int)
com.caij.puremusic.drive.model.PlexAlbumsResponse$Companion: kotlinx.serialization.KSerializer serializer()
com.caij.puremusic.activities.tageditor.SongTagEditorActivity: SongTagEditorActivity()
com.google.android.material.slider.BaseSlider: void setValuesInternal(java.util.ArrayList)
com.tencent.bugly.crashreport.CrashReport: void setHandleNativeCrashInJava(boolean)
com.google.android.material.bottomsheet.BottomSheetDialog$2: BottomSheetDialog$2(com.google.android.material.bottomsheet.BottomSheetDialog)
me.tankery.lib.circularseekbar.CircularSeekBar: void setPointerHaloColor(int)
com.caij.puremusic.drive.model.JellyfinLoginResponse$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.tencent.bugly.proguard.o: void onDbCreate(android.database.sqlite.SQLiteDatabase)
com.caij.puremusic.drive.model.SongItem: long getRunTimeTicks()
com.caij.puremusic.model.PlaylistWrapper: com.caij.puremusic.model.PlaylistWrapper copy(com.caij.puremusic.db.model.PlaylistEntity,int,com.caij.puremusic.db.model.Song)
com.caij.puremusic.db.model.AlbumQueries$deleteAlbumById$2: AlbumQueries$deleteAlbumById$2()
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgram$Req: WXPreloadMiniProgram$Req()
com.google.android.exoplayer2.drm.FrameworkMediaDrm$Api31: void setLogSessionIdOnMediaDrmSession(android.media.MediaDrm,byte[],com.google.android.exoplayer2.analytics.PlayerId)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
org.jaudiotagger.tag.datatype.AbstractStringStringValuePair: AbstractStringStringValuePair()
code.name.monkey.appthemehelper.common.prefs.supportv7.ATEListPreference: ATEListPreference(android.content.Context,android.util.AttributeSet,int,int)
org.simpleframework.xml.core.SetPart: org.simpleframework.xml.core.MethodType getMethodType()
com.caij.puremusic.drive.model.OneDriveFileResponse$Companion: OneDriveFileResponse$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.umeng.commonsdk.utils.UMUtils: void saveSDKComponent()
com.umeng.commonsdk.statistics.proto.c$e: c$e(java.lang.String,int,short,java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: java.lang.String getYear()
com.tencent.mm.opensdk.modelmsg.WXEmojiPageSharedObject: WXEmojiPageSharedObject(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)
org.simpleframework.xml.core.Support: boolean valid(java.lang.Class)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
org.jaudiotagger.tag.Tag: void deleteField(org.jaudiotagger.tag.FieldKey)
com.caij.puremusic.drive.model.Part: int getId()
org.simpleframework.xml.core.GroupExtractor: boolean isTextList()
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.tencent.bugly.proguard.e: void c()
com.caij.puremusic.drive.model.SubsonicSearchListResponse$Companion: SubsonicSearchListResponse$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Object,java.io.File,boolean)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getParentFragment()
org.simpleframework.xml.transform.FloatTransform: java.lang.Float read(java.lang.String)
com.caij.puremusic.drive.model.AMetadata: java.lang.String component4()
com.google.android.material.bottomsheet.BottomSheetBehavior: void disableShapeAnimations()
androidx.constraintlayout.helper.widget.Flow: void setWrapMode(int)
com.caij.puremusic.drive.model.OneDriveFileResponse: com.caij.puremusic.drive.model.OneDriveFileResponse copy(java.lang.String,int,java.util.List)
org.simpleframework.xml.stream.PrefixResolver: java.lang.String resolveReference(java.lang.String)
androidx.customview.widget.ViewDragHelper$Callback: int clampViewPositionHorizontal(android.view.View,int,int)
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: void setShouldHandleInJava(boolean)
com.umeng.analytics.pro.bo: void q()
org.jaudiotagger.tag.images.AndroidArtwork: void setHeight(int)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyEAR: java.lang.String getArtist()
com.tencent.bugly.proguard.af: af(android.content.Context)
com.caij.puremusic.drive.model.ADriveItem: java.lang.String component6()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
com.bumptech.glide.load.engine.DecodeJob$Stage: DecodeJob$Stage(java.lang.String,int)
com.caij.puremusic.drive.model.DropboxDriveFileResponse: java.util.List component3()
org.jaudiotagger.tag.datatype.Lyrics3Image: org.jaudiotagger.tag.datatype.Lyrics3TimeStamp getTimeStamp()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.caij.puremusic.drive.model.PlayListSubsonicResponse$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.thegrizzlylabs.sardineandroid.model.Prop: com.thegrizzlylabs.sardineandroid.model.Group getGroup()
com.caij.puremusic.drive.model.DropboxDriveFileResponse: DropboxDriveFileResponse(java.lang.String,boolean,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.caij.puremusic.fragments.player.classic.ClassicPlayerFragment: ClassicPlayerFragment()
org.simpleframework.xml.core.Traverser: org.simpleframework.xml.strategy.Type getType(java.lang.Class)
com.umeng.analytics.pro.aw$a: aw$a(com.umeng.analytics.pro.aw$1)
org.simpleframework.xml.core.Variable: org.simpleframework.xml.core.Decorator getDecorator()
com.tencent.mm.opensdk.modelmsg.WXEnterpriseCardObject: void unserialize(android.os.Bundle)
org.jaudiotagger.tag.id3.ID3TextEncodingConversion: ID3TextEncodingConversion()
com.umeng.analytics.process.UMProcessDBHelper: boolean processIsService(android.content.Context)
com.caij.puremusic.db.model.SongQueries$FirstSongByAlbumIdQuery: SongQueries$FirstSongByAlbumIdQuery(com.caij.puremusic.db.model.SongQueries,long,int,kotlin.jvm.functions.Function1)
org.jaudiotagger.tag.datatype.SynchronisedTempoCode: SynchronisedTempoCode(org.jaudiotagger.tag.datatype.SynchronisedTempoCode)
com.caij.puremusic.model.DriveFileParcelable: long component4()
com.caij.puremusic.db.model.FolderQueries$insertFolder$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.jcodec.containers.mp4.boxes.TrunBox: boolean isSampleCompositionOffsetAvailable()
com.caij.puremusic.model.CategoryInfo: com.caij.puremusic.model.CategoryInfo copy(int,boolean)
org.jaudiotagger.audio.generic.Utils: boolean copy(java.io.File,java.io.File)
com.caij.puremusic.drive.model.OneDriveItem: java.lang.String getWebUrl()
com.tencent.bugly.proguard.aa: void E()
com.google.android.material.internal.ForegroundLinearLayout: int getForegroundGravity()
com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleMarginBottom(int)
com.umeng.analytics.pro.bu: void B()
com.caij.puremusic.db.model.SongQueries$SongsByTitleQuery: SongQueries$SongsByTitleQuery(com.caij.puremusic.db.model.SongQueries,java.lang.String,kotlin.jvm.functions.Function1)
org.jaudiotagger.tag.lyrics3.Lyrics3v1Iterator: java.lang.Object next()
com.caij.puremusic.drive.model.PlaylistsMediaContainer: java.util.List getMetadata()
com.caij.puremusic.db.model.SongQueries$songsByNameArtist$2: SongQueries$songsByNameArtist$2()
org.simpleframework.xml.core.ElementLabel: java.lang.String getOverride()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataApplication: int getLength()
org.simpleframework.xml.ElementMapUnion: org.simpleframework.xml.ElementMap[] value()
androidx.core.view.ViewCompat$Api15Impl: boolean hasOnClickListeners(android.view.View)
io.ktor.util.date.Month: io.ktor.util.date.Month valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: void setAllCaps(boolean)
org.jaudiotagger.audio.mp4.Flatten: int calcSpaceReq(org.jcodec.containers.mp4.boxes.MovieBox)
okhttp3.Protocol: java.lang.String toString()
kotlin.collections.EmptySet: EmptySet()
com.caij.puremusic.db.model.SongQueries$SongsByArtistIdWithLikeQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
org.jcodec.containers.mp4.boxes.AudioSampleEntry: short getVersion()
org.simpleframework.xml.core.Traverser: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.lang.Class,java.lang.Object)
org.simpleframework.xml.core.GroupExtractor: void extract(org.simpleframework.xml.core.Extractor,java.lang.annotation.Annotation)
com.thegrizzlylabs.sardineandroid.model.Principal: com.thegrizzlylabs.sardineandroid.model.All getAll()
com.google.common.hash.Hashing$ChecksumType: Hashing$ChecksumType(java.lang.String,int,java.lang.String,com.google.common.hash.Hashing$1)
org.jaudiotagger.audio.asf.data.MetadataContainer: org.jaudiotagger.audio.asf.data.ContainerType getContainerType()
org.simpleframework.xml.core.LabelKey: boolean equals(org.simpleframework.xml.core.LabelKey)
com.umeng.commonsdk.statistics.proto.Response$d: Response$d()
org.jaudiotagger.tag.mp4.Mp4FieldKey: Mp4FieldKey(java.lang.String,int,java.lang.String,java.lang.String,org.jaudiotagger.tag.mp4.field.Mp4FieldType)
org.simpleframework.xml.core.Context: boolean isFloat(org.simpleframework.xml.strategy.Type)
org.simpleframework.xml.core.Expression: java.lang.String getPath()
com.thegrizzlylabs.sardineandroid.model.Owner: void setUnauthenticated(com.thegrizzlylabs.sardineandroid.model.Unauthenticated)
com.umeng.analytics.pro.bo: void a(com.umeng.analytics.pro.by)
org.simpleframework.xml.transform.GregorianCalendarTransform: GregorianCalendarTransform()
com.google.android.material.bottomsheet.BottomSheetBehavior$5: boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments)
com.thegrizzlylabs.sardineandroid.Sardine: void put(java.lang.String,byte[],java.lang.String)
org.jaudiotagger.audio.asf.io.CountingInputStream: void bytesRead(long)
com.umeng.commonsdk.statistics.proto.c$d: com.umeng.commonsdk.statistics.proto.c$c a()
org.jaudiotagger.audio.mp3.VbriFrame: java.lang.String getEncoder()
androidx.fragment.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)
com.caij.puremusic.network.model.Artist: java.lang.String component2()
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: void testNativeCrash(boolean,boolean,boolean)
org.simpleframework.xml.core.FieldContact: java.lang.String toString()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
com.caij.puremusic.db.model.SongEntityQueries$GetPlayListSongCountQuery$execute$1: SongEntityQueries$GetPlayListSongCountQuery$execute$1(com.caij.puremusic.db.model.SongEntityQueries$GetPlayListSongCountQuery)
org.simpleframework.xml.core.SessionManager$Reference: org.simpleframework.xml.core.Session get()
com.caij.puremusic.db.model.SongQueries$songsByAlum$2: SongQueries$songsByAlum$2()
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void setLocales(android.content.res.Configuration,androidx.core.os.LocaleListCompat)
com.caij.puremusic.network.DeezerService: retrofit2.Call getArtistImage(java.lang.String)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: java.lang.String getDescription()
com.google.android.exoplayer2.drm.DrmUtil$Api21: boolean isMediaDrmStateException(java.lang.Throwable)
org.simpleframework.xml.core.ElementListUnionLabel: boolean isCollection()
me.zhanghai.android.fastscroll.FastScrollWebView: me.zhanghai.android.fastscroll.FastScroller$ViewHelper getViewHelper()
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1: SafeCollectorKt$emitFun$1()
com.umeng.common.b: void a(int)
org.koin.core.logger.Level: org.koin.core.logger.Level[] values()
com.tencent.bugly.proguard.m: void a(com.tencent.bugly.proguard.k)
org.jcodec.containers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox: org.jcodec.containers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox$Factory copy(org.jcodec.containers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox)
org.jcodec.containers.mp4.boxes.MetaValue: double getFloat()
org.json.alipay.b: java.lang.String toString()
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
org.jaudiotagger.tag.datatype.AbstractString: AbstractString(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody)
com.umeng.analytics.pro.g: android.database.sqlite.SQLiteDatabase a()
com.caij.puremusic.drive.model.Collection$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
me.tankery.lib.circularseekbar.CircularSeekBar: float getEndAngle()
com.tencent.bugly.proguard.k: k(byte[])
com.tencent.bugly.proguard.ak: java.util.concurrent.atomic.AtomicInteger d()
com.umeng.analytics.pro.ay: void a(com.umeng.analytics.pro.av,java.lang.String)
org.jaudiotagger.tag.wav.WavTag: void setIncorrectlyAlignedTag(boolean)
com.caij.puremusic.model.AlbumWithCount: int hashCode()
org.jaudiotagger.tag.mp4.Mp4Tag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
com.alipay.apmobilesecuritysdk.b.a: java.lang.String c()
org.simpleframework.xml.core.ArrayInstance: java.lang.Object setInstance(java.lang.Object)
org.jaudiotagger.audio.mp3.MP3File: MP3File(java.io.File)
com.caij.puremusic.drive.model.AlbumItem: java.lang.String getAlbumArtist()
org.jaudiotagger.tag.id3.framebody.FrameBodyUnsupported: java.lang.String getIdentifier()
com.tencent.bugly.crashreport.CrashReport: void setHttpProxy(java.lang.String,int)
com.caij.puremusic.drive.model.OneDriveFile: java.lang.String getMimeType()
com.umeng.commonsdk.utils.UMUtils: java.lang.String getAppVersionCode(android.content.Context)
com.caij.puremusic.drive.model.SubPlayList$$serializer: SubPlayList$$serializer()
org.simpleframework.xml.util.Cache: java.lang.Object fetch(java.lang.Object)
org.simpleframework.xml.stream.HyphenStyle: void setElement(java.lang.String,java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyPOPM: FrameBodyPOPM(java.nio.ByteBuffer,int)
com.google.android.gms.internal.play_billing.zzbt: int zza()
com.caij.puremusic.drive.model.ParentReference: java.lang.String component1()
me.tankery.lib.circularseekbar.CircularSeekBar: int getPointerAlpha()
com.caij.puremusic.drive.model.PlaylistsMediaContainer$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.audio.mp3.MPEGFrameHeader: boolean isPrivate()
org.simpleframework.xml.stream.NodeWriter: void commit(org.simpleframework.xml.stream.OutputNode)
org.jaudiotagger.tag.id3.framebody.FrameBodyTIT2: java.lang.String getIdentifier()
org.jcodec.containers.mp4.boxes.EsdsBox$ES: int getTrackId()
org.jcodec.containers.mp4.boxes.DataBox: byte[] getData()
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query songsByArtist(java.lang.String,kotlin.jvm.functions.Function18)
org.jaudiotagger.tag.datatype.SynchronisedTempoCode: boolean equals(java.lang.Object)
com.caij.puremusic.model.Home: int getTitleRes()
org.jaudiotagger.tag.reference.ISOCountry$Country: java.lang.String access$000(org.jaudiotagger.tag.reference.ISOCountry$Country)
org.simpleframework.xml.stream.DocumentReader$Text: boolean isText()
org.simpleframework.xml.stream.OutputElement: java.lang.String getValue()
com.umeng.analytics.pro.ab: java.lang.String a(com.umeng.analytics.pro.ab,java.lang.String)
org.jaudiotagger.audio.ogg.OggVorbisTagWriter: void write(org.jaudiotagger.tag.Tag,java.io.RandomAccessFile,java.io.RandomAccessFile)
org.jaudiotagger.audio.flac.FlacFileWriter: void writeTag(org.jaudiotagger.tag.Tag,java.nio.channels.FileChannel,java.lang.String)
com.umeng.commonsdk.statistics.UMErrorCode: UMErrorCode()
org.jaudiotagger.logging.FileSystemMessage: org.jaudiotagger.logging.FileSystemMessage[] values()
org.jaudiotagger.tag.id3.ID3v11Tag: void deleteField(org.jaudiotagger.tag.FieldKey)
com.umeng.analytics.pro.bu: void a(short)
com.tencent.mm.opensdk.openapi.MMSharedPreferences: java.lang.Object getValue(java.lang.String)
javax.xml.namespace.NamespaceContext: java.lang.String getNamespaceURI(java.lang.String)
kotlinx.coroutines.internal.ThreadContextKt$findOne$1: ThreadContextKt$findOne$1()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
com.caij.puremusic.drive.model.AlbumArtist: int hashCode()
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse$Companion: JellyfinPlaylistsResponse$Companion()
org.jaudiotagger.tag.id3.AbstractID3v2Frame$EncodingFlags: AbstractID3v2Frame$EncodingFlags(org.jaudiotagger.tag.id3.AbstractID3v2Frame,byte)
com.caij.puremusic.drive.model.Part: java.lang.String getKey()
io.github.aakira.napier.LogLevel: io.github.aakira.napier.LogLevel[] $values()
io.ktor.util.date.WeekDay: io.ktor.util.date.WeekDay valueOf(java.lang.String)
org.jcodec.containers.mp4.boxes.ReverseDnsBox: org.jcodec.containers.mp4.boxes.ReverseDnsBox createReverseDnsBox(java.lang.String,java.lang.String,org.jcodec.containers.mp4.boxes.DataBox)
com.tencent.mm.opensdk.modelbiz.HandleScanResult$Req: boolean checkArgs()
com.google.android.material.materialswitch.MaterialSwitch: android.content.res.ColorStateList getThumbIconTintList()
com.caij.puremusic.db.model.ArtistQueries$deleteArtistById$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.jcodec.containers.mp4.boxes.TrunBox: int flagsGetSampleDependsOn(int)
org.jaudiotagger.tag.wav.WavTag: boolean isExistingId3Tag()
com.caij.puremusic.fragments.player.card.CardFragment: CardFragment()
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query songsByTitle(java.lang.String)
com.google.android.material.search.SearchView$TransitionState: com.google.android.material.search.SearchView$TransitionState valueOf(java.lang.String)
org.simpleframework.xml.stream.EventAttribute: java.lang.String getPrefix()
com.umeng.commonsdk.stateless.d: java.lang.String d(java.lang.String)
com.caij.puremusic.db.model.SongQueries$SongsByArtistIdWithLikeQuery: java.lang.String getArtistId__()
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: int getDefaultSampleFlags()
org.jcodec.containers.mp4.MP4Util$Movie: org.jcodec.containers.mp4.boxes.FileTypeBox getFtyp()
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: void addLockTokenToHeaders(okhttp3.Headers$Builder,java.lang.String,java.lang.String)
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$Req: boolean checkArgs()
org.jaudiotagger.tag.id3.AbstractID3v2Frame: AbstractID3v2Frame(org.jaudiotagger.tag.id3.AbstractID3v2Frame)
org.simpleframework.xml.stream.DocumentReader$End: DocumentReader$End(org.simpleframework.xml.stream.DocumentReader$1)
org.jcodec.containers.mp4.boxes.TrunBox: int flagsGetSampleHasRedundancy(int)
org.jaudiotagger.audio.generic.AudioFileWriter2: void checkCanWriteAndSize(org.jaudiotagger.audio.AudioFile,java.io.File)
org.jaudiotagger.tag.id3.framebody.FrameBodyXSOP: java.lang.String getIdentifier()
com.umeng.common.a: com.umeng.common.a a()
org.jaudiotagger.tag.datatype.Lyrics3Image: void readByteArray(byte[],int)
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: void setChannelMapFamily(byte)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockHeader: boolean isLastBlock()
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
org.simpleframework.xml.stream.InputNodeMap: org.simpleframework.xml.stream.Node getNode()
com.umeng.analytics.pro.bo: void a(com.umeng.analytics.pro.bq)
com.tencent.bugly.proguard.ap: java.lang.String a(java.util.Date)
com.caij.puremusic.drive.model.SearchResult3: com.caij.puremusic.drive.model.SearchResult3 copy$default(com.caij.puremusic.drive.model.SearchResult3,java.util.List,int,java.lang.Object)
com.tencent.bugly.crashreport.crash.jni.NativeExceptionHandler: boolean getAndUpdateAnrState()
io.ktor.util.date.WeekDay: java.lang.String getValue()
com.caij.puremusic.db.model.PlaybackSongQueries$getPlaybacksByType$1: PlaybackSongQueries$getPlaybacksByType$1(kotlin.jvm.functions.Function4,com.caij.puremusic.db.model.PlaybackSongQueries)
com.caij.puremusic.drive.model.JellyfinFolder$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
org.jaudiotagger.tag.wav.WavTag: boolean hasCommonFields()
com.caij.puremusic.drive.model.FMediaContainer: int component1()
org.simpleframework.xml.core.MethodPartFactory: java.lang.annotation.Annotation getAnnotation(java.lang.reflect.Method)
com.caij.puremusic.drive.model.PlayListSubsonicResponse: PlayListSubsonicResponse(java.lang.String,java.lang.String,com.caij.puremusic.drive.model.SubPlayList)
io.github.aakira.napier.LogLevel: io.github.aakira.napier.LogLevel[] values()
org.jaudiotagger.tag.asf.AsfTagBannerField: AsfTagBannerField(org.jaudiotagger.audio.asf.data.MetadataDescriptor)
org.simpleframework.xml.convert.RegistryBinder: RegistryBinder()
org.jaudiotagger.audio.aiff.chunk.SoundChunk: boolean readChunk()
org.jaudiotagger.tag.datatype.StringSizeTerminated: StringSizeTerminated(org.jaudiotagger.tag.datatype.StringSizeTerminated)
com.caij.puremusic.db.model.SongQueries$SongsByTitleQuery$execute$1: java.lang.Object invoke(java.lang.Object)
org.repackage.com.vivo.identifier.IdentifierIdClient: void g()
androidx.constraintlayout.motion.widget.MotionLayout: androidx.constraintlayout.motion.widget.MotionScene getScene()
com.caij.puremusic.drive.model.PlexUser$$serializer: com.caij.puremusic.drive.model.PlexUser deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.db.model.PlaylistEntityQueries$playlists$2: com.caij.puremusic.db.model.PlaylistEntity invoke(long,java.lang.String)
org.simpleframework.xml.core.PrimitiveList: PrimitiveList(org.simpleframework.xml.core.Context,org.simpleframework.xml.strategy.Type,org.simpleframework.xml.strategy.Type,java.lang.String)
androidx.core.view.ViewGroupCompat$Api21Impl: boolean isTransitionGroup(android.view.ViewGroup)
com.caij.puremusic.db.model.PlaylistEntityQueries$CheckPlaylistExistsQuery: PlaylistEntityQueries$CheckPlaylistExistsQuery(com.caij.puremusic.db.model.PlaylistEntityQueries,long,kotlin.jvm.functions.Function1)
org.jaudiotagger.tag.id3.framebody.FrameBodyCTOC: FrameBodyCTOC()
org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Class,java.lang.String,boolean)
androidx.core.view.ViewConfigurationCompat$Api28Impl: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration)
org.jaudiotagger.tag.id3.ID3v24Frames: org.jaudiotagger.tag.id3.ID3v24FieldKey getId3KeyFromGenericKey(org.jaudiotagger.tag.FieldKey)
org.jaudiotagger.audio.asf.io.AsfHeaderReader: org.jaudiotagger.audio.asf.data.ChunkContainer createContainer(long,java.math.BigInteger,java.io.InputStream)
org.jaudiotagger.tag.asf.AsfTag: boolean isAllowedEncoding(java.nio.charset.Charset)
org.simpleframework.xml.core.KeyBuilder: java.lang.Object getKey(org.simpleframework.xml.core.KeyBuilder$KeyType)
org.jaudiotagger.audio.asf.util.Utils: byte[] readBinary(java.io.InputStream,long)
com.caij.puremusic.drive.model.AlbumItem: java.lang.String component11()
org.simpleframework.xml.core.Parameter: boolean isRequired()
com.caij.puremusic.drive.model.GoogleDriveFile: java.lang.String getCreatedTime()
com.thegrizzlylabs.sardineandroid.util.SardineUtil: java.util.Map toQName(java.util.Map)
org.simpleframework.xml.core.GetPart: GetPart(org.simpleframework.xml.core.MethodName,java.lang.annotation.Annotation,java.lang.annotation.Annotation[])
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setEpicenterBounds(android.widget.PopupWindow,android.graphics.Rect)
com.caij.puremusic.model.UpdateInfo$1: java.lang.Object[] newArray(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyCRM: java.lang.String getIdentifier()
com.google.android.material.progressindicator.CircularProgressIndicator: int getIndicatorSize()
com.thegrizzlylabs.sardineandroid.model.Prop: void setQuotaAvailableBytes(com.thegrizzlylabs.sardineandroid.model.QuotaAvailableBytes)
com.umeng.analytics.b: com.umeng.analytics.b a()
org.simpleframework.xml.stream.OutputAttribute: void setMode(org.simpleframework.xml.stream.Mode)
org.jaudiotagger.tag.id3.ID3v22Tag: java.util.Comparator getPreferredFrameOrderComparator()
com.caij.puremusic.drive.model.Prop$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.caij.puremusic.drive.model.Media: Media(int,int,int,int,java.lang.String,java.lang.String,java.util.List)
com.google.android.material.chip.Chip: void setTextEndPaddingResource(int)
org.jcodec.containers.mp4.boxes.TrakBox: org.jcodec.containers.mp4.boxes.SampleEntry[] getSampleEntries()
com.caij.puremusic.drive.model.Location: java.lang.String getHref()
com.caij.puremusic.drive.model.ArtistItem$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.umeng.vt.diff.Channel: void loadConfig(android.content.Context)
org.jcodec.containers.mp4.boxes.EsdsBox$SL: void doWrite(java.nio.ByteBuffer)
com.google.android.exoplayer2.upstream.FileDataSource$Api21: boolean isPermissionError(java.lang.Throwable)
androidx.core.view.ViewCompat$Api16Impl: int getImportantForAccessibility(android.view.View)
com.caij.puremusic.db.model.PlaylistEntityQueries: app.cash.sqldelight.Query playlists(kotlin.jvm.functions.Function2)
org.simpleframework.xml.core.TreeModel: void validateElements(java.lang.Class)
com.umeng.commonsdk.UMConfigureImpl: void registerInterruptFlag()
org.jcodec.containers.mp4.boxes.TrackFragmentBox: int getTrackId()
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getDeviceType(android.content.Context)
com.tencent.mm.opensdk.modelpay.JumpToOfflinePay$Req: void fromBundle(android.os.Bundle)
com.caij.puremusic.db.model.PlaylistEntityQueries$playlistByName$2: PlaylistEntityQueries$playlistByName$2()
com.umeng.analytics.pro.ca: ca(com.umeng.analytics.pro.ci)
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage valueOf(java.lang.String)
org.jaudiotagger.tag.id3.ID3v23Tag: void createStructure()
com.caij.puremusic.views.insets.InsetsConstraintLayout$1$1: InsetsConstraintLayout$1$1()
org.simpleframework.xml.core.SignatureBuilder$ParameterTable: SignatureBuilder$ParameterTable()
org.jaudiotagger.audio.SupportedFileFormat: SupportedFileFormat(java.lang.String,int,java.lang.String,org.jaudiotagger.audio.SupportedFileFormat$1)
com.alipay.apmobilesecuritysdk.e.h: void a(android.content.Context,java.lang.String,java.lang.String)
org.jcodec.containers.mp4.boxes.TrackFragmentBox: TrackFragmentBox(org.jcodec.containers.mp4.boxes.Header)
org.simpleframework.xml.util.WeakCache$Segment: java.lang.Object fetch(java.lang.Object)
org.jcodec.containers.mp4.boxes.EsdsBox$DescriptorParser: org.jcodec.containers.mp4.boxes.EsdsBox$ES parseES(java.nio.ByteBuffer)
org.jaudiotagger.audio.asf.data.ContentBranding: java.lang.String getCopyRightURL()
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: void removeEmptyNativeRecordFiles()
com.tencent.bugly.proguard.as: java.util.List a(java.util.List)
com.tencent.mm.opensdk.modelmsg.LaunchFromWX$Req: boolean checkArgs()
org.jaudiotagger.tag.datatype.PartOfSet$PartOfSetValue: void resetValueFromCounts()
org.jaudiotagger.audio.asf.data.StreamChunk: void setTypeSpecificDataSize(long)
com.caij.puremusic.drive.model.Location$Companion: kotlinx.serialization.KSerializer serializer()
com.tencent.mm.opensdk.modelbiz.WXOpenCustomerServiceChat$Req: void toBundle(android.os.Bundle)
org.simpleframework.xml.core.Scanner: org.simpleframework.xml.Version getRevision()
org.jcodec.containers.mp4.boxes.MovieBox: org.jcodec.containers.mp4.boxes.TrakBox getVideoTrack()
com.google.android.material.bottomsheet.BottomSheetBehavior: void createMaterialShapeDrawableIfNeeded(android.content.Context)
com.umeng.tunnel.UMChannelAgent: void onDebugEvent(android.content.Context,java.lang.String,java.util.Map)
com.caij.puremusic.db.model.SongEntityQueries: app.cash.sqldelight.Query getPlaylistLastAddSong(long)
org.jcodec.containers.mp4.boxes.EsdsBox: void doWrite(java.nio.ByteBuffer)
com.umeng.analytics.pro.ci: void a(int)
com.caij.puremusic.db.model.ArtistQueries$ArtistByIdQuery$execute$1: ArtistQueries$ArtistByIdQuery$execute$1(com.caij.puremusic.db.model.ArtistQueries$ArtistByIdQuery)
org.jaudiotagger.audio.real.RealChunk: java.lang.String getId()
com.umeng.commonsdk.stateless.b: void e()
org.jcodec.containers.mp4.boxes.CompositionOffsetsBox: int estimateSize()
org.simpleframework.xml.stream.NodeException: NodeException(java.lang.String)
com.umeng.analytics.MobclickAgent: void setPageCollectionMode(com.umeng.analytics.MobclickAgent$PageMode)
com.umeng.commonsdk.statistics.proto.a: com.umeng.commonsdk.statistics.proto.a a(java.lang.String)
org.jaudiotagger.tag.id3.ID3v23Tag: byte getMajorVersion()
com.google.android.material.search.SearchView: float getOverlayElevation()
org.simpleframework.xml.stream.Format: Format(java.lang.String)
io.ktor.utils.io.ExceptionUtilsJvmKt$tryCopyException$5$1: ExceptionUtilsJvmKt$tryCopyException$5$1()
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
com.alipay.tscenter.biz.rpc.report.general.model.DataReportResult: DataReportResult()
org.jaudiotagger.tag.id3.framebody.FrameBodyTCON: FrameBodyTCON(org.jaudiotagger.tag.id3.framebody.FrameBodyTCON)
com.thegrizzlylabs.sardineandroid.impl.handler.ValidatingResponseHandler: void validateResponse(okhttp3.Response)
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
com.tencent.bugly.BuglyStrategy: boolean isBuglyLogUpload()
org.jcodec.containers.mp4.boxes.MetaBox: org.jcodec.containers.mp4.boxes.DataBox getDataBox(java.util.List)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable)
org.simpleframework.xml.core.VersionLabel: java.lang.annotation.Annotation getAnnotation()
org.simpleframework.xml.ElementMap: java.lang.String entry()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$Resp: void toBundle(android.os.Bundle)
org.simpleframework.xml.strategy.ReadGraph: ReadGraph(org.simpleframework.xml.strategy.Contract,org.simpleframework.xml.strategy.Loader)
org.simpleframework.xml.core.Support: org.simpleframework.xml.core.Scanner getScanner(java.lang.Class)
org.jaudiotagger.tag.id3.Id3FieldType: org.jaudiotagger.tag.id3.Id3FieldType valueOf(java.lang.String)
com.tencent.bugly.proguard.k: short[] e(int,boolean)
com.caij.puremusic.drive.model.Propstat$$serializer: Propstat$$serializer()
org.jaudiotagger.audio.mp3.MP3AudioHeader: void setMp3StartByte(long)
com.caij.puremusic.db.model.ArtistQueries: void insert(com.caij.puremusic.db.model.Artist)
org.simpleframework.xml.core.ObjectScanner: org.simpleframework.xml.core.Signature getSignature()
com.caij.puremusic.db.model.Song: int getSourceType()
com.google.android.material.bottomsheet.BottomSheetDialog$1: BottomSheetDialog$1(com.google.android.material.bottomsheet.BottomSheetDialog)
org.jaudiotagger.audio.mp4.Flatten: boolean setSampleProcessor(org.jcodec.containers.mp4.boxes.TrakBox,org.jaudiotagger.audio.mp4.Flatten$SampleProcessor)
org.jaudiotagger.audio.wav.WavInfoReader: void calculateTrackLength(org.jaudiotagger.audio.generic.GenericAudioHeader)
org.jaudiotagger.audio.SupportedFileFormat$9: org.jaudiotagger.tag.Tag createDefaultTag()
com.caij.puremusic.network.model.LastFmAlbum: void setAlbum(com.caij.puremusic.network.model.LastFmAlbum$Album)
org.simpleframework.xml.core.FieldScanner: boolean isTransient(java.lang.reflect.Field)
org.jaudiotagger.tag.datatype.NumberFixedLength: NumberFixedLength(org.jaudiotagger.tag.datatype.NumberFixedLength)
com.google.android.material.button.MaterialButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
org.jaudiotagger.tag.datatype.SynchronisedTempoCode: SynchronisedTempoCode(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody,int,long)
org.jaudiotagger.tag.reference.PerformerHelper: PerformerHelper()
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgramWithToken$Resp: int getType()
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$Req: SendMessageToWX$Req()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
com.afollestad.materialdialogs.internal.main.BaseSubLayout: com.afollestad.materialdialogs.MaterialDialog getDialog()
com.tencent.mmkv.MMKV: double decodeDouble(long,java.lang.String,double)
org.jcodec.containers.mp4.boxes.MetaValue: boolean isFloat()
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyTextInfo: java.lang.String getText()
com.tencent.bugly.proguard.i: com.tencent.bugly.proguard.i a(short[],java.lang.String)
com.caij.puremusic.util.theme.ThemeMode: com.caij.puremusic.util.theme.ThemeMode[] $values()
org.simpleframework.xml.stream.NamespaceMap: java.lang.String getPrefix(java.lang.String)
org.simpleframework.xml.core.GroupExtractor: org.simpleframework.xml.core.Label getLabel(java.lang.Class)
com.google.android.material.button.MaterialButton: void setStrokeColorResource(int)
com.umeng.analytics.pro.e$c: e$c()
com.tencent.mm.opensdk.modelbiz.JoinChatroom$Resp: JoinChatroom$Resp()
org.jaudiotagger.audio.ogg.OggVorbisCommentTagCreator: OggVorbisCommentTagCreator(byte[],byte[],boolean)
org.jcodec.containers.mp4.TimecodeBoxes: TimecodeBoxes()
com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level valueOf(java.lang.String)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: float getPlaybackSpeed(android.media.session.PlaybackState)
com.umeng.commonsdk.utils.a: boolean d()
com.thegrizzlylabs.sardineandroid.impl.handler.InputStreamResponseHandler: InputStreamResponseHandler()
com.caij.puremusic.drive.model.PlayLists: PlayLists(int,java.util.List,kotlinx.serialization.internal.SerializationConstructorMarker)
com.tencent.bugly.proguard.k: void b()
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: int getNumberOfValues()
com.caij.puremusic.model.DeezerResponse: int hashCode()
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$GetByIdQuery$execute$1: DriveFileDownUrlInfoQueries$GetByIdQuery$execute$1(com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$GetByIdQuery)
org.jaudiotagger.tag.id3.framebody.FrameBodyENCR: FrameBodyENCR(java.lang.String,byte,byte[])
androidx.preference.SeekBarPreference: SeekBarPreference(android.content.Context,android.util.AttributeSet,int)
com.tencent.mm.opensdk.openapi.IWXAPI: boolean registerApp(java.lang.String)
com.umeng.commonsdk.internal.d: org.json.JSONObject a()
androidx.core.view.ViewCompat$Api19Impl: int getAccessibilityLiveRegion(android.view.View)
com.caij.puremusic.db.model.SongEntityQueries$deletePlaylistSongs$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.caij.puremusic.drive.model.FMediaContainer$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.tencent.mm.opensdk.modelbiz.ChooseCardFromWXCardPackage$Resp: ChooseCardFromWXCardPackage$Resp()
com.caij.puremusic.db.model.SearchAlbumResultQueries$GetByIdQuery$execute$1: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.db.model.ServerSongCoverQueries: app.cash.sqldelight.Query getById(java.lang.String,kotlin.jvm.functions.Function3)
org.jcodec.containers.mp4.boxes.VideoMediaHeaderBox: int getGraphicsMode()
org.jaudiotagger.audio.asf.io.FullRequestInputStream: int read(byte[],int,int)
androidx.lifecycle.LifecycleCoroutineScope: LifecycleCoroutineScope()
com.google.android.gms.common.api.internal.zzd: zzd()
org.jaudiotagger.audio.asf.io.LanguageListReader: LanguageListReader()
com.umeng.commonsdk.statistics.idtracking.Envelope: void export(android.content.Context)
org.json.alipay.b: java.lang.String c(java.lang.String)
androidx.fragment.app.DialogFragment: boolean access$200(androidx.fragment.app.DialogFragment)
org.jaudiotagger.tag.id3.AbstractID3v1Tag: boolean seekForV1OrV11Tag(java.nio.ByteBuffer)
org.jaudiotagger.tag.id3.framebody.FrameBodyRVA2: FrameBodyRVA2()
com.umeng.analytics.pro.ao: com.umeng.analytics.pro.ao a(android.content.Context)
org.simpleframework.xml.core.Detail: org.simpleframework.xml.Root getRoot()
com.caij.puremusic.dialogs.CreatePlaylistDialog: CreatePlaylistDialog()
org.jcodec.containers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox: void parse(java.nio.ByteBuffer)
com.caij.puremusic.db.model.Song: long getId()
com.umeng.analytics.pro.bx: void a(com.umeng.analytics.pro.bu,byte)
com.umeng.commonsdk.statistics.proto.b: void c(boolean)
androidx.constraintlayout.motion.widget.MotionLayout: long getNanoTime()
com.umeng.commonsdk.statistics.proto.a: com.umeng.analytics.pro.bp q()
com.tencent.bugly.proguard.w: com.tencent.bugly.proguard.w a(android.content.Context,java.util.List)
com.alipay.android.phone.mrpc.core.o: void a(java.lang.String)
org.simpleframework.xml.core.Structure: org.simpleframework.xml.core.Instantiator getInstantiator()
org.jaudiotagger.tag.id3.framebody.FrameBodyPOSS: java.lang.String getIdentifier()
org.simpleframework.xml.transform.Transform: java.lang.String write(java.lang.Object)
com.caij.puremusic.db.model.SongQueries$GetArtistSongCountQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
org.jaudiotagger.audio.generic.AudioFileWriter: void transferNewFileToNewOriginalFile(java.io.File,java.io.File)
androidx.appcompat.widget.Toolbar: java.util.ArrayList getCurrentMenuItems()
androidx.fragment.app.Fragment: void onHiddenChanged(boolean)
com.caij.puremusic.drive.model.DavProperties: DavProperties(com.caij.puremusic.drive.model.Response)
org.jcodec.containers.mp4.boxes.TrackHeaderBox: TrackHeaderBox(org.jcodec.containers.mp4.boxes.Header)
com.google.android.material.bottomsheet.BottomSheetBehavior: void updateImportantForAccessibility(boolean)
org.jcodec.containers.mp4.boxes.AudioSampleEntry: org.jcodec.containers.mp4.boxes.AudioSampleEntry compressedAudioSampleEntry(java.lang.String,int,int,int,int,int,int,int)
com.umeng.analytics.pro.l: int e(com.umeng.analytics.pro.l)
com.tencent.mmkv.MMKVLogLevel: MMKVLogLevel(java.lang.String,int)
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setPanelSlideListener(androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener)
com.caij.puremusic.drive.model.MediaInfoWrapper: java.util.ArrayList getServerArtistCovers()
com.umeng.analytics.pro.l$a: l$a()
com.tencent.bugly.proguard.as: java.util.List c(java.util.List)
com.google.android.material.bottomsheet.BottomSheetDialogFragment: void dismissAfterAnimation()
com.umeng.commonsdk.statistics.idtracking.f: f(android.content.Context)
org.jaudiotagger.tag.id3.ID3v11Tag: void read(java.nio.ByteBuffer)
org.simpleframework.xml.core.NamespaceDecorator: void set(org.simpleframework.xml.Namespace)
org.simpleframework.xml.transform.FileTransform: java.lang.String write(java.lang.Object)
org.jaudiotagger.audio.real.RealChunk: boolean isCONT()
com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)
com.tencent.bugly.proguard.aa: long j()
com.caij.puremusic.drive.model.SearchResult3: com.caij.puremusic.drive.model.SearchResult3 copy(java.util.List)
org.jaudiotagger.audio.generic.Utils: byte[] toArray(java.nio.ByteBuffer)
com.thegrizzlylabs.sardineandroid.impl.BasicAuthenticator: BasicAuthenticator(java.lang.String,java.lang.String)
org.simpleframework.xml.core.ParameterFactory: org.simpleframework.xml.core.Parameter getInstance(java.lang.reflect.Constructor,java.lang.annotation.Annotation,java.lang.annotation.Annotation,int)
org.jaudiotagger.tag.asf.AsfTag: java.util.List getFields(org.jaudiotagger.tag.FieldKey)
com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)
org.jaudiotagger.tag.datatype.NumberHashMap: java.lang.String toString()
com.caij.puremusic.db.model.SongQueries$SongsByNameAlbumQuery: java.lang.String getValue()
com.google.android.material.textfield.TextInputLayout: void setSuffixTextAppearance(int)
org.simpleframework.xml.core.Scanner: org.simpleframework.xml.core.Function getCommit()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
androidx.appcompat.widget.AppCompatButton: void setEmojiCompatEnabled(boolean)
com.google.android.material.chip.Chip: float getTextStartPadding()
org.simpleframework.xml.core.ConstructorException: ConstructorException(java.lang.Throwable,java.lang.String,java.lang.Object[])
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHelperText()
com.caij.puremusic.db.model.ArtistQueries$insert$2: ArtistQueries$insert$2()
org.jaudiotagger.audio.aiff.AiffAudioHeader: org.jaudiotagger.audio.aiff.AiffType getFileType()
org.jaudiotagger.tag.mp4.Mp4FieldKey: java.lang.String getIssuer()
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleRoundedCornerRadius()
com.alipay.apmobilesecuritysdk.face.APSecuritySdk: java.lang.String getUtdid(android.content.Context)
com.bumptech.glide.Priority: com.bumptech.glide.Priority[] values()
org.simpleframework.xml.core.CacheLabel: java.lang.String getName()
org.jaudiotagger.audio.asf.io.ChunkContainerReader: org.jaudiotagger.audio.asf.data.Chunk read(org.jaudiotagger.audio.asf.data.GUID,java.io.InputStream,long)
com.caij.puremusic.drive.model.PlayListsSubsonicResponse: PlayListsSubsonicResponse(java.lang.String,java.lang.String,com.caij.puremusic.drive.model.PlayLists,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatToggleButton: void setFilters(android.text.InputFilter[])
org.jaudiotagger.audio.ogg.OggVorbisTagWriter: byte[] createSegmentTable(int,java.util.List)
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10$2: BaseWXApiImplV10$2(com.tencent.mm.opensdk.openapi.BaseWXApiImplV10)
com.google.common.hash.Hashing$ChecksumType$1: Hashing$ChecksumType$1(java.lang.String,int,java.lang.String)
com.tencent.bugly.proguard.c: c()
com.caij.puremusic.network.model.Artist: java.lang.String getUri()
com.alipay.android.phone.mrpc.core.b: void a(org.apache.http.client.HttpRequestRetryHandler)
com.caij.puremusic.db.model.Folder: int hashCode()
androidx.constraintlayout.motion.widget.MotionLayout: int[] getConstraintSetIds()
com.caij.puremusic.db.model.SongQueries$getSongBySource$1: java.lang.Object invoke(java.lang.Object)
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: boolean isShouldHandleInJava()
org.simpleframework.xml.Namespace: java.lang.String reference()
com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)
org.simpleframework.xml.core.AnnotationHandler: AnnotationHandler(java.lang.Class)
com.caij.puremusic.drive.model.SubsonicPlaylist: int getSongCount()
com.tencent.bugly.proguard.ao: void c(java.lang.String,java.lang.String,java.lang.String)
com.umeng.analytics.MobclickAgent: void setDebugMode(boolean)
com.google.android.material.bottomsheet.BottomSheetBehavior$4: void onViewPositionChanged(android.view.View,int,int,int,int)
nl.adaptivity.xmlutil.serialization.XmlExceptionsKt$candidateString$1: XmlExceptionsKt$candidateString$1()
com.umeng.commonsdk.statistics.common.MLog: void v(java.lang.String,java.lang.String,java.lang.Throwable)
com.tencent.mm.opensdk.modelmsg.WXStateJumpUrlInfo: int type()
com.thegrizzlylabs.sardineandroid.model.Limit: Limit()
org.jcodec.containers.mp4.boxes.SampleEntry: void doWrite(java.nio.ByteBuffer)
com.caij.puremusic.drive.model.User: boolean equals(java.lang.Object)
org.simpleframework.xml.core.Persister: Persister(org.simpleframework.xml.filter.Filter)
org.xmlpull.v1.XmlPullParser: java.lang.String getNamespacePrefix(int)
com.thegrizzlylabs.sardineandroid.model.Ace: com.thegrizzlylabs.sardineandroid.model.Principal getPrincipal()
com.umeng.commonsdk.statistics.proto.c: com.umeng.commonsdk.statistics.proto.c a(java.util.Map)
com.google.android.material.navigation.NavigationBarView: android.graphics.drawable.Drawable getItemBackground()
org.simpleframework.xml.transform.BigDecimalTransform: BigDecimalTransform()
org.jaudiotagger.audio.asf.data.VideoStreamChunk: void setPictureHeight(long)
org.simpleframework.xml.core.CompositeInlineMap: CompositeInlineMap(org.simpleframework.xml.core.Context,org.simpleframework.xml.core.Entry,org.simpleframework.xml.strategy.Type)
org.jaudiotagger.audio.wav.WavSaveOptions: WavSaveOptions(java.lang.String,int)
org.simpleframework.xml.core.MethodDetail: MethodDetail(java.lang.reflect.Method)
org.jaudiotagger.test.TestAudioTagger$DirFilter: TestAudioTagger$DirFilter(org.jaudiotagger.test.TestAudioTagger)
androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)
com.umeng.analytics.AnalyticsConfig: java.lang.String getSecretKey(android.content.Context)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: org.jaudiotagger.tag.TagField doCreateTagField(org.jaudiotagger.tag.id3.AbstractID3v2Tag$FrameAndSubId,java.lang.String[])
com.umeng.analytics.vshelper.b: void b(android.app.Activity,android.os.Bundle)
org.jaudiotagger.audio.flac.FlacTagWriter: void insertUsingChunks(java.lang.String,org.jaudiotagger.tag.Tag,java.nio.channels.FileChannel,org.jaudiotagger.audio.flac.FlacTagWriter$MetadataBlockInfo,org.jaudiotagger.audio.flac.FlacStreamReader,int,int)
com.google.android.material.bottomsheet.BottomSheetBehavior: float calculateSlideOffset()
com.umeng.analytics.pro.cg: boolean a()
org.jaudiotagger.audio.asf.data.ContainerType: boolean areInCorrectOrder(org.jaudiotagger.audio.asf.data.ContainerType,org.jaudiotagger.audio.asf.data.ContainerType)
androidx.media.app.NotificationCompat$Api15Impl: void setContentDescription(android.widget.RemoteViews,int,java.lang.CharSequence)
com.umeng.analytics.pro.ar: void d(android.app.Activity)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
org.jaudiotagger.audio.asf.data.AudioStreamChunk: void setCodecData(byte[])
org.simpleframework.xml.core.Introspector: java.lang.String getRoot(java.lang.Class,java.lang.Class)
com.google.android.material.navigation.NavigationBarItemView: void setItemPaddingTop(int)
com.caij.puremusic.model.smartplaylist.TopTracksPlaylist: java.util.List songs()
org.repackage.com.meizu.flyme.openidsdk.b: org.repackage.com.meizu.flyme.openidsdk.b a()
com.tencent.bugly.proguard.ag$c: ag$c()
org.jaudiotagger.tag.id3.framebody.AbstractID3v2FrameBody: void setSize(int)
com.yalantis.ucrop.view.OverlayView: void setCropGridRowCount(int)
com.google.android.material.slider.Slider: int getLabelBehavior()
com.umeng.analytics.MobclickAgent: void init(android.content.Context)
com.caij.puremusic.drive.model.SongItem: java.lang.String getType()
androidx.activity.ComponentDialog: void initViewTreeOwners()
org.jaudiotagger.audio.asf.data.AsfHeader: java.lang.String prettyPrint(java.lang.String)
org.simpleframework.xml.core.Model: org.simpleframework.xml.core.Model lookup(org.simpleframework.xml.core.Expression)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
org.jcodec.containers.mp4.boxes.EsdsBox$NodeDescriptor: java.util.Collection getChildren()
com.caij.puremusic.model.AlbumWithCount: int getCount()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleX(float)
org.simpleframework.xml.core.Detail: boolean isRequired()
com.caij.puremusic.drive.model.Metadata: java.util.List getMedia()
com.caij.puremusic.network.model.LastFmTrack$Track$Artist: LastFmTrack$Track$Artist()
com.umeng.commonsdk.utils.c: int a(android.content.Context)
com.google.android.material.bottomappbar.BottomAppBar: void setNavigationIconTint(int)
org.simpleframework.xml.core.Source: org.simpleframework.xml.core.Decorator getDecorator(java.lang.Class)
com.afollestad.materialdialogs.LayoutMode: com.afollestad.materialdialogs.LayoutMode[] values()
com.umeng.tunnel.UMChannelAgent: boolean init()
com.caij.puremusic.drive.model.ArtistItem: java.util.List component9()
org.simpleframework.xml.core.ModelAssembler: ModelAssembler(org.simpleframework.xml.core.ExpressionBuilder,org.simpleframework.xml.core.Detail,org.simpleframework.xml.core.Support)
com.caij.puremusic.views.BaselineGridTextView: float getLineHeightHint()
org.repackage.com.miui.deviceid.IdentifierManager: java.lang.String a(android.content.Context)
org.jaudiotagger.audio.mp3.MP3AudioHeader: MP3AudioHeader()
com.umeng.commonsdk.statistics.proto.c: c()
org.jaudiotagger.audio.mp4.RelocateMP4Editor: void modifyOrRelocate(java.nio.channels.FileChannel,org.jcodec.containers.mp4.boxes.MovieBox)
com.tencent.mm.opensdk.openapi.IWXAPI: boolean isWXAppInstalled()
com.caij.puremusic.db.model.SongQueries$GetAlbumSongCountQuery$execute$1: SongQueries$GetAlbumSongCountQuery$execute$1(com.caij.puremusic.db.model.SongQueries$GetAlbumSongCountQuery)
com.thegrizzlylabs.sardineandroid.model.Activelock: void setLocktoken(com.thegrizzlylabs.sardineandroid.model.Locktoken)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void delete(java.io.RandomAccessFile)
com.tencent.bugly.proguard.ao$a: ao$a(java.lang.String)
com.thegrizzlylabs.sardineandroid.model.Prop: void setGetcontenttype(java.lang.String)
com.caij.puremusic.db.model.SongQueries$insertOrReplace$1: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.db.model.HistoryEntityQueries$clear$1: HistoryEntityQueries$clear$1()
com.thegrizzlylabs.sardineandroid.DavPrincipal$PrincipalType: com.thegrizzlylabs.sardineandroid.DavPrincipal$PrincipalType valueOf(java.lang.String)
org.jaudiotagger.tag.id3.ID3Unsynchronization: ID3Unsynchronization()
org.jcodec.containers.mp4.boxes.ChannelBox: org.jcodec.containers.mp4.boxes.ChannelBox$ChannelDescription[] getDescriptions()
com.alipay.apmobilesecuritysdk.a.a: boolean a()
androidx.constraintlayout.widget.Guideline: Guideline(android.content.Context,android.util.AttributeSet)
org.simpleframework.xml.core.Composite: void readElements(org.simpleframework.xml.stream.InputNode,java.lang.Object,org.simpleframework.xml.core.Section)
org.simpleframework.xml.stream.EventElement: boolean isEnd()
com.tencent.bugly.proguard.ap: java.util.Map a(android.os.Parcel)
org.jaudiotagger.audio.generic.GenericAudioHeader: int getBitsPerSample()
org.jaudiotagger.tag.id3.ID3v22Frame: void createStructure()
org.jaudiotagger.utils.tree.TreePath: org.jaudiotagger.utils.tree.TreePath pathByAddingChild(java.lang.Object)
com.thegrizzlylabs.sardineandroid.model.Prop: com.thegrizzlylabs.sardineandroid.model.PrincipalURL getPrincipalURL()
com.caij.puremusic.drive.model.AlbumSubsonicResponse$Companion: AlbumSubsonicResponse$Companion()
com.caij.puremusic.db.model.AlbumQueries$insert$2: java.lang.Object invoke(java.lang.Object)
okhttp3.TlsVersion: okhttp3.TlsVersion forJavaName(java.lang.String)
com.google.common.base.Predicates$ObjectPredicate: boolean apply(java.lang.Object)
org.jaudiotagger.tag.id3.ID3v1Tag: boolean equals(java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyUnsupported: FrameBodyUnsupported(java.nio.ByteBuffer,int)
com.umeng.analytics.pro.as: as()
org.jaudiotagger.audio.asf.data.StreamChunk: long getStreamSpecificDataSize()
org.jaudiotagger.tag.datatype.TCONString: java.lang.String getValueAtIndex(int)
org.jaudiotagger.tag.id3.AbstractTagFrameBody: AbstractTagFrameBody()
com.umeng.commonsdk.statistics.idtracking.e: boolean a(com.umeng.commonsdk.statistics.idtracking.a)
org.jcodec.containers.mp4.boxes.FielExtension: void parse(java.nio.ByteBuffer)
org.jaudiotagger.tag.reference.ISOScript$Script: java.lang.String access$100(org.jaudiotagger.tag.reference.ISOScript$Script)
com.caij.puremusic.drive.model.EmbyAlbumsResponse: int hashCode()
com.google.android.material.navigation.NavigationBarMenuView: void setLabelVisibilityMode(int)
org.jaudiotagger.tag.id3.AbstractID3v2Frame: void createStructure()
com.google.android.material.slider.Slider: void setStepSize(float)
org.simpleframework.xml.core.InstantiatorBuilder: void validateNames(org.simpleframework.xml.core.Label,org.simpleframework.xml.core.Parameter)
org.repackage.com.vivo.identifier.IdentifierManager: java.lang.String b(android.content.Context,java.lang.String)
org.jaudiotagger.tag.datatype.AbstractDataType: void createStructure()
org.simpleframework.xml.core.LabelMap: org.simpleframework.xml.core.Label getLabel(java.lang.String)
org.simpleframework.xml.stream.PullReader$Entry: java.lang.Object getSource()
org.simpleframework.xml.core.MethodDetail: java.lang.reflect.Method getMethod()
com.caij.puremusic.fragments.player.blur.BlurPlayerFragment: BlurPlayerFragment()
com.caij.puremusic.network.model.Artist: java.lang.String getHref()
com.bumptech.glide.load.engine.DecodeJob$RunReason: DecodeJob$RunReason(java.lang.String,int)
org.simpleframework.xml.convert.ConverterScanner: org.simpleframework.xml.convert.Convert getConvert(org.simpleframework.xml.strategy.Type,java.lang.Class)
org.simpleframework.xml.core.Source: org.simpleframework.xml.core.Instance getInstance(java.lang.Class)
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
com.tencent.mm.opensdk.modelbiz.WXChannelOpenLive: WXChannelOpenLive()
com.umeng.commonsdk.statistics.c: int a(byte[])
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessWebview$Req: void fromBundle(android.os.Bundle)
com.umeng.analytics.pro.bu: short v()
androidx.constraintlayout.motion.widget.MotionLayout: void setOnHide(float)
com.caij.puremusic.drive.model.SubPlayList: java.lang.String toString()
org.simpleframework.xml.core.Schema: org.simpleframework.xml.Version getRevision()
org.simpleframework.xml.core.Entry: java.lang.String getKey()
com.umeng.commonsdk.statistics.proto.c$c: c$c()
com.umeng.commonsdk.statistics.AnalyticsConstants: AnalyticsConstants()
org.jaudiotagger.tag.asf.AsfTag: AsfTag()
com.caij.puremusic.db.model.SongQueries$songsByArtistIdWithLike$2: com.caij.puremusic.db.model.Song invoke(long,java.lang.String,int,int,long,java.lang.String,java.lang.String,long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,long,long)
com.tencent.mm.opensdk.modelmsg.WXGameLiveObject: void putExtra(java.lang.String,java.lang.String)
org.jcodec.containers.mp4.boxes.TrackExtendsBox: int getDefaultSampleFlags()
org.jcodec.containers.mp4.boxes.EsdsBox$NodeDescriptor: java.lang.Object findByTag(org.jcodec.containers.mp4.boxes.EsdsBox$Descriptor,int)
com.caij.puremusic.drive.model.ADriveItem$Companion: ADriveItem$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.slider.Slider: void setValueTo(float)
com.tencent.mm.opensdk.modelmsg.WXWebpageObject: WXWebpageObject(java.lang.String)
org.simpleframework.xml.stream.OutputDocument: OutputDocument(org.simpleframework.xml.stream.NodeWriter,org.simpleframework.xml.stream.OutputStack)
com.caij.puremusic.db.model.ServerAudioFormatQueries$GetByIdQuery: java.lang.String toString()
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getExitTransitionCallback()
com.tencent.bugly.proguard.r: void b(java.util.List,java.util.List)
org.jaudiotagger.tag.id3.framebody.FrameBodyWXXX: void write(java.io.ByteArrayOutputStream)
com.caij.puremusic.db.model.PlayCountEntityQueries$playCountSongs$2: PlayCountEntityQueries$playCountSongs$2()
com.umeng.commonsdk.utils.UMUtils: boolean isSdCardWrittenable()
nl.adaptivity.xmlutil.Namespace$Companion$descriptor$1: Namespace$Companion$descriptor$1()
com.umeng.commonsdk.internal.d: void a(org.json.JSONObject,java.lang.String,boolean)
com.tencent.bugly.proguard.ao: void f(java.lang.String,java.lang.String,java.lang.String)
org.jcodec.containers.mp4.boxes.HandlerBox: org.jcodec.containers.mp4.boxes.HandlerBox createHandlerBox(java.lang.String,java.lang.String,java.lang.String,int,int)
androidx.gridlayout.widget.GridLayout: void setAlignmentMode(int)
com.umeng.analytics.filter.d: java.lang.Integer c(java.lang.String)
com.caij.puremusic.db.model.SearchAlbumResult: com.caij.puremusic.db.model.SearchAlbumResult copy(java.lang.String,java.lang.String)
com.google.android.gms.common.api.internal.BasePendingResult: BasePendingResult()
com.tencent.bugly.crashreport.BuglyLog: void i(java.lang.String,java.lang.String)
com.tencent.bugly.proguard.s: long b(long)
org.jaudiotagger.tag.aiff.AiffTag: void setID3Tag(org.jaudiotagger.tag.id3.AbstractID3v2Tag)
nl.adaptivity.xmlutil.serialization.NodeSerializer$ed$1$1: NodeSerializer$ed$1$1()
com.caij.puremusic.dialogs.DeleteSongsDialog: DeleteSongsDialog()
com.caij.puremusic.db.model.ServerSongCover: java.lang.String getUrl()
org.jcodec.containers.mp4.boxes.ChannelBox: void doWrite(java.nio.ByteBuffer)
org.simpleframework.xml.util.Resolver$Stack: Resolver$Stack(org.simpleframework.xml.util.Resolver)
org.jcodec.containers.mp4.boxes.Header: long getSize()
com.caij.puremusic.drive.model.Resourcetype: void write$Self(com.caij.puremusic.drive.model.Resourcetype,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
org.simpleframework.xml.core.LabelExtractor: java.lang.Object getKey(org.simpleframework.xml.core.Contact,java.lang.annotation.Annotation)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
com.umeng.analytics.process.b: b(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)
org.jcodec.containers.mp4.boxes.VideoMediaHeaderBox: org.jcodec.containers.mp4.boxes.VideoMediaHeaderBox createVideoMediaHeaderBox(int,int,int,int)
com.google.android.material.textfield.TextInputLayout: void setHint(int)
com.umeng.analytics.pro.bo: void k()
com.google.android.material.bottomsheet.BottomSheetDialogFragment: boolean tryDismissWithAnimation(boolean)
org.jaudiotagger.audio.aiff.AiffType: org.jaudiotagger.audio.aiff.AiffType[] values()
org.simpleframework.xml.stream.DocumentReader$End: DocumentReader$End()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockData: int getLength()
com.caij.puremusic.db.model.AlbumQueries$getAlbumByArtistId$2: AlbumQueries$getAlbumByArtistId$2()
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$insert$1: java.lang.Object invoke(java.lang.Object)
org.jcodec.containers.mp4.boxes.IListBox: void parse(java.nio.ByteBuffer)
androidx.appcompat.widget.SwitchCompat: boolean getSplitTrack()
com.caij.puremusic.drive.model.BaiduDriveItem: long getSize()
com.umeng.commonsdk.statistics.proto.b: boolean g()
com.umeng.analytics.MobclickAgent: void setCatchUncaughtExceptions(boolean)
com.caij.puremusic.drive.model.SubsonicAlbum: int getDuration()
androidx.core.content.pm.PackageInfoCompat$Api28Impl: android.content.pm.Signature[] getApkContentsSigners(android.content.pm.SigningInfo)
com.caij.puremusic.db.model.ServerArtistCoverQueries$insert$2: void invoke(kotlin.jvm.functions.Function1)
com.umeng.commonsdk.statistics.proto.d$c: d$c()
com.google.android.material.slider.Slider: android.content.res.ColorStateList getThumbStrokeColor()
org.jcodec.containers.mp4.boxes.DataRefBox: void doWrite(java.nio.ByteBuffer)
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: void close(java.io.FileDescriptor)
androidx.fragment.app.DialogFragment: void onCancel(android.content.DialogInterface)
com.caij.puremusic.db.model.ServerSongCoverQueries$clear$1: ServerSongCoverQueries$clear$1()
org.simpleframework.xml.transform.Transform: java.lang.Object read(java.lang.String)
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
com.caij.puremusic.drive.model.BaiduFileResponse: void write$Self(com.caij.puremusic.drive.model.BaiduFileResponse,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.umeng.commonsdk.statistics.proto.e: com.umeng.analytics.pro.bp n()
com.google.android.material.search.SearchView: void setUpBackgroundViewElevationOverlay(float)
com.caij.puremusic.drive.model.ParentReference$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.ParentReference)
com.umeng.analytics.process.b: com.umeng.analytics.process.b a(android.content.Context,java.lang.String)
com.caij.puremusic.db.model.FolderQueries$insertFolder$2: java.lang.Object invoke(java.lang.Object)
androidx.media.AudioAttributesImplApi21: AudioAttributesImplApi21()
com.caij.puremusic.db.model.ServerArtistCover: java.lang.String component3()
org.jcodec.containers.mp4.boxes.FielExtension: int estimateSize()
com.umeng.analytics.pro.y: boolean g(android.content.Context)
com.caij.puremusic.db.model.DriveFileDownUrlInfo: int hashCode()
org.jaudiotagger.audio.asf.data.ChunkContainer: ChunkContainer(org.jaudiotagger.audio.asf.data.GUID,long,java.math.BigInteger)
com.thegrizzlylabs.sardineandroid.DavPrincipal: DavPrincipal(com.thegrizzlylabs.sardineandroid.DavPrincipal$PrincipalType,javax.xml.namespace.QName,java.lang.String)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipBackgroundColor()
com.caij.puremusic.drive.model.JellyfinLoginResponse: com.caij.puremusic.drive.model.User component2()
com.umeng.analytics.pro.bn: com.umeng.analytics.pro.bs h()
com.tencent.bugly.crashreport.CrashReport: boolean isLastSessionCrash()
com.caij.puremusic.drive.model.ADriveItem$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
org.simpleframework.xml.core.ElementMapLabel: java.lang.Class getType()
org.simpleframework.xml.core.MethodContact: java.lang.Class getType()
com.caij.puremusic.db.model.ServerAudioFormat: long getSourceId()
org.simpleframework.xml.core.ObjectScanner: java.lang.Class getType()
com.afollestad.materialdialogs.LayoutMode: com.afollestad.materialdialogs.LayoutMode valueOf(java.lang.String)
com.caij.puremusic.drive.model.JellyfinLoginResponse$Companion: kotlinx.serialization.KSerializer serializer()
com.tencent.bugly.proguard.s: long c()
org.simpleframework.xml.util.Dictionary: org.simpleframework.xml.util.Entry get(java.lang.String)
org.jaudiotagger.audio.generic.Utils: java.lang.String readNullTermStringCharset(java.nio.ByteBuffer,java.nio.charset.Charset)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSIZ: FrameBodyTSIZ(org.jaudiotagger.tag.id3.framebody.FrameBodyTSIZ)
org.simpleframework.xml.convert.ScannerBuilder$Entry: ScannerBuilder$Entry(java.lang.Class)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.google.android.material.appbar.CollapsingToolbarLayout: android.graphics.drawable.Drawable getContentScrim()
org.simpleframework.xml.core.LabelMap: java.lang.String[] getKeys()
org.jaudiotagger.tag.id3.ID3v24Tag: java.lang.String getFirst(org.jaudiotagger.tag.id3.ID3v24FieldKey)
org.jaudiotagger.tag.id3.framebody.FrameBodyTCON: java.lang.String convertGenericToID3v22Genre(java.lang.String)
org.repackage.com.heytap.openid.sdk.OpenIDSDK: boolean a()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getErrorContentDescription()
com.tencent.bugly.crashreport.CrashReport$UserStrategy: boolean getCloseErrorCallback()
com.bumptech.glide.load.PreferredColorSpace: com.bumptech.glide.load.PreferredColorSpace valueOf(java.lang.String)
com.caij.puremusic.views.TopAppBarLayout: com.caij.puremusic.views.TopAppBarLayout$AppBarMode getMode()
org.jaudiotagger.tag.id3.framebody.FrameBodyGRID: FrameBodyGRID(org.jaudiotagger.tag.id3.framebody.FrameBodyGRID)
org.simpleframework.xml.core.InstanceFactory$ClassInstance: boolean isReference()
org.simpleframework.xml.core.FieldContact: FieldContact(java.lang.reflect.Field,java.lang.annotation.Annotation,java.lang.annotation.Annotation[])
org.simpleframework.xml.core.TextListLabel: java.lang.String[] getNames()
org.jaudiotagger.audio.asf.data.EncodingChunk: java.util.Collection getStrings()
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.audio.asf.data.EncryptionChunk: java.util.Collection getStrings()
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
org.jaudiotagger.audio.mp3.MPEGFrameHeader: java.lang.Integer getBitRate()
org.simpleframework.xml.core.Composite$Injector: Composite$Injector(org.simpleframework.xml.core.Composite,org.simpleframework.xml.core.Composite,org.simpleframework.xml.core.Criteria,org.simpleframework.xml.core.Schema,org.simpleframework.xml.core.Instance,org.simpleframework.xml.core.Composite$1)
org.jaudiotagger.audio.mp4.ChunkWriter: java.nio.channels.SeekableByteChannel getInput(org.jaudiotagger.audio.mp4.Chunk)
com.alipay.android.phone.mrpc.core.b: void a(org.apache.http.HttpRequest)
org.jaudiotagger.tag.id3.ID3v1FieldKey: org.jaudiotagger.tag.id3.ID3v1FieldKey[] values()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyIMG: void write(java.io.RandomAccessFile)
com.google.android.material.internal.NavigationMenuItemView: NavigationMenuItemView(android.content.Context,android.util.AttributeSet)
com.umeng.analytics.pro.f: void e(android.database.sqlite.SQLiteDatabase)
org.simpleframework.xml.util.Resolver$Stack$Sequence: void remove()
org.jcodec.containers.mp4.boxes.TrackExtendsBox: void setDefaultSampleFlags(int)
com.thegrizzlylabs.sardineandroid.model.UnBind: UnBind()
com.umeng.analytics.pro.a$a$a: java.lang.String e(java.lang.String)
com.caij.puremusic.db.model.SongEntityQueries: app.cash.sqldelight.Query isSongExistsInPlaylist(long,long)
org.jaudiotagger.tag.TagOptionSingleton: void setId3v2Save(boolean)
com.thegrizzlylabs.sardineandroid.DavAce: DavAce(com.thegrizzlylabs.sardineandroid.model.Ace)
com.umeng.commonsdk.config.FieldManager: FieldManager(com.umeng.commonsdk.config.FieldManager$1)
org.simpleframework.xml.util.Resolver$Stack: void push(java.lang.Object)
com.caij.vip.VipApiService: java.lang.Object getDefaultPayType(kotlin.coroutines.Continuation)
org.jaudiotagger.audio.ogg.util.OggPageHeader: long getAbsoluteGranulePosition()
com.caij.puremusic.db.model.SongEntityQueries$CheckSongPlaylistExistsQuery: SongEntityQueries$CheckSongPlaylistExistsQuery(com.caij.puremusic.db.model.SongEntityQueries,long,long,kotlin.jvm.functions.Function1)
com.alipay.android.phone.mrpc.core.y: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
com.caij.puremusic.drive.model.SubsonicResponse$$serializer: SubsonicResponse$$serializer()
org.simpleframework.xml.core.Persister: void write(java.lang.Object,java.io.Writer)
com.alipay.android.phone.mrpc.core.k: com.alipay.android.phone.mrpc.core.k$a e(java.lang.String)
com.umeng.commonsdk.statistics.idtracking.e: void h()
org.jaudiotagger.tag.aiff.AiffTag: org.jaudiotagger.tag.TagField getFirstField(java.lang.String)
org.simpleframework.xml.core.Collector$Registry: Collector$Registry(org.simpleframework.xml.core.Collector$1)
org.simpleframework.xml.core.ExtractorFactory$ElementListExtractor: ExtractorFactory$ElementListExtractor(org.simpleframework.xml.core.Contact,org.simpleframework.xml.ElementListUnion,org.simpleframework.xml.stream.Format)
org.simpleframework.xml.stream.DocumentReader: DocumentReader(org.w3c.dom.Document)
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$GetByIdQuery: java.lang.String toString()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyUnsupported: java.lang.String toString()
org.jaudiotagger.tag.id3.AbstractTag: AbstractTag()
com.caij.puremusic.drive.model.BaiduDriveItem: long component3()
org.jaudiotagger.tag.TagOptionSingleton: void setLanguage(java.lang.String)
com.google.android.material.bottomsheet.BottomSheetDragHandleView: void onDetachedFromWindow()
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: void unsetDataLengthIndicator()
org.jaudiotagger.audio.wav.chunk.WavInfoChunk: boolean readChunks(java.nio.ByteBuffer)
com.google.common.hash.LittleEndianByteArray$UnsafeByteArray: long getLongLittleEndian(byte[],int)
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey[] values()
com.caij.puremusic.drive.model.MediaContainer: java.lang.String component2()
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
org.json.alipay.b: java.util.Iterator a()
com.caij.puremusic.fragments.player.md3.MD3PlayerFragment: MD3PlayerFragment()
com.caij.puremusic.drive.model.AlbumArtist: java.lang.String getId()
org.jcodec.containers.mp4.boxes.NodeBox: org.jcodec.containers.mp4.boxes.Box doCloneBox(org.jcodec.containers.mp4.boxes.Box,int,org.jcodec.containers.mp4.IBoxFactory)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
com.google.android.material.slider.Slider: android.content.res.ColorStateList getTickActiveTintList()
org.simpleframework.xml.core.Instance: java.lang.Object setInstance(java.lang.Object)
com.umeng.analytics.MobclickAgent: void onPageStart(java.lang.String)
com.caij.puremusic.drive.model.PlexUser$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
org.simpleframework.xml.transform.ClassTransform: java.lang.Object read(java.lang.String)
com.caij.puremusic.db.model.SongEntityQueries$GetPlayListSongCountQuery: long getPlaylistId()
com.caij.puremusic.db.model.ServerSongCoverQueries$GetByIdQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgramWithToken$Resp: boolean checkArgs()
com.google.android.material.bottomsheet.BottomSheetBehavior$4: void onViewDragStateChanged(int)
com.caij.puremusic.views.TopAppBarLayout$AppBarMode: com.caij.puremusic.views.TopAppBarLayout$AppBarMode[] $values()
com.umeng.analytics.pro.i: void l()
com.tencent.bugly.proguard.d: void a(byte[])
org.simpleframework.xml.stream.Splitter: boolean isDigit(char)
com.umeng.commonsdk.statistics.proto.a: void a(java.io.ObjectOutputStream)
com.tencent.bugly.proguard.aa: java.lang.String m()
com.caij.puremusic.db.model.SongEntityQueries$IsSongExistsInPlaylistQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.simpleframework.xml.stream.OutputStack: org.simpleframework.xml.stream.OutputNode purge(int)
com.umeng.commonsdk.statistics.internal.PreferenceWrapper: PreferenceWrapper()
com.alipay.android.phone.mrpc.core.a.a: a(java.lang.reflect.Type,byte[])
com.umeng.analytics.pro.bo: void a(boolean)
com.caij.puremusic.drive.model.PlexLoginResponse$$serializer: com.caij.puremusic.drive.model.PlexLoginResponse deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.tag.datatype.AbstractDataType: AbstractDataType(org.jaudiotagger.tag.datatype.AbstractDataType)
com.umeng.commonsdk.statistics.proto.d$d: com.umeng.commonsdk.statistics.proto.d$c a()
com.caij.puremusic.db.model.ServerSongCoverQueries$GetByIdQuery: ServerSongCoverQueries$GetByIdQuery(com.caij.puremusic.db.model.ServerSongCoverQueries,java.lang.String,kotlin.jvm.functions.Function1)
org.simpleframework.xml.core.PathParser: void index()
androidx.appcompat.app.AppCompatDialog: void onSupportActionModeStarted(androidx.appcompat.view.ActionMode)
com.umeng.analytics.b: void b(java.lang.Object)
com.caij.puremusic.db.model.ArtistQueries$SearchArtistByNameQuery: java.lang.String toString()
com.caij.puremusic.model.AlbumWrapper: com.caij.puremusic.db.model.Album getAlbum()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.umeng.analytics.pro.l: int f(com.umeng.analytics.pro.l)
androidx.constraintlayout.motion.widget.MotionLayout: void setState(androidx.constraintlayout.motion.widget.MotionLayout$TransitionState)
org.simpleframework.xml.core.Instance: java.lang.Class getType()
com.umeng.analytics.pro.q: org.json.JSONObject a(android.content.Context,long,org.json.JSONObject)
org.jaudiotagger.audio.ogg.OggFileReader: void shortSummarizeOggPageHeaders(java.io.File)
com.thegrizzlylabs.sardineandroid.model.Multistatus: java.util.List getResponse()
com.caij.puremusic.db.model.ServerAudioFormat: com.caij.puremusic.db.model.ServerAudioFormat copy(long,long,java.lang.String,java.lang.String,java.lang.String)
com.caij.puremusic.views.AccentIcon: AccentIcon(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.drive.model.Metadata$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.Metadata)
org.jaudiotagger.tag.id3.valuepair.TextEncoding: java.nio.charset.Charset getCharsetForId(int)
com.alipay.sdk.m.u.g: com.alipay.sdk.m.u.g[] values()
com.thegrizzlylabs.sardineandroid.model.Response: java.lang.String getHref()
com.google.android.material.chip.Chip: void setChipIconVisible(int)
com.umeng.analytics.MobclickAgent: void onEventObject(android.content.Context,java.lang.String,java.util.Map)
com.tencent.mm.opensdk.modelmsg.WXAppExtendObject: boolean checkArgs()
com.tencent.bugly.proguard.ak: boolean a(java.lang.Runnable)
com.thegrizzlylabs.sardineandroid.DavAce: java.util.List getGranted()
com.umeng.analytics.MobclickAgent$PageMode: com.umeng.analytics.MobclickAgent$PageMode[] values()
com.tencent.bugly.proguard.bc: java.lang.String b()
org.jaudiotagger.tag.TagOptionSingleton: java.util.Iterator getOpenParenthesisIterator()
com.caij.puremusic.drive.model.ParentReference$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String component12()
org.simpleframework.xml.stream.DocumentReader$Entry: DocumentReader$Entry(org.w3c.dom.Node)
com.caij.puremusic.extensions.ViewExtensionsKt$drawNextToNavbar$1$1: ViewExtensionsKt$drawNextToNavbar$1$1()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: SwipeRefreshLayout(android.content.Context,android.util.AttributeSet)
com.tencent.mm.opensdk.modelbiz.WXNontaxPay$Resp: int getType()
com.caij.puremusic.db.model.SongQueries$SongsByIdsQuery$execute$1: SongQueries$SongsByIdsQuery$execute$1(com.caij.puremusic.db.model.SongQueries$SongsByIdsQuery)
org.jaudiotagger.tag.mp4.Mp4TagCreator: org.jcodec.containers.mp4.boxes.IListBox convert(org.jaudiotagger.tag.Tag,int)
org.simpleframework.xml.core.Composite: void validate(org.simpleframework.xml.stream.InputNode,org.simpleframework.xml.core.LabelMap,java.lang.Object)
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
com.tencent.mm.opensdk.modelmsg.WXStateJumpMiniProgramInfo: int type()
com.umeng.commonsdk.internal.utils.InfoPreferenceAgent: void saveUA(android.content.Context,java.lang.String)
com.umeng.commonsdk.framework.UMFrUtils: UMFrUtils()
com.google.android.material.bottomappbar.BottomAppBar: void setFabAnchorMode(int)
com.google.android.material.slider.BaseSlider: void setValues(java.lang.Float[])
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
com.caij.puremusic.drive.model.Resourcetype$$serializer: com.caij.puremusic.drive.model.Resourcetype deserialize(kotlinx.serialization.encoding.Decoder)
androidx.preference.SeekBarPreference: SeekBarPreference(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.audio.mp3.MP3File: org.jaudiotagger.audio.mp3.MP3AudioHeader checkAudioStart(long,org.jaudiotagger.audio.mp3.MP3AudioHeader)
com.tencent.bugly.proguard.ao: java.lang.String a(java.lang.String,java.lang.String,java.lang.String,long)
code.name.monkey.appthemehelper.common.prefs.supportv7.ATEListPreference: ATEListPreference(android.content.Context,android.util.AttributeSet,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
org.jaudiotagger.tag.mp4.field.Mp4DiscNoField: java.lang.Short getDiscTotal()
com.google.android.material.slider.BaseSlider: android.content.res.ColorStateList getTickTintList()
com.google.android.material.bottomsheet.BottomSheetDialog$5: BottomSheetDialog$5(com.google.android.material.bottomsheet.BottomSheetDialog)
com.google.android.material.appbar.AppBarFixBehavior: AppBarFixBehavior()
com.caij.puremusic.drive.model.Metadata: java.lang.String getGrandparentRatingKey()
org.simpleframework.xml.core.ElementMapLabel: java.lang.String toString()
org.simpleframework.xml.stream.EventNode: java.lang.String getPrefix()
org.jaudiotagger.tag.lyrics3.Lyrics3v2Field: java.lang.String getIdentifier()
com.caij.puremusic.drive.model.FMediaContainer$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyINF: FieldFrameBodyINF(java.lang.String)
com.google.android.material.bottomsheet.BottomSheetBehavior: int access$302(com.google.android.material.bottomsheet.BottomSheetBehavior,int)
com.alipay.apmobilesecuritysdk.e.h: java.lang.String b(android.content.Context)
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries: void deleteSongBySource(long)
org.jaudiotagger.audio.asf.util.Utils: boolean isEmpty(java.lang.String)
com.tencent.bugly.proguard.bg: void d()
org.jaudiotagger.utils.EqualsUtil: boolean areEqual(char,char)
com.umeng.analytics.process.c$a: c$a()
org.jaudiotagger.audio.iff.Chunk: Chunk(java.nio.ByteBuffer,org.jaudiotagger.audio.iff.ChunkHeader)
com.caij.puremusic.drive.model.DropboxDriveItem: java.lang.String getName()
com.google.android.material.bottomsheet.BottomSheetBehavior: void runAfterLayout(android.view.View,java.lang.Runnable)
org.jaudiotagger.tag.id3.ID3v22Tag: ID3v22Tag()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockHeader: int getDataLength()
org.jcodec.containers.mp4.boxes.EsdsBox$ES: EsdsBox$ES(int,java.util.Collection)
com.caij.puremusic.model.DriveFileParcelable: long component6()
com.caij.puremusic.drive.model.AlbumList: java.util.List getAlbum()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
org.jaudiotagger.audio.asf.data.MetadataDescriptor: void setQWordValue(long)
com.caij.puremusic.network.model.Artist: void setName(java.lang.String)
androidx.core.widget.TextViewCompat$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
com.google.android.material.snackbar.SnackbarContentLayout: SnackbarContentLayout(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.tag.asf.AsfTagField: AsfTagField(org.jaudiotagger.audio.asf.data.MetadataDescriptor)
org.jaudiotagger.audio.asf.data.LanguageList: java.lang.String prettyPrint(java.lang.String)
com.google.android.material.navigation.NavigationBarView: android.content.res.ColorStateList getItemActiveIndicatorColor()
androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyPairs: java.lang.String getKeyAtIndex(int)
com.heinrichreimersoftware.materialintro.slide.SimpleSlide$SimpleSlideFragment: SimpleSlide$SimpleSlideFragment()
com.caij.puremusic.db.model.Folder: long getCreateTime()
com.caij.puremusic.drive.model.DavResource$Companion: DavResource$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10$1: BaseWXApiImplV10$1(com.tencent.mm.opensdk.openapi.BaseWXApiImplV10,java.util.concurrent.CountDownLatch)
com.google.android.material.progressindicator.BaseProgressIndicator: int getShowAnimationBehavior()
com.thegrizzlylabs.sardineandroid.model.SupportedReportSet: java.util.List getSupportedReport()
com.umeng.commonsdk.config.b: void a()
com.thegrizzlylabs.sardineandroid.model.Lockinfo: void setLockscope(com.thegrizzlylabs.sardineandroid.model.Lockscope)
org.jcodec.containers.mp4.boxes.Box: org.jcodec.containers.mp4.boxes.Box parseBox(java.nio.ByteBuffer,org.jcodec.containers.mp4.boxes.Header,org.jcodec.containers.mp4.IBoxFactory)
com.caij.puremusic.drive.model.PlexSectionsResponse: PlexSectionsResponse(com.caij.puremusic.drive.model.FMediaContainer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.caij.puremusic.drive.model.SubsonicSearchListResponse: com.caij.puremusic.drive.model.SubsonicSearchListResponse copy(com.caij.puremusic.drive.model.SubsonicSearchResponse)
org.simpleframework.xml.core.SignatureCreator: double getAdjustment(double)
com.umeng.commonsdk.debug.UMRTLog: void e(java.lang.String,java.lang.String)
org.jaudiotagger.tag.id3.valuepair.ImageFormats: boolean binaryDataIsGifFormat(byte[])
com.caij.puremusic.drive.model.PlexAlbumsResponse$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.google.android.material.navigation.NavigationBarMenuView: boolean getItemActiveIndicatorEnabled()
com.umeng.commonsdk.framework.UMFrUtils$2: int compare(java.lang.Object,java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyRVRB: java.lang.String getIdentifier()
com.caij.puremusic.db.model.HistoryEntityQueries$deleteById$2: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.db.model.SongEntityQueries$GetPlayListSongCountQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.google.android.material.bottomsheet.BottomSheetBehavior: void updatePeekHeight(boolean)
org.simpleframework.xml.core.FieldDetail: java.lang.String getName()
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox createTrackFragmentHeaderBox()
org.jaudiotagger.audio.aiff.AiffAudioHeader: void setFileType(org.jaudiotagger.audio.aiff.AiffType)
org.jaudiotagger.tag.id3.framebody.FrameBodyGRP1: FrameBodyGRP1(org.jaudiotagger.tag.id3.framebody.FrameBodyGRP1)
com.alipay.android.phone.mrpc.core.l: l(android.content.Context)
org.jcodec.containers.mp4.boxes.SoundMediaHeaderBox: void doWrite(java.nio.ByteBuffer)
org.jcodec.containers.mp4.boxes.HandlerBox: java.lang.String getComponentType()
com.tencent.mm.opensdk.modelmsg.WXEmojiSharedObject: boolean checkArgs()
org.jcodec.containers.mp4.boxes.TrackHeaderBox: void setDuration(long)
com.caij.puremusic.db.model.FolderQueries$selectById$2: com.caij.puremusic.db.model.Folder invoke(long,int,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.umeng.commonsdk.statistics.common.d$a: void a(byte[])
org.simpleframework.xml.core.PrimitiveInlineList: boolean isOverridden(org.simpleframework.xml.stream.OutputNode,java.lang.Object)
org.jaudiotagger.tag.id3.ID3v22Tag: boolean isCompression()
org.jaudiotagger.audio.mp3.XingFrame: java.nio.ByteBuffer isXingFrame(java.nio.ByteBuffer,org.jaudiotagger.audio.mp3.MPEGFrameHeader)
com.google.android.material.bottomsheet.BottomSheetDragHandleView: void onAttachedToWindow()
androidx.core.view.ViewCompat$Api24Impl: void setPointerIcon(android.view.View,android.view.PointerIcon)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeResources(int[])
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgramWithToken$Resp: void fromBundle(android.os.Bundle)
com.tencent.bugly.proguard.ay: boolean a(long)
com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextColor(android.content.res.ColorStateList)
org.jaudiotagger.tag.id3.framebody.FrameBodyPIC: java.lang.String getDescription()
com.tencent.mm.opensdk.modelbiz.SubscribeMessage$Resp: SubscribeMessage$Resp(android.os.Bundle)
com.umeng.commonsdk.vchannel.b: void a(long)
org.jaudiotagger.tag.id3.framebody.FrameBodyTPE3: FrameBodyTPE3(org.jaudiotagger.tag.id3.framebody.FrameBodyTPE3)
com.caij.puremusic.db.model.SongQueries$songsByAlbumId$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
com.google.android.material.textfield.TextInputLayout: void setErrorAccessibilityLiveRegion(int)
com.thegrizzlylabs.sardineandroid.model.Lockscope: void setShared(com.thegrizzlylabs.sardineandroid.model.Shared)
org.simpleframework.xml.core.FieldContact: boolean isFinal()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
org.simpleframework.xml.core.PrimitiveKey: boolean validateElement(org.simpleframework.xml.stream.InputNode,java.lang.String)
org.simpleframework.xml.transform.FileTransform: java.lang.Object read(java.lang.String)
org.simpleframework.xml.core.PrimitiveList: boolean isOverridden(org.simpleframework.xml.stream.OutputNode,java.lang.Object)
org.simpleframework.xml.core.GetPart: org.simpleframework.xml.core.MethodType getMethodType()
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: java.lang.String getValueAtIndex(int)
com.caij.puremusic.drive.model.SubsonicSearchResponse: com.caij.puremusic.drive.model.SearchResult3 component3()
com.umeng.analytics.pro.bf: void clear()
com.caij.puremusic.drive.model.SubsonicResponse$Companion: SubsonicResponse$Companion()
org.jaudiotagger.tag.id3.framebody.FrameBodyTOLY: FrameBodyTOLY(org.jaudiotagger.tag.id3.framebody.FrameBodyTOLY)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean blocksInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
org.jaudiotagger.audio.ogg.OggFileWriter: void deleteTag(org.jaudiotagger.tag.Tag,java.io.RandomAccessFile,java.io.RandomAccessFile)
org.jaudiotagger.tag.id3.framebody.FrameBodyEQUA: FrameBodyEQUA()
org.simpleframework.xml.core.ElementMapUnionLabel: java.lang.String[] getNames()
org.jaudiotagger.tag.id3.framebody.FrameBodyLINK: FrameBodyLINK(java.lang.String,java.lang.String,java.lang.String)
com.caij.puremusic.drive.model.ImageTags$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
org.simpleframework.xml.core.ElementMapLabel: java.lang.String getEntry()
org.simpleframework.xml.stream.Indenter: Indenter(org.simpleframework.xml.stream.Format)
org.jaudiotagger.tag.id3.framebody.FrameBodyXSOA: FrameBodyXSOA(java.nio.ByteBuffer,int)
org.jcodec.containers.mp4.boxes.SampleDescriptionBox: void parse(java.nio.ByteBuffer)
com.caij.puremusic.model.Playlist: org.koin.core.Koin getKoin()
com.umeng.analytics.pro.bf: void a(int,java.lang.Object)
org.simpleframework.xml.stream.Splitter: Splitter(java.lang.String)
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgramWithToken$Req: void toBundle(android.os.Bundle)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
com.thegrizzlylabs.sardineandroid.model.Propfind: Propfind()
org.jaudiotagger.audio.asf.data.ContentDescription: long getCurrentAsfChunkSize()
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentAnimationDuration()
kotlinx.serialization.json.JsonElementSerializer$descriptor$1$1: JsonElementSerializer$descriptor$1$1()
com.umeng.analytics.pro.o: org.json.JSONObject b(org.json.JSONObject,long)
com.tencent.mm.opensdk.modelmsg.WXEmojiSharedObject: int type()
org.simpleframework.xml.core.CacheLabel: boolean isText()
org.jaudiotagger.audio.asf.data.MetadataContainer: void setStringValue(java.lang.String,java.lang.String)
com.caij.puremusic.drive.model.Collection$Companion: Collection$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: java.lang.String getTextWithoutTrailingNulls()
com.tencent.bugly.crashreport.crash.h5.H5JavaScriptInterface: com.tencent.bugly.crashreport.crash.h5.H5JavaScriptInterface getInstance(com.tencent.bugly.crashreport.CrashReport$a)
com.tencent.mm.opensdk.openapi.MMSharedPreferences: float getFloat(java.lang.String,float)
androidx.mediarouter.app.MediaRouteButton: void setRemoteIndicatorDrawableInternal(android.graphics.drawable.Drawable)
androidx.appcompat.widget.DrawableUtils$Api29Impl: android.graphics.Insets getOpticalInsets(android.graphics.drawable.Drawable)
org.jaudiotagger.logging.XMLTagDisplayFormatter: java.lang.String xmlOpen(java.lang.String)
org.jaudiotagger.tag.id3.valuepair.V2GenreTypes: java.util.List getAlphabeticalValueList()
com.google.android.material.search.SearchView: void setAutoShowKeyboard(boolean)
app.cash.sqldelight.Query: Query(kotlin.jvm.functions.Function1)
org.jaudiotagger.tag.mp4.Mp4TagFieldSubType: org.jaudiotagger.tag.mp4.Mp4TagFieldSubType valueOf(java.lang.String)
org.jcodec.containers.mp4.boxes.Edit: void setDuration(long)
com.caij.puremusic.drive.model.SubPlayList: com.caij.puremusic.drive.model.SubPlayList copy$default(com.caij.puremusic.drive.model.SubPlayList,java.util.List,int,java.lang.Object)
com.caij.puremusic.db.model.FolderQueries$insertFolder$2: void invoke(kotlin.jvm.functions.Function1)
nl.adaptivity.xmlutil.serialization.XML$collectNamespaces$1: XML$collectNamespaces$1()
com.umeng.analytics.pro.an: boolean F()
com.caij.puremusic.db.model.AlbumQueries$GetAlbumByArtistIdQuery: AlbumQueries$GetAlbumByArtistIdQuery(com.caij.puremusic.db.model.AlbumQueries,long,kotlin.jvm.functions.Function1)
org.jaudiotagger.tag.id3.AbstractID3v2Frame: void copyContent(org.jaudiotagger.tag.TagField)
com.caij.puremusic.db.model.FolderQueries: FolderQueries(app.cash.sqldelight.db.SqlDriver,com.caij.puremusic.db.model.Folder$Adapter)
com.caij.puremusic.drive.model.PlexPlaylistsResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.PlexPlaylistsResponse)
com.thegrizzlylabs.sardineandroid.Sardine: void put(java.lang.String,byte[])
org.jaudiotagger.audio.opus.OpusInfoReader: org.jaudiotagger.audio.generic.GenericAudioHeader read(java.io.RandomAccessFile)
com.umeng.analytics.pro.y: java.lang.String d(android.content.Context)
org.jaudiotagger.tag.datatype.TCONString: TCONString(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody)
org.simpleframework.xml.core.ClassSchema: org.simpleframework.xml.core.Label getText()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
com.google.gson.FieldNamingPolicy$3: FieldNamingPolicy$3(java.lang.String,int)
org.jcodec.containers.mp4.boxes.EsdsBox$ES: int tag()
com.tencent.mm.opensdk.modelmsg.WXFileObject: int type()
com.caij.puremusic.drive.model.PlexPlaylistsResponse: PlexPlaylistsResponse(com.caij.puremusic.drive.model.PlaylistsMediaContainer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.caij.puremusic.fragments.settings.AudioSettings: AudioSettings()
org.jaudiotagger.tag.id3.AbstractTagItem: AbstractTagItem(org.jaudiotagger.tag.id3.AbstractTagItem)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior()
org.simpleframework.xml.core.Label: org.simpleframework.xml.core.Expression getExpression()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: int getFieldCountIncludingSubValues()
com.caij.puremusic.drive.model.WebDAVToken$Companion: kotlinx.serialization.KSerializer serializer()
com.tencent.bugly.proguard.ay: void a(com.tencent.bugly.proguard.ay,long,java.lang.String)
org.simpleframework.xml.core.Support: boolean isPrimitive(java.lang.Class)
com.tencent.bugly.proguard.ak: com.tencent.bugly.proguard.ak a()
com.caij.puremusic.drive.model.AlbumMediaContainer$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.jaudiotagger.tag.reference.ISOScript: java.lang.String[] getDescriptionsAsArray()
com.tencent.bugly.proguard.ap: ap()
androidx.preference.Preference: Preference(android.content.Context)
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int getVersion()
org.simpleframework.xml.util.Resolver: void clear()
org.jaudiotagger.tag.id3.framebody.FrameBodyMVIN: FrameBodyMVIN()
com.caij.puremusic.db.model.HistoryEntityQueries$deleteById$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.tencent.mm.opensdk.diffdev.IDiffDevOAuth: boolean auth(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.tencent.mm.opensdk.diffdev.OAuthListener)
com.afollestad.materialdialogs.color.view.ColorCircleView: ColorCircleView(android.content.Context,android.util.AttributeSet)
org.simpleframework.xml.core.Policy: boolean isStrict()
org.simpleframework.xml.core.Instantiator: java.util.List getParameters()
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTagField: VorbisCommentTagField(java.lang.String,java.lang.String)
com.umeng.commonsdk.statistics.proto.b: void a(java.io.ObjectOutputStream)
com.umeng.analytics.pro.bf$c: void a(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
org.simpleframework.xml.stream.OutputDocument: java.lang.String getName()
org.repackage.com.heytap.openid.sdk.OpenIDSDK: java.lang.String c(android.content.Context)
com.caij.puremusic.fragments.other.DetailListFragment: DetailListFragment()
androidx.fragment.app.Fragment: boolean isInBackStack()
com.umeng.analytics.pro.aw: aw()
org.jaudiotagger.tag.mp4.field.Mp4DiscNoField: Mp4DiscNoField(int)
org.jaudiotagger.tag.InvalidFrameException: InvalidFrameException()
org.jaudiotagger.tag.id3.framebody.FrameBodyTDLY: FrameBodyTDLY()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyLYR: java.lang.String getIdentifier()
com.umeng.commonsdk.statistics.proto.c$d: com.umeng.analytics.pro.cc b()
com.caij.puremusic.network.model.LastFmAlbum$Album$Image: void setSize(java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodySYTC: java.util.Map getTempi()
org.simpleframework.xml.core.Source: boolean isPrimitive(org.simpleframework.xml.strategy.Type)
org.jaudiotagger.tag.lyrics3.Lyrics3v1: int getSize()
com.tencent.bugly.proguard.w: w(android.content.Context,java.util.List)
com.caij.puremusic.drive.model.DavProperties: long getCreation()
com.caij.puremusic.drive.model.JellyfinFolder$Companion: JellyfinFolder$Companion()
org.jaudiotagger.audio.generic.AbstractTag: int getFieldCountIncludingSubValues()
org.jaudiotagger.tag.id3.ID3v1Tag: java.lang.String getSubValue(org.jaudiotagger.tag.FieldKey,int,int)
com.umeng.commonsdk.statistics.common.MLog: void d(java.lang.Throwable)
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
androidx.constraintlayout.widget.ConstraintLayout: void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener)
org.simpleframework.xml.core.FieldScanner: void extract(org.simpleframework.xml.core.Detail,org.simpleframework.xml.DefaultType)
org.simpleframework.xml.core.Contact: java.lang.String toString()
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: FrameBodyTXXX(org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX)
org.jaudiotagger.audio.mp4.RelocateMP4Editor: void relocate(java.nio.channels.FileChannel,org.jcodec.containers.mp4.boxes.MovieBox)
com.caij.puremusic.db.model.ServerSongCoverQueries$insert$1: ServerSongCoverQueries$insert$1(com.caij.puremusic.db.model.ServerSongCover)
org.jaudiotagger.tag.id3.ID3v24Frame: void checkIfFrameSizeThatIsNotSyncSafe(java.nio.ByteBuffer)
org.jcodec.containers.mp4.boxes.MdtaBox: void parse(java.nio.ByteBuffer)
com.umeng.commonsdk.statistics.noise.ImLatent: long getElapsedTime()
org.simpleframework.xml.core.Collector: void set(org.simpleframework.xml.core.Label,java.lang.Object)
org.simpleframework.xml.core.ClassInstantiator: java.util.List getCreators()
org.simpleframework.xml.stream.InputElement: java.lang.String getName()
com.umeng.analytics.pro.cg: void c()
org.jaudiotagger.audio.SupportedFileFormat$6: org.jaudiotagger.tag.Tag createDefaultTag()
org.simpleframework.xml.core.PrimitiveArray: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.lang.Object)
com.google.android.material.button.MaterialButton: int getInsetTop()
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
com.caij.puremusic.drive.model.PlayListItem$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.simpleframework.xml.stream.PullReader$Entry: java.lang.String getReference()
com.alipay.android.phone.mrpc.core.ad: ad()
com.caij.puremusic.drive.model.GoogleDriveFileResponse$Companion: GoogleDriveFileResponse$Companion()
com.caij.puremusic.drive.model.GoogleDriveFile: java.lang.String component4()
com.umeng.analytics.pro.ae: java.lang.String a(android.content.Context)
org.simpleframework.xml.stream.Format: java.lang.String getProlog()
com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)
com.umeng.analytics.pro.aw: int a(java.lang.String,java.lang.String)
com.caij.puremusic.drive.model.AlbumMetadata: java.lang.String getParentTitle()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int)
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status[] values()
org.jaudiotagger.tag.asf.AsfTagCoverField: java.awt.image.BufferedImage getImage()
com.umeng.commonsdk.statistics.common.DeviceConfig: int getNetworkType(android.content.Context)
com.caij.puremusic.db.model.HistoryEntityQueries$updateHistorySong$1: java.lang.Object invoke(java.lang.Object)
com.umeng.commonsdk.internal.utils.a: long c()
com.tencent.bugly.proguard.r: void a(com.tencent.bugly.proguard.r,boolean)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
org.jaudiotagger.audio.wav.WavTagWriter$BothTagsFileStructure: java.lang.String toString()
com.caij.puremusic.drive.model.Directory: void write$Self(com.caij.puremusic.drive.model.Directory,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.caij.puremusic.drive.model.WebDAVToken: java.lang.String getUsername()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setEnsureMinTouchTargetSize(boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
com.caij.puremusic.db.model.HistoryEntityQueries$deleteById$1: HistoryEntityQueries$deleteById$1(long)
com.caij.puremusic.drive.model.GoogleDriveFile$Companion: GoogleDriveFile$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
org.simpleframework.xml.core.PrimitiveKey: java.lang.Object read(org.simpleframework.xml.stream.InputNode)
org.simpleframework.xml.core.Context: org.simpleframework.xml.core.Session getSession()
com.umeng.commonsdk.internal.utils.c: c()
androidx.appcompat.app.AppCompatDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)
com.caij.puremusic.drive.model.Auth2Token$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.caij.puremusic.drive.model.Directory: Directory(java.lang.String,java.lang.String,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
org.jcodec.containers.mp4.boxes.NodeBox: org.jcodec.containers.mp4.boxes.Box parseChildBox(java.nio.ByteBuffer,org.jcodec.containers.mp4.IBoxFactory)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
com.tencent.mmkv.MMKV: long getMMKVWithAshmemFD(java.lang.String,int,int,java.lang.String)
com.tencent.bugly.proguard.ay: void b(boolean)
org.jaudiotagger.audio.mp3.MPEGFrameHeader: void setSamplingRate()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyLYR: void addLyric(org.jaudiotagger.tag.id3.framebody.FrameBodyUSLT)
org.simpleframework.xml.stream.OutputDocument: void setReference(java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyTRCK: FrameBodyTRCK(byte,java.lang.String)
com.google.common.hash.LittleEndianByteArray$JavaLittleEndianBytes: com.google.common.hash.LittleEndianByteArray$JavaLittleEndianBytes[] $values()
org.simpleframework.xml.core.ParameterContact: java.lang.Class getType()
com.caij.puremusic.drive.model.SubPlayList$Companion: SubPlayList$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.chip.Chip: void setOnCloseIconClickListener(android.view.View$OnClickListener)
androidx.fragment.app.Fragment: void performViewCreated()
org.simpleframework.xml.stream.HyphenStyle: java.lang.String getAttribute(java.lang.String)
com.caij.puremusic.db.model.SongEntityQueries$insert$2: void invoke(kotlin.jvm.functions.Function1)
org.jaudiotagger.audio.mp3.MPEGFrameHeader: java.lang.Integer getSamplingRate()
com.caij.puremusic.drive.model.User$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.umeng.commonsdk.stateless.UMSLEnvelopeBuild$1: void run()
com.tencent.mm.opensdk.modelmsg.LaunchFromWX$Resp: boolean checkArgs()
com.umeng.analytics.pro.bo: void e()
com.tencent.mm.opensdk.modelmsg.WXEmojiObject: int getFileSize(java.lang.String)
org.simpleframework.xml.convert.Reference: Reference(org.simpleframework.xml.strategy.Value,java.lang.Object,java.lang.Class)
code.name.monkey.appthemehelper.common.views.ATEAccentTextView: ATEAccentTextView(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.widget.VirtualLayout: void setElevation(float)
org.jaudiotagger.tag.id3.ID3v23PreferredFrameOrderComparator: org.jaudiotagger.tag.id3.ID3v23PreferredFrameOrderComparator getInstanceof()
com.umeng.commonsdk.statistics.common.ReportPolicy: ReportPolicy()
com.google.android.material.appbar.CollapsingToolbarLayout: void setContentScrim(android.graphics.drawable.Drawable)
com.umeng.commonsdk.framework.UMWorkDispatch: void sendEvent(android.content.Context,int,com.umeng.commonsdk.framework.UMLogDataProtocol,java.lang.Object,long)
com.umeng.analytics.b: void b(android.content.Context)
org.jcodec.containers.mp4.boxes.EsdsBox: int getTrackId()
org.simpleframework.xml.core.InstantiatorBuilder: org.simpleframework.xml.core.Instantiator build(org.simpleframework.xml.core.Detail)
org.jaudiotagger.tag.asf.AsfTagBannerField: AsfTagBannerField()
com.caij.puremusic.db.model.SongEntityQueries$getSongEntity$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.audio.generic.Utils: java.lang.String getString(java.nio.ByteBuffer,int,int,java.nio.charset.Charset)
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.caij.puremusic.model.Home: com.caij.puremusic.model.Home copy$default(com.caij.puremusic.model.Home,java.util.List,int,int,int,java.lang.Object)
org.jaudiotagger.tag.id3.AbstractID3v1Tag: AbstractID3v1Tag()
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.umeng.commonsdk.statistics.proto.c$e: com.umeng.commonsdk.statistics.proto.c$e a(java.lang.String)
com.caij.puremusic.db.model.DriveFileDownUrlInfo: DriveFileDownUrlInfo(java.lang.String,long,java.lang.String,long)
com.google.android.material.slider.BaseSlider: void setThumbElevation(float)
org.jaudiotagger.tag.id3.framebody.FrameBodyWCOM: java.lang.String getIdentifier()
com.caij.puremusic.drive.model.OneDriveFolder: OneDriveFolder(int)
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment getTopEdgeTreatment()
com.umeng.analytics.pro.bo: long F()
androidx.mediarouter.app.MediaRouteButton: void setDialogFactory(androidx.mediarouter.app.MediaRouteDialogFactory)
kotlinx.datetime.Instant$Companion: kotlinx.serialization.KSerializer serializer()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
androidx.fragment.app.DialogFragment: android.content.DialogInterface$OnDismissListener access$100(androidx.fragment.app.DialogFragment)
com.caij.puremusic.drive.model.SubPlayList: java.util.List getEntry()
org.jaudiotagger.tag.id3.AbstractTag: boolean seek(java.nio.ByteBuffer)
org.jaudiotagger.tag.lyrics3.Lyrics3v1: void read(java.nio.ByteBuffer)
com.caij.puremusic.drive.model.MediaStream: boolean getIsTextSubtitleStream()
com.afollestad.materialdialogs.internal.button.DialogActionButtonLayout: com.afollestad.materialdialogs.internal.button.DialogActionButton[] getVisibleButtons()
com.caij.puremusic.drive.model.PlayListSubsonicResponse: java.lang.String component1()
com.caij.puremusic.drive.model.ADriveItem: java.lang.String component3()
org.simpleframework.xml.core.Template: void append(char)
org.simpleframework.xml.core.InstantiatorBuilder: void populate(org.simpleframework.xml.core.Detail)
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query songByPath(java.lang.String,kotlin.jvm.functions.Function18)
org.jcodec.containers.mp4.boxes.MovieHeaderBox: float readVolume(java.nio.ByteBuffer)
com.umeng.analytics.b: b()
com.umeng.analytics.pro.bu: void k()
okhttp3.internal.http2.ErrorCode: int getHttpCode()
com.umeng.commonsdk.statistics.proto.Response$c: void b(com.umeng.analytics.pro.bu,com.umeng.commonsdk.statistics.proto.Response)
org.jaudiotagger.tag.id3.framebody.FrameBodyPIC: FrameBodyPIC(org.jaudiotagger.tag.id3.framebody.FrameBodyAPIC)
com.thegrizzlylabs.sardineandroid.model.Propstat: java.lang.String getStatus()
com.caij.puremusic.drive.model.Metadata: java.lang.String component5()
com.caij.puremusic.drive.model.OneDriveFileResponse: void getContext$annotations()
org.jcodec.containers.mp4.boxes.EsdsBox: org.jcodec.containers.mp4.boxes.EsdsBox$Kind getKind()
com.umeng.commonsdk.statistics.proto.b$b: com.umeng.analytics.pro.cc b()
com.tencent.bugly.proguard.ap: boolean a(java.lang.String)
com.caij.puremusic.drive.model.AlbumResponse$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.jcodec.containers.mp4.boxes.ChannelBox: ChannelBox(org.jcodec.containers.mp4.boxes.Header)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
com.google.android.material.bottomnavigation.BottomNavigationView: void setItemHorizontalTranslationEnabled(boolean)
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean sendNonTaxPay(android.content.Context,com.tencent.mm.opensdk.modelbase.BaseReq)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
org.jcodec.containers.mp4.boxes.SampleSizesBox: void setSizes(int[])
org.simpleframework.xml.stream.NodeReader: org.simpleframework.xml.stream.InputNode readElement(org.simpleframework.xml.stream.InputNode,java.lang.String)
com.google.android.material.bottomsheet.BottomSheetBehavior: int access$500(com.google.android.material.bottomsheet.BottomSheetBehavior)
com.caij.puremusic.db.model.SongEntityQueries$deletePlaylistSongs$2: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.db.model.Album: java.lang.String component9()
org.jaudiotagger.audio.aiff.chunk.FormatVersionChunk: boolean readChunk()
com.yalantis.ucrop.view.widget.AspectRatioTextView: void setAspectRatio(com.yalantis.ucrop.model.AspectRatio)
org.jaudiotagger.audio.mp4.InplaceMP4Editor: java.nio.ByteBuffer fetchBox(java.nio.channels.FileChannel,org.jcodec.containers.mp4.MP4Util$Atom)
org.simpleframework.xml.core.CompositeInlineMap: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.lang.Object)
com.caij.puremusic.db.model.ArtistQueries$artistByName$1: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.drive.model.GoogleDriveFile$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.caij.puremusic.drive.model.OneDriveFolder$$serializer: OneDriveFolder$$serializer()
org.simpleframework.xml.transform.Transformer: org.simpleframework.xml.transform.Transform lookup(java.lang.Class)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatPressedTranslationZ()
org.simpleframework.xml.core.ElementArrayLabel: java.lang.String getPath()
org.simpleframework.xml.transform.LongTransform: java.lang.Long read(java.lang.String)
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean createChatroom(android.content.Context,android.os.Bundle)
org.jaudiotagger.tag.id3.ID3v23Frame: boolean equals(java.lang.Object)
com.umeng.commonsdk.framework.UMWorkDispatch: void access$000(android.os.Message)
org.jaudiotagger.audio.mp4.InplaceMP4Editor: InplaceMP4Editor()
com.alipay.android.phone.mrpc.core.d: org.apache.http.client.RedirectHandler createRedirectHandler()
com.tencent.mm.opensdk.modelbiz.SubscribeMiniProgramMsg$Resp: void fromBundle(android.os.Bundle)
org.simpleframework.xml.convert.AnnotationStrategy: org.simpleframework.xml.strategy.Value read(org.simpleframework.xml.strategy.Type,org.simpleframework.xml.stream.NodeMap,java.util.Map)
com.umeng.commonsdk.statistics.proto.b: com.umeng.analytics.pro.bp o()
androidx.appcompat.widget.SearchView: void setIconified(boolean)
com.caij.puremusic.db.model.Folder: long component1()
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String getSuffix()
com.caij.puremusic.network.model.LastFmAlbum: LastFmAlbum()
com.caij.puremusic.model.DriveFileParcelable: long getCreateTime()
org.simpleframework.xml.core.ParameterMap: ParameterMap()
com.umeng.commonsdk.statistics.proto.a$a: void b(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
com.umeng.commonsdk.statistics.proto.Response$c: void a(com.umeng.analytics.pro.bu,com.umeng.commonsdk.statistics.proto.Response)
com.caij.puremusic.drive.model.MediaContainer: java.util.List getMetadata()
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextView$SuperCaller getSuperCaller()
com.umeng.commonsdk.internal.utils.k: void b(android.content.Context)
org.simpleframework.xml.transform.ByteTransform: java.lang.String write(java.lang.Object)
org.jaudiotagger.tag.images.AndroidImageHandler: boolean isMimeTypeWritable(java.lang.String)
com.google.android.material.chip.Chip: void setCheckedIconTint(android.content.res.ColorStateList)
com.tencent.mm.opensdk.modelbiz.WXQRCodePay$Resp: int getType()
com.google.android.material.slider.Slider: void setThumbStrokeWidthResource(int)
org.jaudiotagger.tag.images.StandardArtwork: java.lang.String getDescription()
com.umeng.commonsdk.vchannel.Sender: void onEvent(android.content.Context,java.lang.String,java.util.Map)
org.jaudiotagger.tag.InvalidTagException: InvalidTagException(java.lang.String,java.lang.Throwable)
com.caij.puremusic.db.model.ServerLyricsQueries$getById$2: ServerLyricsQueries$getById$2()
org.simpleframework.xml.stream.InputAttribute: java.lang.String getName()
com.caij.puremusic.drive.model.GoogleDriveFileResponse: boolean component3()
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
org.simpleframework.xml.core.ConstructorScanner: org.simpleframework.xml.core.ParameterMap getParameters()
org.simpleframework.xml.core.LabelExtractor: java.lang.annotation.Annotation[] getAnnotations(java.lang.annotation.Annotation)
org.simpleframework.xml.stream.Splitter: boolean acronym()
cn.lyric.getter.api.tools.EventTools: void sendLyric(android.content.Context,java.lang.String,boolean,java.lang.String,boolean,java.lang.String,java.lang.String)
com.caij.puremusic.db.model.SongQueries$songByPath$2: SongQueries$songByPath$2()
org.simpleframework.xml.stream.NamespaceMap: java.lang.String setReference(java.lang.String,java.lang.String)
org.jaudiotagger.tag.id3.AbstractTagFrame: java.lang.String toString()
com.umeng.commonsdk.stateless.d$2: int compare(java.lang.Object,java.lang.Object)
org.simpleframework.xml.core.Scanner: java.lang.String getName()
org.simpleframework.xml.core.MethodPartFactory: org.simpleframework.xml.core.MethodName getName(java.lang.reflect.Method,java.lang.annotation.Annotation)
com.thegrizzlylabs.sardineandroid.Sardine: void copy(java.lang.String,java.lang.String)
com.tencent.mm.opensdk.openapi.IWXAPI: void detach()
com.caij.puremusic.drive.model.BaiduFileResponse: com.caij.puremusic.drive.model.BaiduFileResponse copy$default(com.caij.puremusic.drive.model.BaiduFileResponse,int,java.util.List,int,java.lang.Object)
org.jaudiotagger.tag.images.Artwork: void setPictureType(int)
com.caij.puremusic.drive.model.Prop$Companion: kotlinx.serialization.KSerializer serializer()
com.google.android.material.bottomsheet.BottomSheetDialog: void setContentView(int)
com.umeng.commonsdk.statistics.common.MLog: void e(java.lang.Throwable)
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: FrameBodyCOMM(org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM)
org.jaudiotagger.audio.asf.data.MetadataDescriptor: java.lang.String toString()
org.jcodec.containers.mp4.boxes.TrackHeaderBox: void parse(java.nio.ByteBuffer)
org.jaudiotagger.audio.mp4.ReplaceMP4Editor: ReplaceMP4Editor()
com.alipay.apmobilesecuritysdk.face.APSecuritySdk: java.lang.String getSdkVersion()
org.jcodec.containers.mp4.boxes.TrunBox: long getSampleSize(int)
com.google.common.reflect.Types$JavaVersion$4: java.lang.reflect.Type newArrayType(java.lang.reflect.Type)
com.caij.puremusic.db.model.SongQueries$firstSongByAlbumId$2: com.caij.puremusic.db.model.Song invoke(long,java.lang.String,int,int,long,java.lang.String,java.lang.String,long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,long,long)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyLYR: boolean hasTimeStamp()
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: void setupObjectList()
com.caij.puremusic.drive.model.MediaStream: com.caij.puremusic.drive.model.MediaStream copy$default(com.caij.puremusic.drive.model.MediaStream,java.lang.String,int,boolean,int,java.lang.Object)
com.google.android.material.slider.BaseSlider: float getValueOfTouchPositionAbsolute()
org.jaudiotagger.tag.datatype.AbstractString: int getSize()
com.thegrizzlylabs.sardineandroid.model.Activelock: com.thegrizzlylabs.sardineandroid.model.Locktoken getLocktoken()
com.caij.puremusic.model.smartplaylist.ShuffleAllPlaylist$Creator: com.caij.puremusic.model.smartplaylist.ShuffleAllPlaylist[] newArray(int)
org.simpleframework.xml.stream.Format: Format(int)
org.simpleframework.xml.util.WeakCache: java.lang.Object fetch(java.lang.Object)
org.simpleframework.xml.core.AttributeLabel: boolean isAttribute()
com.alipay.apmobilesecuritysdk.f.b: b()
org.jcodec.containers.mp4.boxes.ClipRegionBox: org.jcodec.containers.mp4.boxes.ClipRegionBox createClipRegionBox(short,short,short,short)
org.simpleframework.xml.core.Introspector: java.lang.String getEntry()
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: void setEncryption()
org.jaudiotagger.tag.asf.AsfTag: void addRating(java.lang.String)
org.simpleframework.xml.core.Composite$Injector: Composite$Injector(org.simpleframework.xml.core.Composite,org.simpleframework.xml.core.Composite,org.simpleframework.xml.core.Criteria,org.simpleframework.xml.core.Schema,org.simpleframework.xml.core.Instance)
com.caij.puremusic.util.AlbumUtil$sortAlbumSongs$songs$4: AlbumUtil$sortAlbumSongs$songs$4()
com.thegrizzlylabs.sardineandroid.model.Report: org.w3c.dom.Element getAny()
com.caij.puremusic.views.HeightFitSquareLayout: HeightFitSquareLayout(android.content.Context,android.util.AttributeSet)
com.alipay.apmobilesecuritysdk.face.TMNTokenClient: TMNTokenClient(android.content.Context)
org.jaudiotagger.tag.datatype.Lyrics3Line: java.lang.String writeString()
com.caij.puremusic.db.model.SongQueries$SongQuery: long getId()
com.umeng.commonsdk.statistics.common.HelperUtils: java.lang.String getFileMD5(java.io.File)
com.caij.puremusic.drive.model.SubsonicAlbum: java.lang.String getName()
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
org.jcodec.containers.mp4.boxes.NodeBox: void replaceBox(org.jcodec.containers.mp4.boxes.Box)
org.jaudiotagger.tag.id3.framebody.FrameBodyTYER: FrameBodyTYER(java.nio.ByteBuffer,int)
androidx.fragment.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)
org.jaudiotagger.audio.asf.data.MetadataDescriptor: void setLanguageIndex(int)
com.google.android.material.textfield.TextInputLayout: void setBoxCollapsedPaddingTop(int)
com.caij.puremusic.drive.model.Propstat$Companion: kotlinx.serialization.KSerializer serializer()
org.jaudiotagger.tag.wav.WavTag: org.jaudiotagger.tag.images.Artwork getFirstArtwork()
org.simpleframework.xml.core.Source: org.simpleframework.xml.stream.Style getStyle()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.tencent.mmkv.MMKVRecoverStrategic: com.tencent.mmkv.MMKVRecoverStrategic[] values()
com.caij.puremusic.MainModuleKt$viewModules$1$4: MainModuleKt$viewModules$1$4()
org.simpleframework.xml.core.InstanceFactory: org.simpleframework.xml.core.Instance getInstance(java.lang.Class)
com.caij.puremusic.db.model.SongQueries$SongsByInfoQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.umeng.analytics.pro.f: com.umeng.analytics.pro.f a(android.content.Context)
com.caij.puremusic.drive.model.ArtistItem: void write$Self(com.caij.puremusic.drive.model.ArtistItem,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.caij.puremusic.network.model.LastFmArtist$Artist$Bio: LastFmArtist$Artist$Bio(com.caij.puremusic.network.model.LastFmArtist$Artist)
org.simpleframework.xml.core.Section: java.lang.String getAttribute(java.lang.String)
org.jaudiotagger.logging.XMLTagDisplayFormatter: java.lang.String xmlFullTag(java.lang.String,java.lang.String)
com.caij.puremusic.drive.model.OneDriveItem: java.lang.String toString()
com.tencent.bugly.proguard.as: java.util.List a()
com.umeng.analytics.b: void e()
com.tencent.bugly.BuglyStrategy: boolean isEnableRecordAnrMainStack()
com.umeng.analytics.pro.ci: void b()
com.caij.puremusic.db.model.PlayCountEntityQueries$checkSongExistInPlayCount$2: PlayCountEntityQueries$checkSongExistInPlayCount$2()
org.simpleframework.xml.core.PathParser: void attribute(java.lang.String)
org.jaudiotagger.audio.mp3.VbriFrame: org.jaudiotagger.audio.mp3.VbriFrame parseVBRIFrame(java.nio.ByteBuffer)
com.caij.puremusic.drive.model.PlexLoginResponse: boolean equals(java.lang.Object)
me.tankery.lib.circularseekbar.CircularSeekBar: void setPointerAlphaOnTouch(int)
org.jaudiotagger.tag.id3.ID3v1Tag: void read(java.nio.ByteBuffer)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
com.caij.puremusic.model.ArtistWrapper: java.util.List getSongs()
org.simpleframework.xml.stream.Splitter: void token()
com.caij.puremusic.db.model.SongQueries$SongsByAlumIdQuery: java.lang.String toString()
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: java.util.List patch(java.lang.String,java.util.Map)
org.simpleframework.xml.transform.PackageMatcher: org.simpleframework.xml.transform.Transform matchURL(java.lang.Class)
javax.xml.namespace.QName: java.lang.String getPrefix()
com.caij.puremusic.db.model.SongQueries$songsByAlumId$2: com.caij.puremusic.db.model.Song invoke(long,java.lang.String,int,int,long,java.lang.String,java.lang.String,long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,long,long)
com.caij.puremusic.drive.model.SongItem$Companion: SongItem$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.jaudiotagger.tag.reference.MusicalKey: MusicalKey(java.lang.String,int,java.lang.String)
org.simpleframework.xml.util.Resolver$Stack$Sequence: java.lang.Object next()
org.jaudiotagger.tag.datatype.Lyrics3TimeStamp: Lyrics3TimeStamp(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody)
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
com.tencent.mm.opensdk.constants.ConstantsAPI$WXApp: ConstantsAPI$WXApp()
com.umeng.commonsdk.framework.UMFrUtils: byte[] toByteArray(java.lang.String)
org.simpleframework.xml.core.TextLabel: org.simpleframework.xml.core.Contact getContact()
com.caij.puremusic.db.model.SongEntityQueries: void deletePlaylistSongs(long)
com.thegrizzlylabs.sardineandroid.report.SardineReport: java.lang.Object toJaxb()
org.jaudiotagger.tag.id3.framebody.FrameBodyUnsupported: java.lang.String toString()
org.jaudiotagger.tag.aiff.AiffTag: AiffTag(org.jaudiotagger.tag.id3.AbstractID3v2Tag)
com.google.android.material.textfield.TextInputLayout: void setEndIconActivated(boolean)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
nl.adaptivity.xmlutil.XmlDeclMode: nl.adaptivity.xmlutil.XmlDeclMode[] $values()
com.caij.puremusic.db.model.SongEntity: long getKey()
com.thegrizzlylabs.sardineandroid.Version: Version()
com.thegrizzlylabs.sardineandroid.Sardine: void put(java.lang.String,java.io.File,java.lang.String)
com.caij.puremusic.preferences.DurationPreferenceDialog: DurationPreferenceDialog()
org.jaudiotagger.audio.asf.data.AudioStreamChunk: boolean isErrorConcealed()
com.google.android.material.chip.Chip: float getTextEndPadding()
com.umeng.commonsdk.utils.UMUtils: java.lang.String genId()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.material.search.SearchView$TransitionState: SearchView$TransitionState(java.lang.String,int)
com.umeng.analytics.pro.e$a$a: e$a$a()
com.caij.puremusic.db.model.SongQueries$songsByNameAlbum$2: SongQueries$songsByNameAlbum$2()
com.caij.puremusic.drive.model.PlaylistsMediaContainer: com.caij.puremusic.drive.model.PlaylistsMediaContainer copy$default(com.caij.puremusic.drive.model.PlaylistsMediaContainer,java.util.List,int,java.lang.Object)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyNumberTotal: void setNumber(java.lang.String)
org.jaudiotagger.tag.id3.ID3v23Tag: java.lang.String getFirst(org.jaudiotagger.tag.id3.ID3v23FieldKey)
androidx.core.os.BundleApi21ImplKt: void putSizeF(android.os.Bundle,java.lang.String,android.util.SizeF)
com.caij.puremusic.drive.model.OneDriveFolder: int component1()
org.jaudiotagger.tag.id3.framebody.FrameBodyTCOP: java.lang.String getIdentifier()
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEditTextBoxBackground()
org.simpleframework.xml.core.SessionManager: void close()
org.jcodec.containers.mp4.boxes.EsdsBox: java.lang.String fourcc()
org.jaudiotagger.tag.datatype.PairedTextEncodedStringNullTerminated: org.jaudiotagger.tag.datatype.PairedTextEncodedStringNullTerminated$ValuePairs getValue()
org.simpleframework.xml.core.ElementListUnionLabel: boolean isUnion()
org.simpleframework.xml.core.AttributeException: AttributeException(java.lang.String,java.lang.Object[])
com.umeng.commonsdk.statistics.proto.Response$b: Response$b()
org.simpleframework.xml.core.CacheLabel: boolean isUnion()
org.jaudiotagger.tag.id3.framebody.FrameBodyMCDI: java.lang.String getIdentifier()
com.google.android.material.progressindicator.BaseProgressIndicator: void setAnimatorDurationScaleProvider(com.google.android.material.progressindicator.AnimatorDurationScaleProvider)
org.jaudiotagger.tag.Tag: java.lang.String toString()
org.jaudiotagger.tag.datatype.NumberVariableLength: NumberVariableLength(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody,int)
com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.umeng.commonsdk.statistics.proto.d$c: void a(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
org.jaudiotagger.audio.mp4.InplaceMP4Editor: org.jcodec.containers.mp4.MP4Util$Atom getMoov(java.nio.channels.FileChannel)
com.caij.puremusic.drive.model.Resourcetype$Companion: Resourcetype$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.simpleframework.xml.stream.Formatter: java.lang.String unicode(char)
org.jaudiotagger.tag.asf.AsfTag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
com.alipay.sdk.app.EnvUtils$EnvEnum: EnvUtils$EnvEnum(java.lang.String,int)
org.simpleframework.xml.core.AttributeParameter: java.lang.Class getType()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.util.Iterator iterator()
org.jcodec.containers.mp4.boxes.TrunBox: int flagsGetSampleIsDifferentSample(int)
com.tencent.bugly.proguard.aa: com.tencent.bugly.proguard.aa a(android.content.Context)
com.caij.puremusic.db.model.PlaylistEntityQueries: void insert(com.caij.puremusic.db.model.PlaylistEntity)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSOP: FrameBodyTSOP()
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
org.simpleframework.xml.core.Support: org.simpleframework.xml.stream.Style getStyle()
com.alipay.android.phone.mrpc.core.h: java.lang.Object a(java.lang.Class,com.alipay.android.phone.mrpc.core.aa)
androidx.core.view.PointerIconCompat$Api24Impl: android.view.PointerIcon getSystemIcon(android.content.Context,int)
app.cash.sqldelight.ExecutableQuery: java.lang.Object executeAsOneOrNull()
org.jaudiotagger.audio.mp3.MP3AudioHeader: long getBitRateAsNumber()
com.umeng.vt.diff.Channel: void registerListener(android.content.Context)
com.tencent.mm.opensdk.modelbiz.WXQRCodePay: WXQRCodePay()
com.caij.puremusic.drive.model.GoogleDriveFile: GoogleDriveFile(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,kotlinx.serialization.internal.SerializationConstructorMarker)
com.umeng.analytics.pro.bo$b: bo$b()
androidx.core.view.ViewCompat$Api24Impl: boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)
org.jaudiotagger.tag.id3.AbstractID3v2Frame: boolean equals(java.lang.Object)
org.simpleframework.xml.core.CacheLabel: java.lang.String getOverride()
org.simpleframework.xml.core.ClassInstantiator: java.lang.String toString()
com.google.android.material.radiobutton.MaterialRadioButton: void setUseMaterialThemeColors(boolean)
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage[] values()
com.umeng.commonsdk.statistics.common.d: java.lang.String[] d()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: org.jaudiotagger.tag.id3.AbstractID3v2Tag$FrameAndSubId getFrameAndSubIdFromGenericKey(org.jaudiotagger.tag.FieldKey)
com.afollestad.materialdialogs.internal.button.DialogActionButtonLayout: boolean getStackButtons$core()
com.bumptech.glide.MemoryCategory: MemoryCategory(java.lang.String,int,float)
com.umeng.commonsdk.statistics.proto.c$e: short a()
com.caij.puremusic.db.model.SongQueries$SongsByArtistIdWithLikeQuery: void addListener(app.cash.sqldelight.Query$Listener)
com.tencent.bugly.proguard.ao$a: boolean a(java.lang.String)
com.tencent.mm.opensdk.modelbiz.WXOpenCustomerServiceChat$Resp: void toBundle(android.os.Bundle)
com.caij.puremusic.drive.model.SubsonicPlaylist: com.caij.puremusic.drive.model.SubsonicPlaylist copy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,int,int,java.lang.String,java.lang.String,java.lang.String)
com.tencent.bugly.proguard.as: void c(java.util.ArrayList,java.lang.String)
com.caij.puremusic.drive.model.PlayListsSubsonicResponse$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
org.jaudiotagger.tag.TagOptionSingleton: org.jaudiotagger.tag.TagOptionSingleton getInstance()
com.heinrichreimersoftware.materialintro.view.FadeableViewPager: androidx.viewpager.widget.PagerAdapter getAdapter()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void writeFramesToBufferStream(java.util.Map,java.io.ByteArrayOutputStream)
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
com.thegrizzlylabs.sardineandroid.Sardine: void createDirectory(java.lang.String)
code.name.monkey.appthemehelper.common.prefs.supportv7.ATEPreferenceFragmentCompat: ATEPreferenceFragmentCompat()
org.simpleframework.xml.core.CacheLabel: java.lang.String[] getNames()
com.caij.puremusic.db.model.ServerArtistCoverQueries: void deleteById(java.lang.String)
com.umeng.analytics.pro.ab$1: void onServiceDisconnected(android.content.ComponentName)
code.name.monkey.appthemehelper.common.ATHToolbarActivity: ATHToolbarActivity()
com.umeng.analytics.process.b: java.lang.String a(android.content.Context)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: com.thegrizzlylabs.sardineandroid.DavQuota getQuota(java.lang.String)
org.jaudiotagger.tag.mp4.field.Mp4TagReverseDnsField: boolean isBinary()
com.caij.puremusic.db.model.SongQueries$songsByNameArtist$1: java.lang.Object invoke(java.lang.Object)
com.umeng.commonsdk.statistics.idtracking.h: java.lang.String f()
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean sendOpenCustomerServiceChat(android.content.Context,com.tencent.mm.opensdk.modelbase.BaseReq)
org.jaudiotagger.tag.id3.framebody.FrameBodyEncrypted: void setupObjectList()
org.jaudiotagger.tag.id3.framebody.FrameBodyTRSO: FrameBodyTRSO(java.nio.ByteBuffer,int)
com.caij.puremusic.db.model.SongQueries$delete$2: void invoke(kotlin.jvm.functions.Function1)
com.umeng.analytics.pro.ci: int g()
com.tencent.mm.opensdk.modelmsg.WXStateJumpUrlInfo: WXStateJumpUrlInfo()
org.jaudiotagger.audio.ogg.OggVorbisTagReader: org.jaudiotagger.audio.ogg.OggVorbisTagReader$OggVorbisHeaderSizes readOggVorbisHeaderSizes(java.io.RandomAccessFile)
com.caij.puremusic.drive.model.Directory: java.lang.String component1()
com.umeng.analytics.pro.h: java.util.List a(java.lang.String)
com.umeng.commonsdk.statistics.proto.d: void read(com.umeng.analytics.pro.bu)
com.google.android.material.slider.Slider: android.content.res.ColorStateList getTickInactiveTintList()
org.jaudiotagger.logging.Hex: java.lang.String asHex(int)
com.tencent.mm.opensdk.modelmsg.WXTextObject: void serialize(android.os.Bundle)
com.alipay.sdk.app.PayTask: java.lang.String a(com.alipay.sdk.m.s.a,java.lang.String,java.util.List,java.lang.String,android.app.Activity)
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessView$Req: void fromBundle(android.os.Bundle)
org.repackage.com.vivo.identifier.IdentifierIdClient: void b(int,java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: android.window.OnBackInvokedCallback registerOnBackPressedCallback(java.lang.Object,androidx.appcompat.app.AppCompatDelegateImpl)
org.repackage.com.miui.deviceid.IdentifierManager: java.lang.String c(android.content.Context)
androidx.appcompat.app.AppCompatDelegate$Api33Impl: void localeManagerSetApplicationLocales(java.lang.Object,android.os.LocaleList)
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
org.simpleframework.xml.core.GroupExtractor$Registry: java.util.Iterator iterator()
com.caij.puremusic.db.model.PlaylistEntityQueries$GetPlaylistEntityByIdQuery: void addListener(app.cash.sqldelight.Query$Listener)
com.tencent.bugly.proguard.aa: java.util.Set w()
com.umeng.commonsdk.framework.UMEnvelopeBuild: org.json.JSONObject add2CacheTable(android.content.Context,org.json.JSONObject,org.json.JSONObject,java.lang.String,java.lang.String,java.lang.String)
com.caij.puremusic.drive.model.ImageTags: void write$Self(com.caij.puremusic.drive.model.ImageTags,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
org.jaudiotagger.utils.EqualsUtil: boolean areEqual(boolean,boolean)
com.tencent.mm.opensdk.modelpay.JumpToOfflinePay$Resp: JumpToOfflinePay$Resp()
org.simpleframework.xml.core.Introspector: java.lang.String getPath()
org.jaudiotagger.tag.id3.AggregatedFrame: void addFrame(org.jaudiotagger.tag.id3.AbstractID3v2Frame)
com.tencent.bugly.crashreport.CrashReport: void setAppChannel(android.content.Context,java.lang.String)
org.jaudiotagger.tag.id3.AbstractID3v2Tag$1: org.jaudiotagger.tag.TagField next()
org.simpleframework.xml.stream.PullReader$Start: java.lang.String getName()
org.jaudiotagger.audio.aiff.chunk.CommonChunk: boolean readChunk()
com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleMarginStart(int)
org.jaudiotagger.tag.reference.ISOScript: org.jaudiotagger.tag.reference.ISOScript$Script getScriptByCode(java.lang.String)
org.jaudiotagger.tag.id3.AbstractTag: java.util.Iterator iterator()
com.umeng.commonsdk.statistics.proto.Response: boolean isSetImprint()
com.google.android.material.slider.Slider: float getThumbStrokeWidth()
com.caij.puremusic.drive.model.PlexUser$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
org.jaudiotagger.audio.SupportedFileFormat$2: org.jaudiotagger.tag.Tag createDefaultTag()
com.alipay.apmobilesecuritysdk.e.g: java.lang.String a(android.content.Context,java.lang.String)
com.umeng.commonsdk.config.FieldManager: void a(android.content.Context)
com.caij.puremusic.drive.model.Propstat$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.simpleframework.xml.transform.LongTransform: LongTransform()
org.jaudiotagger.tag.id3.framebody.FrameBodyTDOR: FrameBodyTDOR()
com.umeng.commonsdk.statistics.common.ReportPolicy$DefconPolicy: boolean isValid()
com.caij.puremusic.db.model.ServerArtistCoverQueries$GetByIdQuery: java.lang.String toString()
com.alipay.android.app.IRemoteServiceCallback$Stub: android.os.IBinder asBinder()
org.koin.core.definition.Kind: org.koin.core.definition.Kind[] values()
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessView$Resp: void toBundle(android.os.Bundle)
org.simpleframework.xml.stream.EventNode: boolean isEnd()
com.umeng.analytics.pro.ae: ae()
com.google.android.material.bottomnavigation.BottomNavigationItemView: int getItemLayoutResId()
org.jaudiotagger.tag.asf.AsfTag: java.util.List getArtworkList()
org.jaudiotagger.tag.id3.ID3v22Tag: org.jaudiotagger.tag.id3.AbstractID3v2Tag$FrameAndSubId getFrameAndSubIdFromGenericKey(org.jaudiotagger.tag.FieldKey)
org.jcodec.containers.mp4.boxes.UrlBox: void parse(java.nio.ByteBuffer)
org.jcodec.containers.mp4.boxes.MediaHeaderBox: void setDuration(long)
org.jcodec.containers.mp4.boxes.ReverseDnsBox: ReverseDnsBox(org.jcodec.containers.mp4.boxes.Header)
com.google.android.material.appbar.MaterialToolbar: void setNavigationIconTint(int)
org.jaudiotagger.tag.images.Artwork: boolean setImageFromData()
org.jaudiotagger.tag.datatype.TextEncodedStringSizeTerminated: java.nio.ByteBuffer writeString(java.nio.charset.CharsetEncoder,java.lang.String,int,int)
com.caij.puremusic.db.model.SongQueries$SongsByArtistQuery: java.lang.String getValue()
androidx.fragment.app.Fragment: boolean isHidden()
org.simpleframework.xml.stream.OutputNode: org.simpleframework.xml.stream.Mode getMode()
androidx.preference.Preference: Preference(android.content.Context,android.util.AttributeSet,int)
com.google.android.material.search.SearchBar: android.view.View getCenterView()
androidx.appcompat.widget.Toolbar: android.view.View getNavButtonView()
org.jcodec.containers.mp4.boxes.MovieExtendsHeaderBox: org.jcodec.containers.mp4.boxes.MovieExtendsHeaderBox createMovieExtendsHeaderBox()
org.simpleframework.xml.core.PrimitiveKey: void writeElement(org.simpleframework.xml.stream.OutputNode,java.lang.Object)
code.name.monkey.appthemehelper.common.prefs.supportv7.ATEDialogPreference: ATEDialogPreference(android.content.Context)
com.caij.puremusic.db.model.ServerSongCover: com.caij.puremusic.db.model.ServerSongCover copy$default(com.caij.puremusic.db.model.ServerSongCover,java.lang.String,long,java.lang.String,int,java.lang.Object)
com.google.android.material.bottomappbar.BottomAppBar: void setElevation(float)
org.simpleframework.xml.transform.AtomicLongTransform: java.lang.String write(java.util.concurrent.atomic.AtomicLong)
org.jaudiotagger.tag.id3.framebody.FrameBodyRVAD: FrameBodyRVAD()
com.tencent.bugly.proguard.am: boolean a(java.io.Writer,char[],int,long,long)
com.caij.puremusic.db.model.SongQueries$GetSongBySourceQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.caij.puremusic.drive.model.DropboxDriveFileResponse$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.tag.flac.FlacTag: void setField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
com.caij.puremusic.db.model.PlayCountEntityQueries$CheckSongExistInPlayCountQuery: void removeListener(app.cash.sqldelight.Query$Listener)
androidx.core.view.WindowCompat$Api16Impl: void setDecorFitsSystemWindows(android.view.Window,boolean)
com.google.android.material.button.MaterialButtonToggleGroup: void setEnabled(boolean)
org.jaudiotagger.audio.asf.data.Chunk: long getChunkEnd()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: boolean equals(java.lang.Object)
org.jaudiotagger.audio.wav.WavRIFFHeader: WavRIFFHeader()
android.support.v4.media.RatingCompat$Api19Impl: float getStarRating(android.media.Rating)
org.jcodec.containers.mp4.boxes.MetaValue: double toDouble(byte[])
org.jaudiotagger.tag.id3.framebody.FrameBodyTIT1: FrameBodyTIT1(java.nio.ByteBuffer,int)
com.umeng.commonsdk.statistics.proto.b: b(com.umeng.commonsdk.statistics.proto.b)
com.caij.puremusic.drive.model.PlaylistResponse: PlaylistResponse(com.caij.puremusic.drive.model.PlayListSubsonicResponse,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.thegrizzlylabs.sardineandroid.impl.handler.ExistsResponseHandler: java.lang.Object handleResponse(okhttp3.Response)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.caij.puremusic.fragments.search.SearchFragment$setupChips$chips$1: SearchFragment$setupChips$chips$1()
com.caij.puremusic.drive.model.Auth2Token: int hashCode()
com.caij.puremusic.db.model.PlaylistEntityQueries$getPlaylistEntityById$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.audio.asf.data.MetadataDescriptor: java.lang.Object clone()
org.jaudiotagger.tag.id3.framebody.FrameBodyCRM: void setupObjectList()
org.jaudiotagger.tag.asf.AsfTagField: java.lang.Object clone()
com.caij.puremusic.drive.model.SubsonicSearchResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.SubsonicSearchResponse)
com.tencent.bugly.BuglyStrategy: boolean getCloseErrorCallback()
com.bumptech.glide.integration.okhttp3.OkHttpGlideModule: OkHttpGlideModule()
com.google.common.reflect.TypeToken$TypeFilter$2: boolean apply(java.lang.Object)
org.jaudiotagger.tag.id3.ID3v24Frame: boolean isCommon()
com.umeng.commonsdk.debug.UMLog: void mutlInfo(int,java.lang.String[])
org.simpleframework.xml.core.Signature: Signature(java.lang.reflect.Constructor,java.lang.Class)
org.jaudiotagger.audio.generic.AudioFileWriter2: void writeTag(org.jaudiotagger.audio.AudioFile,org.jaudiotagger.tag.Tag,java.io.RandomAccessFile,java.io.RandomAccessFile)
org.jaudiotagger.tag.images.Artwork: void setMimeType(java.lang.String)
org.jaudiotagger.tag.id3.AbstractID3v2Frame$EncodingFlags: boolean equals(java.lang.Object)
com.umeng.analytics.pro.h: java.util.List b(java.util.List)
org.jaudiotagger.tag.id3.framebody.AbstractID3v2FrameBody: void write(java.io.ByteArrayOutputStream)
com.caij.puremusic.drive.model.WebDAVToken$$serializer: WebDAVToken$$serializer()
com.umeng.analytics.pro.i: void a(org.json.JSONArray)
org.repackage.com.zui.deviceidservice.IDeviceidInterface: boolean c(java.lang.String)
com.thegrizzlylabs.sardineandroid.model.SyncCollection: void setLimit(com.thegrizzlylabs.sardineandroid.model.Limit)
org.jaudiotagger.tag.TagOptionSingleton: void setRemoveTrailingTerminatorOnWrite(boolean)
org.simpleframework.xml.Serializer: java.lang.Object read(java.lang.Object,java.lang.String,boolean)
com.tencent.mm.opensdk.modelbiz.AddCardToWXCardPackage$WXCardItem: AddCardToWXCardPackage$WXCardItem()
com.google.android.material.bottomappbar.BottomAppBar: void setHideOnScroll(boolean)
com.caij.puremusic.db.model.Folder: java.lang.String getTokenJson()
com.umeng.commonsdk.internal.d: org.json.JSONArray k(android.content.Context)
com.caij.puremusic.db.model.HistoryEntityQueries$historySongs$2: com.caij.puremusic.db.model.HistoryEntity invoke(long,long)
org.jaudiotagger.audio.flac.FlacInfoReader: int countMetaBlocks(java.io.File)
org.jaudiotagger.audio.mp3.MPEGFrameHeader: MPEGFrameHeader(byte[])
com.google.android.material.textfield.MaterialAutoCompleteTextView: java.lang.CharSequence getHint()
com.alipay.android.phone.mrpc.core.p: void b(long)
androidx.fragment.app.Fragment: void performLowMemory()
com.caij.puremusic.model.DriveFileParcelable$Creator: java.lang.Object[] newArray(int)
org.simpleframework.xml.util.Resolver: org.simpleframework.xml.util.Match resolve(java.lang.String)
org.simpleframework.xml.core.ObjectScanner: ObjectScanner(org.simpleframework.xml.core.Detail,org.simpleframework.xml.core.Support)
org.simpleframework.xml.core.ElementMapParameter: java.lang.Class getType()
com.caij.puremusic.db.model.ServerAudioFormatQueries$GetByIdQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
org.jaudiotagger.audio.wav.WavCleaner: int readChunk(java.nio.channels.FileChannel)
com.umeng.commonsdk.statistics.proto.e: void f()
org.simpleframework.xml.core.Scanner: org.simpleframework.xml.core.ParameterMap getParameters()
org.simpleframework.xml.transform.StringArrayTransform: java.lang.String write(java.lang.Object)
com.tencent.mm.opensdk.modelbiz.WXChannelStartLive$Resp: int getType()
androidx.preference.PreferenceCategory: PreferenceCategory(android.content.Context,android.util.AttributeSet,int,int)
com.caij.puremusic.network.model.SearchResponse: java.lang.String toString()
org.jaudiotagger.tag.TagOptionSingleton: byte getId3v24DefaultTextEncoding()
com.umeng.commonsdk.statistics.common.MLog: void print(int,java.lang.String,java.lang.String,java.lang.Throwable)
androidx.appcompat.resources.Compatibility$Api15Impl: void getValueForDensity(android.content.res.Resources,int,int,android.util.TypedValue,boolean)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginStart(android.view.ViewGroup$MarginLayoutParams)
org.jcodec.containers.mp4.boxes.AliasBox: org.jcodec.containers.mp4.boxes.AliasBox$ExtraField getExtra(int)
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: boolean isSampleDescriptionIndexAvailable()
com.google.common.hash.Hashing$ChecksumType$1: java.util.zip.Checksum get()
org.jaudiotagger.tag.id3.framebody.FrameBodyLINK: FrameBodyLINK(java.nio.ByteBuffer,int)
org.jaudiotagger.tag.id3.ID3v24Tag: org.jaudiotagger.tag.id3.AbstractID3v2Tag$FrameAndSubId getFrameAndSubIdFromGenericKey(org.jaudiotagger.tag.FieldKey)
org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Object,org.simpleframework.xml.stream.InputNode,org.simpleframework.xml.core.Session)
org.jaudiotagger.tag.id3.valuepair.InterpolationTypes: InterpolationTypes()
org.jaudiotagger.tag.id3.reference.ITunesRating: int convertRatingToFiveStarScale(int)
com.umeng.commonsdk.statistics.common.ULog: void w(java.lang.String,java.lang.Throwable)
org.simpleframework.xml.core.Entry: java.lang.String toString()
org.jaudiotagger.audio.asf.io.ChunkReader: boolean canFail()
com.thegrizzlylabs.sardineandroid.model.Lockscope: Lockscope()
org.simpleframework.xml.util.LimitedCache: boolean contains(java.lang.Object)
com.umeng.commonsdk.statistics.idtracking.Envelope: java.lang.String getSignature(android.content.Context)
androidx.constraintlayout.motion.widget.MotionLayout: java.util.ArrayList getDefinedTransitions()
com.bumptech.glide.manager.LifecycleLifecycle: void onDestroy(androidx.lifecycle.LifecycleOwner)
org.jaudiotagger.tag.mp4.field.Mp4TagTextField: java.lang.String getContent()
org.jcodec.containers.mp4.boxes.MediaBox: MediaBox(org.jcodec.containers.mp4.boxes.Header)
org.simpleframework.xml.ElementMap: java.lang.String key()
org.jaudiotagger.tag.flac.FlacTag: java.util.List getFields(org.jaudiotagger.tag.FieldKey)
com.tencent.bugly.proguard.av: void a()
org.jaudiotagger.tag.id3.framebody.FrameBodySYTC: FrameBodySYTC()
org.simpleframework.xml.core.ConversionInstance: java.lang.Object getInstance(java.lang.Class)
com.caij.puremusic.drive.model.PlayListsSubsonicResponse$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.tencent.bugly.proguard.ao: byte[] c()
com.umeng.analytics.pro.au: com.umeng.analytics.pro.au a(com.umeng.analytics.pro.bu)
org.simpleframework.xml.core.CompositeMap: CompositeMap(org.simpleframework.xml.core.Context,org.simpleframework.xml.core.Entry,org.simpleframework.xml.strategy.Type)
org.jcodec.containers.mp4.boxes.MovieHeaderBox: long getCreated()
com.thegrizzlylabs.sardineandroid.model.Set: com.thegrizzlylabs.sardineandroid.model.Prop getProp()
com.google.android.material.slider.Slider: void setTickTintList(android.content.res.ColorStateList)
org.jaudiotagger.tag.asf.AsfTag: java.util.List getRating()
org.jaudiotagger.audio.asf.data.StreamChunk: java.lang.String prettyPrint(java.lang.String)
io.ktor.util.CaseInsensitiveMap$keys$1: CaseInsensitiveMap$keys$1()
com.caij.puremusic.drive.model.Collection$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.umeng.commonsdk.service.UMGlobalContext: UMGlobalContext()
com.caij.puremusic.MainModuleKt$roomModule$1$7: MainModuleKt$roomModule$1$7()
com.umeng.analytics.pro.i: boolean a(java.lang.String,org.json.JSONObject,com.umeng.analytics.pro.i$a)
com.umeng.commonsdk.utils.a: void c()
org.jaudiotagger.audio.asf.data.GUID: boolean isValid()
com.tencent.bugly.proguard.al: boolean a(java.lang.Class,java.lang.String,java.lang.Object[])
com.caij.puremusic.drive.model.EmbyFoldersResponse: EmbyFoldersResponse(java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
org.jaudiotagger.tag.lyrics3.Lyrics3v2: boolean seek(java.nio.ByteBuffer)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
androidx.customview.view.AbsSavedState: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.umeng.analytics.pro.bo: void a(java.nio.ByteBuffer)
org.jaudiotagger.audio.AudioFileIO: void removeAudioFileModificationListener(org.jaudiotagger.audio.generic.AudioFileModificationListener)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
com.tencent.bugly.proguard.l: void a(short,int)
org.jcodec.containers.mp4.boxes.SampleEntry: void parseExtensions(java.nio.ByteBuffer)
org.simpleframework.xml.core.Persister: Persister(org.simpleframework.xml.strategy.Strategy,org.simpleframework.xml.transform.Matcher)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
com.caij.puremusic.db.model.SongQueries$songsDateLastDesc$2: SongQueries$songsDateLastDesc$2()
com.umeng.commonsdk.utils.c: void c(android.content.Context)
com.google.android.material.navigationrail.NavigationRailView: void setItemMinimumHeight(int)
org.jaudiotagger.audio.real.RealFileReader: org.jaudiotagger.audio.real.RealChunk findPropChunk(java.io.RandomAccessFile)
com.umeng.commonsdk.stateless.d: byte[] a(byte[],byte[])
com.umeng.commonsdk.statistics.proto.e: com.umeng.commonsdk.statistics.proto.e$e a(int)
org.jcodec.containers.mp4.boxes.SoundMediaHeaderBox: short getBalance()
org.simpleframework.xml.core.OverrideValue: int getLength()
com.tencent.bugly.proguard.as: java.util.List b()
com.caij.puremusic.db.model.SongQueries$songsByArtistIdWithLike$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
com.umeng.commonsdk.statistics.common.MLog: void d(java.lang.String,java.lang.Throwable)
com.google.android.material.slider.Slider: android.content.res.ColorStateList getTrackTintList()
com.umeng.commonsdk.utils.UMUtils: java.util.Locale getLocale(android.content.Context)
com.umeng.commonsdk.utils.c: c()
org.jaudiotagger.tag.Tag: java.lang.String getValue(org.jaudiotagger.tag.FieldKey,int)
org.jaudiotagger.audio.asf.data.ContainerType: boolean isWithinValueRange(long)
android.support.v4.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
android.support.v4.media.RatingCompat$Api19Impl: android.media.Rating newPercentageRating(float)
org.jaudiotagger.audio.asf.io.ChunkRemover: org.jaudiotagger.audio.asf.io.ModificationResult modify(org.jaudiotagger.audio.asf.data.GUID,java.io.InputStream,java.io.OutputStream)
com.caij.puremusic.db.model.ServerLyricsQueries: app.cash.sqldelight.Query getById(long)
org.simpleframework.xml.transform.LongTransform: java.lang.String write(java.lang.Long)
org.simpleframework.xml.core.Reflector: java.lang.reflect.ParameterizedType getType(java.lang.reflect.Field)
com.umeng.commonsdk.framework.UMSenderStateNotify: void onConnectionAvailable()
org.jaudiotagger.utils.tree.MutableTreeNode: void remove(int)
com.caij.puremusic.fragments.player.lockscreen.LockScreenControlsFragment: LockScreenControlsFragment()
com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport$SyncLevel: java.lang.String toString()
com.umeng.analytics.pro.bf: bf()
org.jcodec.containers.mp4.boxes.TrackHeaderBox: boolean isOrientation0()
com.caij.puremusic.db.model.ServerLyricsQueries$GetByIdQuery$execute$1: java.lang.Object invoke(java.lang.Object)
com.alipay.android.phone.mrpc.core.a.e: byte[] a()
com.tencent.bugly.proguard.av: java.lang.String a(java.lang.Throwable)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
org.jaudiotagger.tag.id3.ID3v1Tag: org.jaudiotagger.tag.images.Artwork getFirstArtwork()
com.umeng.commonsdk.statistics.b: long a(android.content.Context)
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies: void handlePotentialDeadlock(com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
com.caij.puremusic.drive.model.BaiduFileResponse: BaiduFileResponse(int,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.TlsVersion: TlsVersion(java.lang.String,int,java.lang.String)
com.umeng.commonsdk.internal.utils.a$a: a$a()
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyTextInfo: java.util.List getValues()
com.google.android.material.chip.Chip: void setChipTextResource(int)
com.umeng.analytics.pro.an: java.lang.String toString()
com.umeng.commonsdk.UMConfigure: void init(android.content.Context,java.lang.String,java.lang.String,int,java.lang.String)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: PublicSuffixDatabase()
org.simpleframework.xml.core.TextLabel: java.lang.String toString()
org.simpleframework.xml.stream.EventToken: java.lang.Object getSource()
com.umeng.analytics.pro.bo: void c()
com.tencent.mm.opensdk.modelbiz.WXChannelJumpUrlInfo: WXChannelJumpUrlInfo()
com.tencent.mm.opensdk.modelmsg.WXWebpageObject: boolean checkArgs()
com.caij.puremusic.drive.model.OneDriveItem: com.caij.puremusic.drive.model.OneDriveFolder getFolder()
org.simpleframework.xml.stream.OutputAttribute: void setData(boolean)
org.jaudiotagger.tag.wav.WavTag: long getSizeOfID3TagOnly()
org.jaudiotagger.tag.id3.framebody.FrameBodyUSLT: java.lang.String getLyric()
org.jaudiotagger.tag.id3.AbstractID3v2Frame: java.lang.String getIdentifier()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
org.jaudiotagger.audio.mp3.MP3File: org.jaudiotagger.logging.AbstractTagDisplayFormatter getStructureFormatter()
com.caij.puremusic.drive.model.BaiduDriveItem$$serializer: com.caij.puremusic.drive.model.BaiduDriveItem deserialize(kotlinx.serialization.encoding.Decoder)
org.simpleframework.xml.core.TemplateLabel: boolean isTextList()
com.caij.puremusic.db.model.FolderQueries$SelectByIdQuery: java.lang.String toString()
org.jcodec.containers.mp4.boxes.TrakBox: void fixMediaTimescale(int)
com.umeng.analytics.b: void m()
com.google.android.material.bottomsheet.BottomSheetBehavior: void access$100(com.google.android.material.bottomsheet.BottomSheetBehavior,android.view.View,int,boolean)
com.alipay.apmobilesecuritysdk.f.a: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)
androidx.core.view.ViewGroupCompat$Api21Impl: int getNestedScrollAxes(android.view.ViewGroup)
io.ktor.client.engine.okhttp.OkHttpConfig$config$1: OkHttpConfig$config$1()
com.caij.puremusic.drive.model.SearchResult3$$serializer: com.caij.puremusic.drive.model.SearchResult3 deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$1: DefaultMutableTreeNode$1()
org.jcodec.containers.mp4.boxes.TrunBox: org.jcodec.containers.mp4.boxes.TrunBox createTrunBox2(int,int,int,int[],int[],int[],int[])
org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Class,java.io.InputStream)
com.caij.puremusic.drive.model.AlbumItem: java.lang.String component3()
org.jaudiotagger.tag.id3.ID3v24Tag: ID3v24Tag(org.jaudiotagger.tag.id3.AbstractTag)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: int getFileReadBytes()
org.jaudiotagger.tag.datatype.Lyrics3Line: void setLyric(org.jaudiotagger.tag.datatype.ID3v2LyricLine)
org.simpleframework.xml.util.LimitedCache: boolean removeEldestEntry(java.util.Map$Entry)
org.jaudiotagger.tag.id3.framebody.FrameBodyTOAL: java.lang.String getIdentifier()
org.jaudiotagger.audio.asf.AsfFileReader: org.jaudiotagger.tag.asf.AsfTag getTag(java.io.RandomAccessFile)
com.thegrizzlylabs.sardineandroid.model.Principal: void setUnauthenticated(com.thegrizzlylabs.sardineandroid.model.Unauthenticated)
com.google.android.material.navigation.NavigationBarView: int getItemActiveIndicatorWidth()
androidx.fragment.app.Fragment: boolean isStateSaved()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopStart()
com.umeng.analytics.MobclickAgent$EScenarioType: int toValue()
com.google.android.material.chip.ChipGroup: void setOnCheckedStateChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedStateChangeListener)
org.simpleframework.xml.convert.Reference: boolean isReference()
com.thegrizzlylabs.sardineandroid.model.Acl: java.util.List getAce()
org.jaudiotagger.audio.asf.data.AsfExtendedHeader: org.jaudiotagger.audio.asf.data.MetadataContainer getExtendedContentDescription()
com.caij.puremusic.drive.model.SubsonicAlbum$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.caij.puremusic.drive.model.PlexUser: java.lang.String component5()
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$BreadthFirstEnumeration$Queue$QNode: DefaultMutableTreeNode$BreadthFirstEnumeration$Queue$QNode(org.jaudiotagger.utils.tree.DefaultMutableTreeNode$BreadthFirstEnumeration$Queue,java.lang.Object,org.jaudiotagger.utils.tree.DefaultMutableTreeNode$BreadthFirstEnumeration$Queue$QNode)
com.umeng.common.ISysListener: void onAppPause()
org.jaudiotagger.audio.asf.data.EncryptionChunk: java.lang.String getLicenseURL()
com.umeng.analytics.AnalyticsConfig: boolean isRealTimeDebugMode()
org.simpleframework.xml.core.DefaultDetail: java.lang.Class getSuper()
com.caij.puremusic.db.model.ServerSongCover: java.lang.String component1()
com.caij.puremusic.lyrics.SimpleLrcView: void setMaxHeight2(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyTOWN: FrameBodyTOWN(java.nio.ByteBuffer,int)
org.jaudiotagger.tag.asf.AsfTagBannerField: java.awt.image.BufferedImage getImage()
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: void disableCatchAnrTrace()
org.jaudiotagger.tag.id3.framebody.FrameBodyTDEN: FrameBodyTDEN(byte,java.lang.String)
org.jaudiotagger.audio.opus.OpusFileReader: void shortSummarizeOggPageHeaders(java.io.File)
org.jaudiotagger.tag.lyrics3.Lyrics3v1Iterator: boolean hasNext()
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
org.jaudiotagger.tag.id3.framebody.FrameBodyTALB: FrameBodyTALB(byte,java.lang.String)
org.jaudiotagger.audio.asf.io.WriteableChunk: org.jaudiotagger.audio.asf.data.GUID getGuid()
org.jaudiotagger.audio.generic.GenericTag: java.lang.String getFirst(org.jaudiotagger.tag.FieldKey)
org.jaudiotagger.audio.wav.chunk.WavFactChunk: java.lang.String toString()
com.umeng.analytics.pro.ca: java.util.BitSet a(byte[])
com.umeng.common.b: int d()
org.jaudiotagger.tag.asf.AsfTagTextField: java.nio.charset.Charset getEncoding()
org.slf4j.event.Level: org.slf4j.event.Level valueOf(java.lang.String)
org.simpleframework.xml.util.Cache: void cache(java.lang.Object,java.lang.Object)
org.jcodec.containers.mp4.MP4Util: void writeFullMovie(java.nio.channels.FileChannel,org.jcodec.containers.mp4.MP4Util$Movie)
org.jaudiotagger.audio.mp3.LameFrame: LameFrame(java.nio.ByteBuffer)
org.jaudiotagger.tag.lyrics3.Lyrics3v2: void updateField(java.lang.String)
org.simpleframework.xml.core.ArrayInstance: java.lang.Object getInstance()
com.umeng.commonsdk.framework.UMFrUtils: void syncLegacyEnvelopeIfNeeded(android.content.Context)
org.jaudiotagger.tag.id3.framebody.FrameBodyWXXX: FrameBodyWXXX(org.jaudiotagger.tag.id3.framebody.FrameBodyWXXX)
org.jaudiotagger.tag.datatype.ByteArraySizeTerminated: int getSize()
org.jaudiotagger.tag.id3.ID3v23Frame$EncodingFlags: boolean isNonStandardFlags()
com.afollestad.materialdialogs.internal.main.DialogLayout: void setLayoutMode(com.afollestad.materialdialogs.LayoutMode)
com.umeng.analytics.Gender: com.umeng.analytics.Gender[] values()
com.caij.puremusic.db.model.SongQueries$GetSongCountBySourceIdQuery$execute$1: java.lang.Object invoke(java.lang.Object)
com.tencent.mm.opensdk.diffdev.a.a: android.os.Handler b(com.tencent.mm.opensdk.diffdev.a.a)
com.caij.puremusic.drive.model.ArtistItem: java.lang.String getId()
com.caij.puremusic.drive.model.DropboxDriveItem: java.lang.String getId()
org.jaudiotagger.tag.id3.ID3v1TagField: java.lang.String getContent()
androidx.fragment.app.Fragment: void initLifecycle()
com.caij.puremusic.db.model.ServerAudioFormatQueries$insert$2: java.lang.Object invoke(java.lang.Object)
org.jcodec.containers.mp4.boxes.EsdsBox: void parse(java.nio.ByteBuffer)
org.jaudiotagger.tag.id3.framebody.FrameBodyENCR: FrameBodyENCR(java.nio.ByteBuffer,int)
org.jaudiotagger.tag.id3.framebody.FrameBodyWXXX: void setDescription(java.lang.String)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()
org.simpleframework.xml.core.Contact: boolean isReadOnly()
org.jaudiotagger.audio.asf.data.GUID: byte[] getBytes()
org.simpleframework.xml.core.KeyBuilder$Key: java.lang.String toString()
org.jaudiotagger.logging.LogFormatter: java.lang.String format(java.util.logging.LogRecord)
kotlinx.serialization.json.internal.WriteMode: kotlinx.serialization.json.internal.WriteMode[] $values()
com.umeng.analytics.pro.bo: boolean c(byte)
com.caij.puremusic.drive.model.WebDAVToken: WebDAVToken(int,java.lang.String,java.lang.String,java.lang.String,kotlinx.serialization.internal.SerializationConstructorMarker)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
com.caij.puremusic.db.model.SongEntity: SongEntity(long,long,long)
androidx.core.view.ViewCompat$Api16Impl: boolean hasTransientState(android.view.View)
com.umeng.analytics.pro.an: void i()
org.simpleframework.xml.transform.URLTransform: java.lang.String write(java.net.URL)
com.umeng.commonsdk.UMConfigure: void preInitInternal(android.content.Context,java.lang.String,java.lang.String)
com.umeng.analytics.pro.i$a: com.umeng.analytics.pro.i$a[] values()
com.caij.puremusic.drive.model.PlayLists: int hashCode()
org.jaudiotagger.test.MergeID3AndMP3Files$MP3FileFilter: MergeID3AndMP3Files$MP3FileFilter(org.jaudiotagger.test.MergeID3AndMP3Files)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.lang.Object getEncryptedFrame(java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyTPUB: FrameBodyTPUB(byte,java.lang.String)
org.jcodec.containers.mp4.boxes.GamaExtension: float getGamma()
org.simpleframework.xml.core.Collector: org.simpleframework.xml.core.Variable get(org.simpleframework.xml.core.Label)
org.simpleframework.xml.stream.Attribute: boolean isReserved()
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder: android.os.ParcelFileDescriptor rewind()
org.jaudiotagger.tag.TagOptionSingleton: void setUnsyncTags(boolean)
org.jaudiotagger.utils.DirectByteBufferUtils$AndroidReleaseStrategy: DirectByteBufferUtils$AndroidReleaseStrategy()
com.google.android.material.chip.Chip: void setCloseIconEndPadding(float)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey,java.lang.String)
org.jaudiotagger.logging.XMLTagDisplayFormatter: void addElement(java.lang.String,java.lang.String)
com.caij.puremusic.db.model.ServerSongCoverQueries$GetBySourceQuery: long getSourceId()
com.caij.puremusic.db.model.PlaybackSongQueries$GetPlaybacksByTypeQuery: void addListener(app.cash.sqldelight.Query$Listener)
com.umeng.commonsdk.config.b$a: com.umeng.commonsdk.config.b a()
com.caij.puremusic.drive.model.SubsonicSong: int component7()
org.jaudiotagger.audio.generic.AudioFileWriter2: AudioFileWriter2()
com.umeng.analytics.b: void a(android.content.Context,java.lang.String)
org.repackage.a.a.a.a$a$a: a$a$a(android.os.IBinder)
org.jaudiotagger.audio.generic.Utils: int getIntBE(java.nio.ByteBuffer,int,int)
org.jaudiotagger.tag.wav.WavTag: org.jaudiotagger.tag.wav.WavInfoTag getInfoTag()
org.jaudiotagger.tag.flac.FlacTag: java.lang.String getValue(org.jaudiotagger.tag.FieldKey,int)
com.caij.puremusic.db.model.ServerAudioFormat: long component2()
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyTextInfo: java.lang.String getFirstTextValue()
com.umeng.analytics.pro.bo: void i()
com.caij.puremusic.db.model.SongQueries$songsByNameArtist$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
org.jaudiotagger.tag.aiff.AiffTag: org.jaudiotagger.tag.TagField createCompilationField(boolean)
org.simpleframework.xml.core.ElementLabel: java.lang.annotation.Annotation getAnnotation()
com.caij.puremusic.model.lyrics.AbsSynchronizedLyrics: AbsSynchronizedLyrics()
org.simpleframework.xml.stream.StreamReader: StreamReader(javax.xml.stream.XMLEventReader)
com.umeng.commonsdk.statistics.common.HelperUtils: void safeClose(java.io.InputStream)
com.caij.puremusic.db.model.SongQueries$GetSongCountBySourceIdQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
com.caij.puremusic.db.model.PlaylistEntityQueries$getPlaylistEntityById$2: com.caij.puremusic.db.model.PlaylistEntity invoke(long,java.lang.String)
com.caij.puremusic.drive.model.SongItem: java.lang.String component15()
org.jaudiotagger.audio.ogg.util.OggCRCFactory: OggCRCFactory()
org.simpleframework.xml.core.ElementListParameter$Contact: ElementListParameter$Contact(org.simpleframework.xml.ElementList,java.lang.reflect.Constructor,int)
com.tencent.mm.opensdk.utils.Log: void v(java.lang.String,java.lang.String)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: void unlock(java.lang.String,java.lang.String)
org.jcodec.containers.mp4.boxes.SampleToChunkBox: void doWrite(java.nio.ByteBuffer)
com.tencent.mm.opensdk.modelmsg.WXEnterpriseCardObject: WXEnterpriseCardObject()
org.simpleframework.xml.core.VersionLabel: boolean isData()
org.jaudiotagger.audio.asf.io.CountingOutputstream: void write(byte[],int,int)
org.jaudiotagger.audio.aiff.AiffFileWriter: void writeTag(org.jaudiotagger.tag.Tag,java.nio.channels.FileChannel,java.lang.String)
com.google.common.reflect.Types$JavaVersion$4: boolean jdkTypeDuplicatesOwnerName()
com.caij.puremusic.drive.model.PlexAlbumsResponse$Companion: PlexAlbumsResponse$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.simpleframework.xml.core.CollectionFactory: CollectionFactory(org.simpleframework.xml.core.Context,org.simpleframework.xml.strategy.Type)
com.umeng.commonsdk.vchannel.b: java.lang.String toString()
org.simpleframework.xml.core.MapFactory: java.lang.Object getInstance()
org.jaudiotagger.audio.asf.data.MetadataContainer$DescriptorPointer: boolean equals(java.lang.Object)
org.simpleframework.xml.core.SignatureBuilder$ParameterList: SignatureBuilder$ParameterList()
com.caij.puremusic.drive.model.Media$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.tencent.bugly.proguard.ap: void c(java.lang.String,java.lang.String)
com.umeng.commonsdk.statistics.idtracking.Envelope: byte[] genSignature()
com.tencent.bugly.proguard.s: java.lang.Class b()
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: java.lang.String toString()
androidx.core.view.AccessibilityDelegateCompat: java.util.List getActionList(android.view.View)
com.umeng.analytics.pro.bn$a: bn$a(boolean,boolean,int)
com.umeng.commonsdk.internal.utils.d: java.lang.String d()
org.simpleframework.xml.core.MethodScanner: void insert(org.simpleframework.xml.core.MethodPart,org.simpleframework.xml.core.MethodScanner$PartMap)
org.jaudiotagger.audio.AudioHeader: java.lang.String getBitRate()
org.jaudiotagger.audio.asf.io.EncodingChunkReader: org.jaudiotagger.audio.asf.data.GUID[] getApplyingIds()
com.alipay.apmobilesecuritysdk.e.e: com.alipay.apmobilesecuritysdk.e.f a(android.content.Context)
com.afollestad.materialdialogs.internal.main.DialogLayout: void setDialog(com.afollestad.materialdialogs.MaterialDialog)
com.caij.puremusic.drive.model.AlbumList: AlbumList(int,java.util.List,kotlinx.serialization.internal.SerializationConstructorMarker)
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setFoldingFeatureObserver(androidx.slidingpanelayout.widget.FoldingFeatureObserver)
org.koin.androidx.scope.ScopeHandlerViewModel: ScopeHandlerViewModel()
org.simpleframework.xml.core.PrimitiveScanner: PrimitiveScanner(org.simpleframework.xml.core.Detail)
com.caij.puremusic.db.model.ServerArtistCoverQueries$GetByIdQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
com.tencent.mm.opensdk.modelmsg.SendAuth$Req: SendAuth$Req()
org.simpleframework.xml.util.Cache: java.lang.Object take(java.lang.Object)
org.simpleframework.xml.core.CompositeArray: boolean validate(org.simpleframework.xml.stream.InputNode,java.lang.Class)
org.jaudiotagger.audio.asf.io.CountingInputStream: int read()
com.caij.puremusic.drive.model.PlayListsSubsonicResponse: java.lang.String component2()
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
org.jcodec.containers.mp4.boxes.AliasBox$ExtraField: java.lang.String toString()
com.caij.puremusic.fragments.player.adaptive.AdaptivePlaybackControlsFragment: AdaptivePlaybackControlsFragment()
com.tencent.bugly.crashreport.BuglyLog: void e(java.lang.String,java.lang.String,java.lang.Throwable)
com.caij.puremusic.db.model.HistoryEntity: long component1()
com.tencent.bugly.proguard.at: void g()
org.jaudiotagger.tag.id3.framebody.FrameBodyTDOR: FrameBodyTDOR(java.nio.ByteBuffer,int)
com.thegrizzlylabs.sardineandroid.model.Lockscope: void setExclusive(com.thegrizzlylabs.sardineandroid.model.Exclusive)
com.google.android.material.textfield.TextInputLayout: int getErrorCurrentTextColors()
com.yalantis.ucrop.view.OverlayView: void setCropFrameStrokeWidth(int)
com.umeng.commonsdk.utils.a$1: a$1(com.umeng.commonsdk.utils.a)
com.caij.puremusic.network.model.LastFmTrack$Track$Album: void setAttr(com.caij.puremusic.network.model.LastFmTrack$Track$Album$Attr)
org.jaudiotagger.audio.generic.GenericAudioHeader: void setByteRate(int)
org.jaudiotagger.tag.Tag: boolean hasCommonFields()
org.jaudiotagger.audio.aiff.chunk.AiffChunkType: java.lang.String getCode()
org.jaudiotagger.tag.id3.framebody.FrameBodyTENC: FrameBodyTENC()
org.jaudiotagger.audio.mp3.MP3AudioHeader: long getNumberOfFramesEstimate()
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior()
org.jcodec.containers.mp4.boxes.AliasBox: java.lang.String getFileName()
com.umeng.commonsdk.statistics.internal.d: void onImprintChanged(com.umeng.commonsdk.statistics.idtracking.ImprintHandler$a)
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgram$Req: int getType()
com.caij.puremusic.db.model.ArtistQueries$artistByName$1: ArtistQueries$artistByName$1(kotlin.jvm.functions.Function2)
com.caij.puremusic.db.model.PlaybackSongQueries$GetPlaybacksByTypeQuery$execute$1: java.lang.Object invoke(java.lang.Object)
com.google.android.material.chip.Chip: float getIconStartPadding()
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
com.caij.puremusic.db.model.Artist: java.lang.String toString()
com.umeng.analytics.pro.i: void a(java.lang.String,org.json.JSONObject,android.database.sqlite.SQLiteDatabase,java.lang.String)
com.tencent.mm.opensdk.modelbiz.WXChannelOpenFeed$Resp: boolean checkArgs()
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.db.model.PlaylistEntityQueries$GetPlaylistEntityByIdQuery: java.lang.String toString()
org.jaudiotagger.audio.asf.util.Utils: int readUINT16(java.io.InputStream)
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding valueOf(java.lang.String)
com.caij.puremusic.db.model.SongQueries$songsOrderDateAdd$2: SongQueries$songsOrderDateAdd$2()
org.jaudiotagger.audio.mp4.Flatten$SampleProcessor: java.nio.ByteBuffer processSample(java.nio.ByteBuffer,double,double)
com.google.android.material.navigation.NavigationBarMenuView: int getSelectedItemPosition()
org.simpleframework.xml.core.Composite: void writeElement(org.simpleframework.xml.stream.OutputNode,java.lang.Object,org.simpleframework.xml.core.Converter)
org.jcodec.containers.mp4.boxes.TrackHeaderBox: short getLayer()
org.jaudiotagger.utils.tree.TreeModel: void addTreeModelListener(org.jaudiotagger.utils.tree.TreeModelListener)
com.google.android.material.search.SearchView: void setTransitionState(com.google.android.material.search.SearchView$TransitionState)
com.caij.puremusic.db.model.SearchAlbumResultQueries$clear$1: SearchAlbumResultQueries$clear$1()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyIMG: java.lang.String toString()
org.simpleframework.xml.core.ObjectScanner: org.simpleframework.xml.core.Label getText()
org.jaudiotagger.audio.asf.data.MetadataContainer: long getCurrentAsfChunkSize()
com.caij.puremusic.drive.model.PlexArtistsResponse: int hashCode()
org.jaudiotagger.tag.TagOptionSingleton: java.util.Iterator getOldReplaceWordIterator()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
org.jaudiotagger.tag.id3.framebody.FrameBodyWPUB: FrameBodyWPUB(java.nio.ByteBuffer,int)
com.thegrizzlylabs.sardineandroid.model.SearchRequest: void setQuery(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
com.tencent.bugly.proguard.ab: long i()
androidx.constraintlayout.widget.ConstraintLayout: void setId(int)
androidx.core.view.GravityCompat$Api17Impl: void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
com.caij.puremusic.db.model.PlaylistEntity: java.lang.String component2()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationZ(float)
com.tencent.mm.opensdk.modelmsg.WXAppLaunchData$Builder: android.os.Bundle toBundle(com.tencent.mm.opensdk.modelmsg.WXAppLaunchData)
org.jaudiotagger.tag.id3.ID3v23Frame$EncodingFlags: void unsetCompression()
com.google.android.material.navigation.NavigationBarView: void setSelectedItemId(int)
com.caij.puremusic.db.model.SongQueries$songsByTitle$1: java.lang.Object invoke(java.lang.Object)
com.umeng.commonsdk.statistics.proto.a$c: void a(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
com.caij.puremusic.drive.model.DropboxDriveFileResponse$Companion: kotlinx.serialization.KSerializer serializer()
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String toString()
org.jaudiotagger.audio.generic.AudioFileModificationListener: void fileOperationFinished(java.io.File)
androidx.appcompat.widget.SearchView$Api29Impl: void setInputMethodMode(androidx.appcompat.widget.SearchView$SearchAutoComplete,int)
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: FragmentStrictMode$Flag(java.lang.String,int)
com.caij.puremusic.drive.model.PlexSongsResponse: com.caij.puremusic.drive.model.PlexSongsResponse copy(com.caij.puremusic.drive.model.MediaContainer)
org.simpleframework.xml.core.ObjectScanner: org.simpleframework.xml.core.Function getResolve()
org.jaudiotagger.tag.id3.ID3v24Tag: byte getMajorVersion()
androidx.core.app.BundleCompat$Api18Impl: android.os.IBinder getBinder(android.os.Bundle,java.lang.String)
com.thegrizzlylabs.sardineandroid.DavAce: java.util.List toPrivilege(java.util.List)
org.simpleframework.xml.core.Schema: org.simpleframework.xml.core.Label getVersion()
com.caij.puremusic.drive.model.OneDriveItem: com.caij.puremusic.drive.model.OneDriveItem copy(java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,com.caij.puremusic.drive.model.OneDriveFolder,com.caij.puremusic.drive.model.OneDriveFile,com.caij.puremusic.drive.model.ParentReference)
com.umeng.analytics.pro.h: java.lang.String c(android.content.Context)
com.umeng.commonsdk.statistics.b: org.json.JSONObject a(org.json.JSONObject,org.json.JSONObject)
com.caij.puremusic.drive.model.AMediaContainer$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
io.ktor.websocket.FrameType: int getOpcode()
org.jaudiotagger.audio.asf.io.AsfExtHeaderModifier: boolean isApplicable(org.jaudiotagger.audio.asf.data.GUID)
org.jaudiotagger.audio.opus.OpusInfoReader: OpusInfoReader()
org.jaudiotagger.audio.AudioFile: void delete()
org.jaudiotagger.tag.id3.framebody.FrameBodySYTC: int getTimestampFormat()
org.jaudiotagger.audio.mp3.MP3AudioHeader: void setTrackLength()
org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)
com.tencent.mm.opensdk.modelpay.WXJointPay$JointPayReq: int getType()
org.jaudiotagger.audio.generic.AbstractTag: java.lang.String getFirst(java.lang.String)
org.jaudiotagger.audio.asf.util.Utils: void copy(java.io.InputStream,java.io.OutputStream,long)
com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)
org.jaudiotagger.tag.id3.framebody.FrameBodyWCOP: FrameBodyWCOP(org.jaudiotagger.tag.id3.framebody.FrameBodyWCOP)
com.caij.puremusic.drive.model.JellyfinArtistResponse$$serializer: com.caij.puremusic.drive.model.JellyfinArtistResponse deserialize(kotlinx.serialization.encoding.Decoder)
org.simpleframework.xml.stream.DocumentReader$Start: org.w3c.dom.NamedNodeMap getAttributes()
org.jcodec.containers.mp4.boxes.MovieBox: org.jcodec.containers.mp4.boxes.MovieBox createMovieBox()
com.caij.puremusic.drive.model.DropboxDriveItem: boolean equals(java.lang.Object)
org.simpleframework.xml.stream.OutputAttribute: org.simpleframework.xml.stream.Mode getMode()
com.alipay.android.phone.mrpc.core.k: int d(java.lang.String)
com.caij.puremusic.db.model.SongQueries$SongsByNameAlbumQuery: SongQueries$SongsByNameAlbumQuery(com.caij.puremusic.db.model.SongQueries,java.lang.String,java.lang.String,kotlin.jvm.functions.Function1)
com.caij.puremusic.lyrics.LrcView: void setTimelineColor(int)
com.caij.puremusic.model.AbsCustomPlaylist: java.util.List songs()
org.jaudiotagger.tag.id3.ID3v22Tag: ID3v22Tag(org.jaudiotagger.tag.id3.AbstractTag)
org.simpleframework.xml.strategy.Loader: java.lang.ClassLoader getClassLoader()
com.umeng.analytics.pro.s: void b(android.content.Context)
com.caij.puremusic.drive.model.FMediaContainer$Companion: kotlinx.serialization.KSerializer serializer()
androidx.fragment.app.Fragment: void startPostponedEnterTransition()
org.jaudiotagger.tag.id3.framebody.FrameBodyTCOM: FrameBodyTCOM(byte,java.lang.String)
org.simpleframework.xml.core.Context: org.simpleframework.xml.core.Schema getSchema(java.lang.Class)
org.jaudiotagger.tag.TagOptionSingleton: boolean isLyrics3KeepEmptyFieldIfRead()
com.tencent.bugly.proguard.p: boolean a(com.tencent.bugly.proguard.aa)
org.simpleframework.xml.core.Expression: org.simpleframework.xml.core.Expression getPath(int)
com.tencent.bugly.proguard.t: int compareTo(java.lang.Object)
org.jaudiotagger.tag.images.AndroidArtwork: void setBinaryData(byte[])
com.r0adkll.slidr.model.SlidrPosition: com.r0adkll.slidr.model.SlidrPosition[] values()
androidx.appcompat.app.AppCompatDialog: boolean superDispatchKeyEvent(android.view.KeyEvent)
com.caij.puremusic.drive.model.User: java.lang.String component2()
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeColor()
com.caij.puremusic.db.model.ArtistQueries$searchArtistByName$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
org.jaudiotagger.tag.id3.valuepair.ImageFormats: java.lang.String getFormatForMimeType(java.lang.String)
org.simpleframework.xml.core.DefaultScanner: boolean isEmpty()
com.thegrizzlylabs.sardineandroid.model.QuotaAvailableBytes: java.util.List getContent()
com.tencent.bugly.proguard.am: long a(java.lang.String,java.lang.String,java.lang.String)
com.alipay.apmobilesecuritysdk.e.a: com.alipay.apmobilesecuritysdk.e.b a(java.lang.String)
org.jaudiotagger.audio.aiff.AiffFileReader: org.jaudiotagger.tag.Tag getTag(java.nio.channels.FileChannel,java.lang.String)
com.alipay.android.phone.mrpc.core.p: p(com.alipay.android.phone.mrpc.core.HttpUrlHeader,int,java.lang.String,byte[])
androidx.customview.widget.ViewDragHelper$Callback: void onEdgeTouched(int,int)
org.simpleframework.xml.transform.ShortTransform: java.lang.String write(java.lang.Object)
com.google.android.material.datepicker.DayViewDecorator: DayViewDecorator()
org.jaudiotagger.tag.id3.framebody.FrameBodyGRID: java.lang.String getOwner()
com.caij.puremusic.db.model.SongEntityQueries$GetSongEntityQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.simpleframework.xml.core.OverrideType: java.lang.Class getType()
com.google.android.material.checkbox.MaterialCheckBox: void setErrorShown(boolean)
com.umeng.commonsdk.statistics.idtracking.e: void e()
org.jcodec.containers.mp4.boxes.ReverseDnsBox$RdnsNameBox: java.lang.String getName()
com.alipay.apmobilesecuritysdk.d.c: java.util.Map a(android.content.Context)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
com.tencent.mm.opensdk.modelbiz.WXLaunchWxaRedirectingPage$Req: boolean checkArgs()
org.jaudiotagger.audio.generic.AudioFileModificationAdapter: AudioFileModificationAdapter()
org.jaudiotagger.tag.id3.valuepair.ImageFormats: boolean binaryDataIsPdfFormat(byte[])
nl.adaptivity.xmlutil.core.KtXmlWriter$EscapeMode: nl.adaptivity.xmlutil.core.KtXmlWriter$EscapeMode[] $values()
com.umeng.analytics.pro.av: void read(com.umeng.analytics.pro.bu)
androidx.core.view.ViewCompat$Api18Impl: android.graphics.Rect getClipBounds(android.view.View)
com.thegrizzlylabs.sardineandroid.model.Link: Link()
org.simpleframework.xml.core.Decorator: void decorate(org.simpleframework.xml.stream.OutputNode,org.simpleframework.xml.core.Decorator)
com.caij.puremusic.db.model.ServerSongCoverQueries$insert$2: ServerSongCoverQueries$insert$2()
com.google.android.material.bottomsheet.BottomSheetBehavior: void onDetachedFromLayoutParams()
org.jaudiotagger.tag.id3.ID3v11Tag: ID3v11Tag(java.io.RandomAccessFile)
androidx.fragment.app.Fragment: java.lang.Object getEnterTransition()
com.caij.puremusic.drive.model.PlaylistMetadata: java.lang.String getTitle()
androidx.slidingpanelayout.widget.SlidingPaneLayout: androidx.core.graphics.Insets getSystemGestureInsets()
com.caij.puremusic.drive.webdav.WebDAVDriveEngine$listFile$xml$1: WebDAVDriveEngine$listFile$xml$1()
com.google.android.material.navigation.NavigationBarMenuView: void setItemActiveIndicatorEnabled(boolean)
com.umeng.vt.diff.Event: java.lang.String textPropertyFromView(android.view.View)
com.google.android.material.search.SearchView: void setVisible(boolean)
org.jcodec.containers.mp4.boxes.TimecodeSampleEntry: org.jcodec.containers.mp4.boxes.TimecodeSampleEntry createTimecodeSampleEntry(int,int,int,int)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.lang.String getFirst(java.lang.String)
org.jcodec.containers.mp4.boxes.TimecodeSampleEntry: int getTimescale()
com.caij.puremusic.drive.model.JellyfinFolder: java.lang.String getCollectionType()
io.ktor.util.CaseInsensitiveMap$entries$2: CaseInsensitiveMap$entries$2()
com.caij.puremusic.db.model.PlaybackSong: com.caij.puremusic.db.model.PlaybackSong copy(long,int,long,int)
com.caij.puremusic.drive.model.OneDriveFile: java.lang.String toString()
org.jcodec.containers.mp4.boxes.TrunBox: int[] access$402(org.jcodec.containers.mp4.boxes.TrunBox,int[])
org.jaudiotagger.tag.id3.framebody.FrameBodyTPUB: FrameBodyTPUB(org.jaudiotagger.tag.id3.framebody.FrameBodyTPUB)
com.umeng.analytics.pro.f$a: f$a()
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: int getIndex(org.jaudiotagger.utils.tree.TreeNode)
kotlin.random.Random$Default: Random$Default()
org.simpleframework.xml.stream.Attribute: java.lang.String getValue()
com.caij.puremusic.db.model.ServerArtistCoverQueries$deleteSongBySource$2: java.lang.Object invoke(java.lang.Object)
com.umeng.common.ISysListener: void onAppResume()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.caij.puremusic.drive.model.MediaStream$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: boolean checkArgs()
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
com.caij.puremusic.db.model.ServerAudioFormat: ServerAudioFormat(long,long,java.lang.String,java.lang.String,java.lang.String)
com.thegrizzlylabs.sardineandroid.Sardine: void move(java.lang.String,java.lang.String,boolean,java.lang.String)
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: boolean onFileLock(java.lang.String)
com.google.android.material.chip.Chip: void setTextStartPadding(float)
io.ktor.client.HttpClient$3$1: HttpClient$3$1()
org.simpleframework.xml.core.PathParser$PathSection: int getIndex()
com.caij.puremusic.drive.model.AMediaContainer$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.jaudiotagger.audio.aiff.AiffTagWriter: void writeDataToFile(java.nio.channels.FileChannel,java.nio.ByteBuffer)
org.simpleframework.xml.stream.DocumentReader$Text: java.lang.Object getSource()
org.jaudiotagger.tag.TagOptionSingleton: boolean isUnsyncTags()
com.caij.puremusic.network.model.LastFmAlbum$Album: LastFmAlbum$Album()
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleMargin()
org.jaudiotagger.tag.id3.framebody.FrameBodyPRIV: FrameBodyPRIV(java.nio.ByteBuffer,int)
com.caij.vip.PayBody: PayBody()
org.simpleframework.xml.strategy.Allocate: int getLength()
com.alipay.sdk.m.j.c: c(java.lang.String,int,int,java.lang.String)
org.simpleframework.xml.core.ElementArrayLabel: org.simpleframework.xml.core.Converter getConverter(org.simpleframework.xml.core.Context)
org.simpleframework.xml.core.CompositeInlineList: java.lang.Object read(org.simpleframework.xml.stream.InputNode)
org.jaudiotagger.audio.asf.io.ChunkModifier: org.jaudiotagger.audio.asf.io.ModificationResult modify(org.jaudiotagger.audio.asf.data.GUID,java.io.InputStream,java.io.OutputStream)
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: boolean a(java.lang.String,boolean)
com.caij.puremusic.drive.model.SubsonicResponse: com.caij.puremusic.drive.model.AlbumList component3()
com.umeng.analytics.b: java.lang.Object e(android.content.Context,java.lang.String)
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.umeng.commonsdk.statistics.proto.d$a: void b(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
com.tencent.bugly.crashreport.crash.CrashDetailBean: CrashDetailBean(android.os.Parcel)
com.umeng.commonsdk.UMConfigure: java.lang.String[] getTestDeviceInfo(android.content.Context)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: void setAllowsChildren(boolean)
com.umeng.commonsdk.UMConfigureImpl$1: UMConfigureImpl$1()
com.umeng.analytics.pro.y: boolean j(android.content.Context)
com.umeng.commonsdk.debug.UMRTLog: void i(java.lang.String,java.lang.String)
com.caij.puremusic.db.model.AlbumQueries: void insert(com.caij.puremusic.db.model.Album)
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$getById$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
com.tencent.mm.opensdk.modelbiz.WXChannelOpenFeed$Resp: WXChannelOpenFeed$Resp(android.os.Bundle)
com.caij.puremusic.drive.model.ArtistItem: java.lang.String component4()
org.simpleframework.xml.stream.CamelCaseBuilder$Element: CamelCaseBuilder$Element(org.simpleframework.xml.stream.CamelCaseBuilder,java.lang.String)
com.google.android.material.navigation.NavigationBarMenuView: void setItemActiveIndicatorHeight(int)
com.caij.puremusic.db.model.SongQueries$SongsByIdsQuery: java.util.Collection getId()
org.jcodec.containers.mp4.boxes.MetaValue: org.jcodec.containers.mp4.boxes.MetaValue createString(java.lang.String)
com.umeng.commonsdk.internal.utils.e: e()
com.umeng.commonsdk.debug.UMRTLog: void sw(java.lang.String,java.lang.String)
org.jaudiotagger.tag.id3.AbstractTag: AbstractTag(org.jaudiotagger.tag.id3.AbstractTag)
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$insert$2: DriveFileDownUrlInfoQueries$insert$2()
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
com.tencent.mm.opensdk.modelmsg.SendMessageToWX: SendMessageToWX()
com.caij.puremusic.drive.model.AlbumListResponse: int hashCode()
androidx.core.graphics.BlendModeUtils$Api29Impl: java.lang.Object obtainBlendModeFromCompat(androidx.core.graphics.BlendModeCompat)
com.umeng.commonsdk.utils.c: long b(android.content.Context)
com.tencent.bugly.proguard.bf: bf(android.os.Handler,java.lang.String)
com.google.android.material.button.MaterialButton: int getInsetBottom()
org.jaudiotagger.audio.mp4.InplaceMP4Editor: boolean rewriteBox(java.nio.ByteBuffer,org.jcodec.containers.mp4.boxes.Box)
com.tencent.mm.opensdk.modelbiz.OpenWebview$Resp: void toBundle(android.os.Bundle)
com.google.android.gms.internal.play_billing.zzex: com.google.android.gms.internal.play_billing.zzex[] values()
com.tencent.bugly.crashreport.CrashReport: void testANRCrash()
com.tencent.mm.opensdk.modelpay.WXJointPay$JointPayReq: boolean checkArgs()
com.umeng.commonsdk.statistics.proto.c: boolean m()
org.jaudiotagger.tag.datatype.TextEncodedStringSizeTerminated: java.nio.ByteBuffer writeStringUTF16BEBOM(java.lang.String,int,int)
org.simpleframework.xml.core.Caller: void validate(java.lang.Object)
com.caij.puremusic.drive.model.Response: Response(int,java.lang.String,java.lang.String,java.util.List,kotlinx.serialization.internal.SerializationConstructorMarker)
com.alipay.android.phone.mrpc.core.o: o(java.lang.String)
com.google.android.material.slider.Slider: void setHaloRadiusResource(int)
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgramEnvironment: WXPreloadMiniProgramEnvironment()
org.simpleframework.xml.strategy.ReadGraph: org.simpleframework.xml.strategy.Value readValue(org.simpleframework.xml.strategy.Type,java.lang.Class,org.simpleframework.xml.stream.NodeMap)
com.caij.puremusic.drive.model.SubsonicAlbum$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.alipay.apmobilesecuritysdk.c.b: b()
androidx.fragment.app.Fragment: boolean isInLayout()
com.alipay.apmobilesecuritysdk.e.i: java.lang.String f()
com.caij.puremusic.db.model.SongQueries$SearchSongsByTitleQuery$execute$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.audio.ogg.OggVorbisTagReader$OggVorbisHeaderSizes: int getCommentHeaderSize()
org.jcodec.containers.mp4.boxes.TimeToSampleBox$TimeToSampleEntry: TimeToSampleBox$TimeToSampleEntry(int,int)
com.google.android.material.progressindicator.LinearProgressIndicator: void setIndicatorColor(int[])
com.caij.puremusic.db.model.PlaylistEntityQueries$GetPlaylistEntityByIdQuery$execute$1: PlaylistEntityQueries$GetPlaylistEntityByIdQuery$execute$1(com.caij.puremusic.db.model.PlaylistEntityQueries$GetPlaylistEntityByIdQuery)
com.umeng.analytics.pro.bn: com.umeng.analytics.pro.bp l()
org.jaudiotagger.audio.AudioFileIO: void checkFileExists(java.io.File)
com.caij.puremusic.db.model.PlaybackSong: PlaybackSong(long,int,long,int)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
org.simpleframework.xml.core.TreeModel: int getIndex()
org.jaudiotagger.tag.id3.ID3v22Tag: ID3v22Tag(org.jaudiotagger.tag.id3.ID3v22Tag)
org.jcodec.containers.mp4.boxes.ClipRegionBox: int estimateSize()
org.simpleframework.xml.stream.OutputBuffer: void append(java.lang.String,int,int)
com.caij.puremusic.drive.model.MediaStream: MediaStream(java.lang.String,int,boolean)
com.google.android.exoplayer2.upstream.RawResourceDataSource: android.net.Uri buildRawResourceUri(int)
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: void writeToParcel(android.os.Parcel,int)
org.simpleframework.xml.core.Comparer: boolean equals(java.lang.annotation.Annotation,java.lang.annotation.Annotation)
com.umeng.umzid.b: b()
com.caij.puremusic.db.model.PlaylistEntityQueries$playlistByName$1: PlaylistEntityQueries$playlistByName$1(kotlin.jvm.functions.Function2)
com.caij.puremusic.network.model.TokenStore: com.caij.puremusic.network.model.TokenData getToken()
org.jaudiotagger.audio.asf.data.MetadataDescriptor: boolean getBoolean()
org.repackage.com.meizu.flyme.openidsdk.OpenId: boolean a()
com.umeng.commonsdk.vchannel.Sender: void handleEvent(android.content.Context,com.umeng.commonsdk.vchannel.b)
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy[] values()
com.caij.puremusic.drive.model.PlexPlaylistsResponse: PlexPlaylistsResponse(com.caij.puremusic.drive.model.PlaylistsMediaContainer)
org.simpleframework.xml.core.CompositeListUnion: java.lang.Object readText(org.simpleframework.xml.stream.InputNode,java.lang.Object)
com.caij.puremusic.drive.model.PlaylistMetadata: PlaylistMetadata(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,kotlinx.serialization.internal.SerializationConstructorMarker)
com.tencent.mm.opensdk.modelmsg.WXVideoFileObject: WXVideoFileObject(java.lang.String)
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: void testCrash()
org.jaudiotagger.tag.id3.framebody.FrameBodyUSER: void setupObjectList()
org.jaudiotagger.tag.datatype.MultipleTextEncodedStringNullTerminated: MultipleTextEncodedStringNullTerminated(org.jaudiotagger.tag.datatype.MultipleTextEncodedStringNullTerminated)
com.tencent.bugly.crashreport.CrashReport: void postCatchedException(java.lang.Throwable,java.lang.Thread)
com.umeng.commonsdk.UMConfigure: java.lang.String getUmengZID(android.content.Context)
androidx.preference.TwoStatePreference: TwoStatePreference(android.content.Context,android.util.AttributeSet,int)
com.google.android.material.bottomsheet.BottomSheetDialog: void onDetachedFromWindow()
org.simpleframework.xml.convert.RegistryStrategy: RegistryStrategy(org.simpleframework.xml.convert.Registry,org.simpleframework.xml.strategy.Strategy)
org.simpleframework.xml.core.Entry: org.simpleframework.xml.core.Contact getContact()
com.google.android.material.slider.Slider: android.content.res.ColorStateList getTrackInactiveTintList()
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: org.jaudiotagger.utils.tree.TreeNode getLastChild()
org.simpleframework.xml.core.Detail: org.simpleframework.xml.Namespace getNamespace()
org.simpleframework.xml.core.Context: org.simpleframework.xml.core.Decorator getDecorator(java.lang.Class)
androidx.fragment.app.Fragment: void setExitTransition(java.lang.Object)
com.caij.puremusic.drive.model.AlbumResponse: com.caij.puremusic.drive.model.AlbumResponse copy(com.caij.puremusic.drive.model.AlbumSubsonicResponse)
org.jaudiotagger.tag.lyrics3.Lyrics3v1Iterator: void remove()
com.umeng.vt.diff.Event: java.lang.String getPageName(android.view.View)
com.google.android.material.search.SearchBar: void setStrokeWidth(float)
com.caij.puremusic.drive.model.Auth2Token: java.lang.String getToken_type()
org.jaudiotagger.tag.id3.ID3v22Frame: ID3v22Frame(java.lang.String)
org.jaudiotagger.tag.id3.valuepair.MusicianCredits: boolean isKey(java.lang.String)
com.umeng.analytics.pro.bo: int w()
org.jaudiotagger.tag.datatype.NumberHashMap: java.util.Map getValueToKey()
org.simpleframework.xml.core.PathParser: void parse(java.lang.String)
com.thegrizzlylabs.sardineandroid.Sardine: void ignoreCookies()
org.simpleframework.xml.core.Detail: java.lang.reflect.Constructor[] getConstructors()
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$1: CycleDetectingLockFactory$Policies$1(java.lang.String,int)
org.jcodec.containers.mp4.MP4Util: org.jcodec.containers.mp4.MP4Util$Movie parseFullMovie(java.io.File)
org.simpleframework.xml.core.Variable: boolean isData()
com.caij.puremusic.drive.model.JellyfinFolder$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.JellyfinFolder)
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
com.tencent.bugly.proguard.s: long f()
com.alipay.android.phone.mrpc.core.HttpException: int getCode()
com.caij.puremusic.drive.model.OneDriveItem$Companion: kotlinx.serialization.KSerializer serializer()
org.jaudiotagger.tag.id3.framebody.FrameBodyWOAS: java.lang.String getIdentifier()
com.umeng.commonsdk.statistics.noise.ABTest: boolean isInTest()
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getApplicationLable(android.content.Context)
com.alipay.sdk.m.u.g: int a()
com.umeng.commonsdk.internal.utils.h: boolean d()
kotlinx.coroutines.internal.ThreadContextKt$updateState$1: ThreadContextKt$updateState$1()
com.google.android.material.slider.Slider: void setTickVisible(boolean)
com.caij.puremusic.drive.model.ADriveFileResponse$Companion: ADriveFileResponse$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.caij.puremusic.db.model.ServerSongCover: ServerSongCover(java.lang.String,long,java.lang.String)
org.jaudiotagger.tag.datatype.StringSizeTerminated: boolean equals(java.lang.Object)
org.jaudiotagger.audio.ogg.util.OggPageHeader: org.jaudiotagger.audio.ogg.util.OggPageHeader createCommentHeader(int,boolean,int,int)
com.tencent.mm.opensdk.modelbiz.OpenBusiLuckyMoney$Req: void toBundle(android.os.Bundle)
com.caij.puremusic.db.model.SongQueries$songByPath$2: com.caij.puremusic.db.model.Song invoke(long,java.lang.String,int,int,long,java.lang.String,java.lang.String,long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,long,long)
org.jaudiotagger.tag.id3.framebody.FrameBodyTYER: FrameBodyTYER()
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean access$700(com.google.android.material.bottomsheet.BottomSheetBehavior)
com.umeng.analytics.pro.bf: com.umeng.analytics.pro.bz d()
org.simpleframework.xml.core.ModelList: org.simpleframework.xml.core.Model lookup(int)
com.google.common.collect.MapMakerInternalMap$Strength$2: com.google.common.base.Equivalence defaultEquivalence()
org.jaudiotagger.tag.mp4.field.Mp4FieldType: int getFileClassId()
com.caij.puremusic.drive.model.PlaylistsMediaContainer$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.jaudiotagger.tag.id3.framebody.FrameBodyAPIC: void setDescription(java.lang.String)
com.yalantis.ucrop.view.TransformImageView: void setScaleType(android.widget.ImageView$ScaleType)
com.caij.puremusic.db.model.ServerArtistCoverQueries$getById$2: com.caij.puremusic.db.model.ServerArtistCover invoke(java.lang.String,long,java.lang.String)
org.simpleframework.xml.strategy.Loader: java.lang.ClassLoader getCallerClassLoader()
com.caij.puremusic.db.model.SongEntityQueries$GetPlaylistLastAddSongQuery: SongEntityQueries$GetPlaylistLastAddSongQuery(com.caij.puremusic.db.model.SongEntityQueries,long,kotlin.jvm.functions.Function1)
com.umeng.commonsdk.statistics.internal.c: void c()
com.caij.puremusic.drive.model.BaiduFileResponse: BaiduFileResponse(int,int,java.util.List,kotlinx.serialization.internal.SerializationConstructorMarker)
com.caij.puremusic.drive.model.SubsonicSong: boolean equals(java.lang.Object)
com.caij.puremusic.db.model.SongQueries$FirstSongByAlbumIdQuery: void removeListener(app.cash.sqldelight.Query$Listener)
org.jcodec.containers.mp4.boxes.SampleDescriptionBox: org.jcodec.containers.mp4.boxes.SampleDescriptionBox createSampleDescriptionBox(org.jcodec.containers.mp4.boxes.SampleEntry[])
com.caij.puremusic.drive.model.AlbumArtist$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
com.umeng.umzid.ZIDManager$a: ZIDManager$a(com.umeng.umzid.ZIDManager,android.content.Context,com.umeng.umzid.IZIDCompletionCallback)
org.simpleframework.xml.core.DefaultScanner: java.util.List getSignatures()
com.alipay.android.phone.mrpc.core.k: int b(java.lang.String)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
org.simpleframework.xml.stream.NodeReader: void fillText(org.simpleframework.xml.stream.InputNode)
org.jaudiotagger.audio.wav.WavTagWriter: void writeInfoChunk(java.nio.channels.FileChannel,org.jaudiotagger.tag.wav.WavInfoTag,java.nio.ByteBuffer)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextAppearance(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyTDAT: FrameBodyTDAT()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
com.thegrizzlylabs.sardineandroid.Sardine: com.thegrizzlylabs.sardineandroid.DavAcl getAcl(java.lang.String)
com.tencent.mm.opensdk.modelpay.PayReq$Options: void fromBundle(android.os.Bundle)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
com.umeng.analytics.pro.a$a$a: boolean a()
com.caij.puremusic.drive.model.Metadata$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.thegrizzlylabs.sardineandroid.Sardine: java.util.List patch(java.lang.String,java.util.List,java.util.List)
com.caij.puremusic.drive.model.AlbumArtist$$serializer: com.caij.puremusic.drive.model.AlbumArtist deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.drive.model.GoogleDriveFile: com.caij.puremusic.drive.model.GoogleDriveFile copy$default(com.caij.puremusic.drive.model.GoogleDriveFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyWOAR: FrameBodyWOAR(java.lang.String)
com.caij.puremusic.drive.model.SubsonicPlaylist: java.lang.String getCoverArt()
org.simpleframework.xml.transform.EnumTransform: java.lang.Enum read(java.lang.String)
org.jaudiotagger.tag.asf.AsfTagField: void copyContent(org.jaudiotagger.tag.TagField)
com.umeng.common.a: java.lang.String b(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPasswordVisibilityToggleContentDescription()
com.caij.puremusic.db.model.SearchAlbumResultQueries$getById$1: SearchAlbumResultQueries$getById$1(kotlin.jvm.functions.Function2)
org.jaudiotagger.tag.id3.ID3v1TagField: void copyContent(org.jaudiotagger.tag.TagField)
com.tencent.bugly.proguard.aa: boolean D()
com.caij.puremusic.drive.model.AMetadata: java.lang.String component3()
org.simpleframework.xml.core.CompositeValue: boolean validate(org.simpleframework.xml.stream.InputNode,java.lang.String)
com.umeng.analytics.b: void d(android.content.Context)
org.jaudiotagger.audio.aiff.AiffAudioHeader: java.lang.String toString()
com.caij.puremusic.db.model.Artist: com.caij.puremusic.db.model.Artist copy$default(com.caij.puremusic.db.model.Artist,long,java.lang.String,int,java.lang.Object)
org.simpleframework.xml.core.Entry: boolean isEmpty(java.lang.String)
org.jaudiotagger.tag.aiff.AiffTag: java.lang.String getValue(org.jaudiotagger.tag.FieldKey,int)
org.jcodec.containers.mp4.boxes.ColorExtension: int estimateSize()
com.umeng.commonsdk.framework.a: void g()
org.jaudiotagger.tag.id3.framebody.FrameBodyAPIC: java.lang.String getMimeType()
com.alipay.android.phone.mrpc.core.g: com.alipay.android.phone.mrpc.core.ab b()
org.simpleframework.xml.core.ElementMapUnionLabel: org.simpleframework.xml.strategy.Type getDependent()
com.yalantis.ucrop.UCropFragment: UCropFragment()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType forNumber(int)
org.jaudiotagger.audio.generic.Utils: long readUint32(java.io.DataInput)
org.jcodec.containers.mp4.boxes.TrakBox: boolean isTimecode()
com.caij.puremusic.db.model.SongQueries$songsOrderDateAdd$1: java.lang.Object invoke(java.lang.Object)
com.google.android.material.appbar.CollapsingToolbarLayout: int getScrimAlpha()
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
com.tencent.bugly.crashreport.inner.InnerApi: void postU3dCrashAsync(java.lang.String,java.lang.String,java.lang.String)
com.google.android.material.appbar.MaterialToolbar: void setElevation(float)
com.umeng.analytics.pro.i: long a(java.lang.String)
com.caij.puremusic.drive.model.PlaylistMetadata$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.umeng.analytics.pro.i: void b(boolean,boolean)
org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId: boolean c()
org.simpleframework.xml.core.CompositeList: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.lang.Object)
com.thegrizzlylabs.sardineandroid.model.Principal: void setAuthenticated(com.thegrizzlylabs.sardineandroid.model.Authenticated)
org.simpleframework.xml.stream.NodeExtractor: void extract(org.w3c.dom.Node)
org.jaudiotagger.tag.datatype.TextEncodedStringSizeTerminated: java.lang.String getValueAtIndex(int)
com.thegrizzlylabs.sardineandroid.model.All: All()
org.jaudiotagger.tag.mp4.field.Mp4TagCoverField: boolean isBinary()
com.caij.puremusic.drive.model.DriveFile: boolean isDirectory()
com.umeng.commonsdk.statistics.proto.e$c: e$c()
com.tencent.bugly.proguard.am: java.util.List a(java.io.File[],java.lang.String,java.lang.String,long)
com.caij.puremusic.drive.model.PlayListsResponse$Companion: PlayListsResponse$Companion()
com.caij.puremusic.model.DriveFileParcelable: java.lang.String component9()
com.umeng.analytics.pro.an: com.umeng.analytics.pro.an a(java.nio.ByteBuffer)
org.jaudiotagger.audio.mp3.MP3File: boolean isFilePortionNull(int,int)
com.google.android.material.bottomsheet.BottomSheetBehavior: void setUpdateImportantForAccessibilityOnSiblings(boolean)
org.jaudiotagger.utils.tree.TreeNode: int getChildCount()
org.jaudiotagger.tag.mp4.Mp4TagField: boolean isCommon()
org.jaudiotagger.tag.id3.framebody.FrameBodySIGN: void setSignature(byte[])
com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface getTypeface()
com.caij.puremusic.db.model.SongEntityQueries$getPlaylistLastAddSong$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyPIC: java.lang.String getFormatType()
org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId: int a(android.content.Context,org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId$CallBack)
com.tencent.bugly.proguard.i: com.tencent.bugly.proguard.i a(java.lang.Object[],java.lang.String)
nl.adaptivity.xmlutil.core.KtXmlWriter$EscapeMode: nl.adaptivity.xmlutil.core.KtXmlWriter$EscapeMode valueOf(java.lang.String)
com.umeng.commonsdk.statistics.internal.StatTracer: StatTracer()
org.jaudiotagger.utils.tree.DefaultTreeModel: org.jaudiotagger.utils.tree.TreeNode[] getPathToRoot(org.jaudiotagger.utils.tree.TreeNode,int)
org.jaudiotagger.tag.id3.framebody.FrameBodyTDEN: FrameBodyTDEN()
com.caij.puremusic.db.model.AlbumQueries: void deleteAlbumById(long)
com.thegrizzlylabs.sardineandroid.model.Response: void setLocation(com.thegrizzlylabs.sardineandroid.model.Location)
com.google.android.material.bottomappbar.BottomAppBar: void setSubtitle(java.lang.CharSequence)
com.thegrizzlylabs.sardineandroid.model.Activelock: void setTimeout(java.lang.String)
com.caij.puremusic.db.model.PlaybackSong: boolean equals(java.lang.Object)
org.jaudiotagger.audio.asf.data.AudioStreamChunk: int getBitsPerSample()
com.google.android.material.textfield.MaterialAutoCompleteTextView: float getPopupElevation()
com.google.android.material.chip.ChipGroup: void setChipSpacing(int)
org.simpleframework.xml.stream.EventNode: java.lang.String getReference()
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalCacheDirs(android.content.Context)
com.thegrizzlylabs.sardineandroid.model.QuotaUsedBytes: java.util.List getContent()
com.caij.puremusic.views.ListItemView: ListItemView(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.audio.AudioHeader: int getTrackLength()
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
com.caij.puremusic.db.model.SongEntityQueries$insert$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.jcodec.containers.mp4.boxes.TrunBox: long getSampleCount()
org.simpleframework.xml.core.InstanceFactory$ClassInstance: java.lang.Object setInstance(java.lang.Object)
com.tencent.mm.opensdk.constants.ConstantsAPI$Token: ConstantsAPI$Token()
com.google.android.material.appbar.MaterialToolbar: java.lang.Integer getNavigationIconTint()
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: com.umeng.commonsdk.statistics.proto.d b()
com.umeng.commonsdk.statistics.proto.e$c: void a(com.umeng.analytics.pro.bu,com.umeng.commonsdk.statistics.proto.e)
com.alipay.tscenter.biz.rpc.deviceFp.BugTrackMessageService: java.lang.String logCollect(java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRL: FrameBodyTDRL(byte,java.lang.String)
org.jcodec.containers.mp4.boxes.MetaValue: org.jcodec.containers.mp4.boxes.MetaValue createFloat(float)
org.jaudiotagger.tag.datatype.NumberVariableLength: boolean equals(java.lang.Object)
com.caij.puremusic.drive.model.Media: int hashCode()
com.caij.puremusic.db.model.SongEntityQueries$getPlaylistLastAddSong$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler getInstance(android.content.Context,com.tencent.bugly.proguard.aa,com.tencent.bugly.proguard.as,com.tencent.bugly.proguard.ac,com.tencent.bugly.proguard.ak,boolean,java.lang.String)
org.jaudiotagger.tag.id3.ID3v22Frame: boolean isValidID3v2FrameIdentifier(java.lang.String)
org.jaudiotagger.test.ExtractID3TagFromFile$MP3FileFilter: ExtractID3TagFromFile$MP3FileFilter(org.jaudiotagger.test.ExtractID3TagFromFile)
com.umeng.analytics.pro.s: boolean c(java.lang.String)
com.caij.puremusic.db.model.SongQueries$firstSongByAlbumId$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
org.simpleframework.xml.core.FieldScanner$FieldKey: int hashCode()
org.simpleframework.xml.stream.Format: Format(int,java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: boolean isItunesFrame()
com.tencent.mm.opensdk.modelbiz.CreateChatroom$Req: boolean checkArgs()
org.simpleframework.xml.strategy.TreeStrategy: boolean write(org.simpleframework.xml.strategy.Type,java.lang.Object,org.simpleframework.xml.stream.NodeMap,java.util.Map)
org.jaudiotagger.audio.ogg.util.OggPageHeader: byte getHeaderType()
com.umeng.analytics.vshelper.PageNameMonitor$a: PageNameMonitor$a()
org.simpleframework.xml.transform.EnumTransform: EnumTransform(java.lang.Class)
org.jaudiotagger.tag.id3.framebody.FrameBodyTMED: FrameBodyTMED()
androidx.customview.view.AbsSavedState: AbsSavedState(android.os.Parcel,java.lang.ClassLoader)
com.caij.puremusic.db.model.Song: java.lang.String component10()
com.umeng.commonsdk.statistics.proto.d: void j()
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: void setField(org.jaudiotagger.tag.images.Artwork)
org.jaudiotagger.audio.mp3.MP3AudioHeader: boolean isPrivate()
androidx.constraintlayout.helper.widget.Flow: Flow(android.content.Context,android.util.AttributeSet)
com.umeng.commonsdk.statistics.proto.c: com.umeng.analytics.pro.bp r()
org.jaudiotagger.tag.id3.framebody.FrameBodyTMCL: FrameBodyTMCL()
com.thegrizzlylabs.sardineandroid.Sardine: void move(java.lang.String,java.lang.String,boolean)
org.simpleframework.xml.core.Signature: boolean contains(java.lang.Object)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: boolean isNodeAncestor(org.jaudiotagger.utils.tree.TreeNode)
org.jaudiotagger.audio.wav.WavTagWriter: void writeInfoDataToFile(java.nio.channels.FileChannel,java.nio.ByteBuffer,long)
com.caij.puremusic.db.model.SearchAlbumResultQueries$GetByIdQuery$execute$1: SearchAlbumResultQueries$GetByIdQuery$execute$1(com.caij.puremusic.db.model.SearchAlbumResultQueries$GetByIdQuery)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getCustomSize()
androidx.constraintlayout.widget.Barrier: int getType()
com.umeng.analytics.pro.bn: void k()
com.umeng.commonsdk.statistics.noise.ABTest: int getTestPolicy()
org.simpleframework.xml.core.TreeModel: TreeModel(org.simpleframework.xml.core.Policy,org.simpleframework.xml.core.Detail)
androidx.gridlayout.widget.GridLayout: void setRowOrderPreserved(boolean)
org.jaudiotagger.tag.id3.ID3Frames: boolean isSupportedFrames(java.lang.String)
com.caij.puremusic.drive.model.Type: int hashCode()
androidx.lifecycle.Lifecycle$Event: Lifecycle$Event(java.lang.String,int)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$PostorderEnumeration: java.lang.Object nextElement()
org.jaudiotagger.audio.flac.FlacInfoReader: org.jaudiotagger.audio.flac.FlacAudioHeader read(java.nio.channels.FileChannel,java.lang.String)
com.caij.puremusic.model.PlaylistWrapper: int getSongCount()
com.tencent.bugly.proguard.u: java.util.Map b(com.tencent.bugly.proguard.u)
com.caij.puremusic.db.model.SongQueries: void delete(long)
org.jaudiotagger.audio.ogg.util.OggPageHeader: boolean isLastPage()
org.simpleframework.xml.core.Source: java.lang.String getProperty(java.lang.String)
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query songsDateLastDesc(long,kotlin.jvm.functions.Function18)
org.jcodec.containers.mp4.boxes.ReverseDnsBox$RdnsNameBox: void setName(java.lang.String)
com.umeng.analytics.pro.s: void a(java.lang.String,boolean)
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: void setValid(boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorViewAlpha(int)
org.simpleframework.xml.core.ObjectScanner: void commit(org.simpleframework.xml.core.Detail)
org.jaudiotagger.tag.id3.reference.ITunesRating: ITunesRating()
com.thegrizzlylabs.sardineandroid.Sardine: void disableCompression()
org.jcodec.containers.mp4.boxes.ChannelBox: int getChannelBitmap()
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: void setTextLocales(android.widget.TextView,android.os.LocaleList)
org.jaudiotagger.tag.id3.ID3v23Frames: org.jaudiotagger.tag.id3.ID3v23Frames getInstanceOf()
androidx.fragment.app.Fragment: java.lang.CharSequence getText(int)
org.simpleframework.xml.core.Support: java.lang.String replace(java.lang.String)
org.jcodec.containers.mp4.boxes.AudioSampleEntry: org.jcodec.containers.mp4.boxes.AudioSampleEntry audioSampleEntry(java.lang.String,int,int,int,int,java.nio.ByteOrder)
org.jaudiotagger.tag.images.StandardImageHandler: void showReadFormats()
com.caij.puremusic.drive.model.Part$$serializer: com.caij.puremusic.drive.model.Part deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyTextInfo: int getNumberOfValues()
com.umeng.analytics.vshelper.b: void b(android.app.Activity)
com.caij.puremusic.drive.model.DropboxDriveItem$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker: int access$1800(com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker)
org.jaudiotagger.tag.mp4.Mp4Tag: java.util.List getFields(org.jaudiotagger.tag.FieldKey)
com.caij.puremusic.drive.model.SongItem: SongItem(int,java.lang.String,java.lang.String,java.lang.String,long,int,boolean,java.lang.String,java.lang.String,java.util.List,java.util.List,java.lang.String,java.lang.String,java.util.List,java.util.Map,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,kotlinx.serialization.internal.SerializationConstructorMarker)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
org.jaudiotagger.tag.id3.framebody.FrameBodyAENC: java.lang.String getIdentifier()
androidx.constraintlayout.widget.ConstraintLayout: ConstraintLayout(android.content.Context,android.util.AttributeSet)
com.tencent.mm.opensdk.modelmsg.WXVideoFileObject: WXVideoFileObject()
org.simpleframework.xml.core.ElementMapLabel: boolean isRequired()
org.simpleframework.xml.core.ElementArrayLabel: org.simpleframework.xml.core.Expression getExpression()
org.jcodec.containers.mp4.boxes.EsdsBox$DecoderConfig: EsdsBox$DecoderConfig(int,int,int,int,java.util.Collection)
org.jaudiotagger.tag.id3.ID3v1Tag: void setComment(java.lang.String)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyEAR: FieldFrameBodyEAR(java.nio.ByteBuffer)
org.simpleframework.xml.core.Label: java.lang.Object getKey()
org.jaudiotagger.tag.mp4.field.Mp4FieldType: boolean isCoverArtType(org.jaudiotagger.tag.mp4.field.Mp4FieldType)
org.jaudiotagger.tag.datatype.AbstractString: boolean canBeEncoded()
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver: AlarmManagerSchedulerBroadcastReceiver()
org.jaudiotagger.tag.datatype.AbstractDataTypeList: int hashCode()
com.umeng.commonsdk.framework.UMEnvelopeBuild: boolean isRet(android.content.Context,com.umeng.commonsdk.framework.UMLogDataProtocol$UMBusinessType,boolean)
com.umeng.analytics.pro.bn$a: com.umeng.analytics.pro.bu a(com.umeng.analytics.pro.ci)
org.simpleframework.xml.core.PrimitiveScanner: org.simpleframework.xml.Version getRevision()
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: boolean isCompression()
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdTypeCountQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.jaudiotagger.audio.ogg.OggVorbisTagReader: byte[] convertToVorbisCommentPacket(org.jaudiotagger.audio.ogg.util.OggPageHeader,java.io.RandomAccessFile)
com.caij.puremusic.drive.model.GoogleDriveFile$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
androidx.constraintlayout.helper.widget.Flow: void setFirstHorizontalBias(float)
androidx.preference.PreferenceDialogFragmentCompat$Api30Impl: void showIme(android.view.Window)
org.simpleframework.xml.core.PrimitiveScanner$EmptySection: org.simpleframework.xml.core.Label getElement(java.lang.String)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: void move(java.lang.String,java.lang.String,boolean)
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag[] $values()
com.google.common.hash.LittleEndianByteArray$JavaLittleEndianBytes$1: void putLongLittleEndian(byte[],int,long)
com.umeng.commonsdk.statistics.common.DeviceTypeEnum: com.umeng.commonsdk.statistics.common.DeviceTypeEnum[] values()
com.umeng.analytics.pro.l: void b(com.umeng.analytics.pro.l,android.app.Activity)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: java.util.List list(java.lang.String,int,boolean)
com.umeng.commonsdk.statistics.common.MLog: void d(java.lang.String,java.lang.String,java.lang.Throwable)
org.jaudiotagger.tag.mp4.Mp4TagField: Mp4TagField(java.lang.String)
androidx.preference.TwoStatePreference: TwoStatePreference(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.audio.mp3.MP3AudioHeader: java.lang.String getEncoder()
com.caij.puremusic.drive.model.JellyfinFolder: java.lang.String component1()
com.tencent.mmkv.MMKV: java.lang.String mmapID()
com.caij.puremusic.drive.model.PlexUser$Companion: PlexUser$Companion()
com.caij.puremusic.model.Playlist: int hashCode()
com.umeng.analytics.pro.s: s()
com.caij.puremusic.drive.model.AlbumItem: java.util.List getArtists()
org.jaudiotagger.tag.Tag: void addField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
org.jaudiotagger.tag.images.Artwork: void setFromMetadataBlockDataPicture(org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture)
com.tencent.mm.opensdk.modelbiz.IWXChannelJumpInfo: void serialize(android.os.Bundle)
org.jaudiotagger.audio.aiff.chunk.ID3Chunk: ID3Chunk(org.jaudiotagger.audio.iff.ChunkHeader,java.nio.ByteBuffer,org.jaudiotagger.tag.aiff.AiffTag)
org.jaudiotagger.tag.images.StandardImageHandler: byte[] writeImage(java.awt.image.BufferedImage,java.lang.String)
com.tencent.bugly.proguard.ag: ag(byte)
org.simpleframework.xml.core.ContactMap: java.util.Iterator iterator()
org.jcodec.containers.mp4.boxes.Box: void doWrite(java.nio.ByteBuffer)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode)
com.caij.puremusic.db.model.DriveFileDownUrlInfo: long component4()
org.jaudiotagger.tag.id3.framebody.FrameBodyRVAD: FrameBodyRVAD(org.jaudiotagger.tag.id3.framebody.FrameBodyRVAD)
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.db.model.SongQueries$searchSongsByTitle$1: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.tag.id3.ID3v24Frame: int getFrameFlagsSize()
kotlinx.serialization.SerializersCacheKt$SERIALIZERS_CACHE_NULLABLE$1: SerializersCacheKt$SERIALIZERS_CACHE_NULLABLE$1()
org.jaudiotagger.tag.id3.framebody.FrameBodyDeprecated: FrameBodyDeprecated(org.jaudiotagger.tag.id3.framebody.FrameBodyDeprecated)
org.jaudiotagger.tag.id3.ID3v24Frame: void setEncoding(java.nio.charset.Charset)
org.jaudiotagger.audio.ogg.util.OggPageHeader: boolean isValid()
androidx.fragment.app.Fragment: void unregisterForContextMenu(android.view.View)
com.caij.puremusic.db.model.HistoryEntityQueries$HistorySongsQuery: void addListener(app.cash.sqldelight.Query$Listener)
org.simpleframework.xml.core.LabelExtractor$LabelBuilder: java.lang.reflect.Constructor getConstructor()
org.simpleframework.xml.core.AttributeException: AttributeException(java.lang.Throwable,java.lang.String,java.lang.Object[])
com.tencent.bugly.proguard.ab: long e()
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior()
com.caij.puremusic.db.model.ServerSongCoverQueries$deleteById$2: java.lang.Object invoke(java.lang.Object)
com.tencent.mm.opensdk.modelmsg.WXAppExtendObject: int getFileSize(java.lang.String)
com.caij.puremusic.db.model.ServerArtistCoverQueries$insert$1: ServerArtistCoverQueries$insert$1(com.caij.puremusic.db.model.ServerArtistCover)
com.umeng.analytics.Gender$3: Gender$3(java.lang.String,int,int)
com.caij.puremusic.drive.model.OneDriveItem$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.thegrizzlylabs.sardineandroid.model.Response: java.util.List getPropstat()
com.caij.puremusic.model.lyrics.Lyrics: com.caij.puremusic.model.lyrics.Lyrics parse(com.caij.puremusic.db.model.Song,java.lang.String)
com.tencent.mm.opensdk.modelbase.BaseResp: boolean checkArgs()
org.jcodec.containers.mp4.boxes.TrakBox: java.lang.String fourcc()
org.jaudiotagger.tag.lyrics3.Lyrics3v2Field: Lyrics3v2Field(org.jaudiotagger.tag.id3.AbstractID3v2Frame)
com.caij.puremusic.network.model.LastFmTrack$Track$Toptags: java.util.List getTag()
androidx.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
com.tencent.bugly.proguard.s: void a(long)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyUnsupported: FieldFrameBodyUnsupported(byte[])
org.simpleframework.xml.core.LabelMap: java.lang.String[] getPaths()
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: void put(java.lang.String,byte[],java.lang.String)
com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleMarginEnd(int)
org.jcodec.containers.mp4.boxes.Box: java.lang.String toString()
org.jaudiotagger.audio.mp3.MP3File: long getMP3StartByte(java.io.File)
org.simpleframework.xml.stream.EventNode: int getLine()
com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()
com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)
org.simpleframework.xml.core.LabelExtractor$LabelBuilder: LabelExtractor$LabelBuilder(java.lang.Class,java.lang.Class)
org.simpleframework.xml.stream.Indenter: java.lang.String top()
org.jcodec.containers.mp4.boxes.MovieExtendsBox: java.lang.String fourcc()
com.umeng.analytics.vshelper.b: void d(android.app.Activity)
com.tencent.mm.opensdk.modelmsg.WXStateJumpChannelProfileInfo: WXStateJumpChannelProfileInfo()
com.caij.puremusic.db.model.SongQueries$songsByIds$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
com.caij.puremusic.fragments.backup.BackupViewModel: BackupViewModel()
com.umeng.commonsdk.statistics.idtracking.e: com.umeng.commonsdk.statistics.idtracking.e a(android.content.Context)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
org.jaudiotagger.tag.id3.framebody.FrameBodyLINK: java.lang.String getFrameIdentifier()
com.caij.puremusic.drive.model.MediaContainer$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.MediaContainer)
org.simpleframework.xml.core.TemplateLabel: java.lang.String[] getNames()
com.tencent.bugly.proguard.av: void b()
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query songsByArtist(java.lang.String)
org.jaudiotagger.tag.mp4.field.Mp4TagCoverField: int getDataAndHeaderSize()
com.umeng.commonsdk.statistics.common.DataHelper: boolean largeThanMaxSize(long,long)
org.simpleframework.xml.core.Expression: java.lang.String getLast()
org.jaudiotagger.audio.asf.io.ChunkContainerReader: void register(java.lang.Class)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.util.List getAll(org.jaudiotagger.tag.FieldKey)
androidx.fragment.app.Fragment: android.animation.Animator onCreateAnimator(int,boolean,int)
org.jaudiotagger.utils.EqualsUtil: boolean areEqual(double,double)
com.umeng.analytics.MobclickAgent: void registerPreProperties(android.content.Context,org.json.JSONObject)
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
kotlin.jvm.internal.Ref$IntRef: Ref$IntRef()
org.simpleframework.xml.stream.ProviderFactory: org.simpleframework.xml.stream.Provider getInstance()
org.jaudiotagger.audio.mp3.XingFrame: org.jaudiotagger.audio.mp3.LameFrame getLameFrame()
org.jaudiotagger.audio.mp3.MPEGFrameHeader: void setPrivate()
org.jcodec.containers.mp4.boxes.MdtaBox: void doWrite(java.nio.ByteBuffer)
org.simpleframework.xml.core.Support: org.simpleframework.xml.core.Instance getInstance(java.lang.Class)
app.cash.sqldelight.Query: void addListener(app.cash.sqldelight.Query$Listener)
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: ClientInfo$ClientType(java.lang.String,int,int)
org.jaudiotagger.audio.aiff.AiffTagWriter: org.jaudiotagger.tag.aiff.AiffTag getExistingMetadata(java.nio.channels.FileChannel,java.lang.String)
com.tencent.bugly.BuglyStrategy: com.tencent.bugly.BuglyStrategy setRecordUserInfoOnceADay(boolean)
com.tencent.bugly.proguard.as: void e(java.util.List)
nl.adaptivity.xmlutil.serialization.CompactFragmentSerializer$descriptor$1: CompactFragmentSerializer$descriptor$1()
org.jaudiotagger.audio.mp4.Chunk: void setSampleSizes(int[])
com.caij.puremusic.db.model.FolderQueries$deleteById$2: FolderQueries$deleteById$2()
org.simpleframework.xml.core.SignatureBuilder: java.util.List build(org.simpleframework.xml.core.SignatureBuilder$ParameterTable)
org.jaudiotagger.tag.id3.framebody.FrameBodyTORY: FrameBodyTORY(org.jaudiotagger.tag.id3.framebody.FrameBodyTORY)
com.caij.puremusic.db.model.DriveFileDownUrlInfo: java.lang.String component3()
com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat valueOf(java.lang.String)
org.jaudiotagger.audio.asf.io.EncryptionChunkReader: boolean canFail()
com.umeng.commonsdk.service.UMGlobalContext$a: UMGlobalContext$a()
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdCountQuery: void removeListener(app.cash.sqldelight.Query$Listener)
androidx.customview.widget.ViewDragHelper$Callback: void onViewCaptured(android.view.View,int)
com.caij.puremusic.db.model.SongEntityQueries$GetPlayListSongCountQuery: SongEntityQueries$GetPlayListSongCountQuery(com.caij.puremusic.db.model.SongEntityQueries,long,kotlin.jvm.functions.Function1)
org.jaudiotagger.tag.aiff.AiffTag: java.lang.String toString()
com.thegrizzlylabs.sardineandroid.DavPrincipal: javax.xml.namespace.QName getProperty()
org.jaudiotagger.audio.generic.GenericTag$GenericTagTextField: byte[] getRawContent()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void adjustPadding(java.io.File,int,long)
org.simpleframework.xml.core.ClassScanner: void replace(java.lang.reflect.Method)
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.Id3FieldType getFieldType()
org.jcodec.containers.mp4.boxes.MovieHeaderBox: int estimateSize()
org.simpleframework.xml.core.ElementMapUnionParameter: java.lang.annotation.Annotation getAnnotation()
org.jaudiotagger.audio.aiff.chunk.AiffChunkType: AiffChunkType(java.lang.String,int,java.lang.String)
com.caij.puremusic.MainModuleKt$networkModule$1$1: MainModuleKt$networkModule$1$1()
org.simpleframework.xml.core.ParameterMap: org.simpleframework.xml.core.Parameter get(int)
com.caij.puremusic.db.model.PlaylistEntityQueries$getPlaylistEntityById$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
com.google.android.material.navigation.NavigationBarView: void setItemTextColor(android.content.res.ColorStateList)
com.umeng.analytics.pro.u: void b(android.content.Context,long)
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getMac(android.content.Context)
com.google.android.gms.internal.play_billing.zzcj: com.google.android.gms.internal.play_billing.zzcj[] values()
org.simpleframework.xml.stream.OutputElement: org.simpleframework.xml.stream.NodeMap getAttributes()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getHintTextColor()
com.caij.puremusic.drive.model.Metadata: java.lang.String getRatingKey()
androidx.core.view.ViewCompat$Api17Impl: void setLabelFor(android.view.View,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
com.caij.puremusic.db.model.Folder: java.lang.String getDesc()
com.umeng.commonsdk.statistics.proto.c$a: c$a(com.umeng.commonsdk.statistics.proto.c$1)
com.google.android.material.chip.Chip: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
org.simpleframework.xml.core.FieldContact: void set(java.lang.Object,java.lang.Object)
com.caij.puremusic.model.Home: java.lang.String toString()
com.caij.puremusic.drive.model.SubsonicAlbum$$serializer: com.caij.puremusic.drive.model.SubsonicAlbum deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.audio.ogg.OggVorbisTagReader$OggVorbisHeaderSizes: java.util.List getExtraPacketList()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintList(android.content.res.ColorStateList)
StatusBarLyric.API.StatusBarLyric: StatusBarLyric(android.content.Context,android.graphics.drawable.Drawable,java.lang.String,boolean)
com.umeng.analytics.pro.f: android.content.Context b()
com.caij.puremusic.db.model.PlayCountEntity: java.lang.String toString()
org.jcodec.containers.mp4.boxes.KeysBox$LocalBoxes: KeysBox$LocalBoxes()
org.simpleframework.xml.core.ElementArrayParameter: java.lang.String getPath()
com.umeng.commonsdk.statistics.proto.a$b: com.umeng.analytics.pro.cc b()
org.jaudiotagger.audio.mp4.Mp4TagWriter: void writeTagBox(org.jaudiotagger.tag.Tag,org.jcodec.containers.mp4.MP4Util$Movie)
com.afollestad.materialdialogs.internal.message.DialogContentLayout: void setScrollView(com.afollestad.materialdialogs.internal.main.DialogScrollView)
com.caij.puremusic.drive.model.JellyfinLoginResponse: java.lang.String getAccessToken()
com.caij.puremusic.drive.model.PlaylistResponse$Companion: PlaylistResponse$Companion()
org.jaudiotagger.tag.id3.framebody.FrameBodyTKEY: java.lang.String getIdentifier()
org.jaudiotagger.audio.generic.AudioFileWriter2: void deleteTag(org.jaudiotagger.tag.Tag,java.nio.channels.FileChannel,java.lang.String)
org.jaudiotagger.audio.mp3.MP3FileWriter: void deleteTag(org.jaudiotagger.tag.Tag,java.io.RandomAccessFile,java.io.RandomAccessFile)
org.jaudiotagger.tag.id3.ID3SyncSafeInteger: boolean isBufferEmpty(byte[])
org.simpleframework.xml.strategy.Allocate: java.lang.Class getType()
com.caij.puremusic.db.model.AlbumQueries$AlbumQuery$execute$1: AlbumQueries$AlbumQuery$execute$1(com.caij.puremusic.db.model.AlbumQueries$AlbumQuery)
org.jaudiotagger.tag.id3.framebody.FrameBodyETCO: void resolveRelativeTimestamps()
org.jaudiotagger.audio.asf.io.StreamBitratePropertiesReader: boolean canFail()
com.tencent.mm.opensdk.modelmsg.WXVideoObject: void unserialize(android.os.Bundle)
org.jaudiotagger.tag.id3.ID3v24FieldKey: ID3v24FieldKey(java.lang.String,int,java.lang.String,org.jaudiotagger.tag.id3.Id3FieldType)
org.jaudiotagger.audio.asf.data.MetadataContainerFactory: org.jaudiotagger.audio.asf.data.MetadataContainer createContainer(org.jaudiotagger.audio.asf.data.ContainerType)
org.simpleframework.xml.stream.DocumentReader$Entry: java.lang.Object getSource()
org.simpleframework.xml.core.Expression: boolean isPath()
com.caij.puremusic.lyrics.SimpleLrcView: int getCenterLine()
org.jcodec.containers.mp4.boxes.MovieHeaderBox: int getNextTrackId()
com.tencent.bugly.proguard.bq: void a(com.tencent.bugly.proguard.k)
com.umeng.analytics.pro.be: java.lang.String b(com.umeng.analytics.pro.av)
com.thegrizzlylabs.sardineandroid.model.PrincipalCollectionSet: java.lang.String getHref()
org.jaudiotagger.tag.flac.FlacTag: boolean isEmpty()
com.umeng.commonsdk.statistics.common.d: void e()
com.umeng.commonsdk.statistics.proto.b$a: void b(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
com.caij.puremusic.db.model.HistoryEntity: com.caij.puremusic.db.model.HistoryEntity copy$default(com.caij.puremusic.db.model.HistoryEntity,long,long,int,java.lang.Object)
com.caij.puremusic.drive.model.PlexAlbumsResponse: java.lang.String toString()
io.ktor.serialization.kotlinx.json.JsonSupportKt$DefaultJson$1: JsonSupportKt$DefaultJson$1()
com.afollestad.materialdialogs.color.view.ColorCircleView: void setBorder(int)
com.caij.puremusic.drive.model.PlexAlbumsResponse$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.bumptech.glide.request.RequestCoordinator$RequestState: RequestCoordinator$RequestState(java.lang.String,int,boolean)
com.caij.puremusic.model.Genre: java.lang.String toString()
org.jaudiotagger.tag.id3.ID3v1Tag: void setAlbum(java.lang.String)
com.caij.puremusic.db.model.AlbumQueries$SearchAlbumsByNameQuery: java.lang.String getAlbumName()
org.simpleframework.xml.core.Primitive: java.lang.Object readElement(org.simpleframework.xml.stream.InputNode)
com.caij.puremusic.drive.model.Directory: com.caij.puremusic.drive.model.Directory copy(java.lang.String,java.lang.String,java.lang.String)
org.jaudiotagger.tag.id3.reference.ID3Rating: ID3Rating()
org.simpleframework.xml.core.Comparer: Comparer(java.lang.String[])
com.caij.puremusic.network.model.LastFmTrack: void setTrack(com.caij.puremusic.network.model.LastFmTrack$Track)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void write(java.io.RandomAccessFile)
org.jaudiotagger.tag.wav.WavTag: java.lang.String addNullTerminatorIfNone(java.lang.String)
org.simpleframework.xml.stream.EventAttribute: boolean isReserved()
org.jaudiotagger.tag.wav.WavTag: WavTag(org.jaudiotagger.audio.wav.WavOptions)
org.jaudiotagger.tag.id3.AggregatedFrame: void setContent(java.lang.String)
org.simpleframework.xml.core.ElementListLabel: ElementListLabel(org.simpleframework.xml.core.Contact,org.simpleframework.xml.ElementList,org.simpleframework.xml.stream.Format)
org.simpleframework.xml.core.Model: org.simpleframework.xml.core.Expression getExpression()
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
com.caij.puremusic.db.model.PlayCountEntityQueries$insert$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.caij.puremusic.fragments.home.HomeFragment: HomeFragment()
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgramEnvironment$Resp: WXPreloadMiniProgramEnvironment$Resp()
com.google.android.material.navigation.NavigationBarView: void setItemBackgroundResource(int)
com.google.android.material.slider.BaseSlider: float[] getActiveRange()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
com.caij.puremusic.db.model.SongQueries$clear$1: void invoke(kotlin.jvm.functions.Function1)
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String getContentType()
org.jaudiotagger.tag.id3.framebody.FrameBodyTCOP: FrameBodyTCOP()
org.jaudiotagger.audio.flac.FlacFileReader: org.jaudiotagger.audio.generic.GenericAudioHeader getEncodingInfo(java.nio.channels.FileChannel,java.lang.String)
org.jcodec.containers.mp4.boxes.EndianBox: int estimateSize()
com.caij.puremusic.db.model.ServerLyrics: long getSourceId()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
org.jaudiotagger.tag.id3.ID3v22Frame: void createV22FrameFromV23Frame(org.jaudiotagger.tag.id3.ID3v23Frame)
com.umeng.analytics.pro.ak: ak()
org.jaudiotagger.tag.id3.AbstractID3Tag: java.lang.String getLoggingFilename()
org.jaudiotagger.tag.images.StandardArtwork: void setLinkedFromURL(java.lang.String)
org.jcodec.containers.mp4.boxes.GamaExtension: GamaExtension(org.jcodec.containers.mp4.boxes.Header)
org.simpleframework.xml.core.ElementArrayLabel: org.simpleframework.xml.core.Converter getConverter(org.simpleframework.xml.core.Context,java.lang.String)
org.jaudiotagger.audio.asf.data.MetadataDescriptor: void setStringValue(java.lang.String)
org.simpleframework.xml.core.Entry: org.simpleframework.xml.core.Converter getValue(org.simpleframework.xml.core.Context)
com.umeng.commonsdk.statistics.proto.e: com.umeng.analytics.pro.av deepCopy()
nl.adaptivity.xmlutil.serialization.NodeSerializer$ed$1: NodeSerializer$ed$1()
com.umeng.analytics.pro.bs: bs()
com.caij.puremusic.drive.model.Type: java.lang.String component2()
com.umeng.commonsdk.utils.UMUtils: boolean checkAndroidManifest(android.content.Context,java.lang.String)
com.umeng.commonsdk.statistics.idtracking.e$a: void b()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: int getFieldCount()
org.simpleframework.xml.core.Composite: boolean isOverridden(org.simpleframework.xml.stream.OutputNode,java.lang.Object,org.simpleframework.xml.strategy.Type)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: void addField(org.jaudiotagger.tag.images.Artwork)
com.caij.puremusic.drive.model.Prop: void getGetcontenttype$annotations()
com.google.android.material.floatingactionbutton.FloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
org.simpleframework.xml.util.Resolver: boolean add(java.lang.Object)
com.umeng.analytics.pro.y: void a(long,long,long,java.lang.String,boolean)
org.simpleframework.xml.core.Variable$Adapter: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object)
org.simpleframework.xml.core.ModelAssembler: void registerAttributes(org.simpleframework.xml.core.Model,org.simpleframework.xml.core.Expression)
com.thegrizzlylabs.sardineandroid.model.Lockscope: com.thegrizzlylabs.sardineandroid.model.Shared getShared()
com.tencent.mm.opensdk.modelbiz.HandleScanResult$Resp: boolean checkArgs()
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse: boolean equals(java.lang.Object)
com.alipay.apmobilesecuritysdk.e.f: f()
com.google.android.material.navigation.NavigationBarMenuView: android.content.res.ColorStateList getIconTintList()
com.caij.puremusic.drive.model.PlayListsResponse$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.preferences.BlacklistPreference: BlacklistPreference(android.content.Context,android.util.AttributeSet)
com.tencent.mm.opensdk.constants.ConstantsAPI$AppSupportContentFlag: ConstantsAPI$AppSupportContentFlag()
com.afollestad.viewpagerdots.DotsIndicator: void setDotTint(int)
com.umeng.commonsdk.statistics.proto.d: d()
org.simpleframework.xml.transform.DateType: org.simpleframework.xml.transform.DateType[] values()
org.simpleframework.xml.transform.GregorianCalendarTransform: java.lang.String write(java.util.GregorianCalendar)
kotlinx.coroutines.CoroutineDispatcher$Key$1: CoroutineDispatcher$Key$1()
com.caij.puremusic.drive.model.SongItem: java.util.List component10()
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey valueOf(java.lang.String)
org.jaudiotagger.audio.asf.data.AsfExtendedHeader: org.jaudiotagger.audio.asf.data.MetadataContainer getMetadataLibraryObject()
androidx.slidingpanelayout.widget.SlidingPaneLayout: int getSliderFadeColor()
com.caij.puremusic.drive.model.AlbumMediaContainer: java.util.List getMetadata()
org.simpleframework.xml.core.FieldScanner: boolean isText(org.simpleframework.xml.core.Contact)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconView()
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag[] values()
org.jaudiotagger.tag.TagOptionSingleton: void setId3v2PaddingCopyTag(boolean)
org.simpleframework.xml.core.ElementListUnionLabel: org.simpleframework.xml.strategy.Type getType(java.lang.Class)
org.jcodec.containers.mp4.boxes.MovieHeaderBox: long getModified()
androidx.appcompat.widget.SwitchCompat: SwitchCompat(android.content.Context,android.util.AttributeSet)
com.umeng.commonsdk.statistics.proto.Response: Response()
org.jcodec.containers.mp4.boxes.TrunBox: org.jcodec.containers.mp4.boxes.TrunBox$Factory copy(org.jcodec.containers.mp4.boxes.TrunBox)
androidx.constraintlayout.motion.widget.MotionLayout: void setTransition(int)
com.umeng.commonsdk.UMConfigureImpl: android.content.Context d()
org.simpleframework.xml.core.FieldScanner: void insert(java.lang.Object,org.simpleframework.xml.core.Contact)
org.jaudiotagger.audio.SupportedFileFormat$14: org.jaudiotagger.tag.Tag createDefaultTag()
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessView$Resp: void fromBundle(android.os.Bundle)
org.jaudiotagger.tag.datatype.PartOfSet$PartOfSetValue: void setCount(java.lang.Integer)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: StaggeredGridLayoutManager$SavedState()
androidx.customview.view.AbsSavedState: AbsSavedState(android.os.Parcel)
org.simpleframework.xml.core.PrimitiveScanner: java.util.List getSignatures()
org.simpleframework.xml.core.Persister: Persister(org.simpleframework.xml.transform.Matcher,org.simpleframework.xml.stream.Format)
com.tencent.bugly.proguard.as: void a(java.util.ArrayList,java.util.List)
org.jaudiotagger.tag.id3.framebody.FrameBodyTCON: java.lang.String getIdentifier()
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMR: FrameBodyCOMR(org.jaudiotagger.tag.id3.framebody.FrameBodyCOMR)
com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportQuasiRealtime: ReportPolicy$ReportQuasiRealtime()
com.thegrizzlylabs.sardineandroid.impl.handler.MultiStatusResponseHandler: MultiStatusResponseHandler()
com.caij.puremusic.network.model.Image: int getHeight()
com.google.common.reflect.Types$JavaVersion$3: Types$JavaVersion$3(java.lang.String,int)
com.umeng.commonsdk.statistics.proto.e: java.lang.String b()
org.jcodec.containers.mp4.boxes.TimeToSampleBox: void doWrite(java.nio.ByteBuffer)
com.google.android.material.chip.Chip: void setChipStrokeWidth(float)
org.simpleframework.xml.core.Composite: void access$100(org.simpleframework.xml.core.Composite,org.simpleframework.xml.stream.InputNode,java.lang.Object,org.simpleframework.xml.core.Schema)
com.umeng.commonsdk.utils.UMUtils: java.lang.String getApmFlag()
com.umeng.commonsdk.utils.c: void a(android.content.Context,long)
com.caij.puremusic.db.model.SearchAlbumResultQueries$insert$1: java.lang.Object invoke(java.lang.Object)
org.simpleframework.xml.stream.NodeMap: java.util.Iterator iterator()
com.caij.puremusic.drive.model.PlayListsSubsonicResponse$$serializer: com.caij.puremusic.drive.model.PlayListsSubsonicResponse deserialize(kotlinx.serialization.encoding.Decoder)
org.jcodec.containers.mp4.boxes.GenericMediaInfoBox: int estimateSize()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
org.jaudiotagger.tag.images.AndroidArtwork: boolean isLinked()
com.thegrizzlylabs.sardineandroid.Sardine: java.util.List propfind(java.lang.String,int,java.util.Set)
me.tankery.lib.circularseekbar.CircularSeekBar: void setStartAngle(float)
org.simpleframework.xml.core.DetailScanner: void root(java.lang.annotation.Annotation)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)
org.jaudiotagger.tag.id3.framebody.FrameBodySYTC: FrameBodySYTC(int,byte[])
com.caij.puremusic.network.model.ArtistWrapper: int hashCode()
com.caij.puremusic.network.model.ArtistWrapper: java.lang.String getHref()
com.caij.puremusic.drive.model.ArtistItem$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
org.simpleframework.xml.core.FieldContact: java.lang.Class getDependent()
org.jaudiotagger.tag.id3.ID3v23Tag: void readHeaderFlags(java.nio.ByteBuffer)
com.caij.puremusic.db.model.SongQueries$SongByPathQuery: java.lang.String getFilePath()
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
com.caij.puremusic.drive.model.SubPlayList: void write$Self(com.caij.puremusic.drive.model.SubPlayList,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
org.simpleframework.xml.core.SignatureBuilder: void populate(org.simpleframework.xml.core.SignatureBuilder$ParameterTable,org.simpleframework.xml.core.SignatureBuilder$ParameterList,int)
org.simpleframework.xml.core.Signature: java.lang.Class getType()
androidx.core.content.ContextCompat$Api24Impl: boolean isDeviceProtectedStorage(android.content.Context)
com.afollestad.viewpagerdots.DotsIndicator: void setDotTintRes(int)
com.tencent.mm.opensdk.modelbiz.WXInvoiceAuthInsert$Resp: WXInvoiceAuthInsert$Resp()
org.jaudiotagger.audio.generic.AudioFileReader: AudioFileReader()
com.caij.puremusic.db.model.HistoryEntityQueries$deleteById$2: void invoke(kotlin.jvm.functions.Function1)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomStart()
org.simpleframework.xml.stream.NodeMap: org.simpleframework.xml.stream.Node getNode()
org.jaudiotagger.audio.exceptions.NoWritePermissionsException: NoWritePermissionsException(java.lang.Throwable)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: java.lang.String refreshLock(java.lang.String,java.lang.String,java.lang.String)
org.jaudiotagger.audio.asf.data.GUID: boolean assertGUID(int[])
com.caij.puremusic.drive.model.AlbumListResponse: com.caij.puremusic.drive.model.AlbumListResponse copy(com.caij.puremusic.drive.model.SubsonicResponse)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: int getSize()
com.umeng.commonsdk.UMConfigureImpl$1: void run()
org.simpleframework.xml.core.Support: Support()
com.google.android.material.bottomnavigation.BottomNavigationView: BottomNavigationView(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse: com.caij.puremusic.drive.model.JellyfinPlaylistsResponse copy$default(com.caij.puremusic.drive.model.JellyfinPlaylistsResponse,java.util.List,int,int,int,java.lang.Object)
org.simpleframework.xml.core.Reflector: java.lang.reflect.ParameterizedType getReturnType(java.lang.reflect.Method)
org.simpleframework.xml.util.WeakCache$Segment: boolean contains(java.lang.Object)
com.tencent.mm.opensdk.modelmsg.SendAuth$Options: void toBundle(android.os.Bundle)
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.drawable.Drawable getForeground()
com.google.android.gms.internal.play_billing.zzu: zzu()
org.jcodec.containers.mp4.boxes.AudioSampleEntry: int getBytesPerSample()
org.jcodec.containers.mp4.boxes.ClipRegionBox: short getY()
org.simpleframework.xml.convert.Reference: java.lang.Object getValue()
com.tencent.mm.opensdk.modelmsg.WXMusicVipInfo: boolean checkArgs()
org.jaudiotagger.tag.TagOptionSingleton: java.lang.String getInstanceKey()
org.simpleframework.xml.core.DefaultScanner: org.simpleframework.xml.Version getRevision()
com.caij.puremusic.drive.model.SubPlayList$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.caij.puremusic.db.model.PlaylistEntityQueries: app.cash.sqldelight.Query searchPlaylistByName(java.lang.String,kotlin.jvm.functions.Function2)
org.jcodec.containers.mp4.boxes.TrunBox: org.jcodec.containers.mp4.boxes.TrunBox$Factory create(int)
org.simpleframework.xml.core.ElementListUnionParameter: int getIndex()
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: VorbisCommentTag()
org.jaudiotagger.tag.id3.framebody.FrameBodyMCDI: FrameBodyMCDI(org.jaudiotagger.tag.id3.framebody.FrameBodyMCDI)
org.simpleframework.xml.core.ElementArrayLabel: java.lang.Object getEmpty(org.simpleframework.xml.core.Context)
org.jcodec.containers.mp4.boxes.NodeBox: void dump(java.lang.StringBuilder)
com.umeng.commonsdk.statistics.common.MLog: void v(java.lang.String,java.lang.Object[])
org.simpleframework.xml.core.AnnotationFactory: java.lang.annotation.Annotation getInstance(java.lang.Class)
com.umeng.commonsdk.framework.a: void i()
com.umeng.commonsdk.statistics.common.MLog: void w(java.lang.String)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
org.simpleframework.xml.core.ClassScanner: org.simpleframework.xml.core.Function getComplete()
com.tencent.bugly.proguard.o: void onDbDowngrade(android.database.sqlite.SQLiteDatabase,int,int)
com.caij.puremusic.network.model.LastFmTrack$Track$Wiki: java.lang.String getPublished()
com.caij.puremusic.drive.model.AlbumArtist: boolean equals(java.lang.Object)
com.tencent.mm.opensdk.modelbiz.WXOpenCustomerServiceChat$Resp: WXOpenCustomerServiceChat$Resp()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String)
com.google.android.material.navigation.NavigationBarView: int getLabelVisibilityMode()
org.simpleframework.xml.Path: java.lang.String value()
com.tencent.mmkv.MMKV: void clearMemoryCache()
org.jcodec.containers.mp4.boxes.NodeBox: NodeBox(org.jcodec.containers.mp4.boxes.Header)
org.jaudiotagger.audio.mp3.XingFrame: boolean isAudioSizeEnabled()
com.tencent.bugly.proguard.ad: android.util.Pair a(java.util.List)
org.simpleframework.xml.core.Parameter: java.lang.String toString()
com.google.android.material.chip.Chip: void setIconEndPaddingResource(int)
com.caij.puremusic.db.model.SongQueries$SongsByNameAlbumQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.caij.puremusic.db.model.ServerArtistCoverQueries$GetByIdQuery: ServerArtistCoverQueries$GetByIdQuery(com.caij.puremusic.db.model.ServerArtistCoverQueries,java.lang.String,kotlin.jvm.functions.Function1)
com.google.android.material.chip.Chip: void setChipStartPadding(float)
com.alipay.apmobilesecuritysdk.c.a: void a(java.lang.Throwable)
com.tencent.mm.opensdk.modelmsg.ShowMessageFromWX$Req: int getType()
org.jaudiotagger.audio.aiff.AiffTagWriter: void write(org.jaudiotagger.tag.Tag,java.nio.channels.FileChannel,java.lang.String)
org.simpleframework.xml.stream.DocumentReader$Start: java.lang.String getReference()
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
com.caij.puremusic.drive.model.DropboxDriveItem$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.db.model.Song: int component3()
androidx.core.view.ViewCompat$Api16Impl: int getWindowSystemUiVisibility(android.view.View)
org.jaudiotagger.tag.id3.framebody.FrameBodyWXXX: java.lang.String getIdentifier()
org.jaudiotagger.utils.tree.DefaultTreeModel: void setAsksAllowsChildren(boolean)
com.alipay.sdk.app.PayTask: java.lang.String fetchTradeToken()
com.umeng.commonsdk.debug.UMRTLog: void sv(java.lang.String,java.lang.String)
com.umeng.analytics.Gender$1: java.lang.String toString()
org.simpleframework.xml.stream.PrefixResolver: java.lang.String getPrefix(java.lang.String)
com.thegrizzlylabs.sardineandroid.model.SyncCollection: void setSyncToken(java.lang.String)
com.caij.puremusic.drive.model.JellyfinFolder$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
org.simpleframework.xml.core.Parameter: java.lang.Class getType()
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType valueOf(java.lang.String)
org.simpleframework.xml.core.Factory: org.simpleframework.xml.strategy.Type getPrimitive(org.simpleframework.xml.strategy.Type,java.lang.Class)
org.jaudiotagger.tag.id3.framebody.FrameBodyTPE2: FrameBodyTPE2(byte,java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRL: java.lang.String getIdentifier()
org.simpleframework.xml.core.InstantiatorBuilder: org.simpleframework.xml.core.Creator create(org.simpleframework.xml.core.Signature)
com.umeng.analytics.CoreProtocol: CoreProtocol(com.umeng.analytics.CoreProtocol$1)
org.simpleframework.xml.stream.Formatter: void writeComment(java.lang.String)
com.umeng.analytics.pro.au: int a()
org.jaudiotagger.tag.mp4.field.Mp4TagReverseDnsField: void setDescriptor(java.lang.String)
com.caij.puremusic.drive.model.AlbumItem$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
org.jaudiotagger.tag.asf.AsfTagTextField: AsfTagTextField(org.jaudiotagger.tag.asf.AsfFieldKey,java.lang.String)
org.jaudiotagger.audio.asf.data.ContentBranding: java.lang.String getBannerImageURL()
org.jaudiotagger.audio.flac.FlacAudioHeader: FlacAudioHeader()
com.google.gson.FieldNamingPolicy: java.lang.String modifyString(char,java.lang.String,int)
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: java.lang.String regist(java.lang.String,boolean,int)
org.jaudiotagger.audio.flac.FlacTagWriter$MetadataBlockInfo: FlacTagWriter$MetadataBlockInfo()
com.google.android.material.bottomsheet.BottomSheetBehavior: void setWindowInsetsListener(android.view.View)
org.jaudiotagger.tag.id3.ID3Unsynchronization: boolean requiresUnsynchronization(byte[])
org.simpleframework.xml.core.Instantiator: java.lang.Object getInstance(org.simpleframework.xml.core.Criteria)
com.umeng.commonsdk.utils.UMUtils: byte[] getMiniArray()
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
org.simpleframework.xml.core.VersionLabel: VersionLabel(org.simpleframework.xml.core.Contact,org.simpleframework.xml.Version,org.simpleframework.xml.stream.Format)
androidx.fragment.app.Fragment: void onSaveInstanceState(android.os.Bundle)
org.simpleframework.xml.core.KeyBuilder$Key: boolean equals(org.simpleframework.xml.core.KeyBuilder$Key)
com.caij.puremusic.db.model.SongQueries$GetAlbumSongCountQuery: void addListener(app.cash.sqldelight.Query$Listener)
com.tencent.bugly.proguard.af: java.util.Map a(java.net.HttpURLConnection)
com.caij.puremusic.drive.model.PlayListItem: java.lang.String getLocationType()
com.umeng.analytics.MobclickAgent$PageMode: com.umeng.analytics.MobclickAgent$PageMode valueOf(java.lang.String)
org.jaudiotagger.audio.asf.data.GUIDFormatException: GUIDFormatException(java.lang.String)
com.google.gson.FieldNamingPolicy: FieldNamingPolicy(java.lang.String,int,com.google.gson.FieldNamingPolicy$1)
com.google.android.material.slider.Slider: int getTrackWidth()
com.caij.puremusic.drive.model.AlbumArtist: java.lang.String component2()
com.umeng.commonsdk.statistics.common.ReportPolicy$LatentPolicy: boolean isValid()
org.simpleframework.xml.core.MethodScanner$PartMap: MethodScanner$PartMap()
org.jaudiotagger.tag.id3.framebody.FrameBodyWCOP: java.lang.String getIdentifier()
org.jaudiotagger.utils.DirectByteBufferUtils: void release(java.nio.Buffer)
com.umeng.commonsdk.config.g: g()
com.yalantis.ucrop.view.OverlayView: void setTargetAspectRatio(float)
org.simpleframework.xml.core.ClassSchema: org.simpleframework.xml.Version getRevision()
com.caij.puremusic.drive.model.JellyfinSongListResponse$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.simpleframework.xml.core.Expression: java.lang.String getElement(java.lang.String)
com.umeng.commonsdk.statistics.proto.e$c: void b(com.umeng.analytics.pro.bu,com.umeng.commonsdk.statistics.proto.e)
org.simpleframework.xml.stream.PrefixResolver: PrefixResolver(org.simpleframework.xml.stream.OutputNode)
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$deleteById$2: DriveFileDownUrlInfoQueries$deleteById$2()
org.jaudiotagger.tag.lyrics3.Lyrics3v2Fields: boolean isLyrics3v2FieldIdentifier(java.lang.String)
com.caij.puremusic.network.model.Artist: void setId(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
org.repackage.com.vivo.identifier.IdentifierIdClient: java.lang.String b(java.lang.String)
org.simpleframework.xml.core.ElementListUnionLabel: java.lang.Object getEmpty(org.simpleframework.xml.core.Context)
com.alipay.android.phone.mrpc.core.q: long b(org.apache.http.HttpResponse)
com.google.android.material.progressindicator.LinearProgressIndicator: int getIndeterminateAnimationType()
com.caij.puremusic.db.model.PlaylistEntityQueries$PlaylistByNameQuery$execute$1: PlaylistEntityQueries$PlaylistByNameQuery$execute$1(com.caij.puremusic.db.model.PlaylistEntityQueries$PlaylistByNameQuery)
com.caij.puremusic.drive.model.PlaylistResponse$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.google.android.material.button.MaterialButton: void setIconTintResource(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyWPAY: FrameBodyWPAY()
com.caij.puremusic.db.model.ServerSongCoverQueries: app.cash.sqldelight.Query getById(java.lang.String)
org.simpleframework.xml.stream.DocumentReader: org.simpleframework.xml.stream.DocumentReader$Start start(org.w3c.dom.Node)
org.jaudiotagger.audio.mp3.MP3AudioHeader: java.lang.String getBitRate()
com.thegrizzlylabs.sardineandroid.model.Limit: java.math.BigInteger getNresults()
com.google.android.material.navigationrail.NavigationRailView: void setMenuGravity(int)
androidx.core.view.ViewCompat$Api30Impl: androidx.core.view.WindowInsetsControllerCompat getWindowInsetsController(android.view.View)
org.jaudiotagger.tag.datatype.TempoCode: java.lang.String toString()
org.simpleframework.xml.core.Support: org.simpleframework.xml.core.Instance getInstance(org.simpleframework.xml.strategy.Value)
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(int)
com.caij.puremusic.drive.model.Auth2Token: java.lang.String component1()
com.tencent.bugly.proguard.as: boolean a(java.lang.String)
org.jcodec.containers.mp4.boxes.MediaHeaderBox: int getQuality()
androidx.appcompat.widget.SwitchCompat: int getThumbOffset()
com.umeng.commonsdk.internal.c: void a(android.content.Context)
com.caij.puremusic.db.model.SongQueries$songsByAlum$1: java.lang.Object invoke(java.lang.Object)
org.simpleframework.xml.core.NamespaceDecorator: NamespaceDecorator()
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
com.umeng.analytics.pro.b$a$a: android.os.IBinder asBinder()
com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()
com.alipay.apmobilesecuritysdk.face.APSecuritySdk: java.lang.String getApdidToken()
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
org.jaudiotagger.test.TestAudioTagger: TestAudioTagger()
com.umeng.commonsdk.statistics.idtracking.a: void a(com.umeng.commonsdk.statistics.proto.b)
com.thegrizzlylabs.sardineandroid.model.Lockentry: void setLocktype(com.thegrizzlylabs.sardineandroid.model.Locktype)
com.r0adkll.slidr.model.SlidrPosition: SlidrPosition(java.lang.String,int)
com.caij.puremusic.drive.model.PlexAlbumsResponse: com.caij.puremusic.drive.model.PlexAlbumsResponse copy(com.caij.puremusic.drive.model.AlbumMediaContainer)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
com.umeng.analytics.pro.bu: int w()
org.jaudiotagger.tag.asf.AsfFieldKey: java.lang.String toString()
com.umeng.commonsdk.utils.UMUtils: boolean checkPath(java.lang.String)
org.jcodec.containers.mp4.boxes.MovieHeaderBox: void setNextTrackId(int)
org.simpleframework.xml.core.Source: org.simpleframework.xml.core.Caller getCaller(java.lang.Class)
com.umeng.commonsdk.statistics.c: android.content.Context b(com.umeng.commonsdk.statistics.c)
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportByInterval: void setReportInterval(long)
nl.adaptivity.xmlutil.serialization.InputKind: boolean mapsTo$xmlutil_serialization(nl.adaptivity.xmlutil.serialization.OutputKind)
org.jcodec.containers.mp4.boxes.CompositionOffsetsBox$LongEntry: CompositionOffsetsBox$LongEntry(long,long)
org.jcodec.containers.mp4.boxes.FullBox: void setVersion(byte)
com.google.android.material.bottomsheet.BottomSheetBehavior: void setPeekHeight(int,boolean)
com.thegrizzlylabs.sardineandroid.model.Prop: void setGroup(com.thegrizzlylabs.sardineandroid.model.Group)
org.simpleframework.xml.core.Variable$Adapter: java.lang.Object read(org.simpleframework.xml.stream.InputNode)
org.repackage.com.zui.deviceidservice.IDeviceidInterface$Stub$Proxy: java.lang.String b()
org.simpleframework.xml.stream.OutputBuffer: OutputBuffer()
androidx.constraintlayout.widget.ConstraintHelper: void setIds(java.lang.String)
com.umeng.analytics.process.UMProcessDBHelper$InsertEventCallback: boolean onFileLock(java.lang.String,java.lang.Object)
org.simpleframework.xml.transform.BigIntegerTransform: java.lang.String write(java.math.BigInteger)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSize(int)
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException: GooglePlayServicesMissingManifestValueException()
org.jaudiotagger.tag.TagOptionSingleton: boolean isCheckIsWritable()
com.caij.puremusic.drive.model.ADriveItem: java.lang.String getDrive_id()
com.caij.puremusic.db.model.AlbumQueries$deleteAlbumById$2: void invoke(kotlin.jvm.functions.Function1)
org.jaudiotagger.tag.TagOptionSingleton: org.jaudiotagger.audio.wav.WavSaveOrder getWavSaveOrder()
com.caij.puremusic.drive.model.SubsonicSearchListResponse: com.caij.puremusic.drive.model.SubsonicSearchResponse getSubsonicResponse()
org.jaudiotagger.tag.id3.ID3v22FieldKey: ID3v22FieldKey(java.lang.String,int,java.lang.String,java.lang.String,org.jaudiotagger.tag.id3.Id3FieldType)
com.umeng.analytics.pro.n: void n()
com.caij.puremusic.drive.model.Multistatus: java.util.List getResponse()
org.jaudiotagger.audio.aiff.AiffUtil: double read80BitDouble(java.nio.ByteBuffer)
com.tencent.bugly.proguard.ac: com.tencent.bugly.crashreport.common.strategy.StrategyBean b(com.tencent.bugly.proguard.ac)
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgramEnvironment$Req: WXPreloadMiniProgramEnvironment$Req()
com.caij.puremusic.network.model.LastFmArtist$Artist: void setImage(java.util.List)
me.tankery.lib.circularseekbar.CircularSeekBar: float getPointerStrokeWidth()
com.umeng.analytics.pro.bv: bv(java.lang.String)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentReader: VorbisCommentReader()
com.alipay.apmobilesecuritysdk.e.b: b(java.lang.String,java.lang.String,java.lang.String)
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason valueOf(java.lang.String)
com.thegrizzlylabs.sardineandroid.DavQuota: long getAvailable(com.thegrizzlylabs.sardineandroid.model.Response)
com.caij.puremusic.db.model.Album: long getId()
org.jaudiotagger.audio.ogg.util.OggCRCFactory: int u(int)
com.thegrizzlylabs.sardineandroid.model.Propfind: void setPropname(com.thegrizzlylabs.sardineandroid.model.Propname)
com.google.android.material.slider.Slider: void setThumbElevationResource(int)
org.simpleframework.xml.core.InstantiatorBuilder: void validateConstructor(org.simpleframework.xml.core.Label,java.util.List)
org.simpleframework.xml.core.Criteria: void commit(java.lang.Object)
org.simpleframework.xml.core.AttributeParameter: java.lang.String getName()
com.google.android.material.bottomappbar.BottomAppBar: android.content.res.ColorStateList getBackgroundTint()
com.umeng.analytics.pro.o$d: java.lang.String b()
com.google.common.reflect.TypeToken$TypeFilter: com.google.common.reflect.TypeToken$TypeFilter[] $values()
com.umeng.analytics.MobclickAgent: void setScenarioType(android.content.Context,com.umeng.analytics.MobclickAgent$EScenarioType)
com.umeng.commonsdk.utils.b: b(com.umeng.commonsdk.utils.b$1)
com.google.android.material.navigation.NavigationBarItemView: void setIconSize(int)
com.caij.puremusic.drive.model.GoogleDriveFile: java.lang.String component3()
org.simpleframework.xml.stream.InputElement: org.simpleframework.xml.stream.Position getPosition()
androidx.appcompat.widget.SwitchCompat: void setEmojiCompatEnabled(boolean)
org.simpleframework.xml.core.ObjectScanner: org.simpleframework.xml.core.Decorator getDecorator()
com.tencent.bugly.proguard.as: void a(java.util.ArrayList,java.lang.String,android.content.Context)
org.jaudiotagger.tag.id3.framebody.FrameBodyTKEY: FrameBodyTKEY(org.jaudiotagger.tag.id3.framebody.FrameBodyTKEY)
org.jaudiotagger.audio.generic.GenericTag$GenericTagTextField: java.lang.String getId()
com.tencent.mm.opensdk.openapi.MMSharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)
com.tencent.mm.opensdk.modelbiz.SubscribeMiniProgramMsg: SubscribeMiniProgramMsg()
org.simpleframework.xml.core.ElementArrayLabel: java.lang.String getOverride()
org.simpleframework.xml.core.ClassScanner: void persist(java.lang.reflect.Method)
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey getAsfFieldKey(java.lang.String)
com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextAppearance(int)
org.simpleframework.xml.core.Composite: void read(org.simpleframework.xml.stream.InputNode,java.lang.Object,org.simpleframework.xml.core.Schema)
com.umeng.commonsdk.statistics.common.MLog: void i(java.lang.String,java.lang.String,java.lang.Throwable)
com.tencent.bugly.proguard.ap: java.lang.String a(java.lang.Throwable)
org.simpleframework.xml.Attribute: java.lang.String name()
com.google.android.material.navigationrail.NavigationRailView: int getMaxItemCount()
com.caij.puremusic.activities.PermissionActivity: PermissionActivity()
org.jaudiotagger.audio.mp4.Chunk: int[] getSampleDurs()
org.jaudiotagger.tag.datatype.Lyrics3Image: int getSize()
android.support.v4.media.RatingCompat$Api19Impl: android.media.Rating newHeartRating(boolean)
com.umeng.commonsdk.statistics.proto.e$a: e$a()
org.simpleframework.xml.core.ElementMapLabel: org.simpleframework.xml.strategy.Type getDependent()
com.caij.puremusic.db.model.HistoryEntityQueries$GetByIdQuery$execute$1: HistoryEntityQueries$GetByIdQuery$execute$1(com.caij.puremusic.db.model.HistoryEntityQueries$GetByIdQuery)
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query songsByAlum(java.lang.String,kotlin.jvm.functions.Function18)
com.caij.puremusic.drive.model.Part: java.lang.String toString()
com.caij.puremusic.network.model.LastFmArtist$Artist$Stats: java.lang.String getListeners()
com.umeng.analytics.pro.cj: cj()
org.simpleframework.xml.stream.Formatter: void write(java.lang.String)
org.simpleframework.xml.core.SessionManager: SessionManager()
org.jcodec.containers.mp4.boxes.TrakBox: void setDataRef(java.lang.String)
org.jaudiotagger.audio.mp3.XingFrame: XingFrame(java.nio.ByteBuffer)
org.simpleframework.xml.core.Persister: Persister(org.simpleframework.xml.strategy.Strategy,java.util.Map)
com.caij.puremusic.model.Home: int component3()
org.jaudiotagger.audio.wav.WavTagWriter: void saveActiveExisting(org.jaudiotagger.tag.wav.WavTag,java.nio.channels.FileChannel,org.jaudiotagger.tag.wav.WavTag)
org.jaudiotagger.audio.real.RealChunk: RealChunk(java.lang.String,int,byte[])
org.jaudiotagger.tag.flac.FlacTag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey,java.lang.String)
org.jaudiotagger.tag.datatype.PairedTextEncodedStringNullTerminated: java.lang.Object getValue()
com.umeng.analytics.pro.an: com.umeng.analytics.pro.an c(int)
com.afollestad.materialdialogs.internal.main.BaseSubLayout: int getDividerHeight()
org.jaudiotagger.utils.tree.TreeModelEvent: int[] getChildIndices()
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyPairs: java.lang.String getUserFriendlyValue()
com.alipay.android.app.IRemoteServiceCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
okhttp3.TlsVersion: java.lang.String javaName()
com.google.android.material.navigation.NavigationBarItemView: void setItemBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
org.jaudiotagger.tag.id3.framebody.FrameBodyTPOS: java.lang.String getIdentifier()
com.caij.puremusic.db.model.ServerSongCoverQueries$deleteSongBySource$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.simpleframework.xml.core.AttributeParameter: int getIndex()
com.caij.puremusic.model.AudioTagInfo: com.caij.puremusic.model.ArtworkInfo getArtworkInfo()
org.jaudiotagger.tag.asf.AsfTag$AsfFieldIterator: boolean hasNext()
com.tencent.bugly.proguard.i: com.tencent.bugly.proguard.i a(int[],java.lang.String)
org.simpleframework.xml.convert.RegistryStrategy: boolean isReference(org.simpleframework.xml.strategy.Value)
com.caij.puremusic.db.model.ServerSongCoverQueries$GetByIdQuery: java.lang.String toString()
com.google.android.material.slider.BaseSlider: float getThumbElevation()
org.jaudiotagger.tag.id3.valuepair.TextEncoding: org.jaudiotagger.tag.id3.valuepair.TextEncoding getInstanceOf()
org.simpleframework.xml.core.OverrideType: java.lang.String toString()
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String component13()
com.umeng.commonsdk.config.d: boolean a(java.lang.String)
com.umeng.analytics.pro.bv: bv(java.lang.String,java.lang.Throwable)
com.umeng.umzid.c: boolean c(java.lang.String)
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean isExpandedAndShouldRemoveCorners()
com.google.android.material.search.SearchBar: void setText(java.lang.CharSequence)
com.caij.puremusic.drive.model.JellyfinArtistResponse: int component3()
com.google.android.exoplayer2.audio.AudioCapabilities$Api29: int getMaxSupportedChannelCountForPassthrough(int,int)
com.google.android.exoplayer2.drm.DrmUtil$Api18: boolean isNotProvisionedException(java.lang.Throwable)
com.tencent.mm.opensdk.modelbiz.WXChannelOpenLive$Resp: boolean checkArgs()
com.tencent.bugly.BuglyStrategy: java.lang.Class getUserInfoActivity()
com.caij.puremusic.db.model.HistoryEntityQueries: app.cash.sqldelight.Query getById(long,kotlin.jvm.functions.Function2)
com.caij.puremusic.drive.model.OneDriveFile: void write$Self(com.caij.puremusic.drive.model.OneDriveFile,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
org.jaudiotagger.tag.wav.WavTag: org.jaudiotagger.tag.TagField createCompilationField(boolean)
com.caij.puremusic.drive.model.PlayListItem: java.lang.String getServerId()
org.jaudiotagger.tag.datatype.SynchronisedTempoCode: void setTimestamp(long)
org.jaudiotagger.audio.ogg.OggVorbisTagWriter: void replaceSecondPageAndRenumberPageSeqs(org.jaudiotagger.audio.ogg.OggVorbisTagReader$OggVorbisHeaderSizes,int,int,org.jaudiotagger.audio.ogg.util.OggPageHeader,java.nio.ByteBuffer,java.io.RandomAccessFile,java.io.RandomAccessFile)
com.google.android.material.slider.BaseSlider: void setTickActiveTintList(android.content.res.ColorStateList)
com.caij.puremusic.fragments.settings.MainSettingsFragment: MainSettingsFragment()
com.tencent.bugly.proguard.bt: int hashCode()
com.tencent.bugly.proguard.k: byte a(byte,int,boolean)
com.thegrizzlylabs.sardineandroid.report.SardineReport: java.lang.String toXml()
org.simpleframework.xml.core.PrimitiveScanner: java.lang.String getName()
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean sendPreloadWXMiniProgramEnvironment(android.content.Context,com.tencent.mm.opensdk.modelbase.BaseReq)
org.simpleframework.xml.core.ObjectScanner: org.simpleframework.xml.Order getOrder()
com.alipay.apmobilesecuritysdk.otherid.UmidSdkWrapper: java.lang.String startUmidTaskSync(android.content.Context,int)
com.caij.puremusic.db.model.AlbumQueries$deleteAlbumById$2: java.lang.Object invoke(java.lang.Object)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCloseIconTint()
com.alipay.apmobilesecuritysdk.e.i: void d(java.lang.String)
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$Req: SendMessageToWX$Req(android.os.Bundle)
org.jaudiotagger.tag.mp4.Mp4TagField: byte[] getDataBytes()
com.umeng.commonsdk.config.FieldManager: FieldManager()
com.google.android.material.bottomappbar.BottomAppBar: int getFabAnimationMode()
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox tfhd(int,long,int,int,int,int)
org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)
com.alipay.android.phone.mrpc.core.k: int c(java.lang.String)
org.simpleframework.xml.core.Context: org.simpleframework.xml.core.Caller getCaller(java.lang.Class)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.umeng.analytics.pro.au: au(int,java.lang.String)
com.yalantis.ucrop.view.OverlayView: void setCropGridStrokeWidth(int)
androidx.loader.content.ModernAsyncTask$Status: ModernAsyncTask$Status(java.lang.String,int)
com.umeng.commonsdk.config.d$c: com.umeng.commonsdk.config.d$c valueOf(java.lang.String)
org.simpleframework.xml.core.ModelAssembler: void registerElement(org.simpleframework.xml.core.Model,org.simpleframework.xml.core.Expression)
org.jaudiotagger.tag.mp4.field.Mp4TagByteField: org.jaudiotagger.tag.mp4.field.Mp4FieldType getFieldType()
org.jaudiotagger.audio.mp3.ByteArrayMP3AudioHeader: ByteArrayMP3AudioHeader(byte[])
com.tencent.mm.opensdk.modelmsg.WXTextObject: void unserialize(android.os.Bundle)
org.simpleframework.xml.core.Persister: void write(java.lang.Object,java.io.OutputStream,java.lang.String)
com.google.common.hash.Hashing$ChecksumType: java.lang.Object get()
com.caij.puremusic.db.model.Album: long getDateModified()
com.google.android.material.progressindicator.BaseProgressIndicator: int[] getIndicatorColor()
com.umeng.analytics.pro.af: java.lang.String a(android.content.Context)
com.thegrizzlylabs.sardineandroid.DavResource: java.lang.String getEtag(com.thegrizzlylabs.sardineandroid.model.Response)
com.caij.puremusic.db.model.SongQueries$deleteSongBySource$2: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.drive.model.OneDriveFolder$Companion: OneDriveFolder$Companion()
com.tencent.bugly.proguard.s: long l()
com.caij.puremusic.drive.model.Metadata: java.lang.String getGrandparentKey()
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
org.simpleframework.xml.core.TextParameter: java.lang.String getPath()
androidx.customview.widget.ViewDragHelper$Callback: void onEdgeDragStarted(int,int)
com.umeng.commonsdk.statistics.proto.e$a: e$a(com.umeng.commonsdk.statistics.proto.e$1)
io.github.aakira.napier.LogLevel: LogLevel(java.lang.String,int)
org.repackage.com.vivo.identifier.IdentifierIdClient: void a(android.content.Context,int,java.lang.String)
com.alipay.android.phone.mrpc.core.o: java.lang.String a()
org.jaudiotagger.tag.mp4.field.Mp4TagReverseDnsField: org.jaudiotagger.tag.mp4.field.Mp4FieldType getFieldType()
org.simpleframework.xml.core.AttributeParameter: org.simpleframework.xml.core.Expression getExpression()
org.jaudiotagger.tag.id3.ID3v22Frame: int getFrameSizeSize()
org.simpleframework.xml.core.Composite: void writeElements(org.simpleframework.xml.stream.OutputNode,java.lang.Object,org.simpleframework.xml.core.Section)
com.google.android.material.bottomsheet.BottomSheetBehavior: void setHalfExpandedRatio(float)
org.jcodec.containers.mp4.boxes.MetaValue: org.jcodec.containers.mp4.boxes.MetaValue createInt(int)
com.caij.puremusic.drive.model.SearchResult3$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.simpleframework.xml.core.ObjectScanner: java.lang.String getName()
org.jaudiotagger.tag.id3.reference.ITunesRating: int convertRatingFromFiveStarScale(int)
com.caij.puremusic.db.model.PlaybackSongQueries: void clear()
com.umeng.analytics.pro.aw: int a(java.util.Set,java.util.Set)
org.jaudiotagger.tag.images.StandardArtwork: StandardArtwork()
com.caij.puremusic.db.model.SongQueries$GetAlbumSongCountQuery: java.lang.String toString()
com.umeng.analytics.pro.bn: void d()
com.umeng.analytics.pro.bf: java.lang.Object a(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.bp)
com.google.android.material.navigation.NavigationBarView: int getItemPaddingBottom()
com.caij.puremusic.drive.model.OneDriveFileResponse: com.caij.puremusic.drive.model.OneDriveFileResponse copy$default(com.caij.puremusic.drive.model.OneDriveFileResponse,java.lang.String,int,java.util.List,int,java.lang.Object)
org.jcodec.containers.mp4.boxes.ColorExtension: short getMatrixIndex()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getDefault()
org.simpleframework.xml.core.PrimitiveArray: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object)
com.umeng.analytics.pro.al: void a(java.lang.String,java.lang.Object[])
com.umeng.analytics.pro.bu: void d()
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: void unregisterApp()
org.simpleframework.xml.core.TextListLabel: java.lang.String getPath()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: boolean setEncoding(java.nio.charset.Charset)
com.caij.puremusic.db.model.SongQueries$FirstSongByAlbumIdQuery: int getSourceType()
com.google.android.material.chip.Chip: void setCheckable(boolean)
com.umeng.analytics.pro.y: com.umeng.analytics.pro.y a()
com.umeng.analytics.pro.av: com.umeng.analytics.pro.bc fieldForId(int)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
org.jcodec.containers.mp4.boxes.Header: boolean equals(java.lang.Object)
com.caij.puremusic.drive.model.PlexSectionsResponse: PlexSectionsResponse(com.caij.puremusic.drive.model.FMediaContainer)
org.jaudiotagger.tag.id3.ID3v22Tag: java.util.List getArtworkList()
com.umeng.analytics.pro.g: void b()
androidx.core.provider.FontProvider$Api16Impl: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.Object)
com.caij.puremusic.db.model.Song: java.lang.String getPath()
org.jaudiotagger.tag.id3.framebody.FrameBodyTMCL: FrameBodyTMCL(byte,java.lang.String)
com.google.android.material.chip.ChipGroup: void setShowDividerHorizontal(int)
com.thegrizzlylabs.sardineandroid.util.SardineUtil: org.simpleframework.xml.Serializer getSerializer()
org.simpleframework.xml.core.Converter: java.lang.Object read(org.simpleframework.xml.stream.InputNode)
com.umeng.commonsdk.statistics.noise.ABTest: boolean validate(java.lang.String)
com.caij.puremusic.drive.model.Resourcetype$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
org.jaudiotagger.audio.aiff.AiffAudioHeader: java.util.List getComments()
com.tencent.mm.opensdk.modelmsg.GetMessageFromWX$Resp: GetMessageFromWX$Resp()
org.simpleframework.xml.core.MethodPartFactory: org.simpleframework.xml.core.MethodName getRead(java.lang.reflect.Method,org.simpleframework.xml.core.MethodType)
org.jcodec.containers.mp4.boxes.AudioSampleEntry: void parse(java.nio.ByteBuffer)
org.jaudiotagger.logging.PlainTextTagDisplayFormatter: void addElement(java.lang.String,int)
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener)
com.tencent.bugly.proguard.x: void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int)
org.simpleframework.xml.core.ExpressionBuilder: ExpressionBuilder(org.simpleframework.xml.core.Detail,org.simpleframework.xml.core.Support)
com.google.android.material.textfield.TextInputLayout: void setSuffixText(java.lang.CharSequence)
com.umeng.analytics.pro.an$e: com.umeng.analytics.pro.an$e b(int)
org.jcodec.containers.mp4.boxes.SyncSamplesBox: int[] getSyncSamples()
org.simpleframework.xml.core.EmptyExpression: int getIndex()
androidx.constraintlayout.helper.widget.Flow: void setLastVerticalStyle(int)
com.caij.puremusic.views.TintedBottomNavigationView$2$1: TintedBottomNavigationView$2$1()
com.tencent.bugly.proguard.as: boolean d(com.tencent.bugly.crashreport.crash.CrashDetailBean)
com.caij.puremusic.drive.model.PlexUser$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.jaudiotagger.tag.id3.framebody.FrameBodyTPE2: java.lang.String getIdentifier()
org.simpleframework.xml.stream.NodeWriter: NodeWriter(java.io.Writer)
com.caij.puremusic.drive.model.JellyfinLoginResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.caij.puremusic.drive.model.PlexAlbumsResponse: PlexAlbumsResponse(int,com.caij.puremusic.drive.model.AlbumMediaContainer,kotlinx.serialization.internal.SerializationConstructorMarker)
com.umeng.commonsdk.utils.UMUtils: java.lang.String getSubOSName(android.content.Context)
org.jaudiotagger.audio.asf.data.ContainerType: boolean isGuidEnabled()
org.jaudiotagger.utils.tree.TreeModelEvent: org.jaudiotagger.utils.tree.TreePath getTreePath()
com.umeng.analytics.pro.bo: void m()
com.umeng.commonsdk.statistics.internal.a: void f(java.lang.String)
com.google.android.material.chip.Chip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
org.simpleframework.xml.stream.PullReader$Start: java.lang.String getReference()
com.umeng.commonsdk.utils.UMUtils: void setLastAppkey(android.content.Context,java.lang.String)
com.tencent.mm.opensdk.modelmsg.GetMessageFromWX$Req: GetMessageFromWX$Req()
org.simpleframework.xml.core.ElementLabel: java.lang.String getPath()
org.jaudiotagger.audio.asf.io.AsfHeaderReader: org.jaudiotagger.audio.asf.data.AsfHeader readHeader(java.io.File)
com.tencent.bugly.proguard.bk: byte[] a(byte[])
com.caij.puremusic.fragments.player.color.ColorFragment: ColorFragment()
org.jcodec.containers.mp4.boxes.VideoMediaHeaderBox: java.lang.String fourcc()
org.jaudiotagger.tag.datatype.ID3v2LyricLine: ID3v2LyricLine(org.jaudiotagger.tag.datatype.ID3v2LyricLine)
com.tencent.bugly.proguard.ak: boolean a(java.lang.Runnable,long)
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
org.jaudiotagger.audio.wav.chunk.WavListChunk: WavListChunk(java.lang.String,java.nio.ByteBuffer,org.jaudiotagger.audio.iff.ChunkHeader,org.jaudiotagger.tag.wav.WavTag)
com.tencent.bugly.proguard.z: boolean e(android.content.Context)
org.jcodec.containers.mp4.boxes.EsdsBox$DescriptorParser: org.jcodec.containers.mp4.boxes.EsdsBox$Descriptor read(java.nio.ByteBuffer)
org.jcodec.containers.mp4.boxes.IListBox: void doWrite(java.nio.ByteBuffer)
com.umeng.analytics.vshelper.PageNameMonitor: PageNameMonitor(com.umeng.analytics.vshelper.PageNameMonitor$1)
com.caij.puremusic.drive.model.Multistatus$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.drive.model.ADriveItem$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.caij.puremusic.db.model.ArtistQueries$ArtistByNameQuery: ArtistQueries$ArtistByNameQuery(com.caij.puremusic.db.model.ArtistQueries,java.lang.String,kotlin.jvm.functions.Function1)
com.google.android.material.materialswitch.MaterialSwitch: android.graphics.drawable.Drawable getTrackDecorationDrawable()
org.jaudiotagger.tag.id3.AbstractTagFrameBody: int getSize()
org.jcodec.containers.mp4.boxes.HandlerBox: java.lang.String getComponentManufacturer()
org.jaudiotagger.tag.id3.framebody.FrameBodyTLAN: java.lang.String getIdentifier()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void setEndLocationInFile(long)
org.jcodec.containers.mp4.MP4Util: java.util.List getRootAtoms(java.nio.channels.FileChannel)
com.umeng.commonsdk.stateless.b$a: b$a(java.lang.String)
org.simpleframework.xml.Version: java.lang.String name()
com.tencent.mmkv.MMKV: boolean decodeBool(long,java.lang.String,boolean)
androidx.constraintlayout.helper.widget.Flow: void setVerticalBias(float)
org.jaudiotagger.tag.id3.ID3Tags: java.lang.String forceFrameID24To23(java.lang.String)
com.google.android.material.checkbox.MaterialCheckBox: void setUseMaterialThemeColors(boolean)
com.google.android.material.bottomsheet.BottomSheetDragHandleView: void access$000(com.google.android.material.bottomsheet.BottomSheetDragHandleView,int)
androidx.constraintlayout.motion.widget.MotionLayout: void setTransition(androidx.constraintlayout.motion.widget.MotionScene$Transition)
com.caij.puremusic.db.model.PlaylistEntityQueries$insert$2: void invoke(kotlin.jvm.functions.Function1)
com.caij.puremusic.drive.model.OneDriveItem$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.thegrizzlylabs.sardineandroid.model.WriteProperties: WriteProperties()
org.simpleframework.xml.core.MethodPartFactory: java.lang.Class getReturnType(java.lang.reflect.Method)
com.google.android.material.chip.Chip: void setChipBackgroundColor(android.content.res.ColorStateList)
com.caij.puremusic.drive.model.OneDriveItem: java.lang.String getLastModifiedDateTime()
com.umeng.analytics.pro.bu: void a(com.umeng.analytics.pro.br)
com.umeng.commonsdk.framework.UMWorkDispatch: void access$200()
org.jaudiotagger.tag.id3.ID3v24Tag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.images.Artwork)
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: int getNumber()
org.jaudiotagger.audio.exceptions.CannotReadVideoException: CannotReadVideoException(java.lang.String)
com.caij.puremusic.drive.model.OneDriveFile$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.OneDriveFile)
kotlin.time.DurationUnit: DurationUnit(java.lang.String,int,java.util.concurrent.TimeUnit)
com.google.android.material.slider.BaseSlider: void setSeparationUnit(int)
org.jcodec.containers.mp4.boxes.TrakBox: org.jcodec.containers.mp4.boxes.TimeToSampleBox getStts()
com.umeng.umzid.IZIDCompletionCallback: void onFailure(java.lang.String,java.lang.String)
com.caij.puremusic.db.model.ServerSongCoverQueries$GetByIdQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
com.google.android.material.bottomnavigation.BottomNavigationView: int getMaxItemCount()
com.caij.puremusic.network.model.ArtistWrapper: ArtistWrapper(java.lang.String,java.lang.Integer,java.util.List)
org.jaudiotagger.tag.id3.framebody.FrameBodyTLEN: FrameBodyTLEN(byte,java.lang.String)
org.simpleframework.xml.core.ElementParameter: boolean isRequired()
androidx.fragment.app.Fragment: void setRetainInstance(boolean)
org.jaudiotagger.tag.id3.framebody.FrameBodyXSOT: java.lang.String getIdentifier()
com.google.android.material.slider.BaseSlider: void setHaloRadius(int)
org.simpleframework.xml.core.CompositeListUnion: void write(org.simpleframework.xml.stream.OutputNode,java.util.Collection)
org.simpleframework.xml.core.Instantiator: java.lang.Object getInstance()
org.jaudiotagger.tag.datatype.PairedTextEncodedStringNullTerminated$ValuePairs: void add(org.jaudiotagger.tag.datatype.Pair)
com.caij.puremusic.fragments.settings.NotificationSettingsFragment: NotificationSettingsFragment()
com.caij.puremusic.drive.model.PlexPlaylistsResponse: boolean equals(java.lang.Object)
com.tencent.bugly.proguard.ag: void a(com.tencent.bugly.proguard.ag$c)
org.jcodec.containers.mp4.boxes.TrakBox: org.jcodec.containers.mp4.boxes.SampleDescriptionBox getStsd()
org.jcodec.containers.mp4.boxes.Header: void setBodySize(int)
org.jaudiotagger.audio.aiff.AiffTagReader: boolean readChunk(java.nio.channels.FileChannel,org.jaudiotagger.tag.aiff.AiffTag,java.lang.String)
com.caij.puremusic.drive.model.PlexArtistsResponse$Companion: PlexArtistsResponse$Companion()
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationY()
org.jaudiotagger.tag.Tag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.images.Artwork)
org.simpleframework.xml.util.WeakCache$Segment: WeakCache$Segment(org.simpleframework.xml.util.WeakCache,org.simpleframework.xml.util.WeakCache$1)
com.caij.puremusic.drive.model.DropboxDriveItem: java.lang.String component5()
org.jaudiotagger.tag.asf.AsfTagField: java.lang.String getId()
com.tencent.mm.opensdk.modelbiz.WXChannelOpenEvent$Req: void fromBundle(android.os.Bundle)
com.umeng.analytics.b: void b(java.lang.String)
com.umeng.commonsdk.framework.a: void c(int)
com.umeng.analytics.pro.o: boolean c(boolean)
org.jcodec.containers.mp4.boxes.EsdsBox$DecoderConfig: int getBufSize()
org.jaudiotagger.tag.id3.framebody.FrameBodyRVA2: FrameBodyRVA2(org.jaudiotagger.tag.id3.framebody.FrameBodyRVAD)
org.jaudiotagger.audio.AudioFileIO: org.jaudiotagger.audio.AudioFile readMagic(java.io.File)
com.google.android.material.textfield.TextInputLayout: void setHelperTextColor(android.content.res.ColorStateList)
org.simpleframework.xml.core.ElementListUnionParameter: java.lang.Object getKey()
org.jaudiotagger.audio.generic.GenericTag: void deleteField(org.jaudiotagger.tag.FieldKey)
org.simpleframework.xml.stream.OutputStack$Sequence: void remove()
org.jaudiotagger.tag.id3.framebody.FrameBodyGRID: byte getGroupSymbol()
org.simpleframework.xml.stream.PullReader$Text: java.lang.Object getSource()
com.alipay.apmobilesecuritysdk.e.a: com.alipay.apmobilesecuritysdk.e.b c(android.content.Context)
androidx.core.view.AccessibilityDelegateCompat: androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
org.simpleframework.xml.transform.LocaleTransform: LocaleTransform()
com.umeng.analytics.pro.bs: bs(java.lang.String,byte,int)
org.simpleframework.xml.core.Session: boolean isStrict()
com.caij.puremusic.model.Playlist: void writeToParcel(android.os.Parcel,int)
org.jaudiotagger.audio.SupportedFileFormat$11: org.jaudiotagger.tag.Tag createDefaultTag()
org.simpleframework.xml.core.Persister: boolean validate(java.lang.Class,java.lang.String,boolean)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedPadding()
com.caij.puremusic.network.model.LastFmArtist$Artist: LastFmArtist$Artist()
androidx.fragment.app.Fragment: boolean isPostponed()
androidx.appcompat.widget.DropDownListView$Api33Impl: boolean isSelectedChildViewEnabled(android.widget.AbsListView)
com.google.common.base.Equivalence$Identity: Equivalence$Identity()
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: Mp4AtomIdentifier(java.lang.String,int,java.lang.String,java.lang.String)
com.caij.puremusic.drive.model.ArtistItem: java.lang.String component10()
com.caij.puremusic.drive.model.BaiduDriveItem: int component8()
androidx.core.widget.EdgeEffectCompat$Api21Impl: void onPull(android.widget.EdgeEffect,float,float)
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: void c(boolean)
org.jaudiotagger.tag.datatype.PairedTextEncodedStringNullTerminated: PairedTextEncodedStringNullTerminated(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody)
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: void setDataLengthIndicator()
org.jcodec.containers.mp4.boxes.MovieBox: org.jcodec.containers.mp4.boxes.TrakBox getTimecodeTrack()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.viewpager.widget.ViewPager: void setPageMarginDrawable(android.graphics.drawable.Drawable)
com.caij.puremusic.db.model.FolderQueries$selectAll$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: int getAudioSampleRate()
com.umeng.analytics.pro.al: void d(java.lang.String,java.lang.Object[])
com.umeng.commonsdk.statistics.internal.StatTracer: void onRequestFailed()
org.jaudiotagger.tag.id3.framebody.FrameBodyTIPL: java.lang.String getIdentifier()
com.caij.puremusic.drive.model.SearchResult3$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.caij.puremusic.drive.model.ADriveFileResponse: ADriveFileResponse(java.lang.String,java.util.List)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: int getSamplingRate()
com.google.android.material.card.MaterialCardView: int getStrokeWidth()
kotlin.collections.AbstractCollection: AbstractCollection()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: boolean hasCommonFields()
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
com.umeng.commonsdk.UMConfigure$BS_TYPE: com.umeng.commonsdk.UMConfigure$BS_TYPE[] values()
com.alipay.apmobilesecuritysdk.e.i: void h()
org.simpleframework.xml.core.AttributeLabel: java.lang.Class getType()
org.simpleframework.xml.strategy.Allocate: boolean isReference()
com.umeng.commonsdk.statistics.proto.Response: com.umeng.analytics.pro.bc fieldForId(int)
com.caij.puremusic.db.model.PlaylistEntityQueries$CheckPlaylistExistsQuery: void removeListener(app.cash.sqldelight.Query$Listener)
org.jaudiotagger.tag.wav.WavTag: void setField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
org.jaudiotagger.tag.id3.framebody.FrameBodyEncrypted: FrameBodyEncrypted(java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyTPE3: FrameBodyTPE3(java.nio.ByteBuffer,int)
org.jaudiotagger.tag.TagOptionSingleton: int getPlayerCompatability()
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
androidx.appcompat.widget.MenuPopupWindow$Api29Impl: void setTouchModal(android.widget.PopupWindow,boolean)
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonDrawable(int)
com.caij.puremusic.db.model.SongQueries$songsDateLastDesc$1: SongQueries$songsDateLastDesc$1(kotlin.jvm.functions.Function18,com.caij.puremusic.db.model.SongQueries)
com.google.android.material.button.MaterialButton: void setInsetTop(int)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$PostorderEnumeration: boolean hasMoreElements()
com.caij.puremusic.drive.model.Multistatus$Companion: Multistatus$Companion()
com.google.android.material.bottomsheet.BottomSheetDialog: com.google.android.material.bottomsheet.BottomSheetBehavior getBehavior()
org.simpleframework.xml.core.FieldScanner: void build()
com.caij.puremusic.db.model.Album: java.lang.String getArtistName()
com.thegrizzlylabs.sardineandroid.model.Prop: void setQuotaUsedBytes(com.thegrizzlylabs.sardineandroid.model.QuotaUsedBytes)
org.simpleframework.xml.stream.Format: org.simpleframework.xml.stream.Style getStyle()
androidx.core.os.BundleApi18ImplKt: void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
com.caij.puremusic.db.model.ServerAudioFormatQueries$deleteSongBySource$2: ServerAudioFormatQueries$deleteSongBySource$2()
org.simpleframework.xml.transform.DoubleTransform: java.lang.String write(java.lang.Object)
com.umeng.analytics.pro.bu: void a(byte)
com.umeng.commonsdk.internal.utils.h: boolean c()
org.simpleframework.xml.stream.Builder: java.lang.String getAttribute(java.lang.String)
org.jcodec.containers.mp4.boxes.UrlBox: void doWrite(java.nio.ByteBuffer)
org.jaudiotagger.audio.asf.data.ContentDescription: java.lang.String prettyPrint(java.lang.String)
org.simpleframework.xml.core.ClassSchema: org.simpleframework.xml.core.Section getSection()
com.caij.puremusic.db.model.SongQueries$SongsByIdsQuery: SongQueries$SongsByIdsQuery(com.caij.puremusic.db.model.SongQueries,java.util.Collection,kotlin.jvm.functions.Function1)
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportStrategy: boolean shouldSendMessage(boolean)
com.caij.puremusic.db.model.SongEntityQueries$getPlayListSongCount$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.lang.String getValue(org.jaudiotagger.tag.FieldKey,int)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocused(int)
com.tencent.bugly.crashreport.biz.UserInfoBean: UserInfoBean()
com.thegrizzlylabs.sardineandroid.util.EntityWithAnyElementConverter: java.lang.Object read(org.simpleframework.xml.stream.InputNode)
com.caij.puremusic.drive.model.SongItem: int hashCode()
org.jcodec.containers.mp4.MP4Util: org.jcodec.containers.mp4.MP4Util$Movie parseFullMovieChannel(java.nio.channels.FileChannel)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyIND: FieldFrameBodyIND(boolean,boolean)
com.caij.puremusic.db.model.PlaylistEntityQueries$GetPlaylistEntityByIdQuery: long getPlayListId()
org.simpleframework.xml.core.TextListLabel: java.lang.String getEmpty(org.simpleframework.xml.core.Context)
com.tencent.mm.opensdk.modelpay.PayResp: int getType()
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
com.caij.vip.AppGood: int describeContents()
com.umeng.analytics.pro.g: g()
org.jaudiotagger.tag.TagOptionSingleton: boolean isWriteWavForTwonky()
org.simpleframework.xml.strategy.Value: int getLength()
com.alipay.android.phone.mrpc.core.RpcException: java.lang.String getMsg()
com.caij.puremusic.drive.model.PlaylistMetadata$$serializer: PlaylistMetadata$$serializer()
org.jaudiotagger.audio.generic.Utils: boolean isOddLength(long)
com.google.android.material.card.MaterialCardView: int getContentPaddingBottom()
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean shouldHide(android.view.View,float)
org.jaudiotagger.tag.id3.valuepair.ImageFormats: java.lang.String getMimeTypeForFormat(java.lang.String)
com.umeng.analytics.pro.bn: int w()
com.umeng.analytics.filter.EventList: boolean onPreProcessImprintKey(java.lang.String,java.lang.String)
androidx.preference.EditTextPreference: EditTextPreference(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
com.caij.puremusic.drive.model.AMetadata$Companion: AMetadata$Companion()
com.tencent.bugly.proguard.bf: void d()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
org.jaudiotagger.tag.id3.framebody.FrameBodySYTC: void clearTempi()
com.tencent.mm.opensdk.modelbiz.WXChannelStartLive: WXChannelStartLive()
com.caij.puremusic.drive.model.Directory$$serializer: com.caij.puremusic.drive.model.Directory deserialize(kotlinx.serialization.encoding.Decoder)
org.simpleframework.xml.transform.FileTransform: java.lang.String write(java.io.File)
org.simpleframework.xml.core.PrimitiveScanner$EmptySection: org.simpleframework.xml.core.LabelMap getAttributes()
org.simpleframework.xml.core.Extractor: java.lang.annotation.Annotation[] getAnnotations()
com.umeng.commonsdk.UMConfigureImpl: void registerMessageSendListener(com.umeng.commonsdk.utils.onMessageSendListener)
com.caij.puremusic.drive.model.Location$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.tencent.bugly.proguard.g: void a(java.lang.StringBuilder,int)
org.jaudiotagger.tag.id3.framebody.FrameBodyTEXT: FrameBodyTEXT()
org.simpleframework.xml.core.Factory: java.lang.Class getType()
com.google.android.material.button.MaterialButtonToggleGroup: int getCheckedButtonId()
com.tencent.bugly.BuglyStrategy: boolean isEnableCatchAnrTrace()
org.jcodec.containers.mp4.boxes.MetaValue: org.jcodec.containers.mp4.boxes.MetaValue createOtherWithLocale(org.jcodec.containers.mp4.boxes.DataBox)
org.jaudiotagger.audio.AudioFileIO: void addAudioFileModificationListener(org.jaudiotagger.audio.generic.AudioFileModificationListener)
com.caij.puremusic.drive.model.ADriveItem: java.lang.String getType()
org.simpleframework.xml.core.CompositeKey: java.lang.Object read(org.simpleframework.xml.stream.InputNode)
com.tencent.bugly.proguard.ag: ag()
com.tencent.mm.opensdk.modelmsg.ShowMessageFromWX$Resp: boolean checkArgs()
com.google.android.material.slider.BaseSlider: java.lang.CharSequence getAccessibilityClassName()
com.caij.puremusic.drive.model.PlaylistResponse: PlaylistResponse(int,com.caij.puremusic.drive.model.PlayListSubsonicResponse,kotlinx.serialization.internal.SerializationConstructorMarker)
org.jcodec.containers.mp4.boxes.MovieFragmentHeaderBox: int estimateSize()
com.google.common.base.AbstractIterator$State: com.google.common.base.AbstractIterator$State[] $values()
org.jcodec.containers.mp4.boxes.Box: int estimateSize()
com.caij.puremusic.drive.model.SubsonicSong: int hashCode()
org.jaudiotagger.audio.asf.data.ContentBranding: byte[] getImageData()
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTagField: void checkCommon()
com.caij.puremusic.drive.model.ADriveItem: java.lang.String getFile_extension()
org.jaudiotagger.tag.id3.ID3v23Frame: boolean isBinary()
com.tencent.bugly.proguard.be: void a(boolean,java.lang.String)
com.caij.puremusic.drive.model.PlayListsSubsonicResponse: java.lang.String getVersion()
com.caij.puremusic.network.model.TokenData: void setExpires_in(java.lang.Long)
com.umeng.analytics.pro.i: com.umeng.analytics.pro.i a(android.content.Context)
com.google.android.material.imageview.ShapeableImageView: int getPaddingEnd()
org.simpleframework.xml.transform.CurrencyTransform: java.lang.String write(java.util.Currency)
org.simpleframework.xml.core.SignatureScanner: java.util.List create(java.lang.annotation.Annotation,int)
com.caij.puremusic.drive.model.PlexUser: PlexUser(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,kotlinx.serialization.internal.SerializationConstructorMarker)
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$Req: int getType()
com.umeng.commonsdk.internal.d: org.json.JSONArray g(android.content.Context)
androidx.fragment.app.Fragment: void requestPermissions(java.lang.String[],int)
org.jaudiotagger.audio.SupportedFileFormat$3: SupportedFileFormat$3(java.lang.String,int,java.lang.String)
com.caij.puremusic.drive.model.OneDriveFile: OneDriveFile()
com.caij.puremusic.util.HttpUtil$httpClient$1$1$1: HttpUtil$httpClient$1$1$1()
org.simpleframework.xml.stream.InputElement: java.lang.Object getSource()
org.simpleframework.xml.Root: java.lang.String name()
com.google.gson.FieldNamingPolicy$4: java.lang.String translateName(java.lang.reflect.Field)
org.jaudiotagger.audio.aiff.chunk.TextChunk: TextChunk(org.jaudiotagger.audio.iff.ChunkHeader,java.nio.ByteBuffer,org.jaudiotagger.audio.aiff.AiffAudioHeader)
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
com.tencent.bugly.proguard.s: void b(android.content.Context,com.tencent.bugly.BuglyStrategy)
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$Resp: SendMessageToWX$Resp()
com.caij.puremusic.drive.model.DavResource: long getCreation()
com.umeng.umzid.c: void a(android.content.Context,java.lang.String)
org.simpleframework.xml.core.PathParser: org.simpleframework.xml.core.Expression getPath(int,int)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColor(int)
org.jaudiotagger.tag.id3.ID3v1Tag: boolean isEmpty()
org.jaudiotagger.audio.aiff.chunk.AiffChunkSummary: AiffChunkSummary()
com.caij.puremusic.drive.model.ADriveItem$Companion: kotlinx.serialization.KSerializer serializer()
com.tencent.bugly.proguard.ag: com.tencent.bugly.proguard.ag$b b(com.tencent.bugly.proguard.ag$c)
com.tencent.bugly.proguard.ai: boolean a(java.lang.Runnable,boolean)
org.jaudiotagger.audio.SupportedFileFormat$4: SupportedFileFormat$4(java.lang.String,int,java.lang.String)
com.caij.puremusic.drive.model.OneDriveFolder$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
org.simpleframework.xml.core.CacheLabel: boolean isData()
org.jaudiotagger.tag.wav.WavInfoTag: long getSizeOfTag()
com.caij.puremusic.drive.model.BaiduDriveItem: java.lang.String getDlink()
com.caij.puremusic.db.model.HistoryEntityQueries$HistorySongsQuery$execute$1: java.lang.Object invoke(java.lang.Object)
com.tencent.bugly.proguard.s: int i()
org.jaudiotagger.tag.id3.ID3v23Frame: org.jaudiotagger.tag.id3.AbstractID3v2Frame$EncodingFlags getEncodingFlags()
com.google.android.material.appbar.CollapsingToolbarLayout: int getExpandedTitleMarginBottom()
com.google.android.material.appbar.MaterialToolbar: void setTitleCentered(boolean)
com.umeng.commonsdk.config.d: d()
com.umeng.analytics.pro.bf: bf(com.umeng.analytics.pro.bf)
org.simpleframework.xml.core.ElementLabel: boolean isData()
com.caij.puremusic.network.model.TokenData: java.lang.String getAccess_token()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$GetByIdQuery: java.lang.String getFileId()
com.umeng.analytics.pro.bn$a: bn$a()
com.umeng.commonsdk.statistics.proto.a: java.lang.String b()
com.caij.puremusic.drive.model.AlbumMediaContainer$$serializer: AlbumMediaContainer$$serializer()
org.jaudiotagger.audio.flac.FlacTagWriter: void writeOtherMetadataBlocks(java.nio.channels.FileChannel,org.jaudiotagger.audio.flac.FlacTagWriter$MetadataBlockInfo)
com.umeng.analytics.pro.o: void i()
io.ktor.util.date.Month: Month(java.lang.String,int,java.lang.String)
org.simpleframework.xml.core.CompositeInlineList: void write(org.simpleframework.xml.stream.OutputNode,java.util.Collection)
com.caij.puremusic.network.model.Image: int component3()
com.caij.puremusic.views.BaselineGridTextView: int getCompoundPaddingTop()
org.xmlpull.v1.XmlPullParser: int getColumnNumber()
org.jaudiotagger.utils.IntArrayList: void set(int,int)
com.caij.puremusic.db.model.Album$Adapter: app.cash.sqldelight.ColumnAdapter getYearAdapter()
com.caij.puremusic.fragments.player.simple.SimplePlayerFragment: SimplePlayerFragment()
org.jaudiotagger.tag.id3.framebody.FrameBodyTFLT: FrameBodyTFLT()
com.caij.puremusic.db.model.ServerLyrics: java.lang.String component3()
kotlinx.serialization.json.internal.WriteMode: kotlinx.serialization.json.internal.WriteMode valueOf(java.lang.String)
org.jaudiotagger.tag.wav.WavTag: java.lang.String stripNullTerminator(java.lang.String)
org.jaudiotagger.tag.id3.ID3v22Frames: ID3v22Frames()
org.repackage.com.meizu.flyme.openidsdk.OpenId: void a(java.lang.String)
com.caij.puremusic.drive.model.ArtistItem: ArtistItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,java.lang.Integer,com.caij.puremusic.drive.model.ImageTags,java.util.List,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
org.simpleframework.xml.Version: double revision()
org.simpleframework.xml.stream.CamelCaseBuilder$Attribute: CamelCaseBuilder$Attribute(org.simpleframework.xml.stream.CamelCaseBuilder,java.lang.String)
com.caij.puremusic.drive.model.AMetadata$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.drive.model.OneDriveFileResponse: int component2()
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: boolean putNativeKeyValue(java.lang.String,java.lang.String)
com.caij.puremusic.db.model.SongQueries$songsByNameAlbum$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
org.jaudiotagger.tag.flac.FlacTag: boolean hasField(org.jaudiotagger.tag.FieldKey)
org.jaudiotagger.tag.images.StandardArtwork: boolean isLinked()
com.caij.puremusic.drive.model.AlbumArtist: AlbumArtist(int,java.lang.String,java.lang.String,kotlinx.serialization.internal.SerializationConstructorMarker)
org.jaudiotagger.tag.id3.framebody.FrameBodyTIPL: FrameBodyTIPL(java.nio.ByteBuffer,int)
com.caij.puremusic.drive.model.PlexSectionsResponse: com.caij.puremusic.drive.model.PlexSectionsResponse copy(com.caij.puremusic.drive.model.FMediaContainer)
org.jaudiotagger.audio.aiff.chunk.CommentsChunk: CommentsChunk(org.jaudiotagger.audio.iff.ChunkHeader,java.nio.ByteBuffer,org.jaudiotagger.audio.aiff.AiffAudioHeader)
androidx.fragment.app.Fragment: void performPictureInPictureModeChanged(boolean)
org.jaudiotagger.tag.reference.Tagger: org.jaudiotagger.tag.reference.Tagger valueOf(java.lang.String)
com.caij.puremusic.drive.model.WebDAVToken$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.simpleframework.xml.core.VersionLabel: java.lang.String getPath()
com.thegrizzlylabs.sardineandroid.model.Error: Error()
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
com.tencent.bugly.proguard.as: void b(com.tencent.bugly.crashreport.crash.CrashDetailBean)
org.jaudiotagger.tag.id3.framebody.FrameBodyPIC: void setPictureType(byte)
org.jaudiotagger.audio.asf.io.MetadataReader: MetadataReader()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: EmptyActivityLifecycleCallbacks()
org.jaudiotagger.audio.asf.data.MetadataDescriptor: void setGUIDValue(org.jaudiotagger.audio.asf.data.GUID)
com.umeng.analytics.pro.i: boolean a(java.lang.String,java.lang.String,int)
org.jaudiotagger.audio.wav.chunk.WavId3Chunk: boolean readChunk()
com.caij.puremusic.model.PlaylistWrapper: PlaylistWrapper(com.caij.puremusic.db.model.PlaylistEntity,int,com.caij.puremusic.db.model.Song)
org.jaudiotagger.audio.iff.ChunkHeader: java.lang.String toString()
com.thegrizzlylabs.sardineandroid.model.Read: Read()
com.google.android.material.circularreveal.CircularRevealFrameLayout: int getCircularRevealScrimColor()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void mergeNumberTotalFrames(org.jaudiotagger.tag.id3.AbstractID3v2Frame,org.jaudiotagger.tag.id3.AbstractID3v2Frame)
org.simpleframework.xml.core.ElementArrayParameter: java.lang.String getName()
com.caij.puremusic.drive.model.OneDriveFolder: int getChildCount()
org.simpleframework.xml.core.MethodScanner: void build(org.simpleframework.xml.core.MethodPart)
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
kotlin.text.StringsKt__IndentKt$getIndentFunction$1: StringsKt__IndentKt$getIndentFunction$1()
com.google.common.hash.BloomFilterStrategies: boolean mightContain(java.lang.Object,com.google.common.hash.Funnel,int,com.google.common.hash.BloomFilterStrategies$LockFreeBitArray)
org.jaudiotagger.tag.id3.framebody.FrameBodyPIC: java.lang.String getIdentifier()
com.caij.puremusic.model.smartplaylist.ShuffleAllPlaylist$Creator: ShuffleAllPlaylist$Creator()
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country valueOf(java.lang.String)
com.umeng.analytics.pro.ca: byte[] b(java.util.BitSet,int)
org.simpleframework.xml.core.DetailScanner: java.util.List getFields()
org.slf4j.event.Level: Level(java.lang.String,int,int,java.lang.String)
javax.xml.namespace.QName: boolean equals(java.lang.Object)
org.jaudiotagger.tag.id3.ID3v23Frame$EncodingFlags: void setEncryption()
com.google.android.material.checkbox.MaterialCheckBox: void setEnabled(boolean)
com.caij.puremusic.network.model.LastFmAlbum$Album$Image: java.lang.String getSize()
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$Builder: com.tencent.mm.opensdk.modelmsg.WXMediaMessage fromBundle(android.os.Bundle)
com.tencent.bugly.proguard.at: void b()
com.caij.puremusic.db.model.Folder: java.lang.String component6()
com.umeng.commonsdk.statistics.proto.c: c(com.umeng.commonsdk.statistics.proto.c)
com.caij.puremusic.db.model.ServerSongCoverQueries$deleteSongBySource$1: ServerSongCoverQueries$deleteSongBySource$1(long)
org.jcodec.containers.mp4.boxes.IListBox: org.jcodec.containers.mp4.boxes.IListBox createIListBox(java.util.Map)
com.caij.puremusic.model.Contributor: void writeToParcel(android.os.Parcel,int)
com.caij.puremusic.network.model.LastFmArtist$Artist: com.caij.puremusic.network.model.LastFmArtist$Artist$Bio getBio()
com.tencent.mm.opensdk.modelbiz.JoinChatroom$Req: JoinChatroom$Req()
androidx.preference.PreferenceScreen: PreferenceScreen(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.drive.model.ArtistItem: java.lang.String component2()
org.jaudiotagger.audio.dsf.DsfFileReader: org.jaudiotagger.tag.Tag getTag(java.nio.channels.FileChannel,java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setChecked(boolean)
org.simpleframework.xml.stream.Node: java.lang.String getValue()
com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker: boolean access$1702(com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker,boolean)
org.jaudiotagger.audio.mp3.MP3AudioHeader: java.lang.Long getAudioDataStartPosition()
androidx.core.text.ICUCompat$Api21Impl: java.lang.String getScript(java.util.Locale)
org.jcodec.containers.mp4.boxes.TimecodeMediaInfoBox: int estimateSize()
com.umeng.commonsdk.statistics.proto.d$a: void b(com.umeng.analytics.pro.bu,com.umeng.commonsdk.statistics.proto.d)
org.jcodec.containers.mp4.boxes.MovieFragmentBox: MovieFragmentBox(org.jcodec.containers.mp4.boxes.Header)
org.jaudiotagger.tag.aiff.AiffTag: java.util.List getAll(org.jaudiotagger.tag.FieldKey)
com.tencent.mm.opensdk.modelmsg.WXEmojiObject: WXEmojiObject(byte[])
androidx.viewpager.widget.ViewPager: void setCurrentItem(int)
com.caij.puremusic.drive.model.MediaInfoWrapper: java.util.List component6()
org.jaudiotagger.tag.id3.AbstractTagFrame: AbstractTagFrame()
org.jaudiotagger.audio.aiff.AiffInfoReader: AiffInfoReader()
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
com.heinrichreimersoftware.materialintro.view.parallax.ParallaxSlideFragment: ParallaxSlideFragment()
org.jaudiotagger.tag.mp4.field.Mp4FieldType: org.jaudiotagger.tag.mp4.field.Mp4FieldType getFieldType(int)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager requireFragmentManager()
com.tencent.bugly.proguard.ab: java.lang.String b()
org.simpleframework.xml.core.LabelGroup: LabelGroup(java.util.List)
org.jaudiotagger.tag.id3.framebody.FrameBodyUFID: java.lang.String getIdentifier()
com.caij.puremusic.drive.model.SubPlayList$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
org.jaudiotagger.tag.wav.WavTag: void syncToInfoFromId3Overwrite()
com.umeng.analytics.pro.ar: void c()
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: org.jaudiotagger.utils.tree.TreeNode getFirstChild()
org.jaudiotagger.tag.id3.ID3v23Tag: boolean isUnsynchronization()
org.jaudiotagger.audio.mp3.MP3AudioHeader: int getBitsPerSample()
com.umeng.commonsdk.framework.UMWorkDispatch: void teardown()
org.simpleframework.xml.filter.Filter: java.lang.String replace(java.lang.String)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyINF: FieldFrameBodyINF(java.nio.ByteBuffer)
com.umeng.commonsdk.statistics.proto.a$e: java.lang.String b()
org.jaudiotagger.audio.asf.data.Chunk: org.jaudiotagger.audio.asf.data.GUID getGuid()
com.caij.puremusic.model.Contributor: java.lang.String getImage()
com.tencent.bugly.crashreport.CrashReport: CrashReport()
org.simpleframework.xml.core.SetPart: java.lang.String toString()
org.simpleframework.xml.core.EmptyExpression: boolean isPath()
com.tencent.bugly.proguard.be: com.tencent.bugly.crashreport.crash.CrashDetailBean a(android.content.Context,java.lang.String,com.tencent.bugly.crashreport.crash.jni.NativeExceptionHandler)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
org.jaudiotagger.tag.id3.framebody.FrameBodyMCDI: FrameBodyMCDI(java.nio.ByteBuffer,int)
android.support.v4.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
com.caij.puremusic.db.model.HistoryEntityQueries$GetByIdQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSOP: java.lang.String getIdentifier()
com.umeng.commonsdk.utils.UMUtils: java.lang.Class getClass(java.lang.String)
com.umeng.commonsdk.statistics.noise.ABTest: float prob(java.lang.String,int)
com.yalantis.ucrop.view.widget.HorizontalProgressWheelView: void setScrollingListener(com.yalantis.ucrop.view.widget.HorizontalProgressWheelView$ScrollingListener)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)
com.caij.puremusic.drive.model.PlayListItem: java.lang.String component2()
org.jaudiotagger.tag.id3.AbstractID3v2Frame: org.jaudiotagger.tag.id3.framebody.AbstractID3v2FrameBody readBody(java.lang.String,org.jaudiotagger.tag.id3.framebody.AbstractID3v2FrameBody)
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: int type()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyUnsupported: void setupObjectList()
com.google.android.material.textfield.TextInputLayout: int getBaseline()
com.caij.puremusic.drive.model.ParentReference: java.lang.String getPath()
com.umeng.analytics.pro.al: java.lang.String e(java.lang.String,java.lang.Object[])
org.jaudiotagger.tag.lyrics3.FieldFrameBodyEAL: java.lang.String getAlbum()
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
org.jcodec.containers.mp4.boxes.EsdsBox$DecoderConfig: void doWrite(java.nio.ByteBuffer)
com.google.android.material.search.SearchBar: float getCornerSize()
org.jcodec.containers.mp4.boxes.MovieHeaderBox: int[] readMatrix(java.nio.ByteBuffer)
androidx.fragment.app.Fragment: void setTargetFragment(androidx.fragment.app.Fragment,int)
org.jaudiotagger.logging.Hex: java.lang.String asHex(byte)
com.umeng.analytics.pro.o: void e(java.lang.Object)
org.simpleframework.xml.stream.OutputDocument: void setData(boolean)
org.jaudiotagger.tag.datatype.AbstractDataType: void readByteArray(byte[],int)
com.caij.puremusic.fragments.player.md3.MD3PlaybackControlsFragment: MD3PlaybackControlsFragment()
com.google.android.material.appbar.AppBarLayout: void setVisibility(int)
org.jaudiotagger.tag.wav.WavTag: org.jaudiotagger.tag.id3.AbstractID3v2Tag createDefaultID3Tag()
com.caij.puremusic.db.model.ServerArtistCover: long component2()
com.google.android.material.bottomsheet.BottomSheetBehavior: void setSaveFlags(int)
code.name.monkey.appthemehelper.common.prefs.supportv7.ATEPreferenceCategory: ATEPreferenceCategory(android.content.Context,android.util.AttributeSet,int)
com.umeng.commonsdk.framework.UMWorkDispatch: void removeEvent(int)
com.google.android.material.progressindicator.CircularProgressIndicator: int getIndicatorDirection()
com.caij.puremusic.drive.model.AlbumItem: java.lang.String getType()
com.umeng.commonsdk.statistics.proto.b: com.umeng.analytics.pro.av deepCopy()
com.google.android.material.progressindicator.BaseProgressIndicator: void setIndicatorColor(int[])
code.name.monkey.appthemehelper.common.prefs.supportv7.ATEListPreference: ATEListPreference(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.audio.mp3.MP3AudioHeader: java.lang.String getChannels()
com.umeng.analytics.MobclickAgent$EScenarioType: com.umeng.analytics.MobclickAgent$EScenarioType[] values()
com.caij.puremusic.model.DriveFileParcelable: java.lang.String getFilePath()
com.umeng.commonsdk.statistics.internal.StatTracer: void onRequestEnd()
com.google.android.material.bottomsheet.BottomSheetBehavior: int getPeekHeightMin()
com.caij.puremusic.db.model.ArtistQueries$artistByName$2: com.caij.puremusic.db.model.Artist invoke(long,java.lang.String)
org.jaudiotagger.tag.id3.ID3v23Frame$EncodingFlags: void unsetGrouping()
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.drive.model.DropboxDriveItem$Companion: DropboxDriveItem$Companion()
org.jaudiotagger.tag.id3.framebody.FrameBodyTRCK: java.lang.String getTrackTotalAsText()
org.jaudiotagger.tag.datatype.Lyrics3Line: void addLyric(org.jaudiotagger.tag.datatype.ID3v2LyricLine)
com.tencent.mm.opensdk.constants.ConstantsAPI$LaunchWX: ConstantsAPI$LaunchWX()
com.caij.puremusic.drive.model.PlayListItem$$serializer: PlayListItem$$serializer()
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: byte[] getChannelMap()
com.google.android.material.bottomsheet.BottomSheetDialog$4: BottomSheetDialog$4(com.google.android.material.bottomsheet.BottomSheetDialog)
com.caij.puremusic.drive.model.PlexPlaylistsResponse: int hashCode()
nl.adaptivity.xmlutil.SimpleNamespaceContext$Companion: kotlinx.serialization.KSerializer serializer()
androidx.constraintlayout.helper.widget.Flow: void setHorizontalAlign(int)
com.caij.puremusic.db.model.ServerLyricsQueries$getById$2: com.caij.puremusic.db.model.ServerLyrics invoke(long,long,java.lang.String)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: boolean hasFrame(java.lang.String)
com.alipay.apmobilesecuritysdk.face.APSecuritySdk: com.alipay.apmobilesecuritysdk.face.APSecuritySdk getInstance(android.content.Context)
org.json.alipay.b: b(org.json.alipay.c)
org.simpleframework.xml.stream.OutputElement: void setName(java.lang.String)
com.caij.puremusic.drive.model.ArtistItem$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.umeng.analytics.pro.a$a$a: java.lang.String b()
com.google.common.collect.MapMakerInternalMap$Strength: com.google.common.collect.MapMakerInternalMap$Strength[] values()
org.simpleframework.xml.core.FieldContact: java.lang.annotation.Annotation getAnnotation()
com.caij.puremusic.MainModuleKt$roomModule$1$11: MainModuleKt$roomModule$1$11()
com.caij.puremusic.drive.model.SubsonicPlaylist$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.umeng.analytics.pro.u: void f(android.content.Context)
androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)
com.umeng.commonsdk.statistics.internal.StatTracer: void onRequestStart()
com.tencent.bugly.crashreport.CrashReport: int getUserSceneTagId(android.content.Context)
com.tencent.mm.opensdk.modelmsg.WXTextObject: WXTextObject()
com.caij.puremusic.activities.HolderActivity: HolderActivity()
org.jaudiotagger.tag.id3.framebody.FrameBodySEEK: java.lang.String getIdentifier()
com.heinrichreimersoftware.materialintro.app.SlideFragment: SlideFragment()
com.umeng.analytics.pro.e: e()
androidx.core.os.TraceCompat$Api18Impl: void endSection()
com.caij.puremusic.db.model.PlaybackSong: int getType()
com.google.android.material.card.MaterialCardView: void setCheckedIcon(android.graphics.drawable.Drawable)
org.jaudiotagger.audio.wav.WavCleaner$1: boolean accept(java.io.File)
com.caij.puremusic.views.WidthFitSquareCardView: WidthFitSquareCardView(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.db.model.PlaylistEntityQueries$PlaylistByNameQuery: PlaylistEntityQueries$PlaylistByNameQuery(com.caij.puremusic.db.model.PlaylistEntityQueries,java.lang.String,kotlin.jvm.functions.Function1)
org.simpleframework.xml.Order: java.lang.String[] elements()
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query songsByNameAlbum(java.lang.String,java.lang.String)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
org.jaudiotagger.audio.ogg.util.OggPageHeader$HeaderTypeFlag: byte getFileValue()
com.caij.puremusic.db.model.ServerLyricsQueries$getById$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
org.jaudiotagger.audio.asf.data.ContentBranding: void setImage(long,byte[])
com.caij.puremusic.drive.model.AlbumItem$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.AlbumItem)
com.caij.puremusic.drive.model.Auth2Token: java.lang.String getScope()
com.umeng.tunnel.UMChannelAgent: void reflectSetCustomHeader(java.util.Map)
org.jaudiotagger.tag.id3.framebody.FrameBodyRVRB: FrameBodyRVRB(java.nio.ByteBuffer,int)
org.jaudiotagger.audio.mp4.Mp4InfoReader: Mp4InfoReader()
org.jaudiotagger.tag.datatype.Lyrics3Image: void setFilename(java.lang.String)
com.google.android.gms.internal.play_billing.zzcj: zzcj(java.lang.String,int,java.lang.Class,java.lang.Class,java.lang.Object)
androidx.fragment.app.Fragment: void setArguments(android.os.Bundle)
com.umeng.analytics.pro.bo: com.umeng.analytics.pro.bp l()
com.caij.puremusic.drive.model.Resourcetype$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.google.android.material.card.MaterialCardView: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.caij.puremusic.drive.model.DropboxDriveFileResponse: int hashCode()
com.caij.puremusic.drive.model.AlbumSubsonicResponse$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.caij.puremusic.drive.model.AlbumItem: void write$Self(com.caij.puremusic.drive.model.AlbumItem,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId$CallBack: void a(java.lang.Object,org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId)
org.jaudiotagger.tag.id3.framebody.FrameBodyDeprecated: int getSize()
com.umeng.analytics.pro.o: org.json.JSONObject b(long)
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdCountQuery$execute$1: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.db.model.SongQueries: java.lang.String access$createArguments(com.caij.puremusic.db.model.SongQueries,int)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyTextInfo: void write(java.io.ByteArrayOutputStream)
com.caij.puremusic.drive.model.PlayLists: void write$Self(com.caij.puremusic.drive.model.PlayLists,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.umeng.commonsdk.config.a: a()
org.jaudiotagger.audio.asf.data.AudioStreamChunk: long getChannelCount()
com.umeng.analytics.pro.as: short b(short,int)
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean sendFinderStartLive(android.content.Context,com.tencent.mm.opensdk.modelbase.BaseReq)
com.caij.puremusic.MainModuleKt$dataModule$1$3: MainModuleKt$dataModule$1$3()
org.simpleframework.xml.core.CompositeKey: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.lang.String)
com.umeng.analytics.process.UMProcessDBHelper$ProcessToMainCallback: UMProcessDBHelper$ProcessToMainCallback(com.umeng.analytics.process.UMProcessDBHelper)
com.caij.puremusic.db.model.ServerLyrics: long getId()
com.caij.puremusic.model.DeezerResponse: com.caij.puremusic.model.DeezerResponse copy(java.util.List,java.lang.String,int)
com.caij.puremusic.db.model.AlbumQueries$album$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
org.jaudiotagger.audio.asf.data.GUID: java.lang.String getGuidDescription(org.jaudiotagger.audio.asf.data.GUID)
com.thegrizzlylabs.sardineandroid.model.SearchRequest: SearchRequest(java.lang.String,java.lang.String)
com.caij.puremusic.db.model.PlayCountEntityQueries$update$2: PlayCountEntityQueries$update$2()
com.google.android.material.slider.BaseSlider: void setStepSize(float)
com.tencent.bugly.BuglyStrategy: java.lang.String getLibBuglySOFilePath()
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$PreorderEnumeration: boolean hasMoreElements()
org.jcodec.containers.mp4.boxes.MetaBox: MetaBox(org.jcodec.containers.mp4.boxes.Header)
com.alipay.sdk.m.x.e: android.widget.ImageView getRefreshButton()
com.umeng.commonsdk.stateless.d: java.lang.String c(java.lang.String)
com.google.android.material.navigation.NavigationBarView: com.google.android.material.navigation.NavigationBarPresenter getPresenter()
com.umeng.analytics.pro.o: void a(java.lang.String,java.lang.String)
com.bumptech.glide.manager.LifecycleLifecycle: void onStop(androidx.lifecycle.LifecycleOwner)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int)
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
androidx.appcompat.widget.AppCompatSpinner$Api23Impl: void setDropDownViewTheme(android.widget.ThemedSpinnerAdapter,android.content.res.Resources$Theme)
org.simpleframework.xml.core.DefaultDetail: java.lang.annotation.Annotation[] getAnnotations()
com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)
com.caij.puremusic.drive.model.SubsonicSearchListResponse: void write$Self(com.caij.puremusic.drive.model.SubsonicSearchListResponse,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
org.jcodec.containers.mp4.boxes.SegmentTypeBox: void doWrite(java.nio.ByteBuffer)
org.simpleframework.xml.core.Persister: void write(java.lang.Object,java.io.File)
org.simpleframework.xml.stream.Builder: void setAttribute(java.lang.String,java.lang.String)
org.jaudiotagger.tag.datatype.EventTimingCode: java.lang.String toString()
org.jaudiotagger.tag.id3.ID3v22Frame: ID3v22Frame(org.jaudiotagger.tag.id3.AbstractID3v2Frame)
com.google.android.material.bottomnavigation.BottomNavigationView: void setOnNavigationItemSelectedListener(com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener)
com.umeng.commonsdk.statistics.proto.Response: void readObject(java.io.ObjectInputStream)
com.tencent.bugly.crashreport.CrashReport$UserStrategy: void setCallBackType(int)
com.alipay.sdk.m.x.e: void setWebEventProxy(com.alipay.sdk.m.x.e$h)
com.caij.puremusic.db.model.ServerSongCoverQueries$insert$2: void invoke(kotlin.jvm.functions.Function1)
com.caij.puremusic.drive.model.SongItem: java.lang.String getId()
org.jcodec.containers.mp4.boxes.ChunkOffsetsBox: void parse(java.nio.ByteBuffer)
org.jaudiotagger.audio.aiff.chunk.ID3Chunk: boolean readChunk()
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
com.caij.puremusic.db.model.ServerAudioFormat: java.lang.String getBitRate()
com.umeng.analytics.pro.o: void c(org.json.JSONObject)
com.google.android.material.navigation.NavigationBarMenuView: void setItemRippleColor(android.content.res.ColorStateList)
com.umeng.commonsdk.statistics.proto.Response$a: Response$a(com.umeng.commonsdk.statistics.proto.Response$1)
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox$Factory: org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox create()
com.umeng.analytics.pro.bn: bn(com.umeng.analytics.pro.ci,boolean,boolean)
com.umeng.commonsdk.framework.UMEnvelopeBuild: org.json.JSONObject buildEnvelopeWithExtHeader(android.content.Context,org.json.JSONObject,org.json.JSONObject)
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessView$Resp: WXOpenBusinessView$Resp(android.os.Bundle)
org.jaudiotagger.audio.asf.data.FileHeader: java.lang.String prettyPrint(java.lang.String)
com.google.android.material.search.SearchView: java.lang.CharSequence getSearchPrefixText()
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: int getAlpha(android.graphics.drawable.Drawable)
org.jcodec.containers.mp4.boxes.SegmentIndexBox: org.jcodec.containers.mp4.boxes.SegmentIndexBox createSegmentIndexBox()
com.google.android.exoplayer2.drm.DrmUtil$Api21: int mediaDrmStateExceptionToErrorCode(java.lang.Throwable)
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction[] values()
org.jcodec.containers.mp4.boxes.ReverseDnsBox$RdnsMeanBox: java.lang.String getIssuer()
org.jaudiotagger.tag.mp4.field.Mp4TrackField: java.lang.String bytesToData(byte[])
com.tencent.mm.opensdk.diffdev.a.b: java.lang.Object doInBackground(java.lang.Object[])
org.simpleframework.xml.core.InstantiatorBuilder: org.simpleframework.xml.core.Instantiator create(org.simpleframework.xml.core.Detail)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: boolean isBinary()
org.jaudiotagger.tag.TagOptionSingleton: boolean isId3v1SaveArtist()
com.google.gson.LongSerializationPolicy: LongSerializationPolicy(java.lang.String,int)
androidx.core.view.ViewCompat$Api24Impl: void cancelDragAndDrop(android.view.View)
com.caij.puremusic.db.model.HistoryEntityQueries$updateHistorySong$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.jaudiotagger.tag.Tag: org.jaudiotagger.tag.TagField createCompilationField(boolean)
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: byte getVorbisVersion()
org.jaudiotagger.audio.aiff.chunk.AiffChunkSummary: boolean isOnlyMetadataTagsAfterStartingMetadataTag(org.jaudiotagger.tag.aiff.AiffTag)
org.simpleframework.xml.strategy.CycleStrategy: CycleStrategy(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.caij.puremusic.drive.model.Resourcetype: com.caij.puremusic.drive.model.Collection getCollection()
org.jaudiotagger.audio.generic.GenericAudioHeader: void setEncodingType(java.lang.String)
androidx.core.view.AccessibilityDelegateCompat: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
org.jaudiotagger.tag.images.StandardArtwork: org.jaudiotagger.tag.images.StandardArtwork createArtworkFromMetadataBlockDataPicture(org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.umeng.analytics.vshelper.a: void activityPause(java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
com.caij.puremusic.network.model.LastFmAlbum$Album: com.caij.puremusic.network.model.LastFmAlbum$Album$Tags getTags()
code.name.monkey.appthemehelper.common.prefs.supportv7.ATEColorPreference: ATEColorPreference(android.content.Context,android.util.AttributeSet)
com.tencent.mm.opensdk.modelbiz.WXChannelOpenFeed$Req: void fromBundle(android.os.Bundle)
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: TrackFragmentHeaderBox(org.jcodec.containers.mp4.boxes.Header)
com.thegrizzlylabs.sardineandroid.model.Prop: void setGetcontentlength(java.lang.String)
org.simpleframework.xml.core.OverrideValue: boolean isReference()
com.caij.puremusic.drive.model.PlayListSubsonicResponse: java.lang.String toString()
com.umeng.analytics.pro.al: void a(boolean)
com.caij.puremusic.db.model.FolderQueries$deleteById$1: FolderQueries$deleteById$1(long)
com.umeng.analytics.pro.bl: bl(byte,com.umeng.analytics.pro.bi)
com.umeng.analytics.pro.bf: boolean b(int)
org.jaudiotagger.audio.SupportedFileFormat$15: SupportedFileFormat$15(java.lang.String,int,java.lang.String)
com.thegrizzlylabs.sardineandroid.Sardine: java.io.InputStream get(java.lang.String,java.util.Map)
org.jaudiotagger.audio.mp3.ByteArrayMP3AudioHeader: boolean isNextFrameValid(java.nio.ByteBuffer)
com.afollestad.materialdialogs.internal.main.DialogLayout: void setMaxHeight(int)
com.umeng.commonsdk.statistics.internal.UMImprintChangeCallback: void onImprintValueChanged(java.lang.String,java.lang.String)
com.alipay.android.phone.mrpc.core.l: void a(long)
com.caij.puremusic.drive.model.PlexSongsResponse$$serializer: PlexSongsResponse$$serializer()
org.jaudiotagger.audio.mp3.MPEGFrameHeader: java.lang.String toString()
org.jaudiotagger.test.MergeID3AndMP3Files: void main(java.lang.String[])
com.tencent.bugly.proguard.bn: bn()
org.jaudiotagger.audio.asf.data.AsfHeader: org.jaudiotagger.audio.asf.data.MetadataContainer findMetadataContainer(org.jaudiotagger.audio.asf.data.ContainerType)
org.simpleframework.xml.core.InstanceFactory: InstanceFactory()
com.umeng.analytics.process.UMProcessDBHelper: void insertEventsInSubProcess(java.lang.String,org.json.JSONArray)
com.caij.puremusic.drive.model.MediaContainer: java.util.List component3()
com.umeng.analytics.b: void f(android.content.Context)
com.umeng.commonsdk.statistics.idtracking.e: void f()
com.caij.puremusic.db.model.PlaylistEntityQueries$insert$2: java.lang.Object invoke(java.lang.Object)
com.umeng.commonsdk.statistics.common.DeviceConfig: int reflectMetrics(java.lang.Object,java.lang.String)
com.thegrizzlylabs.sardineandroid.model.Remove: Remove()
com.umeng.commonsdk.statistics.common.a$a: java.lang.String a(com.umeng.commonsdk.statistics.common.a$a)
com.umeng.commonsdk.config.d$d: d$d(java.lang.String,int)
org.simpleframework.xml.core.ElementListParameter: java.lang.Class getType()
org.jaudiotagger.audio.aiff.chunk.ApplicationChunk: boolean readChunk()
org.jaudiotagger.tag.id3.framebody.FrameBodyXSOT: FrameBodyXSOT(org.jaudiotagger.tag.id3.framebody.FrameBodyXSOT)
org.jcodec.containers.mp4.boxes.MetaValue: byte[] fromInt(int)
org.simpleframework.xml.transform.GregorianCalendarTransform: GregorianCalendarTransform(java.lang.Class)
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse: int getTotalRecordCount()
com.umeng.commonsdk.config.a: int c(int,int)
com.google.android.material.slider.Slider: void setTrackHeight(int)
com.tencent.bugly.proguard.m: java.lang.String toString()
com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTypeface(android.graphics.Typeface)
com.thegrizzlylabs.sardineandroid.model.Deny: java.util.List getPrivilege()
org.jaudiotagger.utils.IntArrayList: void add(int)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
org.simpleframework.xml.core.DetailScanner: DetailScanner(java.lang.Class)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
com.caij.puremusic.network.model.SearchResponse: com.caij.puremusic.network.model.SearchResponse copy$default(com.caij.puremusic.network.model.SearchResponse,com.caij.puremusic.network.model.ArtistWrapper,com.caij.puremusic.network.model.ArtistWrapper,com.caij.puremusic.network.model.ArtistWrapper,int,java.lang.Object)
com.umeng.analytics.pro.bi: boolean d()
com.google.android.material.textfield.TextInputLayout: void setPrefixTextAppearance(int)
androidx.core.app.ActivityCompat$Api16Impl: void finishAffinity(android.app.Activity)
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: boolean b()
com.caij.puremusic.fragments.GridStyle: int getLayoutResId()
com.caij.puremusic.db.model.PlayCountEntityQueries$playCountSongs$2: com.caij.puremusic.db.model.PlayCountEntity invoke(long,long,long)
com.google.android.exoplayer2.audio.AudioAttributes$Api29: void setAllowedCapturePolicy(android.media.AudioAttributes$Builder,int)
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String getParent()
com.tencent.bugly.proguard.aj: boolean a(com.tencent.bugly.proguard.br,com.tencent.bugly.proguard.aa,com.tencent.bugly.proguard.ac)
androidx.constraintlayout.helper.widget.Flow: void setLastHorizontalStyle(int)
com.yalantis.ucrop.view.CropImageView: float getMaxScale()
com.tencent.mm.opensdk.modelmsg.GetMessageFromWX$Resp: void fromBundle(android.os.Bundle)
org.simpleframework.xml.core.MethodScanner: void build(org.simpleframework.xml.core.MethodPart,org.simpleframework.xml.core.MethodPart)
androidx.fragment.app.Fragment: android.os.Bundle requireArguments()
com.alipay.android.phone.mrpc.core.b: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)
org.jaudiotagger.tag.id3.AbstractTagFrameBody: java.lang.String getLongDescription()
org.jaudiotagger.tag.id3.framebody.FrameBodyAPIC: void setMimeType(java.lang.String)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyAUT: void setAuthor(java.lang.String)
org.simpleframework.xml.strategy.WriteState: org.simpleframework.xml.strategy.WriteGraph find(java.lang.Object)
com.caij.puremusic.drive.model.Response$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.Response)
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier valueOf(java.lang.String)
com.google.android.material.navigation.NavigationBarItemView: void setTextAppearanceInactive(int)
com.google.common.base.Predicates$ObjectPredicate$1: boolean apply(java.lang.Object)
androidx.fragment.app.Fragment: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultRegistry,androidx.activity.result.ActivityResultCallback)
com.caij.puremusic.drive.model.SubsonicSearchResponse$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.MainModuleKt$mainModule$1: MainModuleKt$mainModule$1()
org.simpleframework.xml.core.ModelMap: org.simpleframework.xml.core.ModelMap getModels()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
org.jaudiotagger.audio.mp3.MP3FileReader: org.jaudiotagger.audio.AudioFile readMustBeWritable(java.io.File)
org.jaudiotagger.tag.id3.ID3v23PreferredFrameOrderComparator: boolean equals(java.lang.Object)
org.jaudiotagger.tag.wav.WavTag: void syncToId3FromInfoOverwrite()
com.caij.puremusic.drive.model.ArtistItem: com.caij.puremusic.drive.model.ImageTags component8()
com.caij.puremusic.db.model.SongQueries$songsByArtistIdWithLike$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.umeng.analytics.pro.l: boolean a(boolean)
com.caij.puremusic.drive.model.FMediaContainer: FMediaContainer(int,java.lang.String,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void processDuplicateFrame(org.jaudiotagger.tag.id3.AbstractID3v2Frame,org.jaudiotagger.tag.id3.AbstractID3v2Frame)
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setLockMode(int)
com.google.common.base.Predicates$ObjectPredicate: com.google.common.base.Predicates$ObjectPredicate[] values()
org.jaudiotagger.audio.aiff.AiffTagWriter: void deleteRemainderOfFile(java.nio.channels.FileChannel,org.jaudiotagger.tag.aiff.AiffTag,java.lang.String)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean shouldExpandOnUpwardDrag(long,float)
org.jaudiotagger.tag.id3.valuepair.ChannelTypes: org.jaudiotagger.tag.id3.valuepair.ChannelTypes getInstanceOf()
org.simpleframework.xml.util.Resolver$Stack$Sequence: boolean hasNext()
com.caij.puremusic.drive.model.PlaylistMetadata: PlaylistMetadata(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.google.android.material.checkbox.MaterialCheckBox: MaterialCheckBox(android.content.Context,android.util.AttributeSet)
com.tencent.bugly.proguard.bo: void a(com.tencent.bugly.proguard.k)
androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType: WidgetRun$RunType(java.lang.String,int)
com.caij.puremusic.db.model.SongEntityQueries$CheckSongPlaylistExistsQuery$execute$1: SongEntityQueries$CheckSongPlaylistExistsQuery$execute$1(com.caij.puremusic.db.model.SongEntityQueries$CheckSongPlaylistExistsQuery)
com.caij.puremusic.drive.model.BaiduDriveItem: BaiduDriveItem(long,java.lang.String,long,java.lang.String,long,long,int,int,java.lang.String)
androidx.appcompat.widget.AppCompatEditText: void setEmojiCompatEnabled(boolean)
org.simpleframework.xml.core.EmptyExpression: EmptyExpression(org.simpleframework.xml.stream.Format)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.tencent.mm.opensdk.modelbiz.HandleScanResult: HandleScanResult()
com.caij.puremusic.drive.model.SubsonicSearchListResponse: void getSubsonicResponse$annotations()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: org.jaudiotagger.tag.id3.ID3Frames getID3Frames()
org.simpleframework.xml.core.InstantiatorBuilder: void populate(org.simpleframework.xml.core.Signature)
com.caij.puremusic.lyrics.CoverLrcView: void setTimeTextColor(int)
org.simpleframework.xml.stream.InputAttribute: java.lang.String getPrefix()
com.caij.puremusic.drive.model.Part: java.lang.String component4()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
org.jaudiotagger.tag.id3.framebody.FrameBodyUnsupported: FrameBodyUnsupported(byte[])
com.caij.puremusic.db.model.ServerSongCover: long component2()
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b valueOf(java.lang.String)
com.umeng.commonsdk.stateless.b: void b(int)
org.simpleframework.xml.convert.ConverterScanner: org.simpleframework.xml.convert.Converter getConverter(org.simpleframework.xml.strategy.Type,org.simpleframework.xml.strategy.Value)
com.tencent.bugly.proguard.ar: ar()
org.jaudiotagger.audio.mp4.Mp4FileReader: Mp4FileReader()
com.caij.puremusic.drive.model.ArtistItem: java.lang.String component3()
org.simpleframework.xml.core.ModelMap: ModelMap(org.simpleframework.xml.core.Detail)
org.simpleframework.xml.core.Introspector: org.simpleframework.xml.strategy.Type getDependent()
com.alipay.apmobilesecuritysdk.d.d: java.util.Map a()
com.alipay.android.phone.mrpc.core.v: java.lang.Object a()
com.umeng.analytics.pro.bf: com.umeng.analytics.pro.bp c(com.umeng.analytics.pro.bc)
com.umeng.commonsdk.statistics.proto.Response$b: com.umeng.commonsdk.statistics.proto.Response$a a()
org.jaudiotagger.tag.id3.framebody.FrameBodyGEOB: java.lang.String getIdentifier()
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: org.jaudiotagger.utils.tree.DefaultMutableTreeNode getLastLeaf()
com.caij.puremusic.db.model.SongQueries$SongByPathQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.caij.puremusic.drive.model.PlayListItem: java.lang.String component10()
org.jaudiotagger.audio.aiff.chunk.AiffChunkSummary: org.jaudiotagger.audio.iff.ChunkSummary getChunkBeforeStartingMetadataTag(org.jaudiotagger.tag.aiff.AiffTag)
com.caij.puremusic.db.model.SongQueries$SongsByArtistQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.simpleframework.xml.core.CompositeInlineMap: java.lang.Object read(org.simpleframework.xml.stream.InputNode)
org.simpleframework.xml.stream.InputAttribute: org.simpleframework.xml.stream.NodeMap getAttributes()
org.simpleframework.xml.core.SignatureBuilder: void insert(org.simpleframework.xml.core.Parameter,int)
com.caij.puremusic.drive.model.BaiduDriveItem$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.google.android.material.bottomsheet.BottomSheetDialog: void setContentView(android.view.View)
com.caij.puremusic.drive.model.Type: boolean component4()
org.simpleframework.xml.stream.OutputElement: org.simpleframework.xml.stream.OutputNode getChild(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
org.simpleframework.xml.core.Session: java.util.Map getMap()
com.umeng.analytics.pro.bf$c: bf$c(com.umeng.analytics.pro.bf$1)
com.umeng.analytics.pro.an: void g(boolean)
com.tencent.bugly.proguard.w: android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String)
org.jaudiotagger.logging.Hex: java.lang.String asDecAndHex(long)
com.tencent.mm.opensdk.modelmsg.WXEmojiObject: WXEmojiObject()
com.alipay.apmobilesecuritysdk.e.i: java.lang.String c()
com.tencent.mm.opensdk.modelbiz.AddCardToWXCardPackage$Req: boolean checkArgs()
org.simpleframework.xml.core.ElementUnionLabel: java.lang.annotation.Annotation getAnnotation()
com.yalantis.ucrop.view.TransformImageView: void setTransformImageListener(com.yalantis.ucrop.view.TransformImageView$TransformImageListener)
com.umeng.analytics.pro.e$b$b: e$b$b()
com.caij.puremusic.db.model.PlaylistEntityQueries$playlistByName$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.tag.mp4.field.Mp4TagReverseDnsField: void setIssuer(java.lang.String)
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgramWithToken$Req: boolean checkArgs()
com.caij.puremusic.drive.model.PlexUser: PlexUser(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$Builder: android.os.Bundle toBundle(com.tencent.mm.opensdk.modelmsg.WXMediaMessage)
org.jaudiotagger.tag.mp4.Mp4TagCreator: java.util.List lambda$convert$0(java.lang.Integer)
com.tencent.bugly.proguard.g: boolean equals(java.lang.Object)
org.jaudiotagger.audio.ogg.util.OggPageHeader$PacketStartAndLength: java.lang.String toString()
com.umeng.commonsdk.framework.UMWorkDispatch: void handleEvent(android.os.Message)
org.jaudiotagger.tag.id3.framebody.FrameBodySYLT: FrameBodySYLT()
org.jaudiotagger.tag.id3.framebody.AbstractID3v2FrameBody: void createStructure()
com.umeng.commonsdk.statistics.idtracking.e$a: boolean a(java.lang.String)
org.jaudiotagger.tag.mp4.Mp4FieldKey: Mp4FieldKey(java.lang.String,int,java.lang.String,org.jaudiotagger.tag.mp4.Mp4TagFieldSubType,org.jaudiotagger.tag.mp4.field.Mp4FieldType,int)
com.umeng.commonsdk.statistics.proto.e: e()
com.caij.puremusic.drive.model.SubsonicSong$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.umeng.commonsdk.statistics.common.MLog: void w(java.lang.String,java.lang.Throwable)
com.google.android.material.appbar.CollapsingToolbarLayout: int getExpandedTitleMarginEnd()
com.caij.puremusic.drive.model.Multistatus: Multistatus(int,java.util.List,kotlinx.serialization.internal.SerializationConstructorMarker)
com.caij.puremusic.drive.model.Auth2Token: java.lang.String getAccess_token()
com.tencent.bugly.proguard.ac$1: void run()
com.caij.puremusic.db.model.ServerArtistCoverQueries$getById$1: ServerArtistCoverQueries$getById$1(kotlin.jvm.functions.Function3)
org.simpleframework.xml.core.Variable: org.simpleframework.xml.strategy.Type getDependent()
org.simpleframework.xml.core.ClassInstantiator: java.lang.Object getInstance(org.simpleframework.xml.core.Criteria)
com.afollestad.materialdialogs.internal.main.BaseSubLayout: void setDialog(com.afollestad.materialdialogs.MaterialDialog)
com.umeng.analytics.AnalyticsConfig: void turnOnRealTimeDebug(java.util.Map)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyIMG: void read(java.nio.ByteBuffer)
org.simpleframework.xml.stream.StreamProvider: org.simpleframework.xml.stream.EventReader provide(java.io.Reader)
com.tencent.mm.opensdk.modelbiz.SubscribeMiniProgramMsg$Resp: int getType()
com.umeng.analytics.b: java.lang.String e(android.content.Context)
com.caij.puremusic.drive.model.Directory$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.jaudiotagger.audio.iff.ChunkSummary: ChunkSummary(java.lang.String,long,long)
com.caij.puremusic.drive.model.SongItem$Companion: SongItem$Companion()
com.google.android.material.progressindicator.LinearProgressIndicator: LinearProgressIndicator(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.db.model.Song$Adapter: Song$Adapter(app.cash.sqldelight.ColumnAdapter,app.cash.sqldelight.ColumnAdapter,app.cash.sqldelight.ColumnAdapter)
org.simpleframework.xml.core.EmptyExpression: boolean isAttribute()
com.tencent.bugly.crashreport.crash.jni.NativeExceptionHandler: void handleNativeException2(int,int,long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int,int,int,java.lang.String,java.lang.String,java.lang.String[])
androidx.core.view.AccessibilityDelegateCompat: void sendAccessibilityEvent(android.view.View,int)
org.simpleframework.xml.core.GetPart: java.lang.Class[] getDependents()
com.tencent.mm.opensdk.modelbiz.SubscribeMessage$Req: boolean checkArgs()
org.jaudiotagger.tag.id3.framebody.FrameBodyTORY: java.lang.String getIdentifier()
com.tencent.bugly.proguard.r: void a(com.tencent.bugly.crashreport.biz.UserInfoBean,boolean)
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgram$Resp: void fromBundle(android.os.Bundle)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)
com.afollestad.materialdialogs.internal.button.DialogActionButton: void setEnabled(boolean)
com.caij.puremusic.drive.model.SearchResult3: SearchResult3(java.util.List)
org.simpleframework.xml.core.SessionManager: org.simpleframework.xml.core.Session open(boolean)
com.thegrizzlylabs.sardineandroid.DavResource: java.util.Map getCustomPropsNS()
org.simpleframework.xml.core.TextParameter: java.lang.Class getType()
org.jcodec.containers.mp4.MP4Util: org.jcodec.containers.mp4.MP4Util$Atom atom(java.nio.channels.FileChannel)
com.umeng.analytics.pro.ch: byte[] f()
org.jaudiotagger.tag.asf.AsfFieldKey: boolean isMultiValued()
com.caij.puremusic.network.model.LastFmArtist: void setArtist(com.caij.puremusic.network.model.LastFmArtist$Artist)
org.jcodec.containers.mp4.boxes.TimecodeMediaInfoBox: void parse(java.nio.ByteBuffer)
org.jaudiotagger.audio.generic.AbstractTag: boolean isAllowedEncoding(java.nio.charset.Charset)
org.simpleframework.xml.core.Session: void clear()
org.jaudiotagger.audio.generic.AbstractTag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
org.simpleframework.xml.core.ExtractorFactory: org.simpleframework.xml.core.Extractor getInstance()
com.caij.puremusic.model.UpdateInfo$1: com.caij.puremusic.model.UpdateInfo[] newArray(int)
org.jaudiotagger.tag.mp4.field.Mp4TagRawBinaryField: boolean isBinary()
com.caij.puremusic.MainModuleKt$networkModule$1$2: MainModuleKt$networkModule$1$2()
org.simpleframework.xml.core.ExtractorFactory$ElementMapExtractor: java.lang.Class getType(java.lang.annotation.Annotation)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: AppCompatTextViewAutoSizeHelper$Impl29()
org.simpleframework.xml.core.ElementArrayParameter: java.lang.annotation.Annotation getAnnotation()
org.jaudiotagger.tag.TagOptionSingleton: void setId3v1Save(boolean)
org.simpleframework.xml.stream.NodeBuilder: NodeBuilder()
com.tencent.bugly.proguard.ai: void a(long,boolean)
org.jaudiotagger.audio.generic.AbstractTag$1: boolean hasNext()
com.caij.puremusic.drive.model.ADriveFileResponse: java.lang.String component1()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyLYR: FieldFrameBodyLYR(org.jaudiotagger.tag.id3.framebody.FrameBodyUSLT)
org.jcodec.containers.mp4.boxes.ChannelBox: org.jcodec.containers.mp4.boxes.ChannelBox createChannelBox()
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
org.simpleframework.xml.core.PrimitiveArray: boolean validate(org.simpleframework.xml.stream.InputNode)
com.caij.puremusic.db.model.SongQueries$SongsByArtistQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
org.jaudiotagger.tag.id3.framebody.FrameBodyMCDI: FrameBodyMCDI()
com.caij.puremusic.model.Data: int component5()
com.caij.puremusic.drive.model.PlexLoginResponse: com.caij.puremusic.drive.model.PlexLoginResponse copy(com.caij.puremusic.drive.model.PlexUser)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
com.umeng.commonsdk.statistics.proto.c: com.umeng.commonsdk.statistics.proto.c a(java.util.List)
com.umeng.commonsdk.statistics.common.DeviceConfig: boolean isHarmony(android.content.Context)
com.umeng.analytics.pro.i$a: com.umeng.analytics.pro.i$a valueOf(java.lang.String)
org.jaudiotagger.tag.id3.valuepair.StandardIPLSKey: org.jaudiotagger.tag.id3.valuepair.StandardIPLSKey[] values()
org.jaudiotagger.tag.mp4.Mp4Tag: java.lang.String getFirst(org.jaudiotagger.tag.mp4.Mp4FieldKey)
com.umeng.analytics.pro.ai: java.lang.String a(android.content.Context)
com.tencent.bugly.proguard.ac: com.tencent.bugly.proguard.ac a(android.content.Context,java.util.List)
org.jaudiotagger.audio.asf.data.AsfHeader: long getChunkCount()
org.simpleframework.xml.core.PrimitiveKey: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object)
com.caij.puremusic.db.model.SongQueries$getArtistSongCount$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.audio.asf.io.CountingOutputstream: void write(byte[])
com.google.android.material.chip.Chip: void setTextAppearance(int)
org.jaudiotagger.tag.id3.AbstractTagFrameBody: void setupObjectList()
com.caij.puremusic.model.Data: java.lang.String component9()
com.umeng.commonsdk.internal.utils.a: android.util.DisplayMetrics e(android.content.Context)
org.jaudiotagger.audio.asf.io.AsfStreamer: AsfStreamer()
androidx.constraintlayout.widget.ConstraintLayout: int getMinWidth()
com.google.android.material.bottomappbar.BottomAppBar: void setNavigationIcon(android.graphics.drawable.Drawable)
org.simpleframework.xml.core.FieldScanner: void scan(org.simpleframework.xml.core.Detail)
org.jaudiotagger.tag.Tag: void setField(org.jaudiotagger.tag.TagField)
org.jaudiotagger.audio.ogg.util.OggPageHeader: long getStartByte()
org.jaudiotagger.audio.generic.GenericTag$GenericTagTextField: void setContent(java.lang.String)
com.umeng.analytics.pro.a$a$a: java.lang.String c(java.lang.String)
org.simpleframework.xml.core.Signature: org.simpleframework.xml.core.Parameter get(int)
androidx.viewpager.widget.ViewPager: ViewPager(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
org.jaudiotagger.tag.id3.framebody.FrameBodyTRSO: FrameBodyTRSO(org.jaudiotagger.tag.id3.framebody.FrameBodyTRSO)
com.thegrizzlylabs.sardineandroid.DavResource: java.lang.String toString()
com.caij.puremusic.drive.model.PlaylistMetadata$Companion: kotlinx.serialization.KSerializer serializer()
com.alipay.sdk.app.PayTask: android.app.Activity a(com.alipay.sdk.app.PayTask)
org.jcodec.containers.mp4.boxes.TrakBox: org.jcodec.containers.mp4.boxes.SampleSizesBox getStsz()
com.caij.puremusic.drive.model.JellyfinArtistResponse$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.jaudiotagger.tag.mp4.Mp4Tag: void addField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
org.jaudiotagger.tag.id3.framebody.FrameBodyUFID: FrameBodyUFID(org.jaudiotagger.tag.id3.framebody.FrameBodyUFID)
com.thegrizzlylabs.sardineandroid.model.Multistatus: void setSyncToken(java.lang.String)
org.jaudiotagger.audio.asf.io.AsfHeaderReader: org.jaudiotagger.audio.asf.data.AsfHeader readHeader(java.io.RandomAccessFile)
org.jaudiotagger.audio.mp3.MP3AudioHeader: double getPreciseTrackLength()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
org.jaudiotagger.audio.asf.data.StreamChunk: org.jaudiotagger.audio.asf.data.GUID getStreamType()
com.caij.puremusic.db.model.ServerLyricsQueries$insert$2: java.lang.Object invoke(java.lang.Object)
com.tencent.mmkv.MMKV: int valueSize(long,java.lang.String,boolean)
com.umeng.analytics.MobclickAgent: void onEvent(android.content.Context,java.lang.String,java.util.Map)
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: void dumpAnrNativeStack()
com.thegrizzlylabs.sardineandroid.DavPrincipal$PrincipalType: com.thegrizzlylabs.sardineandroid.DavPrincipal$PrincipalType[] values()
org.jaudiotagger.tag.id3.framebody.FrameBodyTCOM: FrameBodyTCOM(org.jaudiotagger.tag.id3.framebody.FrameBodyTCOM)
com.umeng.analytics.pro.bu: com.umeng.analytics.pro.bz j()
org.simpleframework.xml.core.Persister: Persister(org.simpleframework.xml.filter.Filter,org.simpleframework.xml.stream.Format)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
org.jaudiotagger.audio.asf.data.AsfHeader: org.jaudiotagger.audio.asf.data.FileHeader getFileHeader()
org.simpleframework.xml.core.Variable: boolean isAttribute()
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
com.caij.puremusic.drive.model.ImageTags: java.lang.String component1()
com.umeng.analytics.pro.m: m()
com.tencent.mm.opensdk.modelpay.PayResp: void fromBundle(android.os.Bundle)
com.tencent.bugly.proguard.ab: java.lang.String a()
com.umeng.analytics.pro.aw: int a(boolean,boolean)
org.jcodec.containers.mp4.boxes.SyncSamplesBox: org.jcodec.containers.mp4.boxes.SyncSamplesBox createSyncSamplesBox(int[])
android.support.v4.media.RatingCompat$Api19Impl: int getRatingStyle(android.media.Rating)
com.caij.puremusic.db.model.ServerLyricsQueries$insert$2: void invoke(kotlin.jvm.functions.Function1)
org.simpleframework.xml.util.Resolver$Stack: void push(org.simpleframework.xml.util.Match)
org.simpleframework.xml.core.AnnotationHandler: AnnotationHandler(java.lang.Class,boolean)
com.caij.puremusic.db.model.Folder: java.lang.String component4()
com.umeng.commonsdk.stateless.d$1: int a(java.io.File,java.io.File)
com.caij.puremusic.drive.model.PlexPlaylistsResponse$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.umeng.analytics.filter.b: void setMD5ClearFlag(boolean)
com.google.common.reflect.TypeToken$TypeFilter: boolean apply(java.lang.Object)
com.caij.puremusic.db.model.SongQueries$SongsByAlumQuery: java.lang.String toString()
com.umeng.analytics.pro.an: void E()
org.simpleframework.xml.core.PathException: PathException(java.lang.String,java.lang.Object[])
com.caij.puremusic.db.model.SongEntityQueries$IsSongExistsInPlaylistQuery$execute$1: SongEntityQueries$IsSongExistsInPlaylistQuery$execute$1(com.caij.puremusic.db.model.SongEntityQueries$IsSongExistsInPlaylistQuery)
com.google.android.material.bottomsheet.BottomSheetBehavior$4: int getViewVerticalDragRange(android.view.View)
androidx.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
org.simpleframework.xml.core.PathParser: java.lang.String getPrefix()
com.umeng.analytics.process.UMProcessDBDatasSender: org.json.JSONObject setupReportData(long)
org.simpleframework.xml.strategy.ReadGraph: org.simpleframework.xml.strategy.Value readInstance(org.simpleframework.xml.strategy.Type,java.lang.Class,org.simpleframework.xml.stream.NodeMap)
com.umeng.commonsdk.framework.a: void j()
com.caij.puremusic.drive.model.AlbumListResponse: AlbumListResponse(com.caij.puremusic.drive.model.SubsonicResponse)
com.umeng.analytics.filter.EventList: java.lang.String toString()
com.tencent.bugly.proguard.be: java.lang.String a(java.lang.String)
org.jaudiotagger.tag.images.AndroidImageHandler: AndroidImageHandler()
com.tencent.bugly.proguard.ap: java.util.Map a(boolean,int)
com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)
androidx.core.util.ObjectsCompat$Api19Impl: boolean equals(java.lang.Object,java.lang.Object)
org.simpleframework.xml.core.TreeModel: java.lang.String toString()
com.caij.puremusic.drive.model.AlbumListResponse$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
org.simpleframework.xml.stream.HyphenBuilder: java.lang.String getAttribute(java.lang.String)
com.caij.puremusic.drive.model.MediaInfoWrapper: java.util.List component5()
com.google.android.material.chip.Chip: void setCloseIconEndPaddingResource(int)
com.caij.puremusic.db.model.SearchAlbumResultQueries$GetByIdQuery: java.lang.String toString()
androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
org.jcodec.containers.mp4.boxes.AudioSampleEntry: void doWrite(java.nio.ByteBuffer)
org.jaudiotagger.tag.id3.framebody.FrameBodyOWNE: FrameBodyOWNE(org.jaudiotagger.tag.id3.framebody.FrameBodyOWNE)
androidx.media.AudioAttributesImplApi26: AudioAttributesImplApi26()
org.jaudiotagger.tag.mp4.Mp4Tag: java.util.List getAll(org.jaudiotagger.tag.FieldKey)
org.simpleframework.xml.util.LimitedCache: java.lang.Object fetch(java.lang.Object)
org.jaudiotagger.tag.InvalidTagException: InvalidTagException(java.lang.String)
org.simpleframework.xml.core.ArrayFactory: java.lang.Object getInstance()
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String component15()
org.simpleframework.xml.core.Persister: void write(java.lang.Object,org.simpleframework.xml.stream.OutputNode)
org.jaudiotagger.tag.datatype.AbstractDataTypeList: byte[] writeByteArray()
org.simpleframework.xml.core.Variable: java.lang.String[] getNames()
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse: java.util.List getItems()
com.caij.puremusic.db.model.ServerArtistCoverQueries$insert$2: ServerArtistCoverQueries$insert$2()
androidx.fragment.app.Fragment: void onOptionsMenuClosed(android.view.Menu)
com.caij.puremusic.drive.model.WebDAVToken: java.lang.String getPwd()
javax.xml.namespace.NamespaceContext: java.lang.String getPrefix(java.lang.String)
com.alipay.mobilesecuritysdk.face.SecurityClientMobile: SecurityClientMobile()
org.simpleframework.xml.stream.InputNode: org.simpleframework.xml.stream.InputNode getParent()
com.tencent.bugly.proguard.as: com.tencent.bugly.proguard.bn a(java.lang.String,android.content.Context,java.lang.String)
org.jaudiotagger.audio.mp3.MP3File: void setID3v1Tag(org.jaudiotagger.tag.id3.ID3v1Tag)
com.umeng.commonsdk.statistics.idtracking.a: void a(java.util.List)
com.caij.puremusic.db.model.ServerArtistCoverQueries$getById$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
org.simpleframework.xml.Serializer: java.lang.Object read(java.lang.Class,org.simpleframework.xml.stream.InputNode)
com.google.android.material.search.SearchBar: void setText(int)
org.jaudiotagger.audio.mp4.Chunk: void setData(java.nio.ByteBuffer)
org.repackage.com.meizu.flyme.openidsdk.SupportInfo: void a(boolean)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: java.util.List propfind(java.lang.String,int,com.thegrizzlylabs.sardineandroid.model.Propfind)
com.umeng.commonsdk.framework.UMLogDataProtocol$UMBusinessType: UMLogDataProtocol$UMBusinessType(java.lang.String,int)
com.caij.puremusic.drive.model.Type: java.lang.String getType()
com.caij.puremusic.db.model.AlbumQueries$getAlbumByArtistId$1: java.lang.Object invoke(java.lang.Object)
com.google.android.material.snackbar.SnackbarContentLayout: void setMaxInlineActionWidth(int)
com.umeng.analytics.b: void a(android.content.Context,org.json.JSONObject)
org.simpleframework.xml.core.ElementArrayLabel: ElementArrayLabel(org.simpleframework.xml.core.Contact,org.simpleframework.xml.ElementArray,org.simpleframework.xml.stream.Format)
com.thegrizzlylabs.sardineandroid.model.Prop: void setLockdiscovery(com.thegrizzlylabs.sardineandroid.model.Lockdiscovery)
org.simpleframework.xml.core.SignatureScanner: void scan(java.lang.Class,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
org.jaudiotagger.tag.id3.ID3v23PreferredFrameOrderComparator: int compare(java.lang.String,java.lang.String)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: boolean exists(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
org.jaudiotagger.tag.id3.framebody.FrameBodyTPRO: FrameBodyTPRO(org.jaudiotagger.tag.id3.framebody.FrameBodyTPRO)
com.caij.puremusic.drive.model.AlbumListResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.AlbumListResponse)
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries: DriveFileDownUrlInfoQueries(app.cash.sqldelight.db.SqlDriver)
org.jcodec.containers.mp4.boxes.MetaBox: void dropChildBox(java.util.List,java.lang.String)
com.umeng.commonsdk.config.a: long b(long,int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)
com.umeng.commonsdk.config.b$a: b$a()
org.jaudiotagger.utils.tree.TreeModelEvent: TreeModelEvent(java.lang.Object,org.jaudiotagger.utils.tree.TreePath)
org.jaudiotagger.tag.id3.ID3v1Iterator: java.lang.Object next(int)
com.umeng.commonsdk.statistics.common.ReportPolicy$LatentPolicy: boolean shouldSendMessage(boolean)
org.simpleframework.xml.stream.OutputAttribute: boolean isRoot()
com.caij.puremusic.fragments.artists.AbsArtistDetailsFragment: AbsArtistDetailsFragment()
com.caij.puremusic.drive.model.EmbyAlbumsResponse: int getTotalRecordCount()
com.caij.puremusic.model.AlbumWithCount: com.caij.puremusic.model.AlbumWithCount copy(com.caij.puremusic.db.model.Album,int)
com.tencent.mmkv.MMKV: float decodeFloat(long,java.lang.String,float)
org.simpleframework.xml.core.Scanner: boolean isEmpty()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyLYR: FieldFrameBodyLYR(java.lang.String)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipDrawable()
com.caij.puremusic.drive.model.ArtistItem: com.caij.puremusic.drive.model.ImageTags getImageTags()
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
com.tencent.bugly.proguard.ap: java.util.Map a(int)
com.caij.puremusic.views.NumberRollView: float getNumberRoll()
com.caij.puremusic.fragments.player.fit.FitPlaybackControlsFragment: FitPlaybackControlsFragment()
com.caij.puremusic.drive.model.PlexPlaylistsResponse: com.caij.puremusic.drive.model.PlexPlaylistsResponse copy$default(com.caij.puremusic.drive.model.PlexPlaylistsResponse,com.caij.puremusic.drive.model.PlaylistsMediaContainer,int,java.lang.Object)
com.umeng.commonsdk.UMConfigure: java.util.Map getModuleTags()
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
com.caij.puremusic.db.model.ServerLyricsQueries$insert$1: java.lang.Object invoke(java.lang.Object)
com.umeng.commonsdk.utils.a: android.os.HandlerThread c(com.umeng.commonsdk.utils.a)
com.tencent.bugly.proguard.l: void a(int,int)
com.google.android.material.bottomappbar.BottomAppBar: boolean getHideOnScroll()
androidx.customview.widget.ViewDragHelper$Callback: int getViewHorizontalDragRange(android.view.View)
com.caij.puremusic.drive.model.JellyfinSongListResponse$$serializer: JellyfinSongListResponse$$serializer()
org.simpleframework.xml.core.StructureBuilder: void validateModel(java.lang.Class)
com.caij.puremusic.db.model.SongQueries$SearchSongsByTitleQuery: SongQueries$SearchSongsByTitleQuery(com.caij.puremusic.db.model.SongQueries,java.lang.String,kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
com.caij.puremusic.db.model.HistoryEntityQueries: app.cash.sqldelight.Query historySongs(long,long,kotlin.jvm.functions.Function2)
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMR: java.lang.String getIdentifier()
com.umeng.commonsdk.stateless.d$1: int compare(java.lang.Object,java.lang.Object)
com.tencent.mmkv.MMKV: int decodeInt(long,java.lang.String,int)
org.jaudiotagger.audio.asf.io.CountingInputStream: void mark(int)
com.umeng.analytics.b: void a(android.content.Context,java.lang.String,java.lang.Object)
com.caij.puremusic.drive.model.OneDriveItem$Companion: OneDriveItem$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
androidx.fragment.app.Fragment: boolean isDetached()
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgramWithToken: WXLaunchMiniProgramWithToken()
com.caij.puremusic.drive.model.JellyfinLoginResponse$Companion: JellyfinLoginResponse$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.jcodec.containers.mp4.boxes.ReverseDnsBox$RdnsMeanBox: int estimateSize()
com.google.gson.FieldNamingPolicy$1: java.lang.String translateName(java.lang.reflect.Field)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnLongClickListener(android.view.View$OnLongClickListener)
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
com.caij.puremusic.db.model.SongQueries$getSongBySource$1: SongQueries$getSongBySource$1(kotlin.jvm.functions.Function18,com.caij.puremusic.db.model.SongQueries)
com.umeng.analytics.b: void i(android.content.Context)
com.google.android.material.bottomsheet.BottomSheetBehavior: void setBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback)
com.caij.puremusic.drive.model.FMediaContainer: int hashCode()
androidx.media.app.NotificationCompat$Api21Impl: android.app.Notification$MediaStyle createMediaStyle()
org.jaudiotagger.tag.id3.framebody.FrameBodySIGN: FrameBodySIGN(org.jaudiotagger.tag.id3.framebody.FrameBodySIGN)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
org.jcodec.containers.mp4.boxes.MediaInfoBox: org.jcodec.containers.mp4.boxes.DataInfoBox getDinf()
org.simpleframework.xml.core.PrimitiveFactory: PrimitiveFactory(org.simpleframework.xml.core.Context,org.simpleframework.xml.strategy.Type)
org.jaudiotagger.audio.mp4.Mp4AudioHeader: java.lang.String getBrand()
org.jaudiotagger.tag.id3.framebody.FrameBodyWOAF: FrameBodyWOAF(java.nio.ByteBuffer,int)
com.caij.puremusic.model.smartplaylist.TopTracksPlaylist: int describeContents()
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies: com.google.common.util.concurrent.CycleDetectingLockFactory$Policies[] $values()
org.jaudiotagger.tag.InvalidFrameIdentifierException: InvalidFrameIdentifierException(java.lang.String,java.lang.Throwable)
org.simpleframework.xml.core.TreeModel: org.simpleframework.xml.core.LabelMap getAttributes()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: java.lang.String getId()
org.simpleframework.xml.core.MethodContact: java.lang.String toString()
org.jaudiotagger.tag.id3.ID3v23Tag: void readFrames(java.nio.ByteBuffer,int)
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle getLifecycle()
org.jaudiotagger.audio.generic.Utils: void copyThrowsOnException(java.io.File,java.io.File)
com.tencent.mm.opensdk.modelpay.WXJointPay$JointPayResp: WXJointPay$JointPayResp()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
org.simpleframework.xml.core.CompositeMap: java.lang.Object read(org.simpleframework.xml.stream.InputNode)
com.tencent.bugly.proguard.u: boolean b(com.tencent.bugly.proguard.t,com.tencent.bugly.proguard.t)
com.tencent.mm.opensdk.diffdev.OAuthErrCode: java.lang.String toString()
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getTrackTintMode()
androidx.mediarouter.app.MediaRouteButton: androidx.mediarouter.media.MediaRouteSelector getRouteSelector()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.google.android.material.search.SearchBar$ScrollingViewBehavior: SearchBar$ScrollingViewBehavior()
org.simpleframework.xml.core.LabelKey: LabelKey(org.simpleframework.xml.core.Contact,java.lang.annotation.Annotation)
com.google.android.material.card.MaterialCardView: void setChecked(boolean)
org.jcodec.containers.mp4.boxes.MediaHeaderBox: MediaHeaderBox(org.jcodec.containers.mp4.boxes.Header)
org.jcodec.containers.mp4.boxes.ChannelBox: void setChannelLayout(int)
org.simpleframework.xml.stream.Provider: org.simpleframework.xml.stream.EventReader provide(java.io.Reader)
org.jaudiotagger.tag.id3.ID3v24Tag: ID3v24Tag(org.jaudiotagger.tag.id3.ID3v24Tag)
com.caij.puremusic.drive.model.AMediaContainer$$serializer: AMediaContainer$$serializer()
com.umeng.analytics.pro.av: com.umeng.analytics.pro.av deepCopy()
com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleGravity(int)
org.jaudiotagger.audio.aiff.AiffAudioHeader: org.jaudiotagger.audio.aiff.AiffAudioHeader$Endian getEndian()
com.umeng.analytics.pro.ck: ck()
org.jaudiotagger.audio.generic.GenericAudioHeader: java.lang.Long getAudioDataLength()
com.umeng.commonsdk.statistics.idtracking.g: java.lang.String f()
com.yalantis.ucrop.view.CropImageView: void setImageToWrapCropBounds(boolean)
com.google.android.material.navigation.NavigationBarView: void setItemPaddingTop(int)
org.simpleframework.xml.transform.CurrencyTransform: CurrencyTransform()
com.caij.puremusic.drive.model.User: java.lang.String toString()
com.caij.puremusic.db.model.AlbumQueries$album$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.tencent.mmkv.MMKV: java.lang.String version()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setAnimateShowBeforeLayout(boolean)
com.caij.puremusic.lyrics.SimpleLrcView: float getLrcWidth()
com.tencent.bugly.proguard.as: void a(java.util.ArrayList,com.tencent.bugly.crashreport.crash.CrashDetailBean)
org.jaudiotagger.tag.wav.WavTag: java.util.List getAll(org.jaudiotagger.tag.FieldKey)
com.google.common.hash.LittleEndianByteArray$UnsafeByteArray$1: long getLongLittleEndian(byte[],int)
com.caij.puremusic.db.model.HistoryEntityQueries$historySongs$1: java.lang.Object invoke(java.lang.Object)
org.simpleframework.xml.core.MethodScanner: boolean isText(org.simpleframework.xml.core.MethodPart)
org.jaudiotagger.tag.mp4.field.Mp4TagTextField: Mp4TagTextField(java.lang.String,java.lang.String)
com.umeng.commonsdk.statistics.proto.e$d: e$d()
org.jaudiotagger.tag.id3.ID3v23Frame$StatusFlags: void modifyFlags()
com.umeng.commonsdk.statistics.proto.b$b: b$b(com.umeng.commonsdk.statistics.proto.b$1)
com.umeng.commonsdk.utils.UMUtils: int getTargetSdkVersion(android.content.Context)
org.jcodec.containers.mp4.boxes.MovieExtendsHeaderBox: void setFragmentDuration(int)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setDropDownBackgroundDrawable(android.graphics.drawable.Drawable)
com.umeng.analytics.pro.bu: void a(com.umeng.analytics.pro.by)
org.jaudiotagger.tag.id3.framebody.FrameBodySYLT: int getTimeStampFormat()
org.jaudiotagger.audio.ogg.util.OggInfoReader: int computeBitrate(int,long)
com.caij.puremusic.db.model.SearchAlbumResult: SearchAlbumResult(java.lang.String,java.lang.String)
org.jcodec.containers.mp4.boxes.UdtaBox: org.jcodec.containers.mp4.boxes.UdtaBox createUdtaBox()
com.caij.puremusic.drive.model.SubsonicSearchListResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.SubsonicSearchListResponse)
com.caij.puremusic.drive.model.Propstat$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
org.jaudiotagger.audio.asf.data.MetadataDescriptor: int compareTo(org.jaudiotagger.audio.asf.data.MetadataDescriptor)
com.umeng.common.b: java.lang.String[] a()
org.jaudiotagger.audio.generic.GenericAudioHeader: java.lang.Long getNoOfSamples()
com.caij.puremusic.drive.model.SubsonicSearchListResponse$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.alipay.android.phone.mrpc.core.RpcException: java.lang.String a(java.lang.Integer,java.lang.String)
com.caij.puremusic.drive.model.EmbyFoldersResponse: java.lang.String toString()
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: java.util.List propfind(java.lang.String,int,java.util.Set)
org.jaudiotagger.tag.datatype.PartOfSet: java.nio.charset.Charset getTextEncodingCharSet()
com.caij.puremusic.dialogs.RemoveSongFromPlaylistDialog: RemoveSongFromPlaylistDialog()
org.jaudiotagger.audio.generic.AbstractTag: void deleteField(org.jaudiotagger.tag.FieldKey)
org.jaudiotagger.tag.id3.framebody.FrameBodyTORY: FrameBodyTORY(java.nio.ByteBuffer,int)
com.umeng.commonsdk.statistics.common.ReportPolicy$DefconPolicy: ReportPolicy$DefconPolicy(com.umeng.commonsdk.statistics.internal.StatTracer,com.umeng.commonsdk.statistics.noise.Defcon)
com.caij.puremusic.drive.model.ParentReference$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
app.cash.sqldelight.TransacterImpl: java.lang.Object transactionWithResult(boolean,kotlin.jvm.functions.Function1)
com.umeng.commonsdk.stateless.d$5: d$5(java.lang.String)
com.umeng.commonsdk.internal.c$5: c$5(com.umeng.commonsdk.internal.c)
com.tencent.bugly.proguard.ab: boolean p()
org.simpleframework.xml.core.LabelGroup: org.simpleframework.xml.core.Label getPrimary()
androidx.constraintlayout.widget.Placeholder: int getEmptyVisibility()
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
org.jaudiotagger.audio.asf.data.MetadataDescriptor: MetadataDescriptor(java.lang.String)
com.google.android.material.chip.ChipGroup: int getVisibleChipCount()
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind[] values()
com.google.android.material.bottomsheet.BottomSheetBehavior$4: int clampViewPositionVertical(android.view.View,int,int)
com.google.android.material.search.SearchBar: android.widget.TextView getTextView()
com.caij.puremusic.db.model.ArtistQueries$artists$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyUnsupported: FieldFrameBodyUnsupported(org.jaudiotagger.tag.lyrics3.FieldFrameBodyUnsupported)
com.umeng.analytics.pro.av: void clear()
com.umeng.commonsdk.statistics.common.d$a: d$a(android.content.Context)
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdQuery: void addListener(app.cash.sqldelight.Query$Listener)
com.tencent.bugly.proguard.al: boolean b(java.lang.String,java.lang.Object[])
androidx.core.app.RemoteInput$Api29Impl: int getEditChoicesBeforeSending(java.lang.Object)
com.umeng.analytics.b: void a(com.umeng.common.ISysListener)
com.umeng.commonsdk.statistics.proto.e$c: e$c(com.umeng.commonsdk.statistics.proto.e$1)
com.umeng.commonsdk.statistics.proto.Response: boolean isSetMsg()
org.jaudiotagger.tag.mp4.Mp4Tag: java.util.List get(org.jaudiotagger.tag.mp4.Mp4FieldKey)
androidx.fragment.app.Fragment: void performResume()
org.simpleframework.xml.transform.BigIntegerTransform: BigIntegerTransform()
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
com.umeng.analytics.pro.a: boolean a()
com.google.common.hash.BloomFilterStrategies: boolean put(java.lang.Object,com.google.common.hash.Funnel,int,com.google.common.hash.BloomFilterStrategies$LockFreeBitArray)
com.umeng.analytics.pro.q: long a(org.json.JSONObject)
org.simpleframework.xml.core.ElementUnionLabel: org.simpleframework.xml.strategy.Type getDependent()
com.caij.puremusic.db.model.ArtistQueries$insert$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.simpleframework.xml.stream.InputNode: org.simpleframework.xml.stream.InputNode getAttribute(java.lang.String)
com.thegrizzlylabs.sardineandroid.model.Supportedlock: Supportedlock()
com.caij.puremusic.model.DeezerResponse: int getTotal()
com.umeng.analytics.pro.i: org.json.JSONArray b(org.json.JSONArray)
org.simpleframework.xml.stream.Indenter$Cache: void resize(int)
com.umeng.commonsdk.UMConfigure: void setWraperType(java.lang.String,java.lang.String)
com.tencent.mm.opensdk.modelbiz.WXChannelShareVideo$Resp: WXChannelShareVideo$Resp(android.os.Bundle)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPrefixTextColor()
org.simpleframework.xml.core.ElementUnionLabel: java.lang.String getName()
com.alipay.apmobilesecuritysdk.face.TMNTokenClient$InitResultListener: void onResult(java.lang.String,int)
com.alipay.sdk.m.j.c: void a(java.lang.String)
org.jaudiotagger.tag.TagNotFoundException: TagNotFoundException(java.lang.Throwable)
org.jaudiotagger.tag.TagOptionSingleton: void setLyrics3KeepEmptyFieldIfRead(boolean)
com.tencent.bugly.proguard.l: int a(java.lang.String)
com.tencent.bugly.crashreport.CrashReport: java.lang.String getAppVer()
com.caij.puremusic.network.model.LastFmAlbum$Album$Tag: LastFmAlbum$Album$Tag(com.caij.puremusic.network.model.LastFmAlbum$Album)
org.jaudiotagger.audio.AudioFile: void checkFileExists(java.io.File)
org.simpleframework.xml.stream.StreamReader$End: boolean isEnd()
com.umeng.commonsdk.utils.UMUtils: java.util.Properties getBuildProp()
org.jcodec.containers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox$Factory: TrackFragmentBaseMediaDecodeTimeBox$Factory(org.jcodec.containers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox)
com.caij.puremusic.helper.BackupContent: com.caij.puremusic.helper.BackupContent valueOf(java.lang.String)
org.jaudiotagger.audio.aiff.AiffAudioHeader: void setTimestamp(java.util.Date)
org.simpleframework.xml.core.ElementListUnionParameter: java.lang.Class getType()
com.tencent.mm.opensdk.modelmsg.WXTextObject: boolean checkArgs()
org.simpleframework.xml.core.Support: java.lang.Class getPrimitive(java.lang.Class)
com.umeng.analytics.pro.al: java.lang.String a(java.lang.Object,java.lang.Object)
org.jcodec.containers.mp4.boxes.DataInfoBox: java.lang.String fourcc()
androidx.appcompat.widget.SwitchCompat: void setAllCaps(boolean)
com.thegrizzlylabs.sardineandroid.DavPrincipal: java.lang.String getValue()
com.tencent.bugly.proguard.ac: void a(com.tencent.bugly.crashreport.common.strategy.StrategyBean,boolean)
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
androidx.appcompat.app.AppCompatDialog: void dismiss()
com.caij.puremusic.fragments.albums.AlbumDetailsFragment$setSaveSortOrder$1$1$songs$1: AlbumDetailsFragment$setSaveSortOrder$1$1$songs$1()
com.tencent.mm.opensdk.openapi.WXAPIFactory: WXAPIFactory()
androidx.constraintlayout.helper.widget.Flow: void setVerticalAlign(int)
com.caij.puremusic.db.model.HistoryEntityQueries$HistorySongsQuery: long getTimePlayed()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
org.jaudiotagger.tag.id3.framebody.FrameBodyTOLY: FrameBodyTOLY()
com.tencent.mm.opensdk.openapi.WXAPIFactory: com.tencent.mm.opensdk.openapi.IWXAPI createWXAPI(android.content.Context,java.lang.String,boolean,int)
org.jaudiotagger.tag.id3.ID3v23Frame: int getFrameIdSize()
com.caij.puremusic.db.model.ServerSongCoverQueries$deleteSongBySource$1: java.lang.Object invoke(java.lang.Object)
org.simpleframework.xml.core.LabelGroup: LabelGroup(org.simpleframework.xml.core.Label)
com.umeng.commonsdk.utils.JSONArraySortUtil: int compare(org.json.JSONObject,org.json.JSONObject)
com.umeng.commonsdk.stateless.d$3: int compare(java.lang.Object,java.lang.Object)
com.caij.puremusic.drive.model.ADriveItem: java.lang.String component5()
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior()
org.simpleframework.xml.core.MethodPartFactory: java.lang.Class getType(java.lang.reflect.Method)
org.xmlpull.v1.XmlPullParser: java.lang.String getName()
com.caij.puremusic.db.model.SongQueries$songsByAlbumIdTypeCount$1: java.lang.Object invoke(java.lang.Object)
com.umeng.analytics.process.UMProcessDBDatasSender$ConstructMessageCallback: UMProcessDBDatasSender$ConstructMessageCallback(com.umeng.analytics.process.UMProcessDBDatasSender)
com.caij.puremusic.db.model.SongQueries$SongByPathQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
com.caij.puremusic.model.DriveFileParcelable: com.caij.puremusic.model.DriveFileParcelable copy(java.lang.String,java.lang.String,long,long,java.lang.String,long,long,int,java.lang.String,java.lang.String,boolean)
com.umeng.analytics.pro.o: void h(java.lang.Object)
com.caij.puremusic.drive.model.Prop: Prop(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.caij.puremusic.drive.model.Resourcetype,kotlinx.serialization.internal.SerializationConstructorMarker)
com.caij.puremusic.drive.model.JellyfinSongListResponse: java.util.List component1()
org.jaudiotagger.audio.asf.io.ChunkHeaderReader: org.jaudiotagger.audio.asf.data.Chunk read(org.jaudiotagger.audio.asf.data.GUID,java.io.InputStream,long)
org.jcodec.containers.mp4.boxes.MdtaBox: java.lang.String fourcc()
com.umeng.commonsdk.internal.utils.c: com.umeng.commonsdk.internal.utils.c a(android.content.Context)
com.tencent.bugly.crashreport.CrashReport: void initCrashReport(android.content.Context,com.tencent.bugly.crashreport.CrashReport$UserStrategy)
androidx.appcompat.widget.AppCompatToggleButton: void setAllCaps(boolean)
com.caij.puremusic.util.HttpUtil$httpClient$1$2: HttpUtil$httpClient$1$2()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
org.jaudiotagger.audio.mp3.MP3File: void setID3v2Tag(org.jaudiotagger.tag.id3.AbstractID3v2Tag)
kotlin.random.AbstractPlatformRandom: AbstractPlatformRandom()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColor(int)
com.thegrizzlylabs.sardineandroid.DavResource: java.util.List getResourceTypes()
com.umeng.analytics.pro.bu: com.umeng.analytics.pro.bs h()
androidx.appcompat.app.AppCompatDialog: void onSupportActionModeFinished(androidx.appcompat.view.ActionMode)
com.caij.puremusic.drive.model.DriveFile: DriveFile(java.lang.String,java.lang.String,long,long,java.lang.String,long,long,int,java.lang.String,java.lang.String,boolean)
com.umeng.analytics.pro.ab: com.umeng.analytics.pro.a a()
org.jaudiotagger.audio.mp3.MP3File: void setID3v2Tag(org.jaudiotagger.tag.id3.AbstractTag)
org.jaudiotagger.tag.id3.framebody.FrameBodyTMOO: FrameBodyTMOO()
com.caij.puremusic.db.model.SongQueries$songsByIds$2: com.caij.puremusic.db.model.Song invoke(long,java.lang.String,int,int,long,java.lang.String,java.lang.String,long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,long,long)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
com.umeng.analytics.b: void a(javax.microedition.khronos.opengles.GL10)
androidx.fragment.app.Fragment: void setPostOnViewCreatedAlpha(float)
com.caij.puremusic.db.model.Song: boolean equals(java.lang.Object)
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
com.caij.puremusic.drive.model.GoogleDriveFile: long component6()
org.jaudiotagger.tag.datatype.SynchronisedTempoCode: java.lang.String toString()
org.simpleframework.xml.core.InstantiatorBuilder: InstantiatorBuilder(org.simpleframework.xml.core.Scanner,org.simpleframework.xml.core.Detail)
org.simpleframework.xml.stream.EventNode: boolean isStart()
androidx.preference.ListPreference: ListPreference(android.content.Context)
org.jaudiotagger.utils.tree.MutableTreeNode: void removeFromParent()
com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String component4()
okhttp3.Protocol: okhttp3.Protocol valueOf(java.lang.String)
org.jaudiotagger.audio.asf.data.LanguageList: LanguageList()
org.jcodec.containers.mp4.boxes.MediaHeaderBox: int estimateSize()
com.caij.puremusic.db.model.PlaybackSongQueries$GetPlaybacksByTypeQuery$execute$1: PlaybackSongQueries$GetPlaybacksByTypeQuery$execute$1(com.caij.puremusic.db.model.PlaybackSongQueries,com.caij.puremusic.db.model.PlaybackSongQueries$GetPlaybacksByTypeQuery)
androidx.appcompat.view.menu.ActionMenuItemView: java.lang.CharSequence getAccessibilityClassName()
com.caij.puremusic.db.model.SongQueries$SongsByAlumQuery$execute$1: java.lang.Object invoke(java.lang.Object)
com.umeng.analytics.MobclickAgent: void disableExceptionCatch()
com.google.common.hash.LittleEndianByteArray$UnsafeByteArray$1: LittleEndianByteArray$UnsafeByteArray$1(java.lang.String,int)
com.caij.puremusic.network.model.SearchResponse: com.caij.puremusic.network.model.ArtistWrapper component2()
com.tencent.bugly.proguard.bo: bo()
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.thegrizzlylabs.sardineandroid.impl.handler.ValidatingResponseHandler: ValidatingResponseHandler()
com.caij.puremusic.db.model.Song: java.lang.String getAlbumArtist()
com.umeng.analytics.vshelper.PageNameMonitor: java.lang.String getCurrenPageName()
org.simpleframework.xml.core.CompositeUnion: CompositeUnion(org.simpleframework.xml.core.Context,org.simpleframework.xml.core.Group,org.simpleframework.xml.core.Expression,org.simpleframework.xml.strategy.Type)
com.umeng.commonsdk.statistics.common.ULog: void i(java.lang.String)
com.tencent.mm.opensdk.modelbiz.OpenWebview$Req: OpenWebview$Req()
com.umeng.commonsdk.statistics.common.ULog: void d(java.lang.Throwable)
org.jaudiotagger.audio.wav.WavTagWriter: void saveBoth(org.jaudiotagger.tag.wav.WavTag,java.nio.channels.FileChannel,org.jaudiotagger.tag.wav.WavTag)
com.caij.puremusic.drive.model.BaiduFileResponse$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.tencent.mm.opensdk.modelmsg.WXStateJumpChannelProfileInfo: void serialize(android.os.Bundle)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
org.jaudiotagger.tag.id3.framebody.FrameBodyETCO: void read(java.nio.ByteBuffer)
org.jaudiotagger.audio.AudioHeader: java.lang.Long getAudioDataStartPosition()
org.simpleframework.xml.core.MethodScanner: void remove(java.lang.reflect.Method,java.lang.annotation.Annotation,java.lang.annotation.Annotation[])
com.caij.puremusic.db.model.SongQueries$SongsDateLastDescQuery: long getDateAdded()
com.umeng.commonsdk.statistics.common.DeviceTypeEnum: java.lang.String getDescription()
org.jaudiotagger.tag.id3.ID3v22Frame: int getFrameIdSize()
com.caij.puremusic.drive.model.EmbyAlbumsResponse$Companion: EmbyAlbumsResponse$Companion()
org.jaudiotagger.audio.generic.GenericAudioHeader: void setAudioDataEndPosition(java.lang.Long)
com.thegrizzlylabs.sardineandroid.DavAce: java.lang.String getInherited()
org.jaudiotagger.tag.reference.ID3V2Version: ID3V2Version(java.lang.String,int)
com.caij.puremusic.lyrics.SimpleLrcView: java.lang.Object getFlag()
org.simpleframework.xml.core.GroupExtractor$Registry: GroupExtractor$Registry(org.simpleframework.xml.core.LabelMap)
org.repackage.com.zui.deviceidservice.IDeviceidInterface$Stub$Proxy: boolean c(java.lang.String)
com.umeng.commonsdk.debug.UMLogUtils: UMLogUtils()
com.caij.puremusic.drive.model.AlbumSubsonicResponse: com.caij.puremusic.drive.model.SubsonicAlbum component3()
com.caij.puremusic.drive.model.SubPlayList: SubPlayList(java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type valueOf(java.lang.String)
com.caij.puremusic.appwidgets.AppWidgetSmall: AppWidgetSmall()
com.caij.puremusic.appwidgets.base.BaseAppWidget: BaseAppWidget()
org.jaudiotagger.tag.wav.WavTag: boolean setEncoding(java.nio.charset.Charset)
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setEnterTransition(android.widget.PopupWindow,android.transition.Transition)
com.umeng.analytics.pro.an: void e(boolean)
org.simpleframework.xml.core.ModelSection: java.lang.String getAttribute(java.lang.String)
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: boolean isEncryption()
org.simpleframework.xml.core.Label: java.lang.String getPath()
org.repackage.com.zui.deviceidservice.IDeviceidInterface$Stub: android.os.IBinder asBinder()
com.caij.puremusic.db.model.PlaylistEntity: com.caij.puremusic.db.model.PlaylistEntity copy$default(com.caij.puremusic.db.model.PlaylistEntity,long,java.lang.String,int,java.lang.Object)
com.google.android.material.progressindicator.BaseProgressIndicator: com.google.android.material.progressindicator.IndeterminateDrawable getIndeterminateDrawable()
com.caij.puremusic.db.model.Album: java.lang.String getAlbumName()
com.umeng.commonsdk.statistics.idtracking.Envelope: java.lang.String getSignature()
com.umeng.commonsdk.statistics.proto.Response: com.umeng.commonsdk.statistics.proto.Response setImprint(com.umeng.commonsdk.statistics.proto.d)
org.jaudiotagger.tag.id3.ID3v22FieldKey: java.lang.String getFrameId()
org.simpleframework.xml.core.TemplateLabel: TemplateLabel()
org.jaudiotagger.audio.mp3.MP3File: void precheck(java.io.File)
com.umeng.commonsdk.statistics.internal.c: byte[] a(byte[],boolean,boolean,java.lang.String)
com.umeng.commonsdk.internal.utils.a: java.lang.String i(android.content.Context)
org.jaudiotagger.tag.id3.framebody.FrameBodySEEK: FrameBodySEEK()
org.simpleframework.xml.core.AttributeParameter$Contact: AttributeParameter$Contact(org.simpleframework.xml.Attribute,java.lang.reflect.Constructor,int)
com.tencent.mm.opensdk.diffdev.OAuthListener: void onQrcodeScanned()
com.caij.puremusic.db.model.Song: int component4()
org.simpleframework.xml.core.ElementArrayParameter$Contact: java.lang.String getName()
com.google.android.gms.internal.play_billing.zza: com.google.android.gms.internal.play_billing.zza[] values()
org.jaudiotagger.audio.mp3.XingFrame: org.jaudiotagger.audio.mp3.XingFrame parseXingFrame(java.nio.ByteBuffer)
com.caij.puremusic.views.TintedNavigationRailView: TintedNavigationRailView(android.content.Context,android.util.AttributeSet)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.caij.puremusic.drive.model.Location$$serializer: Location$$serializer()
com.umeng.analytics.pro.i: void j()
com.google.android.material.chip.Chip: void setChipCornerRadiusResource(int)
com.umeng.commonsdk.statistics.proto.Response: com.umeng.commonsdk.statistics.proto.Response setMsg(java.lang.String)
org.jaudiotagger.audio.asf.data.MetadataDescriptor: java.lang.String getString()
com.tencent.mm.opensdk.modelmsg.WXMediaMessage: WXMediaMessage()
com.caij.puremusic.drive.model.PlexLoginResponse$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
io.ktor.client.call.NoTransformationFoundException$message$1: NoTransformationFoundException$message$1()
com.thegrizzlylabs.sardineandroid.model.Inherited: void setHref(java.lang.String)
com.caij.puremusic.db.model.ArtistQueries: app.cash.sqldelight.Query searchArtistByName(java.lang.String)
org.simpleframework.xml.stream.Indenter: java.lang.String pop()
com.tencent.bugly.crashreport.common.strategy.StrategyBean: StrategyBean()
com.alipay.android.phone.mrpc.core.q: void e()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
org.simpleframework.xml.stream.OutputDocument: org.simpleframework.xml.stream.OutputNode setAttribute(java.lang.String,java.lang.String)
com.thegrizzlylabs.sardineandroid.DavResource: java.lang.String access$000(com.thegrizzlylabs.sardineandroid.DavResource,com.thegrizzlylabs.sardineandroid.model.Response)
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey[] values()
org.jaudiotagger.tag.id3.framebody.FrameBodyTOFN: FrameBodyTOFN(byte,java.lang.String)
org.jaudiotagger.audio.generic.GenericTag$GenericTagTextField: boolean isEmpty()
org.jaudiotagger.tag.mp4.Mp4Tag: void deleteField(org.jaudiotagger.tag.mp4.Mp4FieldKey)
org.simpleframework.xml.core.TreeModel: java.lang.String getName()
StatusBarLyric.API.StatusBarLyric: void updateLyric(java.lang.String)
com.caij.puremusic.db.model.SongEntityQueries$isSongExistsInPlaylist$2: com.caij.puremusic.db.model.SongEntity invoke(long,long,long)
org.slf4j.event.Level: int toInt()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
org.simpleframework.xml.stream.InputElement: java.lang.String getReference()
org.jcodec.containers.mp4.boxes.TrakBox: long getSampleCount()
org.json.alipay.a: int a()
com.umeng.analytics.pro.l: void a(android.app.Activity)
org.jaudiotagger.tag.Tag: void deleteField(java.lang.String)
com.tencent.bugly.proguard.ab$1: ab$1()
org.simpleframework.xml.core.TextException: TextException(java.lang.String,java.lang.Object[])
com.alipay.apmobilesecuritysdk.c.a: void a(java.lang.String)
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script valueOf(java.lang.String)
com.caij.puremusic.model.CategoryInfo: void setVisible(boolean)
org.jcodec.containers.mp4.boxes.TrackHeaderBox: void writeMatrix(java.nio.ByteBuffer)
androidx.lifecycle.ProcessLifecycleOwner$3$1: ProcessLifecycleOwner$3$1(androidx.lifecycle.ProcessLifecycleOwner$3)
com.umeng.commonsdk.internal.c: void c(android.content.Context)
app.cash.sqldelight.BaseTransacterImpl: java.lang.String createArguments(int)
com.alipay.android.phone.mrpc.core.e: e(com.alipay.android.phone.mrpc.core.d)
com.afollestad.materialdialogs.internal.main.DialogTitleLayout: android.widget.ImageView getIconView$core()
me.zhanghai.android.fastscroll.FastScrollNestedScrollView: me.zhanghai.android.fastscroll.FastScroller$ViewHelper getViewHelper()
com.tencent.bugly.proguard.as$4: as$4()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setAnimationMode(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.caij.puremusic.drive.model.Auth2Token: Auth2Token(java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,long,int,kotlin.jvm.internal.DefaultConstructorMarker)
org.simpleframework.xml.core.Model: java.lang.String getName()
com.caij.puremusic.preferences.AlbumCoverStylePreference: AlbumCoverStylePreference(android.content.Context,android.util.AttributeSet,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$Resp: SendMessageToWX$Resp(android.os.Bundle)
org.simpleframework.xml.core.CompositeUnion: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object,org.simpleframework.xml.core.Label)
org.simpleframework.xml.core.DetailExtractor: org.simpleframework.xml.core.ContactList getMethods(java.lang.Class,org.simpleframework.xml.core.Detail)
org.jaudiotagger.tag.id3.valuepair.StandardIPLSKey: boolean isKey(java.lang.String)
com.caij.puremusic.drive.model.AlbumList: java.lang.String toString()
org.jaudiotagger.tag.datatype.Lyrics3Line: void readString(java.lang.String,int)
androidx.customview.widget.ViewDragHelper$Callback: boolean onEdgeLock(int)
com.tencent.bugly.proguard.ap: void b(java.lang.String)
org.jcodec.containers.mp4.boxes.FileTypeBox: java.lang.String fourcc()
com.caij.puremusic.views.BreadCrumbLayout: int getActiveIndex()
com.caij.puremusic.drive.model.EmbyAlbumsResponse: EmbyAlbumsResponse(int,java.util.List,int,int,kotlinx.serialization.internal.SerializationConstructorMarker)
org.jaudiotagger.audio.asf.util.Utils: java.util.GregorianCalendar getDateOf(java.math.BigInteger)
com.caij.puremusic.db.model.AlbumQueries$GetAlbumByArtistIdQuery: long getArtistId()
com.caij.puremusic.network.model.Image: int component2()
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
io.ktor.websocket.CloseReason$Codes: io.ktor.websocket.CloseReason$Codes[] values()
com.google.android.material.navigation.NavigationBarItemView: int getItemVisiblePosition()
org.jaudiotagger.utils.FileTypeUtil: boolean matchesSignature(java.lang.Integer[],byte[],int)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.umeng.commonsdk.framework.UMModuleRegister: UMModuleRegister()
com.caij.puremusic.db.model.SongQueries$SongsByNameAlbumQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.simpleframework.xml.core.Reflector: java.lang.Class[] getClasses(java.lang.reflect.ParameterizedType)
org.jaudiotagger.audio.ogg.OggVorbisCommentTagCreator: java.nio.ByteBuffer convert(org.jaudiotagger.tag.Tag)
com.tencent.bugly.proguard.as$2: as$2()
com.tencent.bugly.proguard.aa: java.lang.String q()
org.jaudiotagger.tag.id3.framebody.FrameBodyTRSN: FrameBodyTRSN(byte,java.lang.String)
androidx.fragment.app.Fragment: void performPause()
com.tencent.mm.opensdk.modelpay.JumpToOfflinePay$Req: int getType()
org.jaudiotagger.tag.id3.framebody.FrameBodyETCO: void setTimestampFormat(int)
com.google.android.material.progressindicator.CircularProgressIndicator: void setIndicatorSize(int)
org.simpleframework.xml.core.Primitive: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.lang.Object)
androidx.core.widget.ListViewCompat$Api19Impl: void scrollListBy(android.widget.ListView,int)
org.jaudiotagger.audio.real.RealFileReader: org.jaudiotagger.tag.Tag getTag(java.io.RandomAccessFile)
com.google.common.collect.AbstractIterator$State: com.google.common.collect.AbstractIterator$State[] $values()
com.umeng.analytics.pro.an: boolean z()
kotlinx.serialization.json.JsonPrimitive$Companion: kotlinx.serialization.KSerializer serializer()
com.google.android.material.bottomsheet.BottomSheetDialogFragment$BottomSheetDismissCallback: BottomSheetDialogFragment$BottomSheetDismissCallback(com.google.android.material.bottomsheet.BottomSheetDialogFragment,com.google.android.material.bottomsheet.BottomSheetDialogFragment$1)
com.caij.puremusic.db.model.AlbumQueries$insert$2: AlbumQueries$insert$2()
org.jaudiotagger.tag.datatype.TextEncodedStringNullTerminated: boolean equals(java.lang.Object)
org.jaudiotagger.audio.mp4.ChunkReader: org.jaudiotagger.audio.mp4.Chunk next()
com.caij.puremusic.db.model.SongEntityQueries$SongsFromPlaylistQuery: java.lang.String toString()
com.umeng.commonsdk.statistics.proto.a$e: com.umeng.commonsdk.statistics.proto.a$e valueOf(java.lang.String)
org.simpleframework.xml.transform.DateTransform: java.util.Date read(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
org.simpleframework.xml.core.TemplateLabel: boolean isInline()
com.caij.puremusic.drive.model.Response: void setStatus(java.lang.String)
com.umeng.commonsdk.statistics.proto.b: void write(com.umeng.analytics.pro.bu)
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query songsByInfo(java.lang.String,java.lang.String,java.lang.String,kotlin.jvm.functions.Function18)
org.jaudiotagger.audio.ogg.util.OggPageHeader$HeaderTypeFlag: OggPageHeader$HeaderTypeFlag(java.lang.String,int,byte)
com.caij.puremusic.db.model.PlaylistEntityQueries$renamePlaylist$1: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.drive.model.BaiduDriveItem$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.umeng.analytics.pro.an: java.lang.String b()
com.tencent.bugly.proguard.r: void a(java.util.List,boolean)
com.caij.puremusic.db.model.SongQueries$songsByArtist$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
org.jaudiotagger.logging.XMLTagDisplayFormatter: void addElement(java.lang.String,int)
org.jaudiotagger.tag.id3.ID3v24Tag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.id3.ID3v24FieldKey,java.lang.String)
org.jaudiotagger.tag.id3.AbstractID3v2Frame$StatusFlags: byte getWriteFlags()
kotlinx.serialization.descriptors.SerialDescriptorsKt$buildSerialDescriptor$1: SerialDescriptorsKt$buildSerialDescriptor$1()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
org.jaudiotagger.tag.datatype.BooleanByte: boolean equals(java.lang.Object)
com.caij.puremusic.db.model.PlayCountEntityQueries$deleteById$1: java.lang.Object invoke(java.lang.Object)
com.thegrizzlylabs.sardineandroid.DavAcl: java.lang.String getGroup(com.thegrizzlylabs.sardineandroid.model.Response)
com.caij.puremusic.model.Data: com.caij.puremusic.model.Data copy$default(com.caij.puremusic.model.Data,java.lang.String,java.lang.String,java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,int,java.lang.Object)
org.jaudiotagger.audio.opus.OpusVorbisTagWriter: void write(org.jaudiotagger.tag.Tag,java.io.RandomAccessFile,java.io.RandomAccessFile)
com.caij.puremusic.db.model.SongQueries$SongsByTitleQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintList(android.content.res.ColorStateList)
org.jaudiotagger.tag.id3.ID3v1TagField: byte[] getRawContent()
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
com.caij.puremusic.db.model.ServerSongCoverQueries$insert$1: java.lang.Object invoke(java.lang.Object)
com.thegrizzlylabs.sardineandroid.model.Prop: java.lang.String getDisplayname()
androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: DependencyNode$Type(java.lang.String,int)
androidx.core.graphics.drawable.IconCompat: IconCompat()
com.tencent.bugly.proguard.k: com.tencent.bugly.proguard.m a(com.tencent.bugly.proguard.m,int,boolean)
org.jaudiotagger.audio.asf.io.AsfHeaderReader: org.jaudiotagger.audio.asf.data.AsfHeader createContainer(long,java.math.BigInteger,java.io.InputStream)
org.jcodec.containers.mp4.boxes.TimecodeMediaInfoBox: org.jcodec.containers.mp4.boxes.TimecodeMediaInfoBox createTimecodeMediaInfoBox(short,short,short,short[],short[],java.lang.String)
com.umeng.commonsdk.statistics.common.ULog: void i(java.lang.String,java.lang.Throwable)
org.jcodec.containers.mp4.boxes.ReverseDnsBox: byte[] getData()
org.jcodec.containers.mp4.boxes.TrakBox: int getFrameCount()
org.simpleframework.xml.core.PrimitiveList: boolean validate(org.simpleframework.xml.stream.InputNode)
com.caij.puremusic.db.model.PlaybackSong: int component4()
com.tencent.mm.opensdk.modelmsg.WXMusicVideoObject: int getFileSize(java.lang.String)
org.jcodec.containers.mp4.boxes.EsdsBox: java.nio.ByteBuffer getStreamInfo()
org.jaudiotagger.tag.id3.framebody.FrameBodyTDLY: java.lang.String getIdentifier()
com.tencent.mm.opensdk.modelmsg.GetMessageFromWX$Resp: boolean checkArgs()
com.umeng.commonsdk.service.UMGlobalContext: java.lang.String getChannel()
org.simpleframework.xml.stream.PullReader$Entry: java.lang.String getPrefix()
com.tencent.bugly.proguard.z: android.content.pm.PackageInfo b(android.content.Context)
com.umeng.analytics.pro.by: by(byte,int)
com.tencent.bugly.proguard.bj: byte[] a(byte[])
org.jaudiotagger.logging.FileSystemMessage: org.jaudiotagger.logging.FileSystemMessage valueOf(java.lang.String)
org.jaudiotagger.tag.wav.WavTag: boolean isIncorrectlyAlignedTag()
org.simpleframework.xml.core.Model: void registerElement(java.lang.String)
org.jaudiotagger.tag.mp4.field.Mp4TagRawBinaryField: byte[] getData()
com.caij.puremusic.drive.model.GoogleDriveFileResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.GoogleDriveFileResponse)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: void put(java.lang.String,okhttp3.RequestBody,okhttp3.Headers)
com.caij.puremusic.drive.model.PlaylistsMediaContainer: PlaylistsMediaContainer(int,java.util.List,kotlinx.serialization.internal.SerializationConstructorMarker)
com.tencent.bugly.proguard.k: void a(byte[])
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTagField: void isBinary(boolean)
com.google.android.material.bottomsheet.BottomSheetBehavior: int getPeekHeight()
com.umeng.commonsdk.utils.UMUtils: java.lang.String getFileMD5(java.io.File)
org.jaudiotagger.audio.mp3.MPEGFrameHeader: java.lang.String getVersionAsString()
com.caij.puremusic.drive.model.JellyfinSongListResponse: com.caij.puremusic.drive.model.JellyfinSongListResponse copy$default(com.caij.puremusic.drive.model.JellyfinSongListResponse,java.util.List,int,int,int,java.lang.Object)
com.afollestad.materialdialogs.color.view.ColorCircleView: int getColor()
com.caij.puremusic.drive.model.PlayListsResponse$Companion: PlayListsResponse$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.umeng.analytics.pro.o$b: o$b()
org.simpleframework.xml.core.PrimitiveScanner: org.simpleframework.xml.core.Function getComplete()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event downTo(androidx.lifecycle.Lifecycle$State)
com.caij.puremusic.db.model.PlaylistEntityQueries$renamePlaylist$2: java.lang.Object invoke(java.lang.Object)
com.google.android.material.chip.Chip: void setCheckedIconTintResource(int)
code.name.monkey.appthemehelper.common.prefs.supportv7.ATEPreference: ATEPreference(android.content.Context,android.util.AttributeSet,int)
org.jcodec.containers.mp4.boxes.ReverseDnsBox: org.jcodec.containers.mp4.boxes.ReverseDnsBox$RdnsNameBox getNameBox()
org.jaudiotagger.tag.id3.framebody.FrameBodyTSOT: FrameBodyTSOT(org.jaudiotagger.tag.id3.framebody.FrameBodyTSOT)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSST: FrameBodyTSST(java.nio.ByteBuffer,int)
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: FrameBodyTDRC(org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC)
org.jaudiotagger.tag.asf.AsfTagBannerField: AsfTagBannerField(byte[])
android.support.v4.media.session.PlaybackStateCompat$Api22Impl: void setExtras(android.media.session.PlaybackState$Builder,android.os.Bundle)
com.caij.puremusic.db.model.SongQueries$songsByArtist$1: SongQueries$songsByArtist$1(kotlin.jvm.functions.Function18,com.caij.puremusic.db.model.SongQueries)
org.simpleframework.xml.transform.Transformer: java.lang.Object read(java.lang.String,java.lang.Class)
org.simpleframework.xml.core.OverrideValue: java.lang.Object getValue()
com.umeng.commonsdk.utils.UMUtils: boolean isMainProgress(android.content.Context)
org.jaudiotagger.audio.aiff.AiffFileWriter: void deleteTag(org.jaudiotagger.tag.Tag,java.nio.channels.FileChannel,java.lang.String)
com.caij.puremusic.drive.model.SubsonicAlbum: java.lang.String component1()
org.jaudiotagger.tag.id3.framebody.FrameBodyTSOC: FrameBodyTSOC(java.nio.ByteBuffer,int)
org.jaudiotagger.tag.datatype.ID3v2LyricLine: java.lang.String toString()
org.jcodec.containers.mp4.boxes.ReverseDnsBox$RdnsMeanBox: void parse(java.nio.ByteBuffer)
com.caij.puremusic.db.model.SongEntityQueries$SongsFromPlaylistQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: int getTextDirection(android.view.View)
org.jaudiotagger.audio.wav.WavTagWriter: WavTagWriter(java.lang.String)
org.jaudiotagger.audio.wav.WavChunkType: org.jaudiotagger.audio.wav.WavChunkType[] values()
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdCountQuery: SongQueries$SongsByAlbumIdCountQuery(com.caij.puremusic.db.model.SongQueries,long,kotlin.jvm.functions.Function1)
com.caij.puremusic.drive.model.AlbumMetadata$Companion: AlbumMetadata$Companion()
org.simpleframework.xml.core.Section: java.lang.String getPath(java.lang.String)
com.caij.puremusic.drive.model.Response$Companion: Response$Companion()
org.jaudiotagger.tag.KeyNotFoundException: KeyNotFoundException(java.lang.String,java.lang.Throwable)
com.caij.puremusic.lyrics.LrcView: int getCenterLine()
androidx.constraintlayout.widget.Barrier: void setType(int)
com.umeng.analytics.pro.aw: int a(long,long)
com.umeng.analytics.pro.by: by()
androidx.constraintlayout.core.widgets.ConstraintAnchor$Type: androidx.constraintlayout.core.widgets.ConstraintAnchor$Type[] values()
org.jaudiotagger.tag.mp4.field.Mp4TrackField: java.lang.Short getTrackTotal()
org.jcodec.containers.mp4.boxes.TrunBox$Factory: org.jcodec.containers.mp4.boxes.TrunBox$Factory sampleCompositionOffset(int[])
com.yalantis.ucrop.view.GestureCropImageView: void setScaleEnabled(boolean)
com.alipay.android.phone.mrpc.core.j: java.lang.Object a()
com.tencent.mm.opensdk.modelpay.JumpToOfflinePay: JumpToOfflinePay()
com.caij.puremusic.activities.DriveModeActivity: DriveModeActivity()
com.caij.puremusic.drive.model.Multistatus: void write$Self(com.caij.puremusic.drive.model.Multistatus,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
org.jaudiotagger.audio.asf.data.StreamChunk: long getTimeOffset()
org.jaudiotagger.tag.mp4.field.Mp4TagRawBinaryField: void setData(byte[])
com.tencent.bugly.proguard.al: boolean e(java.lang.String,java.lang.Object[])
com.umeng.analytics.pro.v: int a()
com.caij.puremusic.db.model.PlaylistEntityQueries$CheckPlaylistExistsQuery: void addListener(app.cash.sqldelight.Query$Listener)
org.simpleframework.xml.stream.Format: Format(int,org.simpleframework.xml.stream.Style)
androidx.fragment.app.Fragment: void setMenuVisibility(boolean)
com.caij.puremusic.views.BaselineGridTextView: float getLineHeightMultiplierHint()
com.tencent.bugly.BuglyStrategy: java.lang.String getAppPackageName()
org.jaudiotagger.tag.aiff.AiffTag: void setField(org.jaudiotagger.tag.images.Artwork)
org.simpleframework.xml.core.ObjectScanner: void method(org.simpleframework.xml.core.Detail)
org.jaudiotagger.tag.id3.ID3v22PreferredFrameOrderComparator: int compare(java.lang.Object,java.lang.Object)
com.umeng.analytics.pro.u: void a(java.lang.String,java.lang.String,long,long,long)
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: com.umeng.commonsdk.statistics.proto.d e(com.umeng.commonsdk.statistics.proto.d)
com.alipay.apmobilesecuritysdk.e.i: boolean a(android.content.Context,java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect)
com.tencent.bugly.proguard.bm: void a(com.tencent.bugly.proguard.l)
com.caij.puremusic.drive.model.AlbumMediaContainer$Companion: AlbumMediaContainer$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.jaudiotagger.tag.id3.AbstractTagFrameBody: java.lang.String toString()
org.simpleframework.xml.transform.CharacterTransform: java.lang.String write(java.lang.Character)
com.thegrizzlylabs.sardineandroid.model.Ace: com.thegrizzlylabs.sardineandroid.model.Deny getDeny()
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
org.simpleframework.xml.transform.LocaleTransform: java.lang.String write(java.lang.Object)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyETT: FieldFrameBodyETT(java.nio.ByteBuffer)
com.caij.puremusic.db.model.SongQueries$GetSongCountBySourceIdQuery: java.lang.String toString()
com.google.android.material.search.SearchView: void setAnimatedNavigationIcon(boolean)
org.jaudiotagger.utils.tree.TreePath: TreePath(org.jaudiotagger.utils.tree.TreePath,java.lang.Object)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: void setParent(org.jaudiotagger.utils.tree.MutableTreeNode)
org.jaudiotagger.tag.wav.WavTag: org.jaudiotagger.tag.TagField getFirstField(org.jaudiotagger.tag.FieldKey)
com.caij.puremusic.model.Playlist$Creator: java.lang.Object[] newArray(int)
com.caij.puremusic.drive.model.MediaInfoWrapper: java.util.List getSongEntities()
com.google.android.material.search.SearchView: void setModalForAccessibility(boolean)
org.simpleframework.xml.stream.NamespaceMap: java.lang.String getPrefix()
com.alipay.apmobilesecuritysdk.c.a: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyWPUB: java.lang.String getIdentifier()
org.jaudiotagger.tag.id3.ID3v1Tag: java.util.List getTitle()
com.umeng.analytics.pro.bf: void write(com.umeng.analytics.pro.bu)
com.caij.puremusic.drive.model.Multistatus$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.thegrizzlylabs.sardineandroid.model.Deny: Deny()
org.simpleframework.xml.convert.ConverterScanner: java.lang.Class getType(org.simpleframework.xml.strategy.Type,java.lang.Object)
org.simpleframework.xml.core.Composite: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object,org.simpleframework.xml.core.Schema)
com.caij.puremusic.db.model.SongQueries$songByPath$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
com.google.android.material.chip.ChipGroup: void setSingleLine(boolean)
com.google.android.material.navigation.NavigationBarItemView: void setTitle(java.lang.CharSequence)
org.jaudiotagger.tag.mp4.Mp4FieldKey: boolean lambda$byFieldName$0(java.lang.String,org.jaudiotagger.tag.mp4.Mp4FieldKey)
com.tencent.bugly.proguard.at: android.content.Context b(com.tencent.bugly.proguard.at)
org.simpleframework.xml.core.CacheLabel: org.simpleframework.xml.strategy.Type getType(java.lang.Class)
com.tencent.bugly.proguard.c: byte[] a()
org.jcodec.containers.mp4.BoxFactory: org.jcodec.containers.mp4.boxes.Box newBox(org.jcodec.containers.mp4.boxes.Header)
com.google.android.material.chip.Chip: float getChipMinHeight()
org.jaudiotagger.tag.id3.ID3v22Tag: byte getMajorVersion()
com.thegrizzlylabs.sardineandroid.impl.handler.ResourcesResponseHandler: ResourcesResponseHandler()
com.caij.puremusic.db.model.SongQueries$SongsByNameAlbumQuery: void addListener(app.cash.sqldelight.Query$Listener)
com.umeng.analytics.pro.ay: java.lang.String g(byte[],com.umeng.analytics.pro.bc,com.umeng.analytics.pro.bc[])
org.simpleframework.xml.stream.OutputNodeMap: org.simpleframework.xml.stream.OutputNode getNode()
org.jaudiotagger.tag.wav.WavTag: void addField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
org.simpleframework.xml.stream.InputAttribute: void skip()
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.tencent.mm.opensdk.utils.Log: void w(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
org.jaudiotagger.audio.generic.GenericTag: java.lang.String getValue(org.jaudiotagger.tag.FieldKey,int)
org.simpleframework.xml.core.PrimitiveScanner: org.simpleframework.xml.core.ParameterMap getParameters()
org.simpleframework.xml.stream.PullReader$Start: java.lang.Object getSource()
org.jaudiotagger.tag.id3.ID3v23Tag: int getCrc32()
org.simpleframework.xml.core.ElementUnionLabel: boolean isRequired()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevation(float)
com.thegrizzlylabs.sardineandroid.Sardine: void enableCompression()
com.umeng.analytics.pro.ca$a: ca$a()
com.google.android.material.slider.BaseSlider: android.content.res.ColorStateList getHaloTintList()
org.jaudiotagger.tag.lyrics3.Lyrics3v2: void setField(org.jaudiotagger.tag.lyrics3.Lyrics3v2Field)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
org.simpleframework.xml.util.Dictionary: java.util.Iterator iterator()
com.umeng.analytics.pro.l: int a(com.umeng.analytics.pro.l)
com.umeng.commonsdk.framework.UMWorkDispatch: void sendEventEx(android.content.Context,int,com.umeng.commonsdk.framework.UMLogDataProtocol,java.lang.Object,long)
org.jaudiotagger.tag.id3.ID3Tags: long getWholeNumber(java.lang.Object)
com.caij.puremusic.db.model.SongQueries$songsByNameArtist$1: SongQueries$songsByNameArtist$1(kotlin.jvm.functions.Function18,com.caij.puremusic.db.model.SongQueries)
org.jaudiotagger.tag.id3.framebody.FrameBodyTMED: java.lang.String getIdentifier()
com.caij.puremusic.drive.model.ImageTags: ImageTags()
com.caij.puremusic.drive.model.DropboxDriveItem: DropboxDriveItem(int,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,kotlinx.serialization.internal.SerializationConstructorMarker)
org.simpleframework.xml.core.TemplateLabel: org.simpleframework.xml.strategy.Type getType(java.lang.Class)
com.tencent.mm.opensdk.diffdev.OAuthErrCode: OAuthErrCode(java.lang.String,int,int)
org.jaudiotagger.audio.asf.data.AsfHeader: org.jaudiotagger.audio.asf.data.EncodingChunk getEncodingChunk()
com.umeng.commonsdk.statistics.common.DeviceConfig: boolean isWiFiAvailable(android.content.Context)
com.umeng.commonsdk.internal.d: void b(android.content.Context,org.json.JSONObject)
com.umeng.commonsdk.vchannel.b: org.json.JSONObject d()
com.umeng.analytics.pro.u: u(com.umeng.analytics.pro.u$1)
org.jaudiotagger.audio.mp3.MP3FileWriter: void writeFile(org.jaudiotagger.audio.AudioFile)
com.umeng.commonsdk.internal.a: a()
com.umeng.commonsdk.statistics.idtracking.ImprintHandler$a: void a(com.umeng.commonsdk.statistics.proto.d)
org.simpleframework.xml.stream.StreamReader$Entry: boolean isReserved()
org.jaudiotagger.tag.id3.ID3v11Tag: ID3v11Tag(org.jaudiotagger.tag.id3.ID3v11Tag)
com.google.android.material.navigation.NavigationBarMenuView: void setItemActiveIndicatorResizeable(boolean)
org.simpleframework.xml.core.Source: org.simpleframework.xml.core.Scanner getScanner(java.lang.Class)
org.jaudiotagger.tag.wav.WavTag: boolean equals(java.lang.Object)
com.umeng.analytics.pro.i: void c(java.lang.String,org.json.JSONObject,android.database.sqlite.SQLiteDatabase)
com.google.android.material.bottomsheet.BottomSheetBehavior$5: BottomSheetBehavior$5(com.google.android.material.bottomsheet.BottomSheetBehavior,int)
com.umeng.commonsdk.statistics.common.ULog: void e(java.lang.String,java.lang.Object[])
com.tencent.bugly.proguard.ap: byte[] c(long)
org.jaudiotagger.audio.generic.AudioFileWriter: void write(org.jaudiotagger.audio.AudioFile)
org.simpleframework.xml.core.SignatureCreator: java.lang.String toString()
com.umeng.commonsdk.statistics.proto.Response: void clear()
org.jaudiotagger.audio.asf.data.MetadataDescriptor: void setWordValue(int)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: CoroutineScheduler$WorkerState(java.lang.String,int)
androidx.constraintlayout.core.SolverVariable$Type: SolverVariable$Type(java.lang.String,int)
org.jcodec.containers.mp4.boxes.SegmentIndexBox: void parse(java.nio.ByteBuffer)
com.tencent.mm.opensdk.openapi.MMSharedPreferences: MMSharedPreferences(android.content.Context)
com.caij.puremusic.drive.model.ParentReference: com.caij.puremusic.drive.model.ParentReference copy(java.lang.String,java.lang.String,java.lang.String)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: java.lang.Object execute(okhttp3.Request,com.thegrizzlylabs.sardineandroid.impl.handler.ResponseHandler)
com.caij.puremusic.db.model.HistoryEntity: long component2()
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean sendResp(com.tencent.mm.opensdk.modelbase.BaseResp)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
com.umeng.commonsdk.statistics.common.d$a: boolean a()
com.caij.puremusic.drive.model.AlbumMediaContainer: com.caij.puremusic.drive.model.AlbumMediaContainer copy(java.util.List)
org.jaudiotagger.tag.datatype.TempoCode: boolean equals(java.lang.Object)
com.google.android.material.bottomsheet.BottomSheetDragHandleView$2: BottomSheetDragHandleView$2(com.google.android.material.bottomsheet.BottomSheetDragHandleView)
org.jaudiotagger.tag.datatype.AbstractIntStringValuePair: java.lang.Integer getIdForValue(java.lang.String)
androidx.appcompat.app.AppCompatDialog: void setContentView(int)
com.umeng.commonsdk.utils.d: d()
com.caij.puremusic.db.model.HistoryEntityQueries: app.cash.sqldelight.Query getById(long)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.Fragment: android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)
org.jaudiotagger.audio.mp3.MPEGFrameHeader: java.lang.String getEmphasisAsString()
com.google.android.material.bottomsheet.BottomSheetDialog: void onCreate(android.os.Bundle)
com.tencent.bugly.proguard.as: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.tencent.bugly.crashreport.crash.CrashDetailBean)
com.caij.puremusic.drive.model.WebDAVToken$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.tag.asf.AsfTagField: org.jaudiotagger.audio.asf.data.MetadataDescriptor getDescriptor()
com.umeng.commonsdk.statistics.proto.a: com.umeng.commonsdk.statistics.proto.a a()
org.jaudiotagger.audio.mp4.Chunk: void trimFront(long)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
org.jcodec.containers.mp4.boxes.AliasBox: void parse(java.nio.ByteBuffer)
org.simpleframework.xml.core.MethodName: java.lang.reflect.Method getMethod()
com.caij.puremusic.drive.model.JellyfinArtistResponse: com.caij.puremusic.drive.model.JellyfinArtistResponse copy(java.util.List,int,int)
com.caij.puremusic.drive.model.PlaylistsMediaContainer: void write$Self(com.caij.puremusic.drive.model.PlaylistsMediaContainer,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.tencent.bugly.proguard.bq: void a(com.tencent.bugly.proguard.l)
com.google.android.material.navigation.NavigationBarView: int getItemPaddingTop()
org.jaudiotagger.tag.mp4.Mp4TagField: byte[] getIdBytes()
org.repackage.com.miui.deviceid.IdentifierManager: java.lang.String b(android.content.Context)
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context,android.util.AttributeSet)
org.simpleframework.xml.core.ModelList: org.simpleframework.xml.core.ModelList build()
org.simpleframework.xml.core.Template: java.lang.String toString()
org.jaudiotagger.tag.id3.ID3v1Tag: org.jaudiotagger.tag.TagField createCompilationField(boolean)
org.jaudiotagger.tag.TagOptionSingleton: void setId3v1SaveAlbum(boolean)
com.caij.puremusic.drive.model.Response$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
org.simpleframework.xml.stream.OutputDocument: void setComment(java.lang.String)
org.simpleframework.xml.core.MethodScanner: void extend(java.lang.Class,org.simpleframework.xml.DefaultType)
androidx.core.app.NavUtils$Api16Impl: android.content.Intent getParentActivityIntent(android.app.Activity)
org.simpleframework.xml.core.PrimitiveKey: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.lang.Object)
com.caij.puremusic.lyrics.CoverLrcView: void setNormalColor(int)
org.jaudiotagger.tag.wav.WavTag: int getFieldCount()
org.jaudiotagger.audio.ogg.util.OggPageHeader: org.jaudiotagger.audio.ogg.util.OggPageHeader read(java.io.RandomAccessFile)
com.tencent.mm.opensdk.modelbiz.OpenWebview$Req: void toBundle(android.os.Bundle)
com.caij.vip.DonatedActivity: void onClick(android.view.View)
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.reference.Tagger getTagger()
org.simpleframework.xml.core.Composite: void writeVersion(org.simpleframework.xml.stream.OutputNode,java.lang.Object,org.simpleframework.xml.core.Schema)
com.caij.puremusic.db.model.SongQueries$searchSongsByTitle$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyXSOP: FrameBodyXSOP()
com.umeng.commonsdk.service.UMGlobalContext: android.content.Context getAppContext(android.content.Context)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyLYR: boolean equals(java.lang.Object)
org.jaudiotagger.tag.id3.valuepair.SynchronisedLyricsContentType: SynchronisedLyricsContentType()
com.umeng.analytics.pro.m: boolean b(com.umeng.analytics.pro.m)
StatusBarLyric.API.StatusBarLyric: void stopLyric(android.content.Context)
com.thegrizzlylabs.sardineandroid.impl.SardineException: java.lang.String getMessage()
org.jaudiotagger.audio.asf.data.MetadataDescriptor: void setBooleanValue(boolean)
org.jaudiotagger.audio.exceptions.NoReadPermissionsException: NoReadPermissionsException()
com.umeng.commonsdk.internal.utils.d: java.lang.String c()
org.jcodec.containers.mp4.boxes.MovieExtendsHeaderBox: void parse(java.nio.ByteBuffer)
androidx.core.view.ViewCompat$Api16Impl: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
org.simpleframework.xml.stream.Attribute: java.lang.String getReference()
com.caij.puremusic.drive.model.PlexLoginResponse$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
org.jaudiotagger.tag.asf.AsfTagField: java.lang.String toString()
androidx.cardview.widget.CardView: CardView(android.content.Context,android.util.AttributeSet)
org.simpleframework.xml.core.ElementParameter$Contact: java.lang.String getName()
org.jaudiotagger.tag.id3.framebody.FrameBodyRBUF: FrameBodyRBUF(java.nio.ByteBuffer,int)
org.jaudiotagger.tag.id3.framebody.FrameBodyCHAP: FrameBodyCHAP(java.lang.String,int,int,int,int)
androidx.fragment.app.Fragment: void initState()
com.umeng.analytics.pro.bv: bv(java.lang.Throwable)
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setExitTransition(android.widget.PopupWindow,android.transition.Transition)
org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Object,java.io.InputStream)
org.jaudiotagger.tag.datatype.PairedTextEncodedStringNullTerminated: byte[] writeByteArray()
org.simpleframework.xml.core.LabelExtractor: java.util.List getList(org.simpleframework.xml.core.Contact,java.lang.annotation.Annotation)
org.simpleframework.xml.core.PathParser: java.lang.String getElement(java.lang.String)
org.jaudiotagger.tag.id3.ID3v1Tag: org.jaudiotagger.tag.TagField getFirstField(org.jaudiotagger.tag.FieldKey)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: java.util.List list(java.lang.String,int)
org.jcodec.containers.mp4.boxes.EndianBox: org.jcodec.containers.mp4.boxes.EndianBox createEndianBox(java.nio.ByteOrder)
com.alipay.sdk.m.x.e: android.webkit.WebView getWebView()
org.jaudiotagger.tag.lyrics3.Lyrics3v2: void removeField(java.lang.String)
org.simpleframework.xml.strategy.Allocate: java.lang.Object getValue()
com.caij.puremusic.drive.model.SubPlayList$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.SubPlayList)
org.jaudiotagger.audio.mp3.MPEGFrameHeader: java.lang.String getLayerAsString()
com.caij.puremusic.db.model.SongQueries$songsByInfo$2: SongQueries$songsByInfo$2()
android.support.v4.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
com.caij.puremusic.drive.model.PlexUser: com.caij.puremusic.drive.model.PlexUser copy$default(com.caij.puremusic.drive.model.PlexUser,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
org.simpleframework.xml.core.TextLabel: org.simpleframework.xml.core.Expression getExpression()
com.caij.puremusic.db.model.SongQueries$SearchSongsByTitleQuery$execute$1: SongQueries$SearchSongsByTitleQuery$execute$1(com.caij.puremusic.db.model.SongQueries$SearchSongsByTitleQuery)
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.caij.puremusic.model.Genre: long component1()
org.simpleframework.xml.convert.RegistryStrategy: org.simpleframework.xml.strategy.Value read(org.simpleframework.xml.strategy.Type,org.simpleframework.xml.stream.NodeMap,org.simpleframework.xml.strategy.Value)
org.jaudiotagger.utils.tree.TreePath: java.lang.String toString()
com.umeng.commonsdk.statistics.noise.Defcon: long getReqInterval()
org.jaudiotagger.tag.id3.framebody.FrameBodyTFLT: FrameBodyTFLT(java.nio.ByteBuffer,int)
org.json.alipay.b$a: java.lang.String toString()
com.tencent.bugly.crashreport.CrashReport$a: void a(com.tencent.bugly.crashreport.crash.h5.H5JavaScriptInterface,java.lang.String)
org.simpleframework.xml.util.Dictionary: boolean add(java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyWOAR: FrameBodyWOAR(org.jaudiotagger.tag.id3.framebody.FrameBodyWOAR)
com.caij.puremusic.drive.model.MediaContainer$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.umeng.analytics.pro.p: p()
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getDeviceIdType()
com.tencent.bugly.proguard.l: void a(long[],int)
com.caij.puremusic.db.model.ServerSongCoverQueries$GetBySourceQuery: ServerSongCoverQueries$GetBySourceQuery(com.caij.puremusic.db.model.ServerSongCoverQueries,long,kotlin.jvm.functions.Function1)
com.caij.puremusic.drive.model.AlbumMetadata: java.lang.String component1()
org.jaudiotagger.tag.mp4.field.Mp4TrackField: Mp4TrackField(java.lang.String)
com.caij.puremusic.db.model.AlbumQueries$GetAlbumByArtistIdQuery$execute$1: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.db.model.PlaylistEntityQueries$CheckPlaylistExistsQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.alipay.apmobilesecuritysdk.otherid.UmidSdkWrapper: void updateLocalUmidToken(android.content.Context,java.lang.String)
com.yalantis.ucrop.view.CropImageView: void setCropRect(android.graphics.RectF)
kotlin.time.DurationUnit: kotlin.time.DurationUnit[] $values()
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: void setDate(java.lang.String)
org.simpleframework.xml.stream.CamelCaseBuilder$Attribute: CamelCaseBuilder$Attribute(org.simpleframework.xml.stream.CamelCaseBuilder,java.lang.String,org.simpleframework.xml.stream.CamelCaseBuilder$1)
com.yalantis.ucrop.view.CropImageView: void setImageToWrapCropBoundsAnimDuration(long)
org.simpleframework.xml.core.DefaultScanner: org.simpleframework.xml.core.Decorator getDecorator()
com.umeng.commonsdk.utils.UMUtils: java.lang.String getAppVersionName(android.content.Context,java.lang.String)
com.google.android.material.bottomsheet.BottomSheetDialogFragment$BottomSheetDismissCallback: void onSlide(android.view.View,float)
com.caij.puremusic.drive.model.AlbumMetadata: java.lang.String component4()
com.caij.puremusic.drive.model.AlbumSubsonicResponse$$serializer: com.caij.puremusic.drive.model.AlbumSubsonicResponse deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.tag.InvalidFrameException: InvalidFrameException(java.lang.String,java.lang.Throwable)
com.google.android.material.appbar.CollapsingToolbarLayout: void setForceApplySystemWindowInsetTop(boolean)
com.umeng.analytics.pro.u: void a(android.content.Context,java.lang.String,long,long,long)
com.google.android.material.slider.Slider: void setEnabled(boolean)
org.jaudiotagger.tag.id3.framebody.FrameBodyRVRB: FrameBodyRVRB(org.jaudiotagger.tag.id3.framebody.FrameBodyRVRB)
org.jaudiotagger.audio.exceptions.NoReadPermissionsException: NoReadPermissionsException(java.lang.String,java.lang.Throwable)
org.simpleframework.xml.core.Label: java.lang.String[] getNames()
org.jaudiotagger.audio.generic.AbstractTag$1: void remove()
com.alipay.sdk.app.PayTask: boolean fetchSdkConfig(android.content.Context)
com.caij.puremusic.db.model.AlbumQueries$getAlbumByArtistId$1: AlbumQueries$getAlbumByArtistId$1(kotlin.jvm.functions.Function11,com.caij.puremusic.db.model.AlbumQueries)
org.simpleframework.xml.core.MethodPartFactory: java.lang.Class[] getDependents(java.lang.reflect.Method)
org.jaudiotagger.audio.AudioFileIO: org.jaudiotagger.audio.AudioFileIO getDefaultAudioFileIO()
com.umeng.commonsdk.statistics.internal.c$2: c$2(com.umeng.commonsdk.statistics.internal.c)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void deleteNumberTotalFrame(org.jaudiotagger.tag.id3.AbstractID3v2Tag$FrameAndSubId,org.jaudiotagger.tag.FieldKey,org.jaudiotagger.tag.FieldKey,boolean)
org.jaudiotagger.tag.datatype.ID3v2LyricLine: boolean equals(java.lang.Object)
org.simpleframework.xml.core.Collector: org.simpleframework.xml.core.Variable get(java.lang.Object)
org.jaudiotagger.audio.dsf.DsdChunk: long getFileLength()
com.tencent.mmkv.MMKV: long totalSize(long)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: java.util.List patch(java.lang.String,java.util.Map,java.util.List)
com.caij.puremusic.drive.model.AlbumListResponse: void getSubsonicResponse$annotations()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
com.caij.puremusic.drive.model.Metadata: java.lang.String component10()
com.caij.puremusic.model.Data: boolean getRadio()
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: void setTextAlignment(android.view.View,int)
com.umeng.commonsdk.service.UMGlobalContext: com.umeng.commonsdk.service.UMGlobalContext getInstance(android.content.Context)
com.caij.puremusic.drive.model.User: java.lang.String getName()
org.simpleframework.xml.stream.Indenter$Cache: Indenter$Cache(int)
com.caij.puremusic.db.model.SongQueries$SongsByAlumIdQuery: long getAlbumId()
androidx.constraintlayout.helper.widget.Flow: void setPaddingBottom(int)
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setShadowResource(int)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: java.lang.String getEncodingType()
com.alipay.sdk.m.j.c: java.lang.String a()
com.umeng.umzid.c: java.lang.String a(android.content.Context)
com.tencent.mm.opensdk.modelmsg.WXDesignerSharedObject: WXDesignerSharedObject()
org.repackage.com.meizu.flyme.openidsdk.b: void b(android.content.Context)
androidx.appcompat.widget.Toolbar$Api33Impl: void tryRegisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontalResource(int)
org.jaudiotagger.logging.ErrorMessage: java.lang.String getMsg(java.lang.Object[])
com.caij.puremusic.db.model.HistoryEntityQueries$HistorySongsQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
androidx.core.widget.NestedScrollView$Api21Impl: boolean getClipToPadding(android.view.ViewGroup)
com.caij.puremusic.db.model.PlayCountEntity: long component3()
org.simpleframework.xml.core.FieldScanner: void remove(java.lang.reflect.Field,java.lang.annotation.Annotation)
org.simpleframework.xml.core.SignatureScanner: void register(org.simpleframework.xml.core.Parameter)
org.jaudiotagger.tag.id3.framebody.FrameBodyTIT3: FrameBodyTIT3()
org.jcodec.containers.mp4.boxes.UdtaBox: org.jcodec.containers.mp4.boxes.MetaBox meta()
com.caij.puremusic.db.model.ArtistQueries$searchArtistByName$2: ArtistQueries$searchArtistByName$2()
com.umeng.analytics.pro.u: java.lang.String c()
com.umeng.commonsdk.statistics.proto.a: boolean g()
com.umeng.analytics.pro.s: boolean a(java.lang.String)
org.jcodec.containers.mp4.boxes.TrunBox$Factory: org.jcodec.containers.mp4.boxes.TrunBox$Factory firstSampleFlags(int)
com.tencent.bugly.proguard.r: void a(java.util.List,java.util.List)
com.google.android.material.slider.BaseSlider: void setCustomThumbDrawable(android.graphics.drawable.Drawable)
org.jaudiotagger.tag.TagOptionSingleton: void setId3v1SaveGenre(boolean)
com.tencent.bugly.proguard.as: void a(java.util.ArrayList,java.lang.String)
com.caij.puremusic.db.model.HistoryEntityQueries: void insert(com.caij.puremusic.db.model.HistoryEntity)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getActionTextColorAlpha()
com.alipay.apmobilesecuritysdk.e.f: f(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org.jaudiotagger.tag.id3.ID3v23Tag: byte getRelease()
org.simpleframework.xml.core.ClassSchema: org.simpleframework.xml.core.Caller getCaller()
androidx.mediarouter.app.MediaRouteButton: android.app.Activity getActivity()
kotlin.io.FileWalkDirection: kotlin.io.FileWalkDirection[] $values()
com.caij.puremusic.model.smartplaylist.TopTracksPlaylist$Creator: java.lang.Object[] newArray(int)
com.tencent.mm.opensdk.modelbiz.SubscribeMessage$Req: int getType()
com.caij.puremusic.drive.model.EmbyFoldersResponse: EmbyFoldersResponse(java.util.List)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: void unregistImprintCallback(java.lang.String,com.umeng.commonsdk.statistics.internal.UMImprintChangeCallback)
org.simpleframework.xml.core.AnnotationHandler: AnnotationHandler(java.lang.Class,boolean,boolean)
com.alipay.android.app.IAlixPay: boolean manager(java.lang.String)
org.simpleframework.xml.core.ClassScanner: org.simpleframework.xml.core.Decorator getDecorator()
com.alipay.apmobilesecuritysdk.e.h: java.lang.String e(android.content.Context)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpecResource(int)
com.caij.puremusic.db.model.SongQueries$SongsByIdsQuery: void addListener(app.cash.sqldelight.Query$Listener)
org.jaudiotagger.tag.wav.WavTag: void deleteField(org.jaudiotagger.tag.FieldKey)
com.bumptech.glide.load.EncodeStrategy: com.bumptech.glide.load.EncodeStrategy valueOf(java.lang.String)
com.tencent.mmkv.MMKV: void trim()
com.umeng.analytics.pro.at: short b()
org.simpleframework.xml.core.GroupExtractor: java.lang.String[] getNames()
kotlin.jvm.internal.Lambda: int getArity()
org.jaudiotagger.audio.generic.AbstractTag: void deleteArtworkField()
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: boolean setNativeAppVersion(java.lang.String)
org.jaudiotagger.tag.id3.ID3v23Frame: void setEncoding(java.nio.charset.Charset)
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: void setStreamCount(byte)
com.umeng.commonsdk.framework.UMFrUtils: long getLastSuccessfulBuildTime(android.content.Context)
org.simpleframework.xml.stream.Attribute: java.lang.Object getSource()
com.tencent.bugly.crashreport.CrashReport: boolean setJavascriptMonitor(android.webkit.WebView,boolean,boolean)
com.tencent.bugly.proguard.ar: int compareTo(java.lang.Object)
com.tencent.bugly.proguard.ai: void a(int,java.util.concurrent.LinkedBlockingQueue)
com.thegrizzlylabs.sardineandroid.model.Response: java.lang.String getResponsedescription()
com.google.android.material.slider.BaseSlider: void setTickInactiveTintList(android.content.res.ColorStateList)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: void setArtworkField(byte[],java.lang.String)
org.jaudiotagger.test.ExtractID3TagFromFile: void main(java.lang.String[])
com.google.common.base.Predicates$ObjectPredicate$2: boolean apply(java.lang.Object)
org.jaudiotagger.tag.id3.valuepair.SynchronisedLyricsContentType: org.jaudiotagger.tag.id3.valuepair.SynchronisedLyricsContentType getInstanceOf()
org.jaudiotagger.utils.IntArrayList: void fill(int,int,int)
com.caij.puremusic.db.model.PlaybackSong: java.lang.String toString()
org.jaudiotagger.audio.SupportedFileFormat$13: org.jaudiotagger.tag.Tag createDefaultTag()
com.caij.puremusic.network.model.LastFmAlbum$Album: java.lang.String getPlaycount()
com.caij.puremusic.drive.model.PlexUser: java.lang.String getUsername()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.util.Iterator getFrameOfType(java.lang.String)
com.caij.puremusic.network.model.ArtistWrapper: java.lang.Integer component2()
com.caij.puremusic.model.lyrics.Lyrics: com.caij.puremusic.model.lyrics.Lyrics parse(boolean)
com.alipay.apmobilesecuritysdk.d.e: void a()
com.caij.puremusic.db.model.PlayCountEntityQueries: app.cash.sqldelight.db.SqlDriver access$getDriver(com.caij.puremusic.db.model.PlayCountEntityQueries)
org.jaudiotagger.audio.mp4.Chunk: long getStartTv()
org.simpleframework.xml.core.PrimitiveValue: java.lang.Object read(org.simpleframework.xml.stream.InputNode)
com.tencent.bugly.crashreport.common.strategy.StrategyBean: int describeContents()
com.tencent.mm.opensdk.openapi.IWXAPIEventHandler: void onReq(com.tencent.mm.opensdk.modelbase.BaseReq)
org.jcodec.containers.mp4.boxes.TrackHeaderBox: java.lang.String fourcc()
org.jaudiotagger.audio.wav.WavCleaner$1: WavCleaner$1()
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$IWXMusicVipObject: boolean checkArgs()
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdTypeCountQuery: long getAlbumId()
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
org.simpleframework.xml.core.ElementUnionParameter: boolean isRequired()
org.jaudiotagger.audio.asf.io.ModificationResult: ModificationResult(int,long,java.util.Set)
org.simpleframework.xml.core.ElementListUnionLabel: java.lang.annotation.Annotation getAnnotation()
androidx.core.content.res.ResourcesCompat$Api23Impl: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
org.jaudiotagger.audio.asf.io.FileHeaderReader: FileHeaderReader()
org.simpleframework.xml.core.AttributeLabel: org.simpleframework.xml.core.Converter getConverter(org.simpleframework.xml.core.Context)
com.caij.puremusic.drive.model.PlaylistResponse$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.caij.puremusic.fragments.AlbumCoverStyle: int getDrawableResId()
org.jaudiotagger.tag.asf.AsfTagField: boolean isCommon()
com.tencent.mm.opensdk.openapi.WXApiImplComm: boolean validateAppSignatureForPackage(android.content.Context,java.lang.String,boolean)
com.caij.puremusic.db.model.PlaylistEntityQueries$deleteById$1: PlaylistEntityQueries$deleteById$1(long)
org.jaudiotagger.tag.id3.framebody.FrameBodyRVA2: java.lang.String getIdentifier()
app.cash.sqldelight.BaseTransacterImpl: BaseTransacterImpl(app.cash.sqldelight.db.SqlDriver)
com.caij.puremusic.drive.model.ADriveItem: boolean equals(java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyLINK: void getFrameIdentifier(java.lang.String)
kotlinx.coroutines.CoroutineStart: void invoke(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
com.umeng.commonsdk.statistics.noise.ABTest: ABTest(android.content.Context,java.lang.String,int)
org.simpleframework.xml.transform.InvalidFormatException: InvalidFormatException(java.lang.String,java.lang.Object[])
androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl: java.lang.String toLanguageTag(java.util.Locale)
com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)
com.caij.puremusic.db.model.SongQueries$SongsByInfoQuery: java.lang.String getValue__()
org.jaudiotagger.tag.id3.ID3v24Frame: org.jaudiotagger.tag.id3.AbstractID3v2Frame$StatusFlags getStatusFlags()
com.tencent.bugly.proguard.ay: void h()
com.caij.puremusic.db.model.AlbumQueries: void clear()
org.jaudiotagger.audio.ogg.OggVorbisTagWriter: byte[] createSegmentTable(int,int,java.util.List)
com.thegrizzlylabs.sardineandroid.model.Response: void setStatus(java.lang.String)
com.tencent.bugly.proguard.w: android.database.Cursor a(com.tencent.bugly.proguard.w,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.tencent.bugly.proguard.v)
org.simpleframework.xml.core.Traverser: java.lang.String getName(java.lang.Class)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
org.jcodec.containers.mp4.boxes.KeysBox: void doWrite(java.nio.ByteBuffer)
org.jaudiotagger.tag.id3.framebody.FrameBodyUFID: FrameBodyUFID()
com.tencent.bugly.proguard.u: com.tencent.bugly.proguard.u a(android.content.Context)
me.tankery.lib.circularseekbar.CircularSeekBar: void setCircleFillColor(int)
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: boolean putKeyValueToNative(java.lang.String,java.lang.String)
com.umeng.analytics.pro.bu: void a()
com.umeng.analytics.pro.ab: android.content.Context a(com.umeng.analytics.pro.ab)
com.caij.puremusic.fragments.player.PlayerAlbumCoverFragment: PlayerAlbumCoverFragment()
org.jaudiotagger.tag.id3.AbstractID3v2Tag$FrameAndSubId: org.jaudiotagger.tag.FieldKey getGenericKey()
com.umeng.analytics.pro.m: void onActivityResumed(android.app.Activity)
org.simpleframework.xml.core.FieldDetail: java.lang.annotation.Annotation[] getAnnotations()
org.jaudiotagger.audio.ogg.util.OggPageHeader: void setStartByte(long)
com.umeng.commonsdk.statistics.noise.ImLatent: boolean isLatentActivite()
com.umeng.analytics.pro.an: int D()
org.jaudiotagger.tag.Tag: boolean isEmpty()
org.jaudiotagger.tag.id3.ID3v23Frame: ID3v23Frame(org.jaudiotagger.tag.id3.AbstractID3v2Frame)
kotlin.io.FileWalkDirection: kotlin.io.FileWalkDirection[] values()
org.jaudiotagger.tag.id3.ID3v1Tag: void setArtist(java.lang.String)
com.caij.puremusic.drive.model.PlayLists$Companion: PlayLists$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.caij.puremusic.drive.model.JellyfinArtistResponse$Companion: JellyfinArtistResponse$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.jcodec.containers.mp4.boxes.NodeBox: org.jcodec.containers.mp4.boxes.Box findFirst(org.jcodec.containers.mp4.boxes.NodeBox,java.lang.Class,java.lang.String)
com.alipay.android.phone.mrpc.core.a.d: java.lang.Object a()
com.umeng.commonsdk.statistics.proto.c$b: c$b()
org.jaudiotagger.tag.datatype.PartOfSet$PartOfSetValue: void setCount(java.lang.String)
com.tencent.bugly.crashreport.CrashReport$a: void b()
org.simpleframework.xml.transform.DateType$DateFormat: java.util.Date getDate(java.lang.String)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: java.io.InputStream get(java.lang.String,java.util.Map)
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query song(long,kotlin.jvm.functions.Function18)
com.caij.puremusic.drive.model.DavProperties: long getModified()
org.simpleframework.xml.stream.Format: int getIndent()
com.google.android.material.appbar.CollapsingToolbarLayout: void setStatusBarScrim(android.graphics.drawable.Drawable)
com.caij.puremusic.lyrics.CoverLrcView: CoverLrcView(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyTextInfo: AbstractFrameBodyTextInfo(byte,java.lang.String)
org.simpleframework.xml.core.InstantiatorBuilder: void validate(org.simpleframework.xml.core.Detail)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyNumberTotal: java.lang.Integer getTotal()
com.tencent.mm.opensdk.openapi.MMSharedPreferences$REditor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)
com.google.common.base.Predicates$ObjectPredicate$4: java.lang.String toString()
org.jaudiotagger.audio.asf.data.ChunkContainer: java.lang.String prettyPrint(java.lang.String)
com.caij.puremusic.db.model.PlaylistEntityQueries: void renamePlaylist(java.lang.String,long)
org.simpleframework.xml.strategy.Contract: java.lang.String getLength()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void createStructureHeader()
com.caij.puremusic.db.model.AlbumQueries$GetAlbumByArtistIdQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.caij.puremusic.drive.model.PlayListItem: java.lang.String toString()
com.caij.puremusic.drive.model.JellyfinFolder: java.lang.String component3()
org.jaudiotagger.audio.asf.data.MetadataContainer: java.util.List getDescriptorsByName(java.lang.String)
com.umeng.commonsdk.UMConfigure: boolean needCheckPolicyResult(android.content.Context)
org.xmlpull.v1.XmlPullParser: int getAttributeCount()
com.thegrizzlylabs.sardineandroid.model.Lockinfo: com.thegrizzlylabs.sardineandroid.model.Locktype getLocktype()
com.alipay.apmobilesecuritysdk.e.h: void b(android.content.Context,java.lang.String)
com.umeng.analytics.pro.ad$a: void onServiceDisconnected(android.content.ComponentName)
org.jaudiotagger.audio.asf.io.RandomAccessFileInputstream: int read()
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: void setDefaultSampleFlags(int)
android.support.v4.media.session.PlaybackStateCompat$Api22Impl: android.os.Bundle getExtras(android.media.session.PlaybackState)
com.alipay.apmobilesecuritysdk.e.f: void b(java.lang.String)
com.umeng.analytics.a: a()
org.jaudiotagger.tag.lyrics3.AbstractLyrics3v2FieldFrameBody: void write(java.io.RandomAccessFile)
com.alipay.apmobilesecuritysdk.b.a: a()
com.google.android.material.progressindicator.BaseProgressIndicator: void setIndeterminate(boolean)
org.simpleframework.xml.core.PrimitiveScanner: org.simpleframework.xml.core.Function getPersist()
com.umeng.umzid.b$a: java.lang.Thread newThread(java.lang.Runnable)
org.simpleframework.xml.core.PrimitiveValue: void writeAttribute(org.simpleframework.xml.stream.OutputNode,java.lang.Object,java.lang.String)
org.jaudiotagger.audio.asf.io.CountingInputStream: long getReadCount()
com.caij.puremusic.drive.model.ArtistItem$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior(android.content.Context,android.util.AttributeSet)
com.tencent.bugly.proguard.am: boolean a(java.io.File,java.lang.String,long,boolean)
com.umeng.commonsdk.framework.a: void a(android.content.Context)
com.tencent.mm.opensdk.modelmsg.WXGameVideoFileObject: WXGameVideoFileObject(java.lang.String,java.lang.String,java.lang.String)
com.caij.puremusic.db.model.Album: java.lang.String toString()
org.jaudiotagger.audio.mp4.Chunk: void dropTailSamples(int)
com.caij.puremusic.views.insets.InsetsRecyclerView$1: InsetsRecyclerView$1()
org.simpleframework.xml.core.ElementMapLabel: java.lang.String getOverride()
org.jaudiotagger.tag.id3.framebody.FrameBodyUSLT: java.lang.String getIdentifier()
com.caij.puremusic.views.BreadCrumbLayout: void setCallback(com.caij.puremusic.views.BreadCrumbLayout$SelectionCallback)
com.caij.puremusic.drive.model.User: User(java.lang.String,java.lang.String,java.lang.String)
org.jaudiotagger.tag.mp4.Mp4Tag: void setField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
com.umeng.analytics.MobclickAgent: void setSysListener(com.umeng.common.ISysListener)
com.umeng.analytics.pro.m: void a(com.umeng.analytics.pro.n)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior(android.content.Context,android.util.AttributeSet)
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessWebview$Resp: void toBundle(android.os.Bundle)
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdQuery$execute$1: java.lang.Object invoke(java.lang.Object)
com.umeng.commonsdk.internal.utils.a: long a(android.content.Context,java.lang.String)
com.tencent.bugly.proguard.e: e()
org.simpleframework.xml.core.Parameter: int getIndex()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior(android.content.Context,android.util.AttributeSet)
org.jcodec.containers.mp4.boxes.Header: int estimateHeaderSize(int)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardBackgroundColor()
org.jaudiotagger.tag.id3.AbstractID3v2Frame: void write(java.io.ByteArrayOutputStream)
org.simpleframework.xml.core.VersionLabel: org.simpleframework.xml.core.Decorator getDecorator()
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setUseCompatPadding(boolean)
org.jaudiotagger.tag.id3.ID3v22Tag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.id3.ID3v22FieldKey,java.lang.String)
org.jaudiotagger.tag.TagOptionSingleton: void setFilenameTagSave(boolean)
com.caij.puremusic.db.model.SongQueries$SongsByTitleQuery: java.lang.String toString()
org.simpleframework.xml.core.DetailScanner: java.lang.reflect.Constructor[] getConstructors()
org.simpleframework.xml.transform.CharacterArrayTransform: java.lang.String write(java.lang.Object,int)
com.alipay.android.phone.mrpc.core.i: java.lang.String a()
com.caij.puremusic.drive.model.AlbumList$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.umeng.commonsdk.statistics.internal.b: void onRequestEnd()
com.caij.puremusic.dialogs.AddToPlaylistDialog: AddToPlaylistDialog()
org.jaudiotagger.utils.IntArrayList: void pop()
org.jaudiotagger.tag.TagOptionSingleton: boolean isOriginalSavedAfterAdjustingID3v2Padding()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: int getBitsPerSample()
androidx.constraintlayout.motion.widget.MotionLayout: int getCurrentState()
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
com.tencent.mm.opensdk.modelmsg.WXImageObject: void unserialize(android.os.Bundle)
com.caij.puremusic.db.model.HistoryEntityQueries$insert$2: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.fragments.player.plain.PlainPlaybackControlsFragment: PlainPlaybackControlsFragment()
com.umeng.analytics.AnalyticsConfig: void a(android.content.Context,int)
org.jaudiotagger.audio.wav.WavSaveOptions: org.jaudiotagger.audio.wav.WavSaveOptions valueOf(java.lang.String)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype valueOf(java.lang.String)
org.jaudiotagger.audio.aiff.AiffTagWriter: void delete(org.jaudiotagger.tag.Tag,java.nio.channels.FileChannel,java.lang.String)
com.tencent.bugly.proguard.aa: java.lang.String s()
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30(androidx.core.view.WindowInsetsCompat)
com.tencent.mm.opensdk.modelbiz.HandleScanResult$Req: void toBundle(android.os.Bundle)
com.umeng.analytics.pro.b$a$a: java.lang.String a(java.lang.String)
com.umeng.commonsdk.internal.utils.UMInternalUtilsAgent: void saveBattery(android.content.Context,java.lang.String)
com.tencent.mmkv.MMKV: void checkReSetCryptKey(java.lang.String)
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries: app.cash.sqldelight.db.SqlDriver access$getDriver(com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries)
com.thegrizzlylabs.sardineandroid.model.Lockentry: Lockentry()
com.alipay.android.phone.mrpc.core.ab: java.util.concurrent.Future a(com.alipay.android.phone.mrpc.core.t)
com.umeng.analytics.pro.a$a$a: java.lang.String a(java.lang.String)
org.jaudiotagger.tag.id3.ID3v11Tag: ID3v11Tag(java.io.RandomAccessFile,java.lang.String)
org.jaudiotagger.audio.mp3.MP3File: void setTag(org.jaudiotagger.tag.Tag)
com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)
com.alipay.android.phone.mrpc.core.i: i(com.alipay.android.phone.mrpc.core.h,com.alipay.android.phone.mrpc.core.aa)
androidx.core.view.GravityCompat$Api17Impl: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)
org.jaudiotagger.audio.aiff.AiffFileReader: org.jaudiotagger.audio.generic.GenericAudioHeader getEncodingInfo(java.nio.channels.FileChannel,java.lang.String)
com.caij.puremusic.db.model.Album: java.lang.String getComposer()
com.caij.puremusic.drive.model.PlaylistResponse: com.caij.puremusic.drive.model.PlaylistResponse copy(com.caij.puremusic.drive.model.PlayListSubsonicResponse)
org.simpleframework.xml.core.CompositeArray: java.lang.Object read(org.simpleframework.xml.stream.InputNode)
org.simpleframework.xml.util.WeakCache: void cache(java.lang.Object,java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: java.lang.String getFormattedText()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
org.jaudiotagger.audio.wav.WavInfoReader: boolean readChunk(java.nio.channels.FileChannel,org.jaudiotagger.audio.generic.GenericAudioHeader)
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getThumbTintMode()
me.tankery.lib.circularseekbar.CircularSeekBar: int getPointerColor()
com.caij.puremusic.drive.model.Collection$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.db.model.Song: long component8()
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
com.google.gson.LongSerializationPolicy$2: LongSerializationPolicy$2(java.lang.String,int)
org.jaudiotagger.tag.aiff.AiffTag: boolean isIncorrectlyAlignedTag()
com.umeng.commonsdk.stateless.c: void a()
com.thegrizzlylabs.sardineandroid.model.Lockinfo: com.thegrizzlylabs.sardineandroid.model.Lockscope getLockscope()
org.simpleframework.xml.stream.NodeReader: java.lang.String readText(org.simpleframework.xml.stream.InputNode)
com.google.android.material.navigation.NavigationBarMenuView: void setItemActiveIndicatorColor(android.content.res.ColorStateList)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
org.simpleframework.xml.strategy.Loader: java.lang.Class load(java.lang.String)
org.jaudiotagger.tag.id3.Id3SupportingTag: org.jaudiotagger.tag.id3.AbstractID3v2Tag getID3Tag()
androidx.constraintlayout.widget.ConstraintLayout: int getMaxWidth()
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$deleteById$2: void invoke(kotlin.jvm.functions.Function1)
org.jaudiotagger.audio.aiff.chunk.AnnotationChunk: boolean readChunk()
com.umeng.commonsdk.framework.a$1: void onReceive(android.content.Context,android.content.Intent)
com.tencent.mm.opensdk.modelmsg.WXAppExtendObject: WXAppExtendObject(java.lang.String,java.lang.String)
code.name.monkey.appthemehelper.common.prefs.supportv7.ATESwitchPreference: ATESwitchPreference(android.content.Context,android.util.AttributeSet,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.tencent.mm.opensdk.modelbiz.WXChannelOpenLive$Resp: void fromBundle(android.os.Bundle)
org.jaudiotagger.tag.aiff.AiffTag: org.jaudiotagger.tag.TagField getFirstField(org.jaudiotagger.tag.FieldKey)
org.jaudiotagger.tag.mp4.Mp4NonStandardFieldKey: java.lang.String getDescription()
com.umeng.commonsdk.statistics.proto.a: java.lang.String toString()
com.tencent.bugly.crashreport.crash.CrashDetailBean: int compareTo(java.lang.Object)
com.umeng.analytics.pro.as: int a(int,int,boolean)
org.jaudiotagger.audio.iff.ChunkHeader: java.lang.String getID()
com.alipay.android.phone.mrpc.core.b$a: b$a(com.alipay.android.phone.mrpc.core.b)
androidx.constraintlayout.widget.ConstraintHelper: void setReferenceTags(java.lang.String)
com.umeng.commonsdk.statistics.common.DataHelper: java.lang.String assembleURL(java.lang.String)
com.umeng.analytics.pro.cj: cj(int,java.lang.String)
com.google.android.material.navigation.NavigationBarItemView: int getSuggestedMinimumWidth()
com.tencent.mm.opensdk.modelbiz.WXNontaxPay$Req: int getType()
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: org.jcodec.containers.mp4.boxes.EsdsBox$Kind valueOf(java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodySIGN: FrameBodySIGN(byte,byte[])
com.google.android.material.bottomsheet.BottomSheetDialog$1: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
com.umeng.commonsdk.statistics.proto.a: void clear()
org.simpleframework.xml.core.TreeModel: void validateAttributes(java.lang.Class)
androidx.window.core.SpecificationComputer$VerificationMode: androidx.window.core.SpecificationComputer$VerificationMode[] values()
com.thegrizzlylabs.sardineandroid.model.Owner: java.util.List getContent()
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query songsByAlbumId(long)
com.umeng.commonsdk.framework.UMEnvelopeBuild: org.json.JSONObject buildEnvelopeWithExtHeader(android.content.Context,org.json.JSONObject,org.json.JSONObject,java.lang.String,java.lang.String,java.lang.String)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: void copyContent(org.jaudiotagger.tag.TagField)
com.umeng.commonsdk.utils.UMUtils: java.lang.String getAppMD5Signature(android.content.Context)
org.jaudiotagger.tag.datatype.StringSizeTerminated: java.nio.charset.Charset getTextEncodingCharSet()
com.umeng.commonsdk.internal.utils.f: f()
com.caij.puremusic.model.ArtworkInfo: long getAlbumId()
org.simpleframework.xml.stream.NodeExtractor: NodeExtractor(org.w3c.dom.Document)
org.jaudiotagger.tag.id3.framebody.FrameBodyPOPM: void setCounter(long)
org.simpleframework.xml.core.Collector: void commit(java.lang.Object)
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: int getBitrateNominal()
com.umeng.commonsdk.utils.UMUtils: java.lang.String bytes2Hex(byte[])
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgram$Req: int getType()
com.thegrizzlylabs.sardineandroid.impl.handler.LockResponseHandler: java.lang.Object handleResponse(okhttp3.Response)
org.jaudiotagger.tag.id3.framebody.FrameBodyGRP1: FrameBodyGRP1()
org.jcodec.containers.mp4.boxes.ChunkOffsetsBox: java.lang.String fourcc()
org.jaudiotagger.tag.datatype.StringHashMap: StringHashMap(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody,int)
com.caij.puremusic.drive.model.AlbumItem: java.util.List component10()
org.jcodec.containers.mp4.boxes.AliasBox: AliasBox(org.jcodec.containers.mp4.boxes.Header)
org.jaudiotagger.test.MergeID3AndMP3Files$DirFilter: boolean accept(java.io.File)
com.umeng.commonsdk.utils.UMUtils: void setAppkey(android.content.Context,java.lang.String)
io.ktor.util.date.WeekDay: io.ktor.util.date.WeekDay[] $values()
com.caij.puremusic.db.model.SongEntityQueries: app.cash.sqldelight.Query getPlaylistLastAddSong(long,kotlin.jvm.functions.Function3)
com.umeng.analytics.pro.l$1: void onActivityPaused(android.app.Activity)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable)
com.tencent.mm.opensdk.modelbase.BaseReq: boolean checkArgs()
com.umeng.commonsdk.statistics.proto.b$d: com.umeng.commonsdk.statistics.proto.b$c a()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList createLocaleList(java.util.Locale[])
org.jcodec.containers.mp4.boxes.ChunkOffsetsBox: void setChunkOffsets(long[])
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
org.json.alipay.a: a(org.json.alipay.c)
androidx.appcompat.view.WindowCallbackWrapper$Api26Impl: void onPointerCaptureChanged(android.view.Window$Callback,boolean)
org.simpleframework.xml.core.FieldContact: boolean isReadOnly()
com.tencent.mm.opensdk.modelbiz.WXChannelOpenFeed$Req: WXChannelOpenFeed$Req()
com.tencent.bugly.crashreport.CrashReport: void setDumpFilePath(android.content.Context,java.lang.String)
com.umeng.analytics.pro.cg: cg(java.io.InputStream)
com.umeng.analytics.filter.EventList: boolean enabled()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
org.jaudiotagger.audio.asf.data.MetadataDescriptor: MetadataDescriptor(java.lang.String,int)
org.simpleframework.xml.core.MethodContact: java.lang.Class getDeclaringClass()
com.google.android.material.chip.Chip: void setBackgroundColor(int)
org.simpleframework.xml.stream.OutputNodeMap: org.simpleframework.xml.stream.Node getNode()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyIMG: int getSize()
com.caij.puremusic.db.model.ArtistQueries: void deleteArtistById(long)
org.jaudiotagger.audio.asf.AsfFileReader: AsfFileReader()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)
org.jaudiotagger.tag.Tag: java.lang.String getFirst(java.lang.String)
com.caij.puremusic.drive.model.SongItem$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.caij.puremusic.drive.model.SubsonicPlaylist: SubsonicPlaylist(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,int,int,java.lang.String,java.lang.String,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
com.umeng.commonsdk.statistics.proto.b$a: b$a(com.umeng.commonsdk.statistics.proto.b$1)
org.simpleframework.xml.core.ClassScanner: org.simpleframework.xml.Order getOrder()
com.tencent.bugly.crashreport.inner.InnerApi: InnerApi()
com.google.android.material.slider.BaseSlider: void setThumbRadiusResource(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMR: java.lang.String getOwner()
com.caij.puremusic.drive.model.Response: java.util.List getPropstat()
com.tencent.bugly.crashreport.CrashReport: void setCollectPrivacyInfo(android.content.Context,boolean)
com.caij.puremusic.drive.model.Prop: void setGetlastmodified(java.lang.String)
com.caij.puremusic.fragments.genres.GenresFragment: GenresFragment()
com.google.android.material.bottomsheet.BottomSheetBehavior: void updateAccessibilityActions()
com.tencent.bugly.proguard.ai: void a(java.util.concurrent.LinkedBlockingQueue,java.util.concurrent.LinkedBlockingQueue,int)
org.jcodec.containers.mp4.boxes.Box: org.jcodec.containers.mp4.boxes.Box terminatorAtom()
com.tencent.bugly.CrashModule: boolean hasInitialized()
org.jaudiotagger.tag.Tag: boolean setEncoding(java.nio.charset.Charset)
com.umeng.commonsdk.statistics.proto.c: int f()
com.tencent.mm.opensdk.openapi.IWXAPI: boolean sendResp(com.tencent.mm.opensdk.modelbase.BaseResp)
org.jaudiotagger.audio.asf.data.ContainerType: java.lang.RuntimeException checkConstraints(java.lang.String,byte[],int,int,int)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyUrlLink: java.lang.String getUserFriendlyValue()
org.jaudiotagger.tag.datatype.StringDate: StringDate(org.jaudiotagger.tag.datatype.StringDate)
com.caij.puremusic.drive.model.PlayListItem: long component6()
com.caij.puremusic.model.CategoryInfo: com.caij.puremusic.model.CategoryInfo copy$default(com.caij.puremusic.model.CategoryInfo,int,boolean,int,java.lang.Object)
com.tencent.bugly.proguard.av: void c()
org.simpleframework.xml.stream.Formatter$Tag: Formatter$Tag(java.lang.String,int)
nl.adaptivity.xmlutil.EventType: nl.adaptivity.xmlutil.EventType[] values()
org.simpleframework.xml.core.StructureBuilder: void validateAttributes(java.lang.Class,org.simpleframework.xml.Order)
com.thegrizzlylabs.sardineandroid.model.SupportedReport: void setReport(com.thegrizzlylabs.sardineandroid.model.Report)
androidx.core.view.ViewGroupCompat$Api18Impl: void setLayoutMode(android.view.ViewGroup,int)
com.google.android.material.button.MaterialButtonToggleGroup: void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton)
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: void setOutputGain(short)
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessWebview$Req: int getType()
org.jaudiotagger.audio.mp3.MP3File: MP3File(java.io.File,int)
org.simpleframework.xml.core.CompositeKey: boolean validate(org.simpleframework.xml.stream.InputNode,java.lang.String)
org.jaudiotagger.utils.tree.DefaultTreeModel: int getChildCount(java.lang.Object)
org.jcodec.containers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox: int estimateSize()
com.google.android.material.internal.FlowLayout: void setSingleLine(boolean)
org.jaudiotagger.audio.exceptions.CannotWriteException: CannotWriteException(java.lang.Throwable)
com.umeng.commonsdk.internal.utils.c$a: com.umeng.commonsdk.internal.utils.c a()
com.tencent.bugly.BuglyStrategy: void setMerged(boolean)
org.jaudiotagger.tag.id3.framebody.FrameBodyPCNT: void setCounter(long)
com.umeng.commonsdk.statistics.common.MLog: void w(java.lang.String,java.lang.String,java.lang.Throwable)
com.caij.puremusic.drive.model.AMediaContainer: AMediaContainer(java.util.List)
com.umeng.commonsdk.utils.FileLockUtil: void doFileOperateion(java.io.File,com.umeng.commonsdk.utils.FileLockCallback,java.lang.Object)
com.caij.puremusic.db.model.SongQueries$SongsByIdsQuery: java.lang.String toString()
androidx.fragment.app.Fragment: boolean shouldShowRequestPermissionRationale(java.lang.String)
com.caij.puremusic.db.model.AlbumQueries$searchAlbumsByName$2: com.caij.puremusic.db.model.Album invoke(long,int,java.lang.String,long,long,java.lang.String,long,java.lang.String,java.lang.String,int,int)
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$Resp: int getType()
com.caij.puremusic.db.model.SongEntityQueries$getSongEntity$2: SongEntityQueries$getSongEntity$2()
org.jaudiotagger.tag.flac.FlacTag: org.jaudiotagger.tag.TagField createArtworkField(byte[],int,java.lang.String,java.lang.String,int,int,int,int)
org.jaudiotagger.utils.tree.DefaultTreeModel: void readObject(java.io.ObjectInputStream)
com.caij.puremusic.drive.model.PlayListItem$$serializer: com.caij.puremusic.drive.model.PlayListItem deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.drive.model.MediaInfoWrapper: com.caij.puremusic.drive.model.MediaInfoWrapper copy(java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.ArrayList,java.util.ArrayList)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: org.jaudiotagger.utils.tree.TreeNode getChildAfter(org.jaudiotagger.utils.tree.TreeNode)
org.jaudiotagger.audio.wav.chunk.WavChunkSummary: WavChunkSummary()
org.jaudiotagger.audio.asf.io.ModificationResult: java.util.Set getOccuredGUIDs()
com.tencent.mmkv.MMKV: void setWantsContentChangeNotify(boolean)
com.caij.puremusic.drive.model.SongItem: java.lang.String getPath()
com.tencent.bugly.proguard.i: com.tencent.bugly.proguard.i a(byte,java.lang.String)
com.caij.puremusic.db.model.PlayCountEntityQueries$CheckSongExistInPlayCountQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
com.umeng.analytics.pro.aw: void a(java.nio.ByteBuffer,java.lang.StringBuilder)
org.simpleframework.xml.stream.OutputStack: OutputStack(java.util.Set)
com.caij.puremusic.db.model.SongQueries$SongsByAlumQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
org.simpleframework.xml.stream.StreamReader: org.simpleframework.xml.stream.EventNode read()
com.tencent.mm.opensdk.modelbiz.SubscribeMiniProgramMsg$Resp: boolean checkArgs()
org.jaudiotagger.tag.images.Artwork: void setImageUrl(java.lang.String)
com.umeng.commonsdk.statistics.proto.d$b: com.umeng.commonsdk.statistics.proto.d$a a()
org.simpleframework.xml.stream.Attribute: java.lang.String getPrefix()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: Snackbar$SnackbarLayout(android.content.Context,android.util.AttributeSet)
org.simpleframework.xml.core.Composite: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.lang.Object)
org.jaudiotagger.audio.generic.GenericTag: boolean isAllowedEncoding(java.nio.charset.Charset)
org.jaudiotagger.tag.id3.framebody.FrameBodyTYER: FrameBodyTYER(org.jaudiotagger.tag.id3.framebody.FrameBodyTYER)
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1: com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState[] newArray(int)
com.caij.puremusic.network.model.TokenData: void setAccess_token(java.lang.String)
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getMacBySystemInterface(android.content.Context)
org.jaudiotagger.utils.EqualsUtil: EqualsUtil()
org.jaudiotagger.audio.asf.data.VideoStreamChunk: void setPictureWidth(long)
org.simpleframework.xml.core.Parameter: boolean isAttribute()
org.simpleframework.xml.core.ClassType: java.lang.annotation.Annotation getAnnotation(java.lang.Class)
org.jaudiotagger.tag.id3.framebody.FrameBodyWOAS: FrameBodyWOAS(org.jaudiotagger.tag.id3.framebody.FrameBodyWOAS)
com.caij.puremusic.db.model.HistoryEntityQueries$HistorySongsQuery$execute$1: HistoryEntityQueries$HistorySongsQuery$execute$1(com.caij.puremusic.db.model.HistoryEntityQueries$HistorySongsQuery)
org.jcodec.containers.mp4.boxes.Header: long getBodySize()
com.tencent.bugly.BuglyStrategy: void setEnableRecordAnrMainStack(boolean)
com.caij.puremusic.drive.model.Part: java.lang.String getFile()
com.google.android.material.slider.Slider: java.lang.CharSequence getAccessibilityClassName()
org.simpleframework.xml.strategy.ArrayValue: boolean isReference()
androidx.core.text.HtmlCompat$Api24Impl: android.text.Spanned fromHtml(java.lang.String,int)
com.caij.puremusic.db.model.HistoryEntityQueries$GetByIdQuery: java.lang.String toString()
com.umeng.analytics.pro.bn: void i()
org.repackage.com.zui.deviceidservice.IDeviceidInterface: java.lang.String a()
com.caij.puremusic.drive.model.Response$$serializer: Response$$serializer()
com.caij.puremusic.drive.model.OneDriveFileResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgram$Req: void toBundle(android.os.Bundle)
com.caij.puremusic.drive.model.AlbumMetadata: boolean equals(java.lang.Object)
org.simpleframework.xml.stream.InputPosition: InputPosition(org.simpleframework.xml.stream.EventNode)
org.jaudiotagger.tag.images.AndroidArtwork: boolean setImageFromData()
org.jaudiotagger.audio.asf.data.Chunk: void setPosition(long)
com.caij.puremusic.network.model.LastFmAlbum$Album$Wiki: LastFmAlbum$Album$Wiki(com.caij.puremusic.network.model.LastFmAlbum$Album)
com.caij.puremusic.model.Genre: com.caij.puremusic.model.Genre copy(long,java.lang.String,int)
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getDeviceIdUmengMD5(android.content.Context)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyLYR: FieldFrameBodyLYR()
org.jaudiotagger.tag.lyrics3.Lyrics3v2Field: Lyrics3v2Field()
com.umeng.analytics.process.DBFileTraversalUtil$a: void a()
com.tencent.mm.opensdk.modelmsg.WXFileObject: void unserialize(android.os.Bundle)
com.thegrizzlylabs.sardineandroid.model.Resourcetype: Resourcetype()
com.umeng.commonsdk.statistics.common.ULog: void print(int,java.lang.String,java.lang.String,java.lang.Throwable)
com.umeng.commonsdk.statistics.b: org.json.JSONObject b(android.content.Context,org.json.JSONObject,org.json.JSONObject,java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyTMED: FrameBodyTMED(byte,java.lang.String)
com.umeng.commonsdk.utils.c: boolean e(android.content.Context)
org.jcodec.containers.mp4.boxes.Edit: void setMediaTime(long)
org.simpleframework.xml.core.ConversionInstance: java.lang.Object getInstance()
com.caij.puremusic.drive.model.Location: Location()
com.caij.puremusic.network.model.LastFmAlbum$Album: void setImage(java.util.List)
com.caij.puremusic.db.model.ServerAudioFormatQueries: app.cash.sqldelight.db.SqlDriver access$getDriver(com.caij.puremusic.db.model.ServerAudioFormatQueries)
nl.adaptivity.xmlutil.serialization.NodeSerializer$descriptor$1: NodeSerializer$descriptor$1()
com.alipay.android.phone.mrpc.core.q: java.net.URI b()
com.tencent.mm.opensdk.modelmsg.WXFileObject: void setFileData(byte[])
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCustomSize(int)
androidx.window.layout.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
com.google.android.material.bottomsheet.BottomSheetDialog$4: boolean onTouch(android.view.View,android.view.MotionEvent)
org.simpleframework.xml.core.ElementParameter: java.lang.Object getKey()
com.tencent.bugly.proguard.r: void a()
org.simpleframework.xml.core.Composite: void validateUnion(org.simpleframework.xml.stream.InputNode,org.simpleframework.xml.core.LabelMap,org.simpleframework.xml.core.Label)
com.caij.puremusic.model.Contributor$Creator: com.caij.puremusic.model.Contributor createFromParcel(android.os.Parcel)
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgramEnvironment$Req: boolean checkArgs()
org.jcodec.containers.mp4.boxes.MetaValue: byte[] getData()
com.caij.puremusic.drive.model.PlexSectionsResponse: PlexSectionsResponse(int,com.caij.puremusic.drive.model.FMediaContainer,kotlinx.serialization.internal.SerializationConstructorMarker)
com.caij.puremusic.drive.model.PlexSongsResponse$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.jaudiotagger.audio.asf.data.ContainerType: boolean isLanguageEnabled()
com.caij.puremusic.drive.model.ArtistItem: java.lang.String getName()
org.jaudiotagger.audio.mp3.MP3File: byte[] getHash()
com.tencent.mm.opensdk.openapi.WXAPIFactory: com.tencent.mm.opensdk.openapi.IWXAPI createWXAPI(android.content.Context,java.lang.String,boolean)
com.umeng.analytics.pro.u$a: u$a()
org.jaudiotagger.audio.mp3.MP3File: byte[] getHash(java.lang.String,int)
com.alipay.android.phone.mrpc.core.e: boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)
com.google.android.material.bottomsheet.BottomSheetDragHandleView: BottomSheetDragHandleView(android.content.Context,android.util.AttributeSet,int)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.lang.String getTextValueForFrame(org.jaudiotagger.tag.id3.AbstractID3v2Frame)
org.jcodec.containers.mp4.boxes.EndianBox: void parse(java.nio.ByteBuffer)
com.google.android.material.chip.Chip: float getCloseIconStartPadding()
org.simpleframework.xml.core.Persister: Persister(org.simpleframework.xml.filter.Filter,org.simpleframework.xml.transform.Matcher,org.simpleframework.xml.stream.Format)
com.caij.puremusic.network.model.Image: java.lang.String getUrl()
org.simpleframework.xml.core.TemplateLabel: boolean isCollection()
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessWebview$Resp: WXOpenBusinessWebview$Resp(android.os.Bundle)
org.jaudiotagger.tag.id3.framebody.FrameBodyTCON: java.lang.String convertGenericToID3v23Genre(java.lang.String)
com.caij.puremusic.db.model.SongEntityQueries$insert$2: SongEntityQueries$insert$2()
com.umeng.analytics.pro.bu: void g()
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: void setField(java.lang.String,java.lang.String)
org.simpleframework.xml.core.ObjectScanner: org.simpleframework.xml.core.Label getVersion()
com.caij.puremusic.network.model.Artist: com.caij.puremusic.network.model.Artist copy$default(com.caij.puremusic.network.model.Artist,java.util.Map,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,com.caij.puremusic.network.model.Artist,java.util.List,int,java.lang.Object)
com.tencent.mm.opensdk.modelbiz.WXChannelOpenLive$Req: int getType()
com.umeng.commonsdk.stateless.b: void a(boolean)
com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport: com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport$Result fromMultistatus(com.thegrizzlylabs.sardineandroid.model.Multistatus)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
com.tencent.mm.opensdk.modelbiz.WXNontaxPay$Resp: boolean checkArgs()
com.caij.puremusic.drive.model.PlexAlbumsResponse: com.caij.puremusic.drive.model.AlbumMediaContainer component1()
com.tencent.mm.opensdk.utils.Log: void i(java.lang.String,java.lang.String)
org.simpleframework.xml.transform.LongTransform: java.lang.Object read(java.lang.String)
com.caij.puremusic.drive.model.ParentReference: java.lang.String component2()
com.caij.puremusic.network.model.LastFmTrack$Track$Album$Image: java.lang.String getText()
com.google.android.material.chip.Chip: void setChipStrokeColorResource(int)
com.caij.puremusic.network.model.Image: com.caij.puremusic.network.model.Image copy(java.lang.String,int,int)
com.caij.puremusic.fragments.player.circle.CirclePlayerFragment: CirclePlayerFragment()
org.simpleframework.xml.core.ExtractorFactory$ElementMapExtractor: org.simpleframework.xml.core.Label getLabel(java.lang.annotation.Annotation)
com.umeng.analytics.pro.ax: ax(int)
org.jaudiotagger.tag.mp4.field.Mp4GenreField: boolean isValidGenre(java.lang.String)
com.umeng.commonsdk.statistics.idtracking.e: java.lang.String d()
com.umeng.analytics.pro.m$a: void run()
com.umeng.commonsdk.statistics.common.MLog: void v(java.lang.String)
com.umeng.commonsdk.statistics.common.b: byte[] a(java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getOrCreateFilledDropDownMenuBackground()
com.google.android.material.textfield.TextInputLayout: void setHelperTextTextAppearance(int)
org.jaudiotagger.tag.id3.ID3v24Frame: void read(java.nio.ByteBuffer)
org.simpleframework.xml.core.DetailScanner: boolean isRequired()
org.jaudiotagger.audio.generic.Utils: int getIntLE(byte[],int,int)
com.tencent.bugly.crashreport.crash.anr.TraceFileHelper: void readTraceFile(java.lang.String,com.tencent.bugly.crashreport.crash.anr.TraceFileHelper$b)
com.caij.puremusic.drive.model.User$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.xmlpull.v1.XmlPullParser: java.lang.String getInputEncoding()
org.simpleframework.xml.core.ElementArrayLabel: java.lang.annotation.Annotation getAnnotation()
com.tencent.bugly.proguard.as: void a(com.tencent.bugly.crashreport.crash.CrashDetailBean)
org.jaudiotagger.tag.mp4.field.Mp4TagRawBinaryField: void copyContent(org.jaudiotagger.tag.TagField)
com.tencent.bugly.proguard.c: void a(byte[])
com.caij.puremusic.db.model.ServerLyrics: ServerLyrics(long,long,java.lang.String)
com.tencent.mm.opensdk.modelbiz.OpenRankList: OpenRankList()
com.alipay.android.phone.mrpc.core.q: java.util.HashMap a(java.lang.String)
org.jaudiotagger.tag.Tag: void setField(org.jaudiotagger.tag.images.Artwork)
androidx.fragment.app.DialogFragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.caij.puremusic.drive.model.MediaStream: MediaStream(int,java.lang.String,int,boolean,kotlinx.serialization.internal.SerializationConstructorMarker)
org.simpleframework.xml.util.Entry: java.lang.String getName()
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundResource(int)
org.simpleframework.xml.core.ContactMap: ContactMap()
com.tencent.bugly.proguard.aa: java.lang.String f()
com.umeng.commonsdk.statistics.common.a$b: a$b(com.umeng.commonsdk.statistics.common.a$1)
com.tencent.bugly.proguard.l: void a(byte[],int)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: MaterialCalendar$CalendarSelector(java.lang.String,int)
com.caij.puremusic.model.lyrics.Lyrics: boolean isSynchronized(java.lang.String)
org.simpleframework.xml.core.DefaultScanner: org.simpleframework.xml.core.Section getSection()
com.caij.puremusic.db.model.SongQueries$SongsByIdsQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.umeng.analytics.pro.bf: java.lang.Object a(java.lang.Object)
com.caij.puremusic.drive.model.PlaylistsMediaContainer$Companion: PlaylistsMediaContainer$Companion()
org.jaudiotagger.audio.ogg.util.OggPageHeader: void setPageSequence(int)
com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextAppearance(int)
org.jaudiotagger.tag.id3.ID3Frames: ID3Frames()
org.jaudiotagger.tag.id3.ID3v23Frame: int getFrameHeaderSize()
com.caij.puremusic.db.model.PlaylistEntityQueries$PlaylistByNameQuery$execute$1: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.db.model.PlaylistEntityQueries$renamePlaylist$2: void invoke(kotlin.jvm.functions.Function1)
org.jaudiotagger.tag.id3.ID3v22Frame: boolean isCommon()
com.heinrichreimersoftware.materialintro.view.InkPageIndicator: int getCurrentPageIndicatorColor()
com.caij.puremusic.drive.model.AlbumListResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.umeng.analytics.pro.ab: ab()
org.jaudiotagger.audio.mp3.MP3AudioHeader: java.lang.String getMpegLayer()
org.jaudiotagger.audio.flac.FlacTagWriter$MetadataBlockInfo: org.jaudiotagger.audio.flac.metadatablock.MetadataBlock access$102(org.jaudiotagger.audio.flac.FlacTagWriter$MetadataBlockInfo,org.jaudiotagger.audio.flac.metadatablock.MetadataBlock)
com.umeng.analytics.pro.f: void onCreate(android.database.sqlite.SQLiteDatabase)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
com.umeng.commonsdk.internal.c: android.content.Context a(com.umeng.commonsdk.internal.c)
com.thegrizzlylabs.sardineandroid.util.EntityWithAnyElementConverter: java.lang.reflect.Method getGetterForField(java.lang.reflect.Field)
org.jaudiotagger.tag.id3.framebody.FrameBodyTOLY: java.lang.String getIdentifier()
com.caij.puremusic.drive.model.PlaylistResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.PlaylistResponse)
com.caij.puremusic.db.model.SongQueries$FirstSongByAlbumIdQuery: void addListener(app.cash.sqldelight.Query$Listener)
org.jaudiotagger.tag.id3.framebody.FrameBodyXSOT: FrameBodyXSOT(byte,java.lang.String)
com.umeng.analytics.pro.an$d: com.umeng.analytics.pro.cc b()
org.jaudiotagger.audio.SupportedFileFormat$17: org.jaudiotagger.tag.Tag createDefaultTag()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)
androidx.legacy.widget.Space: Space(android.content.Context,android.util.AttributeSet)
org.simpleframework.xml.core.RootException: RootException(java.lang.Throwable,java.lang.String,java.lang.Object[])
com.caij.puremusic.drive.model.PlayListsResponse: com.caij.puremusic.drive.model.PlayListsSubsonicResponse getSubsonicResponse()
com.caij.puremusic.drive.model.ArtistItem: com.caij.puremusic.drive.model.ArtistItem copy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,java.lang.Integer,com.caij.puremusic.drive.model.ImageTags,java.util.List,java.lang.String)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.audio.asf.data.GUID: GUID(int[],java.lang.String)
org.simpleframework.xml.stream.Splitter: char toUpper(char)
com.tencent.bugly.proguard.c: void a(java.util.ArrayList,java.lang.Object)
org.jcodec.containers.mp4.boxes.TrackHeaderBox: boolean isOrientation270()
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
com.caij.puremusic.db.model.FolderQueries$selectAll$2: com.caij.puremusic.db.model.Folder invoke(long,int,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.umeng.commonsdk.statistics.common.MLog: void w(java.lang.Throwable)
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query firstSongByAlbumId(long,int,kotlin.jvm.functions.Function18)
com.caij.puremusic.drive.model.ArtistItem: java.lang.Integer getPrimaryImageAspectRatio()
com.umeng.analytics.pro.l: java.lang.Object d()
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String getIdentifier()
com.umeng.analytics.b: void d(android.content.Context,java.lang.String)
me.tankery.lib.circularseekbar.CircularSeekBar: void setCircleStrokeWidth(float)
com.caij.puremusic.db.model.PlaylistEntityQueries$CheckPlaylistExistsQuery$execute$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.tag.asf.AsfTag: AsfTag(boolean)
com.caij.puremusic.db.model.ServerSongCoverQueries$GetBySourceQuery: java.lang.String toString()
com.umeng.commonsdk.config.d$b: com.umeng.commonsdk.config.d$b[] values()
com.caij.puremusic.db.model.ServerLyricsQueries$GetByIdQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior(android.content.Context,android.util.AttributeSet)
org.simpleframework.xml.stream.CamelCaseBuilder: CamelCaseBuilder(boolean,boolean)
com.google.android.material.navigation.NavigationBarItemView: void setActiveIndicatorDrawable(android.graphics.drawable.Drawable)
org.jcodec.containers.mp4.boxes.ReverseDnsBox: void parse(java.nio.ByteBuffer)
org.jaudiotagger.tag.id3.ID3v23FieldKey: ID3v23FieldKey(java.lang.String,int,java.lang.String,java.lang.String,org.jaudiotagger.tag.id3.Id3FieldType)
com.caij.puremusic.drive.model.SubsonicAlbum: java.lang.String getCreated()
com.umeng.commonsdk.statistics.proto.d$a: d$a(com.umeng.commonsdk.statistics.proto.d$1)
org.simpleframework.xml.convert.RegistryStrategy: RegistryStrategy(org.simpleframework.xml.convert.Registry)
org.simpleframework.xml.core.PrimitiveInlineList: java.lang.Object read(org.simpleframework.xml.stream.InputNode)
com.google.android.exoplayer2.drm.FrameworkMediaDrm$Api31: boolean requiresSecureDecoder(android.media.MediaDrm,java.lang.String)
org.jaudiotagger.audio.asf.AsfFileWriter: void deleteTag(org.jaudiotagger.tag.Tag,java.io.RandomAccessFile,java.io.RandomAccessFile)
org.simpleframework.xml.core.Support: java.lang.String getName(java.lang.Class)
org.jaudiotagger.tag.id3.framebody.FrameBodyTRDA: FrameBodyTRDA(byte,java.lang.String)
androidx.core.app.ActivityCompat$Api16Impl: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: FrameBodyTDRC(org.jaudiotagger.tag.id3.framebody.FrameBodyTIME)
com.google.android.material.bottomappbar.BottomAppBar: void setFabAlignmentMode(int)
org.simpleframework.xml.core.ElementArrayLabel: org.simpleframework.xml.core.Contact getContact()
org.jaudiotagger.audio.aiff.AiffTagFieldKey: AiffTagFieldKey(java.lang.String,int,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
com.umeng.commonsdk.internal.b: com.umeng.commonsdk.internal.c a()
com.thegrizzlylabs.sardineandroid.model.Error: java.lang.Object getAny()
com.umeng.analytics.pro.an: int n()
org.jaudiotagger.tag.id3.ID3v22Frames: org.jaudiotagger.tag.id3.ID3v22Frames getInstanceOf()
org.jaudiotagger.audio.asf.io.WriteableChunk: long writeInto(java.io.OutputStream)
com.caij.puremusic.drive.model.AMetadata: boolean equals(java.lang.Object)
com.caij.puremusic.drive.model.Part: Part(int,java.lang.String,int,java.lang.String,int,java.lang.String)
org.simpleframework.xml.stream.NodeReader: org.simpleframework.xml.stream.InputNode readElement(org.simpleframework.xml.stream.InputNode)
org.jaudiotagger.logging.FileSystemMessage: FileSystemMessage(java.lang.String,int,java.lang.String)
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
org.jaudiotagger.audio.flac.FlacTagWriter$MetadataBlockInfo: java.util.List access$500(org.jaudiotagger.audio.flac.FlacTagWriter$MetadataBlockInfo)
org.jaudiotagger.tag.id3.ID3v24Tag: ID3v24Tag(java.nio.ByteBuffer,java.lang.String)
com.google.android.material.chip.ChipGroup: void setDividerDrawableVertical(android.graphics.drawable.Drawable)
org.simpleframework.xml.core.ObjectScanner: void validate(org.simpleframework.xml.core.Detail)
org.simpleframework.xml.core.Composite: void readElement(org.simpleframework.xml.stream.InputNode,java.lang.Object,org.simpleframework.xml.core.Section,org.simpleframework.xml.core.LabelMap)
com.tencent.mm.opensdk.modelbiz.WXChannelOpenFeed$Resp: void fromBundle(android.os.Bundle)
com.thegrizzlylabs.sardineandroid.DavResource: java.lang.String getName()
com.caij.puremusic.drive.model.ADriveItem: java.lang.String component2()
org.jaudiotagger.tag.id3.framebody.FrameBodyTLEN: FrameBodyTLEN(org.jaudiotagger.tag.id3.framebody.FrameBodyTLEN)
com.umeng.commonsdk.stateless.d: java.io.File b(android.content.Context)
com.umeng.analytics.CoreProtocol: com.umeng.analytics.CoreProtocol getInstance(android.content.Context)
com.caij.puremusic.model.Data: java.lang.String component12()
com.tencent.mm.opensdk.modelmsg.WXGameVideoFileObject: int getFileSize(java.lang.String)
com.google.android.material.search.SearchBar: void setDefaultScrollFlagsEnabled(boolean)
androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.SharedValues getSharedValues()
org.jaudiotagger.logging.PlainTextTagDisplayFormatter: void addElement(java.lang.String,boolean)
com.google.android.material.search.SearchBar: void setNavigationOnClickListener(android.view.View$OnClickListener)
org.jaudiotagger.tag.id3.framebody.FrameBodyWPAY: FrameBodyWPAY(java.lang.String)
me.tankery.lib.circularseekbar.CircularSeekBar: void setProgress(float)
com.google.android.material.chip.Chip: void setChipStartPaddingResource(int)
org.jaudiotagger.tag.lyrics3.AbstractLyrics3v2FieldFrameBody: AbstractLyrics3v2FieldFrameBody(org.jaudiotagger.tag.lyrics3.AbstractLyrics3v2FieldFrameBody)
com.alipay.android.phone.mrpc.core.h: h(android.content.Context)
org.simpleframework.xml.core.LabelExtractor: org.simpleframework.xml.core.LabelGroup getSingle(org.simpleframework.xml.core.Contact,java.lang.annotation.Annotation)
org.jaudiotagger.audio.asf.data.MetadataDescriptor: boolean isEmpty()
org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistSaveOptions: org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistSaveOptions[] values()
com.umeng.analytics.pro.y: java.lang.String b(android.content.Context)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.caij.puremusic.fragments.genres.GenreDetailsFragment: GenreDetailsFragment()
com.umeng.analytics.pro.s$a: com.umeng.analytics.pro.s a()
com.google.android.material.bottomappbar.BottomAppBar: void setFabAlignmentModeEndMargin(int)
com.caij.puremusic.drive.model.JellyfinFolder: void write$Self(com.caij.puremusic.drive.model.JellyfinFolder,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.caij.puremusic.drive.model.BaiduFileResponse: java.util.List component2()
com.google.android.material.bottomsheet.BottomSheetBehavior: void setState(int)
org.jaudiotagger.audio.flac.FlacAudioHeader: java.lang.String getMd5()
com.caij.puremusic.db.model.SongEntityQueries$getSongEntity$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
com.umeng.commonsdk.statistics.proto.b: void f()
org.simpleframework.xml.stream.StreamReader$Start: java.lang.Object getSource()
com.umeng.commonsdk.internal.crash.a: java.lang.String a(java.lang.Throwable)
org.simpleframework.xml.util.Resolver$Stack$Sequence: org.simpleframework.xml.util.Match next()
org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeType(int)
com.caij.puremusic.model.smartplaylist.ShuffleAllPlaylist: ShuffleAllPlaylist()
org.simpleframework.xml.core.Model: boolean isComposite()
org.jaudiotagger.audio.asf.util.Utils: java.lang.String readUTF16LEStr(java.io.InputStream)
org.simpleframework.xml.core.InstantiatorBuilder: org.simpleframework.xml.core.Instantiator build()
com.google.android.material.appbar.CollapsingToolbarLayout: void setExtraMultilineHeightEnabled(boolean)
org.jaudiotagger.tag.id3.framebody.FrameBodyTCON: FrameBodyTCON()
com.caij.puremusic.drive.model.BaiduFileResponse: int hashCode()
com.umeng.analytics.process.UMProcessDBHelper: void deleteMainProcessEventDatasByIds(java.util.List)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: void removeAllChildren()
org.jaudiotagger.audio.mp4.RelocateMP4Editor: RelocateMP4Editor()
org.simpleframework.xml.stream.Formatter: void writeStart(java.lang.String,java.lang.String)
org.jaudiotagger.tag.mp4.Mp4ContentTypeValue: Mp4ContentTypeValue(java.lang.String,int,java.lang.String,int)
com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: boolean setNativeUserId(java.lang.String)
org.jaudiotagger.audio.mp4.InplaceMP4Editor: boolean modify(java.nio.channels.FileChannel,org.jcodec.containers.mp4.boxes.MovieBox)
org.jcodec.containers.mp4.boxes.EncodedPixelBox: EncodedPixelBox(org.jcodec.containers.mp4.boxes.Header)
com.caij.puremusic.drive.model.SubsonicSong: long component6()
com.umeng.commonsdk.utils.FileLockCallback: boolean onFileLock(java.io.File,int)
org.jaudiotagger.tag.datatype.SynchronisedTempoCode: void setBody(org.jaudiotagger.tag.id3.AbstractTagFrameBody)
com.google.android.material.checkbox.MaterialCheckBox: void setCenterIfNoTextEnabled(boolean)
com.tencent.bugly.proguard.l: l()
com.caij.puremusic.drive.model.SongItem: java.util.List getArtistItems()
org.simpleframework.xml.transform.ArrayTransform: java.lang.Object read(java.lang.String)
com.alipay.sdk.app.PayTask: void dismissLoading()
org.jaudiotagger.utils.tree.TreePath: void writeObject(java.io.ObjectOutputStream)
com.caij.puremusic.db.model.ServerSongCoverQueries$deleteSongBySource$2: void invoke(kotlin.jvm.functions.Function1)
org.jaudiotagger.tag.TagField: boolean isEmpty()
com.caij.puremusic.drive.model.DropboxDriveFileResponse$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.alipay.apmobilesecuritysdk.e.i: java.lang.String a(java.lang.String)
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
org.simpleframework.xml.core.DetailScanner: void fields(java.lang.Class)
com.umeng.analytics.pro.o$d: long d()
com.caij.puremusic.drive.model.JellyfinArtistResponse$Companion: kotlinx.serialization.KSerializer serializer()
com.caij.puremusic.drive.model.AlbumMediaContainer$Companion: kotlinx.serialization.KSerializer serializer()
org.jaudiotagger.tag.id3.framebody.FrameBodyEQU2: FrameBodyEQU2(org.jaudiotagger.tag.id3.framebody.FrameBodyEQU2)
com.caij.puremusic.views.SettingListItemView: void setText(java.lang.String)
com.umeng.commonsdk.statistics.proto.e$d: com.umeng.commonsdk.statistics.proto.e$c a()
org.simpleframework.xml.core.TemplateFilter: TemplateFilter(org.simpleframework.xml.core.Context,org.simpleframework.xml.filter.Filter)
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean sendToWxaRedirectingPage(android.content.Context,com.tencent.mm.opensdk.modelbase.BaseReq)
org.jaudiotagger.tag.mp4.field.Mp4GenreField: java.lang.String bytesToData(byte[])
com.tencent.mm.opensdk.modelmsg.WXMusicVipInfo: void unserialize(android.os.Bundle)
org.jcodec.containers.mp4.boxes.Header: java.lang.String getFourcc()
org.jaudiotagger.tag.id3.framebody.FrameBodyWXXX: FrameBodyWXXX()
org.simpleframework.xml.Serializer: java.lang.Object read(java.lang.Class,java.io.File)
org.jcodec.containers.mp4.boxes.IListBox$LocalBoxes: IListBox$LocalBoxes()
org.jaudiotagger.utils.tree.TreePath: int hashCode()
com.caij.puremusic.drive.model.GoogleDriveFile: boolean equals(java.lang.Object)
org.json.alipay.c: char b()
com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()
com.umeng.analytics.pro.u: void a(java.lang.String,long,long,long)
org.jaudiotagger.audio.wav.WavChunkType: org.jaudiotagger.audio.wav.WavChunkType valueOf(java.lang.String)
org.jaudiotagger.audio.generic.GenericTag: org.jaudiotagger.tag.TagField getFirstField(org.jaudiotagger.tag.FieldKey)
com.caij.puremusic.model.DriveFileParcelable: boolean isDirectory()
com.umeng.commonsdk.statistics.proto.d$c: void a(com.umeng.analytics.pro.bu,com.umeng.commonsdk.statistics.proto.d)
com.tencent.bugly.proguard.w: boolean a(com.tencent.bugly.proguard.y)
com.tencent.bugly.proguard.as: void b(java.util.ArrayList,java.lang.String)
org.simpleframework.xml.core.Source: boolean setOverride(org.simpleframework.xml.strategy.Type,java.lang.Object,org.simpleframework.xml.stream.OutputNode)
org.jaudiotagger.tag.id3.ID3v22Tag: void read(java.nio.ByteBuffer)
com.umeng.analytics.pro.y$a: void a(java.lang.String,java.lang.String,long,long,long)
com.alipay.apmobilesecuritysdk.face.APSecuritySdk: APSecuritySdk(android.content.Context)
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse: int component3()
org.simpleframework.xml.core.ExtractorFactory$ElementMapExtractor: java.lang.annotation.Annotation[] getAnnotations()
com.caij.puremusic.drive.model.Media: com.caij.puremusic.drive.model.Media copy(int,int,int,int,java.lang.String,java.lang.String,java.util.List)
com.caij.puremusic.drive.model.Part: void write$Self(com.caij.puremusic.drive.model.Part,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.umeng.commonsdk.UMConfigureImpl: void b(android.content.Context)
org.jaudiotagger.tag.id3.framebody.FrameBodyRVAD: FrameBodyRVAD(java.nio.ByteBuffer,int)
com.caij.puremusic.drive.model.Media$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.tencent.mm.opensdk.utils.ILog: void i(java.lang.String,java.lang.String)
com.tencent.bugly.proguard.ac: com.tencent.bugly.crashreport.common.strategy.StrategyBean a(com.tencent.bugly.proguard.ac,com.tencent.bugly.crashreport.common.strategy.StrategyBean)
org.simpleframework.xml.core.DefaultDetail: java.lang.String toString()
com.caij.puremusic.drive.model.DriveFile: java.lang.String getId()
androidx.appcompat.app.AppCompatViewInflater: AppCompatViewInflater()
kotlinx.coroutines.CoroutineContextKt$foldCopies$1: CoroutineContextKt$foldCopies$1()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: boolean hasField(java.lang.String)
com.caij.puremusic.model.DriveFileParcelable: int component8()
org.jaudiotagger.utils.tree.TreeNode: java.util.Enumeration children()
com.tencent.mm.opensdk.modelpay.JumpToOfflinePay$Resp: void fromBundle(android.os.Bundle)
org.jaudiotagger.tag.id3.ID3v1Tag: void write(java.io.RandomAccessFile)
com.umeng.analytics.vshelper.a: void activityResume(java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSOA: FrameBodyTSOA()
org.simpleframework.xml.core.Support: boolean isContainer(java.lang.Class)
com.google.android.material.chip.Chip: void setGravity(int)
org.jaudiotagger.tag.images.StandardArtwork: void setImageUrl(java.lang.String)
com.caij.vip.VipApiService: java.lang.Object createOrder(java.lang.String,java.lang.String,java.lang.String,kotlin.coroutines.Continuation)
com.tencent.bugly.proguard.ay: boolean e()
com.caij.puremusic.db.model.ArtistQueries: app.cash.sqldelight.Query artists(kotlin.jvm.functions.Function2)
org.jaudiotagger.tag.id3.ID3v11Tag: boolean seek(java.nio.ByteBuffer)
org.jcodec.containers.mp4.boxes.EsdsBox$DecoderSpecific: void doWrite(java.nio.ByteBuffer)
androidx.core.app.NotificationCompat$BubbleMetadata$Api29Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
org.jaudiotagger.utils.IntArrayList: void clear()
org.jaudiotagger.tag.wav.WavInfoTag: java.lang.Long getEndLocationInFile()
org.jaudiotagger.utils.tree.MutableTreeNode: void setParent(org.jaudiotagger.utils.tree.MutableTreeNode)
org.jaudiotagger.audio.asf.data.StreamBitratePropertiesChunk: java.lang.String prettyPrint(java.lang.String)
com.tencent.bugly.proguard.s: void a()
org.simpleframework.xml.core.AnnotationHandler: java.lang.String toString()
com.tencent.mm.opensdk.modelmsg.WXImageObject: boolean checkArgs()
org.jaudiotagger.tag.datatype.TempoCode: TempoCode(org.jaudiotagger.tag.datatype.TempoCode)
org.simpleframework.xml.stream.Indenter$Cache: java.lang.String get(int)
kotlin.time.DurationUnit: java.util.concurrent.TimeUnit getTimeUnit$kotlin_stdlib()
org.jaudiotagger.tag.TagField: void isBinary(boolean)
com.caij.puremusic.preferences.LibraryPreferenceDialog: LibraryPreferenceDialog()
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse$Companion: kotlinx.serialization.KSerializer serializer()
com.caij.puremusic.db.model.AlbumQueries$AlbumQuery: long getId()
org.simpleframework.xml.core.Composite: void access$200(org.simpleframework.xml.core.Composite,org.simpleframework.xml.stream.InputNode,java.lang.Object,org.simpleframework.xml.core.Section)
com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)
com.caij.puremusic.drive.model.FMediaContainer$Companion: FMediaContainer$Companion()
com.umeng.analytics.process.UMProcessDBHelper: void insertEvents(java.lang.String,org.json.JSONArray)
org.jaudiotagger.tag.id3.ID3v24Tag: org.jaudiotagger.tag.id3.ID3Frames getID3Frames()
org.jaudiotagger.audio.iff.ChunkSummary: void setFileStartLocation(long)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyIND: FieldFrameBodyIND(org.jaudiotagger.tag.lyrics3.FieldFrameBodyIND)
com.google.android.material.textfield.TextInputLayout: int getEndIconMinSize()
com.umeng.commonsdk.statistics.common.MLog: void d(java.lang.String,java.lang.Object[])
com.caij.puremusic.db.model.AlbumQueries$clear$1: java.lang.Object invoke(java.lang.Object)
nl.adaptivity.xmlutil.XmlEvent$StartElementEvent$toString$1: XmlEvent$StartElementEvent$toString$1()
com.caij.puremusic.db.model.SearchAlbumResultQueries$clear$1: java.lang.Object invoke(java.lang.Object)
org.jcodec.containers.mp4.boxes.DataBox: int getLocale()
org.simpleframework.xml.stream.OutputStack: org.simpleframework.xml.stream.OutputNode top()
com.google.android.exoplayer2.metadata.scte35.SpliceNullCommand: SpliceNullCommand()
com.umeng.analytics.pro.ao: void onCreate(android.database.sqlite.SQLiteDatabase)
org.jaudiotagger.audio.asf.io.AsfHeaderReader: org.jaudiotagger.audio.asf.data.AsfHeader readInfoHeader(java.io.RandomAccessFile)
com.caij.puremusic.db.model.ArtistQueries$ArtistByIdQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
com.caij.puremusic.db.model.SongEntityQueries$GetSongEntityQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.caij.puremusic.network.model.LastFmAlbum$Album$Tags: LastFmAlbum$Album$Tags(com.caij.puremusic.network.model.LastFmAlbum$Album)
com.caij.puremusic.drive.model.AlbumMediaContainer: void write$Self(com.caij.puremusic.drive.model.AlbumMediaContainer,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedDispatcher findOnBackInvokedDispatcher(android.view.View)
com.umeng.commonsdk.statistics.common.d: void a(java.lang.String)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyNumberTotal: java.lang.Integer getNumber()
com.umeng.commonsdk.statistics.idtracking.e: void g()
com.caij.puremusic.drive.model.GoogleDriveFile$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.GoogleDriveFile)
com.google.common.collect.ImmutableList: ImmutableList()
com.google.android.material.bottomsheet.BottomSheetBehavior: void calculateCollapsedOffset()
org.jcodec.containers.mp4.boxes.MediaHeaderBox: int getLanguage()
com.caij.puremusic.db.model.SongQueries$insertOrReplace$1: SongQueries$insertOrReplace$1(com.caij.puremusic.db.model.Song,com.caij.puremusic.db.model.SongQueries)
org.jcodec.containers.mp4.boxes.SyncSamplesBox: int estimateSize()
com.google.android.material.slider.BaseSlider: void setThumbStrokeColorResource(int)
com.google.android.material.navigation.NavigationBarView: int getMaxItemCount()
org.simpleframework.xml.transform.IntegerTransform: java.lang.String write(java.lang.Integer)
com.google.android.material.bottomsheet.BottomSheetDialog: int getThemeResId(android.content.Context,int)
com.heinrichreimersoftware.materialintro.view.SwipeBlockableViewPager: SwipeBlockableViewPager(android.content.Context,android.util.AttributeSet)
org.jcodec.containers.mp4.boxes.MovieHeaderBox: java.lang.String fourcc()
com.tencent.bugly.BuglyStrategy: BuglyStrategy()
androidx.slidingpanelayout.widget.SlidingPaneLayout: int getLockMode()
com.alipay.tscenter.biz.rpc.vkeydfp.result.DeviceDataReportResult: DeviceDataReportResult()
com.umeng.analytics.pro.o: org.json.JSONObject b(boolean)
com.umeng.analytics.pro.an$a: an$a()
com.google.common.reflect.TypeCapture: TypeCapture()
com.umeng.analytics.pro.l: l()
com.caij.puremusic.db.model.ServerSongCover: int hashCode()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void deleteField(org.jaudiotagger.tag.FieldKey)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyEAL: FieldFrameBodyEAL(java.nio.ByteBuffer)
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException: DefaultImageHeaderParser$Reader$EndOfFileException()
com.caij.puremusic.drive.model.SongItem: java.lang.String component16()
com.caij.puremusic.db.model.SongQueries$GetAlbumSongCountQuery: long getAlbumId()
org.jaudiotagger.audio.generic.AbstractTag: void addField(org.jaudiotagger.tag.images.Artwork)
com.umeng.commonsdk.statistics.proto.d$e: java.lang.String b()
org.jaudiotagger.tag.wav.WavTag: boolean hasField(java.lang.String)
com.bumptech.glide.GeneratedAppGlideModule: GeneratedAppGlideModule()
com.caij.puremusic.model.Data: java.lang.String getType()
org.simpleframework.xml.core.ElementMapUnionParameter: boolean isRequired()
com.umeng.analytics.pro.an: com.umeng.analytics.pro.bp K()
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
org.jaudiotagger.tag.lyrics3.Lyrics3v1: boolean seek(java.io.RandomAccessFile)
com.tencent.mm.opensdk.modelbiz.WXChannelShareVideo$Req: WXChannelShareVideo$Req()
org.jaudiotagger.tag.reference.ISOCountry$Country: java.lang.String access$100(org.jaudiotagger.tag.reference.ISOCountry$Country)
org.jaudiotagger.audio.asf.io.RandomAccessFileInputstream: long skip(long)
com.caij.puremusic.network.model.LastFmAlbum$Album$Wiki: void setContent(java.lang.String)
com.caij.vip.DefaultFragmentActivity: DefaultFragmentActivity()
org.jcodec.containers.mp4.boxes.WaveExtension: WaveExtension(org.jcodec.containers.mp4.boxes.Header)
org.simpleframework.xml.util.Resolver: java.util.List resolveAll(java.lang.String)
org.jaudiotagger.tag.lyrics3.Lyrics3v2: Lyrics3v2(java.nio.ByteBuffer)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPadding: MetadataBlockDataPadding(int)
com.google.android.material.chip.Chip: void setChipBackgroundColorResource(int)
com.caij.puremusic.db.model.PlaylistEntity: boolean equals(java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSRC: FrameBodyTSRC(byte,java.lang.String)
com.thegrizzlylabs.sardineandroid.DavResource: java.lang.String getEtag()
com.umeng.commonsdk.statistics.proto.a$c: void b(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
com.caij.puremusic.drive.model.GoogleDriveFile: int hashCode()
com.tencent.bugly.proguard.c: void a(java.lang.String,java.lang.Object)
org.simpleframework.xml.core.Model: org.simpleframework.xml.core.ModelMap getModels()
com.umeng.analytics.pro.m: void onActivityStopped(android.app.Activity)
com.alipay.apmobilesecuritysdk.e.h: h()
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox$Factory: org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox$Factory defaultSampleSize(long)
org.simpleframework.xml.stream.DocumentReader: org.simpleframework.xml.stream.DocumentReader$End end()
org.jaudiotagger.tag.id3.framebody.FrameBodyGEOB: FrameBodyGEOB(byte,java.lang.String,java.lang.String,java.lang.String,byte[])
org.jaudiotagger.tag.id3.AbstractTagFrameBody: void setObjectValue(java.lang.String,java.lang.Object)
org.simpleframework.xml.core.InstanceFactory$ValueInstance: java.lang.Class getType()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getBoxStrokeErrorColor()
org.simpleframework.xml.core.ClassScanner: void method(org.simpleframework.xml.core.Detail)
org.simpleframework.xml.core.Signature: Signature(java.lang.reflect.Constructor)
com.caij.puremusic.views.WidthFitSquareLayout: WidthFitSquareLayout(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.tag.id3.ID3Compression: java.nio.ByteBuffer uncompress(java.lang.String,java.lang.String,java.nio.ByteBuffer,int,int)
org.simpleframework.xml.util.WeakCache$SegmentList: org.simpleframework.xml.util.WeakCache$Segment get(java.lang.Object)
org.jaudiotagger.audio.mp3.MPEGFrameHeader: void setProtected()
com.caij.puremusic.drive.model.SubsonicSearchResponse$Companion: SubsonicSearchResponse$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.jaudiotagger.tag.id3.framebody.FrameBodySIGN: java.lang.String getIdentifier()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipIconTint()
org.jaudiotagger.audio.mp4.Flatten$ProgressListener: void trigger(int)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: java.lang.String toString()
com.alipay.apmobilesecuritysdk.e.d: com.alipay.apmobilesecuritysdk.e.c c(android.content.Context)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.caij.puremusic.network.model.Artist: java.util.Map component1()
com.tencent.bugly.proguard.ab: long b(android.content.Context)
com.umeng.analytics.pro.i: void b(java.lang.String,org.json.JSONObject,android.database.sqlite.SQLiteDatabase)
com.umeng.commonsdk.UMConfigure$BS_TYPE: UMConfigure$BS_TYPE(java.lang.String,int)
com.umeng.analytics.pro.o: com.umeng.analytics.pro.o a(android.content.Context)
org.simpleframework.xml.core.Schema: org.simpleframework.xml.core.Section getSection()
com.umeng.commonsdk.statistics.idtracking.e: void b()
org.jaudiotagger.tag.id3.AbstractTagFrameBody: org.jaudiotagger.tag.id3.AbstractTagFrame getHeader()
androidx.fragment.app.Fragment: java.lang.String getTag()
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getAppName(android.content.Context)
com.tencent.bugly.proguard.bd: java.util.Map a(java.lang.String[])
com.google.android.material.imageview.ShapeableImageView: int getPaddingBottom()
com.caij.puremusic.drive.model.ADriveFileResponse: boolean equals(java.lang.Object)
com.caij.puremusic.network.model.LastFmTrack$Track$Album: void setTitle(java.lang.String)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyNumberTotal: void setNumber(java.lang.Integer)
com.umeng.analytics.pro.bu: java.lang.Class D()
com.umeng.commonsdk.framework.UMFrUtils: boolean checkPermission(android.content.Context,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
com.caij.puremusic.db.model.HistoryEntityQueries$historySongs$2: HistoryEntityQueries$historySongs$2()
org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId: void a(org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId,java.lang.String)
org.simpleframework.xml.transform.StringTransform: java.lang.Object read(java.lang.String)
com.tencent.bugly.crashreport.common.strategy.StrategyBean: StrategyBean(android.os.Parcel)
org.simpleframework.xml.core.InstanceFactory$ClassInstance: java.lang.Object getInstance()
org.jaudiotagger.tag.id3.valuepair.StandardIPLSKey: org.jaudiotagger.tag.id3.valuepair.StandardIPLSKey valueOf(java.lang.String)
com.caij.puremusic.drive.model.SearchResult3$$serializer: SearchResult3$$serializer()
org.jaudiotagger.audio.asf.data.MetadataDescriptor: org.jaudiotagger.audio.asf.data.MetadataDescriptor createCopy()
org.jaudiotagger.tag.id3.ID3v24Tag: byte getRelease()
com.umeng.analytics.process.UMProcessDBDatasSender$ConstructMessageCallback: UMProcessDBDatasSender$ConstructMessageCallback(com.umeng.analytics.process.UMProcessDBDatasSender,com.umeng.analytics.process.UMProcessDBDatasSender$1)
org.simpleframework.xml.core.MethodPartFactory: org.simpleframework.xml.core.MethodPart getInstance(java.lang.reflect.Method,java.lang.annotation.Annotation[])
com.tencent.bugly.proguard.l: void a(byte,int)
com.caij.puremusic.db.model.SongQueries$SongsByInfoQuery: java.lang.String getValue_()
com.caij.puremusic.drive.model.SongItem: java.util.Map component14()
org.jcodec.containers.mp4.boxes.EsdsBox$Descriptor: EsdsBox$Descriptor(int,int)
com.caij.puremusic.drive.model.User: java.lang.String getServerId()
org.simpleframework.xml.core.Model: boolean isElement(java.lang.String)
org.simpleframework.xml.core.PathParser$PathSection: java.lang.String getElement(java.lang.String)
com.umeng.commonsdk.internal.b: b(android.content.Context)
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getIdfa(android.content.Context)
org.simpleframework.xml.core.Variable: java.lang.String[] getPaths()
org.json.alipay.c: char c()
com.umeng.analytics.pro.ba: com.umeng.analytics.pro.az a(java.lang.Class,int)
org.jaudiotagger.audio.ogg.util.VorbisSetupHeader: VorbisSetupHeader(byte[])
org.simpleframework.xml.core.Scanner: org.simpleframework.xml.core.Label getVersion()
com.tencent.mm.opensdk.modelmsg.WXVideoObject: int type()
org.json.alipay.b: void b(java.lang.Object)
com.thegrizzlylabs.sardineandroid.Sardine: void move(java.lang.String,java.lang.String)
com.umeng.commonsdk.utils.UMUtils: void safeClose(java.io.InputStream)
org.jaudiotagger.tag.datatype.AbstractIntStringValuePair: java.lang.String getValueForId(int)
org.jcodec.containers.mp4.DefaultBoxes: DefaultBoxes()
com.umeng.analytics.pro.bo: void a(int)
org.simpleframework.xml.core.Function: Function(java.lang.reflect.Method,boolean)
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
com.umeng.analytics.process.c$a: android.database.sqlite.SQLiteDatabase a()
com.google.android.material.imageview.ShapeableImageView: int getPaddingRight()
com.tencent.mm.opensdk.modelmsg.LaunchFromWX$Req: int getType()
com.umeng.commonsdk.statistics.proto.c: com.umeng.commonsdk.statistics.proto.c$e a(int)
com.google.android.material.sidesheet.SideSheetBehavior: SideSheetBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.internal.NavigationMenuItemView: void setCheckable(boolean)
com.thegrizzlylabs.sardineandroid.model.Ace: void setDeny(com.thegrizzlylabs.sardineandroid.model.Deny)
org.jaudiotagger.tag.id3.ID3v22Tag: void readHeaderFlags(java.nio.ByteBuffer)
com.caij.puremusic.db.model.Album: java.lang.String getUrl()
code.name.monkey.appthemehelper.common.prefs.supportv7.ATESeekBarPreference: ATESeekBarPreference(android.content.Context,android.util.AttributeSet,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.tencent.bugly.proguard.bm: void a(java.lang.StringBuilder,int)
com.caij.puremusic.db.model.ServerAudioFormatQueries$getById$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
com.alipay.sdk.m.j.c: com.alipay.sdk.m.j.c valueOf(java.lang.String)
com.umeng.commonsdk.utils.JSONArraySortUtil: JSONArraySortUtil()
org.jaudiotagger.audio.generic.GenericAudioHeader: void setAudioDataLength(long)
com.umeng.analytics.MobclickAgent: void onEvent(android.content.Context,java.lang.String,java.lang.String)
com.caij.puremusic.drive.model.OneDriveFolder: void write$Self(com.caij.puremusic.drive.model.OneDriveFolder,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.tencent.mm.opensdk.diffdev.OAuthErrCode: int getCode()
org.simpleframework.xml.stream.InputElement: org.simpleframework.xml.stream.InputNode getAttribute(java.lang.String)
org.simpleframework.xml.core.ObjectScanner: void scan(org.simpleframework.xml.core.Detail)
org.jcodec.containers.mp4.boxes.SimpleBoxFactory: org.jcodec.containers.mp4.boxes.Box newBox(org.jcodec.containers.mp4.boxes.Header)
com.caij.puremusic.drive.model.Resourcetype$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.Resourcetype)
com.caij.puremusic.drive.model.EmbyAlbumsResponse: java.util.List component1()
org.jaudiotagger.audio.wav.WavFileWriter: void writeTag(org.jaudiotagger.tag.Tag,java.nio.channels.FileChannel,java.lang.String)
com.thegrizzlylabs.sardineandroid.DavResource: java.util.List getResourceTypes(com.thegrizzlylabs.sardineandroid.model.Response)
org.jaudiotagger.audio.mp4.Flatten: void flattenInt(java.nio.channels.SeekableByteChannel,org.jcodec.containers.mp4.boxes.MovieBox,java.nio.channels.SeekableByteChannel[])
org.jaudiotagger.tag.flac.FlacTag: boolean setEncoding(java.nio.charset.Charset)
com.umeng.commonsdk.statistics.proto.d: void a(java.lang.String,com.umeng.commonsdk.statistics.proto.e)
org.jaudiotagger.tag.flac.FlacTag: void addField(org.jaudiotagger.tag.TagField)
androidx.fragment.app.Fragment: android.view.View getView()
org.simpleframework.xml.core.ElementArrayParameter: java.lang.String toString()
com.google.android.material.card.MaterialCardView: float getCardViewRadius()
com.caij.puremusic.model.Data: java.lang.String getName()
com.google.android.material.chip.Chip: java.lang.CharSequence getChipText()
com.google.android.material.card.MaterialCardView: void setPreventCornerOverlap(boolean)
org.jaudiotagger.audio.AudioFile: void setFile(java.io.File)
org.jaudiotagger.tag.id3.AbstractID3v2Frame$StatusFlags: boolean equals(java.lang.Object)
com.caij.puremusic.db.model.SongQueries$delete$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.google.android.material.imageview.ShapeableImageView: int getContentPaddingEnd()
kotlinx.coroutines.CoroutineStart: boolean isLazy()
org.jaudiotagger.tag.aiff.AiffTag: java.util.List getFields(org.jaudiotagger.tag.FieldKey)
org.jaudiotagger.tag.TagException: TagException(java.lang.String,java.lang.Throwable)
org.jaudiotagger.tag.id3.AbstractTagItem: AbstractTagItem()
org.jaudiotagger.audio.asf.data.MetadataContainer: boolean isAddSupported(org.jaudiotagger.audio.asf.data.MetadataDescriptor)
com.caij.puremusic.drive.model.SubsonicAlbum: java.lang.String getArtist()
org.jaudiotagger.audio.generic.Utils: java.lang.String reinterpretIntAsString(java.lang.Integer)
org.jaudiotagger.tag.id3.framebody.FrameBodyTIME: FrameBodyTIME()
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: void findMatchingMaskAndExtractV3Values()
com.alipay.android.phone.mrpc.core.b: org.apache.http.HttpRequestInterceptor a()
com.google.android.material.navigation.NavigationBarView: android.view.MenuInflater getMenuInflater()
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
com.caij.puremusic.drive.model.SubsonicPlaylist$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
org.jaudiotagger.test.TestAudioTagger: void scanSingleDir(java.io.File)
androidx.cardview.widget.CardView: float getMaxCardElevation()
com.caij.puremusic.drive.model.PlayListSubsonicResponse: PlayListSubsonicResponse(int,java.lang.String,java.lang.String,com.caij.puremusic.drive.model.SubPlayList,kotlinx.serialization.internal.SerializationConstructorMarker)
androidx.constraintlayout.motion.widget.MotionLayout$TransitionState: androidx.constraintlayout.motion.widget.MotionLayout$TransitionState valueOf(java.lang.String)
com.umeng.analytics.pro.i: void h()
com.tencent.bugly.proguard.k: boolean b(int)
org.simpleframework.xml.core.ElementUnionLabel: org.simpleframework.xml.core.Converter getConverter(org.simpleframework.xml.core.Context)
com.google.android.material.slider.BaseSlider: void setTickVisible(boolean)
com.umeng.commonsdk.framework.a: void l()
org.jaudiotagger.audio.mp3.MP3AudioHeader: MP3AudioHeader(java.io.File,long)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyUnsupported: boolean isSubsetOf(java.lang.Object)
org.jaudiotagger.audio.wav.WavTagWriter: org.jaudiotagger.audio.iff.ChunkHeader seekToStartOfId3Metadata(java.nio.channels.FileChannel,org.jaudiotagger.tag.wav.WavTag)
org.simpleframework.xml.core.StructureBuilder: boolean isAttribute(java.lang.String)
com.umeng.commonsdk.statistics.proto.d: void d()
com.caij.puremusic.util.HttpUtil$httpClient$1$2$1: HttpUtil$httpClient$1$2$1()
org.jaudiotagger.utils.FileTypeUtil: java.lang.String getMagicExt(java.lang.String)
com.google.android.material.slider.BaseSlider: int getAccessibilityFocusedVirtualViewId()
org.repackage.com.zui.deviceidservice.IDeviceidInterface$Stub$Proxy: java.lang.String d()
com.umeng.commonsdk.internal.utils.g: g()
com.caij.puremusic.drive.model.Type$Companion: kotlinx.serialization.KSerializer serializer()
com.umeng.commonsdk.statistics.noise.ImLatent: ImLatent(android.content.Context,com.umeng.commonsdk.statistics.internal.StatTracer)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.tencent.bugly.proguard.av: void a(java.lang.Thread,java.lang.Throwable,boolean,java.lang.String,byte[],boolean)
org.jcodec.containers.mp4.boxes.MP4ABox: MP4ABox(org.jcodec.containers.mp4.boxes.Header)
com.umeng.analytics.pro.y: long i(android.content.Context)
com.caij.puremusic.activities.MainActivity: MainActivity()
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: java.lang.Object report(java.lang.String,int,com.thegrizzlylabs.sardineandroid.report.SardineReport)
org.jcodec.containers.mp4.boxes.AudioSampleEntry: float getSampleRate()
com.google.android.material.internal.ForegroundLinearLayout: ForegroundLinearLayout(android.content.Context,android.util.AttributeSet)
com.umeng.analytics.pro.an: java.lang.String e()
org.simpleframework.xml.core.ParameterContact: java.lang.Class getDependent()
org.jaudiotagger.tag.id3.framebody.FrameBodyWXXX: void addUrlLink(java.lang.String)
org.jaudiotagger.tag.images.AndroidImageHandler: org.jaudiotagger.tag.images.AndroidImageHandler getInstanceOf()
org.simpleframework.xml.strategy.CycleStrategy: CycleStrategy(java.lang.String,java.lang.String,java.lang.String)
com.umeng.commonsdk.internal.c: void g(android.content.Context)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
org.simpleframework.xml.core.ParameterFactory$ParameterBuilder: java.lang.reflect.Constructor getConstructor(java.lang.Class[])
org.jaudiotagger.audio.asf.data.StreamBitratePropertiesChunk: long getAvgBitrate(int)
org.jaudiotagger.tag.datatype.EventTimingCode: EventTimingCode(org.jaudiotagger.tag.datatype.EventTimingCode)
com.tencent.mm.opensdk.constants.Build: int getMinorVersion()
com.umeng.analytics.AnalyticsConfig: int getVerticalType(android.content.Context)
com.umeng.commonsdk.service.UMGlobalContext: java.lang.String getAppkey()
org.jaudiotagger.audio.generic.AbstractTagCreator: AbstractTagCreator()
com.caij.puremusic.drive.model.AMetadata$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.AMetadata)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSOC: java.lang.String getIdentifier()
com.caij.puremusic.db.model.SongEntity: boolean equals(java.lang.Object)
com.caij.puremusic.drive.model.PlayListItem: java.lang.String component9()
com.caij.puremusic.drive.model.ADriveItem: java.lang.String component8()
org.jcodec.containers.mp4.boxes.ClipRegionBox: ClipRegionBox(org.jcodec.containers.mp4.boxes.Header)
com.umeng.analytics.pro.aw: java.nio.ByteBuffer c(java.nio.ByteBuffer)
com.google.android.material.materialswitch.MaterialSwitch: void setTrackDecorationTintList(android.content.res.ColorStateList)
org.jaudiotagger.audio.generic.Utils: boolean rename(java.io.File,java.io.File)
com.umeng.commonsdk.statistics.idtracking.e: void a(com.umeng.commonsdk.statistics.proto.c)
org.simpleframework.xml.convert.AnnotationStrategy: AnnotationStrategy()
com.caij.puremusic.db.model.SearchAlbumResultQueries$clear$1: void invoke(kotlin.jvm.functions.Function1)
androidx.fragment.app.Fragment: void onAttach(android.content.Context)
com.caij.puremusic.activities.SupportDevelopmentActivity: SupportDevelopmentActivity()
com.tencent.bugly.proguard.aa: void b(java.lang.String)
com.caij.puremusic.network.model.Artist: java.lang.String getName()
com.caij.puremusic.drive.model.AlbumItem: java.lang.String component2()
org.simpleframework.xml.util.WeakCache$Segment: WeakCache$Segment(org.simpleframework.xml.util.WeakCache)
okhttp3.Protocol: java.lang.String access$getProtocol$p(okhttp3.Protocol)
androidx.appcompat.widget.AppCompatImageButton: void setImageLevel(int)
com.caij.puremusic.db.model.PlaybackSongQueries: app.cash.sqldelight.db.SqlDriver access$getDriver(com.caij.puremusic.db.model.PlaybackSongQueries)
org.simpleframework.xml.core.ModelAssembler: void registerAttribute(org.simpleframework.xml.core.Model,org.simpleframework.xml.core.Expression)
org.jaudiotagger.tag.asf.AbstractAsfTagImageField: AbstractAsfTagImageField(org.jaudiotagger.audio.asf.data.MetadataDescriptor)
com.caij.puremusic.db.model.SongQueries$GetSongBySourceQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
com.caij.puremusic.drive.model.PlayListItem: boolean component4()
com.tencent.bugly.crashreport.CrashReport$UserStrategy: com.tencent.bugly.BuglyStrategy$a getCrashHandleCallback()
com.thegrizzlylabs.sardineandroid.model.ReadAcl: ReadAcl()
com.alipay.android.phone.mrpc.core.d: org.apache.http.protocol.BasicHttpProcessor createHttpProcessor()
com.caij.puremusic.network.model.SearchResponse: int hashCode()
org.jaudiotagger.tag.datatype.StringDateTime: void setValue(java.lang.Object)
org.jaudiotagger.audio.AudioFileIO: void delete(org.jaudiotagger.audio.AudioFile)
org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Object,java.io.File)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)
com.caij.puremusic.drive.model.Collection: Collection()
com.caij.puremusic.db.model.PlayCountEntityQueries$checkSongExistInPlayCount$1: java.lang.Object invoke(java.lang.Object)
org.simpleframework.xml.core.TextLabel: org.simpleframework.xml.core.Converter getConverter(org.simpleframework.xml.core.Context)
com.umeng.commonsdk.statistics.proto.d$e: com.umeng.commonsdk.statistics.proto.d$e valueOf(java.lang.String)
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean sendFinderOpenProfile(android.content.Context,com.tencent.mm.opensdk.modelbase.BaseReq)
com.umeng.analytics.pro.bu: void f()
com.umeng.commonsdk.framework.UMFrUtils: boolean hasEnvelopeFile(android.content.Context,com.umeng.commonsdk.framework.UMLogDataProtocol$UMBusinessType)
org.simpleframework.xml.core.PathParser: int getIndex()
com.thegrizzlylabs.sardineandroid.DavPrincipal: java.lang.String getDisplayName()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyAUT: java.lang.String getAuthor()
com.umeng.commonsdk.statistics.proto.e: boolean g()
org.simpleframework.xml.core.PathParser$PathSection: org.simpleframework.xml.core.Expression getPath(int)
org.simpleframework.xml.DefaultType: org.simpleframework.xml.DefaultType valueOf(java.lang.String)
com.caij.puremusic.drive.model.SubsonicPlaylist$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.SubsonicPlaylist)
code.name.monkey.appthemehelper.common.prefs.supportv7.ATEDialogPreference: ATEDialogPreference(android.content.Context,android.util.AttributeSet,int,int)
com.umeng.commonsdk.statistics.proto.e$e: com.umeng.commonsdk.statistics.proto.e$e valueOf(java.lang.String)
org.jaudiotagger.audio.ogg.OggVorbisTagWriter: void replaceSecondPageOnly(org.jaudiotagger.audio.ogg.OggVorbisTagReader$OggVorbisHeaderSizes,int,int,org.jaudiotagger.audio.ogg.util.OggPageHeader,java.nio.ByteBuffer,long,java.io.RandomAccessFile,java.io.RandomAccessFile)
com.alipay.apmobilesecuritysdk.f.b: void a(java.lang.Runnable)
androidx.appcompat.widget.AppCompatButton: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.appcompat.widget.TooltipCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
com.umeng.commonsdk.debug.UMRTLog: void se(java.lang.String,java.lang.String)
org.jaudiotagger.tag.datatype.PartOfSet: PartOfSet(org.jaudiotagger.tag.datatype.PartOfSet)
com.umeng.commonsdk.internal.c: void removeCacheData(java.lang.Object)
org.jaudiotagger.audio.asf.data.MetadataDescriptor: void setDWordValue(long)
com.caij.puremusic.drive.model.AlbumItem: java.lang.String getServerId()
com.caij.puremusic.network.model.Image: com.caij.puremusic.network.model.Image copy$default(com.caij.puremusic.network.model.Image,java.lang.String,int,int,int,java.lang.Object)
com.google.android.material.navigation.NavigationBarItemView: void setLabelVisibilityMode(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSOA: FrameBodyTSOA(byte,java.lang.String)
com.tencent.mm.opensdk.modelbiz.WXChannelOpenFeed$Resp: int getType()
com.afollestad.materialdialogs.internal.main.DialogLayout: com.afollestad.materialdialogs.LayoutMode getLayoutMode()
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: java.lang.String getFirstTextValue()
org.simpleframework.xml.strategy.Allocate: void setValue(java.lang.Object)
org.simpleframework.xml.core.CompositeInlineList: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.util.Collection)
com.tencent.mm.opensdk.modelbiz.OpenWebview$Resp: OpenWebview$Resp(android.os.Bundle)
org.jcodec.containers.mp4.MP4Util: java.nio.ByteBuffer writeBox(org.jcodec.containers.mp4.boxes.Box,int)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSSE: FrameBodyTSSE(java.nio.ByteBuffer,int)
org.jaudiotagger.audio.asf.io.AsfHeaderReader: boolean canFail()
org.simpleframework.xml.core.Label: boolean isText()
org.jaudiotagger.tag.id3.framebody.FrameBodyTDTG: FrameBodyTDTG(byte,java.lang.String)
org.simpleframework.xml.Text: java.lang.String empty()
com.umeng.analytics.pro.ao: void d()
com.yalantis.ucrop.view.OverlayView: int getFreestyleCropMode()
org.jaudiotagger.tag.wav.WavTag: boolean isID3Tag()
com.alipay.sdk.m.r.a: com.alipay.sdk.m.r.a valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
com.google.android.material.card.MaterialCardView: void setCheckedIconMargin(int)
org.simpleframework.xml.transform.DateType$DateFormat: java.lang.String getText(java.util.Date)
org.jaudiotagger.audio.wav.WavTagWriter: org.jaudiotagger.audio.wav.WavTagWriter$BothTagsFileStructure checkExistingLocations(org.jaudiotagger.tag.wav.WavTag,java.nio.channels.FileChannel)
org.jcodec.containers.mp4.boxes.MetaBox: void setItunesMeta(java.util.Map)
org.simpleframework.xml.Serializer: boolean validate(java.lang.Class,java.io.InputStream)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: android.media.MediaDescription$Builder createBuilder()
code.name.monkey.appthemehelper.common.prefs.supportv7.ATEDialogPreference: ATEDialogPreference(android.content.Context,android.util.AttributeSet,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
org.simpleframework.xml.core.PathParser$PathSection: boolean isAttribute()
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: VorbisCommentFieldKey(java.lang.String,int,java.lang.String,java.util.EnumSet)
com.alipay.apmobilesecuritysdk.face.APSecuritySdk: void initToken(int,java.util.Map,com.alipay.apmobilesecuritysdk.face.APSecuritySdk$InitResultListener)
app.cash.sqldelight.BaseTransacterImpl: app.cash.sqldelight.db.SqlDriver getDriver()
android.support.v4.media.AudioAttributesImplApi26Parcelizer: androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel)
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
org.simpleframework.xml.core.SignatureCreator: double getScore(org.simpleframework.xml.core.Criteria)
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: void unsetGrouping()
com.afollestad.materialdialogs.internal.main.BaseSubLayout: int getDividerColor()
com.caij.puremusic.drive.model.ParentReference: ParentReference(int,java.lang.String,java.lang.String,java.lang.String,kotlinx.serialization.internal.SerializationConstructorMarker)
org.jcodec.containers.mp4.boxes.MovieBox: void fixTimescale(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSIZ: FrameBodyTSIZ()
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean checkSumConsistent(byte[],byte[])
com.caij.puremusic.drive.model.OneDriveItem: boolean equals(java.lang.Object)
com.umeng.analytics.pro.i: org.json.JSONObject a(boolean)
org.simpleframework.xml.stream.DocumentReader$Start: java.lang.Object getSource()
com.caij.puremusic.drive.model.AMetadata: com.caij.puremusic.drive.model.AMetadata copy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRL: FrameBodyTDRL(java.nio.ByteBuffer,int)
com.umeng.analytics.AnalyticsConfig: java.lang.String getChannel(android.content.Context)
org.simpleframework.xml.core.ParameterFactory: ParameterFactory(org.simpleframework.xml.core.Support)
com.caij.puremusic.drive.model.EmbyAlbumsResponse$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.google.common.base.Predicates$ObjectPredicate$3: Predicates$ObjectPredicate$3(java.lang.String,int)
org.simpleframework.xml.core.SignatureScanner: java.util.List getSignatures()
org.jcodec.containers.mp4.boxes.LoadSettingsBox: int getPreloadFlags()
com.umeng.commonsdk.statistics.proto.Response$e: short a()
com.google.android.material.bottomsheet.BottomSheetBehavior: int getChildMeasureSpec(int,int,int,int)
com.caij.puremusic.drive.model.AlbumMediaContainer: AlbumMediaContainer(java.util.List)
org.jaudiotagger.tag.TagOptionSingleton: boolean isAPICDescriptionITunesCompatible()
org.simpleframework.xml.core.DefaultDetail: DefaultDetail(org.simpleframework.xml.core.Detail,org.simpleframework.xml.DefaultType)
org.simpleframework.xml.core.Traverser: boolean validate(org.simpleframework.xml.stream.InputNode,java.lang.Class)
com.tencent.bugly.proguard.k: byte[] c(int,boolean)
com.google.gson.internal.LinkedTreeMap: LinkedTreeMap()
org.simpleframework.xml.core.ElementArrayParameter: boolean isPrimitive()
com.caij.puremusic.drive.model.PlayListSubsonicResponse: com.caij.puremusic.drive.model.SubPlayList getPlaylist()
com.tencent.bugly.proguard.aa: java.lang.String i()
com.caij.vip.WebRouteFragment: WebRouteFragment()
com.umeng.commonsdk.statistics.common.d: void a(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyTPE1: FrameBodyTPE1()
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: com.tencent.bugly.proguard.as c(com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler)
com.thegrizzlylabs.sardineandroid.model.Prop: void setGetcontentlanguage(java.lang.String)
com.umeng.commonsdk.statistics.proto.a: com.umeng.analytics.pro.av deepCopy()
com.google.android.material.bottomsheet.BottomSheetDialogFragment: void dismissWithAnimation(com.google.android.material.bottomsheet.BottomSheetBehavior,boolean)
org.jaudiotagger.tag.id3.ID3v1Tag: java.lang.String getFirstArtist()
com.caij.puremusic.MainModuleKt$roomModule$1$4: MainModuleKt$roomModule$1$4()
org.simpleframework.xml.core.Composite: void validateText(org.simpleframework.xml.stream.InputNode,org.simpleframework.xml.core.Schema)
org.jaudiotagger.tag.datatype.PartOfSet$PartOfSetValue: java.lang.String toString()
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
org.repackage.com.meizu.flyme.openidsdk.b: org.repackage.com.meizu.flyme.openidsdk.ValueData a(android.database.Cursor)
org.jaudiotagger.tag.asf.AsfTagTextField: java.lang.String getContent()
com.caij.puremusic.drive.model.SubPlayList$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
org.jaudiotagger.audio.iff.ChunkSummary: long getEndLocation()
org.jcodec.containers.mp4.boxes.ClipRegionBox: short getHeight()
com.umeng.analytics.pro.an: void y()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyEAL: FieldFrameBodyEAL(java.lang.String)
org.jaudiotagger.utils.tree.TreePath: TreePath()
com.alipay.mobilesecuritysdk.face.SecurityClientMobile: java.lang.String GetApdid(android.content.Context,java.util.Map)
com.caij.puremusic.drive.model.Propstat$Companion: Propstat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.caij.puremusic.db.model.SearchAlbumResultQueries: app.cash.sqldelight.Query getById(java.lang.String)
com.umeng.commonsdk.statistics.proto.a$c: a$c()
com.umeng.commonsdk.statistics.proto.d$d: d$d()
org.simpleframework.xml.core.TextListLabel: org.simpleframework.xml.core.Decorator getDecorator()
org.simpleframework.xml.core.InstantiationException: InstantiationException(java.lang.String,java.lang.Object[])
com.caij.puremusic.db.model.Album: long component5()
org.jaudiotagger.tag.id3.framebody.FrameBodyPRIV: void setupObjectList()
com.caij.puremusic.model.ArtworkInfo: ArtworkInfo(long,android.graphics.Bitmap)
org.simpleframework.xml.core.DefaultScanner: org.simpleframework.xml.core.Function getCommit()
com.caij.puremusic.network.model.LastFmAlbum$Album$Image: java.lang.String getText()
kotlinx.serialization.json.JsonElementSerializer$descriptor$1$2: JsonElementSerializer$descriptor$1$2()
org.jaudiotagger.tag.id3.framebody.FrameBodyTIME: FrameBodyTIME(java.nio.ByteBuffer,int)
org.jaudiotagger.tag.flac.FlacTag: FlacTag(org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag,java.util.List)
com.umeng.analytics.MobclickAgent: void onEvent(android.content.Context,java.lang.String)
org.jaudiotagger.tag.id3.ID3v23Tag: org.jaudiotagger.tag.id3.AbstractID3v2Frame createFrame(java.lang.String)
com.alipay.android.phone.mrpc.core.q: org.apache.http.client.methods.HttpUriRequest c()
com.caij.vip.AppGood: AppGood(android.os.Parcel)
com.tencent.mm.opensdk.modelmsg.WXVideoFileObject: int type()
org.simpleframework.xml.core.MethodScanner: void extract(org.simpleframework.xml.core.Detail,org.simpleframework.xml.DefaultType)
org.simpleframework.xml.core.LabelGroup: java.util.List getList()
org.jaudiotagger.tag.mp4.field.Mp4FieldType: org.jaudiotagger.tag.mp4.field.Mp4FieldType[] values()
org.simpleframework.xml.core.CacheLabel: java.lang.String toString()
org.jaudiotagger.tag.asf.AsfTag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.images.Artwork)
com.umeng.analytics.process.UMProcessDBDatasSender$ReplaceCallback: UMProcessDBDatasSender$ReplaceCallback(com.umeng.analytics.process.UMProcessDBDatasSender,com.umeng.analytics.process.UMProcessDBDatasSender$1)
androidx.fragment.app.Fragment: void onDestroyOptionsMenu()
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$getById$2: com.caij.puremusic.db.model.DriveFileDownUrlInfo invoke(java.lang.String,long,java.lang.String,long)
com.tencent.bugly.crashreport.BuglyLog: BuglyLog()
com.tencent.bugly.proguard.as: boolean a(com.tencent.bugly.crashreport.crash.CrashDetailBean,boolean)
org.jcodec.containers.mp4.boxes.AliasBox$ExtraField: AliasBox$ExtraField(short,int,byte[])
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
org.simpleframework.xml.core.GroupExtractor: org.simpleframework.xml.core.Label getText()
com.caij.puremusic.drive.model.AlbumItem: AlbumItem(java.lang.String,java.lang.String,java.lang.String,boolean,long,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List,java.lang.String)
org.jaudiotagger.tag.mp4.field.Mp4TagBinaryField: boolean isBinary()
org.simpleframework.xml.core.ClassScanner: org.simpleframework.xml.core.Signature getSignature()
com.caij.puremusic.db.model.Song: int getTrackNumber()
com.umeng.analytics.pro.bo: void b(byte)
org.simpleframework.xml.core.Model: boolean isAttribute(java.lang.String)
com.caij.puremusic.drive.model.SubsonicSearchResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyTPE4: java.lang.String getIdentifier()
org.jaudiotagger.tag.id3.ID3v24Frame: void createStructure()
com.google.android.material.textfield.TextInputLayout: int getMaxEms()
com.caij.puremusic.db.model.SongQueries$allSongs$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
org.jcodec.containers.mp4.boxes.TrakBox: long getEditedDuration(org.jcodec.containers.mp4.boxes.TrakBox)
org.simpleframework.xml.core.SignatureScanner: java.util.List union(java.lang.annotation.Annotation,int)
com.caij.puremusic.views.BaselineGridTextView: void setLineHeightMultiplierHint(float)
org.jaudiotagger.tag.id3.framebody.FrameBodyMCDI: FrameBodyMCDI(byte[])
org.jaudiotagger.tag.lyrics3.Lyrics3v2: boolean seek(java.io.RandomAccessFile)
com.caij.puremusic.drive.model.SubsonicSearchListResponse$Companion: kotlinx.serialization.KSerializer serializer()
org.jaudiotagger.audio.opus.OpusVorbisTagReader: byte[] readRawPacketData(java.io.RandomAccessFile)
com.afollestad.materialdialogs.color.view.SeekBarGroupLayout: SeekBarGroupLayout(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.audio.generic.GenericTag: byte[] access$000()
com.umeng.commonsdk.statistics.proto.c$c: void a(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
com.tencent.bugly.proguard.ap: java.util.Map b(android.os.Parcel)
com.google.android.material.bottomsheet.BottomSheetBehavior: androidx.core.view.accessibility.AccessibilityViewCommand createAccessibilityViewCommandForState(int)
org.koin.androidx.scope.ScopeFragment: ScopeFragment()
com.caij.puremusic.drive.model.MediaStream: java.lang.String toString()
org.simpleframework.xml.core.TextParameter: java.lang.String getName(org.simpleframework.xml.core.Context)
org.simpleframework.xml.core.TreeModel: java.util.Iterator iterator()
org.jaudiotagger.audio.asf.data.VideoStreamChunk: long getPictureWidth()
com.google.android.material.materialswitch.MaterialSwitch: MaterialSwitch(android.content.Context,android.util.AttributeSet)
com.umeng.commonsdk.UMConfigure: void deleteModuleTag(com.umeng.commonsdk.UMConfigure$BS_TYPE,java.lang.String)
com.umeng.analytics.filter.a: boolean matchHit(java.lang.String)
javax.xml.namespace.QName: javax.xml.namespace.QName valueOf(java.lang.String)
com.tencent.mm.opensdk.modelbiz.CreateChatroom$Req: int getType()
org.simpleframework.xml.core.ElementUnionParameter: java.lang.annotation.Annotation getAnnotation()
com.caij.puremusic.db.model.PlaylistEntityQueries$SearchPlaylistByNameQuery$execute$1: java.lang.Object invoke(java.lang.Object)
org.simpleframework.xml.core.PrimitiveList: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object)
com.umeng.analytics.pro.r$a: r$a()
com.umeng.commonsdk.statistics.common.MLog: void w(java.lang.String,java.lang.Object[])
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
com.tencent.mmkv.MMKV: boolean encodeBool(long,java.lang.String,boolean)
org.jcodec.containers.mp4.boxes.MovieBox: boolean isPureRefMovie()
com.umeng.vt.diff.Channel: void download()
com.umeng.commonsdk.UMConfigure$BS_TYPE: com.umeng.commonsdk.UMConfigure$BS_TYPE valueOf(java.lang.String)
com.caij.puremusic.drive.model.Part$Companion: Part$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.tencent.bugly.proguard.ad: ad()
org.jaudiotagger.audio.mp3.MP3File: org.jaudiotagger.tag.Tag getTagOrCreateDefault()
com.caij.puremusic.db.model.SongEntityQueries$SongsFromPlaylistQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.caij.puremusic.db.model.PlayCountEntity: long component2()
org.jcodec.containers.mp4.boxes.ChunkOffsets64Box: int estimateSize()
com.caij.puremusic.drive.model.SearchResult3$Companion: SearchResult3$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.umeng.commonsdk.utils.UMUtils: java.lang.String getUMId(android.content.Context)
org.jcodec.containers.mp4.boxes.MovieFragmentBox: org.jcodec.containers.mp4.boxes.MovieBox getMovie()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.util.List convertFrame(org.jaudiotagger.tag.id3.AbstractID3v2Frame)
com.thegrizzlylabs.sardineandroid.DavResource$DavProperties: DavResource$DavProperties(com.thegrizzlylabs.sardineandroid.DavResource,com.thegrizzlylabs.sardineandroid.model.Response)
com.caij.puremusic.db.model.SongEntity: com.caij.puremusic.db.model.SongEntity copy$default(com.caij.puremusic.db.model.SongEntity,long,long,long,int,java.lang.Object)
com.google.android.material.chip.Chip: float getCloseIconEndPadding()
com.caij.puremusic.db.model.HistoryEntityQueries$insert$2: void invoke(kotlin.jvm.functions.Function1)
com.tencent.bugly.crashreport.CrashReport: void setSessionIntervalMills(long)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: void setExtras(android.media.MediaDescription$Builder,android.os.Bundle)
com.caij.puremusic.drive.model.PlexArtistsResponse: void write$Self(com.caij.puremusic.drive.model.PlexArtistsResponse,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
org.jaudiotagger.audio.flac.FlacFileReader: org.jaudiotagger.tag.Tag getTag(java.nio.channels.FileChannel,java.lang.String)
org.jaudiotagger.audio.asf.data.EncodingChunk: void addString(java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyWXXX: java.util.List getUrlLinks()
org.simpleframework.xml.core.PrimitiveScanner: org.simpleframework.xml.core.Signature getSignature()
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdCountQuery: void addListener(app.cash.sqldelight.Query$Listener)
org.jaudiotagger.audio.mp3.MP3File: boolean hasID3v1Tag()
com.tencent.mm.opensdk.openapi.MMSharedPreferences$REditor: void apply()
com.caij.puremusic.db.model.SongEntityQueries: app.cash.sqldelight.Query checkSongPlaylistExists(long,long)
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean registerApp(java.lang.String)
org.jaudiotagger.utils.tree.TreeNode: boolean isLeaf()
com.umeng.commonsdk.statistics.proto.d$c: void b(com.umeng.analytics.pro.bu,com.umeng.commonsdk.statistics.proto.d)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype[] values()
org.jaudiotagger.tag.id3.framebody.FrameBodySYTC: java.util.List getTimestamps()
org.slf4j.event.Level: org.slf4j.event.Level[] values()
androidx.lifecycle.ProcessLifecycleInitializer: ProcessLifecycleInitializer()
androidx.fragment.app.Fragment: void startActivity(android.content.Intent)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
com.umeng.analytics.pro.u: void b(android.content.Context)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.afollestad.materialdialogs.color.view.ObservableEditText: ObservableEditText(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.tag.id3.ID3v22Tag: void createStructure()
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: void write(java.io.ByteArrayOutputStream)
com.google.android.material.bottomsheet.BottomSheetDragHandleView: boolean lambda$onBottomSheetStateChanged$0(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments)
com.afollestad.materialdialogs.internal.main.DialogScrollView: DialogScrollView(android.content.Context,android.util.AttributeSet)
com.tencent.mm.opensdk.modelbiz.HandleScanResult$Req: HandleScanResult$Req()
com.umeng.commonsdk.statistics.idtracking.Envelope: void setEncrypt(boolean)
com.umeng.commonsdk.utils.UMUtils: java.lang.String getNetworkOperatorName(android.content.Context)
org.simpleframework.xml.strategy.Contract: Contract(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.caij.puremusic.model.PlaylistWrapper: boolean equals(java.lang.Object)
org.simpleframework.xml.convert.RegistryBinder: org.simpleframework.xml.convert.Converter lookup(java.lang.Class)
com.caij.puremusic.db.model.ArtistQueries$artistByName$2: ArtistQueries$artistByName$2()
com.caij.puremusic.db.model.SongQueries$SongsByArtistQuery: void addListener(app.cash.sqldelight.Query$Listener)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
org.jaudiotagger.tag.datatype.StringNullTerminated: java.nio.charset.Charset getTextEncodingCharSet()
com.umeng.commonsdk.debug.D: D()
com.umeng.commonsdk.statistics.internal.StatTracer$a: StatTracer$a()
androidx.appcompat.widget.AppCompatTextView: void setEmojiCompatEnabled(boolean)
org.simpleframework.xml.core.Variable: boolean isText()
org.jaudiotagger.tag.id3.Id3FieldType: Id3FieldType(java.lang.String,int)
androidx.fragment.app.Fragment: java.lang.Object requireHost()
com.caij.puremusic.drive.model.EmbyAlbumsResponse: com.caij.puremusic.drive.model.EmbyAlbumsResponse copy$default(com.caij.puremusic.drive.model.EmbyAlbumsResponse,java.util.List,int,int,int,java.lang.Object)
com.umeng.analytics.pro.a: java.lang.String b(java.lang.String)
org.simpleframework.xml.stream.OutputAttribute: org.simpleframework.xml.stream.OutputNode getChild(java.lang.String)
org.jaudiotagger.tag.InvalidFrameIdentifierException: InvalidFrameIdentifierException()
org.simpleframework.xml.core.MethodContact: org.simpleframework.xml.core.MethodPart getRead()
org.simpleframework.xml.core.Persister: boolean validate(java.lang.Class,org.simpleframework.xml.stream.InputNode)
androidx.appcompat.widget.AppCompatTextView: void setAllCaps(boolean)
com.thegrizzlylabs.sardineandroid.model.Response: java.lang.String getStatus()
com.caij.puremusic.drive.model.ArtistItem: ArtistItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,java.lang.Integer,com.caij.puremusic.drive.model.ImageTags,java.util.List,java.lang.String)
com.umeng.analytics.pro.i: void a(java.lang.String,org.json.JSONObject,android.database.sqlite.SQLiteDatabase)
io.ktor.client.HttpClientConfig$install$1: HttpClientConfig$install$1()
org.jaudiotagger.tag.TagField: boolean isBinary()
com.caij.puremusic.drive.model.OneDriveFileResponse: java.lang.String component1()
com.caij.puremusic.drive.model.DropboxDriveItem$Companion: DropboxDriveItem$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.caij.puremusic.db.model.ServerArtistCover: java.lang.String component1()
com.caij.puremusic.db.model.SearchAlbumResult: boolean equals(java.lang.Object)
com.tencent.bugly.proguard.ah: void a(boolean,java.lang.String)
com.caij.puremusic.drive.model.AlbumResponse$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.yalantis.ucrop.view.CropImageView: void setTargetAspectRatio(float)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
org.jaudiotagger.audio.AudioFileIO: void write(org.jaudiotagger.audio.AudioFile)
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean sendFinderOpenEvent(android.content.Context,com.tencent.mm.opensdk.modelbase.BaseReq)
com.umeng.commonsdk.framework.UMFrUtils$2: int a(java.io.File,java.io.File)
com.google.android.material.navigation.NavigationBarItemView: int getSuggestedIconHeight()
com.umeng.analytics.pro.ai$a: android.os.IBinder a()
com.umeng.analytics.pro.bf$b: com.umeng.analytics.pro.bf$a a()
com.umeng.analytics.pro.aw: int a(byte[],byte[])
org.simpleframework.xml.stream.PullReader$End: PullReader$End(org.simpleframework.xml.stream.PullReader$1)
org.jaudiotagger.tag.id3.framebody.FrameBodyMVIN: java.lang.String getIdentifier()
com.caij.puremusic.db.model.PlaylistEntityQueries$GetPlaylistEntityByIdQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
com.caij.puremusic.model.Data: boolean component11()
androidx.core.view.ViewCompat$Api16Impl: boolean hasOverlappingRendering(android.view.View)
com.caij.puremusic.drive.model.OneDriveFileResponse$Companion: OneDriveFileResponse$Companion()
com.umeng.commonsdk.UMConfigure$4: UMConfigure$4(android.content.Context)
com.umeng.commonsdk.statistics.proto.Response: int getResp_code()
com.umeng.analytics.pro.a$a$a: java.lang.String b(java.lang.String)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
app.cash.sqldelight.ExecutableQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
com.google.android.material.navigationrail.NavigationRailView: NavigationRailView(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.db.model.SongQueries$GetArtistSongCountQuery: java.lang.String getArtistId__()
com.caij.puremusic.db.model.SongQueries$songByPath$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.umeng.commonsdk.statistics.internal.c$1: void onImprintValueChanged(java.lang.String,java.lang.String)
org.jaudiotagger.audio.generic.GenericTag: GenericTag()
com.caij.puremusic.db.model.SongQueries$songsByAlum$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
org.jaudiotagger.tag.datatype.EventTimingCode: byte[] writeByteArray()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspot(android.graphics.drawable.Drawable,float,float)
org.simpleframework.xml.core.ElementMapLabel: org.simpleframework.xml.core.Contact getContact()
org.simpleframework.xml.core.GetPart: java.lang.String getName()
com.caij.puremusic.MainModuleKt$autoModule$1: MainModuleKt$autoModule$1()
com.caij.puremusic.drive.model.PlexSongsResponse: com.caij.puremusic.drive.model.PlexSongsResponse copy$default(com.caij.puremusic.drive.model.PlexSongsResponse,com.caij.puremusic.drive.model.MediaContainer,int,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(int)
com.umeng.commonsdk.internal.utils.f: java.lang.String a(android.content.Context)
com.caij.puremusic.drive.model.SubsonicPlaylist: java.lang.String component1()
org.simpleframework.xml.core.Composite: void readSection(org.simpleframework.xml.stream.InputNode,java.lang.Object,org.simpleframework.xml.core.Section)
org.jaudiotagger.tag.datatype.TextEncodedStringNullTerminated: byte[] writeByteArray()
org.jaudiotagger.tag.id3.valuepair.StandardIPLSKey: org.jaudiotagger.tag.id3.valuepair.StandardIPLSKey get(java.lang.String)
com.umeng.analytics.CoreProtocol$a: CoreProtocol$a()
org.jcodec.containers.mp4.boxes.TrakBox: java.util.List getEdits()
com.thegrizzlylabs.sardineandroid.DavQuota: long getQuotaAvailableBytes()
com.thegrizzlylabs.sardineandroid.DavAcl: java.lang.String getGroup()
com.alipay.android.phone.mrpc.core.n: n()
com.umeng.commonsdk.vchannel.b: java.lang.String a()
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior()
com.caij.puremusic.network.model.Artist: void setHref(java.lang.String)
org.simpleframework.xml.core.TextLabel: java.lang.annotation.Annotation getAnnotation()
com.tencent.bugly.proguard.aa: void e(java.lang.String)
com.umeng.analytics.process.UMProcessDBDatasSender$ReplaceCallback: boolean onFileLock(java.lang.String,java.lang.Object)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
org.jcodec.containers.mp4.boxes.SoundMediaHeaderBox: java.lang.String fourcc()
com.caij.puremusic.drive.model.Auth2Token$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.db.model.SongQueries$SongsByNameAlbumQuery: java.lang.String getValue_()
com.tencent.mm.opensdk.modelbiz.CreateChatroom: CreateChatroom()
com.caij.puremusic.drive.model.ArtistItem: java.lang.String getSortName()
com.caij.puremusic.drive.model.Multistatus$Companion: Multistatus$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.jaudiotagger.audio.wav.WavSaveOptions: org.jaudiotagger.audio.wav.WavSaveOptions[] values()
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setShadowResourceRight(int)
com.caij.puremusic.db.model.SongQueries$songsByNameAlbum$1: java.lang.Object invoke(java.lang.Object)
org.simpleframework.xml.core.ObjectInstance: ObjectInstance(org.simpleframework.xml.core.Context,org.simpleframework.xml.strategy.Value)
androidx.gridlayout.widget.GridLayout: boolean getUseDefaultMargins()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: BaseTransientBottomBar$SnackbarBaseLayout(android.content.Context,android.util.AttributeSet)
org.simpleframework.xml.core.Model: void registerText(org.simpleframework.xml.core.Label)
org.jaudiotagger.audio.mp3.MP3AudioHeader: boolean isVariableBitRate()
org.jaudiotagger.tag.id3.framebody.FrameBodyENCR: FrameBodyENCR()
org.simpleframework.xml.core.AttributeLabel: AttributeLabel(org.simpleframework.xml.core.Contact,org.simpleframework.xml.Attribute,org.simpleframework.xml.stream.Format)
org.simpleframework.xml.stream.InputStack: boolean isRelevant(org.simpleframework.xml.stream.InputNode)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.caij.puremusic.drive.model.PlexLoginResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
org.simpleframework.xml.convert.Converter: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object)
com.caij.puremusic.db.model.ServerLyricsQueries$GetByIdQuery$execute$1: ServerLyricsQueries$GetByIdQuery$execute$1(com.caij.puremusic.db.model.ServerLyricsQueries$GetByIdQuery)
androidx.core.app.NavUtils$Api16Impl: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
com.tencent.mm.opensdk.modelmsg.WXWebpageObject: void unserialize(android.os.Bundle)
com.tencent.bugly.proguard.al: boolean c(java.lang.String,java.lang.Object[])
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: java.lang.String getFirst(org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey)
org.jcodec.containers.mp4.boxes.TrakBox: org.jcodec.containers.mp4.boxes.ChunkOffsetsBox getStco()
org.jaudiotagger.tag.id3.framebody.AbstractID3v2FrameBody: AbstractID3v2FrameBody(java.nio.ByteBuffer,int)
com.tencent.bugly.crashreport.BuglyHintException: BuglyHintException(java.lang.String)
com.tencent.bugly.proguard.i: com.tencent.bugly.proguard.i a(float[],java.lang.String)
com.tencent.bugly.proguard.l: void a(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyCRM: void getOwner(java.lang.String)
androidx.fragment.app.Fragment: void onViewStateRestored(android.os.Bundle)
androidx.fragment.app.Fragment: int getMinimumMaxLifecycleState()
com.caij.puremusic.db.model.SongQueries$songsByTitle$2: SongQueries$songsByTitle$2()
com.umeng.commonsdk.statistics.proto.b$c: b$c(com.umeng.commonsdk.statistics.proto.b$1)
com.google.android.material.slider.Slider: float getValueTo()
org.jaudiotagger.tag.id3.framebody.FrameBodyTRCK: FrameBodyTRCK(java.nio.ByteBuffer,int)
com.caij.puremusic.db.model.ServerAudioFormatQueries$deleteById$2: void invoke(kotlin.jvm.functions.Function1)
org.json.alipay.b$a: b$a()
com.caij.puremusic.fragments.player.fit.FitFragment: FitFragment()
com.caij.puremusic.network.model.Artist: java.lang.String toString()
org.jaudiotagger.audio.generic.AudioFileWriter2: void write(org.jaudiotagger.audio.AudioFile)
com.alipay.apmobilesecuritysdk.e.h: void e(android.content.Context,java.lang.String)
com.tencent.bugly.proguard.ap: java.lang.String c(byte[])
org.simpleframework.xml.util.Match: java.lang.String getPattern()
org.simpleframework.xml.strategy.VisitorStrategy: boolean write(org.simpleframework.xml.strategy.Type,java.lang.Object,org.simpleframework.xml.stream.NodeMap,java.util.Map)
org.simpleframework.xml.strategy.Visitor: void read(org.simpleframework.xml.strategy.Type,org.simpleframework.xml.stream.NodeMap)
org.simpleframework.xml.core.CompositeListUnion: boolean validate(org.simpleframework.xml.stream.InputNode)
org.simpleframework.xml.core.ScannerFactory: ScannerFactory(org.simpleframework.xml.core.Support)
androidx.fragment.app.FragmentContainerView: FragmentContainerView(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.drive.model.Collection$Companion: Collection$Companion()
org.jaudiotagger.tag.TagOptionSingleton: boolean isLyrics3Save()
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: java.lang.String getFieldName()
com.heinrichreimersoftware.materialintro.view.InkPageIndicator: android.graphics.Path getRetreatingJoinPath()
com.tencent.bugly.proguard.as: void a(com.tencent.bugly.crashreport.crash.CrashDetailBean,java.util.List)
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedCallback newOnBackInvokedCallback(java.lang.Runnable)
com.google.android.material.bottomappbar.BottomAppBar: int getRightInset()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageResource(int)
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
com.caij.puremusic.db.model.SongEntityQueries$SongsFromPlaylistQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
org.simpleframework.xml.core.ClassScanner: void method(org.simpleframework.xml.core.MethodDetail)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)
org.jaudiotagger.utils.DirectByteBufferUtils$AndroidReleaseStrategy: org.jaudiotagger.utils.DirectByteBufferUtils$ReleaseStrategy access$200()
androidx.lifecycle.SavedStateHandleSupport$savedStateHandlesVM$1$1: SavedStateHandleSupport$savedStateHandlesVM$1$1()
com.caij.puremusic.network.model.LastFmArtist$Artist$Bio: void setContent(java.lang.String)
com.google.android.material.search.SearchView: int getStatusBarHeight()
com.caij.puremusic.drive.model.JellyfinFolder: JellyfinFolder(java.lang.String,java.lang.String,java.lang.String)
org.jaudiotagger.audio.asf.io.CountingOutputstream: void close()
org.jcodec.containers.mp4.boxes.TrackHeaderBox: void doWrite(java.nio.ByteBuffer)
com.alipay.android.phone.mrpc.core.b: com.alipay.android.phone.mrpc.core.b a(java.lang.String)
com.tencent.mm.opensdk.modelmsg.WXMiniProgramObject: int type()
org.jaudiotagger.audio.wav.chunk.WavInfoChunk: WavInfoChunk(org.jaudiotagger.tag.wav.WavTag,java.lang.String)
com.caij.puremusic.model.DriveFileParcelable: java.lang.String component1()
io.ktor.websocket.FrameType: io.ktor.websocket.FrameType[] values()
com.caij.puremusic.db.model.PlaybackSongQueries$clear$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.audio.asf.io.LanguageListReader: org.jaudiotagger.audio.asf.data.Chunk read(org.jaudiotagger.audio.asf.data.GUID,java.io.InputStream,long)
org.jaudiotagger.tag.id3.valuepair.EventTimingTypes: org.jaudiotagger.tag.id3.valuepair.EventTimingTypes getInstanceOf()
org.simpleframework.xml.core.CompositeInlineMap: boolean validate(org.simpleframework.xml.stream.InputNode)
com.caij.puremusic.db.model.FolderQueries$SelectByIdQuery: long getId()
com.umeng.analytics.pro.o: o()
com.umeng.commonsdk.statistics.common.DataHelper: java.lang.String bytes2Hex(byte[])
com.google.common.hash.Hashing$ChecksumType: com.google.common.hash.Hashing$ChecksumType valueOf(java.lang.String)
androidx.appcompat.app.AppCompatDialog: void invalidateOptionsMenu()
androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface)
org.jaudiotagger.tag.datatype.MultipleTextEncodedStringNullTerminated$Values: MultipleTextEncodedStringNullTerminated$Values()
org.jaudiotagger.tag.images.StandardImageHandler: byte[] writeImageAsPng(java.awt.image.BufferedImage)
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
com.google.common.io.Files$FilePredicate: com.google.common.io.Files$FilePredicate valueOf(java.lang.String)
com.caij.puremusic.db.model.AlbumQueries$AlbumQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.xmlpull.v1.XmlPullParser: java.lang.String getText()
org.jaudiotagger.audio.iff.ChunkHeader: void setSize(long)
com.google.common.collect.Iterators$EmptyModifiableIterator: com.google.common.collect.Iterators$EmptyModifiableIterator[] $values()
org.jaudiotagger.tag.id3.framebody.FrameBodyUSER: FrameBodyUSER(byte,java.lang.String,java.lang.String)
com.umeng.analytics.process.UMProcessDBHelper: android.content.Context access$400(com.umeng.analytics.process.UMProcessDBHelper)
com.caij.puremusic.drive.model.BaiduFileResponse$Companion: kotlinx.serialization.KSerializer serializer()
org.simpleframework.xml.stream.OutputElement: java.lang.String getName()
com.caij.puremusic.drive.model.PlayLists: boolean equals(java.lang.Object)
cn.lyric.getter.api.tools.EventTools: EventTools()
com.yalantis.ucrop.view.TransformImageView: java.lang.String getImageInputPath()
org.simpleframework.xml.transform.LongTransform: java.lang.String write(java.lang.Object)
com.caij.puremusic.db.model.HistoryEntityQueries$getById$2: HistoryEntityQueries$getById$2()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
org.jaudiotagger.audio.asf.data.MetadataContainer: boolean isEmpty()
com.tencent.bugly.proguard.k: void a(byte)
com.umeng.commonsdk.stateless.UMSLEnvelopeBuild: org.json.JSONObject buildSLBaseHeader(android.content.Context)
androidx.core.view.MenuCompat$Api28Impl: void setGroupDividerEnabled(android.view.Menu,boolean)
org.jaudiotagger.tag.id3.framebody.FrameBodyDeprecated: FrameBodyDeprecated(org.jaudiotagger.tag.id3.framebody.AbstractID3v2FrameBody)
org.simpleframework.xml.core.Composite: void validateAttribute(org.simpleframework.xml.stream.InputNode,org.simpleframework.xml.core.Section,org.simpleframework.xml.core.LabelMap)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] $values()
org.simpleframework.xml.stream.DocumentReader$End: boolean isEnd()
org.jaudiotagger.tag.EmptyFrameException: EmptyFrameException(java.lang.String,java.lang.Throwable)
com.umeng.commonsdk.statistics.noise.ImLatent: com.umeng.commonsdk.statistics.noise.ImLatent getService(android.content.Context,com.umeng.commonsdk.statistics.internal.StatTracer)
org.jaudiotagger.tag.asf.AsfTagField: void isBinary(boolean)
org.simpleframework.xml.core.Reflector: java.lang.Class getDependent(java.lang.reflect.Field)
com.caij.puremusic.db.model.SongQueries$SongsByAlumIdQuery$execute$1: java.lang.Object invoke(java.lang.Object)
org.simpleframework.xml.core.VersionLabel: java.lang.String toString()
org.jaudiotagger.audio.aiff.AiffAudioHeader: java.lang.String getAuthor()
org.simpleframework.xml.core.TextListLabel: boolean isRequired()
com.umeng.commonsdk.internal.c: void e()
com.caij.puremusic.drive.model.Directory: com.caij.puremusic.drive.model.Directory copy$default(com.caij.puremusic.drive.model.Directory,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()
com.caij.puremusic.drive.model.SongItem: java.lang.String component12()
com.tencent.bugly.proguard.ai: long a(int)
org.jaudiotagger.tag.id3.ID3v1Tag: void createStructure()
org.jaudiotagger.tag.id3.reference.MediaMonkeyPlayerRating: int convertRatingFromFiveStarScale(int)
com.caij.puremusic.drive.model.Metadata: boolean equals(java.lang.Object)
com.caij.puremusic.db.model.PlayCountEntityQueries: void update(long,long,long)
org.jaudiotagger.tag.images.AndroidArtwork: void setDescription(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.activity.ComponentDialog: void onCreate(android.os.Bundle)
org.simpleframework.xml.core.CompositeValue: CompositeValue(org.simpleframework.xml.core.Context,org.simpleframework.xml.core.Entry,org.simpleframework.xml.strategy.Type)
com.thegrizzlylabs.sardineandroid.Sardine: java.util.List getPrincipalCollectionSet(java.lang.String)
com.umeng.analytics.pro.bu: byte u()
com.caij.puremusic.db.model.SongQueries$songsByAlumId$2: SongQueries$songsByAlumId$2()
com.tencent.mm.opensdk.modelbiz.OpenWebview$Req: void fromBundle(android.os.Bundle)
androidx.fragment.app.Fragment: boolean getUserVisibleHint()
androidx.fragment.app.DialogFragment: void onActivityCreated(android.os.Bundle)
org.jaudiotagger.tag.datatype.TextEncodedStringSizeTerminated: java.nio.ByteBuffer writeStringUTF16LEBOM(java.lang.String,int,int)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
org.repackage.com.meizu.flyme.openidsdk.OpenIdHelper: java.lang.String c(android.content.Context)
com.alipay.tscenter.biz.rpc.vkeydfp.request.AppListCmdRequest: AppListCmdRequest()
com.caij.puremusic.db.model.AlbumQueries: app.cash.sqldelight.Query album(long,kotlin.jvm.functions.Function11)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
org.jaudiotagger.tag.InvalidDataTypeException: InvalidDataTypeException(java.lang.String,java.lang.Throwable)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSST: java.lang.String getIdentifier()
com.caij.puremusic.db.model.Song: long component17()
com.caij.puremusic.drive.model.OneDriveFileResponse$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: java.util.List getFields(org.jaudiotagger.tag.FieldKey)
org.simpleframework.xml.core.Group: java.lang.String toString()
javax.xml.namespace.QName: java.lang.String getNamespaceURI()
com.tencent.bugly.crashreport.CrashReport: void initCrashReport(android.content.Context)
com.umeng.commonsdk.UMConfigureImpl: void a(android.content.Context)
org.jaudiotagger.audio.SupportedFileFormat: org.jaudiotagger.audio.SupportedFileFormat fromExtension(java.lang.String)
androidx.core.widget.TextViewCompat$Api28Impl: android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView)
org.jcodec.containers.mp4.boxes.TrunBox: boolean isSampleFlagsAvailable()
com.umeng.commonsdk.statistics.common.MLog: void e(java.lang.String,java.lang.Throwable)
org.jaudiotagger.audio.ogg.VorbisVersion: org.jaudiotagger.audio.ogg.VorbisVersion valueOf(java.lang.String)
com.umeng.analytics.process.c$a: void b()
com.google.android.material.bottomsheet.BottomSheetDialogFragment: void access$100(com.google.android.material.bottomsheet.BottomSheetDialogFragment)
com.caij.puremusic.db.model.SongEntityQueries$songsFromPlaylist$2: SongEntityQueries$songsFromPlaylist$2()
com.caij.puremusic.drive.model.BaiduFileResponse$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.umeng.commonsdk.utils.UMUtils: boolean checkResource(android.content.Context,java.lang.String,java.lang.String)
com.caij.puremusic.drive.model.BaiduFileResponse$$serializer: BaiduFileResponse$$serializer()
com.caij.puremusic.network.model.LastFmAlbum$Album$Wiki: java.lang.String getContent()
com.google.android.material.navigation.NavigationBarView: int getItemTextAppearanceActive()
com.caij.puremusic.drive.model.OneDriveFileResponse$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.caij.puremusic.db.model.ServerArtistCoverQueries$GetByIdQuery: void addListener(app.cash.sqldelight.Query$Listener)
org.jaudiotagger.tag.id3.framebody.FrameBodyPIC: void write(java.io.ByteArrayOutputStream)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterOverflowTextColor()
com.google.common.hash.LittleEndianByteArray$JavaLittleEndianBytes: com.google.common.hash.LittleEndianByteArray$JavaLittleEndianBytes[] values()
com.umeng.commonsdk.statistics.common.MLog: void e(java.util.Locale,java.lang.String,java.lang.Object[])
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
androidx.constraintlayout.widget.ConstraintLayout: void setMinHeight(int)
org.jcodec.containers.mp4.boxes.EditListBox: int estimateSize()
com.tencent.mm.opensdk.modelmsg.WXAppLaunchData$Builder: WXAppLaunchData$Builder()
com.caij.puremusic.db.model.SongEntityQueries$songsFromPlaylist$1: SongEntityQueries$songsFromPlaylist$1(kotlin.jvm.functions.Function3)
org.jaudiotagger.audio.mp4.Chunk: void setStartTv(long)
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType valueOf(java.lang.String)
com.thegrizzlylabs.sardineandroid.util.EntityWithAnyElementConverter: void skipChildrenOfNode(org.simpleframework.xml.stream.InputNode)
com.tencent.mm.opensdk.modelbiz.HandleScanResult$Resp: void toBundle(android.os.Bundle)
org.jcodec.containers.mp4.boxes.HandlerBox: void parse(java.nio.ByteBuffer)
org.jcodec.containers.mp4.boxes.ColorExtension: short getPrimariesIndex()
org.json.alipay.c: org.json.alipay.JSONException a(java.lang.String)
org.simpleframework.xml.stream.OutputDocument: java.lang.String getReference()
org.jaudiotagger.tag.id3.valuepair.ImageFormats: ImageFormats()
org.jaudiotagger.utils.tree.TreePath: java.lang.Object getPathComponent(int)
com.tencent.mm.opensdk.modelbiz.HandleScanResult$Resp: int getType()
org.jaudiotagger.tag.mp4.Mp4FieldKey: Mp4FieldKey(java.lang.String,int,java.lang.String,org.jaudiotagger.tag.mp4.Mp4TagFieldSubType,org.jaudiotagger.tag.mp4.field.Mp4FieldType)
com.umeng.analytics.pro.bn: void q()
org.jaudiotagger.audio.generic.GenericAudioHeader: void setBitsPerSample(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyWPAY: java.lang.String getIdentifier()
org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Class,java.io.File)
org.jaudiotagger.audio.generic.Utils: byte[] getSizeLEInt32(int)
com.caij.puremusic.drive.model.OneDriveFolder$Companion: OneDriveFolder$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.jaudiotagger.audio.generic.ModificationHandler: void vetoThrown(org.jaudiotagger.audio.generic.AudioFileModificationListener,org.jaudiotagger.audio.AudioFile,org.jaudiotagger.audio.exceptions.ModifyVetoException)
com.caij.puremusic.drive.model.PlayListsResponse$Companion: kotlinx.serialization.KSerializer serializer()
org.jaudiotagger.tag.id3.framebody.FrameBodyTIPL: FrameBodyTIPL(byte,java.lang.String)
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgram: WXLaunchMiniProgram()
com.caij.puremusic.drive.model.Type$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.drive.model.MediaStream$Companion: MediaStream$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.repackage.com.meizu.flyme.openidsdk.OpenIdHelper: boolean a()
org.jaudiotagger.tag.id3.framebody.FrameBodyTFLT: FrameBodyTFLT(byte,java.lang.String)
com.thegrizzlylabs.sardineandroid.DavResource: com.thegrizzlylabs.sardineandroid.model.Lockdiscovery access$900(com.thegrizzlylabs.sardineandroid.DavResource,com.thegrizzlylabs.sardineandroid.model.Response)
org.simpleframework.xml.core.Session: boolean containsValue(java.lang.Object)
org.jcodec.containers.mp4.boxes.SegmentTypeBox: SegmentTypeBox(org.jcodec.containers.mp4.boxes.Header)
org.simpleframework.xml.core.Introspector: java.lang.String getName(java.lang.Class)
com.caij.puremusic.db.model.ServerAudioFormatQueries: app.cash.sqldelight.Query getById(long,kotlin.jvm.functions.Function5)
org.jaudiotagger.tag.id3.framebody.FrameBodyTYER: FrameBodyTYER(org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC)
org.jcodec.containers.mp4.boxes.UrlBox: java.lang.String fourcc()
org.jaudiotagger.audio.iff.ChunkSummary: java.lang.String getChunkId()
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCheckedIconTint()
org.simpleframework.xml.transform.IntegerTransform: java.lang.Integer read(java.lang.String)
com.umeng.commonsdk.framework.UMFrUtils: java.lang.String getProcessName(int)
com.caij.puremusic.db.model.SongQueries$FirstSongByAlbumIdQuery$execute$1: java.lang.Object invoke(java.lang.Object)
com.tencent.bugly.proguard.bl: void a(com.tencent.bugly.proguard.l)
org.simpleframework.xml.core.Detail: org.simpleframework.xml.NamespaceList getNamespaceList()
com.umeng.commonsdk.statistics.proto.d: void c(boolean)
org.jaudiotagger.audio.asf.data.ContentDescription: ContentDescription()
com.umeng.commonsdk.UMConfigure: void setModuleTag(com.umeng.commonsdk.UMConfigure$BS_TYPE,java.lang.String,java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyUnsupported: void setupObjectList()
com.caij.puremusic.drive.model.PlexUser: void write$Self(com.caij.puremusic.drive.model.PlexUser,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.umeng.commonsdk.framework.UMEnvelopeBuild: long maxDataSpace(android.content.Context)
org.simpleframework.xml.core.Expression: java.lang.String toString()
com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean)
com.thegrizzlylabs.sardineandroid.model.Activelock: com.thegrizzlylabs.sardineandroid.model.Lockscope getLockscope()
org.simpleframework.xml.core.ClassScanner: org.simpleframework.xml.core.Function getReplace()
com.umeng.commonsdk.framework.UMLogDataProtocol: org.json.JSONObject setupReportData(long)
org.jaudiotagger.utils.tree.EventListenerList: java.util.EventListener[] getListeners(java.lang.Class)
com.alipay.android.phone.mrpc.core.b: boolean b(org.apache.http.client.methods.HttpUriRequest)
com.thegrizzlylabs.sardineandroid.impl.handler.MultiStatusResponseHandler: com.thegrizzlylabs.sardineandroid.model.Multistatus handleResponse(okhttp3.Response)
org.jaudiotagger.audio.mp3.MP3File: void readLyrics3Tag(java.io.File,java.io.RandomAccessFile,int)
org.simpleframework.xml.core.Parameter: boolean isPrimitive()
org.jaudiotagger.audio.asf.data.EncryptionChunk: void setKeyID(java.lang.String)
com.thegrizzlylabs.sardineandroid.model.Acl: void setAce(java.util.List)
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: boolean isHoursOnly()
org.jaudiotagger.tag.datatype.Lyrics3Image: Lyrics3Image(org.jaudiotagger.tag.datatype.Lyrics3Image)
com.google.common.io.Files$FilePredicate$1: boolean apply(java.io.File)
com.caij.puremusic.drive.model.PlayListItem: java.lang.String getType()
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
com.caij.puremusic.db.model.ServerSongCoverQueries$clear$1: void invoke(kotlin.jvm.functions.Function1)
com.caij.puremusic.fragments.other.MiniPlayerFragment: MiniPlayerFragment()
com.umeng.commonsdk.statistics.proto.b$c: void b(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String getAlbum()
org.jcodec.containers.mp4.boxes.GenericMediaInfoBox: java.lang.String fourcc()
com.caij.puremusic.drive.model.PlexLoginResponse$Companion: PlexLoginResponse$Companion()
com.tencent.mm.opensdk.openapi.IWXAPI: void setLogImpl(com.tencent.mm.opensdk.utils.ILog)
org.simpleframework.xml.core.ModelList: void register(org.simpleframework.xml.core.Model)
androidx.core.view.ViewCompat$Api16Impl: int getMinimumWidth(android.view.View)
androidx.constraintlayout.widget.ConstraintHelper: int[] getReferencedIds()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
com.caij.puremusic.drive.model.WebDAVToken$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.umeng.commonsdk.statistics.noise.ABTest: int getTestInterval()
com.caij.puremusic.views.insets.InsetsConstraintLayout: InsetsConstraintLayout(android.content.Context,android.util.AttributeSet)
io.ktor.utils.io.pool.DefaultPool$Companion$Top$1: DefaultPool$Companion$Top$1()
org.simpleframework.xml.core.Session: Session(boolean)
com.google.android.material.navigation.NavigationBarItemView: int getItemPosition()
org.jaudiotagger.tag.id3.framebody.FrameBodyTEXT: FrameBodyTEXT(org.jaudiotagger.tag.id3.framebody.FrameBodyTEXT)
org.simpleframework.xml.convert.RegistryStrategy: org.simpleframework.xml.convert.Converter lookup(org.simpleframework.xml.strategy.Type,java.lang.Object)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundResource(int)
org.simpleframework.xml.stream.NodeWriter: void writeStart(org.simpleframework.xml.stream.OutputNode)
com.thegrizzlylabs.sardineandroid.model.Response: void setResponsedescription(java.lang.String)
org.jaudiotagger.tag.id3.AbstractTagFrameBody: boolean isSubsetOf(java.lang.Object)
com.google.common.collect.MapMakerInternalMap$Strength$2: MapMakerInternalMap$Strength$2(java.lang.String,int)
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int getEmphasis()
com.caij.puremusic.db.model.ServerAudioFormatQueries: void deleteById(long)
org.simpleframework.xml.core.PrimitiveArray: PrimitiveArray(org.simpleframework.xml.core.Context,org.simpleframework.xml.strategy.Type,org.simpleframework.xml.strategy.Type,java.lang.String)
com.caij.puremusic.drive.model.SubsonicResponse: com.caij.puremusic.drive.model.SubsonicResponse copy(java.lang.String,java.lang.String,com.caij.puremusic.drive.model.AlbumList)
org.jaudiotagger.tag.asf.AsfTag: java.util.Iterator getAsfFields()
org.jaudiotagger.tag.id3.ID3v22Tag: java.nio.ByteBuffer writeHeaderToBuffer(int,int)
com.caij.puremusic.drive.model.SubsonicSearchResponse: SubsonicSearchResponse(int,java.lang.String,java.lang.String,com.caij.puremusic.drive.model.SearchResult3,kotlinx.serialization.internal.SerializationConstructorMarker)
androidx.core.os.TraceCompat$Api18Impl: void beginSection(java.lang.String)
com.umeng.analytics.pro.an: com.umeng.analytics.pro.an b(int)
org.jcodec.containers.mp4.boxes.CleanApertureExtension: void parse(java.nio.ByteBuffer)
com.caij.puremusic.drive.model.PlayLists: java.lang.String toString()
androidx.media.AudioAttributesImplBase: AudioAttributesImplBase()
com.tencent.mm.opensdk.modelbiz.WXChannelOpenProfile$Resp: boolean checkArgs()
com.alipay.apmobilesecuritysdk.e.f: java.lang.String d()
org.jaudiotagger.audio.flac.FlacAudioHeader: void setMd5(java.lang.String)
com.tencent.mm.opensdk.modelbiz.CreateChatroom$Req: void toBundle(android.os.Bundle)
com.caij.puremusic.db.model.SongEntityQueries$GetPlaylistLastAddSongQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.caij.puremusic.drive.model.Prop$Companion: Prop$Companion()
org.jaudiotagger.tag.datatype.AbstractDataType: org.jaudiotagger.tag.id3.AbstractTagFrameBody getBody()
com.caij.puremusic.db.model.ArtistQueries$ArtistByNameQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.shape.MaterialShapeDrawable access$200(com.google.android.material.bottomsheet.BottomSheetBehavior)
androidx.preference.PreferenceCategory: PreferenceCategory(android.content.Context,android.util.AttributeSet,int)
org.jaudiotagger.tag.TagOptionSingleton: void setPlayerCompatability(int)
org.jaudiotagger.tag.id3.AbstractID3Tag: void setLoggingFilename(java.lang.String)
com.umeng.analytics.pro.bn: double y()
com.umeng.analytics.process.DBFileTraversalUtil: DBFileTraversalUtil()
com.umeng.analytics.Gender$3: java.lang.String toString()
org.simpleframework.xml.core.ElementMapParameter: java.lang.String getPath()
com.umeng.analytics.pro.b$a: com.umeng.analytics.pro.b a(android.os.IBinder)
org.jcodec.containers.mp4.boxes.ClearApertureBox: int estimateSize()
com.umeng.commonsdk.statistics.common.a$a: java.lang.String b()
com.google.android.gms.common.internal.zzj: zzj()
com.umeng.commonsdk.statistics.proto.e: com.umeng.commonsdk.statistics.proto.e a(long)
com.umeng.analytics.pro.ch: void a(byte[])
org.jaudiotagger.tag.id3.ID3v23Tag: void readExtendedHeader(java.nio.ByteBuffer,int)
com.umeng.commonsdk.statistics.common.a$a: a$a(java.lang.String,boolean)
androidx.activity.ComponentDialog: void onBackPressed()
nl.adaptivity.xmlutil.serialization.XmlSerializationPolicy$XmlEncodeDefault: nl.adaptivity.xmlutil.serialization.XmlSerializationPolicy$XmlEncodeDefault[] values()
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl: void setLayoutDirection(android.content.res.Configuration,java.util.Locale)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopEnd()
org.simpleframework.xml.core.ElementListUnionParameter: java.lang.String getName()
com.thegrizzlylabs.sardineandroid.model.SyncCollection: com.thegrizzlylabs.sardineandroid.model.Limit getLimit()
com.caij.puremusic.db.model.SongEntityQueries$IsSongExistsInPlaylistQuery: java.lang.String toString()
com.google.common.base.AbstractIterator$State: com.google.common.base.AbstractIterator$State valueOf(java.lang.String)
org.simpleframework.xml.core.Context: org.simpleframework.xml.stream.Style getStyle()
org.jcodec.containers.mp4.MP4Util$Movie: java.util.List getOthers()
org.jaudiotagger.tag.images.AndroidArtwork: void setFromFile(java.io.File)
com.tencent.mm.opensdk.diffdev.a.c: c(java.lang.String,com.tencent.mm.opensdk.diffdev.OAuthListener)
org.jaudiotagger.tag.id3.framebody.FrameBodyETCO: FrameBodyETCO()
com.caij.puremusic.network.model.LastFmArtist$Artist$Stats: LastFmArtist$Artist$Stats()
com.caij.puremusic.model.Genre: java.lang.String component2()
org.jcodec.containers.mp4.boxes.SampleSizesBox: int getDefaultSize()
com.caij.puremusic.db.model.ServerArtistCoverQueries$GetByIdQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.google.android.material.bottomsheet.BottomSheetDialog$EdgeToEdgeCallback: void setWindow(android.view.Window)
org.simpleframework.xml.core.SignatureScanner: SignatureScanner(java.lang.reflect.Constructor,org.simpleframework.xml.core.ParameterMap,org.simpleframework.xml.core.Support)
com.umeng.commonsdk.debug.UMLog: void mutlInfo(java.lang.String,int,java.lang.String)
org.jcodec.containers.mp4.boxes.NodeBox: void parse(java.nio.ByteBuffer)
com.umeng.commonsdk.stateless.b$1: b$1(com.umeng.commonsdk.stateless.b,android.os.Looper)
org.jaudiotagger.tag.TagOptionSingleton: void setId3v24UnicodeTextEncoding(byte)
org.jaudiotagger.tag.id3.ID3v23Tag: byte getRevision()
androidx.gridlayout.widget.GridLayout: void setPrinter(android.util.Printer)
com.umeng.analytics.pro.ax: int b()
com.caij.puremusic.drive.model.MediaContainer: com.caij.puremusic.drive.model.MediaContainer copy$default(com.caij.puremusic.drive.model.MediaContainer,int,java.lang.String,java.util.List,int,java.lang.Object)
com.tencent.bugly.proguard.ap: void a(java.lang.Class,java.lang.String,java.lang.Object)
com.umeng.analytics.pro.bz: bz(java.lang.String)
com.umeng.commonsdk.statistics.proto.a: a(com.umeng.commonsdk.statistics.proto.a)
org.jaudiotagger.tag.id3.framebody.FrameBodyTMED: FrameBodyTMED(java.nio.ByteBuffer,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl: int getMaxLines(android.widget.TextView)
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdTypeCountQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query getSongCountBySourceId(long)
org.jaudiotagger.tag.datatype.NumberHashMap: NumberHashMap(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody,int)
org.simpleframework.xml.stream.NodeWriter: org.simpleframework.xml.stream.OutputNode writeElement(org.simpleframework.xml.stream.OutputNode,java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
com.umeng.commonsdk.framework.UMFrUtils: int saveEnvelopeFile(android.content.Context,java.lang.String,byte[])
com.google.common.hash.Hashing$ChecksumType$1: java.lang.Object get()
com.caij.puremusic.drive.model.AlbumArtist$$serializer: AlbumArtist$$serializer()
com.tencent.bugly.proguard.k: double[] i(int,boolean)
com.umeng.commonsdk.statistics.proto.d: void l()
com.tencent.mm.opensdk.modelbiz.JoinChatroom$Resp: void fromBundle(android.os.Bundle)
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: int access$302(org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox,int)
com.umeng.commonsdk.statistics.proto.Response$c: void b(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
org.jaudiotagger.tag.TagOptionSingleton: void setWriteMp3GenresAsText(boolean)
com.caij.puremusic.drive.model.Auth2Token: void write$Self(com.caij.puremusic.drive.model.Auth2Token,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
org.jaudiotagger.tag.id3.AbstractTagItem: java.lang.String getIdentifier()
com.umeng.commonsdk.statistics.idtracking.c: c(android.content.Context)
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$getById$1: java.lang.Object invoke(java.lang.Object)
androidx.core.view.ViewConfigurationCompat$Api28Impl: int getScaledHoverSlop(android.view.ViewConfiguration)
com.umeng.analytics.process.UMProcessDBHelper: org.json.JSONObject readMainEvents(long,java.util.List)
org.simpleframework.xml.core.Caller: java.lang.Object resolve(java.lang.Object)
com.caij.puremusic.drive.model.DropboxDriveFileResponse$Companion: DropboxDriveFileResponse$Companion()
com.caij.puremusic.views.BaselineGridTextView: BaselineGridTextView(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.db.model.SongQueries$SongsByArtistQuery$execute$1: SongQueries$SongsByArtistQuery$execute$1(com.caij.puremusic.db.model.SongQueries$SongsByArtistQuery)
org.jaudiotagger.tag.id3.ID3v23Frame: void createStructure()
org.jaudiotagger.tag.id3.ID3v11Tag: void setTrack(java.lang.String)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyAUT: FieldFrameBodyAUT()
com.thegrizzlylabs.sardineandroid.DavAce: DavAce(com.thegrizzlylabs.sardineandroid.DavPrincipal)
com.umeng.analytics.pro.bu: void e()
org.jcodec.containers.mp4.boxes.CleanApertureExtension: org.jcodec.containers.mp4.boxes.CleanApertureExtension createCleanApertureExtension(int,int,int,int,int,int,int,int)
org.simpleframework.xml.stream.OutputNode: org.simpleframework.xml.stream.NodeMap getAttributes()
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: FrameBodyTXXX(byte,java.lang.String,java.lang.String)
com.caij.puremusic.views.insets.InsetsRecyclerView: InsetsRecyclerView(android.content.Context,android.util.AttributeSet)
com.google.android.material.appbar.CollapsingToolbarLayout: void setStaticLayoutBuilderConfigurer(com.google.android.material.appbar.CollapsingToolbarLayout$StaticLayoutBuilderConfigurer)
com.caij.puremusic.drive.model.GoogleDriveFileResponse: boolean equals(java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyPOSS: FrameBodyPOSS(org.jaudiotagger.tag.id3.framebody.FrameBodyPOSS)
com.caij.puremusic.db.model.Song: long component15()
com.tencent.bugly.proguard.ac: void a(com.tencent.bugly.proguard.bt)
org.jaudiotagger.tag.id3.framebody.FrameBodyCTOC: void setupObjectList()
com.caij.puremusic.db.model.SongQueries$songsByArtist$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
org.simpleframework.xml.core.LabelExtractor$LabelBuilder: LabelExtractor$LabelBuilder(java.lang.Class,java.lang.Class,java.lang.Class)
com.caij.puremusic.db.model.HistoryEntityQueries$GetByIdQuery$execute$1: java.lang.Object invoke(java.lang.Object)
com.heinrichreimersoftware.materialintro.view.InkPageIndicator: void setPageIndicatorColor(int)
org.simpleframework.xml.core.Traverser: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.lang.Object)
com.tencent.mm.opensdk.modelmsg.SendAuth$Req: int getType()
org.simpleframework.xml.core.Session: java.util.Set keySet()
org.jcodec.containers.mp4.boxes.TrackExtendsBox: void doWrite(java.nio.ByteBuffer)
org.jaudiotagger.tag.id3.framebody.FrameBodyUnsupported: FrameBodyUnsupported(java.lang.String,byte[])
org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeNamespace(int)
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgram$Resp: WXLaunchMiniProgram$Resp(android.os.Bundle)
androidx.core.os.LocaleListCompat$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
com.caij.puremusic.activities.WebActivity: WebActivity()
com.umeng.analytics.b: void a(android.content.Context,java.lang.String,java.util.Map)
org.jaudiotagger.tag.datatype.Lyrics3Line: void addLyric(java.lang.String)
androidx.core.app.RemoteInput$Api20Impl: void addResultsToIntent(java.lang.Object,android.content.Intent,android.os.Bundle)
org.simpleframework.xml.core.MethodPart: java.lang.String getName()
com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgram$Resp: WXLaunchMiniProgram$Resp()
androidx.fragment.app.Fragment: void performSaveInstanceState(android.os.Bundle)
org.jaudiotagger.audio.mp3.MP3File: byte[] getHash(int)
com.caij.puremusic.drive.model.PlexSongsResponse: boolean equals(java.lang.Object)
com.caij.vip.AliPayPrecreateResponse: AliPayPrecreateResponse()
com.caij.puremusic.drive.model.DavProperties: java.lang.String getCreationDate(com.caij.puremusic.drive.model.Response)
com.umeng.analytics.pro.l$1: void onActivityDestroyed(android.app.Activity)
org.jaudiotagger.tag.lyrics3.Lyrics3v1: boolean isSubsetOf(java.lang.Object)
org.jaudiotagger.tag.id3.ID3v24Frame: int getFrameHeaderSize()
com.umeng.analytics.pro.ao: void b(android.database.sqlite.SQLiteDatabase)
com.caij.puremusic.fragments.other.UserInfoFragment: UserInfoFragment()
com.caij.puremusic.drive.model.AlbumSubsonicResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.AlbumSubsonicResponse)
org.simpleframework.xml.core.Factory: boolean isInstantiable(java.lang.Class)
org.jaudiotagger.tag.id3.ID3v23Tag: org.jaudiotagger.tag.TagField createArtworkField(byte[],java.lang.String)
com.umeng.analytics.pro.bn: com.umeng.analytics.pro.br n()
com.caij.puremusic.db.model.SongQueries$SongsByTitleQuery: void addListener(app.cash.sqldelight.Query$Listener)
com.caij.puremusic.drive.model.ImageTags$Companion: ImageTags$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.jaudiotagger.audio.AudioHeader: double getPreciseTrackLength()
org.simpleframework.xml.core.DetailExtractor: DetailExtractor(org.simpleframework.xml.core.Support)
com.thegrizzlylabs.sardineandroid.impl.handler.ResourcesResponseHandler: java.lang.Object handleResponse(okhttp3.Response)
com.alipay.android.phone.mrpc.core.q: com.alipay.android.phone.mrpc.core.u a(org.apache.http.HttpResponse,int,java.lang.String)
org.json.alipay.JSONException: java.lang.Throwable getCause()
com.alipay.apmobilesecuritysdk.e.d: com.alipay.apmobilesecuritysdk.e.c b(android.content.Context)
com.google.android.material.navigation.NavigationBarMenuView: int getSelectedItemId()
com.thegrizzlylabs.sardineandroid.util.SardineUtil: SardineUtil()
org.jaudiotagger.audio.generic.GenericAudioHeader: void setAudioDataStartPosition(java.lang.Long)
com.yalantis.ucrop.view.TransformImageView: void setMaxBitmapSize(int)
com.tencent.bugly.proguard.av: boolean a(java.lang.Thread$UncaughtExceptionHandler)
org.jcodec.containers.mp4.MP4Util$Movie: org.jcodec.containers.mp4.boxes.MovieBox access$000(org.jcodec.containers.mp4.MP4Util$Movie)
org.jcodec.containers.mp4.boxes.TrunBox: int[] getSampleCompositionOffsets()
com.umeng.analytics.pro.an: void f(boolean)
com.caij.puremusic.drive.model.PlaylistMetadata$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
org.jaudiotagger.tag.datatype.EventTimingCode: int getSize()
org.simpleframework.xml.core.TextListLabel: java.lang.Object getEmpty(org.simpleframework.xml.core.Context)
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: void unsetNonStandardFlags()
com.caij.puremusic.db.model.Folder: com.caij.puremusic.db.model.Folder copy$default(com.caij.puremusic.db.model.Folder,long,int,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
com.caij.puremusic.db.model.FolderQueries$deleteById$2: void invoke(kotlin.jvm.functions.Function1)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: java.lang.String getMD5Signature()
org.repackage.com.vivo.identifier.IdentifierIdClient: java.lang.String c(java.lang.String)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyUrlLink: AbstractFrameBodyUrlLink(org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyUrlLink)
org.jcodec.containers.mp4.boxes.MetaValue: java.lang.String toString()
com.umeng.analytics.pro.ac: java.lang.String a(java.lang.String)
me.tankery.lib.circularseekbar.CircularSeekBar: int getCircleColor()
com.google.android.material.imageview.ShapeableImageView: void setStrokeColor(android.content.res.ColorStateList)
com.umeng.analytics.pro.y: long b()
com.caij.puremusic.db.model.ServerAudioFormatQueries$deleteSongBySource$1: ServerAudioFormatQueries$deleteSongBySource$1(long)
com.caij.puremusic.model.DeezerResponse: boolean equals(java.lang.Object)
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$deleteSongBySource$2: DriveFileDownUrlInfoQueries$deleteSongBySource$2()
com.thegrizzlylabs.sardineandroid.model.SyncCollection: java.lang.String getSyncToken()
com.umeng.commonsdk.statistics.noise.ImLatent: void latentDeactivite()
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$PathBetweenNodesEnumeration: DefaultMutableTreeNode$PathBetweenNodesEnumeration(org.jaudiotagger.utils.tree.DefaultMutableTreeNode,org.jaudiotagger.utils.tree.TreeNode,org.jaudiotagger.utils.tree.TreeNode)
org.jaudiotagger.tag.datatype.AbstractDataType: int getSize()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getRippleColorStateList()
com.umeng.commonsdk.utils.onMessageSendListener: void onMessageSend()
org.jaudiotagger.logging.AbstractTagDisplayFormatter: void openHeadingElement(java.lang.String,int)
org.jcodec.containers.mp4.boxes.ChunkOffsetsBox: ChunkOffsetsBox(org.jcodec.containers.mp4.boxes.Header)
androidx.fragment.app.Fragment: androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras()
com.afollestad.materialdialogs.color.view.ObservableSeekBar: ObservableSeekBar(android.content.Context,android.util.AttributeSet)
com.google.android.material.progressindicator.BaseProgressIndicator: android.graphics.drawable.Drawable getProgressDrawable()
com.alipay.apmobilesecuritysdk.e.f: java.lang.String c()
com.umeng.commonsdk.statistics.noise.Defcon: void onImprintChanged(com.umeng.commonsdk.statistics.idtracking.ImprintHandler$a)
org.jaudiotagger.audio.generic.AbstractTag: java.lang.String getFirst(org.jaudiotagger.tag.FieldKey)
org.jaudiotagger.tag.id3.ID3v24Frame: void createV24FrameFromV23Frame(org.jaudiotagger.tag.id3.ID3v23Frame)
com.tencent.bugly.proguard.r: android.content.ContentValues b(com.tencent.bugly.crashreport.biz.UserInfoBean)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getTrackTintList()
org.simpleframework.xml.core.PrimitiveInlineList: boolean validate(org.simpleframework.xml.stream.InputNode)
org.jcodec.containers.mp4.boxes.MovieExtendsHeaderBox: int estimateSize()
com.yalantis.ucrop.view.CropImageView: CropImageView(android.content.Context,android.util.AttributeSet)
nl.adaptivity.xmlutil.core.KtXmlWriter$EscapeMode: nl.adaptivity.xmlutil.core.KtXmlWriter$EscapeMode[] values()
org.simpleframework.xml.stream.OutputDocument: org.simpleframework.xml.stream.OutputNode getParent()
org.json.alipay.c: c(java.lang.String)
androidx.appcompat.widget.SearchView: int getImeOptions()
com.caij.puremusic.drive.model.PlexAlbumsResponse: int hashCode()
org.jaudiotagger.audio.generic.AudioFileReader2: org.jaudiotagger.tag.Tag getTag(java.io.RandomAccessFile)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
com.umeng.analytics.pro.an$e: java.lang.String b()
org.jaudiotagger.tag.id3.framebody.FrameBodyAENC: java.lang.String getOwner()
org.jaudiotagger.audio.asf.util.Utils: void flush(java.io.InputStream,java.io.OutputStream)
com.afollestad.materialdialogs.internal.main.DialogLayout: com.afollestad.materialdialogs.internal.main.DialogTitleLayout getTitleLayout()
com.caij.puremusic.drive.model.GoogleDriveFileResponse: java.lang.String component2()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSize(int)
com.umeng.analytics.pro.an: void o()
org.jcodec.containers.mp4.boxes.MetaValue: byte[] fromFloat(float)
org.simpleframework.xml.core.Collector: java.util.Iterator iterator()
com.tencent.bugly.R$string: R$string()
com.umeng.commonsdk.statistics.proto.c$e: java.lang.String b()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: FrameBodyCOMM(byte,java.lang.String,java.lang.String,java.lang.String)
org.jaudiotagger.tag.id3.valuepair.V2GenreTypes: V2GenreTypes()
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
com.umeng.commonsdk.statistics.internal.c$2: boolean onPreProcessImprintKey(java.lang.String,java.lang.String)
com.thegrizzlylabs.sardineandroid.model.Locktype: Locktype()
com.thegrizzlylabs.sardineandroid.util.EntityWithAnyElementConverter: void write(org.simpleframework.xml.stream.OutputNode,com.thegrizzlylabs.sardineandroid.model.EntityWithAnyElement)
org.simpleframework.xml.transform.BooleanTransform: java.lang.String write(java.lang.Boolean)
androidx.constraintlayout.motion.widget.MotionLayout: void setScene(androidx.constraintlayout.motion.widget.MotionScene)
com.caij.puremusic.fragments.AlbumCoverStyle: com.caij.puremusic.fragments.AlbumCoverStyle valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.caij.puremusic.extensions.ViewExtensionsKt$drawAboveSystemBars$1: ViewExtensionsKt$drawAboveSystemBars$1()
androidx.recyclerview.widget.RecyclerView$LayoutManager: RecyclerView$LayoutManager()
com.google.android.material.bottomsheet.BottomSheetDialog: void setLightStatusBar(android.view.View,boolean)
com.caij.puremusic.db.model.DriveFileDownUrlInfo: long getSourceId()
com.google.android.material.bottomsheet.BottomSheetDragHandleView: BottomSheetDragHandleView(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.db.model.Song: java.lang.String component12()
com.caij.puremusic.drive.model.MediaInfoWrapper: com.caij.puremusic.drive.model.MediaInfoWrapper copy$default(com.caij.puremusic.drive.model.MediaInfoWrapper,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.ArrayList,java.util.ArrayList,int,java.lang.Object)
com.umeng.commonsdk.statistics.idtracking.a: boolean c()
org.simpleframework.xml.core.Source: org.simpleframework.xml.core.Schema getSchema(java.lang.Class)
com.caij.puremusic.drive.model.ArtistItem: com.caij.puremusic.drive.model.ArtistItem copy$default(com.caij.puremusic.drive.model.ArtistItem,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,java.lang.Integer,com.caij.puremusic.drive.model.ImageTags,java.util.List,java.lang.String,int,java.lang.Object)
com.tencent.mm.opensdk.modelbiz.WXNontaxPay$Resp: void toBundle(android.os.Bundle)
org.jaudiotagger.tag.id3.framebody.FrameBodyRVAD: java.lang.String getIdentifier()
app.cash.sqldelight.TransacterImpl: java.lang.Object transactionWithWrapper(boolean,kotlin.jvm.functions.Function1)
com.umeng.commonsdk.statistics.proto.b$e: b$e(java.lang.String,int,short,java.lang.String)
org.jcodec.containers.mp4.boxes.MetaBox: java.lang.String fourcc()
com.umeng.analytics.pro.m: void onActivityDestroyed(android.app.Activity)
org.jaudiotagger.audio.asf.data.EncryptionChunk: java.lang.String getProtectionType()
com.alipay.apmobilesecuritysdk.a.a: java.lang.String a(android.content.Context)
com.thegrizzlylabs.sardineandroid.model.SyncCollection: com.thegrizzlylabs.sardineandroid.model.Prop getProp()
org.jcodec.containers.mp4.boxes.ChunkOffsets64Box: void parse(java.nio.ByteBuffer)
com.caij.puremusic.db.model.ServerSongCoverQueries$deleteById$2: ServerSongCoverQueries$deleteById$2()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
com.umeng.commonsdk.statistics.TagHelper: void setModuleTag(java.lang.String,java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyDeprecated: java.lang.String toString()
org.simpleframework.xml.stream.InputNodeMap: org.simpleframework.xml.stream.Node remove(java.lang.String)
org.simpleframework.xml.core.VersionLabel: org.simpleframework.xml.core.Expression getExpression()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
com.caij.puremusic.drive.model.Prop: void getCreationdate$annotations()
org.jaudiotagger.tag.id3.framebody.FrameBodyDeprecated: void setupObjectList()
com.tencent.mm.opensdk.modelbiz.SubscribeMiniProgramMsg$Req: int getType()
com.caij.puremusic.db.model.PlaylistEntityQueries$insert$2: PlaylistEntityQueries$insert$2()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onDependentViewRemoved(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)
org.jaudiotagger.tag.reference.ISOScript$Script: ISOScript$Script(java.lang.String,int,java.lang.String,java.lang.String)
org.jcodec.containers.mp4.boxes.SampleToChunkBox: org.jcodec.containers.mp4.boxes.SampleToChunkBox$SampleToChunkEntry[] getSampleToChunk()
com.umeng.commonsdk.statistics.proto.e: void a(java.io.ObjectInputStream)
org.jaudiotagger.tag.id3.ID3SyncSafeInteger: ID3SyncSafeInteger()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
com.caij.puremusic.db.model.ServerAudioFormatQueries: ServerAudioFormatQueries(app.cash.sqldelight.db.SqlDriver)
com.caij.puremusic.drive.model.OneDriveFolder: boolean equals(java.lang.Object)
org.simpleframework.xml.core.NamespaceDecorator: void decorate(org.simpleframework.xml.stream.OutputNode)
org.jcodec.containers.mp4.boxes.TrunBox$Factory: org.jcodec.containers.mp4.boxes.TrunBox$Factory sampleFlags(int[])
org.jcodec.containers.mp4.boxes.SampleSizesBox: SampleSizesBox(org.jcodec.containers.mp4.boxes.Header)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.caij.puremusic.db.model.PlaybackSongQueries$insert$2: void invoke(kotlin.jvm.functions.Function1)
com.caij.puremusic.drive.model.PlexSongsResponse: void write$Self(com.caij.puremusic.drive.model.PlexSongsResponse,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
org.jaudiotagger.audio.mp4.Mp4FileWriter: Mp4FileWriter()
com.alipay.apmobilesecuritysdk.d.e: java.lang.String a(java.util.Map)
org.slf4j.helpers.NamedLoggerBase: NamedLoggerBase()
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: void setNativeInfo(int,java.lang.String)
org.jaudiotagger.audio.exceptions.ReadOnlyFileException: ReadOnlyFileException()
com.umeng.commonsdk.stateless.d: java.io.File[] c(android.content.Context)
androidx.activity.ComponentDialog: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.caij.puremusic.drive.model.PlexArtistsResponse$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
org.jaudiotagger.tag.datatype.Pair: java.lang.Object getKey()
org.jcodec.containers.mp4.boxes.DataRefBox: org.jcodec.containers.mp4.boxes.DataRefBox createDataRefBox()
org.jaudiotagger.tag.TagOptionSingleton: java.lang.String getNewReplaceWord(java.lang.String)
org.jaudiotagger.tag.datatype.ID3v2LyricLine: void readByteArray(byte[],int)
org.simpleframework.xml.core.MethodContact: java.lang.String getName()
org.simpleframework.xml.stream.PrefixResolver: java.lang.String resolvePrefix(java.lang.String)
com.umeng.commonsdk.statistics.idtracking.e: com.umeng.commonsdk.statistics.proto.c i()
org.jaudiotagger.audio.mp4.Mp4FileReader: org.jaudiotagger.audio.generic.GenericAudioHeader getEncodingInfo(java.io.RandomAccessFile)
org.jaudiotagger.tag.id3.framebody.FrameBodyPOPM: FrameBodyPOPM(java.lang.String,long,long)
org.simpleframework.xml.core.VersionLabel: org.simpleframework.xml.core.Converter getConverter(org.simpleframework.xml.core.Context)
com.caij.puremusic.drive.model.JellyfinFolder$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.caij.puremusic.drive.model.PlexUser: java.lang.String getUuid()
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: java.lang.String c()
com.google.common.reflect.Types$JavaVersion$1: Types$JavaVersion$1(java.lang.String,int)
com.google.common.io.Files$FilePredicate: boolean apply(java.lang.Object)
com.caij.puremusic.drive.model.ADriveItem: com.caij.puremusic.drive.model.ADriveItem copy(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org.simpleframework.xml.stream.OutputBuffer: void append(java.lang.String)
com.umeng.commonsdk.statistics.proto.c$e: com.umeng.commonsdk.statistics.proto.c$e b(int)
com.tencent.bugly.proguard.k: void a()
com.caij.puremusic.drive.model.Part: int component1()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
org.simpleframework.xml.transform.TimeZoneTransform: java.lang.Object read(java.lang.String)
com.tencent.bugly.proguard.av: av(android.content.Context,com.tencent.bugly.proguard.as,com.tencent.bugly.proguard.ac,com.tencent.bugly.proguard.aa)
org.jcodec.containers.mp4.boxes.TrakBox: void setTimescale(int)
com.tencent.mm.opensdk.modelmsg.WXEmojiObject: void setEmojiData(byte[])
org.jaudiotagger.tag.asf.AsfTag: java.lang.String getValue(org.jaudiotagger.tag.FieldKey,int)
org.simpleframework.xml.core.Label: boolean isInline()
com.google.android.material.bottomappbar.BottomAppBar: int getBottomInset()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPadding: java.nio.ByteBuffer getBytes()
com.caij.puremusic.db.model.PlaylistEntityQueries$insert$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.google.android.material.bottomsheet.BottomSheetDialog: com.google.android.material.bottomsheet.BottomSheetDialog$EdgeToEdgeCallback access$000(com.google.android.material.bottomsheet.BottomSheetDialog)
com.umeng.analytics.pro.bf$c: void b(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.bf)
com.caij.puremusic.drive.model.PlexSectionsResponse: com.caij.puremusic.drive.model.PlexSectionsResponse copy$default(com.caij.puremusic.drive.model.PlexSectionsResponse,com.caij.puremusic.drive.model.FMediaContainer,int,java.lang.Object)
com.umeng.analytics.pro.i: java.lang.String a(org.json.JSONObject,boolean)
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: SafeCollector$collectContextSize$1()
com.umeng.commonsdk.statistics.b: org.json.JSONObject a(android.content.Context,org.json.JSONObject,org.json.JSONObject,java.lang.String)
org.jaudiotagger.tag.id3.AbstractTagFrameBody: void setTextEncoding(byte)
com.umeng.analytics.pro.bc: java.lang.String b()
com.caij.puremusic.db.model.PlaybackSongQueries: com.caij.puremusic.db.model.PlaybackSong$Adapter access$getPlaybackSongAdapter$p(com.caij.puremusic.db.model.PlaybackSongQueries)
com.tencent.bugly.proguard.z: java.util.List a(java.util.Map)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.tencent.mm.opensdk.channel.MMessageActV2: MMessageActV2()
com.google.android.material.button.MaterialButton: void setIconSize(int)
com.umeng.commonsdk.statistics.proto.Response$b: Response$b(com.umeng.commonsdk.statistics.proto.Response$1)
com.umeng.commonsdk.statistics.proto.Gender: int getValue()
com.caij.puremusic.drive.model.MediaInfoWrapper: boolean equals(java.lang.Object)
com.heinrichreimersoftware.materialintro.view.InkPageIndicator: int getPageIndicatorColor()
com.caij.puremusic.drive.model.AlbumList$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.caij.puremusic.db.model.PlayCountEntityQueries: app.cash.sqldelight.Query checkSongExistInPlayCount(long,kotlin.jvm.functions.Function3)
org.jaudiotagger.audio.AudioFile: org.jaudiotagger.tag.Tag getTagOrCreateDefault()
com.caij.puremusic.db.model.AlbumQueries$AlbumQuery: java.lang.String toString()
com.tencent.bugly.proguard.n: boolean a(java.lang.Object,java.lang.Object)
org.jcodec.containers.mp4.boxes.TrakBox: boolean isPureRef()
com.google.android.material.internal.FlowLayout: void setItemSpacing(int)
org.jaudiotagger.audio.asf.data.MetadataContainer: MetadataContainer(org.jaudiotagger.audio.asf.data.ContainerType,long,java.math.BigInteger)
org.simpleframework.xml.core.MethodPart: java.lang.Class getDependent()
com.umeng.analytics.pro.i$b: com.umeng.analytics.pro.i a()
com.caij.puremusic.drive.model.FMediaContainer: FMediaContainer(int,java.lang.String,java.util.List)
com.tencent.bugly.CrashModule: void onServerStrategyChanged(com.tencent.bugly.crashreport.common.strategy.StrategyBean)
com.caij.puremusic.drive.model.ADriveFileResponse: void write$Self(com.caij.puremusic.drive.model.ADriveFileResponse,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.caij.puremusic.drive.model.SubPlayList$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.audio.generic.Utils: int readUint16(java.io.DataInput)
io.ktor.client.HttpClientConfig$engineConfig$1: HttpClientConfig$engineConfig$1()
com.umeng.analytics.pro.ad$a: ad$a(com.umeng.analytics.pro.ad$1)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: boolean isNodeSibling(org.jaudiotagger.utils.tree.TreeNode)
org.jaudiotagger.tag.id3.framebody.FrameBodyTRSN: java.lang.String getIdentifier()
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getAppMD5Signature(android.content.Context)
org.jaudiotagger.audio.iff.ChunkHeader: long getStartLocationInFile()
org.jaudiotagger.tag.asf.AsfTag: org.jaudiotagger.tag.asf.AsfTagCoverField createArtworkField(byte[])
org.jaudiotagger.utils.tree.DefaultTreeModel: org.jaudiotagger.utils.tree.TreeModelListener[] getTreeModelListeners()
org.simpleframework.xml.core.Contact: java.lang.String getName()
org.jaudiotagger.tag.datatype.StringSizeTerminated: StringSizeTerminated(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody)
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String component14()
com.umeng.commonsdk.internal.utils.d: d()
org.jaudiotagger.tag.id3.framebody.FrameBodyMLLT: FrameBodyMLLT(org.jaudiotagger.tag.id3.framebody.FrameBodyMLLT)
com.google.android.material.bottomsheet.BottomSheetDialog$3: BottomSheetDialog$3(com.google.android.material.bottomsheet.BottomSheetDialog)
com.caij.puremusic.drive.model.Part$Companion: kotlinx.serialization.KSerializer serializer()
org.jaudiotagger.tag.asf.AsfTag$AsfFieldIterator: java.lang.Object next()
org.simpleframework.xml.stream.HyphenStyle: HyphenStyle()
org.jaudiotagger.audio.mp3.MPEGFrameHeader: boolean isVariableBitRate()
org.simpleframework.xml.transform.BigIntegerTransform: java.math.BigInteger read(java.lang.String)
com.google.common.collect.Maps$EntryFunction$1: Maps$EntryFunction$1(java.lang.String,int)
org.jaudiotagger.audio.AudioHeader: java.lang.Long getNoOfSamples()
org.jaudiotagger.tag.id3.framebody.FrameBodyENCR: java.lang.String getOwner()
org.simpleframework.xml.core.TreeModel: org.simpleframework.xml.core.Model create(java.lang.String,java.lang.String,int)
com.caij.puremusic.drive.model.GoogleDriveFileResponse$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void writePadding(java.nio.channels.WritableByteChannel,int)
androidx.core.view.ViewCompat$Api17Impl: int generateViewId()
org.simpleframework.xml.stream.StreamReader$End: StreamReader$End(org.simpleframework.xml.stream.StreamReader$1)
com.caij.puremusic.model.Home: java.util.List getArrayList()
com.caij.puremusic.drive.model.AlbumArtist: java.lang.String toString()
org.simpleframework.xml.core.TreeModel: void validateText(java.lang.Class)
com.caij.puremusic.db.model.SongQueries$songsByAlbumIdTypeCount$1: SongQueries$songsByAlbumIdTypeCount$1()
androidx.customview.widget.ViewDragHelper$Callback: void onViewPositionChanged(android.view.View,int,int,int,int)
com.caij.puremusic.drive.model.Resourcetype$Companion: kotlinx.serialization.KSerializer serializer()
org.jaudiotagger.tag.datatype.StringHashMap: java.lang.String toString()
com.caij.puremusic.drive.model.AlbumListResponse: void write$Self(com.caij.puremusic.drive.model.AlbumListResponse,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat valueOf(java.lang.String)
com.umeng.analytics.CoreProtocol: void removeCacheData(java.lang.Object)
com.umeng.analytics.pro.be: byte[] a(com.umeng.analytics.pro.av)
org.jaudiotagger.tag.id3.ID3v1Tag: boolean setEncoding(java.nio.charset.Charset)
org.simpleframework.xml.core.CacheParameter: boolean isPrimitive()
org.jcodec.containers.mp4.boxes.ChannelBox: void setDescriptions(org.jcodec.containers.mp4.boxes.ChannelBox$ChannelDescription[])
org.simpleframework.xml.stream.PrefixResolver: java.lang.String setReference(java.lang.String)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: MetadataBlockDataPicture(java.nio.ByteBuffer)
com.alipay.android.phone.mrpc.core.b: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)
com.tencent.bugly.proguard.aq: aq()
com.umeng.commonsdk.framework.UMFrUtils: long getLastInstantBuildTime(android.content.Context)
org.jaudiotagger.tag.id3.AbstractID3v2Tag$FrameAndSubId: java.lang.String getSubId()
com.tencent.mm.opensdk.modelbiz.WXLaunchWxaRedirectingPage$Req: void fromBundle(android.os.Bundle)
com.google.android.material.slider.Slider: void setThumbRadius(int)
org.jaudiotagger.audio.asf.io.StreamChunkReader: boolean canFail()
com.caij.puremusic.drive.model.DriveFile: long getFileLength()
com.caij.puremusic.drive.model.Propstat: Propstat(int,com.caij.puremusic.drive.model.Prop,java.lang.String,kotlinx.serialization.internal.SerializationConstructorMarker)
androidx.viewpager.widget.ViewPager: void setScrollingCacheEnabled(boolean)
com.caij.puremusic.drive.model.SubsonicSearchResponse: java.lang.String toString()
io.github.aakira.napier.atomic.AtomicMutableList$clear$1: AtomicMutableList$clear$1()
org.simpleframework.xml.core.Model: org.simpleframework.xml.core.LabelMap getAttributes()
org.simpleframework.xml.convert.ConverterFactory: ConverterFactory()
com.umeng.vt.diff.Event: java.lang.String getActivityName(android.view.View)
org.simpleframework.xml.convert.Registry: org.simpleframework.xml.convert.Registry bind(java.lang.Class,java.lang.Class)
com.umeng.analytics.pro.i: void b(org.json.JSONObject,java.lang.String)
org.simpleframework.xml.Serializer: java.lang.Object read(java.lang.Object,org.simpleframework.xml.stream.InputNode)
org.simpleframework.xml.util.LimitedCache: void cache(java.lang.Object,java.lang.Object)
com.caij.puremusic.drive.model.AlbumResponse: void write$Self(com.caij.puremusic.drive.model.AlbumResponse,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.umeng.analytics.pro.an: void b(boolean)
com.tencent.mm.opensdk.modelbiz.WXChannelOpenProfile: WXChannelOpenProfile()
com.caij.puremusic.activities.tageditor.SongTagEditorActivityV2: SongTagEditorActivityV2()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextColor(android.content.res.ColorStateList)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
com.umeng.commonsdk.utils.UMUtils: java.lang.String[] getGPU(javax.microedition.khronos.opengles.GL10)
org.simpleframework.xml.core.PersistenceException: PersistenceException(java.lang.Throwable,java.lang.String,java.lang.Object[])
com.caij.puremusic.drive.model.SubsonicAlbum: SubsonicAlbum(java.lang.String,java.lang.String,java.lang.String,int,int,int,java.lang.String,java.lang.String,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
org.simpleframework.xml.core.FieldScanner: void extend(java.lang.Class,org.simpleframework.xml.DefaultType)
org.jcodec.containers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox: void setBaseMediaDecodeTime(long)
com.google.android.material.card.MaterialCardView: void setCheckedIconSizeResource(int)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentCreator: java.lang.Object convert(org.jaudiotagger.tag.Tag,int)
com.caij.puremusic.drive.model.PlexArtistsResponse$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.jaudiotagger.audio.asf.data.AsfExtendedHeader: AsfExtendedHeader(long,java.math.BigInteger)
com.caij.puremusic.drive.model.PlexSongsResponse: com.caij.puremusic.drive.model.MediaContainer getMediaContainer()
com.google.android.material.navigation.NavigationBarMenuView: android.content.res.ColorStateList getItemRippleColor()
com.umeng.commonsdk.internal.UMInternalManagerAgent: UMInternalManagerAgent()
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.umeng.commonsdk.UMConfigureImpl: void c(android.content.Context)
com.thegrizzlylabs.sardineandroid.DavResource: int getStatusCode(com.thegrizzlylabs.sardineandroid.model.Response)
com.caij.puremusic.model.Data: int getNbAlbum()
com.google.android.material.card.MaterialCardView: float getProgress()
com.caij.puremusic.db.model.ArtistQueries$ArtistByIdQuery: void addListener(app.cash.sqldelight.Query$Listener)
com.google.android.material.textfield.TextInputLayout: void setMaxWidthResource(int)
com.tencent.mmkv.MMKV: long count(long)
com.umeng.analytics.pro.ch: void c()
org.jaudiotagger.tag.id3.AbstractTag: void delete(java.io.RandomAccessFile)
com.umeng.analytics.pro.bf: java.util.Set a(java.util.Set)
org.simpleframework.xml.stream.OutputDocument: java.lang.String getPrefix(boolean)
org.jaudiotagger.tag.id3.framebody.FrameBodyCHAP: FrameBodyCHAP()
com.caij.puremusic.drive.model.SubsonicSong$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.thegrizzlylabs.sardineandroid.model.Group: java.lang.String getHref()
org.simpleframework.xml.core.MethodContact: java.lang.annotation.Annotation getAnnotation(java.lang.Class)
org.jaudiotagger.tag.images.Artwork: java.lang.Object getImage()
com.caij.puremusic.dialogs.BlacklistFolderChooserDialog: BlacklistFolderChooserDialog()
org.jaudiotagger.audio.wav.WavTagWriter: void deleteId3TagChunk(java.nio.channels.FileChannel,org.jaudiotagger.tag.wav.WavTag,org.jaudiotagger.audio.iff.ChunkHeader)
org.simpleframework.xml.core.ElementMapUnionParameter: java.lang.String getName()
org.jaudiotagger.tag.id3.framebody.FrameBodyTRDA: FrameBodyTRDA(org.jaudiotagger.tag.id3.framebody.FrameBodyTRDA)
org.jaudiotagger.audio.ogg.OggVorbisTagWriter: void writeRemainingPages(int,java.io.RandomAccessFile,java.io.RandomAccessFile)
com.tencent.mm.opensdk.modelbiz.WXChannelJumpUrlInfo: boolean checkArgs()
com.google.android.material.appbar.AppBarLayout: int getLiftOnScrollTargetViewId()
org.jaudiotagger.tag.datatype.EventTimingCode: boolean equals(java.lang.Object)
com.umeng.analytics.pro.an: com.umeng.analytics.pro.an$e e(int)
nl.adaptivity.xmlutil.core.XmlVersion: nl.adaptivity.xmlutil.core.XmlVersion[] $values()
org.jaudiotagger.tag.id3.framebody.FrameBodyTMED: FrameBodyTMED(org.jaudiotagger.tag.id3.framebody.FrameBodyTMED)
org.simpleframework.xml.stream.StreamReader$Text: java.lang.String getValue()
org.simpleframework.xml.transform.GregorianCalendarTransform: java.util.GregorianCalendar read(java.lang.String)
com.caij.puremusic.db.model.SongQueries$SongQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
com.caij.puremusic.drive.model.PlexSongsResponse$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.google.android.material.imageview.ShapeableImageView: float getStrokeWidth()
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String)
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: byte getStreamCount()
org.simpleframework.xml.core.CompositeMap: java.lang.Object populate(org.simpleframework.xml.stream.InputNode,java.lang.Object)
com.tencent.mm.opensdk.diffdev.a.a: a()
com.tencent.mm.opensdk.modelbiz.AddCardToWXCardPackage$Resp: int getType()
me.tankery.lib.circularseekbar.CircularSeekBar: float getStartAngle()
org.jaudiotagger.tag.id3.ID3v23Frame$StatusFlags: ID3v23Frame$StatusFlags(org.jaudiotagger.tag.id3.ID3v23Frame,org.jaudiotagger.tag.id3.ID3v24Frame$StatusFlags)
com.caij.puremusic.model.Genre$Creator: com.caij.puremusic.model.Genre[] newArray(int)
com.umeng.analytics.pro.ci: void d()
org.jaudiotagger.tag.id3.framebody.FrameBodySYTC: void addTempo(long,int)
org.jaudiotagger.audio.asf.data.ContainerType: boolean isMultiValued()
org.simpleframework.xml.core.AttributeLabel: java.lang.String toString()
com.umeng.commonsdk.statistics.proto.d$d: d$d(com.umeng.commonsdk.statistics.proto.d$1)
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledVerticalScrollFactor(android.view.ViewConfiguration)
com.thegrizzlylabs.sardineandroid.impl.SardineException: java.lang.String getResponsePhrase()
com.umeng.analytics.pro.bo: void a(java.lang.String)
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String getPath()
com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport$Result: java.util.List getResources()
org.jaudiotagger.audio.generic.GenericAudioHeader: void setPreciseLength(double)
org.simpleframework.xml.core.Composite$Builder: java.lang.Object read(org.simpleframework.xml.stream.InputNode)
androidx.mediarouter.app.OverlayListView: OverlayListView(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.drive.model.GoogleDriveFileResponse: java.util.List component4()
org.jaudiotagger.tag.id3.framebody.FrameBodyWPUB: FrameBodyWPUB(java.lang.String)
com.google.android.material.card.MaterialCardView: int getCheckedIconGravity()
com.tencent.mm.opensdk.modelpay.WXJointPay$JointPayResp: int getType()
org.jaudiotagger.tag.id3.ID3v23Frame: ID3v23Frame(java.lang.String)
org.jaudiotagger.audio.aiff.AiffTagFieldKey: org.jaudiotagger.audio.aiff.AiffTagFieldKey[] values()
org.jaudiotagger.audio.generic.AbstractTag: int getFieldCount()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
com.umeng.commonsdk.framework.UMWorkDispatch$1: UMWorkDispatch$1(android.os.Looper)
org.jaudiotagger.tag.id3.ID3v23Tag: java.lang.String getValue(org.jaudiotagger.tag.FieldKey,int)
com.caij.puremusic.drive.model.SubsonicSong: long component8()
com.thegrizzlylabs.sardineandroid.model.QuotaUsedBytes: QuotaUsedBytes()
com.umeng.analytics.pro.bf$a: void a(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.bf)
org.jaudiotagger.tag.asf.AsfTagTextField: boolean isEmpty()
org.simpleframework.xml.core.InstanceFactory: org.simpleframework.xml.core.Instance getInstance(org.simpleframework.xml.strategy.Value)
com.caij.puremusic.db.model.ServerAudioFormatQueries$getById$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyTMCL: FrameBodyTMCL(org.jaudiotagger.tag.id3.framebody.FrameBodyIPLS)
org.jaudiotagger.tag.aiff.AiffTag: boolean equals(java.lang.Object)
com.caij.puremusic.db.model.ServerLyricsQueries$deleteSongBySource$2: ServerLyricsQueries$deleteSongBySource$2()
com.caij.puremusic.drive.model.AMediaContainer: java.util.List component1()
com.caij.puremusic.util.theme.ThemeMode: ThemeMode(java.lang.String,int)
com.google.android.material.bottomsheet.BottomSheetDialog: BottomSheetDialog(android.content.Context,int)
org.jaudiotagger.tag.id3.ID3v24Frame: ID3v24Frame(java.nio.ByteBuffer,java.lang.String)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: void setActiveQueueItemId(android.media.session.PlaybackState$Builder,long)
com.bumptech.glide.MemoryCategory: float getMultiplier()
org.simpleframework.xml.core.ClassScanner: org.simpleframework.xml.core.Function getResolve()
org.jaudiotagger.tag.reference.ISOCountry$Country: java.lang.String getCode()
com.caij.puremusic.db.model.DriveFileDownUrlInfo: long getExpiration()
androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.umeng.commonsdk.statistics.common.HelperUtils: void safeClose(java.io.OutputStream)
com.caij.puremusic.drive.model.SubsonicAlbum: java.lang.String component2()
com.alipay.android.app.IAlixPay: void registerCallback03(com.alipay.android.app.IRemoteServiceCallback,java.lang.String,java.util.Map)
com.caij.puremusic.model.DriveFileParcelable: int hashCode()
androidx.fragment.app.DialogFragment: android.view.View onFindViewById(int)
com.google.android.material.button.MaterialButton: int getCornerRadius()
com.caij.puremusic.drive.model.PlexPlaylistsResponse: java.lang.String toString()
com.caij.puremusic.drive.model.Metadata: java.lang.String component1()
org.jaudiotagger.tag.datatype.Pair: Pair(java.lang.Object,java.lang.Object)
com.umeng.commonsdk.statistics.proto.Response$a: void a(com.umeng.analytics.pro.bu,com.umeng.commonsdk.statistics.proto.Response)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: long write(java.io.File,long)
com.umeng.analytics.pro.w: long a()
androidx.core.view.MenuItemCompat$Api26Impl: int getAlphabeticModifiers(android.view.MenuItem)
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessView$Resp: boolean checkArgs()
com.tencent.bugly.proguard.as: void b(java.util.List)
org.jaudiotagger.audio.mp4.Mp4TagReader: org.jaudiotagger.tag.mp4.Mp4Tag read(java.io.RandomAccessFile)
com.tencent.bugly.proguard.bj: byte[] b(byte[])
org.jaudiotagger.tag.id3.framebody.FrameBodySYLT: byte[] getLyrics()
com.alipay.apmobilesecuritysdk.f.b: java.util.LinkedList a(com.alipay.apmobilesecuritysdk.f.b)
com.umeng.analytics.filter.EventList: void saveEventListToFile(android.content.Context,java.io.File)
com.caij.puremusic.appwidgets.AppWidgetBig: AppWidgetBig()
org.simpleframework.xml.core.GroupExtractor: void extract(org.simpleframework.xml.core.Extractor)
org.simpleframework.xml.core.ElementMapUnionLabel: org.simpleframework.xml.core.Contact getContact()
org.simpleframework.xml.transform.FloatTransform: java.lang.Object read(java.lang.String)
org.jaudiotagger.tag.id3.AbstractID3v2Frame: AbstractID3v2Frame(java.lang.String)
me.tankery.lib.circularseekbar.CircularSeekBar: void setProgressBasedOnAngle(float)
org.simpleframework.xml.core.Reflector: java.lang.Class[] getParameterDependents(java.lang.reflect.Method,int)
com.google.android.material.slider.Slider: android.content.res.ColorStateList getHaloTintList()
com.caij.puremusic.db.model.SongEntityQueries: app.cash.sqldelight.Query getSongEntity(long,long,kotlin.jvm.functions.Function3)
com.umeng.analytics.pro.a: java.lang.String e(java.lang.String)
org.simpleframework.xml.core.LabelExtractor$LabelBuilder: java.lang.reflect.Constructor getConstructor(java.lang.Class)
androidx.constraintlayout.core.widgets.ConstraintAnchor$Type: ConstraintAnchor$Type(java.lang.String,int)
com.caij.puremusic.drive.model.SubsonicSearchResponse: boolean equals(java.lang.Object)
com.caij.puremusic.drive.model.PlexAlbumsResponse: PlexAlbumsResponse(com.caij.puremusic.drive.model.AlbumMediaContainer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.caij.puremusic.db.model.PlaylistEntityQueries$insert$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.tag.lyrics3.Lyrics3v2Fields: org.jaudiotagger.tag.lyrics3.Lyrics3v2Fields getInstanceOf()
org.jaudiotagger.tag.TagOptionSingleton: boolean isId3v1SaveTitle()
com.bumptech.glide.load.ImageHeaderParser$ImageType: boolean hasAlpha()
com.caij.puremusic.drive.model.PlayLists$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.PlayLists)
org.simpleframework.xml.core.PrimitiveScanner: org.simpleframework.xml.core.Function getValidate()
com.caij.puremusic.db.model.Album: boolean equals(java.lang.Object)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getRippleColor()
com.caij.puremusic.model.Genre: int describeContents()
com.caij.puremusic.drive.model.AlbumSubsonicResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.caij.puremusic.db.model.Artist: java.lang.String getName()
androidx.customview.view.AbsSavedState: AbsSavedState(androidx.customview.view.AbsSavedState$1)
com.caij.puremusic.model.smartplaylist.TopTracksPlaylist: void writeToParcel(android.os.Parcel,int)
com.umeng.commonsdk.internal.utils.c: c(com.umeng.commonsdk.internal.utils.c$1)
org.simpleframework.xml.stream.OutputNodeMap: org.simpleframework.xml.stream.Node get(java.lang.String)
com.tencent.bugly.proguard.ay: void g()
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag createNewTag()
androidx.fragment.app.Fragment: int getPopEnterAnim()
com.caij.puremusic.fragments.player.plain.PlainPlayerFragment: PlainPlayerFragment()
org.simpleframework.xml.util.Dictionary: org.simpleframework.xml.util.Entry remove(java.lang.String)
com.caij.puremusic.drive.model.JellyfinLoginResponse$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: ConstraintWidget$DimensionBehaviour(java.lang.String,int)
com.caij.puremusic.drive.model.EmbyFoldersResponse: int hashCode()
androidx.customview.view.AbsSavedState: AbsSavedState(android.os.Parcelable)
me.tankery.lib.circularseekbar.CircularSeekBar: void setLockEnabled(boolean)
com.google.android.material.slider.Slider: void setTickInactiveTintList(android.content.res.ColorStateList)
org.simpleframework.xml.core.CompositeValue: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.lang.Object)
org.jaudiotagger.audio.ogg.util.OggPage: int size()
org.jcodec.containers.mp4.boxes.LoadSettingsBox: int getPreloadStartTime()
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: java.lang.String getAction(android.media.session.PlaybackState$CustomAction)
org.simpleframework.xml.transform.Matcher: org.simpleframework.xml.transform.Transform match(java.lang.Class)
com.caij.puremusic.db.model.PlaylistEntityQueries: app.cash.sqldelight.Query playlistByName(java.lang.String,kotlin.jvm.functions.Function2)
com.tencent.bugly.proguard.g: java.lang.Object clone()
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
com.tencent.bugly.proguard.aw: boolean c()
com.thegrizzlylabs.sardineandroid.model.Prop: void setPrincipalCollectionSet(com.thegrizzlylabs.sardineandroid.model.PrincipalCollectionSet)
com.google.android.material.bottomsheet.BottomSheetDialog$5: void onStateChanged(android.view.View,int)
com.caij.puremusic.db.model.SongQueries$SongsByNameArtistQuery: void removeListener(app.cash.sqldelight.Query$Listener)
org.jcodec.containers.mp4.boxes.AliasBox: int estimateSize()
androidx.appcompat.widget.Toolbar: void setLogo(int)
com.tencent.bugly.crashreport.CrashReport: void setAllThreadStackEnable(android.content.Context,boolean,boolean)
com.alipay.android.phone.mrpc.core.l: void c(long)
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean sendHandleScanResult(android.content.Context,android.os.Bundle)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyIMG: java.util.Iterator iterator()
org.simpleframework.xml.core.Caller: void commit(java.lang.Object)
org.jcodec.containers.mp4.boxes.TrakBox: org.jcodec.containers.mp4.boxes.ChunkOffsets64Box getCo64()
com.tencent.bugly.proguard.bd: com.tencent.bugly.crashreport.crash.CrashDetailBean packageCrashDatas(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,byte[],java.util.Map,boolean,boolean)
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessView$Req: WXOpenBusinessView$Req()
com.caij.puremusic.drive.model.SubsonicSong$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: void setDescription(java.lang.String)
org.jaudiotagger.audio.asf.data.GUID: boolean equals(java.lang.Object)
com.umeng.commonsdk.statistics.noise.ABTest: void parseSig7(java.lang.String)
org.jcodec.containers.mp4.boxes.Header: org.jcodec.containers.mp4.boxes.Header createHeader(java.lang.String,long)
org.simpleframework.xml.core.MethodContact: java.lang.Class getDependent()
com.caij.puremusic.drive.model.OneDriveFileResponse: java.lang.String toString()
com.tencent.bugly.BuglyStrategy: com.tencent.bugly.BuglyStrategy setCrashHandleCallback(com.tencent.bugly.BuglyStrategy$a)
org.repackage.com.meizu.flyme.openidsdk.OpenIdHelper: java.lang.String b(android.content.Context)
org.simpleframework.xml.core.DetailScanner: java.lang.String toString()
com.umeng.commonsdk.utils.FileLockUtil: FileLockUtil()
com.umeng.analytics.pro.bo: byte d(byte)
org.simpleframework.xml.core.PathParser: PathParser(java.lang.String,org.simpleframework.xml.strategy.Type,org.simpleframework.xml.stream.Format)
com.caij.puremusic.db.model.ServerLyricsQueries$clear$1: java.lang.Object invoke(java.lang.Object)
com.umeng.analytics.pro.ay: java.lang.Short i(byte[],com.umeng.analytics.pro.bc,com.umeng.analytics.pro.bc[])
org.simpleframework.xml.core.ModelList: org.simpleframework.xml.core.Model take()
com.caij.puremusic.model.DriveFileParcelable: java.lang.String getId()
org.jaudiotagger.tag.id3.valuepair.ChannelTypes: ChannelTypes()
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: java.lang.String getSoCpuAbi()
androidx.customview.widget.ViewDragHelper$Callback: boolean tryCaptureView(android.view.View,int)
com.umeng.analytics.pro.an: void a(java.io.ObjectOutputStream)
com.umeng.analytics.b: void a(android.content.Context,java.lang.String,java.util.HashMap)
com.umeng.commonsdk.debug.D: void log(java.lang.String,java.lang.String)
org.simpleframework.xml.stream.InputStack: InputStack()
androidx.viewpager.widget.ViewPager: int getCurrentItem()
com.google.common.reflect.Types$JavaVersion$4: java.lang.String typeName(java.lang.reflect.Type)
org.jaudiotagger.audio.SupportedFileFormat$14: SupportedFileFormat$14(java.lang.String,int,java.lang.String)
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10$1: void run()
com.caij.puremusic.drive.model.Media: int component4()
org.jaudiotagger.audio.dsf.ID3Chunk: ID3Chunk(java.nio.ByteBuffer)
com.caij.puremusic.drive.model.MediaInfoWrapper: java.util.ArrayList getServerSongCovers()
com.caij.puremusic.db.model.PlaylistEntityQueries$SearchPlaylistByNameQuery$execute$1: PlaylistEntityQueries$SearchPlaylistByNameQuery$execute$1(com.caij.puremusic.db.model.PlaylistEntityQueries$SearchPlaylistByNameQuery)
org.jaudiotagger.tag.datatype.MultipleTextEncodedStringNullTerminated$Values: java.util.List getList()
org.jaudiotagger.tag.id3.ID3v1TagField: ID3v1TagField(byte[])
org.jaudiotagger.tag.wav.WavTag: long getEndLocationInFileOfId3Chunk()
org.jcodec.containers.mp4.boxes.Edit: long getMediaTime()
com.google.android.material.navigationrail.NavigationRailView: int getMenuGravity()
org.simpleframework.xml.convert.Reference: int getLength()
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgramWithToken$Resp: WXLaunchMiniProgramWithToken$Resp()
com.tencent.bugly.proguard.o: void onServerStrategyChanged(com.tencent.bugly.crashreport.common.strategy.StrategyBean)
com.umeng.analytics.pro.bo: void a(long,byte[],int)
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
org.jaudiotagger.audio.mp3.MP3FileReader: org.jaudiotagger.audio.AudioFile read(java.io.File)
org.simpleframework.xml.util.WeakCache$Segment: void cache(java.lang.Object,java.lang.Object)
com.caij.puremusic.db.model.SongQueries$SongsDateLastDescQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.jaudiotagger.tag.datatype.ByteArraySizeTerminated: java.lang.String toString()
org.jaudiotagger.tag.TagOptionSingleton: org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistReadOptions getVorbisAlbumArtisReadOptions()
org.jaudiotagger.audio.mp3.MP3File: org.jaudiotagger.tag.id3.AbstractID3v2Tag getID3v2Tag()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
org.jaudiotagger.audio.exceptions.ModifyVetoException: ModifyVetoException(java.lang.String,java.lang.Throwable)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile: java.lang.String getDescription()
org.simpleframework.xml.core.Primitive: java.lang.Object readTemplate(java.lang.String,java.lang.Class)
org.simpleframework.xml.core.PrimitiveKey: java.lang.Object readElement(org.simpleframework.xml.stream.InputNode,java.lang.String)
org.jaudiotagger.tag.TagOptionSingleton: void setId3v1SaveArtist(boolean)
com.caij.puremusic.drive.model.PlaylistMetadata: java.lang.String component2()
com.umeng.analytics.pro.bf: void a(com.umeng.analytics.pro.bc,java.lang.Object)
org.simpleframework.xml.stream.OutputNode: void setComment(java.lang.String)
com.umeng.commonsdk.UMConfigureImpl: void init(android.content.Context)
com.alipay.sdk.app.AlipayResultActivity: AlipayResultActivity()
com.umeng.analytics.vshelper.b: void e(android.app.Activity)
com.caij.puremusic.db.model.SongQueries$SongsByNameArtistQuery$execute$1: SongQueries$SongsByNameArtistQuery$execute$1(com.caij.puremusic.db.model.SongQueries$SongsByNameArtistQuery)
org.simpleframework.xml.transform.CharacterArrayTransform: java.lang.Object read(char[],int)
org.jaudiotagger.audio.opus.OpusInfoReader: org.jaudiotagger.audio.ogg.util.OggPageHeader lastValidHeader(java.io.RandomAccessFile)
com.umeng.analytics.pro.a$a$a: a$a$a(android.os.IBinder)
androidx.fragment.app.Fragment: boolean getAllowEnterTransitionOverlap()
org.jaudiotagger.audio.asf.data.StreamChunk: boolean isContentEncrypted()
org.jaudiotagger.tag.asf.AsfFieldKey: java.lang.String getFieldName()
org.jaudiotagger.audio.asf.io.CountingOutputstream: void flush()
com.caij.puremusic.drive.model.Metadata$$serializer: Metadata$$serializer()
com.tencent.mm.opensdk.modelmsg.WXVideoObject: void serialize(android.os.Bundle)
com.caij.puremusic.db.model.Song: java.lang.String getAlbumName()
com.caij.puremusic.drive.model.JellyfinLoginResponse: com.caij.puremusic.drive.model.JellyfinLoginResponse copy$default(com.caij.puremusic.drive.model.JellyfinLoginResponse,java.lang.String,com.caij.puremusic.drive.model.User,int,java.lang.Object)
com.tencent.bugly.proguard.be: java.lang.String b(java.lang.String,java.lang.String)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyNumberTotal: void setTotal(java.lang.String)
androidx.constraintlayout.motion.widget.MotionLayout: void setInterpolatedProgress(float)
com.caij.puremusic.db.model.ArtistQueries: app.cash.sqldelight.Query artistById(long,kotlin.jvm.functions.Function2)
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: int getMaxBitrate()
org.simpleframework.xml.strategy.ArrayValue: java.lang.Object getValue()
androidx.fragment.app.DialogFragment: void onDestroyView()
com.umeng.commonsdk.internal.utils.k: java.lang.String b()
org.jaudiotagger.tag.lyrics3.Lyrics3v2Field: void write(java.io.RandomAccessFile)
androidx.emoji2.text.EmojiCompatInitializer: EmojiCompatInitializer()
com.caij.puremusic.db.model.SongEntityQueries$getPlayListSongCount$1: java.lang.Long invoke(app.cash.sqldelight.db.SqlCursor)
com.caij.puremusic.drive.model.PlayListsSubsonicResponse: com.caij.puremusic.drive.model.PlayLists component3()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.tencent.bugly.proguard.ap: boolean c(android.content.Context,java.lang.String)
com.caij.puremusic.db.model.PlaylistEntity: int hashCode()
org.jaudiotagger.tag.id3.ID3v24Frame: ID3v24Frame(org.jaudiotagger.tag.id3.AbstractID3v2Frame)
org.jaudiotagger.audio.real.RealTag: org.jaudiotagger.tag.TagField createCompilationField(boolean)
com.umeng.analytics.pro.bf: com.umeng.analytics.pro.bc a(short)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType valueOf(java.lang.String)
com.umeng.analytics.pro.an$c: void a(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.an)
com.caij.puremusic.drive.model.AlbumArtist: com.caij.puremusic.drive.model.AlbumArtist copy(java.lang.String,java.lang.String)
com.tencent.mm.opensdk.diffdev.a.a: void removeAllListeners()
com.caij.puremusic.network.model.LastFmTrack$Track$Wiki: LastFmTrack$Track$Wiki()
org.simpleframework.xml.core.MethodPartFactory: java.lang.String getTypeName(java.lang.String,org.simpleframework.xml.core.MethodType)
org.jaudiotagger.tag.id3.Id3SupportingTag: void setID3Tag(org.jaudiotagger.tag.id3.AbstractID3v2Tag)
com.thegrizzlylabs.sardineandroid.model.SearchRequest: void setLanguage(java.lang.String)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$State getTargetState()
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: void setUnsynchronised()
com.tencent.bugly.proguard.l: void a(double[],int)
com.caij.puremusic.drive.model.OneDriveFileResponse: boolean equals(java.lang.Object)
com.tencent.mm.opensdk.modelbiz.JoinChatroom: JoinChatroom()
org.jaudiotagger.tag.asf.AsfFieldKey: AsfFieldKey(java.lang.String,int,java.lang.String,boolean,org.jaudiotagger.audio.asf.data.ContainerType)
org.jaudiotagger.tag.TagOptionSingleton: boolean isFilenameTagSave()
com.afollestad.materialdialogs.internal.main.DialogTitleLayout: void setTitleView$core(android.widget.TextView)
org.jaudiotagger.tag.id3.ID3v24Tag: java.util.List convertFrame(org.jaudiotagger.tag.id3.AbstractID3v2Frame)
org.jcodec.containers.mp4.boxes.NodeBox: org.jcodec.containers.mp4.boxes.Box cloneBox(org.jcodec.containers.mp4.boxes.Box,int,org.jcodec.containers.mp4.IBoxFactory)
com.umeng.commonsdk.statistics.common.DataHelper: byte[] reverseHexString(java.lang.String)
com.google.android.material.bottomsheet.BottomSheetDialog$5: void onSlide(android.view.View,float)
org.simpleframework.xml.core.Variable: org.simpleframework.xml.core.Contact getContact()
com.google.gson.FieldNamingPolicy: java.lang.String upperCaseFirstLetter(java.lang.String)
androidx.appcompat.widget.SearchView: void setInputType(int)
com.caij.puremusic.drive.model.PlaylistMetadata: java.lang.String component1()
com.caij.vip.PayBodyResponse: PayBodyResponse()
org.jcodec.containers.mp4.boxes.AliasBox: java.lang.String getUnixPath()
org.jaudiotagger.tag.TagOptionSingleton: boolean isId3v1SaveComment()
org.jcodec.containers.mp4.boxes.SoundMediaHeaderBox: int estimateSize()
androidx.cardview.widget.CardView: void setUseCompatPadding(boolean)
org.jaudiotagger.tag.id3.AbstractID3v2Frame: int getFrameSizeSize()
com.umeng.commonsdk.stateless.d: java.lang.String b(java.lang.String)
org.jaudiotagger.audio.AudioFileFilter: AudioFileFilter()
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: void a(java.lang.String,com.umeng.commonsdk.statistics.internal.UMImprintChangeCallback)
org.simpleframework.xml.core.ParameterFactory$ParameterBuilder: java.lang.reflect.Constructor getConstructor(java.lang.Class)
com.caij.puremusic.drive.model.Metadata$$serializer: com.caij.puremusic.drive.model.Metadata deserialize(kotlinx.serialization.encoding.Decoder)
org.simpleframework.xml.core.ElementMapParameter: ElementMapParameter(java.lang.reflect.Constructor,org.simpleframework.xml.ElementMap,org.simpleframework.xml.stream.Format,int)
org.simpleframework.xml.ElementMap: java.lang.String value()
com.alipay.apmobilesecuritysdk.e.g: void a()
com.tencent.mm.opensdk.modelmsg.WXDynamicVideoMiniProgramObject: void serialize(android.os.Bundle)
org.jcodec.containers.mp4.boxes.MetaValue: int getType()
org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)
com.alipay.android.phone.mrpc.core.q: java.lang.Object call()
com.umeng.commonsdk.debug.SelfChecker: boolean doCheck(android.content.Context)
org.jaudiotagger.tag.mp4.field.Mp4TagByteField: Mp4TagByteField(org.jaudiotagger.tag.mp4.Mp4FieldKey,java.lang.String,int)
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: OpusVorbisIdentificationHeader(byte[])
org.jaudiotagger.tag.datatype.StringDateTime: java.lang.Object getValue()
org.simpleframework.xml.util.ConcurrentCache: boolean contains(java.lang.Object)
com.alipay.tscenter.biz.rpc.report.general.DataReportService: com.alipay.tscenter.biz.rpc.report.general.model.DataReportResult reportData(com.alipay.tscenter.biz.rpc.report.general.model.DataReportRequest)
com.umeng.commonsdk.vchannel.b: b(android.content.Context)
com.google.android.material.slider.BaseSlider: void setTrackActiveTintList(android.content.res.ColorStateList)
com.umeng.analytics.pro.h: void a(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String)
com.caij.puremusic.extensions.ViewExtensionsKt$drawNextToNavbar$1: ViewExtensionsKt$drawNextToNavbar$1()
com.alipay.android.app.IAlixPay$Stub: com.alipay.android.app.IAlixPay asInterface(android.os.IBinder)
org.jaudiotagger.audio.generic.ModificationHandler: void addAudioFileModificationListener(org.jaudiotagger.audio.generic.AudioFileModificationListener)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: ConstraintAttribute$AttributeType(java.lang.String,int)
org.simpleframework.xml.core.Function: java.lang.Object call(org.simpleframework.xml.core.Context,java.lang.Object)
com.thegrizzlylabs.sardineandroid.model.Propfind: com.thegrizzlylabs.sardineandroid.model.Propname getPropname()
com.umeng.commonsdk.statistics.b: void a()
org.simpleframework.xml.core.ParameterMap: java.util.Iterator iterator()
com.umeng.analytics.pro.an: void a(boolean)
org.jaudiotagger.tag.asf.AsfTagField: boolean isEmpty()
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean access$1300(com.google.android.material.bottomsheet.BottomSheetBehavior)
com.tencent.bugly.proguard.bu: void a(com.tencent.bugly.proguard.k)
com.tencent.bugly.proguard.aj: void a(long)
org.jaudiotagger.audio.exceptions.ModifyVetoException: ModifyVetoException(java.lang.Throwable)
androidx.fragment.app.Fragment: void restoreViewState()
org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Object,java.lang.String,boolean)
com.tencent.mm.opensdk.diffdev.a.b: b(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.tencent.mm.opensdk.diffdev.OAuthListener)
org.simpleframework.xml.core.EmptyExpression: java.lang.String getFirst()
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: com.umeng.commonsdk.statistics.idtracking.ImprintHandler getImprintService(android.content.Context)
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgramEnvironment$Resp: int getType()
com.caij.puremusic.db.model.AlbumQueries$GetAlbumByArtistIdQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.caij.puremusic.drive.model.DropboxDriveFileResponse: java.lang.String component1()
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
com.umeng.commonsdk.stateless.d$4: d$4()
com.caij.puremusic.db.model.ServerArtistCoverQueries$getById$2: ServerArtistCoverQueries$getById$2()
com.caij.puremusic.drive.model.ArtistItem$$serializer: com.caij.puremusic.drive.model.ArtistItem deserialize(kotlinx.serialization.encoding.Decoder)
com.google.android.material.appbar.CollapsingToolbarLayout: CollapsingToolbarLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.umeng.analytics.pro.ao: android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org.jcodec.containers.mp4.boxes.TrackHeaderBox: float getHeight()
com.caij.puremusic.model.UpdateInfo$ForcedUpgradeInfo: UpdateInfo$ForcedUpgradeInfo()
com.umeng.analytics.pro.k: k()
org.jcodec.containers.mp4.MP4Util$Movie: MP4Util$Movie(org.jcodec.containers.mp4.boxes.FileTypeBox,org.jcodec.containers.mp4.boxes.MovieBox,java.util.List)
com.umeng.analytics.pro.bu: com.umeng.analytics.pro.by r()
com.caij.puremusic.network.model.LastFmAlbum$Album: void setPlaycount(java.lang.String)
com.caij.puremusic.db.model.SearchAlbumResultQueries$deleteById$1: SearchAlbumResultQueries$deleteById$1(java.lang.String)
org.simpleframework.xml.stream.InputAttribute: org.simpleframework.xml.stream.Position getPosition()
com.umeng.analytics.filter.b: boolean matchHit(java.lang.String)
androidx.fragment.app.DialogFragment: android.app.Dialog access$000(androidx.fragment.app.DialogFragment)
com.caij.puremusic.drive.model.AMetadata: com.caij.puremusic.drive.model.AMetadata copy$default(com.caij.puremusic.drive.model.AMetadata,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.PathInterpolator createPathInterpolator(float,float,float,float)
com.caij.puremusic.drive.model.SubPlayList$$serializer: com.caij.puremusic.drive.model.SubPlayList deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.tag.datatype.Lyrics3TimeStamp: long getSecond()
com.google.android.material.appbar.CollapsingToolbarLayout: int getHyphenationFrequency()
org.simpleframework.xml.core.ElementUnionParameter: java.lang.String getName()
org.jaudiotagger.audio.generic.AbstractTag: java.lang.String toString()
com.caij.puremusic.drive.model.PlexLoginResponse: com.caij.puremusic.drive.model.PlexLoginResponse copy$default(com.caij.puremusic.drive.model.PlexLoginResponse,com.caij.puremusic.drive.model.PlexUser,int,java.lang.Object)
org.jaudiotagger.audio.AudioHeader: boolean isVariableBitRate()
com.caij.puremusic.drive.model.PlexSectionsResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.PlexSectionsResponse)
com.caij.puremusic.db.model.SongQueries$songsByAlumId$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
org.simpleframework.xml.core.ObjectScanner: boolean isStrict()
com.caij.puremusic.drive.model.AlbumItem$$serializer: com.caij.puremusic.drive.model.AlbumItem deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.audio.asf.data.GUID: GUID(byte[])
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: java.lang.String getImageUrl()
com.tencent.mm.opensdk.modelbiz.WXChannelOpenProfile$Req: int getType()
org.jaudiotagger.tag.id3.framebody.FrameBodyEQU2: java.lang.String getIdentifier()
org.jaudiotagger.audio.generic.AudioFileReader2: org.jaudiotagger.audio.AudioFile read(java.io.File)
com.umeng.analytics.pro.an: java.lang.String x()
org.jaudiotagger.audio.generic.Utils: java.nio.ByteBuffer readFileDataIntoBufferBE(java.nio.channels.FileChannel,int)
com.caij.puremusic.drive.model.PlaylistsMediaContainer$Companion: PlaylistsMediaContainer$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.umeng.commonsdk.statistics.idtracking.e$a: void a()
com.caij.puremusic.db.model.ServerArtistCoverQueries$deleteById$1: java.lang.Object invoke(java.lang.Object)
com.umeng.commonsdk.internal.c$3: void onGetOaid(java.lang.String)
org.simpleframework.xml.stream.OutputDocument: void remove()
com.tencent.bugly.crashreport.CrashReport: java.util.Map getSdkExtraData()
com.caij.puremusic.fragments.lyrics.ComnLyricsFragment$LyricsType: ComnLyricsFragment$LyricsType(java.lang.String,int)
com.caij.puremusic.drive.model.User: java.lang.String component3()
com.google.android.material.slider.Slider: void setTickActiveTintList(android.content.res.ColorStateList)
com.caij.puremusic.drive.model.SubsonicAlbum: SubsonicAlbum(int,java.lang.String,java.lang.String,java.lang.String,int,int,int,java.lang.String,java.lang.String,java.util.List,kotlinx.serialization.internal.SerializationConstructorMarker)
com.umeng.analytics.pro.bn: void a(com.umeng.analytics.pro.bq)
com.caij.puremusic.drive.model.AMediaContainer$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.AMediaContainer)
com.tencent.bugly.proguard.i: com.tencent.bugly.proguard.i a(long[],java.lang.String)
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale addLikelySubtags(java.lang.Object)
androidx.fragment.app.Fragment: void performAttach()
com.umeng.commonsdk.statistics.proto.a: a(java.lang.String,java.lang.String,long)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
org.jaudiotagger.audio.mp3.MP3FileWriter: void deleteTag(org.jaudiotagger.audio.AudioFile)
org.jaudiotagger.tag.images.AndroidArtwork: void setLinkedFromURL(java.lang.String)
com.caij.puremusic.drive.model.Response$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.drive.model.MediaStream$$serializer: com.caij.puremusic.drive.model.MediaStream deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.drive.model.PlayListSubsonicResponse: int hashCode()
com.thegrizzlylabs.sardineandroid.model.PrincipalCollectionSet: void setHref(java.lang.String)
com.caij.puremusic.drive.model.BaiduDriveItem: java.lang.String getServer_filename()
org.simpleframework.xml.stream.DocumentReader: org.simpleframework.xml.stream.DocumentReader$Entry attribute(org.w3c.dom.Node)
androidx.core.app.ShareCompat$Api16Impl: java.lang.String escapeHtml(java.lang.CharSequence)
com.umeng.analytics.pro.ar: void b(android.app.Activity,android.os.Bundle)
org.jaudiotagger.audio.asf.data.StreamChunk: void setTimeOffset(long)
com.tencent.bugly.BuglyStrategy: boolean isReplaceOldChannel()
com.caij.puremusic.drive.model.Prop: java.lang.String getGetlastmodified()
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentModeEndMargin()
org.xmlpull.v1.XmlPullParser: java.lang.Object getProperty(java.lang.String)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyINF: java.lang.String getAdditionalInformation()
org.simpleframework.xml.stream.DocumentProvider: DocumentProvider()
com.umeng.commonsdk.statistics.common.a: com.umeng.commonsdk.statistics.common.a$a c(android.content.Context)
org.repackage.com.meizu.flyme.openidsdk.OpenIdHelper: OpenIdHelper()
com.umeng.commonsdk.statistics.idtracking.d: d(android.content.Context)
com.thegrizzlylabs.sardineandroid.model.WriteAcl: WriteAcl()
com.caij.puremusic.drive.model.ADriveFileResponse$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.jaudiotagger.audio.asf.data.MetadataDescriptor: int getCurrentAsfSize(org.jaudiotagger.audio.asf.data.ContainerType)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: int getLevel()
org.jaudiotagger.tag.id3.AbstractID3Tag: AbstractID3Tag(org.jaudiotagger.tag.id3.AbstractID3Tag)
com.tencent.mm.opensdk.modelmsg.SendAuth$Resp: SendAuth$Resp(android.os.Bundle)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: int getIndexedColourCount()
org.jaudiotagger.logging.XMLTagDisplayFormatter: java.lang.String replaceXMLCharacters(java.lang.String)
org.jaudiotagger.logging.XMLTagDisplayFormatter: XMLTagDisplayFormatter()
com.umeng.commonsdk.framework.UMEnvelopeBuild: long getLastSuccessfulBuildTime(android.content.Context)
com.caij.puremusic.db.model.PlayCountEntityQueries$checkSongExistInPlayCount$1: PlayCountEntityQueries$checkSongExistInPlayCount$1(kotlin.jvm.functions.Function3)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnRefreshListener(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener)
com.google.android.material.textfield.TextInputLayout: int getMinEms()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: long getNoOfSamples()
org.jcodec.containers.mp4.boxes.Edit: void shift(long)
com.umeng.commonsdk.statistics.AnalyticsConstants: void setDeviceType(int)
com.umeng.commonsdk.framework.UMFrUtils: boolean isOnline(android.content.Context)
com.umeng.analytics.pro.ao: ao(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)
org.simpleframework.xml.core.Instantiator: java.util.List getCreators()
com.tencent.bugly.BuglyStrategy: com.tencent.bugly.BuglyStrategy setEnableANRCrashMonitor(boolean)
org.simpleframework.xml.core.Persister: Persister(java.util.Map)
org.jaudiotagger.tag.id3.framebody.FrameBodyMVIN: FrameBodyMVIN(org.jaudiotagger.tag.id3.framebody.FrameBodyMVIN)
com.umeng.analytics.pro.bo: void b()
com.umeng.analytics.pro.e$c$b: e$c$b()
com.tencent.mmkv.MMKV: int pageSize()
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior(android.content.Context,android.util.AttributeSet)
com.umeng.commonsdk.statistics.proto.a: com.umeng.commonsdk.statistics.proto.a a(long)
com.caij.puremusic.drive.model.AlbumListResponse: com.caij.puremusic.drive.model.AlbumListResponse copy$default(com.caij.puremusic.drive.model.AlbumListResponse,com.caij.puremusic.drive.model.SubsonicResponse,int,java.lang.Object)
com.caij.puremusic.drive.model.AlbumMediaContainer$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
org.simpleframework.xml.core.ValueRequiredException: ValueRequiredException(java.lang.String,java.lang.Object[])
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: boolean isNodeDescendant(org.jaudiotagger.utils.tree.DefaultMutableTreeNode)
org.json.alipay.c: java.lang.String a(int)
com.caij.puremusic.drive.model.ImageTags$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.tencent.mm.opensdk.modelbiz.OpenBusiLuckyMoney$Req: int getType()
org.simpleframework.xml.core.TextListLabel: org.simpleframework.xml.core.Converter getConverter(org.simpleframework.xml.core.Context)
org.jcodec.containers.mp4.boxes.GamaExtension: org.jcodec.containers.mp4.boxes.GamaExtension createGamaExtension(float)
com.caij.puremusic.drive.model.EmbyAlbumsResponse: int component3()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockHeader: byte[] getBytesWithoutIsLastBlockFlag()
com.alipay.sdk.m.x.e: void setChromeProxy(com.alipay.sdk.m.x.e$f)
org.simpleframework.xml.core.PathParser: void element()
org.jaudiotagger.audio.wav.WavTagWriter: java.nio.ByteBuffer convertInfoChunk(org.jaudiotagger.tag.wav.WavTag)
com.umeng.analytics.pro.o: void d()
org.simpleframework.xml.core.ArrayFactory: org.simpleframework.xml.core.Instance getInstance(org.simpleframework.xml.strategy.Value,java.lang.Class)
androidx.core.os.CancellationSignal$Api16Impl: void cancel(java.lang.Object)
org.simpleframework.xml.stream.OutputNode: void setData(boolean)
com.caij.puremusic.db.model.ServerArtistCoverQueries$deleteById$2: void invoke(kotlin.jvm.functions.Function1)
com.caij.puremusic.db.model.SongEntityQueries$insert$2: java.lang.Object invoke(java.lang.Object)
com.umeng.umzid.c: java.lang.String b(android.content.Context)
org.jaudiotagger.tag.wav.WavInfoTag: void setEndLocationInFile(long)
org.jaudiotagger.tag.id3.framebody.FrameBodyUnsupported: FrameBodyUnsupported(org.jaudiotagger.tag.id3.framebody.FrameBodyUnsupported)
com.caij.puremusic.drive.model.OneDriveFileResponse: void getCount$annotations()
com.caij.puremusic.drive.model.PlayLists$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.drive.model.ArtistItem: java.lang.String component6()
org.jaudiotagger.logging.PlainTextTagDisplayFormatter: void closeHeadingElement(java.lang.String)
com.caij.puremusic.fragments.search.Filter: com.caij.puremusic.fragments.search.Filter valueOf(java.lang.String)
com.alipay.apmobilesecuritysdk.face.APSecuritySdk: android.content.Context a(com.alipay.apmobilesecuritysdk.face.APSecuritySdk)
com.google.android.material.navigation.NavigationBarMenuView: android.content.res.ColorStateList getItemActiveIndicatorColor()
com.caij.puremusic.db.model.SongQueries$SongsByInfoQuery$execute$1: java.lang.Object invoke(java.lang.Object)
com.umeng.commonsdk.stateless.d: boolean b(android.content.Context,java.lang.String,java.lang.String,byte[])
androidx.core.view.PointerIconCompat$Api24Impl: android.view.PointerIcon create(android.graphics.Bitmap,float,float)
com.caij.puremusic.db.model.PlaylistEntityQueries$PlaylistByNameQuery: java.lang.String getPlaylistName()
com.yalantis.ucrop.view.widget.HorizontalProgressWheelView: void setMiddleLineColor(int)
org.jaudiotagger.tag.wav.WavTag: java.lang.String getFirst(org.jaudiotagger.tag.FieldKey)
com.caij.puremusic.drive.model.Directory: java.lang.String getType()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
org.jaudiotagger.tag.datatype.PartOfSet$PartOfSetValue: void setRawValue(java.lang.String)
org.jcodec.containers.mp4.boxes.DataInfoBox: org.jcodec.containers.mp4.boxes.DataInfoBox createDataInfoBox()
com.google.android.material.appbar.CollapsingToolbarLayout: void setHyphenationFrequency(int)
org.jcodec.containers.mp4.MP4Util: org.jcodec.containers.mp4.boxes.MovieBox parseMovieChannel(java.nio.channels.FileChannel)
androidx.appcompat.widget.AppCompatCheckedTextView: void setEmojiCompatEnabled(boolean)
com.umeng.commonsdk.statistics.internal.c: byte[] a(byte[],java.lang.String)
androidx.fragment.app.Fragment: boolean performOptionsItemSelected(android.view.MenuItem)
org.simpleframework.xml.stream.InputElement: org.simpleframework.xml.stream.InputNode getNext()
com.umeng.analytics.filter.EventList: void setMD5ClearFlag(boolean)
com.caij.puremusic.drive.model.Multistatus$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.simpleframework.xml.core.Introspector: java.lang.String getRoot(java.lang.Class)
org.simpleframework.xml.core.PathParser$PathSection: java.lang.String getAttribute(java.lang.String)
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies: CycleDetectingLockFactory$Policies(java.lang.String,int,com.google.common.util.concurrent.CycleDetectingLockFactory$1)
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: java.lang.String getDescription()
com.umeng.analytics.pro.y: long a(android.content.Context,java.lang.String)
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query getSongBySource(long)
com.google.common.hash.LittleEndianByteArray$UnsafeByteArray$2: void putLongLittleEndian(byte[],int,long)
com.caij.puremusic.network.model.SearchResponse: com.caij.puremusic.network.model.ArtistWrapper getAlbums()
com.caij.puremusic.model.CategoryInfo: boolean getVisible()
com.umeng.analytics.pro.ad$a: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
com.umeng.commonsdk.utils.UMUtils: java.lang.String readStreamToString(java.io.InputStream)
com.tencent.bugly.proguard.aj: void run()
org.jcodec.containers.mp4.boxes.ChunkOffsets64Box: long[] getChunkOffsets()
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$getById$1: DriveFileDownUrlInfoQueries$getById$1(kotlin.jvm.functions.Function4)
com.umeng.analytics.pro.bn: java.nio.ByteBuffer A()
com.thegrizzlylabs.sardineandroid.impl.handler.VoidResponseHandler: VoidResponseHandler()
com.tencent.bugly.proguard.ac: android.content.Context a(com.tencent.bugly.proguard.ac)
me.zhanghai.android.fastscroll.FastScrollScrollView: me.zhanghai.android.fastscroll.FastScroller$ViewHelper getViewHelper()
com.caij.puremusic.drive.model.AlbumItem: java.util.List component8()
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgram$Resp: WXPreloadMiniProgram$Resp(android.os.Bundle)
com.yalantis.ucrop.view.TransformImageView: com.yalantis.ucrop.model.ExifInfo getExifInfo()
org.simpleframework.xml.core.PrimitiveScanner$EmptySection: PrimitiveScanner$EmptySection(org.simpleframework.xml.core.Scanner)
com.caij.puremusic.drive.model.Auth2Token: long getExpires_in()
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior(android.content.Context,android.util.AttributeSet)
com.umeng.commonsdk.utils.c: boolean a()
org.jcodec.containers.mp4.boxes.MediaHeaderBox: int getTimescale()
com.umeng.analytics.pro.bn: void a(com.umeng.analytics.pro.bp)
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status valueOf(java.lang.String)
org.jaudiotagger.audio.mp4.Chunk: void trimTail(long)
org.jcodec.containers.mp4.boxes.Box: java.lang.String[] path(java.lang.String)
org.jcodec.containers.mp4.boxes.FielExtension: FielExtension(org.jcodec.containers.mp4.boxes.Header)
com.umeng.analytics.pro.o$d: java.util.Map a()
org.jaudiotagger.tag.aiff.AiffTag: java.util.Iterator getFields()
com.alipay.sdk.m.r.a: com.alipay.sdk.m.r.a a(java.lang.String)
org.simpleframework.xml.convert.ConverterScanner: org.simpleframework.xml.convert.Convert getConvert(java.lang.Class)
org.jaudiotagger.tag.datatype.AbstractIntStringValuePair: void createMaps()
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken valueOf(java.lang.String)
org.jaudiotagger.tag.images.StandardArtwork: void setDescription(java.lang.String)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
com.caij.puremusic.db.model.ServerSongCoverQueries$GetBySourceQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.tencent.mm.opensdk.modelmsg.WXEmojiObject: int type()
org.simpleframework.xml.util.ConcurrentCache: java.lang.Object take(java.lang.Object)
com.caij.puremusic.drive.model.PlaylistMetadata: com.caij.puremusic.drive.model.PlaylistMetadata copy$default(com.caij.puremusic.drive.model.PlaylistMetadata,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
org.jaudiotagger.tag.id3.ID3v1Tag: java.lang.String getFirstAlbum()
com.google.android.material.chip.ChipGroup: void setSingleLine(int)
com.umeng.analytics.MobclickAgent: void setFirstLaunchEvent(android.content.Context,java.util.List)
org.jaudiotagger.tag.reference.ISOScript: ISOScript()
com.caij.puremusic.drive.model.Auth2Token: java.lang.String getRefresh_token()
com.umeng.analytics.pro.f: void a(android.database.sqlite.SQLiteDatabase)
org.jaudiotagger.tag.datatype.Lyrics3Line: void addTimeStamp(org.jaudiotagger.tag.datatype.Lyrics3TimeStamp)
com.umeng.analytics.vshelper.b: void c(android.app.Activity)
org.simpleframework.xml.stream.EventToken: java.lang.String getReference()
com.umeng.commonsdk.statistics.proto.a: com.umeng.analytics.pro.bc fieldForId(int)
com.caij.puremusic.drive.model.PlexSongsResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.PlexSongsResponse)
org.simpleframework.xml.core.ElementParameter: java.lang.String toString()
com.umeng.commonsdk.internal.utils.c: boolean a()
com.google.android.material.slider.BaseSlider: void setActiveThumbIndex(int)
org.jaudiotagger.tag.datatype.StringFixedLength: byte[] writeByteArray()
org.jaudiotagger.audio.iff.IffHeaderChunk: IffHeaderChunk()
org.jcodec.containers.mp4.boxes.EsdsBox: java.lang.Integer getNumberOfChannels()
com.umeng.commonsdk.UMConfigureImpl: void removeInterruptFlag()
com.tencent.mm.opensdk.modelbiz.WXChannelJumpMiniProgramInfo: boolean checkArgs()
com.caij.puremusic.drive.model.Prop$$serializer: Prop$$serializer()
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
org.jaudiotagger.tag.id3.ID3v22Frame: void setEncoding(java.nio.charset.Charset)
org.simpleframework.xml.strategy.Contract: java.lang.String getReference()
com.umeng.commonsdk.framework.a: int b()
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
com.tencent.mm.opensdk.modelbiz.WXChannelShareVideo$Resp: void toBundle(android.os.Bundle)
org.jaudiotagger.audio.SupportedFileFormat$6: SupportedFileFormat$6(java.lang.String,int,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
org.jaudiotagger.audio.iff.ChunkSummary: void setChunkSize(long)
org.simpleframework.xml.stream.OutputNodeMap: org.simpleframework.xml.stream.OutputNode remove(java.lang.String)
org.simpleframework.xml.core.ElementListLabel: boolean isRequired()
com.umeng.commonsdk.statistics.idtracking.a: boolean g()
com.alipay.apmobilesecuritysdk.e.f: void d(java.lang.String)
com.umeng.analytics.pro.bo: byte u()
com.google.android.material.chip.Chip: void setCloseIconContentDescription(java.lang.CharSequence)
com.google.android.material.textfield.TextInputLayout: void setExpandedHintEnabled(boolean)
androidx.core.view.accessibility.AccessibilityEventCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
com.google.common.io.Files$FilePredicate$2: java.lang.String toString()
org.jaudiotagger.tag.wav.WavTag: void setField(org.jaudiotagger.tag.images.Artwork)
com.google.android.material.textfield.TextInputLayout: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.umeng.analytics.pro.o: void r()
com.caij.puremusic.drive.model.Type: com.caij.puremusic.drive.model.Type copy$default(com.caij.puremusic.drive.model.Type,java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object)
org.jaudiotagger.audio.flac.FlacTagWriter$MetadataBlockInfo: java.util.List access$400(org.jaudiotagger.audio.flac.FlacTagWriter$MetadataBlockInfo)
com.caij.puremusic.db.model.SongEntityQueries$GetSongEntityQuery: long getSongId()
com.caij.puremusic.fragments.player.simple.SimplePlaybackControlsFragment: SimplePlaybackControlsFragment()
com.google.android.material.textfield.TextInputLayout: int getHintCurrentCollapsedTextColor()
com.umeng.commonsdk.statistics.proto.c: boolean j()
com.google.common.reflect.Types$JavaVersion: Types$JavaVersion(java.lang.String,int,com.google.common.reflect.Types$1)
com.caij.puremusic.db.model.SearchAlbumResultQueries$getById$2: SearchAlbumResultQueries$getById$2()
org.jaudiotagger.tag.datatype.PartOfSet: java.lang.String toString()
com.caij.puremusic.drive.model.PlayLists: PlayLists()
com.google.android.material.bottomsheet.BottomSheetBehavior$4: BottomSheetBehavior$4(com.google.android.material.bottomsheet.BottomSheetBehavior)
com.caij.puremusic.db.model.FolderQueries$selectAll$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$IWXSceneDataObject: void unserialize(android.os.Bundle)
org.jaudiotagger.audio.generic.Utils: java.lang.String getBaseFilenameForTempFile(java.io.File)
org.jaudiotagger.tag.id3.framebody.FrameBodyEQU2: FrameBodyEQU2(java.nio.ByteBuffer,int)
com.caij.puremusic.drive.model.Location$$serializer: com.caij.puremusic.drive.model.Location deserialize(kotlinx.serialization.encoding.Decoder)
com.umeng.commonsdk.UMInnerImpl$2: UMInnerImpl$2(android.content.Context)
androidx.appcompat.app.AppCompatDialog: AppCompatDialog(android.content.Context)
androidx.core.view.ViewCompat$Api26Impl: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
org.simpleframework.xml.stream.OutputBuffer: void write(java.io.Writer)
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: ID3v24Frame$EncodingFlags(org.jaudiotagger.tag.id3.ID3v24Frame,byte)
com.caij.puremusic.db.model.SongQueries$delete$1: SongQueries$delete$1(long)
com.google.android.material.textfield.TextInputLayout: void setEndIconMinSize(int)
org.jcodec.containers.mp4.boxes.MetaValue: int toInt32(byte[])
org.simpleframework.xml.Serializer: java.lang.Object read(java.lang.Object,java.lang.String)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: java.util.EnumSet getTaggers()
org.jaudiotagger.tag.datatype.Lyrics3Line: Lyrics3Line(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody)
org.jcodec.containers.mp4.boxes.MovieFragmentBox: void setMovie(org.jcodec.containers.mp4.boxes.MovieBox)
org.jcodec.containers.mp4.boxes.TimeToSampleBox: java.lang.String fourcc()
com.alipay.android.phone.mrpc.core.w: w()
okhttp3.internal.http2.ConnectionShutdownException: ConnectionShutdownException()
com.caij.puremusic.drive.model.PlaylistsMediaContainer: PlaylistsMediaContainer(java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.tencent.mm.opensdk.modelbiz.WXChannelOpenLive$Req: void toBundle(android.os.Bundle)
org.jaudiotagger.tag.id3.ID3v22Frame: int getFrameHeaderSize()
com.umeng.commonsdk.statistics.noise.Defcon: void setLevel(int)
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.drive.model.GoogleDriveFileResponse: java.lang.String component1()
org.jaudiotagger.tag.mp4.Mp4TagField: org.jaudiotagger.tag.mp4.field.Mp4FieldType getFieldType()
org.jaudiotagger.tag.id3.ID3v1TagField: ID3v1TagField(java.lang.String,java.lang.String)
com.afollestad.materialdialogs.internal.message.DialogContentLayout: com.afollestad.materialdialogs.internal.list.DialogRecyclerView getRecyclerView()
androidx.fragment.app.Fragment: void onMultiWindowModeChanged(boolean)
com.caij.puremusic.drive.model.SubsonicSong: SubsonicSong(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,long,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
code.name.monkey.appthemehelper.common.prefs.supportv7.ATESeekBarPreference: ATESeekBarPreference(android.content.Context,android.util.AttributeSet,int,int)
com.caij.puremusic.drive.model.OneDriveFile$$serializer: com.caij.puremusic.drive.model.OneDriveFile deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.tag.id3.valuepair.EventTimingTimestampTypes: org.jaudiotagger.tag.id3.valuepair.EventTimingTimestampTypes getInstanceOf()
me.tankery.lib.circularseekbar.CircularSeekBar: void setPointerStrokeWidth(float)
io.ktor.client.plugins.contentnegotiation.ContentNegotiation$convertRequest$serializedContent$2: ContentNegotiation$convertRequest$serializedContent$2()
com.umeng.commonsdk.statistics.proto.Response$e: Response$e(java.lang.String,int,short,java.lang.String)
com.caij.puremusic.drive.model.OneDriveFile$Companion: kotlinx.serialization.KSerializer serializer()
org.jaudiotagger.audio.mp3.MP3AudioHeader: java.lang.String getEmphasis()
org.jaudiotagger.tag.images.AndroidArtwork: void setWidth(int)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: org.jaudiotagger.utils.tree.DefaultMutableTreeNode getNextLeaf()
com.caij.puremusic.drive.model.AMetadata: java.lang.String component1()
org.simpleframework.xml.core.PrimitiveKey: void writeAttribute(org.simpleframework.xml.stream.OutputNode,java.lang.Object)
com.caij.puremusic.model.DriveFileParcelable: java.lang.String getUrl()
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
org.jaudiotagger.audio.ogg.VorbisVersion: org.jaudiotagger.audio.ogg.VorbisVersion[] values()
org.jaudiotagger.tag.datatype.Lyrics3TimeStamp: boolean equals(java.lang.Object)
nl.adaptivity.xmlutil.serialization.XML$QNamePresentException: XML$QNamePresentException()
com.google.android.material.chip.ChipGroup: int getCheckedChipId()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: int getColourDepth()
com.caij.puremusic.drive.model.PlexSongsResponse: int hashCode()
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: BottomSheetBehavior$SavedState(android.os.Parcelable,int)
com.umeng.commonsdk.framework.a: void h()
org.jaudiotagger.audio.generic.AudioFileWriter: void writeTag(org.jaudiotagger.audio.AudioFile,org.jaudiotagger.tag.Tag,java.io.RandomAccessFile,java.io.RandomAccessFile)
org.jaudiotagger.audio.generic.AbstractTag: void deleteField(java.lang.String)
com.tencent.bugly.proguard.aq: void a(java.lang.String)
com.umeng.commonsdk.utils.UMUtils: boolean isAppInstalled(android.content.Context,java.lang.String)
com.afollestad.materialdialogs.color.view.ColorCircleView: void setColor(int)
com.caij.puremusic.drive.model.Metadata: void write$Self(com.caij.puremusic.drive.model.Metadata,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.caij.puremusic.drive.model.ADriveItem: java.lang.Long getSize()
com.google.android.gms.internal.play_billing.zzaw: zzaw()
com.alipay.android.phone.mrpc.core.z: java.lang.Object a(java.lang.reflect.Method,java.lang.Object[])
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: void b(java.lang.String,com.umeng.commonsdk.statistics.internal.UMImprintChangeCallback)
org.jaudiotagger.tag.datatype.BooleanByte: java.lang.String toString()
org.jaudiotagger.tag.id3.ID3Tags: java.lang.String convertFrameID23To22(java.lang.String)
org.jaudiotagger.tag.reference.ISOScript$Script: java.lang.String access$000(org.jaudiotagger.tag.reference.ISOScript$Script)
org.jaudiotagger.tag.images.ArtworkFactory: org.jaudiotagger.tag.images.Artwork createArtworkFromMetadataBlockDataPicture(org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture)
android.support.v4.media.RatingCompat$Api19Impl: boolean isRated(android.media.Rating)
org.simpleframework.xml.core.MethodPart: java.lang.annotation.Annotation getAnnotation()
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPadding: int getLength()
com.caij.puremusic.drive.model.WebDAVToken: com.caij.puremusic.drive.model.WebDAVToken copy(java.lang.String,java.lang.String,java.lang.String)
com.caij.puremusic.drive.model.Media: void write$Self(com.caij.puremusic.drive.model.Media,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.caij.puremusic.drive.model.Auth2Token$$serializer: com.caij.puremusic.drive.model.Auth2Token deserialize(kotlinx.serialization.encoding.Decoder)
com.google.android.material.appbar.MaterialToolbar: void setSubtitleCentered(boolean)
org.jcodec.containers.mp4.boxes.MovieHeaderBox: void setDuration(long)
com.umeng.commonsdk.stateless.d$2: int a(java.io.File,java.io.File)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
com.google.common.collect.ImmutableMap: ImmutableMap()
com.caij.puremusic.drive.model.MediaContainer: java.lang.String toString()
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostResumed(android.app.Activity)
org.simpleframework.xml.core.DefaultScanner: java.lang.Class getType()
com.caij.puremusic.drive.model.SongItem: java.lang.String component7()
org.jaudiotagger.audio.asf.io.AsfExtHeaderModifier: AsfExtHeaderModifier(java.util.List)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: java.lang.String getFieldName()
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
com.umeng.analytics.MobclickAgent: void onProfileSignOff()
androidx.preference.internal.PreferenceImageView: void setMaxHeight(int)
org.simpleframework.xml.core.DefaultDetail: java.lang.String getName()
com.umeng.analytics.pro.bo: int c(int)
org.simpleframework.xml.stream.StreamProvider: org.simpleframework.xml.stream.EventReader provide(java.io.InputStream)
com.caij.puremusic.drive.model.OneDriveFile: boolean equals(java.lang.Object)
org.jaudiotagger.tag.asf.AbstractAsfTagImageField: AbstractAsfTagImageField(org.jaudiotagger.tag.asf.AsfFieldKey)
org.jcodec.containers.mp4.boxes.TrakBox: long getMediaDuration()
com.umeng.commonsdk.statistics.proto.b$c: void a(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
com.caij.puremusic.db.model.PlaylistEntityQueries$deleteById$1: java.lang.Object invoke(java.lang.Object)
com.google.android.datatransport.Priority: Priority(java.lang.String,int)
com.caij.puremusic.drive.model.BaiduDriveItem: java.lang.String component2()
com.tencent.bugly.proguard.ab: java.lang.String d()
org.jaudiotagger.tag.id3.ID3v23Tag: ID3v23Tag(org.jaudiotagger.tag.id3.AbstractTag)
com.tencent.bugly.proguard.af: java.net.HttpURLConnection a(java.lang.String,java.lang.String)
org.jaudiotagger.audio.generic.GenericTag$GenericTagTextField: void isBinary(boolean)
org.jaudiotagger.utils.IntArrayList: int get(int)
com.caij.puremusic.drive.model.AlbumMediaContainer: AlbumMediaContainer()
com.google.android.material.bottomsheet.BottomSheetDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)
androidx.core.widget.TextViewCompat$Api23Impl: int getBreakStrategy(android.widget.TextView)
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: java.lang.String getNativeLog()
org.simpleframework.xml.stream.DocumentReader$Entry: java.lang.String getValue()
com.google.android.material.navigation.NavigationBarMenuView: int getWindowAnimations()
androidx.window.layout.SidecarAdapter$translate$checkedFeature$4: SidecarAdapter$translate$checkedFeature$4()
org.jaudiotagger.audio.asf.data.AsfHeader: org.jaudiotagger.audio.asf.data.ContentDescription getContentDescription()
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.umeng.commonsdk.UMInnerImpl: UMInnerImpl()
com.caij.puremusic.activities.tageditor.AbsTagEditorActivity: AbsTagEditorActivity()
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
org.simpleframework.xml.core.ElementUnionLabel: java.lang.String getPath()
com.umeng.analytics.pro.av: void write(com.umeng.analytics.pro.bu)
org.simpleframework.xml.core.ElementListParameter: java.lang.annotation.Annotation getAnnotation()
com.google.android.material.card.MaterialCardView: void setStrokeWidth(int)
com.google.android.material.progressindicator.BaseProgressIndicator: void setVisibilityAfterHide(int)
com.caij.puremusic.model.UpdateInfo$1: java.lang.Object createFromParcel(android.os.Parcel)
com.caij.puremusic.drive.model.OneDriveItem: java.lang.String component2()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,android.widget.TextView,android.text.TextPaint)
com.google.android.material.textfield.TextInputLayout: int getStartIconMinSize()
com.thegrizzlylabs.sardineandroid.util.SardineUtil: org.w3c.dom.Element createElement(javax.xml.namespace.QName)
org.jcodec.containers.mp4.boxes.Box: org.jcodec.containers.mp4.boxes.Box asBox(java.lang.Class,org.jcodec.containers.mp4.boxes.Box)
org.simpleframework.xml.core.CacheParameter: boolean isRequired()
com.umeng.analytics.pro.bo: byte e(byte)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
com.umeng.commonsdk.statistics.proto.e: e(com.umeng.commonsdk.statistics.proto.e)
com.umeng.commonsdk.statistics.proto.b$c: b$c()
org.simpleframework.xml.core.CompositeValue: boolean validate(org.simpleframework.xml.stream.InputNode)
org.jcodec.containers.mp4.boxes.Header: byte[] readContents(java.io.InputStream)
org.repackage.com.vivo.identifier.IdentifierIdClient: IdentifierIdClient()
org.simpleframework.xml.stream.OutputAttribute: java.lang.String getPrefix()
org.jaudiotagger.tag.mp4.field.Mp4TagCoverField: Mp4TagCoverField()
com.caij.puremusic.model.AbsCustomPlaylist: com.caij.puremusic.repository.SongRepository getSongRepository()
com.umeng.analytics.pro.c: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory)
androidx.activity.OnBackPressedDispatcher$Api33Impl: android.window.OnBackInvokedCallback createOnBackInvokedCallback(java.lang.Runnable)
org.simpleframework.xml.core.ElementLabel: ElementLabel(org.simpleframework.xml.core.Contact,org.simpleframework.xml.Element,org.simpleframework.xml.stream.Format)
org.simpleframework.xml.core.Support: org.simpleframework.xml.core.ContactList getFields(java.lang.Class,org.simpleframework.xml.DefaultType)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: void setTitle(android.media.MediaDescription$Builder,java.lang.CharSequence)
com.google.android.material.slider.Slider: void setTrackActiveTintList(android.content.res.ColorStateList)
org.jaudiotagger.tag.id3.framebody.FrameBodySYLT: java.lang.String getLanguage()
org.simpleframework.xml.core.NamespaceDecorator: void decorate(org.simpleframework.xml.stream.OutputNode,org.simpleframework.xml.core.Decorator)
org.jaudiotagger.utils.EqualsUtil: boolean areEqual(long,long)
org.simpleframework.xml.filter.MapFilter: MapFilter(java.util.Map,org.simpleframework.xml.filter.Filter)
com.umeng.commonsdk.statistics.proto.c: com.umeng.commonsdk.statistics.proto.c a()
com.thegrizzlylabs.sardineandroid.DavResource: java.lang.String getContentLanguage()
org.jaudiotagger.audio.asf.io.ChunkReader: org.jaudiotagger.audio.asf.data.Chunk read(org.jaudiotagger.audio.asf.data.GUID,java.io.InputStream,long)
com.caij.puremusic.db.model.Song: java.lang.String toString()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyAUT: java.lang.String getIdentifier()
com.caij.puremusic.db.model.PlayCountEntity: boolean equals(java.lang.Object)
org.simpleframework.xml.core.AnnotationFactory: boolean isPrimitiveKey(java.lang.Class[])
org.simpleframework.xml.core.MethodPart: java.lang.String toString()
com.caij.puremusic.drive.model.BaiduDriveItem: long component1()
com.umeng.commonsdk.statistics.proto.d: java.lang.String i()
nl.adaptivity.xmlutil.serialization.OutputKind: OutputKind(java.lang.String,int)
com.umeng.analytics.pro.o: void f(java.lang.Object)
org.simpleframework.xml.core.Signature: java.lang.Object create()
me.tankery.lib.circularseekbar.CircularSeekBar: void setCircleStyle(android.graphics.Paint$Cap)
com.umeng.commonsdk.statistics.common.DeviceConfig: boolean isFlyMe()
com.umeng.commonsdk.statistics.common.MLog: void i(java.lang.String,java.lang.Throwable)
com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion valueOf(java.lang.String)
com.umeng.commonsdk.stateless.b: void f()
androidx.core.widget.TextViewCompat$Api23Impl: void setHyphenationFrequency(android.widget.TextView,int)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.window.layout.SidecarAdapter$translate$checkedFeature$1: SidecarAdapter$translate$checkedFeature$1()
org.jaudiotagger.utils.IntArrayList: org.jaudiotagger.utils.IntArrayList createIntArrayList()
com.umeng.commonsdk.debug.UMRTLog: void w(java.lang.String,java.lang.String)
com.bumptech.glide.load.engine.DecodeJob$RunReason: com.bumptech.glide.load.engine.DecodeJob$RunReason[] values()
com.tencent.mm.opensdk.modelmsg.SendAuth$Resp: void toBundle(android.os.Bundle)
com.umeng.analytics.AnalyticsConfig: void turnOffRealTimeDebug()
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportAtLaunch: ReportPolicy$ReportAtLaunch()
com.caij.puremusic.drive.model.AlbumMetadata: int hashCode()
javax.xml.namespace.QName: int hashCode()
com.umeng.vt.diff.Channel$1: Channel$1(com.umeng.vt.diff.Channel,android.content.Context)
com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTypeface(android.graphics.Typeface)
com.tencent.bugly.proguard.k: void a(com.tencent.bugly.proguard.k$a)
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: void onStrategyChanged(com.tencent.bugly.crashreport.common.strategy.StrategyBean)
org.jcodec.containers.mp4.boxes.Header: Header(java.lang.String)
org.simpleframework.xml.stream.StreamReader$Start: int getLine()
org.simpleframework.xml.core.ElementMapLabel: java.lang.String getName()
com.tencent.mm.opensdk.modelbiz.WXPayInsurance$Req: WXPayInsurance$Req()
com.tencent.bugly.proguard.aq: android.content.IntentFilter a(com.tencent.bugly.proguard.aq)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: void setState(android.media.session.PlaybackState$Builder,int,long,float,long)
com.tencent.bugly.proguard.i: com.tencent.bugly.proguard.i a(byte[],java.lang.String)
com.umeng.analytics.MobclickAgent: void reportError(android.content.Context,java.lang.String)
androidx.slidingpanelayout.widget.SlidingPaneLayout: int getParallaxDistance()
org.simpleframework.xml.core.PathParser$PathSection: PathParser$PathSection(org.simpleframework.xml.core.PathParser,int,int)
org.jaudiotagger.tag.id3.AbstractID3v2Frame: org.jaudiotagger.tag.id3.framebody.AbstractID3v2FrameBody readEncryptedBody(java.lang.String,java.nio.ByteBuffer,int)
org.jaudiotagger.tag.wav.WavTag: void setExistingInfoTag(boolean)
org.simpleframework.xml.transform.PackageMatcher: org.simpleframework.xml.transform.Transform matchMath(java.lang.Class)
com.umeng.commonsdk.statistics.proto.b: boolean d()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
com.umeng.analytics.pro.u: java.lang.String e(android.content.Context)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
org.simpleframework.xml.core.ObjectScanner: org.simpleframework.xml.Version getRevision()
org.repackage.com.vivo.identifier.IdentifierIdClient$1: IdentifierIdClient$1(android.os.Looper)
androidx.mediarouter.app.MediaRouteControllerDialogFragment: MediaRouteControllerDialogFragment()
org.jaudiotagger.logging.AbstractTagDisplayFormatter: void openHeadingElement(java.lang.String,boolean)
com.thegrizzlylabs.sardineandroid.model.Prop: java.lang.String getGetlastmodified()
com.umeng.commonsdk.internal.d: org.json.JSONObject i(android.content.Context)
com.google.android.material.radiobutton.MaterialRadioButton: android.content.res.ColorStateList getMaterialThemeColorsTintList()
org.jaudiotagger.tag.TagOptionSingleton: boolean isId3v1Save()
com.umeng.commonsdk.internal.c: void f(android.content.Context)
org.jcodec.containers.mp4.boxes.TrunBox: org.jcodec.containers.mp4.boxes.TrunBox createTrunBox1(int)
com.umeng.analytics.b: void a(android.content.Context,java.lang.String,java.lang.String,long,int)
org.jcodec.containers.mp4.boxes.MovieHeaderBox: void writeFixed1616(java.nio.ByteBuffer,float)
org.jaudiotagger.tag.id3.valuepair.MusicianCredits: MusicianCredits()
com.umeng.commonsdk.framework.UMWorkDispatch: void sendDelayProcessMsg(long)
com.tencent.mm.opensdk.modelmsg.WXStateJumpChannelProfileInfo: int type()
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int getFrameLength()
org.jcodec.containers.mp4.boxes.SampleToChunkBox$SampleToChunkEntry: int getEntry()
org.jaudiotagger.audio.SupportedFileFormat$12: SupportedFileFormat$12(java.lang.String,int,java.lang.String)
com.caij.puremusic.drive.model.MediaContainer$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.alipay.android.phone.mrpc.core.g: boolean d()
com.caij.puremusic.drive.model.PlexArtistsResponse: com.caij.puremusic.drive.model.AMediaContainer component1()
com.umeng.analytics.pro.b: java.lang.String a()
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: java.lang.String getRunningCpuAbi()
com.caij.puremusic.model.Data: java.lang.String component3()
com.umeng.analytics.pro.h: boolean a(java.lang.String,android.database.sqlite.SQLiteDatabase)
com.tencent.bugly.proguard.w: java.util.List a(int)
org.simpleframework.xml.core.MethodException: MethodException(java.lang.Throwable,java.lang.String,java.lang.Object[])
code.name.monkey.appthemehelper.common.prefs.supportv7.ATEPreferenceCategory: ATEPreferenceCategory(android.content.Context,android.util.AttributeSet,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
org.simpleframework.xml.core.MethodScanner$PartMap: org.simpleframework.xml.core.MethodPart take(java.lang.String)
org.simpleframework.xml.stream.Formatter: void escape(java.lang.String)
org.simpleframework.xml.stream.StreamReader$Start: StreamReader$Start(javax.xml.stream.events.XMLEvent)
com.tencent.mm.opensdk.modelmsg.WXStateSceneDataObject: boolean checkArgs()
androidx.core.app.RemoteInput$Api26Impl: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)
com.caij.puremusic.drive.model.JellyfinSongListResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.JellyfinSongListResponse)
com.tencent.mm.opensdk.modelmsg.ShowMessageFromWX$Resp: ShowMessageFromWX$Resp(android.os.Bundle)
com.umeng.analytics.pro.bv: bv(int,java.lang.Throwable)
nl.adaptivity.xmlutil.core.KtXmlWriter$WriteState: nl.adaptivity.xmlutil.core.KtXmlWriter$WriteState[] values()
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()
org.jaudiotagger.audio.flac.FlacTagWriter: void delete(org.jaudiotagger.tag.Tag,java.nio.channels.FileChannel,java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.umeng.commonsdk.statistics.noise.ABTest: void parseFIXED(java.lang.String)
com.caij.puremusic.drive.model.AlbumResponse: boolean equals(java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyTCMP: java.lang.String getIdentifier()
org.repackage.com.meizu.flyme.openidsdk.SupportInfo: boolean a(java.lang.String)
org.jaudiotagger.tag.mp4.Mp4Tag: org.jaudiotagger.tag.TagField createCompilationField(boolean)
org.jaudiotagger.tag.datatype.EventTimingCode: void setType(int)
org.jaudiotagger.tag.mp4.Mp4Tag: void setField(org.jaudiotagger.tag.TagField)
com.umeng.analytics.pro.ch: void e()
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getDeviceIdForBox(android.content.Context)
org.simpleframework.xml.core.ParameterContact: boolean isReadOnly()
org.jcodec.containers.mp4.boxes.SampleEntry: void writeExtensions(java.nio.ByteBuffer)
com.umeng.analytics.pro.ay: java.lang.Double c(byte[],com.umeng.analytics.pro.bc,com.umeng.analytics.pro.bc[])
com.tencent.mm.opensdk.modelmsg.SendTdiAuth$Resp: void toBundle(android.os.Bundle)
com.caij.puremusic.model.CategoryInfo: java.lang.String toString()
com.umeng.commonsdk.framework.UMSenderStateNotify: void onSenderIdle()
com.umeng.commonsdk.framework.a: void onImprintValueChanged(java.lang.String,java.lang.String)
org.jaudiotagger.tag.TagField: boolean isCommon()
com.umeng.analytics.pro.aw: int a(java.lang.Object,java.lang.Object)
org.simpleframework.xml.ElementMap: boolean inline()
org.jaudiotagger.tag.id3.ID3v24Tag: boolean equals(java.lang.Object)
com.umeng.commonsdk.statistics.proto.c$c: void b(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setDistanceToTriggerSync(int)
org.jaudiotagger.audio.asf.data.AsfHeader: org.jaudiotagger.audio.asf.data.StreamBitratePropertiesChunk getStreamBitratePropertiesChunk()
org.jaudiotagger.audio.asf.data.StreamBitratePropertiesChunk: StreamBitratePropertiesChunk(java.math.BigInteger)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
org.jaudiotagger.tag.id3.framebody.FrameBodyTIT1: FrameBodyTIT1()
org.jcodec.containers.mp4.boxes.ReverseDnsBox: java.lang.String fourcc()
org.jaudiotagger.audio.asf.data.MetadataContainer: int getDescriptorCount()
com.caij.puremusic.drive.model.Directory: Directory(int,java.lang.String,java.lang.String,java.lang.String,kotlinx.serialization.internal.SerializationConstructorMarker)
com.umeng.analytics.pro.cj: int a()
org.simpleframework.xml.stream.NodeReader: org.simpleframework.xml.stream.InputNode readRoot()
com.caij.puremusic.drive.model.DavProperties: java.lang.String getModifiedDate(com.caij.puremusic.drive.model.Response)
org.simpleframework.xml.core.Group: org.simpleframework.xml.core.Label getText()
com.umeng.analytics.pro.bn: void f()
org.jaudiotagger.tag.reference.MusicalKey: java.lang.String getValue()
com.caij.puremusic.drive.model.Response: void getHref$annotations()
com.google.android.material.search.SearchView$Behavior: SearchView$Behavior(android.content.Context,android.util.AttributeSet)
com.tencent.bugly.proguard.i: com.tencent.bugly.proguard.i a(short,java.lang.String)
org.simpleframework.xml.core.TextLabel: boolean isText()
com.tencent.mm.opensdk.modelbiz.WXChannelOpenLive$Req: void fromBundle(android.os.Bundle)
com.caij.puremusic.model.DriveFileParcelable: DriveFileParcelable(java.lang.String,java.lang.String,long,long,java.lang.String,long,long,int,java.lang.String,java.lang.String,boolean)
org.simpleframework.xml.core.ParameterContact: java.lang.annotation.Annotation getAnnotation(java.lang.Class)
com.umeng.commonsdk.statistics.proto.e: boolean j()
androidx.activity.ComponentDialog: void setContentView(android.view.View)
com.google.common.hash.BloomFilterStrategies: BloomFilterStrategies(java.lang.String,int,com.google.common.hash.BloomFilterStrategies$1)
org.simpleframework.xml.core.Primitive: java.lang.Object readElement(org.simpleframework.xml.stream.InputNode,org.simpleframework.xml.core.Instance)
org.jaudiotagger.audio.asf.io.FullRequestInputStream: FullRequestInputStream(java.io.InputStream)
org.jaudiotagger.tag.id3.framebody.FrameBodyWOAF: FrameBodyWOAF(org.jaudiotagger.tag.id3.framebody.FrameBodyWOAF)
androidx.fragment.app.Fragment: void setUserVisibleHint(boolean)
androidx.fragment.app.Fragment: androidx.activity.result.ActivityResultLauncher prepareCallInternal(androidx.activity.result.contract.ActivityResultContract,androidx.arch.core.util.Function,androidx.activity.result.ActivityResultCallback)
com.umeng.commonsdk.statistics.common.ULog: void w(java.util.Locale,java.lang.String,java.lang.Object[])
com.tencent.mm.opensdk.modelmsg.WXMusicObject: void unserialize(android.os.Bundle)
com.tencent.mm.opensdk.modelbiz.SubscribeMessage$Resp: SubscribeMessage$Resp()
com.umeng.commonsdk.config.b: b(com.umeng.commonsdk.config.b$1)
com.tencent.mm.opensdk.modelbiz.HandleScanResult$Req: int getType()
com.umeng.commonsdk.statistics.proto.Response$b: com.umeng.analytics.pro.cc b()
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: void copy(java.lang.String,java.lang.String,boolean)
com.caij.puremusic.drive.model.PlexLoginResponse: int hashCode()
org.jaudiotagger.tag.datatype.TempoCode: int getSize()
com.caij.puremusic.db.model.ServerLyricsQueries$GetByIdQuery: java.lang.String toString()
org.simpleframework.xml.stream.PullReader$End: PullReader$End()
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
com.google.android.material.navigation.NavigationBarMenuView: void setItemTextAppearanceActive(int)
com.caij.puremusic.db.model.ArtistQueries$searchArtistByName$1: java.lang.Object invoke(java.lang.Object)
org.simpleframework.xml.transform.FileTransform: FileTransform()
com.caij.puremusic.drive.jellyfin.AuthorizationHeaderBuilder$buildHeader$2: AuthorizationHeaderBuilder$buildHeader$2()
org.jaudiotagger.tag.id3.framebody.FrameBodyUSLT: java.lang.String getFirstTextValue()
org.simpleframework.xml.core.Label: java.lang.String getEntry()
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level[] $values()
com.yalantis.ucrop.view.OverlayView: OverlayView(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: int u(int)
com.caij.puremusic.drive.model.PlexUser$$serializer: PlexUser$$serializer()
org.simpleframework.xml.core.SignatureBuilder: SignatureBuilder(java.lang.reflect.Constructor)
com.umeng.commonsdk.statistics.noise.Defcon: Defcon()
com.alipay.android.phone.mrpc.core.t: com.alipay.android.phone.mrpc.core.ac f()
android.support.v4.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
com.caij.puremusic.drive.model.PlayLists$$serializer: PlayLists$$serializer()
org.simpleframework.xml.stream.PrefixResolver: java.lang.String setReference(java.lang.String,java.lang.String)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: java.util.List get(org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey)
com.alipay.android.phone.mrpc.core.y: y(com.alipay.android.phone.mrpc.core.g,java.lang.Class,com.alipay.android.phone.mrpc.core.z)
org.jaudiotagger.audio.wav.WavFileWriter: WavFileWriter()
org.jaudiotagger.tag.wav.WavTag: org.jaudiotagger.tag.TagField getFirstField(java.lang.String)
com.caij.puremusic.db.model.HistoryEntityQueries$HistorySongsQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.simpleframework.xml.convert.AnnotationStrategy: org.simpleframework.xml.strategy.Value read(org.simpleframework.xml.strategy.Type,org.simpleframework.xml.stream.NodeMap,org.simpleframework.xml.strategy.Value)
com.caij.puremusic.drive.model.GoogleDriveFile: java.lang.String component5()
org.xmlpull.v1.XmlPullParser: boolean isAttributeDefault(int)
com.umeng.commonsdk.statistics.proto.c$b: com.umeng.analytics.pro.cc b()
com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)
com.umeng.commonsdk.statistics.proto.Response: Response(com.umeng.commonsdk.statistics.proto.Response)
com.alipay.apmobilesecuritysdk.face.APSecuritySdk: com.alipay.apmobilesecuritysdk.face.APSecuritySdk$TokenResult getTokenResult()
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse: com.caij.puremusic.drive.model.JellyfinPlaylistsResponse copy(java.util.List,int,int)
com.caij.puremusic.drive.model.ADriveFileResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.thegrizzlylabs.sardineandroid.impl.handler.InputStreamResponseHandler: java.io.InputStream handleResponse(okhttp3.Response)
org.jaudiotagger.tag.id3.framebody.FrameBodyPIC: FrameBodyPIC(byte,java.lang.String,byte,java.lang.String,byte[])
org.jaudiotagger.tag.id3.ID3v1Tag: java.util.List returnFieldToList(org.jaudiotagger.tag.id3.ID3v1TagField)
org.simpleframework.xml.stream.HyphenBuilder$Parser: void parse(char[],int,int)
org.jcodec.containers.mp4.boxes.TrackFragmentBox: java.lang.String fourcc()
org.jaudiotagger.tag.reference.PerformerHelper: java.lang.String formatForNonId3(java.lang.String,java.lang.String)
com.umeng.commonsdk.statistics.idtracking.a: java.lang.String b()
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: java.util.Enumeration children()
com.umeng.analytics.pro.ay: java.lang.Integer e(byte[],com.umeng.analytics.pro.bc,com.umeng.analytics.pro.bc[])
com.alipay.apmobilesecuritysdk.otherid.UmidSdkWrapper: java.lang.String compatUmidBug(android.content.Context,java.lang.String)
com.caij.puremusic.drive.model.Metadata: int getParentIndex()
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: boolean isEnableCatchAnrTrace()
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: void setGrouping()
org.jaudiotagger.tag.aiff.AiffTag: boolean hasField(java.lang.String)
com.umeng.analytics.pro.ch: int h()
com.thegrizzlylabs.sardineandroid.model.Activelock: com.thegrizzlylabs.sardineandroid.model.Locktype getLocktype()
org.jcodec.containers.mp4.boxes.HandlerBox: int getComponentFlagsMask()
com.umeng.analytics.pro.bv: int a()
com.google.android.material.navigation.NavigationBarItemView: void setActiveIndicatorEnabled(boolean)
org.simpleframework.xml.core.Variable: java.lang.String getEntry()
org.jaudiotagger.test.MergeID3AndMP3Files: java.io.File copyAudioToTmp(java.io.File,java.io.File,java.io.File)
org.jaudiotagger.utils.tree.DefaultTreeModel: void nodesWereInserted(org.jaudiotagger.utils.tree.TreeNode,int[])
org.simpleframework.xml.transform.StringTransform: java.lang.String read(java.lang.String)
org.simpleframework.xml.core.ClassScanner: void validate(java.lang.reflect.Method)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: void setUserObject(java.lang.Object)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: java.util.Enumeration breadthFirstEnumeration()
org.jaudiotagger.audio.aiff.AiffAudioHeader: void setName(java.lang.String)
com.tencent.bugly.proguard.be: com.tencent.bugly.crashreport.crash.CrashDetailBean a(android.content.Context,java.util.Map,com.tencent.bugly.crashreport.crash.jni.NativeExceptionHandler)
com.tencent.bugly.proguard.bi: byte[] b(byte[])
com.caij.puremusic.db.model.SongEntityQueries$GetPlaylistLastAddSongQuery: void addListener(app.cash.sqldelight.Query$Listener)
com.caij.puremusic.db.model.ArtistQueries: app.cash.sqldelight.Query artistById(long)
com.caij.puremusic.db.model.SearchAlbumResultQueries$insert$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: void setBitrateNominal(int)
org.simpleframework.xml.core.ElementListUnionParameter$Contact: ElementListUnionParameter$Contact(org.simpleframework.xml.ElementList,java.lang.reflect.Constructor,int)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void copyFrames(org.jaudiotagger.tag.id3.AbstractID3v2Tag)
com.umeng.analytics.pro.l: void b(android.app.Activity)
org.simpleframework.xml.core.GetPart: java.lang.Class getDependent()
org.simpleframework.xml.core.SignatureBuilder$ParameterTable: int access$100(org.simpleframework.xml.core.SignatureBuilder$ParameterTable)
com.tencent.mm.opensdk.modelbiz.WXChannelOpenFeed$Resp: WXChannelOpenFeed$Resp()
com.caij.puremusic.drive.model.Propstat: void setProp(com.caij.puremusic.drive.model.Prop)
com.tencent.bugly.proguard.aa: java.util.Map p()
com.tencent.mm.opensdk.modelmsg.WXWeWorkObject: int type()
com.umeng.analytics.pro.s: void c(android.content.Context)
com.google.android.material.navigation.NavigationBarView: androidx.appcompat.view.menu.MenuView getMenuView()
com.thegrizzlylabs.sardineandroid.model.Principal: void setHref(java.lang.String)
org.simpleframework.xml.core.Primitive: Primitive(org.simpleframework.xml.core.Context,org.simpleframework.xml.strategy.Type,java.lang.String)
com.caij.puremusic.db.model.SongQueries$GetArtistSongCountQuery: java.lang.String getArtistId()
com.thegrizzlylabs.sardineandroid.model.Propstat: com.thegrizzlylabs.sardineandroid.model.Prop getProp()
com.caij.puremusic.db.model.SongQueries$songsByNameAlbum$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.io.ByteArrayOutputStream writeFramesToBuffer()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: MetadataBlockDataPicture(org.jaudiotagger.audio.flac.metadatablock.MetadataBlockHeader,java.nio.channels.FileChannel)
com.caij.puremusic.db.model.SongQueries$songsByTitle$1: SongQueries$songsByTitle$1(kotlin.jvm.functions.Function18,com.caij.puremusic.db.model.SongQueries)
org.jcodec.containers.mp4.boxes.AliasBox: void doWrite(java.nio.ByteBuffer)
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getRegisteredOperator(android.content.Context)
com.caij.puremusic.db.model.ServerAudioFormatQueries$deleteSongBySource$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.jaudiotagger.audio.generic.AudioFileWriter: void delete(org.jaudiotagger.audio.AudioFile)
org.jcodec.containers.mp4.boxes.SampleSizesBox: java.lang.String fourcc()
com.google.android.material.chip.Chip: float getChipEndPadding()
com.caij.puremusic.drive.model.JellyfinArtistResponse: int component2()
com.umeng.commonsdk.statistics.common.HelperUtils: java.lang.String readStreamToString(java.io.InputStream)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: boolean hasFrameAndBody(java.lang.String)
com.tencent.bugly.proguard.ap: java.io.BufferedReader b(java.lang.String,java.lang.String)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: int getSamplingRatePerChannel()
org.jcodec.containers.mp4.boxes.Box$LeafBox: java.nio.ByteBuffer getData()
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType[] values()
com.umeng.commonsdk.debug.UMLog: void bundle(java.lang.String,int,android.os.Bundle)
com.umeng.commonsdk.statistics.proto.Response: void setResp_codeIsSet(boolean)
org.simpleframework.xml.core.Reflector: Reflector()
com.tencent.mm.opensdk.modelmsg.WXMediaMessage: boolean checkArgs()
androidx.core.view.accessibility.AccessibilityManagerCompat$Api19Impl: boolean addTouchExplorationStateChangeListenerWrapper(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
org.simpleframework.xml.stream.NodeStack: NodeStack()
org.jaudiotagger.tag.id3.valuepair.ImageFormats: boolean binaryDataIsTiffFormat(byte[])
com.tencent.mm.opensdk.modelmsg.WXStateSceneDataObject$IWXStateJumpInfo: void unserialize(android.os.Bundle)
com.caij.puremusic.drive.model.PlaylistMetadata$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.preference.PreferenceDialogFragmentCompat: PreferenceDialogFragmentCompat()
com.caij.puremusic.drive.model.OneDriveFile: OneDriveFile(int,java.lang.String,kotlinx.serialization.internal.SerializationConstructorMarker)
com.umeng.analytics.b: void a(double,double)
com.tencent.bugly.proguard.av: void a(com.tencent.bugly.crashreport.crash.CrashDetailBean,java.lang.Throwable,boolean)
com.caij.puremusic.drive.model.AlbumListResponse$$serializer: com.caij.puremusic.drive.model.AlbumListResponse deserialize(kotlinx.serialization.encoding.Decoder)
code.name.monkey.appthemehelper.common.prefs.supportv7.ATEColorPreference: ATEColorPreference(android.content.Context,android.util.AttributeSet,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.internal.play_billing.zzy: zzy()
kotlin.time.DurationUnit: kotlin.time.DurationUnit[] values()
org.jaudiotagger.tag.TagOptionSingleton: void setPadNumberTotalLength(org.jaudiotagger.tag.options.PadNumberOption)
org.jaudiotagger.tag.datatype.AbstractString: java.nio.charset.CharsetDecoder getCorrectDecoder(java.nio.ByteBuffer)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyTextInfo: void setText(java.lang.String)
com.tencent.bugly.proguard.l: void a(float,int)
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$deleteById$1: DriveFileDownUrlInfoQueries$deleteById$1(java.lang.String)
com.caij.puremusic.db.model.SongQueries$songByPath$1: java.lang.Object invoke(java.lang.Object)
com.umeng.commonsdk.statistics.common.DataHelper: java.lang.String decryptEx(java.lang.String)
com.caij.puremusic.drive.model.Response: void setHref(java.lang.String)
com.tencent.mm.opensdk.modelmsg.GetMessageFromWX$Req: boolean checkArgs()
com.tencent.bugly.crashreport.crash.anr.TraceFileHelper$a: TraceFileHelper$a()
org.jaudiotagger.audio.wav.WavCleaner: void recursiveDelete(java.io.File[])
com.caij.puremusic.model.CategoryInfo$Creator: com.caij.puremusic.model.CategoryInfo[] newArray(int)
org.simpleframework.xml.core.ElementArrayLabel: java.lang.String getEntry()
org.jcodec.containers.mp4.MP4Util: org.jcodec.containers.mp4.boxes.MovieBox createRefMovieFromFile(java.io.File)
com.tencent.mmkv.MMKV: void removeValuesForKeys(java.lang.String[])
org.simpleframework.xml.core.PrimitiveInlineList: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.util.Collection)
com.thegrizzlylabs.sardineandroid.Sardine: java.io.InputStream get(java.lang.String)
org.simpleframework.xml.filter.SystemFilter: SystemFilter()
com.google.android.material.checkbox.MaterialCheckBox: void setErrorAccessibilityLabel(java.lang.CharSequence)
org.simpleframework.xml.core.MethodScanner$PartMap: java.util.Iterator iterator()
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessWebview$Req: void toBundle(android.os.Bundle)
org.jcodec.containers.mp4.boxes.LoadSettingsBox: void parse(java.nio.ByteBuffer)
org.jaudiotagger.tag.asf.AsfTag: AsfTag(org.jaudiotagger.tag.Tag,boolean)
com.caij.puremusic.drive.model.PlayListItem: com.caij.puremusic.drive.model.PlayListItem copy$default(com.caij.puremusic.drive.model.PlayListItem,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,long,java.lang.String,int,java.lang.String,java.lang.String,int,java.lang.Object)
org.simpleframework.xml.core.TextLabel: boolean isRequired()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
com.umeng.commonsdk.statistics.internal.a: boolean a(java.lang.String)
com.caij.puremusic.fragments.GridStyle: GridStyle(java.lang.String,int,int,int)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderText(java.lang.CharSequence)
com.umeng.analytics.pro.o: void a()
com.caij.puremusic.drive.model.JellyfinSongListResponse: java.util.List getItems()
com.yalantis.ucrop.view.TransformImageView: TransformImageView(android.content.Context,android.util.AttributeSet)
org.simpleframework.xml.stream.Formatter: void writeText(java.lang.String,org.simpleframework.xml.stream.Mode)
com.tencent.mm.opensdk.modelbiz.ChooseCardFromWXCardPackage$Req: void toBundle(android.os.Bundle)
org.jaudiotagger.tag.id3.framebody.FrameBodySYTC: void setTimestampFormat(int)
androidx.appcompat.widget.AppCompatCheckBox: void setEmojiCompatEnabled(boolean)
org.jaudiotagger.tag.asf.AsfTag: org.jaudiotagger.tag.asf.AsfTagField getFirstField(org.jaudiotagger.tag.FieldKey)
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox$Factory: org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox$Factory baseDataOffset(long)
com.heinrichreimersoftware.materialintro.view.SwipeBlockableViewPager: void setSwipeLeftEnabled(boolean)
org.simpleframework.xml.core.Detail: java.lang.String getName()
com.caij.puremusic.util.CoverLyricsType: com.caij.puremusic.util.CoverLyricsType[] values()
org.jaudiotagger.logging.AbstractTagDisplayFormatter: AbstractTagDisplayFormatter()
org.jaudiotagger.audio.mp3.MP3File: boolean hasID3v2Tag()
org.simpleframework.xml.stream.HyphenBuilder$Parser: HyphenBuilder$Parser(org.simpleframework.xml.stream.HyphenBuilder,java.lang.String)
org.jaudiotagger.audio.generic.AudioFileModificationListener: void fileWillBeModified(org.jaudiotagger.audio.AudioFile,boolean)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: int calculateTagSize(int,int)
org.jaudiotagger.tag.id3.AggregatedFrame: java.lang.String getContent()
com.umeng.analytics.pro.bo: double y()
com.umeng.analytics.process.b: java.lang.String b(android.content.Context,java.lang.String)
org.jcodec.containers.mp4.boxes.FormatBox: java.lang.String fourcc()
android.support.v4.media.session.MediaSessionCompat$QueueItem$Api21Impl: android.media.MediaDescription getDescription(android.media.session.MediaSession$QueueItem)
org.jaudiotagger.tag.id3.ID3TextEncodingConversion: byte convertV24textEncodingToV23textEncoding(byte)
org.simpleframework.xml.Serializer: java.lang.Object read(java.lang.Object,java.io.InputStream,boolean)
org.simpleframework.xml.core.PrimitiveScanner: org.simpleframework.xml.core.Function getCommit()
org.jaudiotagger.tag.id3.ID3v24FieldKey: java.lang.String getFieldName()
com.google.android.material.button.MaterialButton: int getStrokeWidth()
org.simpleframework.xml.transform.TimeZoneTransform: java.lang.String write(java.util.TimeZone)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: byte[] getArtworkBinaryData()
com.caij.puremusic.drive.model.AlbumList$Companion: AlbumList$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.jaudiotagger.audio.mp3.MP3File: org.jaudiotagger.tag.id3.ID3v24Tag getID3v2TagAsv24()
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: SchedulerConfig$Flag(java.lang.String,int)
org.simpleframework.xml.core.CompositeListUnion: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.lang.Object)
com.google.android.material.chip.Chip: void setChecked(boolean)
com.google.android.material.bottomsheet.BottomSheetBehavior$4: void onViewReleased(android.view.View,float,float)
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$IWXMusicVipObject: void unserialize(android.os.Bundle)
org.jcodec.containers.mp4.boxes.FormatBox: FormatBox(org.jcodec.containers.mp4.boxes.Header)
org.simpleframework.xml.stream.OutputElement: java.lang.String getComment()
nl.adaptivity.xmlutil.EventType: nl.adaptivity.xmlutil.EventType[] $values()
org.simpleframework.xml.core.Scanner: org.simpleframework.xml.core.Caller getCaller(org.simpleframework.xml.core.Context)
com.caij.puremusic.drive.model.SubsonicSearchListResponse: int hashCode()
org.simpleframework.xml.stream.StreamReader: org.simpleframework.xml.stream.EventNode next()
org.simpleframework.xml.core.ElementUnionLabel: ElementUnionLabel(org.simpleframework.xml.core.Contact,org.simpleframework.xml.ElementUnion,org.simpleframework.xml.Element,org.simpleframework.xml.stream.Format)
org.jaudiotagger.tag.datatype.BooleanByte: int getBitPosition()
com.caij.puremusic.fragments.player.cardblur.CardBlurPlaybackControlsFragment: CardBlurPlaybackControlsFragment()
com.caij.puremusic.drive.model.SubsonicSong: com.caij.puremusic.drive.model.SubsonicSong copy$default(com.caij.puremusic.drive.model.SubsonicSong,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,long,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,java.lang.Object)
org.simpleframework.xml.util.Resolver$Cache: Resolver$Cache(org.simpleframework.xml.util.Resolver)
com.tencent.mm.opensdk.modelmsg.WXGameVideoFileObject: WXGameVideoFileObject()
org.jaudiotagger.audio.generic.AbstractTag: java.util.List getAll()
com.caij.puremusic.drive.model.AlbumList: com.caij.puremusic.drive.model.AlbumList copy$default(com.caij.puremusic.drive.model.AlbumList,java.util.List,int,java.lang.Object)
org.jaudiotagger.audio.generic.AudioFileWriter: AudioFileWriter()
com.caij.puremusic.db.model.SongQueries$SongsByAlumQuery$execute$1: SongQueries$SongsByAlumQuery$execute$1(com.caij.puremusic.db.model.SongQueries$SongsByAlumQuery)
com.caij.puremusic.drive.model.WebDAVToken: java.lang.String component3()
com.umeng.analytics.b: java.lang.String g()
com.caij.puremusic.drive.model.PlaylistsMediaContainer$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
org.jaudiotagger.audio.wav.WavInfoReader: WavInfoReader(java.lang.String)
com.umeng.analytics.Gender: com.umeng.analytics.Gender valueOf(java.lang.String)
com.tencent.mm.opensdk.modelmsg.WXMiniProgramObject: WXMiniProgramObject()
org.simpleframework.xml.core.Entry: org.simpleframework.xml.strategy.Type getValueType()
com.umeng.analytics.pro.aw: byte[] a(byte[])
com.caij.puremusic.db.model.SongQueries$GetAlbumSongCountQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
com.umeng.analytics.process.UMProcessDBHelper: java.util.List datasAdapter(java.lang.String,org.json.JSONArray)
org.jcodec.containers.mp4.boxes.TrackExtendsBox: void setDefaultSampleBytes(int)
com.caij.puremusic.drive.model.BaiduDriveItem: int hashCode()
androidx.customview.widget.ViewDragHelper$Callback: int getViewVerticalDragRange(android.view.View)
org.simpleframework.xml.core.TextList: boolean validate(org.simpleframework.xml.stream.InputNode)
com.caij.puremusic.lyrics.LrcView: LrcView(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.audio.AudioHeader: int getSampleRateAsNumber()
com.caij.puremusic.drive.model.MediaContainer$Companion: MediaContainer$Companion()
com.umeng.umzid.c: void e(android.content.Context,java.lang.String)
com.bumptech.glide.load.EncodeStrategy: EncodeStrategy(java.lang.String,int)
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
com.caij.puremusic.network.model.LastFmAlbum$Album: com.caij.puremusic.network.model.LastFmAlbum$Album$Wiki getWiki()
com.google.android.material.navigation.NavigationBarMenuView: void setItemActiveIndicatorShapeAppearance(com.google.android.material.shape.ShapeAppearanceModel)
com.google.android.material.bottomsheet.BottomSheetBehavior: void setHideableInternal(boolean)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyPairs: void resetPairs()
com.caij.puremusic.drive.model.AlbumItem$Companion: kotlinx.serialization.KSerializer serializer()
com.umeng.analytics.b$a: com.umeng.analytics.b a()
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: java.lang.String getText()
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.umeng.analytics.pro.bf$a: bf$a(com.umeng.analytics.pro.bf$1)
org.jcodec.containers.mp4.boxes.ReverseDnsBox$RdnsNameBox: int estimateSize()
org.jaudiotagger.tag.id3.ID3v1Tag: void deleteArtworkField()
org.jcodec.containers.mp4.boxes.HandlerBox: java.lang.String getComponentSubType()
com.alipay.apmobilesecuritysdk.e.i: void c(java.lang.String)
com.caij.puremusic.lyrics.LrcView: void setCurrentColor(int)
com.umeng.commonsdk.debug.UMLog: void jsonArry(java.lang.String,org.json.JSONArray)
com.umeng.analytics.pro.be: be(com.umeng.analytics.pro.bw)
com.caij.puremusic.drive.model.PlexLoginResponse$Companion: kotlinx.serialization.KSerializer serializer()
com.caij.puremusic.db.model.ServerArtistCoverQueries$insert$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.caij.puremusic.db.model.SearchAlbumResultQueries$GetByIdQuery: java.lang.String getId()
org.jaudiotagger.tag.id3.framebody.FrameBodyTALB: java.lang.String getIdentifier()
com.tencent.mm.opensdk.modelbiz.WXOpenCustomerServiceChat$Resp: void fromBundle(android.os.Bundle)
com.bosphere.fadingedgelayout.FadingEdgeLayout: FadingEdgeLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: void setBackgroundColor(int)
org.simpleframework.xml.core.Reflector: java.lang.Class getClass(java.lang.reflect.ParameterizedType)
com.alipay.apmobilesecuritysdk.d.e: java.util.Map a(android.content.Context,java.util.Map)
org.simpleframework.xml.stream.CamelCaseStyle: java.lang.String getAttribute(java.lang.String)
com.caij.puremusic.drive.model.PlexSectionsResponse$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.jaudiotagger.audio.asf.data.ContentDescription: void setRating(java.lang.String)
org.jaudiotagger.audio.asf.data.MetadataContainerFactory: MetadataContainerFactory()
org.jaudiotagger.tag.id3.valuepair.V2GenreTypes: org.jaudiotagger.tag.id3.valuepair.V2GenreTypes getInstanceOf()
org.jaudiotagger.audio.aiff.AiffUtil: AiffUtil()
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier valueOf(java.lang.String)
com.umeng.analytics.pro.r: void a(org.json.JSONObject,boolean)
com.caij.puremusic.db.model.ServerArtistCover: int hashCode()
com.caij.puremusic.drive.model.Response$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpecResource(int)
org.jaudiotagger.utils.DirectByteBufferUtils$AndroidReleaseStrategy: void release(java.nio.Buffer)
com.yalantis.ucrop.view.CropImageView: float getMinScale()
com.caij.puremusic.db.model.Artist: long component1()
org.jaudiotagger.audio.ogg.util.VorbisPacketType: org.jaudiotagger.audio.ogg.util.VorbisPacketType valueOf(java.lang.String)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
com.umeng.analytics.pro.u: void a(java.lang.String,long)
org.simpleframework.xml.core.Composite: void readAttributes(org.simpleframework.xml.stream.InputNode,java.lang.Object,org.simpleframework.xml.core.Section)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundResource(int)
androidx.fragment.app.Fragment: java.lang.Object getExitTransition()
org.jaudiotagger.tag.flac.FlacTag: boolean hasCommonFields()
com.tencent.mm.opensdk.modelmsg.WXMusicVideoObject: boolean checkArgs()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getAnimationMode()
com.google.android.material.textfield.TextInputLayout: void setEndIconVisible(boolean)
org.simpleframework.xml.transform.StringTransform: java.lang.String write(java.lang.Object)
com.caij.puremusic.db.model.ArtistQueries$insert$2: java.lang.Object invoke(java.lang.Object)
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportQuasiRealtime: void setReportInterval(long)
org.jaudiotagger.tag.id3.valuepair.ReceivedAsTypes: ReceivedAsTypes()
org.jaudiotagger.audio.generic.Permissions: Permissions()
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
com.google.android.material.internal.CheckableImageButton: CheckableImageButton(android.content.Context,android.util.AttributeSet)
org.jcodec.containers.mp4.boxes.FileTypeBox: void parse(java.nio.ByteBuffer)
com.caij.puremusic.drive.model.DropboxDriveItem$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.tencent.mm.opensdk.diffdev.a.d: com.tencent.mm.opensdk.diffdev.a.d[] values()
com.caij.puremusic.db.model.PlayCountEntityQueries$deleteById$2: PlayCountEntityQueries$deleteById$2()
com.caij.puremusic.db.model.HistoryEntityQueries$clear$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyLYR: java.lang.String writeString()
com.tencent.bugly.proguard.ab: java.lang.String c(android.content.Context)
androidx.constraintlayout.widget.Placeholder: android.view.View getContent()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.tag.mp4.Mp4NonStandardFieldKey: Mp4NonStandardFieldKey(java.lang.String,int,java.lang.String,java.lang.String,org.jaudiotagger.tag.reference.Tagger)
com.bumptech.glide.load.resource.bitmap.VideoDecoder$VideoDecoderException: VideoDecoder$VideoDecoderException()
com.google.android.material.slider.BaseSlider: int getThumbRadius()
com.google.android.material.card.MaterialCardView: int getStrokeColor()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity getActivity()
com.umeng.commonsdk.statistics.proto.e$a: void a(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
org.jaudiotagger.tag.id3.framebody.FrameBodyWXXX: void setupObjectList()
org.jaudiotagger.tag.images.ImageHandler: void showWriteFormats()
com.tencent.mm.opensdk.modelmsg.WXImageObject: WXImageObject()
androidx.activity.ComponentActivity: void setContentView(android.view.View)
com.google.android.material.navigation.NavigationBarItemView: int getItemBackgroundResId()
org.jaudiotagger.audio.exceptions.NoReadPermissionsException: NoReadPermissionsException(java.lang.String)
org.jcodec.containers.mp4.boxes.IListBox: void setRdnsValues(java.util.List)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyLYR: void read(java.nio.ByteBuffer)
com.caij.puremusic.model.DriveFileParcelable: long getUpdateTime()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: boolean isHorizontallyScrollable(android.widget.TextView)
com.caij.puremusic.drive.model.SubsonicPlaylist: java.lang.String getCreated()
org.simpleframework.xml.core.TextList: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object)
org.jaudiotagger.audio.asf.data.MetadataDescriptor: boolean equals(java.lang.Object)
org.simpleframework.xml.core.ModelMap: org.simpleframework.xml.core.Model lookup(java.lang.String,int)
org.jaudiotagger.logging.FileSystemMessage: java.lang.String getMsg()
com.caij.puremusic.db.model.SongEntityQueries$CheckSongPlaylistExistsQuery: java.lang.String toString()
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportWifiOnly: boolean shouldSendMessage(boolean)
com.tencent.mmkv.MMKV: int onMMKVCRCCheckFail(java.lang.String)
com.tencent.mm.opensdk.modelmsg.WXMusicVideoObject: void unserialize(android.os.Bundle)
com.umeng.commonsdk.statistics.proto.b: void k()
com.caij.puremusic.db.model.SongQueries$SongsByNameAlbumQuery: java.lang.String toString()
org.jaudiotagger.tag.id3.framebody.FrameBodyTPOS: java.lang.String getDiscTotalAsText()
org.jaudiotagger.utils.tree.TreePath: java.lang.Object getLastPathComponent()
com.umeng.commonsdk.debug.UMLog: void aq(java.lang.String,java.lang.String,int,java.lang.String)
com.caij.puremusic.drive.model.FMediaContainer: java.lang.String toString()
com.tencent.bugly.proguard.s: int h()
org.simpleframework.xml.core.DefaultScanner: org.simpleframework.xml.core.Function getResolve()
com.umeng.commonsdk.statistics.idtracking.j: java.lang.String f()
androidx.preference.EditTextPreferenceDialogFragmentCompat: EditTextPreferenceDialogFragmentCompat()
com.tencent.bugly.proguard.aw: byte[] a()
org.jaudiotagger.tag.mp4.field.Mp4TagTextField: void setContent(java.lang.String)
com.umeng.commonsdk.statistics.idtracking.Envelope: java.lang.String toString()
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItems(int)
com.alipay.android.phone.mrpc.core.b$b: void a(com.alipay.android.phone.mrpc.core.b$b,java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyASPI: FrameBodyASPI()
com.tencent.bugly.crashreport.crash.CrashDetailBean: void writeToParcel(android.os.Parcel,int)
androidx.media.app.NotificationCompat$Api21Impl: android.app.Notification$MediaStyle fillInMediaStyle(android.app.Notification$MediaStyle,int[],android.support.v4.media.session.MediaSessionCompat$Token)
com.caij.puremusic.db.model.AlbumQueries: app.cash.sqldelight.Query albums(kotlin.jvm.functions.Function11)
org.simpleframework.xml.stream.OutputNode: org.simpleframework.xml.stream.NamespaceMap getNamespaces()
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getDBencryptID(android.content.Context)
com.google.android.material.bottomsheet.BottomSheetBehavior: int getLastStableState()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
org.jaudiotagger.tag.id3.ID3v23FieldKey: java.lang.String getFieldName()
com.google.android.material.navigation.NavigationBarItemView: void setActiveIndicatorWidth(int)
org.simpleframework.xml.core.Support: org.simpleframework.xml.transform.Transform getTransform(java.lang.Class)
org.jaudiotagger.tag.images.Artwork: void setDescription(java.lang.String)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: void setField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
org.simpleframework.xml.core.StructureBuilder: org.simpleframework.xml.core.Model lookup(org.simpleframework.xml.core.Expression)
com.umeng.analytics.pro.ai$a: void onServiceDisconnected(android.content.ComponentName)
com.caij.puremusic.drive.model.User: com.caij.puremusic.drive.model.User copy(java.lang.String,java.lang.String,java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyTOWN: FrameBodyTOWN(org.jaudiotagger.tag.id3.framebody.FrameBodyTOWN)
org.jaudiotagger.audio.mp3.VbriFrame: java.nio.ByteBuffer isVbriFrame(java.nio.ByteBuffer,org.jaudiotagger.audio.mp3.MPEGFrameHeader)
com.umeng.analytics.pro.an: com.umeng.analytics.pro.an d(java.lang.String)
com.caij.puremusic.preferences.AlbumCoverStylePreference: AlbumCoverStylePreference(android.content.Context,android.util.AttributeSet,int)
com.google.common.reflect.TypeToken$TypeFilter$2: boolean apply(com.google.common.reflect.TypeToken)
org.jaudiotagger.tag.images.Artwork: java.lang.String getMimeType()
com.google.android.material.navigation.NavigationBarView: void setItemBackground(android.graphics.drawable.Drawable)
com.caij.puremusic.fragments.player.home.HomePlayerFragment: HomePlayerFragment()
com.alipay.sdk.m.u.g: com.alipay.sdk.m.u.g a(int)
com.umeng.commonsdk.utils.UMUtils: java.lang.String getAppVersinoCode(android.content.Context,java.lang.String)
org.jaudiotagger.tag.TagTextField: void setContent(java.lang.String)
org.jaudiotagger.audio.generic.AbstractTagCreator: java.lang.Object convert(org.jaudiotagger.tag.Tag,int)
org.jaudiotagger.audio.generic.AudioFileWriter2: void deleteTag(org.jaudiotagger.tag.Tag,java.io.RandomAccessFile,java.io.RandomAccessFile)
org.jaudiotagger.tag.id3.framebody.FrameBodyTPRO: FrameBodyTPRO(byte,java.lang.String)
org.jaudiotagger.tag.asf.AsfTagCoverField: java.lang.String getMimeType()
com.umeng.analytics.AnalyticsConfig: double[] getLocation()
com.google.android.material.bottomsheet.BottomSheetBehavior: int getSaveFlags()
org.jaudiotagger.tag.id3.framebody.FrameBodySYLT: FrameBodySYLT(java.nio.ByteBuffer,int)
com.tencent.mm.opensdk.modelmsg.SendAuth$Req: void toBundle(android.os.Bundle)
com.caij.puremusic.drive.model.SubsonicResponse$$serializer: com.caij.puremusic.drive.model.SubsonicResponse deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.audio.generic.GenericTag$GenericTagTextField: java.lang.String getContent()
androidx.core.widget.TextViewCompat$Api23Impl: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
com.caij.puremusic.db.model.Album: int getSongCount()
com.thegrizzlylabs.sardineandroid.Sardine: java.util.List patch(java.lang.String,java.util.Map,java.util.List)
org.jaudiotagger.audio.asf.util.Utils: long readUINT64(java.io.InputStream)
org.simpleframework.xml.stream.Formatter: void writeEnd(java.lang.String,java.lang.String)
org.jaudiotagger.audio.AudioHeader: java.lang.String getSampleRate()
com.google.android.material.bottomsheet.BottomSheetBehavior$2: BottomSheetBehavior$2(com.google.android.material.bottomsheet.BottomSheetBehavior)
com.caij.puremusic.fragments.player.peek.PeekPlayerControlFragment: PeekPlayerControlFragment()
com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)
org.jaudiotagger.tag.id3.reference.MediaPlayerRating: org.jaudiotagger.tag.id3.reference.ID3Rating getInstance()
com.umeng.commonsdk.statistics.common.ULog: void v(java.lang.Throwable)
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getMeid(android.content.Context)
com.tencent.bugly.proguard.aa: java.lang.String h()
com.caij.puremusic.db.model.ArtistQueries$SearchArtistByNameQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.jaudiotagger.audio.mp3.VbriFrame: int getFrameCount()
androidx.constraintlayout.widget.Barrier: Barrier(android.content.Context,android.util.AttributeSet)
org.simpleframework.xml.filter.StackFilter: void push(org.simpleframework.xml.filter.Filter)
com.umeng.commonsdk.framework.UMWorkDispatch: boolean eventHasExist(int)
org.jaudiotagger.tag.reference.ISOCountry: ISOCountry()
com.caij.puremusic.network.model.Artist: java.util.Map getExternal_urls()
androidx.appcompat.widget.AppCompatToggleButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
io.github.aakira.napier.LogLevel: io.github.aakira.napier.LogLevel valueOf(java.lang.String)
code.name.monkey.appthemehelper.common.prefs.supportv7.ATEColorPreference: ATEColorPreference(android.content.Context,android.util.AttributeSet,int)
com.caij.puremusic.drive.model.PlayListsResponse: void write$Self(com.caij.puremusic.drive.model.PlayListsResponse,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
androidx.activity.ComponentDialog: void onBackPressedDispatcher$lambda-1(androidx.activity.ComponentDialog)
org.simpleframework.xml.core.CompositeUnion: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object)
com.caij.puremusic.network.model.Image: boolean equals(java.lang.Object)
com.caij.puremusic.db.model.SongQueries$SongsByTitleQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.caij.puremusic.drive.model.PlexSongsResponse$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.caij.puremusic.drive.model.DropboxDriveFileResponse: java.util.List getEntries()
com.caij.puremusic.drive.model.SubPlayList$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.umeng.analytics.pro.bx: bx()
com.google.android.material.slider.Slider: void setThumbStrokeWidth(float)
org.jaudiotagger.tag.asf.AsfTag: org.jaudiotagger.tag.asf.AsfTagCoverField createField(org.jaudiotagger.tag.images.Artwork)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.util.Comparator getPreferredFrameOrderComparator()
org.jaudiotagger.audio.aiff.AiffTagFieldKey: org.jaudiotagger.audio.aiff.AiffTagFieldKey valueOf(java.lang.String)
com.caij.puremusic.drive.model.JellyfinSongListResponse: int component2()
com.umeng.commonsdk.statistics.proto.Response: void writeObject(java.io.ObjectOutputStream)
org.simpleframework.xml.core.AttributeParameter: boolean isAttribute()
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
code.name.monkey.appthemehelper.common.prefs.ATEColorPreference: ATEColorPreference(android.content.Context,android.util.AttributeSet)
androidx.core.text.HtmlCompat$Api24Impl: java.lang.String toHtml(android.text.Spanned,int)
org.jaudiotagger.utils.DirectByteBufferUtils: org.jaudiotagger.utils.DirectByteBufferUtils$ReleaseStrategy decideReleaseStrategy()
com.tencent.mm.opensdk.modelmsg.WXWeWorkObject: WXWeWorkObject()
org.jaudiotagger.tag.id3.ID3v23Tag: ID3v23Tag(java.nio.ByteBuffer,java.lang.String)
org.jaudiotagger.audio.SupportedFileFormat$9: SupportedFileFormat$9(java.lang.String,int,java.lang.String)
org.simpleframework.xml.core.Session: Session()
com.umeng.commonsdk.statistics.proto.c: java.util.Iterator g()
com.thegrizzlylabs.sardineandroid.model.Ace: com.thegrizzlylabs.sardineandroid.model.Inherited getInherited()
com.umeng.commonsdk.framework.a: void b(android.content.Context)
com.umeng.commonsdk.statistics.common.DataHelper: int random(int,java.lang.String)
com.caij.puremusic.db.model.SongEntityQueries$GetSongEntityQuery: SongEntityQueries$GetSongEntityQuery(com.caij.puremusic.db.model.SongEntityQueries,long,long,kotlin.jvm.functions.Function1)
nl.adaptivity.xmlutil.core.XmlVersion: java.lang.String getVersionString()
com.caij.puremusic.drive.model.PlayListsSubsonicResponse: boolean equals(java.lang.Object)
org.simpleframework.xml.core.ObjectScanner: org.simpleframework.xml.core.Function getReplace()
com.google.android.material.card.MaterialCardView: void setCheckedIconResource(int)
org.jaudiotagger.audio.asf.data.MetadataDescriptor: int getLanguageIndex()
com.caij.puremusic.db.model.AlbumQueries: app.cash.sqldelight.Query getAlbumByArtistId(long,kotlin.jvm.functions.Function11)
com.caij.puremusic.drive.model.BaiduDriveItem$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.BaiduDriveItem)
org.simpleframework.xml.core.Caller: java.lang.Object replace(java.lang.Object)
org.jcodec.containers.mp4.boxes.ColorExtension: org.jcodec.containers.mp4.boxes.ColorExtension createColr()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportImageTintList()
com.umeng.commonsdk.statistics.proto.d: com.umeng.analytics.pro.bp o()
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyUrlLink: java.lang.String encodeURL(java.lang.String)
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries: void clear()
com.caij.puremusic.db.model.ArtistQueries$artistById$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.caij.puremusic.db.model.SearchAlbumResultQueries$GetByIdQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.umeng.commonsdk.statistics.proto.a: com.umeng.analytics.pro.bp r()
com.caij.puremusic.drive.model.MediaContainer: int hashCode()
com.caij.puremusic.db.model.PlayCountEntityQueries: app.cash.sqldelight.Query playCountSongs()
org.jaudiotagger.audio.mp3.MP3AudioHeader: int getSampleRateAsNumber()
com.tencent.bugly.proguard.bg: boolean a()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeErrorColor(android.content.res.ColorStateList)
org.simpleframework.xml.filter.EnvironmentFilter: java.lang.String replace(java.lang.String)
com.caij.puremusic.drive.model.Part: int getSize()
com.umeng.analytics.filter.d: void a()
org.simpleframework.xml.core.Variable: boolean isUnion()
androidx.appcompat.widget.SwitchCompat: int getThumbTextPadding()
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTagField: java.lang.String getContent()
app.cash.sqldelight.Query: void removeListener(app.cash.sqldelight.Query$Listener)
org.jaudiotagger.tag.id3.framebody.FrameBodyTRDA: FrameBodyTRDA()
com.umeng.commonsdk.statistics.internal.StatTracer: void init()
com.caij.puremusic.network.model.LastFmAlbum$Album$Wiki: java.lang.String getPublished()
com.thegrizzlylabs.sardineandroid.model.Propertybehavior: void setOmit(com.thegrizzlylabs.sardineandroid.model.Omit)
org.jaudiotagger.tag.id3.framebody.FrameBodyTDAT: FrameBodyTDAT(org.jaudiotagger.tag.id3.framebody.FrameBodyTDAT)
com.caij.vip.PayInfo: PayInfo()
org.jaudiotagger.audio.mp3.MP3File: void save(java.io.File)
org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistReadOptions: VorbisAlbumArtistReadOptions(java.lang.String,int)
com.tencent.bugly.CrashModule: java.lang.String[] getTables()
org.jaudiotagger.audio.generic.AbstractTag: void setField(org.jaudiotagger.tag.images.Artwork)
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
org.simpleframework.xml.core.ElementMapUnionLabel: java.lang.Object getEmpty(org.simpleframework.xml.core.Context)
com.umeng.analytics.pro.o: java.lang.String n()
com.umeng.commonsdk.service.UMGlobalContext: java.lang.String getProcessName(android.content.Context)
com.tencent.mmkv.MMKV: boolean encodeFloat(long,java.lang.String,float)
com.thegrizzlylabs.sardineandroid.DavResource: long access$300(com.thegrizzlylabs.sardineandroid.DavResource,com.thegrizzlylabs.sardineandroid.model.Response)
org.jaudiotagger.tag.asf.AsfTagCoverField: byte[] createRawContent(byte[],int,java.lang.String,java.lang.String)
org.jaudiotagger.tag.aiff.AiffTag: void addField(org.jaudiotagger.tag.TagField)
com.caij.puremusic.drive.model.PlayListItem$Companion: PlayListItem$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.tencent.bugly.proguard.aj: android.util.Pair a(byte[],java.util.Map)
com.caij.puremusic.MainModuleKt$roomModule$1$9: MainModuleKt$roomModule$1$9()
com.umeng.analytics.pro.bo: long d(long)
com.caij.puremusic.MainModuleKt$roomModule$1$8: MainModuleKt$roomModule$1$8()
org.jcodec.containers.mp4.boxes.SampleDescriptionBox: int estimateSize()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getCounterOverflowDescription()
com.bumptech.glide.MemoryCategory: com.bumptech.glide.MemoryCategory[] values()
org.jaudiotagger.logging.ErrorMessage: ErrorMessage(java.lang.String,int,java.lang.String)
org.jaudiotagger.utils.tree.TreeNode: int getIndex(org.jaudiotagger.utils.tree.TreeNode)
com.umeng.commonsdk.statistics.common.a$c: android.os.IBinder asBinder()
com.umeng.commonsdk.framework.UMEnvelopeBuild: long getLastInstantBuildTime(android.content.Context)
com.caij.puremusic.db.model.ServerAudioFormatQueries$getById$1: ServerAudioFormatQueries$getById$1(kotlin.jvm.functions.Function5)
org.jaudiotagger.audio.mp3.MP3File: MP3File(java.lang.String)
org.jaudiotagger.tag.images.StandardImageHandler: org.jaudiotagger.tag.images.StandardImageHandler getInstanceOf()
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior(android.content.Context,android.util.AttributeSet)
com.tencent.mm.opensdk.openapi.MMSharedPreferences$REditor: android.content.SharedPreferences$Editor putFloat(java.lang.String,float)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: long getActions(android.media.session.PlaybackState)
com.google.common.base.Predicates$ObjectPredicate: com.google.common.base.Predicates$ObjectPredicate valueOf(java.lang.String)
org.simpleframework.xml.stream.PullReader: org.simpleframework.xml.stream.PullReader$Text text()
com.caij.puremusic.db.model.SongEntityQueries$IsSongExistsInPlaylistQuery: void removeListener(app.cash.sqldelight.Query$Listener)
org.simpleframework.xml.core.CompositeKey: boolean validate(org.simpleframework.xml.stream.InputNode)
org.jaudiotagger.audio.dsf.DsdChunk: org.jaudiotagger.audio.dsf.DsdChunk readChunk(java.nio.ByteBuffer)
com.caij.vip.AliPayFragment: AliPayFragment()
org.simpleframework.xml.core.DetailScanner: void methods(java.lang.Class)
com.caij.puremusic.db.model.SongEntityQueries$GetPlaylistLastAddSongQuery: java.lang.String toString()
org.jaudiotagger.tag.datatype.TextEncodedStringSizeTerminated: int getNumberOfValues()
com.tencent.bugly.proguard.t: t()
org.jcodec.containers.mp4.boxes.TimecodeSampleEntry: TimecodeSampleEntry(org.jcodec.containers.mp4.boxes.Header)
org.jaudiotagger.tag.lyrics3.AbstractLyrics3: AbstractLyrics3(org.jaudiotagger.tag.lyrics3.AbstractLyrics3)
org.jaudiotagger.logging.Hex: Hex()
org.jcodec.containers.mp4.boxes.FullBox: void parse(java.nio.ByteBuffer)
com.tencent.mm.opensdk.utils.Log: void d(java.lang.String,java.lang.String)
com.tencent.bugly.proguard.ay: java.lang.String a(java.util.List,long)
org.simpleframework.xml.strategy.ArrayValue: ArrayValue(java.lang.Class,int)
org.jaudiotagger.tag.id3.framebody.FrameBodyASPI: FrameBodyASPI(org.jaudiotagger.tag.id3.framebody.FrameBodyASPI)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColorStateList(android.content.res.ColorStateList)
com.caij.puremusic.drive.model.AlbumArtist$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
androidx.fragment.app.Fragment: void performDetach()
com.tencent.mm.opensdk.openapi.MMSharedPreferences: java.util.Set getStringSet(java.lang.String,java.util.Set)
org.jaudiotagger.tag.id3.framebody.FrameBodyMVNM: FrameBodyMVNM(java.nio.ByteBuffer,int)
com.caij.puremusic.drive.model.AMetadata: AMetadata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.caij.puremusic.db.model.ServerLyricsQueries$GetByIdQuery: ServerLyricsQueries$GetByIdQuery(com.caij.puremusic.db.model.ServerLyricsQueries,long,kotlin.jvm.functions.Function1)
org.simpleframework.xml.core.PrimitiveScanner: org.simpleframework.xml.core.Caller getCaller(org.simpleframework.xml.core.Context)
com.caij.puremusic.util.CoverLyricsType: com.caij.puremusic.util.CoverLyricsType[] $values()
org.jaudiotagger.audio.asf.data.ChunkContainer: boolean hasChunkByGUID(org.jaudiotagger.audio.asf.data.GUID)
com.caij.puremusic.drive.model.AlbumMetadata: java.lang.String toString()
com.caij.puremusic.db.model.PlaylistEntityQueries$CheckPlaylistExistsQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
org.simpleframework.xml.transform.CharacterTransform: java.lang.Object read(java.lang.String)
com.caij.puremusic.network.model.TokenData: java.lang.Long getExpires_in()
org.simpleframework.xml.core.ElementUnionLabel: java.lang.Object getEmpty(org.simpleframework.xml.core.Context)
androidx.viewpager.widget.ViewPager: void setScrollState(int)
org.simpleframework.xml.core.DefaultScanner: java.lang.String getName()
org.jaudiotagger.tag.id3.framebody.FrameBodyTCOP: FrameBodyTCOP(java.nio.ByteBuffer,int)
com.umeng.analytics.pro.ad$a: ad$a()
org.simpleframework.xml.core.StructureBuilder: void validateUnions(java.lang.Class)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getAdjustedDefault()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
com.umeng.analytics.CoreProtocol: void workEvent(java.lang.Object,int)
org.jaudiotagger.tag.id3.framebody.FrameBodyPCNT: void setupObjectList()
com.tencent.bugly.crashreport.biz.UserInfoBean: void writeToParcel(android.os.Parcel,int)
org.jaudiotagger.tag.mp4.field.Mp4TagReverseDnsField: boolean isEmpty()
org.jaudiotagger.tag.id3.framebody.FrameBodyTIME: FrameBodyTIME(byte,java.lang.String)
com.google.android.material.appbar.CollapsingToolbarLayout: float getCollapsedTitleTextSize()
org.simpleframework.xml.core.Persister: boolean validate(java.lang.Class,java.io.InputStream)
com.caij.puremusic.drive.model.Part: java.lang.String component2()
org.repackage.com.meizu.flyme.openidsdk.OpenIdHelper: java.lang.String a(android.content.Context)
com.google.android.material.internal.FlowLayout: int getLineSpacing()
com.google.android.material.bottomsheet.BottomSheetBehavior: void setPeekHeight(int)
org.simpleframework.xml.stream.InputNodeMap: org.simpleframework.xml.stream.InputNode get(java.lang.String)
org.jaudiotagger.audio.flac.FlacTagWriter$MetadataBlockInfo: java.util.List access$200(org.jaudiotagger.audio.flac.FlacTagWriter$MetadataBlockInfo)
com.caij.puremusic.fragments.player.tiny.TinyPlaybackControlsFragment: TinyPlaybackControlsFragment()
com.tencent.mm.opensdk.modelbiz.WXQRCodePay$Req: WXQRCodePay$Req()
org.simpleframework.xml.core.ElementListUnionParameter: java.lang.annotation.Annotation getAnnotation()
org.jaudiotagger.audio.asf.data.AsfExtendedHeader: org.jaudiotagger.audio.asf.data.LanguageList getLanguageList()
com.thegrizzlylabs.sardineandroid.model.Resourcetype: void setPrincipal(com.thegrizzlylabs.sardineandroid.model.Principal)
com.umeng.commonsdk.statistics.noise.ABTest: int getGroup()
org.simpleframework.xml.Serializer: java.lang.Object read(java.lang.Object,org.simpleframework.xml.stream.InputNode,boolean)
androidx.constraintlayout.widget.VirtualLayout: void setVisibility(int)
org.jaudiotagger.audio.mp4.Chunk: int getEntry()
com.caij.puremusic.db.model.SearchAlbumResult: java.lang.String getUrl()
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
org.simpleframework.xml.core.Contact: java.lang.annotation.Annotation getAnnotation()
com.umeng.analytics.pro.an$a: an$a(com.umeng.analytics.pro.an$1)
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getYunOSVersion(java.util.Properties)
com.google.gson.FieldNamingPolicy$4: FieldNamingPolicy$4(java.lang.String,int)
com.umeng.commonsdk.statistics.proto.Response: void unsetMsg()
com.caij.puremusic.views.NumberRollView: void setString(int)
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean isWXAppInstalled()
org.jaudiotagger.tag.datatype.PartOfSet$PartOfSetValue: PartOfSet$PartOfSetValue(java.lang.String)
com.google.android.material.navigation.NavigationBarMenuView: int getItemBackgroundRes()
org.jaudiotagger.audio.iff.ChunkSummary: void setChunkId(java.lang.String)
org.jaudiotagger.audio.mp4.ChunkWriter: void cleanDrefs(org.jcodec.containers.mp4.boxes.TrakBox)
com.umeng.commonsdk.framework.a: void a(int,int)
com.caij.puremusic.drive.model.PlayListsSubsonicResponse: com.caij.puremusic.drive.model.PlayLists getPlaylists()
org.simpleframework.xml.core.DefaultDetail: boolean isInstantiable()
org.jaudiotagger.tag.mp4.field.Mp4TagReverseDnsField: Mp4TagReverseDnsField(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.mm.opensdk.openapi.WXApiImplComm: WXApiImplComm()
org.simpleframework.xml.stream.CamelCaseBuilder$Attribute: void parse(char[],int,int)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)
com.umeng.analytics.pro.bo: void d(int)
com.caij.puremusic.db.model.ServerSongCoverQueries$deleteSongBySource$2: ServerSongCoverQueries$deleteSongBySource$2()
com.google.common.collect.Iterators$EmptyModifiableIterator: java.lang.Object next()
com.caij.puremusic.drive.model.JellyfinSongListResponse$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
org.simpleframework.xml.transform.ByteTransform: java.lang.Object read(java.lang.String)
com.caij.puremusic.drive.model.DropboxDriveItem: java.lang.String getPath_display()
org.simpleframework.xml.core.Session: java.util.Set entrySet()
org.jaudiotagger.tag.id3.framebody.FrameBodyAPIC: byte[] getImageData()
org.jaudiotagger.audio.asf.data.MetadataDescriptor: org.jaudiotagger.audio.asf.data.GUID getGuid()
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String meid(android.content.Context)
androidx.core.view.ViewCompat$Api17Impl: int getLabelFor(android.view.View)
org.jaudiotagger.audio.asf.io.AsfExtHeaderReader: AsfExtHeaderReader(java.util.List,boolean)
org.jaudiotagger.audio.generic.TagWriter: void delete(org.jaudiotagger.tag.Tag,java.io.RandomAccessFile,java.io.RandomAccessFile)
org.simpleframework.xml.core.ElementMapParameter: java.lang.String getName()
com.caij.puremusic.drive.model.Prop: void getGetcontentlength$annotations()
androidx.core.view.ViewCompat$Api18Impl: boolean isInLayout(android.view.View)
com.caij.puremusic.drive.model.Response$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.caij.puremusic.db.model.ServerSongCoverQueries$GetByIdQuery: void removeListener(app.cash.sqldelight.Query$Listener)
org.simpleframework.xml.core.SetPart: java.lang.String getName()
org.jaudiotagger.tag.wav.WavTag: void setField(org.jaudiotagger.tag.TagField)
org.simpleframework.xml.core.Reflector: java.lang.Class getReturnDependent(java.lang.reflect.Method)
org.jaudiotagger.tag.id3.ID3v22PreferredFrameOrderComparator: ID3v22PreferredFrameOrderComparator()
org.jaudiotagger.tag.id3.framebody.FrameBodyAPIC: FrameBodyAPIC(java.nio.ByteBuffer,int)
com.google.android.material.bottomsheet.BottomSheetBehavior: void setExpandedOffset(int)
org.jaudiotagger.audio.exceptions.ReadOnlyFileException: ReadOnlyFileException(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationX()
kotlin.reflect.KVariance: kotlin.reflect.KVariance[] values()
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: long getLastPositionUpdateTime(android.media.session.PlaybackState)
com.google.common.collect.Iterators$EmptyModifiableIterator: void remove()
com.umeng.analytics.pro.bu: void s()
org.jaudiotagger.audio.asf.data.MetadataDescriptor: int getStreamNumber()
org.jcodec.containers.mp4.boxes.PixelAspectExt: java.lang.String fourcc()
org.simpleframework.xml.stream.OutputAttribute: void setComment(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.caij.puremusic.drive.model.SearchResult3: java.util.List component1()
com.google.android.material.bottomsheet.BottomSheetDialog: void setDismissWithAnimation(boolean)
org.simpleframework.xml.strategy.ArrayValue: int getLength()
com.caij.puremusic.db.model.ServerSongCoverQueries: void insert(com.caij.puremusic.db.model.ServerSongCover)
org.simpleframework.xml.Serializer: boolean validate(java.lang.Class,org.simpleframework.xml.stream.InputNode,boolean)
org.simpleframework.xml.core.ClassSchema: org.simpleframework.xml.core.Instantiator getInstantiator()
com.umeng.analytics.pro.ax: byte[] a()
com.google.android.material.checkbox.MaterialCheckBox: void setButtonTintList(android.content.res.ColorStateList)
com.umeng.analytics.pro.bn: void d(int)
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: short getPreSkip()
org.jaudiotagger.tag.id3.framebody.FrameBodyCRM: FrameBodyCRM(org.jaudiotagger.tag.id3.framebody.FrameBodyCRM)
com.caij.puremusic.db.model.SongEntityQueries$IsSongExistsInPlaylistQuery: long getSongId()
org.jaudiotagger.audio.asf.data.MetadataDescriptor: int getType()
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy valueOf(java.lang.String)
org.jaudiotagger.tag.images.StandardImageHandler: void showWriteFormats()
org.jaudiotagger.tag.id3.ID3v23Frame: ID3v23Frame(java.nio.ByteBuffer,java.lang.String)
org.jcodec.containers.mp4.boxes.SampleToChunkBox: org.jcodec.containers.mp4.boxes.SampleToChunkBox createSampleToChunkBox(org.jcodec.containers.mp4.boxes.SampleToChunkBox$SampleToChunkEntry[])
com.caij.puremusic.drive.model.PlaylistResponse$$serializer: com.caij.puremusic.drive.model.PlaylistResponse deserialize(kotlinx.serialization.encoding.Decoder)
com.umeng.analytics.pro.x: boolean a(long,long)
com.caij.puremusic.model.AbsCustomPlaylist$special$$inlined$inject$default$2: AbsCustomPlaylist$special$$inlined$inject$default$2(org.koin.core.component.KoinComponent,org.koin.core.qualifier.Qualifier,kotlin.jvm.functions.Function0)
org.jaudiotagger.audio.mp3.MP3File: MP3File(java.io.File,int,boolean)
com.tencent.bugly.proguard.aa: aa(android.content.Context)
com.caij.puremusic.model.Data: java.lang.String getPictureBig()
org.jaudiotagger.tag.id3.ID3v11Tag: byte getRelease()
org.simpleframework.xml.core.ElementMapUnionLabel: boolean isInline()
com.caij.puremusic.drive.model.PlexLoginResponse: void write$Self(com.caij.puremusic.drive.model.PlexLoginResponse,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.thegrizzlylabs.sardineandroid.model.Ace: void setInherited(com.thegrizzlylabs.sardineandroid.model.Inherited)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)
org.jaudiotagger.tag.asf.AsfTag: void setField(org.jaudiotagger.tag.TagField)
com.google.common.hash.LittleEndianByteArray$JavaLittleEndianBytes: LittleEndianByteArray$JavaLittleEndianBytes(java.lang.String,int)
com.caij.puremusic.db.model.SongQueries$SongsDateLastDescQuery: void addListener(app.cash.sqldelight.Query$Listener)
com.caij.puremusic.db.model.PlaylistEntityQueries$CheckPlaylistExistsQuery$execute$1: PlaylistEntityQueries$CheckPlaylistExistsQuery$execute$1(com.caij.puremusic.db.model.PlaylistEntityQueries$CheckPlaylistExistsQuery)
org.jaudiotagger.tag.datatype.EventTimingCode: int getType()
com.umeng.analytics.pro.ca$a: com.umeng.analytics.pro.bu a(com.umeng.analytics.pro.ci)
com.caij.puremusic.drive.model.SongItem: java.util.List getMediaStreams()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: AppCompatTextViewAutoSizeHelper$Impl23()
com.afollestad.materialdialogs.WhichButton: com.afollestad.materialdialogs.WhichButton valueOf(java.lang.String)
org.jaudiotagger.audio.asf.data.LanguageList: LanguageList(long,java.math.BigInteger)
org.jcodec.containers.mp4.boxes.SampleSizesBox: void doWrite(java.nio.ByteBuffer)
org.simpleframework.xml.core.GroupExtractor$Registry: org.simpleframework.xml.core.Label resolve(java.lang.Class)
org.simpleframework.xml.Serializer: java.lang.Object read(java.lang.Class,java.lang.String)
com.caij.puremusic.drive.model.BaiduFileResponse: BaiduFileResponse(int,java.util.List)
org.simpleframework.xml.core.ExpressionBuilder: org.simpleframework.xml.core.Expression build(java.lang.String)
org.jcodec.containers.mp4.boxes.EsdsBox$DescriptorParser: org.jcodec.containers.mp4.boxes.EsdsBox$SL parseSL(java.nio.ByteBuffer)
com.umeng.analytics.pro.c: java.io.File getDatabasePath(java.lang.String)
org.jcodec.containers.mp4.boxes.MovieFragmentHeaderBox: int getSequenceNumber()
com.tencent.bugly.proguard.r: void b()
org.simpleframework.xml.convert.ScannerBuilder$Entry: java.lang.annotation.Annotation scan(java.lang.Class)
com.caij.puremusic.drive.model.BaiduDriveItem: com.caij.puremusic.drive.model.BaiduDriveItem copy$default(com.caij.puremusic.drive.model.BaiduDriveItem,long,java.lang.String,long,java.lang.String,long,long,int,int,java.lang.String,int,java.lang.Object)
org.jaudiotagger.tag.aiff.AiffTag: boolean hasCommonFields()
code.name.monkey.appthemehelper.common.prefs.supportv7.ATESeekBarPreference: ATESeekBarPreference(android.content.Context)
com.tencent.bugly.proguard.ad: void a(java.net.HttpURLConnection,java.util.Map)
com.tencent.mm.opensdk.modelbiz.WXChannelShareVideo$Req: int getType()
com.caij.puremusic.model.CategoryInfo$Category: int getId()
org.simpleframework.xml.core.Introspector: Introspector(org.simpleframework.xml.core.Contact,org.simpleframework.xml.core.Label,org.simpleframework.xml.stream.Format)
com.caij.puremusic.drive.model.ImageTags$$serializer: ImageTags$$serializer()
com.umeng.analytics.process.UMProcessDBHelper: void processToMain(java.lang.String)
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean sendJumpToOfflinePayReq(android.content.Context,android.os.Bundle)
com.caij.puremusic.drive.model.PlayListSubsonicResponse$$serializer: PlayListSubsonicResponse$$serializer()
androidx.constraintlayout.motion.widget.MotionLayout: int getStartState()
org.simpleframework.xml.core.Scanner: org.simpleframework.xml.core.Function getReplace()
org.jaudiotagger.tag.id3.framebody.FrameBodyTOPE: FrameBodyTOPE(java.nio.ByteBuffer,int)
org.simpleframework.xml.util.Resolver$Stack: Resolver$Stack(org.simpleframework.xml.util.Resolver,org.simpleframework.xml.util.Resolver$1)
com.umeng.commonsdk.internal.utils.c$a: c$a()
org.simpleframework.xml.core.Introspector: java.lang.String getName()
com.alipay.android.phone.mrpc.core.p: void a(java.lang.String)
com.caij.puremusic.drive.model.Resourcetype$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
androidx.mediarouter.app.MediaRouteActionProvider: MediaRouteActionProvider(android.content.Context)
com.tencent.bugly.proguard.r: com.tencent.bugly.crashreport.biz.UserInfoBean a(android.database.Cursor)
com.caij.puremusic.fragments.settings.AbsSettingsFragment$onViewCreated$1: AbsSettingsFragment$onViewCreated$1()
com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)
androidx.constraintlayout.helper.widget.Flow: void setMaxElementsWrap(int)
org.simpleframework.xml.core.ClassInstantiator: java.lang.Object getInstance()
com.caij.puremusic.db.model.ServerSongCoverQueries$GetByIdQuery$execute$1: java.lang.Object invoke(java.lang.Object)
com.thegrizzlylabs.sardineandroid.model.Prop: void setResourcetype(com.thegrizzlylabs.sardineandroid.model.Resourcetype)
com.caij.puremusic.db.model.SongQueries$GetAlbumSongCountQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.umeng.commonsdk.internal.utils.c: void b()
com.umeng.analytics.pro.bf$b: com.umeng.analytics.pro.cc b()
androidx.appcompat.widget.AppCompatToggleButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.thegrizzlylabs.sardineandroid.model.Prop: com.thegrizzlylabs.sardineandroid.model.Owner getOwner()
org.jcodec.containers.mp4.boxes.ReverseDnsBox: org.jcodec.containers.mp4.boxes.DataBox getDataBox()
com.tencent.mmkv.MMKV: boolean encodeLong(long,java.lang.String,long)
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)
com.google.android.material.chip.Chip: void setChipCornerRadius(float)
com.umeng.commonsdk.statistics.internal.a: a(com.umeng.commonsdk.statistics.internal.a$1)
org.simpleframework.xml.stream.InputPosition: int getLine()
org.jaudiotagger.tag.mp4.field.Mp4GenreField: Mp4GenreField(java.lang.String)
androidx.fragment.app.FragmentContainerView: androidx.fragment.app.Fragment getFragment()
org.simpleframework.xml.core.CompositeInlineMap: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.util.Map)
org.jaudiotagger.tag.id3.framebody.FrameBodyGEOB: FrameBodyGEOB()
com.tencent.mmkv.MMKV: boolean encodeSet(long,java.lang.String,java.lang.String[])
org.jaudiotagger.tag.id3.framebody.FrameBodyPOPM: long getCounter()
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
org.simpleframework.xml.core.CollectionFactory: boolean isCollection(java.lang.Class)
org.jaudiotagger.tag.datatype.PartOfSet: PartOfSet(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody)
com.caij.puremusic.drive.model.PlexUser: java.lang.String component3()
com.thegrizzlylabs.sardineandroid.model.Prop: java.lang.String getGetcontentlength()
code.name.monkey.appthemehelper.common.prefs.supportv7.ATEPreferenceCategory: ATEPreferenceCategory(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.db.model.ServerAudioFormatQueries$GetByIdQuery: ServerAudioFormatQueries$GetByIdQuery(com.caij.puremusic.db.model.ServerAudioFormatQueries,long,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
org.jaudiotagger.tag.wav.WavInfoTag: java.lang.String toString()
org.jaudiotagger.tag.TagOptionSingleton: org.jaudiotagger.tag.id3.AbstractID3v2Tag createDefaultID3Tag()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
com.umeng.analytics.AnalyticsConfig: java.lang.String getAppkey(android.content.Context)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
com.tencent.bugly.proguard.bv: bv()
com.caij.puremusic.drive.model.PlexAlbumsResponse: void write$Self(com.caij.puremusic.drive.model.PlexAlbumsResponse,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.tencent.bugly.proguard.aa: long k()
com.caij.puremusic.drive.model.PlayListItem: int component8()
com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)
com.alipay.apmobilesecuritysdk.a.a: java.lang.String b(android.content.Context)
org.simpleframework.xml.core.ElementMapUnionParameter: ElementMapUnionParameter(java.lang.reflect.Constructor,org.simpleframework.xml.ElementMapUnion,org.simpleframework.xml.ElementMap,org.simpleframework.xml.stream.Format,int)
org.jcodec.containers.mp4.boxes.DataRefBox: int estimateSize()
com.umeng.analytics.process.UMProcessDBDatasSender: int defconProcesserHandler()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
com.umeng.commonsdk.statistics.proto.d$c: void b(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
com.umeng.commonsdk.statistics.proto.d: com.umeng.commonsdk.statistics.proto.d$e b(int)
com.tencent.bugly.proguard.be: java.lang.String c(java.lang.String,java.lang.String)
com.umeng.commonsdk.stateless.d$4: int a(java.io.File,java.io.File)
org.simpleframework.xml.stream.Formatter: void flush()
androidx.core.content.ContextCompat$Api26Impl: android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)
com.caij.puremusic.drive.model.AlbumArtist$Companion: AlbumArtist$Companion()
com.umeng.commonsdk.statistics.proto.d: java.util.Map c()
org.simpleframework.xml.core.CacheParameter: java.lang.Object getKey()
com.caij.puremusic.drive.model.PlaylistMetadata: java.lang.String component4()
com.caij.puremusic.model.Home: int getHomeSection()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.caij.puremusic.drive.model.AlbumItem$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.umeng.analytics.pro.an$c: an$c()
com.caij.puremusic.lyrics.LrcView: void setTimelineTextColor(int)
com.google.android.material.timepicker.TimePickerView: TimePickerView(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.db.model.DriveFileDownUrlInfo: java.lang.String getFileId()
org.simpleframework.xml.stream.NodeBuilder: org.simpleframework.xml.stream.InputNode read(java.io.Reader)
org.jaudiotagger.audio.asf.data.FileHeader: java.util.Date getFileCreationTime()
org.jaudiotagger.tag.id3.framebody.AbstractID3v2FrameBody: void read(java.nio.ByteBuffer)
org.jaudiotagger.tag.id3.framebody.FrameBodyTORY: FrameBodyTORY()
org.simpleframework.xml.core.Reflector: java.lang.reflect.ParameterizedType getParameterType(java.lang.reflect.Constructor,int)
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdTypeCountQuery: int getSourceType()
com.thegrizzlylabs.sardineandroid.DavResource: DavResource(java.lang.String,java.util.Date,java.util.Date,java.lang.String,java.lang.Long,java.lang.String,java.lang.String,java.util.List,java.lang.String,java.util.List,java.util.Map)
com.tencent.mm.opensdk.modelbiz.HandleScanResult$Resp: void fromBundle(android.os.Bundle)
com.tencent.mm.opensdk.modelpay.PayResp: void toBundle(android.os.Bundle)
com.caij.puremusic.drive.model.AlbumList$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.AlbumList)
org.jcodec.containers.mp4.boxes.FullBox: byte getVersion()
me.tankery.lib.circularseekbar.CircularSeekBar: void setMax(float)
org.simpleframework.xml.core.GroupExtractor: boolean isValid(java.lang.Class)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: SpecialEffectsController$Operation$LifecycleImpact(java.lang.String,int)
com.umeng.commonsdk.UMConfigure$1: UMConfigure$1(android.content.Context)
com.caij.puremusic.drive.model.ADriveItem$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: void a()
com.google.android.material.appbar.AppBarLayout: void setElevation(float)
kotlin.sequences.SequencesKt__SequencesKt$flatten$1: SequencesKt__SequencesKt$flatten$1()
com.caij.puremusic.drive.model.PlaylistsMediaContainer$Companion: kotlinx.serialization.KSerializer serializer()
androidx.cardview.widget.CardView: float getRadius()
org.jaudiotagger.audio.asf.data.LanguageList: java.lang.String getLanguage(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMR: void getOwner(java.lang.String)
org.simpleframework.xml.core.Support: java.lang.Object read(java.lang.String,java.lang.Class)
com.alipay.apmobilesecuritysdk.otherid.UtdidWrapper: java.lang.String getUtdid(android.content.Context)
com.tencent.mm.opensdk.modelmsg.WXMediaMessage: WXMediaMessage(com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject)
org.jaudiotagger.tag.id3.framebody.FrameBodyEncrypted: FrameBodyEncrypted(org.jaudiotagger.tag.id3.framebody.FrameBodyEncrypted)
com.umeng.commonsdk.utils.FileLockUtil: void doFileOperateion(java.lang.String,com.umeng.commonsdk.utils.FileLockCallback)
org.simpleframework.xml.stream.OutputElement: void setData(boolean)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.tencent.bugly.crashreport.CrashReport: void setServerUrl(java.lang.String)
com.google.android.material.internal.BaselineLayout: int getBaseline()
org.jaudiotagger.utils.tree.TreeModelEvent: TreeModelEvent(java.lang.Object,org.jaudiotagger.utils.tree.TreePath,int[],java.lang.Object[])
com.caij.puremusic.db.model.ServerAudioFormatQueries$clear$1: java.lang.Object invoke(java.lang.Object)
com.umeng.commonsdk.statistics.b: org.json.JSONObject a(android.content.Context,org.json.JSONObject,org.json.JSONObject,java.lang.String,java.lang.String,java.lang.String)
com.umeng.commonsdk.statistics.idtracking.Envelope: void setSerialNumber(int)
com.umeng.commonsdk.statistics.common.ULog: void e(java.util.Locale,java.lang.String,java.lang.Object[])
com.caij.puremusic.drive.model.JellyfinLoginResponse: void write$Self(com.caij.puremusic.drive.model.JellyfinLoginResponse,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.google.common.hash.LittleEndianByteArray$UnsafeByteArray: int access$100()
com.umeng.commonsdk.statistics.internal.StatTracer: StatTracer(com.umeng.commonsdk.statistics.internal.StatTracer$1)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
com.bumptech.glide.load.ImageHeaderParser$ImageType: ImageHeaderParser$ImageType(java.lang.String,int,boolean)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTagField: boolean isEmpty()
org.jaudiotagger.audio.flac.FlacTagWriter: int computeAvailableRoom(org.jaudiotagger.audio.flac.FlacTagWriter$MetadataBlockInfo)
com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
org.jaudiotagger.audio.asf.data.FileHeader: float getPreciseDuration()
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
org.jcodec.containers.mp4.boxes.GamaExtension: void doWrite(java.nio.ByteBuffer)
com.umeng.commonsdk.internal.c$4: c$4(com.umeng.commonsdk.internal.c)
androidx.preference.CheckBoxPreference: CheckBoxPreference(android.content.Context,android.util.AttributeSet,int,int)
com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()
com.caij.puremusic.drive.model.GoogleDriveFileResponse: java.lang.String getNextPageToken()
com.caij.puremusic.drive.model.Part$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
org.jaudiotagger.tag.id3.framebody.FrameBodyETCO: void clearTimingCodes()
com.caij.puremusic.drive.model.SongItem: java.lang.String component1()
com.google.android.material.timepicker.MaterialTimePicker: MaterialTimePicker()
com.caij.puremusic.db.model.PlayCountEntityQueries$update$2: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.lyrics.LrcView: void setLabel(java.lang.String)
com.google.android.material.bottomsheet.BottomSheetDragHandleView: com.google.android.material.bottomsheet.BottomSheetBehavior findParentBottomSheetBehavior()
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: boolean a(int,java.lang.String)
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getMacShell()
org.jaudiotagger.tag.id3.framebody.FrameBodyLINK: java.lang.String getAdditionalData()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocusedResource(int)
androidx.core.widget.TextViewCompat$Api23Impl: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
com.google.common.collect.AbstractIterator$State: com.google.common.collect.AbstractIterator$State valueOf(java.lang.String)
com.tencent.bugly.proguard.e: void a(java.lang.String,java.lang.Object)
org.jaudiotagger.tag.datatype.AbstractValuePair: java.util.Map getIdToValueMap()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCloseIcon()
org.jaudiotagger.tag.wav.WavTag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.images.Artwork)
com.tencent.mm.opensdk.openapi.IWXAPIEventHandler: void onResp(com.tencent.mm.opensdk.modelbase.BaseResp)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
org.simpleframework.xml.transform.ShortTransform: java.lang.Short read(java.lang.String)
com.umeng.commonsdk.internal.utils.a: java.lang.String c(android.content.Context,java.lang.String)
com.alipay.sdk.app.H5PayActivity: H5PayActivity()
com.caij.puremusic.drive.model.SubsonicPlaylist: int getDuration()
com.google.android.material.chip.Chip: void setChipEndPadding(float)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
org.simpleframework.xml.core.ElementMapLabel: java.lang.Object getEmpty(org.simpleframework.xml.core.Context)
org.jaudiotagger.tag.flac.FlacTag: org.jaudiotagger.tag.TagField createCompilationField(boolean)
com.alipay.android.phone.mrpc.core.b: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)
org.simpleframework.xml.stream.PrefixResolver: java.lang.String getPrefix()
com.umeng.analytics.pro.an: void a(java.io.ObjectInputStream)
StatusBarLyric.API.StatusBarLyric: void sendLyric(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)
com.tencent.mm.opensdk.modelpay.WXJointPay$JointPayReq: WXJointPay$JointPayReq()
com.tencent.bugly.proguard.av: java.lang.String a(java.lang.Throwable,int)
com.caij.puremusic.drive.model.Directory: java.lang.String component3()
org.simpleframework.xml.convert.ConverterFactory: org.simpleframework.xml.convert.Converter getConverter(java.lang.Class)
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOff()
com.tencent.bugly.crashreport.CrashReport: void testNativeCrash(boolean,boolean,boolean)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: boolean isAutoMirrored(android.graphics.drawable.Drawable)
com.thegrizzlylabs.sardineandroid.model.Privilege: Privilege()
com.caij.puremusic.drive.model.ArtistItem$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.alipay.apmobilesecuritysdk.common.RushTimeUtil$1: RushTimeUtil$1()
com.umeng.analytics.pro.o$d: o$d()
com.tencent.mmkv.MMKV: long decodeLong(long,java.lang.String,long)
com.tencent.mm.opensdk.modelbase.BaseResp: BaseResp()
org.jaudiotagger.tag.id3.AbstractID3v2Tag$1: void changeIt()
org.jaudiotagger.tag.id3.AbstractID3v2Frame: void isBinary(boolean)
org.simpleframework.xml.strategy.Type: java.lang.Class getType()
org.jaudiotagger.tag.id3.AbstractTag: boolean equals(java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyTCON: java.lang.String bracketWrap(java.lang.Object)
org.jcodec.containers.mp4.boxes.TrakBox: org.jcodec.containers.mp4.boxes.TrakBox createTrakBox()
org.jcodec.containers.mp4.boxes.TrackHeaderBox: int estimateSize()
com.caij.puremusic.drive.model.Response$Companion: Response$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
code.name.monkey.appthemehelper.common.prefs.supportv7.ATESeekBarPreference: ATESeekBarPreference(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.db.model.SongQueries$GetSongCountBySourceIdQuery$execute$1: SongQueries$GetSongCountBySourceIdQuery$execute$1(com.caij.puremusic.db.model.SongQueries$GetSongCountBySourceIdQuery)
com.caij.puremusic.db.model.ServerLyrics: com.caij.puremusic.db.model.ServerLyrics copy$default(com.caij.puremusic.db.model.ServerLyrics,long,long,java.lang.String,int,java.lang.Object)
com.umeng.analytics.pro.bi: boolean a()
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query firstSongByAlbumId(long,int)
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
com.google.android.material.bottomappbar.BottomAppBar: void setFabAnimationMode(int)
org.simpleframework.xml.core.CompositeArray: boolean validate(org.simpleframework.xml.stream.InputNode)
androidx.fragment.app.DialogFragment: void setShowsDialog(boolean)
org.simpleframework.xml.core.Scanner: java.lang.Class getType()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void write(java.io.OutputStream)
org.simpleframework.xml.core.LabelKey: boolean equals(java.lang.Object)
com.umeng.commonsdk.framework.a$2: void handleMessage(android.os.Message)
com.umeng.commonsdk.framework.UMFrUtils$2: UMFrUtils$2()
com.google.android.material.button.MaterialButton: void setCheckable(boolean)
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode[] values()
com.caij.puremusic.fragments.search.Filter: Filter(java.lang.String,int)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.umeng.analytics.pro.f: f(android.content.Context,java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)
com.umeng.commonsdk.statistics.proto.b$c: void a(com.umeng.analytics.pro.bu,com.umeng.commonsdk.statistics.proto.b)
com.umeng.analytics.pro.o: void e()
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$Req: void fromBundle(android.os.Bundle)
com.thegrizzlylabs.sardineandroid.DavResource: com.thegrizzlylabs.sardineandroid.model.Supportedlock getSupportedLock(com.thegrizzlylabs.sardineandroid.model.Response)
com.umeng.umzid.c: void f(android.content.Context,java.lang.String)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyPairs: void addPair(java.lang.String,java.lang.String)
org.jaudiotagger.audio.dsf.DsfFileReader: org.jaudiotagger.audio.generic.GenericAudioHeader getEncodingInfo(java.nio.channels.FileChannel,java.lang.String)
com.google.common.io.Files$FilePredicate$2: Files$FilePredicate$2(java.lang.String,int)
org.simpleframework.xml.stream.InputAttribute: org.simpleframework.xml.stream.Node getParent()
com.caij.puremusic.model.CategoryInfo: boolean equals(java.lang.Object)
org.jcodec.containers.mp4.boxes.PixelAspectExt: void doWrite(java.nio.ByteBuffer)
org.jaudiotagger.tag.TagOptionSingleton: boolean isId3v1SaveTrack()
com.umeng.commonsdk.utils.b: android.content.pm.PackageInfo a(android.content.Context,java.lang.String,int)
com.caij.puremusic.drive.model.FMediaContainer: int getSize()
com.caij.puremusic.db.model.SongQueries$SongsByInfoQuery: java.lang.String getValue()
org.jaudiotagger.tag.id3.valuepair.ID3V2ExtendedGenreTypes: org.jaudiotagger.tag.id3.valuepair.ID3V2ExtendedGenreTypes[] values()
com.caij.puremusic.drive.model.AMetadata: java.lang.String getKey()
org.jaudiotagger.tag.id3.ID3Tags: java.lang.Object copyObject(java.lang.Object)
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: long lseek(java.io.FileDescriptor,long,int)
androidx.core.app.NotificationCompat$BubbleMetadata$Api30Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
org.jaudiotagger.audio.asf.util.ChunkPositionComparator: int compare(org.jaudiotagger.audio.asf.data.Chunk,org.jaudiotagger.audio.asf.data.Chunk)
com.caij.puremusic.drive.model.DropboxDriveItem: java.lang.String component6()
com.caij.puremusic.model.AbsCustomPlaylist$special$$inlined$inject$default$2: java.lang.Object invoke()
org.jaudiotagger.audio.real.RealTag: RealTag()
com.umeng.commonsdk.statistics.proto.Response$d: com.umeng.commonsdk.statistics.proto.Response$c a()
org.jaudiotagger.tag.id3.ID3v24Frame: void getFrameSize(java.nio.ByteBuffer)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] $values()
com.umeng.commonsdk.statistics.common.ULog: void v(java.lang.String)
com.caij.puremusic.drive.model.BaiduFileResponse$$serializer: com.caij.puremusic.drive.model.BaiduFileResponse deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.views.ListItemView: void setSummary(java.lang.String)
com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(int)
com.caij.puremusic.drive.model.DropboxDriveItem: java.lang.String component2()
com.caij.puremusic.drive.model.MediaInfoWrapper: java.lang.String toString()
com.caij.puremusic.db.model.PlaybackSongQueries: app.cash.sqldelight.Query getPlaybacksByType(int,kotlin.jvm.functions.Function4)
com.tencent.bugly.proguard.ap: java.lang.String a(java.lang.Thread)
com.umeng.commonsdk.debug.SelfChecker: SelfChecker()
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyNumberTotal: AbstractFrameBodyNumberTotal(byte,java.lang.String)
com.tencent.mm.opensdk.modelbiz.WXChannelOpenProfile$Req: boolean checkArgs()
com.caij.puremusic.db.model.Folder: boolean equals(java.lang.Object)
org.jaudiotagger.audio.mp3.MP3File: void readV2Tag(java.io.File,int,int)
com.google.android.material.bottomsheet.BottomSheetDragHandleView: boolean access$100(com.google.android.material.bottomsheet.BottomSheetDragHandleView)
com.umeng.analytics.process.UMProcessDBDatasSender: void constructMessage()
org.simpleframework.xml.core.ElementUnionParameter: int getIndex()
org.simpleframework.xml.core.Source: Source(org.simpleframework.xml.strategy.Strategy,org.simpleframework.xml.core.Support,org.simpleframework.xml.core.Session)
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl: boolean onSearchRequested(android.view.Window$Callback,android.view.SearchEvent)
org.jaudiotagger.tag.images.ImageHandler: void reduceQuality(org.jaudiotagger.tag.images.Artwork,int)
com.caij.puremusic.drive.model.SubsonicAlbum: java.util.List getSong()
com.caij.puremusic.drive.model.Media: int component2()
com.thegrizzlylabs.sardineandroid.model.Propname: Propname()
org.jcodec.containers.mp4.boxes.TrackHeaderBox: long getCreated()
com.caij.puremusic.drive.model.AlbumArtist: com.caij.puremusic.drive.model.AlbumArtist copy$default(com.caij.puremusic.drive.model.AlbumArtist,java.lang.String,java.lang.String,int,java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
org.simpleframework.xml.core.ElementException: ElementException(java.lang.Throwable,java.lang.String,java.lang.Object[])
com.tencent.mm.opensdk.diffdev.a.d: d(java.lang.String,int,int)
com.umeng.commonsdk.statistics.SdkVersion: SdkVersion()
org.simpleframework.xml.core.AttributeLabel: org.simpleframework.xml.core.Decorator getDecorator()
com.tencent.bugly.proguard.k: int a(com.tencent.bugly.proguard.k$a,java.nio.ByteBuffer)
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
org.simpleframework.xml.Serializer: boolean validate(java.lang.Class,java.io.InputStream,boolean)
com.umeng.commonsdk.internal.crash.UMCrashManager: UMCrashManager()
org.jaudiotagger.audio.real.RealChunk: org.jaudiotagger.audio.real.RealChunk readChunk(java.io.RandomAccessFile)
androidx.core.view.ViewCompat$Api17Impl: void setPaddingRelative(android.view.View,int,int,int,int)
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBar$Behavior getBehavior()
org.jaudiotagger.tag.mp4.field.Mp4TagBinaryField: void setData(byte[])
org.simpleframework.xml.core.CompositeList: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object)
org.jaudiotagger.audio.generic.AbstractTag: void setField(org.jaudiotagger.tag.TagField)
com.google.android.material.materialswitch.MaterialSwitch: void setThumbTintList(android.content.res.ColorStateList)
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean sendSubscribeMiniProgramMsg(android.content.Context,com.tencent.mm.opensdk.modelbase.BaseReq)
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.tencent.bugly.proguard.as: void d(java.util.List)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: int getWidth()
com.caij.puremusic.model.smartplaylist.TopTracksPlaylist$Creator: com.caij.puremusic.model.smartplaylist.TopTracksPlaylist createFromParcel(android.os.Parcel)
com.umeng.commonsdk.statistics.proto.b: com.umeng.analytics.pro.bc fieldForId(int)
org.jaudiotagger.audio.aiff.chunk.AuthorChunk: boolean readChunk()
com.caij.puremusic.db.model.SongQueries$GetSongBySourceQuery$execute$1: java.lang.Object invoke(java.lang.Object)
com.google.android.material.checkbox.MaterialCheckBox: java.lang.CharSequence getErrorAccessibilityLabel()
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query allSongs(kotlin.jvm.functions.Function18)
org.jaudiotagger.audio.ogg.util.OggCRCFactory: boolean checkCRC(byte[],byte[])
org.jaudiotagger.tag.lyrics3.FieldFrameBodyINF: java.lang.String getIdentifier()
org.jaudiotagger.tag.wav.WavTag: org.jaudiotagger.tag.id3.AbstractID3v2Tag getID3Tag()
org.jcodec.containers.mp4.boxes.MetaValue: int getInt()
com.caij.puremusic.db.model.Song: java.lang.String component13()
org.jcodec.containers.mp4.boxes.SyncSamplesBox: void doWrite(java.nio.ByteBuffer)
com.umeng.analytics.pro.ch: int g()
androidx.activity.ComponentDialog: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.caij.puremusic.model.PlaylistWrapper: com.caij.puremusic.db.model.PlaylistEntity component1()
org.simpleframework.xml.core.ModelAssembler: void assembleElements(org.simpleframework.xml.core.Model,org.simpleframework.xml.Order)
com.caij.puremusic.db.model.ServerArtistCoverQueries$GetByIdQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.umeng.commonsdk.utils.UMUtils: java.lang.String getChannelByXML(android.content.Context)
androidx.core.view.ViewCompat$Api17Impl: void setLayerPaint(android.view.View,android.graphics.Paint)
org.jaudiotagger.tag.id3.framebody.FrameBodyTMCL: FrameBodyTMCL(java.nio.ByteBuffer,int)
nl.adaptivity.xmlutil.EventType: boolean isTextElement()
com.tencent.bugly.proguard.w: int a(java.lang.String,java.lang.String)
androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.caij.puremusic.helper.BackupContent: com.caij.puremusic.helper.BackupContent[] values()
com.umeng.analytics.pro.l: void c(android.app.Activity)
org.jcodec.containers.mp4.boxes.ChannelBox: int estimateSize()
org.jaudiotagger.tag.id3.framebody.FrameBodyTPOS: FrameBodyTPOS()
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
org.jaudiotagger.audio.dsf.DsdChunk: DsdChunk(java.nio.ByteBuffer)
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: org.jaudiotagger.tag.FieldKey getFieldKey()
com.caij.puremusic.lyrics.CoverLrcView: void setTimelineTextColor(int)
com.tencent.bugly.proguard.as: void a(boolean,java.util.List)
com.umeng.analytics.pro.ab: com.umeng.analytics.pro.a a(com.umeng.analytics.pro.a)
org.simpleframework.xml.core.SetPart: java.lang.Class getDeclaringClass()
org.jaudiotagger.tag.TagOptionSingleton: void setInstanceKey(java.lang.String)
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: void e()
com.umeng.commonsdk.statistics.idtracking.a: java.lang.String a(java.lang.String)
com.caij.puremusic.model.AlbumWithCount: int component2()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
android.support.v4.media.MediaDescriptionCompat$Api21Impl: android.media.MediaDescription build(android.media.MediaDescription$Builder)
org.jcodec.containers.mp4.boxes.SampleDescriptionBox: java.lang.String fourcc()
com.caij.puremusic.db.model.ArtistQueries$artists$2: ArtistQueries$artists$2()
com.tencent.bugly.crashreport.CrashReport: int getUserDatasSize(android.content.Context)
com.caij.puremusic.drive.model.JellyfinLoginResponse: com.caij.puremusic.drive.model.User getUser()
kotlin.jvm.internal.Lambda: java.lang.String toString()
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: void addCustomAction(android.media.session.PlaybackState$Builder,android.media.session.PlaybackState$CustomAction)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: boolean isAllowedEncoding(java.nio.charset.Charset)
com.umeng.commonsdk.utils.UMUtils: java.lang.String getFlymeVersion(java.util.Properties)
com.tencent.bugly.proguard.bl: bl()
org.jaudiotagger.tag.datatype.Lyrics3Line: byte[] writeByteArray()
com.caij.puremusic.drive.model.AlbumResponse: com.caij.puremusic.drive.model.AlbumSubsonicResponse component1()
org.simpleframework.xml.core.PrimitiveScanner: boolean isStrict()
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority[] values()
com.caij.puremusic.db.model.Folder: java.lang.String toString()
com.umeng.analytics.pro.ar: void b(android.app.Activity)
org.jaudiotagger.utils.tree.DefaultTreeModel: org.jaudiotagger.utils.tree.TreeNode[] getPathToRoot(org.jaudiotagger.utils.tree.TreeNode)
com.umeng.common.b: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)
org.simpleframework.xml.core.Instance: java.lang.Object getInstance()
org.jaudiotagger.tag.id3.ID3Frames: void loadID3v23ID3v24Mapping()
com.caij.puremusic.db.model.Album$Adapter: app.cash.sqldelight.ColumnAdapter getSourceTypeAdapter()
com.tencent.mm.opensdk.modelbiz.WXQRCodePay$Resp: void toBundle(android.os.Bundle)
org.simpleframework.xml.core.StructureBuilder: void validateElements(java.lang.Class,org.simpleframework.xml.Order)
androidx.fragment.app.Fragment: void onStart()
org.simpleframework.xml.core.Primitive: java.lang.Object read(org.simpleframework.xml.stream.InputNode)
org.jaudiotagger.audio.generic.GenericAudioHeader: int getSampleRateAsNumber()
com.caij.puremusic.drive.model.ParentReference: int hashCode()
org.simpleframework.xml.core.TreeModel: org.simpleframework.xml.core.Label getText()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyLYR: void addLyric(org.jaudiotagger.tag.id3.framebody.FrameBodySYLT)
com.caij.puremusic.drive.model.ParentReference$Companion: ParentReference$Companion()
com.google.android.material.navigation.NavigationBarMenuView: void setIconTintList(android.content.res.ColorStateList)
org.jaudiotagger.audio.asf.data.VideoStreamChunk: byte[] getCodecId()
com.alipay.android.app.IAlixPay$Stub: android.os.IBinder asBinder()
com.umeng.commonsdk.internal.utils.h: boolean a()
com.umeng.commonsdk.stateless.a: a()
org.jaudiotagger.tag.id3.ID3v24Frame: ID3v24Frame(org.jaudiotagger.tag.id3.ID3v24Frame)
com.caij.puremusic.drive.model.OneDriveFileResponse: java.lang.String getContext()
com.caij.puremusic.db.model.SongEntityQueries$GetSongEntityQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
com.caij.puremusic.model.DriveFileParcelable$Creator: com.caij.puremusic.model.DriveFileParcelable createFromParcel(android.os.Parcel)
androidx.core.app.ShareCompat$Api16Impl: void migrateExtraStreamToClipData(android.content.Intent,java.util.ArrayList)
com.caij.puremusic.drive.model.SongItem: java.lang.String getLocationType()
org.simpleframework.xml.core.TreeModel: java.lang.String getPrefix()
com.thegrizzlylabs.sardineandroid.DavResource: java.lang.String access$400(com.thegrizzlylabs.sardineandroid.DavResource,com.thegrizzlylabs.sardineandroid.model.Response)
org.simpleframework.xml.core.CacheLabel: java.lang.Object getKey()
org.simpleframework.xml.util.ConcurrentCache: ConcurrentCache()
com.caij.puremusic.db.model.PlaylistEntityQueries$playlists$1: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.drive.model.PlexUser: int component1()
com.umeng.analytics.pro.i: void d()
com.caij.puremusic.fragments.settings.OtherSettingsFragment: OtherSettingsFragment()
com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)
androidx.core.widget.TextViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
com.caij.puremusic.drive.model.PlaylistMetadata: java.lang.String toString()
com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)
com.caij.puremusic.drive.model.AlbumResponse: com.caij.puremusic.drive.model.AlbumSubsonicResponse getSubsonicResponse()
org.jcodec.containers.mp4.boxes.EncodedPixelBox: org.jcodec.containers.mp4.boxes.EncodedPixelBox createEncodedPixelBox(int,int)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockData: java.nio.ByteBuffer getBytes()
com.umeng.analytics.MobclickAgent: void onPageEnd(java.lang.String)
org.jaudiotagger.tag.id3.ID3v1Iterator: boolean hasNext()
com.tencent.mm.opensdk.modelmsg.WXWebpageObject: void putExtra(java.lang.String,java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setInsets(int,androidx.core.graphics.Insets)
com.tencent.bugly.proguard.x: boolean a(android.database.sqlite.SQLiteDatabase)
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(int)
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.Id3FieldType getFieldType()
org.jaudiotagger.tag.id3.framebody.FrameBodyPIC: FrameBodyPIC(org.jaudiotagger.tag.id3.framebody.FrameBodyPIC)
com.google.common.collect.Maps$EntryFunction$1: java.lang.Object apply(java.util.Map$Entry)
org.jaudiotagger.tag.wav.WavTag: org.jaudiotagger.tag.Tag getActiveTag()
org.simpleframework.xml.stream.StreamReader$End: StreamReader$End()
com.caij.puremusic.db.model.PlaylistEntityQueries$PlaylistByNameQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
androidx.fragment.app.Fragment: void performConfigurationChanged(android.content.res.Configuration)
org.jaudiotagger.tag.id3.framebody.FrameBodyTORY: FrameBodyTORY(byte,java.lang.String)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
org.jaudiotagger.tag.mp4.Mp4Tag: Mp4Tag()
org.simpleframework.xml.core.ExtractorFactory$ElementListExtractor: java.lang.Class getType(java.lang.annotation.Annotation)
com.umeng.analytics.b: void b(android.content.Context,java.lang.String)
com.caij.puremusic.db.model.FolderQueries$insertFolder$2: FolderQueries$insertFolder$2()
androidx.constraintlayout.motion.widget.MotionHelper: float getProgress()
com.tencent.bugly.proguard.as: com.tencent.bugly.proguard.bo a(android.content.Context,com.tencent.bugly.crashreport.crash.CrashDetailBean,com.tencent.bugly.proguard.aa)
com.caij.puremusic.db.model.FolderQueries$selectById$1: FolderQueries$selectById$1(kotlin.jvm.functions.Function7,com.caij.puremusic.db.model.FolderQueries)
org.jaudiotagger.audio.mp3.MPEGFrameHeader: void setEmphasis()
org.xmlpull.v1.XmlPullParser: int getNamespaceCount(int)
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.fragments.AlbumCoverStyle: int getTitleRes()
com.tencent.mm.opensdk.constants.Build: Build()
com.tencent.bugly.crashreport.CrashReport: void closeBugly()
org.simpleframework.xml.core.Composite: void writeAttributes(org.simpleframework.xml.stream.OutputNode,java.lang.Object,org.simpleframework.xml.core.Section)
com.umeng.commonsdk.framework.UMFrUtils$1: UMFrUtils$1()
org.xmlpull.v1.XmlPullParser: java.lang.String getNamespace()
org.jaudiotagger.tag.id3.framebody.FrameBodySYTC: void setupObjectList()
com.caij.puremusic.model.UpdateInfo$ForcedUpgradeInfo: void writeToParcel(android.os.Parcel,int)
androidx.preference.internal.PreferenceImageView: void setMaxWidth(int)
com.caij.puremusic.drive.model.JellyfinFolder: com.caij.puremusic.drive.model.JellyfinFolder copy(java.lang.String,java.lang.String,java.lang.String)
org.simpleframework.xml.core.ClassScanner: void commit(java.lang.reflect.Method)
org.jaudiotagger.tag.datatype.AbstractValuePair: java.util.List getAlphabeticalValueList()
com.umeng.commonsdk.statistics.common.ULog: void d(java.lang.String,java.lang.String,java.lang.Throwable)
com.umeng.commonsdk.statistics.proto.e: void c()
com.umeng.analytics.pro.ch: void c(byte[],int,int)
org.jaudiotagger.tag.datatype.AbstractDataTypeList: void readByteArray(byte[],int)
org.jaudiotagger.tag.id3.ID3Frames: void loadID3v22ID3v23Mapping()
com.google.android.material.progressindicator.LinearProgressIndicator: void setIndeterminateAnimationType(int)
androidx.appcompat.widget.SwitchCompat: void setThumbResource(int)
com.alipay.android.phone.mrpc.core.a.e: void a(java.lang.Object)
org.jaudiotagger.tag.id3.AbstractID3v2Tag$FrameAndSubId: AbstractID3v2Tag$FrameAndSubId(org.jaudiotagger.tag.id3.AbstractID3v2Tag,org.jaudiotagger.tag.FieldKey,java.lang.String,java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyAENC: FrameBodyAENC(org.jaudiotagger.tag.id3.framebody.FrameBodyAENC)
org.jaudiotagger.tag.lyrics3.Lyrics3v1Iterator: Lyrics3v1Iterator(org.jaudiotagger.tag.lyrics3.Lyrics3v1)
org.jaudiotagger.audio.ogg.OggVorbisTagWriter: byte[] createSegments(int,boolean)
com.google.android.material.slider.Slider: void setThumbStrokeColorResource(int)
com.caij.puremusic.db.model.HistoryEntityQueries$getById$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
com.google.android.material.slider.BaseSlider: float getStepSize()
org.jaudiotagger.audio.dsf.DsfFileReader: org.jaudiotagger.tag.Tag readTag(java.nio.channels.FileChannel,org.jaudiotagger.audio.dsf.DsdChunk,java.lang.String)
org.jaudiotagger.tag.id3.ID3v24Frame: ID3v24Frame(org.jaudiotagger.tag.lyrics3.Lyrics3v2Field)
org.jaudiotagger.tag.id3.framebody.FrameBodyTPRO: java.lang.String getIdentifier()
com.google.android.material.chip.Chip: float getChipIconSize()
org.jaudiotagger.audio.asf.data.MetadataContainer: boolean hasDescriptor(java.lang.String)
org.simpleframework.xml.stream.DocumentReader$Entry: java.lang.String getPrefix()
com.caij.puremusic.drive.model.SubsonicSearchResponse: int hashCode()
com.caij.puremusic.drive.model.SongItem: java.lang.String getParentId()
org.simpleframework.xml.strategy.CycleException: CycleException(java.lang.Throwable,java.lang.String,java.lang.Object[])
com.caij.puremusic.drive.model.PlexArtistsResponse: PlexArtistsResponse(int,com.caij.puremusic.drive.model.AMediaContainer,kotlinx.serialization.internal.SerializationConstructorMarker)
com.caij.puremusic.drive.model.PlexPlaylistsResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
org.jaudiotagger.tag.id3.ID3Frames: java.util.TreeSet getSupportedFrames()
com.alipay.apmobilesecuritysdk.e.a: com.alipay.apmobilesecuritysdk.e.b b(android.content.Context)
com.google.android.material.appbar.CollapsingToolbarLayout: void setContentScrimColor(int)
org.simpleframework.xml.core.ElementListLabel: org.simpleframework.xml.core.Converter getConverter(org.simpleframework.xml.core.Context,java.lang.String)
app.cash.sqldelight.RollbackException: RollbackException()
com.caij.puremusic.fragments.AlbumCoverStyle: com.caij.puremusic.fragments.AlbumCoverStyle[] values()
com.alipay.android.phone.mrpc.core.m: m(com.alipay.android.phone.mrpc.core.l,java.util.concurrent.Callable,com.alipay.android.phone.mrpc.core.q)
com.tencent.mm.opensdk.modelmsg.WXGameVideoFileObject: void serialize(android.os.Bundle)
com.umeng.commonsdk.stateless.d$2: d$2()
org.jaudiotagger.tag.id3.ID3v1FieldKey: ID3v1FieldKey(java.lang.String,int)
com.umeng.commonsdk.statistics.idtracking.e: void a()
org.jaudiotagger.tag.TagOptionSingleton: org.jaudiotagger.tag.reference.ID3V2Version getID3V2Version()
com.caij.puremusic.db.model.Song: Song(long,java.lang.String,int,int,long,java.lang.String,java.lang.String,long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,long,long)
com.tencent.mm.opensdk.modelmsg.SendAuth$Resp: void fromBundle(android.os.Bundle)
org.simpleframework.xml.stream.OutputNode: void setName(java.lang.String)
org.jcodec.containers.mp4.boxes.TrakBox: java.lang.String getHandlerType()
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: void deleteField(org.jaudiotagger.tag.FieldKey)
com.google.common.io.Files$FilePredicate$1: java.lang.String toString()
androidx.fragment.app.Fragment: void postponeEnterTransition()
com.caij.puremusic.drive.model.SongItem: java.lang.String getPresentationUniqueKey()
com.caij.puremusic.drive.model.Directory$$serializer: Directory$$serializer()
org.simpleframework.xml.core.Signature: java.lang.Object create(java.lang.Object[])
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
androidx.recyclerview.widget.RecyclerView: int getBaseline()
com.umeng.analytics.pro.ab$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
com.caij.puremusic.drive.model.JellyfinArtistResponse: JellyfinArtistResponse(java.util.List,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
org.jaudiotagger.tag.id3.framebody.FrameBodyIPLS: FrameBodyIPLS(byte,java.lang.String)
org.json.alipay.a: a(java.util.Collection)
com.caij.puremusic.drive.model.Auth2Token: com.caij.puremusic.drive.model.Auth2Token copy$default(com.caij.puremusic.drive.model.Auth2Token,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,long,int,java.lang.Object)
com.google.common.reflect.TypeToken$TypeFilter$2: TypeToken$TypeFilter$2(java.lang.String,int)
androidx.preference.UnPressableLinearLayout: UnPressableLinearLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.appbar.MaterialToolbar: void setLogoScaleType(android.widget.ImageView$ScaleType)
org.jaudiotagger.utils.tree.DefaultTreeModel: void insertNodeInto(org.jaudiotagger.utils.tree.MutableTreeNode,org.jaudiotagger.utils.tree.MutableTreeNode,int)
org.simpleframework.xml.stream.IdentityStyle: java.lang.String getAttribute(java.lang.String)
org.jcodec.containers.mp4.boxes.NodeBox: int estimateSize()
org.jcodec.containers.mp4.boxes.UdtaBox: UdtaBox(org.jcodec.containers.mp4.boxes.Header)
com.caij.puremusic.lyrics.LrcView: float getLrcWidth()
org.jaudiotagger.audio.AudioHeader: java.lang.Long getAudioDataEndPosition()
com.caij.puremusic.db.model.Album: com.caij.puremusic.db.model.Album copy(long,int,java.lang.String,long,long,java.lang.String,long,java.lang.String,java.lang.String,int,int)
com.caij.puremusic.fragments.player.peek.PeekPlayerFragment: PeekPlayerFragment()
com.caij.puremusic.drive.model.SubsonicResponse: int hashCode()
com.caij.puremusic.drive.model.SubsonicSong: void write$Self(com.caij.puremusic.drive.model.SubsonicSong,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
org.jaudiotagger.audio.mp4.Mp4InfoReader: org.jaudiotagger.audio.generic.GenericAudioHeader read(java.io.RandomAccessFile)
org.koin.core.definition.Kind: org.koin.core.definition.Kind[] $values()
org.simpleframework.xml.core.ModelSection: java.lang.String getPath(java.lang.String)
com.umeng.analytics.pro.b$a$a: java.lang.String b()
com.umeng.analytics.pro.k: int a()
org.jaudiotagger.tag.id3.framebody.FrameBodyWOAS: FrameBodyWOAS()
com.caij.puremusic.db.model.SongQueries$insertOrReplace$2: void invoke(kotlin.jvm.functions.Function1)
com.alipay.sdk.app.PayTask: java.lang.String a(android.content.Context)
org.jaudiotagger.audio.exceptions.ModifyVetoException: ModifyVetoException(java.lang.String)
org.jaudiotagger.tag.datatype.PairedTextEncodedStringNullTerminated: void readByteArray(byte[],int)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()
androidx.fragment.app.Fragment: int getPopExitAnim()
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: java.lang.String formatDateAsTime(java.util.Date)
com.caij.puremusic.drive.model.Media: Media(int,int,int,int,java.lang.String,java.lang.String,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.umeng.analytics.pro.s: void a(java.lang.String,java.lang.String,long,int,java.lang.String)
com.umeng.vt.diff.Channel: void init(android.content.Context)
com.caij.puremusic.drive.model.AlbumItem: com.caij.puremusic.drive.model.AlbumItem copy(java.lang.String,java.lang.String,java.lang.String,boolean,long,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List,java.lang.String)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCheckedIconTint()
org.jcodec.containers.mp4.boxes.Box: void parse(java.nio.ByteBuffer)
com.caij.puremusic.drive.model.DropboxDriveItem: java.lang.String getClient_modified()
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRL: FrameBodyTDRL(org.jaudiotagger.tag.id3.framebody.FrameBodyTDRL)
com.umeng.analytics.pro.bf$c: bf$c()
com.umeng.commonsdk.internal.utils.e$a: com.umeng.commonsdk.internal.utils.e$a[] values()
org.jcodec.containers.mp4.boxes.MovieFragmentBox: int getSequenceNumber()
com.caij.puremusic.drive.model.AlbumItem: java.lang.String getName()
com.umeng.commonsdk.internal.utils.UMInternalUtilsAgent: UMInternalUtilsAgent()
com.caij.puremusic.drive.model.AMetadata$Companion: AMetadata$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.jcodec.containers.mp4.boxes.TrunBox: int[] access$302(org.jcodec.containers.mp4.boxes.TrunBox,int[])
com.tencent.bugly.proguard.al: boolean a(int,java.lang.String,java.lang.Object[])
org.jaudiotagger.tag.lyrics3.FieldFrameBodyIMG: FieldFrameBodyIMG(java.lang.String)
org.jaudiotagger.logging.PlainTextTagDisplayFormatter: org.jaudiotagger.logging.AbstractTagDisplayFormatter getInstanceOf()
com.caij.puremusic.db.model.FolderQueries$SelectByIdQuery$execute$1: java.lang.Object invoke(java.lang.Object)
com.umeng.commonsdk.statistics.proto.c$d: c$d()
org.jaudiotagger.tag.id3.framebody.FrameBodyTLAN: FrameBodyTLAN(org.jaudiotagger.tag.id3.framebody.FrameBodyTLAN)
com.caij.puremusic.drive.model.ADriveFileResponse$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.alipay.apmobilesecuritysdk.face.TMNTokenClient$1: void run()
com.thegrizzlylabs.sardineandroid.model.Write: Write()
com.tencent.mmkv.MMKV: void setCallbackHandler(boolean,boolean)
com.caij.puremusic.fragments.player.cardblur.CardBlurFragment: CardBlurFragment()
com.google.android.material.badge.BadgeState$State: BadgeState$State()
org.simpleframework.xml.core.Persister: Persister(org.simpleframework.xml.stream.Format)
com.tencent.bugly.crashreport.CrashReport: void setCrashRegularFilter(java.lang.String)
com.tencent.bugly.proguard.u: void a(int,java.util.List)
com.caij.puremusic.db.model.AlbumQueries$deleteAlbumById$1: AlbumQueries$deleteAlbumById$1(long)
org.jaudiotagger.audio.real.RealChunk: java.io.DataInputStream getDataInputStream()
org.jaudiotagger.tag.id3.ID3v2ChapterFrames: ID3v2ChapterFrames()
org.jaudiotagger.audio.ogg.util.OggCRCFactory: void init()
com.caij.puremusic.db.model.SongEntityQueries$deleteSongFromPlaylist$1: java.lang.Object invoke(java.lang.Object)
org.simpleframework.xml.core.Schema: boolean isPrimitive()
com.caij.puremusic.model.AbsCustomPlaylist$special$$inlined$inject$default$1: AbsCustomPlaylist$special$$inlined$inject$default$1(org.koin.core.component.KoinComponent,org.koin.core.qualifier.Qualifier,kotlin.jvm.functions.Function0)
com.thegrizzlylabs.sardineandroid.DavResource: java.lang.String access$200(com.thegrizzlylabs.sardineandroid.DavResource,com.thegrizzlylabs.sardineandroid.model.Response)
com.google.android.material.datepicker.MaterialCalendarGridView: MaterialCalendarGridView(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)
org.simpleframework.xml.stream.CamelCaseStyle: java.lang.String getElement(java.lang.String)
androidx.fragment.app.Fragment: void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
com.umeng.analytics.b: void n()
com.caij.puremusic.db.model.AlbumQueries$album$1: AlbumQueries$album$1(kotlin.jvm.functions.Function11,com.caij.puremusic.db.model.AlbumQueries)
com.umeng.commonsdk.internal.utils.b: b()
com.caij.puremusic.drive.model.PlexUser: int getId()
com.tencent.mm.opensdk.modelmsg.WXStateSceneDataObject$IWXStateJumpInfo: void serialize(android.os.Bundle)
com.tencent.bugly.crashreport.CrashReport$UserStrategy: CrashReport$UserStrategy(android.content.Context)
org.jaudiotagger.tag.id3.framebody.FrameBodyTPOS: void setDiscTotal(java.lang.String)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.umeng.analytics.pro.ad$b: boolean b()
org.jaudiotagger.audio.asf.data.VideoStreamChunk: void setCodecId(byte[])
com.caij.puremusic.drive.model.PlexArtistsResponse$Companion: PlexArtistsResponse$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.thegrizzlylabs.sardineandroid.model.Prop: void setOwner(com.thegrizzlylabs.sardineandroid.model.Owner)
com.google.android.material.bottomnavigation.BottomNavigationView: void setOnNavigationItemReselectedListener(com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener)
org.jaudiotagger.audio.generic.GenericAudioHeader: java.lang.String toString()
org.jaudiotagger.tag.id3.ID3v11Tag: java.util.List getFields(org.jaudiotagger.tag.FieldKey)
org.simpleframework.xml.strategy.CycleException: CycleException(java.lang.String,java.lang.Object[])
com.alipay.android.app.IAlixPay: java.lang.String prePay(java.lang.String)
com.tencent.bugly.proguard.p: void a(android.content.Context,java.lang.String,boolean,com.tencent.bugly.BuglyStrategy)
com.tencent.bugly.proguard.ac: com.tencent.bugly.crashreport.common.strategy.StrategyBean d()
org.jcodec.containers.mp4.boxes.TrackHeaderBox: float getWidth()
androidx.preference.MultiSelectListPreference: MultiSelectListPreference(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query songsByAlum(java.lang.String)
com.umeng.analytics.process.UMProcessDBHelper: UMProcessDBHelper()
org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId: void a(boolean)
org.simpleframework.xml.stream.NodeWriter: void writeValue(org.simpleframework.xml.stream.OutputNode)
com.umeng.analytics.pro.ay: void a(com.umeng.analytics.pro.av,java.lang.String,java.lang.String)
org.jaudiotagger.tag.id3.ID3v1Tag: java.util.List getTrack()
com.caij.puremusic.drive.model.PlexUser: java.lang.String getAuthToken()
com.caij.puremusic.MainModuleKt$viewModules$1$5: MainModuleKt$viewModules$1$5()
org.jaudiotagger.audio.mp3.MP3FileReader: org.jaudiotagger.tag.Tag getTag(java.io.RandomAccessFile)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
org.jcodec.containers.mp4.boxes.CompositionOffsetsBox$LongEntry: long getOffset()
org.jaudiotagger.audio.ogg.util.VorbisPacketType: VorbisPacketType(java.lang.String,int,int)
org.simpleframework.xml.core.CacheParameter: java.lang.String getPath()
com.caij.puremusic.db.model.SongEntityQueries$songsFromPlaylist$2: com.caij.puremusic.db.model.SongEntity invoke(long,long,long)
com.caij.puremusic.drive.model.AMediaContainer$$serializer: com.caij.puremusic.drive.model.AMediaContainer deserialize(kotlinx.serialization.encoding.Decoder)
org.simpleframework.xml.core.CompositeMap: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.lang.Object)
org.repackage.a.a.a.a$a$a: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)
com.umeng.commonsdk.UMConfigure: void invoke(java.lang.reflect.Method,java.lang.Object[])
com.thegrizzlylabs.sardineandroid.util.ElementConverter: ElementConverter()
com.umeng.commonsdk.internal.utils.a: android.app.ActivityManager$MemoryInfo h(android.content.Context)
com.tencent.mm.opensdk.modelbiz.WXOpenCustomerServiceChat$Resp: boolean checkArgs()
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: void registPreProcessCallback(java.lang.String,com.umeng.commonsdk.statistics.internal.UMImprintPreProcessCallback)
com.caij.puremusic.drive.model.JellyfinFolder$Companion: kotlinx.serialization.KSerializer serializer()
org.simpleframework.xml.transform.StringArrayTransform: StringArrayTransform()
com.caij.puremusic.drive.model.DropboxDriveItem$$serializer: DropboxDriveItem$$serializer()
org.simpleframework.xml.stream.OutputElement: org.simpleframework.xml.stream.OutputNode getParent()
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.tencent.bugly.proguard.aa: int v()
com.alipay.apmobilesecuritysdk.e.i: void a(com.alipay.apmobilesecuritysdk.e.b)
com.caij.puremusic.drive.model.Prop: java.lang.String getDisplayname()
com.alipay.apmobilesecuritysdk.a.a: int a(java.util.Map)
org.simpleframework.xml.core.KeyBuilder$Key: int hashCode()
org.simpleframework.xml.core.Signature: Signature(org.simpleframework.xml.core.Signature)
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
com.google.android.material.internal.ClippableRoundedCornerLayout: ClippableRoundedCornerLayout(android.content.Context,android.util.AttributeSet)
com.tencent.mm.opensdk.modelbiz.JoinChatroom$Resp: int getType()
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getSecondSimIMEi(android.content.Context)
org.jaudiotagger.audio.mp3.MP3AudioHeader: boolean isPadding()
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox$Factory: org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox$Factory sampleDescriptionIndex(long)
androidx.preference.CheckBoxPreference: CheckBoxPreference(android.content.Context,android.util.AttributeSet)
com.tencent.bugly.proguard.k: boolean a(int,boolean)
org.simpleframework.xml.core.Support: org.simpleframework.xml.core.Label getLabel(org.simpleframework.xml.core.Contact,java.lang.annotation.Annotation)
com.caij.puremusic.drive.model.DropboxDriveItem: com.caij.puremusic.drive.model.DropboxDriveItem copy$default(com.caij.puremusic.drive.model.DropboxDriveItem,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
com.umeng.analytics.pro.bu: bu(com.umeng.analytics.pro.ci)
com.tencent.mm.opensdk.modelbiz.CreateChatroom$Resp: void toBundle(android.os.Bundle)
com.tencent.bugly.proguard.ak: boolean c()
org.jcodec.containers.mp4.boxes.NodeBox: void findDeepInner(org.jcodec.containers.mp4.boxes.Box,java.lang.Class,java.lang.String,java.util.List)
org.simpleframework.xml.core.ElementUnionLabel: org.simpleframework.xml.core.Expression getExpression()
com.umeng.commonsdk.statistics.common.ULog: void w(java.lang.Throwable)
com.umeng.vt.diff.Event: void init(android.content.Context,java.lang.String,java.lang.String,int,java.lang.String)
org.jaudiotagger.tag.flac.FlacTag: void setField(org.jaudiotagger.tag.images.Artwork)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
org.jaudiotagger.audio.asf.data.MetadataDescriptor: long getNumber()
com.caij.puremusic.drive.model.PlexPlaylistsResponse: com.caij.puremusic.drive.model.PlaylistsMediaContainer getMediaContainer()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTint(android.graphics.drawable.Drawable,int)
com.caij.puremusic.drive.model.Multistatus$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.Multistatus)
com.tencent.bugly.crashreport.CrashReport: void postException(int,java.lang.String,java.lang.String,java.lang.String,java.util.Map)
com.caij.puremusic.db.model.PlayCountEntityQueries$checkSongExistInPlayCount$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
org.jaudiotagger.tag.id3.ID3v23Tag: org.jaudiotagger.tag.id3.ID3v23Frame createFrame(java.lang.String)
org.simpleframework.xml.ElementList: java.lang.Class type()
com.alipay.android.phone.mrpc.core.m: void done()
com.caij.puremusic.drive.model.OneDriveFileResponse: java.util.List getValue()
org.jaudiotagger.tag.id3.framebody.FrameBodyTALB: FrameBodyTALB(org.jaudiotagger.tag.id3.framebody.FrameBodyTALB)
com.tencent.bugly.crashreport.common.strategy.StrategyBean: void writeToParcel(android.os.Parcel,int)
com.tencent.bugly.crashreport.CrashReport$UserStrategy: int getCallBackType()
com.umeng.commonsdk.UMConfigure: void submitPolicyGrantResult(android.content.Context,boolean)
org.jaudiotagger.tag.id3.ID3v24Tag: ID3v24Tag()
org.jaudiotagger.tag.aiff.AiffTagFieldKey: AiffTagFieldKey(java.lang.String,int,java.lang.String)
androidx.preference.PreferenceHeaderFragmentCompat: PreferenceHeaderFragmentCompat()
com.caij.puremusic.drive.model.PlexSongsResponse: PlexSongsResponse(int,com.caij.puremusic.drive.model.MediaContainer,kotlinx.serialization.internal.SerializationConstructorMarker)
com.google.common.reflect.Types$JavaVersion$2: java.lang.reflect.Type newArrayType(java.lang.reflect.Type)
com.tencent.mm.opensdk.modelbiz.HandleScanResult$Resp: HandleScanResult$Resp(android.os.Bundle)
org.jaudiotagger.tag.id3.framebody.FrameBodyETCO: int getTimestampFormat()
com.umeng.analytics.b: void f(android.content.Context,java.lang.String)
com.alipay.android.phone.mrpc.core.q: com.alipay.android.phone.mrpc.core.HttpUrlHeader a(org.apache.http.HttpResponse)
com.umeng.commonsdk.statistics.proto.e: com.umeng.analytics.pro.bz l()
com.tencent.mm.opensdk.modelbiz.WXChannelOpenLive$Resp: int getType()
com.alipay.android.app.IAlixPay: void r03(java.lang.String,java.lang.String,java.util.Map)
com.caij.puremusic.drive.model.PlexSectionsResponse$Companion: PlexSectionsResponse$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.caij.puremusic.drive.model.AlbumMetadata: java.lang.String getTitle()
org.jcodec.containers.mp4.boxes.ChunkOffsetsBox: int estimateSize()
com.umeng.commonsdk.statistics.proto.a$e: com.umeng.commonsdk.statistics.proto.a$e a(java.lang.String)
com.umeng.commonsdk.vchannel.b: void a(java.util.Map)
org.jaudiotagger.tag.id3.framebody.FrameBodyTALB: FrameBodyTALB(java.nio.ByteBuffer,int)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyUnsupported: void read(java.nio.ByteBuffer)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundColor(int)
androidx.fragment.app.DialogFragment: void onStop()
com.tencent.mm.opensdk.modelmsg.SendTdiAuth$Resp: int getType()
org.jaudiotagger.audio.flac.FlacStreamReader: void findStream()
com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)
com.tencent.bugly.proguard.l: void a(java.util.Collection,int)
com.caij.puremusic.db.model.AlbumQueries$GetAlbumByArtistIdQuery: void addListener(app.cash.sqldelight.Query$Listener)
org.jaudiotagger.tag.id3.framebody.FrameBodyAPIC: int getPictureType()
org.repackage.com.meizu.flyme.openidsdk.OpenId: void a(long)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTagField: VorbisCommentTagField(byte[])
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
com.caij.puremusic.drive.model.PlayListsSubsonicResponse$Companion: PlayListsSubsonicResponse$Companion()
org.simpleframework.xml.core.ElementListLabel: java.lang.Object getEmpty(org.simpleframework.xml.core.Context)
org.json.alipay.c: java.lang.Object d()
com.google.android.material.bottomsheet.BottomSheetBehavior: void setGestureInsetBottomIgnored(boolean)
org.jcodec.containers.mp4.boxes.TimecodeMediaInfoBox: void doWrite(java.nio.ByteBuffer)
org.jaudiotagger.tag.id3.framebody.FrameBodyUSLT: void write(java.io.ByteArrayOutputStream)
com.caij.puremusic.drive.model.PlexAlbumsResponse: PlexAlbumsResponse()
com.umeng.commonsdk.statistics.common.DataHelper: java.lang.String toHexString(byte[])
com.tencent.mm.opensdk.diffdev.a.c$a: c$a()
com.thegrizzlylabs.sardineandroid.util.SardineUtil: org.w3c.dom.Element createElement(org.w3c.dom.Element,javax.xml.namespace.QName)
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: int getChannelNumber()
com.caij.puremusic.db.model.PlayCountEntityQueries$CheckSongExistInPlayCountQuery: PlayCountEntityQueries$CheckSongExistInPlayCountQuery(com.caij.puremusic.db.model.PlayCountEntityQueries,long,kotlin.jvm.functions.Function1)
com.caij.puremusic.drive.model.MediaInfoWrapper: java.util.List getServerLyricss()
com.thegrizzlylabs.sardineandroid.util.SardineUtil: java.nio.charset.Charset standardUTF8()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
com.caij.puremusic.drive.model.DropboxDriveItem$$serializer: com.caij.puremusic.drive.model.DropboxDriveItem deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.network.model.LastFmAlbum$Album: java.lang.String getListeners()
com.tencent.bugly.crashreport.CrashReport: void setUserId(android.content.Context,java.lang.String)
com.caij.puremusic.drive.model.ADriveItem: int hashCode()
com.umeng.commonsdk.utils.UMUtils: java.lang.String getZid(android.content.Context)
com.tencent.mm.opensdk.modelbiz.ChooseCardFromWXCardPackage$Req: int getType()
com.google.android.material.chip.ChipGroup: void setSelectionRequired(boolean)
com.umeng.commonsdk.utils.UMUtils: java.lang.String getAppSHA1Key(android.content.Context)
org.jaudiotagger.tag.Tag: org.jaudiotagger.tag.TagField getFirstField(java.lang.String)
org.simpleframework.xml.core.ObjectScanner: org.simpleframework.xml.core.ParameterMap getParameters()
com.thegrizzlylabs.sardineandroid.model.EntityWithAnyElement: java.util.List getAny()
org.simpleframework.xml.stream.OutputAttribute: void setName(java.lang.String)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: void put(java.lang.String,java.io.File,java.lang.String,boolean,java.lang.String)
androidx.constraintlayout.widget.Guideline: void setGuidelinePercent(float)
com.umeng.analytics.pro.aa: aa()
com.google.android.gms.internal.play_billing.zzcj: java.lang.Class zza()
org.simpleframework.xml.core.TextLabel: TextLabel(org.simpleframework.xml.core.Contact,org.simpleframework.xml.Text,org.simpleframework.xml.stream.Format)
org.jaudiotagger.audio.flac.FlacTagWriter: void write(org.jaudiotagger.tag.Tag,java.nio.channels.FileChannel,java.lang.String)
com.umeng.commonsdk.statistics.proto.d: int b()
org.jaudiotagger.tag.id3.framebody.FrameBodyUSLT: void setDescription(java.lang.String)
com.caij.puremusic.drive.model.Directory$Companion: kotlinx.serialization.KSerializer serializer()
com.caij.puremusic.db.model.ServerLyricsQueries$deleteById$2: java.lang.Object invoke(java.lang.Object)
org.simpleframework.xml.core.CacheLabel: java.lang.String getEntry()
com.google.android.material.bottomsheet.BottomSheetDialog$EdgeToEdgeCallback: void onStateChanged(android.view.View,int)
org.simpleframework.xml.stream.OutputDocument: java.lang.String getPrefix()
com.umeng.analytics.pro.y: void a(com.umeng.analytics.pro.y$a)
com.caij.puremusic.drive.model.SubsonicResponse: com.caij.puremusic.drive.model.SubsonicResponse copy$default(com.caij.puremusic.drive.model.SubsonicResponse,java.lang.String,java.lang.String,com.caij.puremusic.drive.model.AlbumList,int,java.lang.Object)
nl.adaptivity.xmlutil.serialization.structure.XmlOrderNodeKt$fullFlatten$1: XmlOrderNodeKt$fullFlatten$1()
org.simpleframework.xml.core.SetPart: SetPart(org.simpleframework.xml.core.MethodName,java.lang.annotation.Annotation,java.lang.annotation.Annotation[])
com.caij.puremusic.db.model.PlayCountEntity: long getTimePlayed()
com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.umeng.commonsdk.debug.UMLog: void mutlInfo(java.lang.String,int,java.lang.String,java.lang.String[],java.lang.String[])
com.caij.puremusic.drive.model.SubsonicResponse$Companion: SubsonicResponse$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSOT: java.lang.String getIdentifier()
org.simpleframework.xml.transform.BigDecimalTransform: java.lang.String write(java.math.BigDecimal)
com.caij.puremusic.drive.model.PlaylistResponse: boolean equals(java.lang.Object)
kotlin.io.FileWalkDirection: FileWalkDirection(java.lang.String,int)
org.jaudiotagger.tag.images.Artwork: int getHeight()
org.jaudiotagger.audio.generic.AudioFileWriter2: void delete(org.jaudiotagger.audio.AudioFile)
org.jcodec.containers.mp4.boxes.TrackHeaderBox: long getDuration()
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
com.alipay.apmobilesecuritysdk.f.a: a()
androidx.core.view.AccessibilityDelegateCompat: AccessibilityDelegateCompat(android.view.View$AccessibilityDelegate)
org.jaudiotagger.audio.mp4.Flatten: Flatten()
com.umeng.analytics.pro.ai$a: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
com.caij.puremusic.db.model.PlayCountEntityQueries$update$2: void invoke(kotlin.jvm.functions.Function1)
com.thegrizzlylabs.sardineandroid.model.Remove: com.thegrizzlylabs.sardineandroid.model.Prop getProp()
org.jaudiotagger.utils.tree.TreeModelEvent: TreeModelEvent(java.lang.Object,java.lang.Object[],int[],java.lang.Object[])
org.jaudiotagger.audio.asf.data.Chunk: long getChunckEnd()
androidx.appcompat.widget.DropDownListView$Api33Impl: void setSelectedChildViewEnabled(android.widget.AbsListView,boolean)
com.tencent.mm.opensdk.openapi.MMSharedPreferences: java.util.Map getAll()
com.caij.puremusic.drive.model.AlbumMetadata: java.lang.String getType()
org.simpleframework.xml.core.TextListLabel: java.lang.String[] getPaths()
com.thegrizzlylabs.sardineandroid.model.Locktoken: java.lang.String getHref()
com.google.android.material.materialswitch.MaterialSwitch: void setTrackDecorationResource(int)
com.umeng.vt.diff.util.ClassLoadUtil: ClassLoadUtil()
com.caij.puremusic.drive.model.EmbyAlbumsResponse$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.umeng.commonsdk.statistics.common.MLog: void v(java.lang.Throwable)
com.google.android.material.card.MaterialCardView: void setClickable(boolean)
org.simpleframework.xml.Element: boolean required()
com.caij.puremusic.db.model.Song: long component1()
androidx.appcompat.view.menu.MenuPopupHelper$Api17Impl: void getRealSize(android.view.Display,android.graphics.Point)
androidx.fragment.app.DialogFragment: void prepareDialog(android.os.Bundle)
com.tencent.bugly.proguard.ap: boolean c(java.lang.String)
org.jaudiotagger.tag.id3.ID3v22Tag: boolean isUnsynchronization()
com.google.android.material.progressindicator.CircularProgressIndicator: void setIndicatorInset(int)
com.umeng.commonsdk.statistics.idtracking.ImprintHandler$a: ImprintHandler$a(com.umeng.commonsdk.statistics.proto.d)
org.jaudiotagger.audio.aiff.AiffTagFieldKey: java.lang.String getFieldName()
org.jcodec.containers.mp4.boxes.SampleSizesBox: int[] getSizes()
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(android.content.res.ColorStateList)
org.simpleframework.xml.stream.HyphenBuilder$Parser: HyphenBuilder$Parser(org.simpleframework.xml.stream.HyphenBuilder,java.lang.String,org.simpleframework.xml.stream.HyphenBuilder$1)
com.google.android.material.button.MaterialButton: void setStrokeWidth(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyTPE3: java.lang.String getIdentifier()
com.tencent.bugly.proguard.as: void b(com.tencent.bugly.crashreport.crash.CrashDetailBean,boolean)
org.jaudiotagger.audio.aiff.AiffAudioHeader: AiffAudioHeader()
com.google.android.material.imageview.ShapeableImageView: void setStrokeWidth(float)
com.umeng.analytics.pro.f: void f(android.database.sqlite.SQLiteDatabase)
com.afollestad.materialdialogs.internal.button.DialogActionButtonLayout: void setActionButtons(com.afollestad.materialdialogs.internal.button.DialogActionButton[])
com.caij.puremusic.drive.model.AMediaContainer: AMediaContainer(java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
org.simpleframework.xml.core.Caller: void complete(java.lang.Object)
com.caij.puremusic.drive.model.Part$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.google.common.reflect.Types$JavaVersion: com.google.common.reflect.Types$JavaVersion[] values()
org.jaudiotagger.audio.asf.data.AudioStreamChunk: AudioStreamChunk(java.math.BigInteger)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: int getState(android.media.session.PlaybackState)
org.simpleframework.xml.core.ClassInstantiator: org.simpleframework.xml.core.Creator getCreator(org.simpleframework.xml.core.Criteria)
com.thegrizzlylabs.sardineandroid.Sardine: java.lang.String refreshLock(java.lang.String,java.lang.String,java.lang.String)
com.caij.puremusic.db.model.HistoryEntityQueries$getById$1: java.lang.Object invoke(java.lang.Object)
org.simpleframework.xml.core.Persister: boolean validate(java.lang.Class,java.lang.String)
org.simpleframework.xml.util.WeakCache$Segment: java.lang.Object take(java.lang.Object)
com.umeng.analytics.pro.an$c: void b(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
org.jaudiotagger.audio.asf.data.MetadataContainer: org.jaudiotagger.audio.asf.data.ContainerType determineType(org.jaudiotagger.audio.asf.data.GUID)
com.google.common.hash.LittleEndianByteArray$UnsafeByteArray: sun.misc.Unsafe getUnsafe()
com.tencent.bugly.proguard.q: java.lang.String getLogFromNative()
org.jaudiotagger.tag.images.Images: Images()
com.thegrizzlylabs.sardineandroid.model.Lockdiscovery: java.util.List getActivelock()
kotlin.jvm.internal.Ref$ObjectRef: Ref$ObjectRef()
org.jaudiotagger.tag.mp4.field.Mp4FieldType: org.jaudiotagger.tag.mp4.field.Mp4FieldType valueOf(java.lang.String)
org.jaudiotagger.audio.opus.OpusVorbisTagReader: byte[] convertToVorbisCommentPacket(org.jaudiotagger.audio.ogg.util.OggPageHeader,java.io.RandomAccessFile)
org.simpleframework.xml.stream.OutputNodeMap: OutputNodeMap(org.simpleframework.xml.stream.OutputNode)
org.repackage.com.miui.deviceid.BuildConfig: BuildConfig()
com.caij.puremusic.db.model.ServerAudioFormatQueries$deleteSongBySource$2: void invoke(kotlin.jvm.functions.Function1)
com.umeng.commonsdk.statistics.internal.c$1: c$1(com.umeng.commonsdk.statistics.internal.c)
com.tencent.mm.opensdk.modelmsg.WXVideoObject: boolean checkArgs()
org.simpleframework.xml.core.ModelSection: org.simpleframework.xml.core.LabelMap getElements()
com.umeng.analytics.pro.bo: com.umeng.analytics.pro.by r()
org.simpleframework.xml.core.SignatureScanner: boolean isValid()
com.tencent.bugly.proguard.z: java.util.Map d(android.content.Context)
com.umeng.analytics.pro.an: void G()
org.jcodec.containers.mp4.boxes.GenericMediaInfoBox: org.jcodec.containers.mp4.boxes.GenericMediaInfoBox createGenericMediaInfoBox()
com.umeng.analytics.pro.i: org.json.JSONObject b(boolean)
com.caij.puremusic.model.PlaylistWrapper: int hashCode()
com.caij.puremusic.drive.model.PlaylistsMediaContainer: PlaylistsMediaContainer()
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: android.media.session.PlaybackState$CustomAction$Builder createCustomActionBuilder(java.lang.String,java.lang.CharSequence,int)
com.google.common.hash.LittleEndianByteArray$UnsafeByteArray: LittleEndianByteArray$UnsafeByteArray(java.lang.String,int)
com.google.android.material.navigation.NavigationBarMenuView: androidx.appcompat.view.menu.MenuBuilder getMenu()
com.caij.puremusic.drive.model.SubsonicResponse: java.lang.String component1()
org.simpleframework.xml.stream.Splitter: void parse(char[],int,int)
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItemSelectedColor(int)
org.simpleframework.xml.core.ElementUnionLabel: boolean isCollection()
com.caij.puremusic.drive.model.EmbyFoldersResponse: EmbyFoldersResponse(int,java.util.List,kotlinx.serialization.internal.SerializationConstructorMarker)
org.jaudiotagger.tag.id3.framebody.FrameBodyGEOB: void write(java.io.ByteArrayOutputStream)
com.caij.puremusic.network.model.LastFmArtist$Artist: void setBio(com.caij.puremusic.network.model.LastFmArtist$Artist$Bio)
com.caij.puremusic.network.model.Artist: com.caij.puremusic.network.model.Artist copy(java.util.Map,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,com.caij.puremusic.network.model.Artist,java.util.List)
org.simpleframework.xml.core.Scanner: org.simpleframework.xml.core.Function getPersist()
com.alipay.android.phone.mrpc.core.i: com.alipay.android.phone.mrpc.core.ab b()
org.simpleframework.xml.transform.EnumTransform: java.lang.String write(java.lang.Enum)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: void setCredentials(java.lang.String,java.lang.String)
com.umeng.analytics.pro.at: void c()
com.thegrizzlylabs.sardineandroid.model.Property$PropertyConverter: void write(org.simpleframework.xml.stream.OutputNode,com.thegrizzlylabs.sardineandroid.model.Property)
com.google.android.material.textfield.TextInputLayout: void setStartIconTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: void setHintAnimationEnabled(boolean)
androidx.fragment.app.Fragment: boolean getRetainInstance()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.jaudiotagger.tag.datatype.SynchronisedTempoCode: byte[] writeByteArray()
io.ktor.websocket.CloseReason$Codes: java.util.Map access$getByCodeMap$cp()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: int getLength()
com.umeng.analytics.pro.o: void h()
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
org.jaudiotagger.tag.reference.Languages: Languages()
org.jaudiotagger.tag.id3.framebody.FrameBodyTRSO: java.lang.String getIdentifier()
org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Class,org.simpleframework.xml.stream.InputNode)
org.simpleframework.xml.core.EmptyMatcher: org.simpleframework.xml.transform.Transform match(java.lang.Class)
org.jaudiotagger.tag.id3.framebody.FrameBodyXSOP: FrameBodyXSOP(java.nio.ByteBuffer,int)
com.alipay.android.phone.mrpc.core.HttpUrlHeader: java.lang.String getHead(java.lang.String)
com.caij.puremusic.drive.model.SongItem: java.lang.String component17()
com.umeng.commonsdk.config.d$c: d$c(java.lang.String,int)
com.umeng.commonsdk.statistics.proto.b: void c()
com.tencent.mm.opensdk.modelbiz.WXOpenCustomerServiceChat$Req: WXOpenCustomerServiceChat$Req()
com.caij.puremusic.drive.model.AMediaContainer$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.caij.puremusic.model.DriveFileParcelable: com.caij.puremusic.model.DriveFileParcelable copy$default(com.caij.puremusic.model.DriveFileParcelable,java.lang.String,java.lang.String,long,long,java.lang.String,long,long,int,java.lang.String,java.lang.String,boolean,int,java.lang.Object)
org.jaudiotagger.tag.id3.reference.ID3Rating: org.jaudiotagger.tag.id3.reference.ID3Rating getInstance(org.jaudiotagger.tag.reference.Tagger)
com.caij.puremusic.model.Data: int component4()
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: void deleteArtworkField()
org.simpleframework.xml.core.TextListLabel: boolean isTextList()
com.caij.puremusic.drive.model.SongItem$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
org.simpleframework.xml.stream.EventAttribute: java.lang.Object getSource()
com.tencent.bugly.proguard.at: boolean j()
com.tencent.mm.opensdk.diffdev.a.a: void detach()
com.caij.puremusic.views.NumberRollView: void setStringForZero(int)
com.umeng.analytics.pro.as: short a(short,int,boolean)
org.simpleframework.xml.util.Resolver$Stack$Sequence: Resolver$Stack$Sequence(org.simpleframework.xml.util.Resolver$Stack)
org.simpleframework.xml.filter.EnvironmentFilter: EnvironmentFilter()
org.jaudiotagger.tag.images.StandardArtwork: void setMimeType(java.lang.String)
org.jaudiotagger.tag.id3.ID3v24Frame$StatusFlags: ID3v24Frame$StatusFlags(org.jaudiotagger.tag.id3.ID3v24Frame,org.jaudiotagger.tag.id3.ID3v23Frame$StatusFlags)
com.caij.puremusic.db.model.SongQueries$GetSongCountBySourceIdQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.caij.puremusic.drive.model.Metadata: java.lang.String getParentRatingKey()
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
com.caij.puremusic.drive.model.JellyfinFolder$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.audio.generic.GenericTag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse: java.lang.String toString()
androidx.appcompat.widget.SwitchCompat: void setSwitchMinWidth(int)
com.tencent.bugly.proguard.ay: boolean a(boolean)
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: void setLogImpl(com.tencent.mm.opensdk.utils.ILog)
org.jcodec.containers.mp4.boxes.Edit: org.jcodec.containers.mp4.boxes.Edit createEdit(org.jcodec.containers.mp4.boxes.Edit)
com.umeng.analytics.pro.o$d: java.lang.String c()
org.simpleframework.xml.core.Persister: Persister(org.simpleframework.xml.strategy.Strategy,org.simpleframework.xml.filter.Filter)
com.caij.puremusic.drive.model.FMediaContainer: com.caij.puremusic.drive.model.FMediaContainer copy(int,java.lang.String,java.util.List)
com.alipay.apmobilesecuritysdk.e.h: java.lang.String f(android.content.Context)
com.umeng.commonsdk.UMConfigure$2: void run()
com.caij.puremusic.db.model.Folder: Folder(long,int,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.caij.puremusic.drive.model.PlaylistMetadata: com.caij.puremusic.drive.model.PlaylistMetadata copy(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org.simpleframework.xml.transform.Transformer: java.lang.String write(java.lang.Object,java.lang.Class)
org.simpleframework.xml.core.TextLabel: boolean isInline()
org.jcodec.containers.mp4.boxes.FielExtension: boolean isInterlaced()
com.google.android.exoplayer2.drm.DrmUtil$Api18: boolean isDeniedByServerException(java.lang.Throwable)
org.jaudiotagger.audio.mp3.MP3FileReader: MP3FileReader()
com.umeng.analytics.pro.cg: void d()
com.tencent.mm.opensdk.channel.MMessageActV2$1: MMessageActV2$1()
com.tencent.mmkv.MMKVLogLevel: com.tencent.mmkv.MMKVLogLevel valueOf(java.lang.String)
com.caij.puremusic.drive.model.AMediaContainer: void write$Self(com.caij.puremusic.drive.model.AMediaContainer,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
org.jaudiotagger.audio.asf.data.MetadataContainer: void removeDescriptorsByName(java.lang.String)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
com.tencent.mmkv.MMKV: void removeValueForKey(long,java.lang.String)
com.google.android.material.navigation.NavigationBarMenuView: int getItemTextAppearanceActive()
org.jaudiotagger.tag.id3.ID3v23Frame$EncodingFlags: boolean isGrouping()
com.caij.puremusic.db.model.ServerSongCoverQueries$getById$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
org.simpleframework.xml.core.ElementMapParameter: java.lang.Object getKey()
com.umeng.analytics.vshelper.a: void customPageEnd(java.lang.String)
com.caij.puremusic.drive.model.SubsonicPlaylist$Companion: kotlinx.serialization.KSerializer serializer()
com.umeng.commonsdk.utils.UMUtils: void setMultiProcessSP(android.content.Context,java.lang.String,java.lang.String)
com.umeng.commonsdk.statistics.internal.c$3: c$3(com.umeng.commonsdk.statistics.internal.c)
org.jaudiotagger.tag.mp4.Mp4NonStandardFieldKey: org.jaudiotagger.tag.mp4.Mp4NonStandardFieldKey valueOf(java.lang.String)
org.jaudiotagger.audio.wav.WavTagWriter$BothTagsFileStructure: WavTagWriter$BothTagsFileStructure(org.jaudiotagger.audio.wav.WavTagWriter)
org.jaudiotagger.audio.wav.WavTagWriter$InfoFieldWriterOrderComparator: int compare(java.lang.Object,java.lang.Object)
com.umeng.commonsdk.statistics.proto.Response$c: Response$c()
com.google.android.material.materialswitch.MaterialSwitch: void setThumbTintMode(android.graphics.PorterDuff$Mode)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onNestedFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float,boolean)
org.jaudiotagger.tag.datatype.NumberVariableLength: int getMinimumLength()
org.jaudiotagger.tag.mp4.field.Mp4TagTextField: boolean isBinary()
org.jaudiotagger.tag.id3.ID3v1Tag: ID3v1Tag(org.jaudiotagger.tag.id3.AbstractTag)
com.tencent.mm.opensdk.modelmsg.WXEmojiPageSharedObject: WXEmojiPageSharedObject()
org.jaudiotagger.tag.aiff.AiffTagFieldKey: java.lang.String getFieldName()
com.caij.puremusic.drive.model.PlexArtistsResponse: PlexArtistsResponse(com.caij.puremusic.drive.model.AMediaContainer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.caij.puremusic.db.model.HistoryEntityQueries$GetByIdQuery: void addListener(app.cash.sqldelight.Query$Listener)
androidx.constraintlayout.motion.widget.MotionLayout: void setDebugMode(int)
com.caij.puremusic.db.model.HistoryEntityQueries$insert$2: HistoryEntityQueries$insert$2()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomEnd()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getEndIconContentDescription()
com.umeng.analytics.pro.h: void a(android.content.Context)
org.jaudiotagger.tag.id3.AbstractID3v1Tag: int getSize()
com.caij.puremusic.fragments.player.color.ColorPlaybackControlsFragment: ColorPlaybackControlsFragment()
androidx.core.widget.NestedScrollView: int getScrollRange()
com.google.android.material.slider.BaseSlider: void setTrackHeight(int)
com.google.android.material.bottomsheet.BottomSheetDialog: com.google.android.material.bottomsheet.BottomSheetDialog$EdgeToEdgeCallback access$002(com.google.android.material.bottomsheet.BottomSheetDialog,com.google.android.material.bottomsheet.BottomSheetDialog$EdgeToEdgeCallback)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
com.umeng.common.b$a: com.umeng.common.b a()
com.umeng.commonsdk.statistics.proto.c: void read(com.umeng.analytics.pro.bu)
com.umeng.commonsdk.statistics.common.ULog: void v(java.lang.String,java.lang.Throwable)
com.umeng.analytics.pro.bo: void a(com.umeng.analytics.pro.br)
org.simpleframework.xml.core.ElementArrayParameter$Contact: ElementArrayParameter$Contact(org.simpleframework.xml.ElementArray,java.lang.reflect.Constructor,int)
com.caij.puremusic.drive.model.AlbumListResponse$$serializer: AlbumListResponse$$serializer()
com.caij.puremusic.drive.model.PlayListItem$Companion: PlayListItem$Companion()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.umeng.analytics.pro.bf$b: bf$b(com.umeng.analytics.pro.bf$1)
com.caij.puremusic.db.model.ServerAudioFormat: java.lang.String getSampleRate()
org.jaudiotagger.audio.generic.AudioFileReader2: org.jaudiotagger.tag.Tag getTag(java.nio.channels.FileChannel,java.lang.String)
com.tencent.bugly.proguard.ay: void d(boolean)
nl.adaptivity.xmlutil.XmlDeclMode: nl.adaptivity.xmlutil.XmlDeclMode valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
kotlin.collections.EmptyMap: EmptyMap()
com.umeng.umzid.ZIDManager: java.lang.String getSDKVersion()
com.caij.puremusic.drive.model.AlbumSubsonicResponse: java.lang.String component1()
com.tencent.bugly.proguard.n: boolean a(long,long)
com.umeng.commonsdk.statistics.common.DeviceTypeEnum: DeviceTypeEnum(java.lang.String,int,java.lang.String,java.lang.String)
com.tencent.mm.opensdk.modelmsg.WXVideoFileObject: void serialize(android.os.Bundle)
androidx.constraintlayout.motion.widget.MotionLayout$TransitionState: androidx.constraintlayout.motion.widget.MotionLayout$TransitionState[] $values()
com.umeng.analytics.filter.EventList: EventList(java.lang.String,java.lang.String)
com.caij.puremusic.db.model.ServerLyricsQueries$deleteSongBySource$2: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.audio.generic.GenericTag$GenericTagTextField: void setEncoding(java.nio.charset.Charset)
com.umeng.analytics.pro.bh: bh(java.lang.String,byte,com.umeng.analytics.pro.bi)
org.simpleframework.xml.stream.OutputElement: void setReference(java.lang.String)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockHeader: byte[] getBytes()
com.caij.puremusic.drive.model.AlbumListResponse$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontal(int)
androidx.core.view.ViewGroupCompat$Api18Impl: int getLayoutMode(android.view.ViewGroup)
org.jaudiotagger.audio.generic.Utils: byte[] getSizeBEInt16(short)
org.simpleframework.xml.core.DetailExtractor: org.simpleframework.xml.core.ContactList getFields(java.lang.Class)
org.jaudiotagger.tag.id3.framebody.FrameBodyRVRB: FrameBodyRVRB(short,short,byte,byte,byte,byte,byte,byte,byte,byte)
org.jaudiotagger.tag.id3.ID3v11Tag: org.jaudiotagger.tag.TagField getFirstField(java.lang.String)
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore getViewModelStore()
com.tencent.mm.opensdk.modelbiz.WXChannelOpenEvent$Req: int getType()
androidx.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
org.jcodec.containers.mp4.MP4Util: org.jcodec.containers.mp4.MP4Util$Movie createRefFullMovie(java.nio.channels.FileChannel,java.lang.String)
com.umeng.commonsdk.UMConfigureInternation$1: UMConfigureInternation$1(android.content.Context)
org.jaudiotagger.tag.id3.ID3v22Frames: org.jaudiotagger.tag.FieldKey getGenericKeyFromId3(org.jaudiotagger.tag.id3.ID3v22FieldKey)
androidx.fragment.app.Fragment: void postponeEnterTransition(long,java.util.concurrent.TimeUnit)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getTargetFragment()
androidx.appcompat.app.AppCompatDialog: androidx.appcompat.app.ActionBar getSupportActionBar()
com.umeng.commonsdk.UMConfigure: UMConfigure()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
org.simpleframework.xml.stream.StreamReader$Start: java.util.Iterator getAttributes()
org.jaudiotagger.audio.mp3.MP3AudioHeader: void setAudioDataStartPosition(java.lang.Long)
com.google.common.reflect.Types$JavaVersion$3: java.lang.reflect.Type newArrayType(java.lang.reflect.Type)
androidx.fragment.app.Fragment: void onDetach()
com.caij.puremusic.db.model.ArtistQueries$searchArtistByName$1: ArtistQueries$searchArtistByName$1(kotlin.jvm.functions.Function2)
org.simpleframework.xml.transform.StringArrayTransform: java.lang.String[] read(java.lang.String,java.lang.String)
com.umeng.commonsdk.statistics.proto.d: void b(boolean)
org.jaudiotagger.tag.images.Artwork: int getWidth()
com.caij.puremusic.drive.model.PlayListsSubsonicResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyGRID: FrameBodyGRID(java.nio.ByteBuffer,int)
org.simpleframework.xml.stream.NodeBuilder: org.simpleframework.xml.stream.InputNode read(org.simpleframework.xml.stream.EventReader)
com.caij.puremusic.views.TopAppBarLayout$AppBarMode: com.caij.puremusic.views.TopAppBarLayout$AppBarMode[] values()
com.caij.puremusic.drive.model.BaiduDriveItem: java.lang.String getPath()
org.simpleframework.xml.core.PrimitiveValue: boolean isOverridden(org.simpleframework.xml.stream.OutputNode,java.lang.Object)
com.caij.puremusic.db.model.Album: int getSourceType()
com.google.gson.FieldNamingPolicy$2: java.lang.String translateName(java.lang.reflect.Field)
org.simpleframework.xml.stream.InputNodeMap: InputNodeMap(org.simpleframework.xml.stream.InputNode,org.simpleframework.xml.stream.EventNode)
com.tencent.mm.opensdk.modelmsg.WXDesignerSharedObject: int type()
org.jcodec.containers.mp4.boxes.VideoMediaHeaderBox: int getgOpColor()
org.jcodec.containers.mp4.boxes.ReverseDnsBox$RdnsMeanBox: void doWrite(java.nio.ByteBuffer)
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$insert$2: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.db.model.ArtistQueries$clear$1: void invoke(kotlin.jvm.functions.Function1)
org.jaudiotagger.tag.EmptyFrameException: EmptyFrameException(java.lang.String)
org.simpleframework.xml.core.CollectionFactory: org.simpleframework.xml.core.Instance getInstance(org.simpleframework.xml.strategy.Value)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSOT: FrameBodyTSOT(byte,java.lang.String)
org.jcodec.containers.mp4.boxes.TrackExtendsBox: org.jcodec.containers.mp4.boxes.TrackExtendsBox createTrackExtendsBox()
org.jaudiotagger.audio.mp3.MP3AudioHeader: void setEncoder()
com.google.android.material.progressindicator.BaseProgressIndicator: void setProgressDrawable(android.graphics.drawable.Drawable)
com.alipay.sdk.m.j.c: com.alipay.sdk.m.j.c b(int)
org.simpleframework.xml.core.InstantiatorBuilder: org.simpleframework.xml.core.Label resolve(org.simpleframework.xml.core.Parameter,org.simpleframework.xml.core.LabelMap)
com.caij.puremusic.drive.model.SearchResult3$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.SearchResult3)
com.tencent.bugly.proguard.ab$2: ab$2()
org.jaudiotagger.utils.IntArrayList: int[] toArray()
com.google.android.material.appbar.AppBarLayout: void setLiftOnScroll(boolean)
com.thegrizzlylabs.sardineandroid.model.Limit: void setNresults(java.math.BigInteger)
com.caij.puremusic.activities.FolderFilesActivity: FolderFilesActivity()
org.simpleframework.xml.core.PrimitiveScanner$EmptySection: java.lang.String getAttribute(java.lang.String)
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean handleWxInternalRespType(java.lang.String,com.tencent.mm.opensdk.openapi.IWXAPIEventHandler)
com.caij.puremusic.drive.model.PlayLists$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
org.jcodec.containers.mp4.boxes.MetaValue: java.lang.String getString()
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyNumberTotal: java.lang.String getIdentifier()
org.jaudiotagger.tag.id3.AbstractID3Tag: byte getMajorVersion()
com.caij.puremusic.db.model.SongQueries$FirstSongByAlbumIdQuery: long getAlbumId()
com.caij.puremusic.model.Data: java.lang.String component1()
org.jcodec.containers.mp4.MP4Util: int estimateMoovBoxSize(org.jcodec.containers.mp4.boxes.MovieBox)
androidx.appcompat.widget.AppCompatRadioButton: void setFilters(android.text.InputFilter[])
org.jaudiotagger.tag.id3.framebody.FrameBodyTPOS: FrameBodyTPOS(byte,java.lang.String)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: org.jaudiotagger.tag.TagField createLinkedArtworkField(java.lang.String)
org.jcodec.containers.mp4.boxes.TrunBox: long getSampleCompositionOffset(int)
com.umeng.analytics.pro.an: com.umeng.analytics.pro.bp N()
org.jcodec.containers.mp4.boxes.TrakBox: java.lang.String getName()
com.caij.puremusic.network.model.LastFmArtist$Artist$Image: java.lang.String getSize()
org.jaudiotagger.tag.datatype.Lyrics3TimeStamp: void readString(java.lang.String,int)
org.jaudiotagger.audio.AudioFileIO: org.jaudiotagger.audio.AudioFile readFileMagic(java.io.File)
com.tencent.bugly.proguard.bf: void run()
com.caij.puremusic.drive.model.AlbumSubsonicResponse$Companion: AlbumSubsonicResponse$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.caij.puremusic.db.model.SongQueries$getArtistSongCount$1: java.lang.Long invoke(app.cash.sqldelight.db.SqlCursor)
com.caij.puremusic.MainModuleKt$networkModule$1: MainModuleKt$networkModule$1()
com.alipay.sdk.app.EnvUtils$EnvEnum: com.alipay.sdk.app.EnvUtils$EnvEnum[] values()
org.simpleframework.xml.core.TextParameter: boolean isText()
com.tencent.bugly.crashreport.common.info.PlugInBean: int describeContents()
org.simpleframework.xml.core.MethodContact: MethodContact(org.simpleframework.xml.core.MethodPart,org.simpleframework.xml.core.MethodPart)
com.caij.puremusic.drive.model.WebDAVToken: com.caij.puremusic.drive.model.WebDAVToken copy$default(com.caij.puremusic.drive.model.WebDAVToken,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
org.jaudiotagger.audio.asf.data.EncodingChunk: java.lang.String prettyPrint(java.lang.String)
org.simpleframework.xml.strategy.CycleStrategy: CycleStrategy(java.lang.String,java.lang.String)
org.jaudiotagger.audio.dsf.DsdChunk: void setMetadataOffset(long)
org.jaudiotagger.tag.id3.ID3Unsynchronization: byte[] unsynchronize(byte[])
org.jaudiotagger.audio.asf.AsfFileWriter: void writeTag(org.jaudiotagger.audio.AudioFile,org.jaudiotagger.tag.Tag,java.io.RandomAccessFile,java.io.RandomAccessFile)
com.umeng.analytics.pro.u: void d(android.content.Context)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding valueOf(java.lang.String)
org.simpleframework.xml.core.TreeModel: void validateExpression(org.simpleframework.xml.core.Label)
com.caij.puremusic.drive.model.AMetadata: java.lang.String component2()
com.alipay.sdk.m.u.g: g(java.lang.String,int,int,java.lang.String)
org.jaudiotagger.tag.id3.AbstractID3v2Frame: java.lang.String readIdentifier(java.nio.ByteBuffer)
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: void b(boolean)
com.alipay.android.phone.mrpc.core.HttpUrlHeader: java.util.Map getHeaders()
org.jaudiotagger.tag.id3.valuepair.ID3NumberTotalFields: ID3NumberTotalFields()
com.umeng.commonsdk.statistics.common.d: d(android.content.Context)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
org.jcodec.containers.mp4.boxes.TrackExtendsBox: int getDefaultSampleDuration()
org.jaudiotagger.audio.mp3.XingFrame: void setVbr()
com.caij.puremusic.network.model.LastFmArtist$Artist$Bio: java.lang.String getContent()
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
com.google.common.hash.LittleEndianByteArray$UnsafeByteArray: com.google.common.hash.LittleEndianByteArray$UnsafeByteArray[] values()
androidx.preference.DropDownPreference: DropDownPreference(android.content.Context,android.util.AttributeSet)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence)
org.simpleframework.xml.util.Cache: boolean isEmpty()
org.jaudiotagger.tag.id3.ID3v1Tag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
com.caij.puremusic.fragments.folder.DriveFilesFragment: DriveFilesFragment()
org.jaudiotagger.tag.aiff.AiffTag: long getStartLocationInFileOfId3Chunk()
org.simpleframework.xml.core.CompositeInlineMap: void write(org.simpleframework.xml.stream.OutputNode,java.util.Map,org.simpleframework.xml.stream.Mode)
org.simpleframework.xml.core.PathParser: java.lang.String getAttribute(java.lang.String)
org.jaudiotagger.tag.id3.ID3v23FieldKey: ID3v23FieldKey(java.lang.String,int,java.lang.String,org.jaudiotagger.tag.id3.Id3FieldType)
androidx.slidingpanelayout.widget.SlidingPaneLayout: int getCoveredFadeColor()
com.alipay.android.phone.mrpc.core.l: void b(long)
com.caij.puremusic.drive.model.ADriveItem: java.lang.String getParent_file_id()
org.simpleframework.xml.core.Reflector: java.lang.String getName(java.lang.String)
com.caij.puremusic.db.model.SearchAlbumResultQueries$getById$2: com.caij.puremusic.db.model.SearchAlbumResult invoke(java.lang.String,java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyTCOM: java.lang.String getIdentifier()
com.umeng.commonsdk.framework.UMModuleRegister: java.lang.String eventType2ModuleName(int)
org.jaudiotagger.logging.PlainTextTagDisplayFormatter: void openHeadingElement(java.lang.String,boolean)
com.alipay.apmobilesecuritysdk.f.c: void run()
org.simpleframework.xml.core.ElementUnionParameter$Contact: java.lang.String getName()
org.jaudiotagger.audio.mp4.Mp4AudioHeader: void setBrand(java.lang.String)
org.jcodec.containers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox$Factory: org.jcodec.containers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox create()
com.caij.puremusic.drive.model.GoogleDriveFileResponse: int hashCode()
com.caij.puremusic.drive.model.Metadata: java.lang.String getGrandparentTitle()
com.caij.puremusic.drive.model.PlaylistsMediaContainer: int hashCode()
com.caij.puremusic.db.model.SongQueries$SongsByInfoQuery: void addListener(app.cash.sqldelight.Query$Listener)
org.jaudiotagger.audio.asf.io.CountingInputStream: CountingInputStream(java.io.InputStream)
androidx.appcompat.app.AppCompatActivity: AppCompatActivity()
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
org.jaudiotagger.audio.generic.GenericTag$GenericTagTextField: java.lang.String toString()
androidx.fragment.app.DialogFragment: void onDetach()
com.umeng.analytics.pro.an: com.umeng.analytics.pro.bp O()
org.jaudiotagger.tag.id3.framebody.FrameBodyTOWN: java.lang.String getIdentifier()
com.tencent.mmkv.MMKV: void setLogLevel(int)
org.jaudiotagger.tag.asf.AsfTag: org.jaudiotagger.tag.asf.AsfTagTextField createCopyrightField(java.lang.String)
org.simpleframework.xml.transform.FloatTransform: java.lang.String write(java.lang.Float)
org.jaudiotagger.audio.aiff.AiffAudioHeader: void addComment(java.lang.String)
com.umeng.commonsdk.stateless.UMSLEnvelopeBuild: void setEncryptEnabled(boolean)
com.caij.puremusic.drive.model.ImageTags$Companion: kotlinx.serialization.KSerializer serializer()
com.caij.puremusic.drive.model.SongItem$$serializer: com.caij.puremusic.drive.model.SongItem deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.network.model.ArtistWrapper: com.caij.puremusic.network.model.ArtistWrapper copy$default(com.caij.puremusic.network.model.ArtistWrapper,java.lang.String,java.lang.Integer,java.util.List,int,java.lang.Object)
com.umeng.commonsdk.internal.utils.ApplicationLayerUtilAgent: ApplicationLayerUtilAgent()
org.repackage.com.zui.deviceidservice.IDeviceidInterface$Stub$Proxy: IDeviceidInterface$Stub$Proxy(android.os.IBinder)
org.simpleframework.xml.stream.Verbosity: org.simpleframework.xml.stream.Verbosity[] values()
com.google.android.material.materialswitch.MaterialSwitch: android.content.res.ColorStateList getThumbTintList()
com.tencent.mm.opensdk.modelbiz.WXChannelOpenEvent$Req: void toBundle(android.os.Bundle)
org.jaudiotagger.tag.id3.ID3v1TagField: boolean isEmpty()
org.simpleframework.xml.core.AttributeLabel: java.lang.String getPath()
com.caij.puremusic.drive.model.Metadata: java.lang.String getParentTitle()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.umeng.analytics.b: void a(android.content.Context,java.lang.Throwable)
com.caij.puremusic.db.model.ArtistQueries$deleteArtistById$2: java.lang.Object invoke(java.lang.Object)
org.simpleframework.xml.core.PrimitiveKey: PrimitiveKey(org.simpleframework.xml.core.Context,org.simpleframework.xml.core.Entry,org.simpleframework.xml.strategy.Type)
com.caij.puremusic.db.model.ArtistQueries$ArtistByNameQuery$execute$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.audio.asf.data.FileHeader: java.math.BigInteger getPackageCount()
org.jaudiotagger.audio.wav.WavCleaner: WavCleaner(java.io.File)
com.tencent.bugly.proguard.ai: com.tencent.bugly.proguard.ai a(android.content.Context)
com.heinrichreimersoftware.materialintro.view.parallax.ParallaxLinearLayout: ParallaxLinearLayout(android.content.Context,android.util.AttributeSet)
com.umeng.analytics.pro.an: com.umeng.analytics.pro.bp P()
com.alipay.apmobilesecuritysdk.d.b: java.util.Map a(android.content.Context,java.util.Map)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlock: org.jaudiotagger.audio.flac.metadatablock.MetadataBlockHeader getHeader()
com.alipay.android.phone.mrpc.core.d: d(com.alipay.android.phone.mrpc.core.b,org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)
org.simpleframework.xml.core.Converter: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object)
org.jaudiotagger.utils.tree.TreeNode: org.jaudiotagger.utils.tree.TreeNode getChildAt(int)
org.jaudiotagger.tag.id3.ID3v23Frame$EncodingFlags: ID3v23Frame$EncodingFlags(org.jaudiotagger.tag.id3.ID3v23Frame,byte)
com.tencent.bugly.proguard.d: java.lang.Object b(java.lang.String,java.lang.Object)
com.google.android.material.chip.Chip: void setCloseIconHovered(boolean)
org.jaudiotagger.audio.asf.util.Utils: void checkStringLengthNullSafe(java.lang.String)
com.caij.puremusic.drive.model.SubsonicSong$Companion: kotlinx.serialization.KSerializer serializer()
androidx.fragment.app.Fragment: android.content.Context getContext()
com.caij.puremusic.db.model.ServerArtistCoverQueries$deleteById$2: java.lang.Object invoke(java.lang.Object)
com.thegrizzlylabs.sardineandroid.model.Resourcetype: void setCollection(com.thegrizzlylabs.sardineandroid.model.Collection)
org.simpleframework.xml.core.StructureBuilder: void validateTextList(java.lang.Class)
org.simpleframework.xml.core.ElementListLabel: java.lang.Class getType()
com.caij.puremusic.db.model.ServerAudioFormat: long getId()
com.caij.puremusic.drive.model.AlbumItem: com.caij.puremusic.drive.model.AlbumItem copy$default(com.caij.puremusic.drive.model.AlbumItem,java.lang.String,java.lang.String,java.lang.String,boolean,long,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List,java.lang.String,int,java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyETCO: java.util.Map getTimingCodes()
com.alipay.android.phone.mrpc.core.f: f(com.alipay.android.phone.mrpc.core.d)
com.caij.puremusic.model.DriveFileParcelable: java.lang.String component2()
org.simpleframework.xml.core.ElementListLabel: boolean isInline()
com.umeng.commonsdk.statistics.proto.c: void a(java.lang.String,com.umeng.commonsdk.statistics.proto.b)
com.caij.puremusic.preferences.BlacklistPreference: BlacklistPreference(android.content.Context,android.util.AttributeSet,int)
com.umeng.analytics.pro.an: com.umeng.analytics.pro.bp J()
org.jaudiotagger.audio.asf.data.ContainerType: org.jaudiotagger.audio.asf.data.ContainerType valueOf(java.lang.String)
com.caij.puremusic.db.model.SongQueries$songsByAlbumIdCount$1: java.lang.Object invoke(java.lang.Object)
com.tencent.bugly.proguard.ac: ac(android.content.Context,java.util.List)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
com.tencent.bugly.proguard.ai: void a(int,com.tencent.bugly.proguard.bq,java.lang.String,java.lang.String,com.tencent.bugly.proguard.ah,long,boolean)
com.google.android.material.progressindicator.BaseProgressIndicator: void setHideAnimationBehavior(int)
com.caij.vip.ActivationResponse: ActivationResponse()
org.simpleframework.xml.Serializer: java.lang.Object read(java.lang.Class,org.simpleframework.xml.stream.InputNode,boolean)
org.jaudiotagger.utils.tree.DefaultTreeModel: void nodeChanged(org.jaudiotagger.utils.tree.TreeNode)
com.umeng.commonsdk.statistics.common.a$b: void onServiceDisconnected(android.content.ComponentName)
org.jaudiotagger.tag.FieldKey: FieldKey(java.lang.String,int)
io.ktor.websocket.FrameType: FrameType(java.lang.String,int,boolean,int)
org.jcodec.containers.mp4.boxes.SampleDescriptionBox: void doWrite(java.nio.ByteBuffer)
com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport$Result: java.lang.String getSyncToken()
org.simpleframework.xml.core.ElementMapUnionParameter: boolean isPrimitive()
org.jaudiotagger.audio.mp3.MP3AudioHeader: boolean seek(java.io.File,long)
com.caij.puremusic.drive.model.AMediaContainer: AMediaContainer()
com.google.android.material.chip.Chip: void setCloseIconStartPaddingResource(int)
com.umeng.umzid.Spy: java.lang.String getID()
com.tencent.bugly.proguard.u: boolean b(int)
com.umeng.commonsdk.statistics.proto.a: void i()
org.simpleframework.xml.core.ElementMapParameter: java.lang.annotation.Annotation getAnnotation()
com.caij.puremusic.drive.model.OneDriveItem$$serializer: OneDriveItem$$serializer()
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query getSongBySource(long,kotlin.jvm.functions.Function18)
org.simpleframework.xml.core.TreeModel: boolean isComposite()
com.caij.puremusic.drive.model.EmbyAlbumsResponse: java.util.List getItems()
com.umeng.commonsdk.statistics.proto.e$d: com.umeng.analytics.pro.cc b()
com.caij.puremusic.drive.model.OneDriveFile$Companion: OneDriveFile$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.umeng.commonsdk.service.UMGlobalContext: java.lang.String toString()
android.support.v4.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
com.google.android.material.bottomsheet.BottomSheetBehavior$3: BottomSheetBehavior$3(com.google.android.material.bottomsheet.BottomSheetBehavior,boolean)
org.jaudiotagger.tag.wav.WavTag: java.lang.String getFirst(java.lang.String)
org.simpleframework.xml.core.Collector: Collector()
com.yalantis.ucrop.view.widget.HorizontalProgressWheelView: HorizontalProgressWheelView(android.content.Context,android.util.AttributeSet)
org.simpleframework.xml.core.Label: java.lang.Class getType()
org.simpleframework.xml.core.ElementArrayLabel: boolean isData()
com.caij.puremusic.drive.model.SubsonicResponse: java.lang.String getVersion()
org.jaudiotagger.tag.id3.framebody.FrameBodyWXXX: java.lang.String getDescription()
org.jaudiotagger.tag.datatype.TextEncodedStringSizeTerminated: java.util.List getValues()
androidx.appcompat.app.AppCompatDialogFragment: void setupDialog(android.app.Dialog,int)
com.caij.puremusic.drive.model.DriveFile: java.lang.String getFileId()
org.simpleframework.xml.stream.OutputDocument: org.simpleframework.xml.stream.Mode getMode()
org.jaudiotagger.audio.ogg.util.OggPageHeader$PacketStartAndLength: OggPageHeader$PacketStartAndLength(int,int)
com.caij.puremusic.drive.model.PlaylistResponse$$serializer: PlaylistResponse$$serializer()
org.jaudiotagger.tag.lyrics3.Lyrics3v2: org.jaudiotagger.tag.lyrics3.Lyrics3v2Field getField(java.lang.String)
com.umeng.analytics.process.UMProcessDBHelper: boolean dbIsExists(java.lang.String)
com.google.android.material.slider.Slider: android.content.res.ColorStateList getThumbTintList()
org.simpleframework.xml.core.ElementMapUnionLabel: org.simpleframework.xml.core.Expression getExpression()
com.google.android.gms.internal.play_billing.zzr: zzr()
org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Class,org.simpleframework.xml.stream.InputNode,org.simpleframework.xml.core.Session)
org.simpleframework.xml.core.Label: boolean isTextList()
com.umeng.commonsdk.internal.c: void d(android.content.Context)
org.simpleframework.xml.core.DefaultDetail: boolean isRequired()
com.tencent.bugly.proguard.k: java.lang.Object[] a(java.lang.Object[],int,boolean)
com.caij.puremusic.db.model.ServerLyricsQueries: app.cash.sqldelight.db.SqlDriver access$getDriver(com.caij.puremusic.db.model.ServerLyricsQueries)
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: void logEnabledFlags()
org.jcodec.containers.mp4.boxes.IListBox: java.util.Map getValues()
com.umeng.analytics.pro.ao: com.umeng.analytics.pro.ap a(java.lang.String)
com.tencent.bugly.proguard.ab: long h()
com.thegrizzlylabs.sardineandroid.model.Locktype: com.thegrizzlylabs.sardineandroid.model.Write getWrite()
com.umeng.commonsdk.statistics.proto.a: a()
com.google.common.hash.AbstractHashFunction: AbstractHashFunction()
org.simpleframework.xml.core.ClassScanner: void namespace(org.simpleframework.xml.core.Detail)
org.jaudiotagger.tag.lyrics3.Lyrics3v2Field: java.lang.String toString()
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String)
com.caij.puremusic.db.model.SearchAlbumResult: java.lang.String component1()
org.jaudiotagger.tag.id3.framebody.FrameBodyMVIN: FrameBodyMVIN(byte,java.lang.String)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyEAR: void setupObjectList()
org.simpleframework.xml.core.PrimitiveValue: PrimitiveValue(org.simpleframework.xml.core.Context,org.simpleframework.xml.core.Entry,org.simpleframework.xml.strategy.Type)
org.jcodec.containers.mp4.boxes.TrunBox: int access$200(org.jcodec.containers.mp4.boxes.TrunBox)
org.jaudiotagger.audio.generic.Utils: java.nio.ByteBuffer readBuf(java.nio.ByteBuffer)
com.umeng.commonsdk.statistics.c$1: c$1(com.umeng.commonsdk.statistics.c)
com.caij.puremusic.drive.model.PlexSongsResponse$Companion: PlexSongsResponse$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.caij.puremusic.fragments.lyrics.ComnLyricsFragment$LyricsType: com.caij.puremusic.fragments.lyrics.ComnLyricsFragment$LyricsType[] $values()
org.jaudiotagger.tag.id3.framebody.FrameBodyTYER: java.lang.String getIdentifier()
com.tencent.mm.opensdk.modelbiz.WXChannelBaseJumpInfo: WXChannelBaseJumpInfo()
com.caij.puremusic.drive.model.SubsonicSearchListResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyPOPM: void setupObjectList()
com.umeng.analytics.pro.an: void clear()
com.google.android.material.navigation.NavigationBarView: android.content.res.ColorStateList getItemRippleColor()
org.simpleframework.xml.stream.Format: Format(int,java.lang.String,org.simpleframework.xml.stream.Style,org.simpleframework.xml.stream.Verbosity)
com.caij.puremusic.fragments.settings.PersonalizeSettingsFragment: PersonalizeSettingsFragment()
org.simpleframework.xml.stream.OutputElement: void setComment(java.lang.String)
com.umeng.umzid.ZIDManager: ZIDManager()
com.caij.puremusic.db.model.Album: Album(long,int,java.lang.String,long,long,java.lang.String,long,java.lang.String,java.lang.String,int,int)
com.thegrizzlylabs.sardineandroid.model.SearchRequest: SearchRequest()
org.jaudiotagger.tag.mp4.field.Mp4TagBinaryField: org.jaudiotagger.tag.mp4.field.Mp4FieldType getFieldType()
org.simpleframework.xml.core.DetailScanner: org.simpleframework.xml.DefaultType getAccess()
nl.adaptivity.xmlutil.SimpleNamespaceContext$special$$inlined$flatten$1: SimpleNamespaceContext$special$$inlined$flatten$1()
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
com.caij.puremusic.model.Genre: long getId()
com.umeng.commonsdk.statistics.noise.ImLatent: boolean shouldStartLatency()
com.umeng.commonsdk.statistics.common.a$c: boolean a(boolean)
com.heinrichreimersoftware.materialintro.view.parallax.ParallaxFragment: ParallaxFragment()
org.simpleframework.xml.strategy.WriteGraph: boolean write(org.simpleframework.xml.strategy.Type,java.lang.Object,org.simpleframework.xml.stream.NodeMap)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: void disableCompression()
androidx.fragment.app.DialogFragment: android.app.Dialog getDialog()
org.jcodec.containers.mp4.boxes.ReverseDnsBox$RdnsNameBox: ReverseDnsBox$RdnsNameBox(org.jcodec.containers.mp4.boxes.Header)
com.caij.puremusic.drive.model.PlexArtistsResponse: com.caij.puremusic.drive.model.PlexArtistsResponse copy(com.caij.puremusic.drive.model.AMediaContainer)
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey[] values()
org.simpleframework.xml.core.GroupExtractor$Registry: org.simpleframework.xml.core.Label resolveText()
org.jaudiotagger.audio.asf.data.FileHeader: int getDurationInSeconds()
com.tencent.bugly.crashreport.crash.anr.TraceFileHelper: com.tencent.bugly.crashreport.crash.anr.TraceFileHelper$a readFirstDumpInfo(java.lang.String,boolean)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$deleteById$2: java.lang.Object invoke(java.lang.Object)
com.umeng.analytics.pro.ah: ah()
org.jcodec.containers.mp4.boxes.MovieHeaderBox: long getDuration()
com.caij.puremusic.drive.model.EmbyFoldersResponse$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.umeng.commonsdk.UMConfigure: void setProcessEvent(boolean)
androidx.appcompat.widget.AppCompatRadioButton: AppCompatRadioButton(android.content.Context,android.util.AttributeSet)
com.umeng.analytics.pro.m: void onActivityPaused(android.app.Activity)
org.jaudiotagger.audio.asf.io.ChunkHeaderReader: ChunkHeaderReader()
com.tencent.bugly.proguard.bv: void a(java.lang.StringBuilder,int)
com.caij.puremusic.drive.model.Media$$serializer: Media$$serializer()
org.jaudiotagger.tag.images.StandardArtwork: byte[] getBinaryData()
com.tencent.mm.opensdk.modelbiz.WXChannelShareVideo$Req: boolean checkArgs()
com.umeng.common.a: java.lang.String a(java.lang.String)
com.tencent.mm.opensdk.modelmsg.SendAuth$Req: boolean checkArgs()
org.jaudiotagger.audio.mp4.Mp4AudioHeader: void setProfile(org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile)
androidx.fragment.app.DialogFragment: void dismissNow()
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
org.jaudiotagger.tag.aiff.AiffTag: void deleteField(java.lang.String)
com.tencent.mm.opensdk.modelmsg.WXEnterpriseCardObject: void serialize(android.os.Bundle)
com.umeng.commonsdk.internal.c$2: void run()
androidx.core.view.ViewCompat$Api26Impl: int getNextClusterForwardId(android.view.View)
org.simpleframework.xml.stream.InputNodeMap: java.util.Iterator iterator()
org.simpleframework.xml.core.ClassScanner: void commit(org.simpleframework.xml.core.Detail)
com.umeng.common.a: java.lang.String c(java.lang.String)
org.simpleframework.xml.core.PathParser$PathSection: java.util.Iterator iterator()
com.umeng.commonsdk.statistics.common.DeviceConfig: java.util.Locale getLocale(android.content.Context)
com.tencent.mm.opensdk.modelpay.JumpToOfflinePay$Req: void toBundle(android.os.Bundle)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey valueOf(java.lang.String)
com.caij.puremusic.drive.model.MediaInfoWrapper: void setArtists(java.util.List)
com.heinrichreimersoftware.materialintro.view.InkPageIndicator: void setSelectedPage(int)
org.simpleframework.xml.core.CompositeList: java.lang.Object populate(org.simpleframework.xml.stream.InputNode,java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyTCON: java.lang.String convertGenericToID3v24Genre(java.lang.String)
com.umeng.commonsdk.statistics.common.ULog: void w(java.lang.String)
androidx.core.widget.TextViewCompat$Api17Impl: int getTextDirection(android.view.View)
com.caij.puremusic.lyrics.CoverLrcView: void setCurrentColor(int)
com.google.android.material.imageview.ShapeableImageView: void setStrokeColorResource(int)
com.google.android.material.slider.BaseSlider: android.content.res.ColorStateList getTrackTintList()
org.jaudiotagger.tag.lyrics3.Lyrics3v1: Lyrics3v1(org.jaudiotagger.tag.id3.AbstractTag)
com.caij.puremusic.drive.model.AlbumMediaContainer: boolean equals(java.lang.Object)
org.simpleframework.xml.core.MethodContact: boolean isReadOnly()
org.xmlpull.v1.XmlPullParser: void defineEntityReplacementText(java.lang.String,java.lang.String)
org.jaudiotagger.tag.mp4.Mp4Tag: org.jaudiotagger.tag.TagField getFirstField(org.jaudiotagger.tag.FieldKey)
org.jaudiotagger.audio.asf.io.ChunkContainerReader: org.jaudiotagger.audio.asf.data.ChunkContainer read(org.jaudiotagger.audio.asf.data.GUID,java.io.InputStream,long)
com.alipay.apmobilesecuritysdk.e.i: void f(java.lang.String)
org.jaudiotagger.utils.DirectByteBufferUtils: java.lang.reflect.Method loadMethod(java.lang.String,java.lang.String)
com.caij.puremusic.db.model.ServerSongCoverQueries$getBySource$2: com.caij.puremusic.db.model.ServerSongCover invoke(java.lang.String,long,java.lang.String)
org.simpleframework.xml.stream.OutputElement: java.lang.String getReference()
androidx.core.view.ViewCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
androidx.fragment.app.Fragment: void setAllowEnterTransitionOverlap(boolean)
com.caij.puremusic.db.model.SongQueries$SongsByInfoQuery$execute$1: SongQueries$SongsByInfoQuery$execute$1(com.caij.puremusic.db.model.SongQueries$SongsByInfoQuery)
com.caij.puremusic.drive.model.PlaylistMetadata: PlaylistMetadata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
org.simpleframework.xml.core.CompositeMapUnion: boolean validate(org.simpleframework.xml.stream.InputNode)
code.name.monkey.appthemehelper.common.prefs.supportv7.ATESwitchPreference: ATESwitchPreference(android.content.Context,android.util.AttributeSet,int)
androidx.core.view.ViewCompat$Api24Impl: void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder)
org.jaudiotagger.audio.mp3.MP3AudioHeader: int getTrackLength()
com.caij.puremusic.drive.model.Metadata: java.lang.String component4()
org.jaudiotagger.tag.asf.AsfFieldKey: AsfFieldKey(java.lang.String,int,java.lang.String,boolean)
org.jaudiotagger.tag.id3.ID3v23Frame$EncodingFlags: boolean isEncryption()
com.umeng.commonsdk.statistics.b: void a(boolean)
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey[] values()
org.simpleframework.xml.core.FieldContact: boolean isStatic()
com.umeng.analytics.pro.l: com.umeng.analytics.pro.ar f()
com.thegrizzlylabs.sardineandroid.model.Ace: void setPrincipal(com.thegrizzlylabs.sardineandroid.model.Principal)
org.jaudiotagger.utils.tree.TreePath: boolean isDescendant(org.jaudiotagger.utils.tree.TreePath)
org.simpleframework.xml.stream.InputNodeMap: org.simpleframework.xml.stream.InputNode put(java.lang.String,java.lang.String)
org.jaudiotagger.audio.wav.WavTagWriter: void writeExtraByteIfChunkOddSize(java.nio.channels.FileChannel,long)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: void readObject(java.io.ObjectInputStream)
com.caij.puremusic.drive.model.PlayListItem: int getChildCount()
com.caij.puremusic.drive.model.GoogleDriveFileResponse: java.lang.String toString()
com.tencent.mm.opensdk.modelbiz.WXChannelStartLive$Req: WXChannelStartLive$Req()
org.simpleframework.xml.core.ObjectScanner: org.simpleframework.xml.core.Instantiator getInstantiator()
org.jaudiotagger.tag.datatype.TextEncodedStringSizeTerminated: void stripTrailingNull()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getRippleColor()
com.google.android.material.bottomsheet.BottomSheetDragHandleView: BottomSheetDragHandleView(android.content.Context)
com.alipay.sdk.app.H5AuthActivity: H5AuthActivity()
com.umeng.analytics.pro.q: q()
com.umeng.analytics.pro.bv: bv(int,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatHoveredFocusedTranslationZ()
com.caij.puremusic.drive.model.SubsonicResponse$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getBackgroundOverlayColorAlpha()
com.caij.puremusic.db.model.AlbumQueries$getAlbumByArtistId$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
com.alipay.apmobilesecuritysdk.e.h: void a(android.content.Context,java.lang.String)
org.simpleframework.xml.stream.DocumentProvider: org.simpleframework.xml.stream.EventReader provide(java.io.InputStream)
com.umeng.analytics.pro.bd: bd()
com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyCHAP: void setupObjectList()
org.jaudiotagger.tag.id3.framebody.FrameBodyTBPM: FrameBodyTBPM(org.jaudiotagger.tag.id3.framebody.FrameBodyTBPM)
org.jaudiotagger.tag.TagOptionSingleton: boolean isId3v1SaveGenre()
com.tencent.mm.opensdk.modelmsg.WXGameLiveObject: java.lang.String getExtra(java.lang.String,java.lang.String)
com.caij.puremusic.drive.model.Prop: void getDisplayname$annotations()
com.umeng.commonsdk.internal.utils.a: int d(android.content.Context)
com.google.android.material.bottomsheet.BottomSheetBehavior: void addBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback)
com.umeng.analytics.pro.ad$a: android.os.IBinder a()
com.tencent.bugly.proguard.ay: boolean f()
com.caij.puremusic.drive.model.JellyfinSongListResponse: int hashCode()
com.google.android.material.slider.Slider: void setHaloTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.SwitchCompat: void setFilters(android.text.InputFilter[])
org.jcodec.containers.mp4.boxes.AliasBox: int getRecordSize()
org.jaudiotagger.audio.mp3.MP3AudioHeader: double getTimePerFrame()
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1: BottomSheetBehavior$SavedState$1()
org.jaudiotagger.tag.id3.framebody.FrameBodyLINK: java.lang.String getIdentifier()
androidx.appcompat.widget.SwitchCompat: void setTextOnInternal(java.lang.CharSequence)
com.caij.puremusic.db.model.FolderQueries$selectById$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
org.simpleframework.xml.core.Variable: java.lang.Object getEmpty(org.simpleframework.xml.core.Context)
org.simpleframework.xml.stream.OutputDocument: void setMode(org.simpleframework.xml.stream.Mode)
com.umeng.umzid.ZIDManager: java.lang.String getZID(android.content.Context)
org.simpleframework.xml.core.DefaultDetail: java.util.List getFields()
org.simpleframework.xml.transform.ClassTransform: java.lang.ClassLoader getClassLoader()
com.caij.puremusic.drive.model.AlbumArtist$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.AlbumArtist)
com.caij.puremusic.activities.base.AbsBaseActivity: AbsBaseActivity()
com.caij.puremusic.drive.model.BaiduDriveItem: long getServer_ctime()
com.caij.puremusic.drive.model.GoogleDriveFile: long getSize()
com.alipay.android.phone.mrpc.core.q: q(com.alipay.android.phone.mrpc.core.l,com.alipay.android.phone.mrpc.core.o)
com.caij.puremusic.drive.model.SubsonicResponse: SubsonicResponse(int,java.lang.String,java.lang.String,com.caij.puremusic.drive.model.AlbumList,kotlinx.serialization.internal.SerializationConstructorMarker)
org.jcodec.containers.mp4.boxes.TrunBox: TrunBox(org.jcodec.containers.mp4.boxes.Header)
org.simpleframework.xml.core.AttributeLabel: org.simpleframework.xml.core.Contact getContact()
com.caij.puremusic.db.model.ServerAudioFormatQueries: app.cash.sqldelight.Query getById(long)
com.caij.puremusic.drive.model.AMediaContainer: AMediaContainer(int,java.util.List,kotlinx.serialization.internal.SerializationConstructorMarker)
org.jaudiotagger.tag.id3.framebody.FrameBodyTKEY: FrameBodyTKEY(byte,java.lang.String)
org.simpleframework.xml.core.PrimitiveScanner: org.simpleframework.xml.core.Label getText()
com.umeng.analytics.pro.bu: void a(java.nio.ByteBuffer)
com.caij.puremusic.db.model.PlayCountEntityQueries$insert$1: PlayCountEntityQueries$insert$1(com.caij.puremusic.db.model.PlayCountEntity)
org.jaudiotagger.tag.id3.framebody.FrameBodyTPOS: void setDiscNo(java.lang.String)
org.jaudiotagger.tag.datatype.BooleanString: boolean equals(java.lang.Object)
org.jaudiotagger.tag.id3.AbstractID3v2Frame: boolean isEmpty()
com.caij.puremusic.drive.model.SubsonicSong$Companion: SubsonicSong$Companion()
com.umeng.analytics.b: void a(long)
org.simpleframework.xml.core.Variable: org.simpleframework.xml.core.Label getLabel(java.lang.Class)
org.simpleframework.xml.transform.DateType$DateFormat: DateType$DateFormat(java.lang.String)
com.caij.vip.Activation: Activation()
org.jaudiotagger.utils.tree.TreeModel: int getIndexOfChild(java.lang.Object,java.lang.Object)
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query searchSongsByTitle(java.lang.String)
com.caij.puremusic.db.model.SongEntityQueries$SongsFromPlaylistQuery$execute$1: SongEntityQueries$SongsFromPlaylistQuery$execute$1(com.caij.puremusic.db.model.SongEntityQueries$SongsFromPlaylistQuery)
com.umeng.analytics.c: java.lang.String[] a(android.content.Context)
com.umeng.commonsdk.framework.UMEnvelopeBuild: void sendProcessNextMsgOnce()
org.jaudiotagger.audio.asf.data.ChunkContainer: org.jaudiotagger.audio.asf.data.Chunk getFirst(org.jaudiotagger.audio.asf.data.GUID,java.lang.Class)
com.caij.puremusic.drive.model.Location$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
androidx.gridlayout.widget.GridLayout: void setUseDefaultMargins(boolean)
com.umeng.analytics.pro.i: i(com.umeng.analytics.pro.i$1)
org.jaudiotagger.tag.TagOptionSingleton: boolean isId3v1SaveYear()
org.jaudiotagger.tag.id3.framebody.FrameBodyTYER: FrameBodyTYER(byte,java.lang.String)
com.caij.puremusic.db.model.ArtistQueries$artists$1: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.db.model.ServerAudioFormatQueries$deleteSongBySource$1: java.lang.Object invoke(java.lang.Object)
com.umeng.analytics.pro.u: java.lang.String b()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()
org.jaudiotagger.tag.id3.framebody.FrameBodyEncrypted: java.lang.String getIdentifier()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
com.tencent.bugly.crashreport.CrashReport: boolean setJavascriptMonitor(com.tencent.bugly.crashreport.CrashReport$a,boolean,boolean)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
com.bumptech.glide.Priority: com.bumptech.glide.Priority valueOf(java.lang.String)
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries: app.cash.sqldelight.Query getById(java.lang.String,kotlin.jvm.functions.Function4)
com.tencent.mm.opensdk.modelmsg.WXStateSceneDataObject: void unserialize(android.os.Bundle)
androidx.appcompat.widget.AppCompatCheckBox: void setFilters(android.text.InputFilter[])
org.jaudiotagger.audio.ogg.OggFileReader: org.jaudiotagger.tag.Tag getTag(java.io.RandomAccessFile)
org.simpleframework.xml.core.MethodType: org.simpleframework.xml.core.MethodType valueOf(java.lang.String)
com.umeng.analytics.pro.m: void onActivityStarted(android.app.Activity)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.jaudiotagger.tag.datatype.AbstractDataType: AbstractDataType(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody,java.lang.Object)
org.simpleframework.xml.core.ElementArrayLabel: java.lang.String getName()
com.google.android.material.appbar.CollapsingToolbarLayout: android.graphics.drawable.Drawable getStatusBarScrim()
com.caij.puremusic.drive.model.Type: java.lang.String toString()
org.simpleframework.xml.convert.ConverterScanner: java.lang.Class getType(org.simpleframework.xml.strategy.Type,org.simpleframework.xml.strategy.Value)
com.caij.puremusic.db.model.ServerSongCoverQueries$getBySource$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
com.caij.puremusic.drive.model.Prop$Companion: Prop$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.umeng.analytics.pro.o$c: void a()
com.google.android.exoplayer2.audio.DefaultAudioSink$Api23: void setPreferredDeviceOnAudioTrack(android.media.AudioTrack,com.google.android.exoplayer2.audio.DefaultAudioSink$AudioDeviceInfoApi23)
com.tencent.bugly.crashreport.CrashReport: java.lang.String getUserData(android.content.Context,java.lang.String)
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$deleteSongBySource$1: java.lang.Object invoke(java.lang.Object)
com.umeng.analytics.pro.ai$a: ai$a(com.umeng.analytics.pro.ai$1)
org.jcodec.containers.mp4.boxes.UdtaBox: void setFactory(org.jcodec.containers.mp4.IBoxFactory)
org.simpleframework.xml.core.ModelList: boolean isEmpty()
androidx.appcompat.widget.AppCompatEditText: void setKeyListener(android.text.method.KeyListener)
com.caij.puremusic.drive.model.OneDriveItem$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.audio.generic.AbstractTag: boolean setEncoding(java.nio.charset.Charset)
com.caij.puremusic.db.model.FolderQueries$deleteById$2: java.lang.Object invoke(java.lang.Object)
org.jcodec.containers.mp4.boxes.SampleToChunkBox$SampleToChunkEntry: SampleToChunkBox$SampleToChunkEntry(long,int,int)
com.caij.puremusic.db.model.SongEntity: long getPlaylistId()
org.jaudiotagger.audio.wav.WavSubFormat: WavSubFormat(java.lang.String,int,int,java.lang.String)
com.caij.puremusic.model.CategoryInfo$Category: int getIcon()
com.tencent.bugly.proguard.at: void e()
com.caij.puremusic.drive.model.EmbyAlbumsResponse: com.caij.puremusic.drive.model.EmbyAlbumsResponse copy(java.util.List,int,int)
org.jaudiotagger.tag.datatype.TextEncodedStringSizeTerminated: void addValue(java.lang.String)
com.tencent.mmkv.MMKV: java.lang.String[] decodeStringSet(long,java.lang.String)
org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistSaveOptions: org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistSaveOptions valueOf(java.lang.String)
com.umeng.umzid.a: android.content.SharedPreferences a(android.content.Context)
com.google.android.material.chip.Chip: void setChipStrokeWidthResource(int)
org.jaudiotagger.logging.Hex: java.lang.String asHex(long)
org.jaudiotagger.tag.id3.framebody.FrameBodyGRP1: FrameBodyGRP1(java.nio.ByteBuffer,int)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: org.jaudiotagger.utils.tree.TreeNode getRoot()
com.tencent.mm.opensdk.diffdev.a.a: void addListener(com.tencent.mm.opensdk.diffdev.OAuthListener)
com.caij.puremusic.db.model.Folder: com.caij.puremusic.db.model.Folder copy(long,int,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: java.util.List list(java.lang.String,int,java.util.Set)
org.jaudiotagger.tag.images.StandardArtwork: org.jaudiotagger.tag.images.StandardArtwork createArtworkFromFile(java.io.File)
org.jcodec.containers.mp4.boxes.VideoMediaHeaderBox: void doWrite(java.nio.ByteBuffer)
org.jaudiotagger.tag.datatype.EventTimingCodeList: org.jaudiotagger.tag.datatype.EventTimingCode createListElement()
org.simpleframework.xml.core.TextListLabel: org.simpleframework.xml.core.Contact getContact()
org.jaudiotagger.tag.id3.framebody.FrameBodyTOLY: FrameBodyTOLY(byte,java.lang.String)
com.umeng.commonsdk.statistics.proto.a: void read(com.umeng.analytics.pro.bu)
org.jaudiotagger.audio.SupportedFileFormat$5: SupportedFileFormat$5(java.lang.String,int,java.lang.String)
com.thegrizzlylabs.sardineandroid.Sardine: java.lang.Object report(java.lang.String,int,com.thegrizzlylabs.sardineandroid.report.SardineReport)
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
com.umeng.analytics.filter.a: a(java.lang.String,java.lang.String)
com.umeng.common.a: void a(android.content.Context)
com.caij.puremusic.activities.SettingActivity: SettingActivity()
com.tencent.mm.opensdk.modelmsg.WXEmojiSharedObject: WXEmojiSharedObject(java.lang.String,int,java.lang.String,java.lang.String)
com.caij.puremusic.drive.model.AMetadata: java.lang.String getThumb()
com.caij.puremusic.model.DeezerResponse: int component3()
androidx.constraintlayout.helper.widget.Flow: void setFirstVerticalStyle(int)
com.umeng.analytics.pro.s: void a(java.lang.String,org.json.JSONObject)
com.umeng.commonsdk.debug.UMLog: void bundle(int,android.os.Bundle)
com.tencent.mm.opensdk.modelmsg.WXMusicVipInfo: void serialize(android.os.Bundle)
org.jaudiotagger.tag.aiff.AiffTag: void setField(org.jaudiotagger.tag.TagField)
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: BaseWXApiImplV10(android.content.Context,java.lang.String,boolean,int)
com.caij.puremusic.model.CategoryInfo: int hashCode()
android.support.v4.media.MediaDescriptionCompat$Api21Impl: android.net.Uri getIconUri(android.media.MediaDescription)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.lang.Object getFrame(java.lang.String)
org.simpleframework.xml.core.Composite: void writeElement(org.simpleframework.xml.stream.OutputNode,java.lang.Object,org.simpleframework.xml.core.Label)
org.simpleframework.xml.core.MethodContact: java.lang.Object get(java.lang.Object)
com.caij.puremusic.db.model.SongEntityQueries$getSongEntity$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
com.tencent.bugly.proguard.bv: void a(com.tencent.bugly.proguard.l)
org.simpleframework.xml.stream.InputNodeMap: org.simpleframework.xml.stream.InputNode remove(java.lang.String)
org.jaudiotagger.tag.id3.ID3v23Tag: ID3v23Tag(org.jaudiotagger.tag.id3.ID3v23Tag)
org.jaudiotagger.audio.asf.data.Chunk: Chunk(org.jaudiotagger.audio.asf.data.GUID,java.math.BigInteger)
com.tencent.bugly.proguard.u: android.content.SharedPreferences c(com.tencent.bugly.proguard.u)
org.jaudiotagger.tag.datatype.Lyrics3TimeStamp: void setSecond(long)
org.jaudiotagger.audio.opus.OpusVorbisTagWriter: void delete(java.io.RandomAccessFile,java.io.RandomAccessFile)
com.umeng.commonsdk.statistics.proto.d: com.umeng.analytics.pro.bp p()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
org.simpleframework.xml.core.Parameter: boolean isText()
com.umeng.commonsdk.statistics.proto.a: com.umeng.commonsdk.statistics.proto.a b(java.lang.String)
com.umeng.commonsdk.statistics.proto.b: com.umeng.analytics.pro.bp n()
com.umeng.commonsdk.config.b: boolean a(java.lang.String)
org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Class,org.simpleframework.xml.stream.InputNode,boolean)
com.google.android.material.chip.Chip: void setCloseIconResource(int)
com.umeng.analytics.pro.ap: ap()
com.caij.puremusic.drive.model.SubsonicPlaylist: boolean equals(java.lang.Object)
com.tencent.mm.opensdk.modelmsg.WXGameVideoFileObject: void unserialize(android.os.Bundle)
org.jaudiotagger.tag.mp4.field.Mp4FieldType: Mp4FieldType(java.lang.String,int,int)
com.tencent.bugly.proguard.as$1: as$1()
com.caij.puremusic.drive.model.SubsonicSearchResponse: com.caij.puremusic.drive.model.SearchResult3 getSearchResult3()
org.simpleframework.xml.core.Repeater: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.lang.Object)
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query songsByAlumId(long)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: java.util.List getCustomActions(android.media.session.PlaybackState)
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.umeng.analytics.pro.au: au()
com.tencent.bugly.proguard.x: void onCreate(android.database.sqlite.SQLiteDatabase)
com.caij.puremusic.db.model.SongQueries$songsDateLastDesc$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
com.caij.puremusic.db.model.SongQueries$songByPath$1: SongQueries$songByPath$1(kotlin.jvm.functions.Function18,com.caij.puremusic.db.model.SongQueries)
com.umeng.commonsdk.statistics.proto.c$e: com.umeng.commonsdk.statistics.proto.c$e[] values()
com.caij.puremusic.db.model.SongQueries$songsByInfo$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyLYR: int getSize()
org.jaudiotagger.tag.id3.valuepair.ImageFormats: boolean binaryDataIsBmpFormat(byte[])
androidx.core.view.ViewCompat$Api16Impl: int getMinimumHeight(android.view.View)
com.umeng.commonsdk.statistics.proto.Response: void setImprintIsSet(boolean)
com.caij.puremusic.fragments.base.AbsRecyclerViewCustomGridSizeFragment: AbsRecyclerViewCustomGridSizeFragment()
com.umeng.commonsdk.statistics.common.ULog: void i(java.lang.String,java.lang.String,java.lang.Throwable)
org.simpleframework.xml.core.Detail: java.util.List getFields()
com.caij.puremusic.db.model.SearchAlbumResult: com.caij.puremusic.db.model.SearchAlbumResult copy$default(com.caij.puremusic.db.model.SearchAlbumResult,java.lang.String,java.lang.String,int,java.lang.Object)
com.tencent.bugly.proguard.aj: void a(boolean,int,java.lang.String)
com.umeng.commonsdk.debug.UMLogCommon: UMLogCommon()
com.google.android.material.internal.NavigationMenuItemView: void setTextColor(android.content.res.ColorStateList)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonTintMode(android.graphics.PorterDuff$Mode)
org.simpleframework.xml.stream.Splitter: char toLower(char)
com.google.android.material.progressindicator.CircularProgressIndicator: int getIndicatorInset()
com.umeng.commonsdk.statistics.internal.b: void onRequestStart()
com.caij.puremusic.drive.model.ADriveItem: ADriveItem(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.tencent.bugly.proguard.ay: com.tencent.bugly.proguard.ay a()
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForView(android.view.DragEvent,android.view.View,android.app.Activity)
com.tencent.bugly.BuglyStrategy: boolean isUploadProcess()
org.jaudiotagger.tag.datatype.NumberFixedLength: void readByteArray(byte[],int)
org.simpleframework.xml.transform.ClassTransform: ClassTransform()
org.jaudiotagger.tag.id3.AbstractTagItem: int getSize()
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
com.caij.puremusic.db.model.AlbumQueries: com.caij.puremusic.db.model.Album$Adapter access$getAlbumAdapter$p(com.caij.puremusic.db.model.AlbumQueries)
com.umeng.analytics.pro.s: void a(java.util.List)
com.tencent.mm.opensdk.modelbiz.WXChannelJumpMiniProgramInfo: void unserialize(android.os.Bundle)
com.umeng.commonsdk.statistics.common.ReportPolicy$DebugPolicy: ReportPolicy$DebugPolicy(com.umeng.commonsdk.statistics.internal.StatTracer)
com.caij.puremusic.model.DeezerResponse: java.lang.String component2()
com.tencent.bugly.proguard.i: com.tencent.bugly.proguard.i a(int,java.lang.String)
androidx.constraintlayout.helper.widget.Flow: void setPaddingTop(int)
com.caij.puremusic.drive.model.Part: int component3()
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: android.media.session.PlaybackState build(android.media.session.PlaybackState$Builder)
com.umeng.analytics.pro.m: boolean a(com.umeng.analytics.pro.m,boolean)
org.jaudiotagger.audio.mp4.Chunk: org.jaudiotagger.audio.mp4.Chunk createFrom(org.jaudiotagger.audio.mp4.Chunk)
com.thegrizzlylabs.sardineandroid.model.Multistatus: Multistatus()
com.caij.puremusic.db.model.AlbumQueries$SearchAlbumsByNameQuery$execute$1: AlbumQueries$SearchAlbumsByNameQuery$execute$1(com.caij.puremusic.db.model.AlbumQueries$SearchAlbumsByNameQuery)
org.simpleframework.xml.stream.OutputElement: java.lang.String getPrefix(boolean)
com.alipay.apmobilesecuritysdk.e.h: void f(android.content.Context,java.lang.String)
com.caij.puremusic.fragments.about.AboutFragment$onViewCreated$1: AboutFragment$onViewCreated$1()
com.tencent.bugly.proguard.ap: java.lang.String a(java.io.File,int,boolean)
org.simpleframework.xml.core.ElementMapUnionParameter: java.lang.String toString()
com.caij.puremusic.db.model.SongEntityQueries$GetPlaylistLastAddSongQuery: long getPlaylistId()
com.google.common.collect.Maps$EntryFunction: Maps$EntryFunction(java.lang.String,int,com.google.common.collect.Maps$1)
com.umeng.analytics.pro.bx: void a(int)
com.caij.puremusic.model.UpdateInfo$ForcedUpgradeInfo$1: com.caij.puremusic.model.UpdateInfo$ForcedUpgradeInfo[] newArray(int)
com.umeng.analytics.pro.bo: void g()
com.caij.puremusic.drive.model.JellyfinSongListResponse: int getStartIndex()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
org.repackage.com.meizu.flyme.openidsdk.OpenId: void b()
com.caij.puremusic.db.model.ServerArtistCover: java.lang.String getUrl()
com.umeng.analytics.pro.ci: void b(byte[],int,int)
org.jaudiotagger.audio.asf.io.FullRequestInputStream: long skip(long)
com.caij.puremusic.drive.model.PlaylistsMediaContainer$$serializer: com.caij.puremusic.drive.model.PlaylistsMediaContainer deserialize(kotlinx.serialization.encoding.Decoder)
org.simpleframework.xml.Order: java.lang.String[] attributes()
com.thegrizzlylabs.sardineandroid.model.Principal: com.thegrizzlylabs.sardineandroid.model.Self getSelf()
com.umeng.commonsdk.statistics.noise.ImLatent: long getDelayTime()
org.jaudiotagger.audio.asf.data.FileHeader: long getMinPackageSize()
androidx.appcompat.app.AppCompatDialog: boolean supportRequestWindowFeature(int)
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: void setChannelMap(byte[])
com.tencent.mm.opensdk.modelpay.PayReq: int getType()
com.caij.puremusic.db.model.SongQueries$SongsDateLastDescQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
com.caij.puremusic.db.model.HistoryEntityQueries$HistorySongsQuery: long getValue()
org.simpleframework.xml.core.SignatureBuilder$ParameterTable: int height()
com.caij.puremusic.drive.model.PlexSectionsResponse: int hashCode()
com.caij.puremusic.model.Genre$Creator: com.caij.puremusic.model.Genre createFromParcel(android.os.Parcel)
org.jcodec.containers.mp4.boxes.Header: void write(java.nio.ByteBuffer)
com.tencent.bugly.crashreport.CrashReport: android.content.Context getContext()
com.caij.puremusic.drive.model.ImageTags$$serializer: com.caij.puremusic.drive.model.ImageTags deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.drive.model.PlexAlbumsResponse: boolean equals(java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
com.caij.puremusic.drive.model.Media$Companion: Media$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.umeng.commonsdk.statistics.idtracking.Envelope: Envelope(byte[],java.lang.String,byte[])
com.umeng.analytics.pro.i$b: i$b()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(int)
org.jaudiotagger.tag.Tag: java.util.List getFields(java.lang.String)
com.caij.puremusic.drive.model.DavResource$Companion: DavResource$Companion()
org.jaudiotagger.tag.id3.ID3SyncSafeInteger: boolean isBufferNotSyncSafe(java.nio.ByteBuffer)
org.simpleframework.xml.stream.NodeBuilder: org.simpleframework.xml.stream.OutputNode write(java.io.Writer,org.simpleframework.xml.stream.Format)
org.jcodec.containers.mp4.boxes.EsdsBox$Descriptor: void doWrite(java.nio.ByteBuffer)
com.tencent.mm.opensdk.modelmsg.WXWebpageObject: WXWebpageObject()
org.simpleframework.xml.core.CacheParameter: java.lang.annotation.Annotation getAnnotation()
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: org.jaudiotagger.tag.TagField createCompilationField(boolean)
org.jaudiotagger.tag.lyrics3.Lyrics3v2: void read(java.nio.ByteBuffer)
com.tencent.bugly.proguard.u: void a(int)
com.google.android.material.bottomsheet.BottomSheetBehavior$1: void run()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
org.jaudiotagger.tag.id3.framebody.FrameBodyTCOM: FrameBodyTCOM()
com.google.common.collect.MapMakerInternalMap$Strength: com.google.common.base.Equivalence defaultEquivalence()
androidx.core.content.res.ResourcesCompat$Api15Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int)
org.jcodec.containers.mp4.boxes.MovieBox: java.util.List getAudioTracks()
com.caij.puremusic.db.model.SongEntityQueries$isSongExistsInPlaylist$1: SongEntityQueries$isSongExistsInPlaylist$1(kotlin.jvm.functions.Function3)
com.thegrizzlylabs.sardineandroid.DavAce: java.util.List getDenied()
com.caij.puremusic.drive.model.Location$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.alipay.apmobilesecuritysdk.e.h: long a(android.content.Context)
com.afollestad.materialdialogs.internal.main.DialogScrollView: com.afollestad.materialdialogs.internal.main.DialogLayout getRootView()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
org.simpleframework.xml.Text: boolean data()
com.alipay.android.phone.mrpc.core.o: void a(org.apache.http.Header)
com.thegrizzlylabs.sardineandroid.model.Deny: void setPrivilege(java.util.List)
com.google.android.material.navigation.NavigationBarItemView: void setCheckable(boolean)
com.caij.puremusic.drive.model.PlexUser: java.lang.String getAuthenticationToken()
androidx.cardview.widget.CardView: void setMinimumHeight(int)
com.caij.puremusic.wxapi.WXPayEntryActivity: WXPayEntryActivity()
com.caij.puremusic.db.model.PlaylistEntityQueries$deleteById$2: PlaylistEntityQueries$deleteById$2()
com.umeng.analytics.pro.bg: bg(byte,java.lang.Class)
com.umeng.commonsdk.statistics.proto.d: boolean k()
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior()
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag[] values()
com.caij.puremusic.db.model.SongEntityQueries$GetSongEntityQuery: long getPlaylistId()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: int getCircularRevealScrimColor()
org.simpleframework.xml.stream.OutputStack: org.simpleframework.xml.stream.OutputNode push(org.simpleframework.xml.stream.OutputNode)
org.jcodec.containers.mp4.boxes.TrunBox: int getDataOffset()
org.simpleframework.xml.core.CacheLabel: org.simpleframework.xml.core.Decorator getDecorator()
org.jaudiotagger.tag.id3.valuepair.ImageFormats: java.lang.String getMimeTypeForBinarySignature(byte[])
org.jaudiotagger.tag.id3.framebody.FrameBodyTOWN: FrameBodyTOWN()
com.umeng.commonsdk.statistics.common.b: byte[] b(byte[])
org.jaudiotagger.audio.asf.io.LanguageListReader: org.jaudiotagger.audio.asf.data.GUID[] getApplyingIds()
com.google.android.material.bottomsheet.BottomSheetBehavior: int getMaxHeight()
com.thegrizzlylabs.sardineandroid.DavResource: java.lang.String access$700(com.thegrizzlylabs.sardineandroid.DavResource,com.thegrizzlylabs.sardineandroid.model.Response)
com.umeng.analytics.process.UMProcessDBDatasSender: UMProcessDBDatasSender()
com.umeng.analytics.pro.as: int a(byte[])
org.jaudiotagger.tag.id3.framebody.FrameBodyTCOP: FrameBodyTCOP(org.jaudiotagger.tag.id3.framebody.FrameBodyTCOP)
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier getByCode(java.lang.String)
com.caij.puremusic.drive.model.JellyfinSongListResponse: java.lang.String toString()
com.caij.puremusic.drive.model.AMetadata: java.lang.String toString()
org.simpleframework.xml.core.PrimitiveValue: boolean validateAttribute(org.simpleframework.xml.stream.InputNode,java.lang.String)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
com.caij.puremusic.views.TopAppBarLayout$AppBarMode: TopAppBarLayout$AppBarMode(java.lang.String,int)
org.jaudiotagger.tag.datatype.NumberVariableLength: int getMaximumLenth()
com.caij.puremusic.drive.model.AMediaContainer$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.tencent.mm.opensdk.modelpay.WXJointPay$JointPayResp: void fromBundle(android.os.Bundle)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
org.jaudiotagger.tag.aiff.AiffTag: long getSizeOfID3TagIncludingChunkHeader()
org.simpleframework.xml.stream.OutputElement: org.simpleframework.xml.stream.Node getParent()
org.jaudiotagger.tag.id3.framebody.FrameBodyWCOP: FrameBodyWCOP()
org.simpleframework.xml.stream.InputAttribute: boolean isEmpty()
org.jaudiotagger.tag.mp4.Mp4FieldKey: java.lang.String getIdentifier()
androidx.core.os.CancellationSignal$Api16Impl: android.os.CancellationSignal createCancellationSignal()
org.jaudiotagger.utils.DirectByteBufferUtils$UnsupportedJvmReleaseStrategy: org.jaudiotagger.utils.DirectByteBufferUtils$ReleaseStrategy access$300()
com.umeng.analytics.pro.f: f(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)
com.tencent.mm.opensdk.modelbiz.OpenWebview$Req: int getType()
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String reaMac(java.lang.String)
com.umeng.analytics.filter.b: void eventListChange()
com.caij.puremusic.drive.model.ArtistItem$Companion: ArtistItem$Companion()
com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)
com.google.android.material.bottomsheet.BottomSheetBehavior: void setSignificantVelocityThreshold(int)
com.caij.puremusic.db.model.SongQueries$GetArtistSongCountQuery: java.lang.String getArtistId_()
com.tencent.bugly.proguard.ao: boolean d(java.lang.String,java.lang.String,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getBackgroundTintList()
org.jaudiotagger.tag.id3.ID3v23Frame: ID3v23Frame(org.jaudiotagger.tag.id3.ID3v24Frame,java.lang.String)
org.jaudiotagger.tag.datatype.StringDate: java.lang.Object getValue()
com.caij.puremusic.db.model.HistoryEntityQueries$GetByIdQuery: HistoryEntityQueries$GetByIdQuery(com.caij.puremusic.db.model.HistoryEntityQueries,long,kotlin.jvm.functions.Function1)
com.google.android.material.imageview.ShapeableImageView: int getPaddingTop()
org.jaudiotagger.audio.generic.AudioFileReader: org.jaudiotagger.audio.generic.GenericAudioHeader getEncodingInfo(java.io.RandomAccessFile)
org.jcodec.containers.mp4.boxes.LoadSettingsBox: LoadSettingsBox(org.jcodec.containers.mp4.boxes.Header)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)
org.jcodec.containers.mp4.boxes.NodeBox: void removeChildren(java.lang.String[])
com.google.android.gms.internal.play_billing.zzew: zzew(java.lang.String,int,com.google.android.gms.internal.play_billing.zzex,int)
org.simpleframework.xml.stream.NodeWriter: void writeName(org.simpleframework.xml.stream.OutputNode)
io.ktor.utils.io.ByteReadChannel$Companion$Empty$2: ByteReadChannel$Companion$Empty$2()
nl.adaptivity.xmlutil.serialization.InputKind: nl.adaptivity.xmlutil.serialization.InputKind valueOf(java.lang.String)
org.json.alipay.b$a: java.lang.Object clone()
com.caij.puremusic.db.model.SongEntityQueries$getPlaylistLastAddSong$1: SongEntityQueries$getPlaylistLastAddSong$1(kotlin.jvm.functions.Function3)
com.umeng.commonsdk.statistics.proto.d$b: d$b()
com.caij.puremusic.db.model.SearchAlbumResultQueries$getById$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
org.simpleframework.xml.core.Context: boolean isFloat(java.lang.Class)
com.google.android.material.slider.Slider: void setTrackInactiveTintList(android.content.res.ColorStateList)
com.caij.puremusic.fragments.settings.ThemeSettingsFragment: ThemeSettingsFragment()
com.caij.puremusic.db.model.Song: int component16()
com.caij.puremusic.model.Contributor: java.lang.String getLink()
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getSuperButtonTintList()
androidx.constraintlayout.widget.ConstraintLayout: int getPaddingWidth()
com.yalantis.ucrop.view.TransformImageView: float getCurrentScale()
org.jcodec.containers.mp4.boxes.TimeToSampleBox: org.jcodec.containers.mp4.boxes.TimeToSampleBox$TimeToSampleEntry[] getEntries()
com.tencent.bugly.crashreport.CrashReport: void uploadUserInfo()
com.caij.puremusic.drive.model.AlbumSubsonicResponse: java.lang.String component2()
com.caij.puremusic.drive.model.ParentReference: java.lang.String toString()
com.google.android.material.appbar.CollapsingToolbarLayout: void setTitlePositionInterpolator(android.animation.TimeInterpolator)
org.jaudiotagger.tag.datatype.NumberVariableLength: byte[] writeByteArray()
org.simpleframework.xml.core.ElementMapUnionParameter$Contact: java.lang.String getName()
org.simpleframework.xml.core.ElementListUnionLabel: boolean isInline()
com.tencent.bugly.proguard.g: void a(com.tencent.bugly.proguard.l)
com.alipay.android.phone.mrpc.core.a: a(java.lang.reflect.Method,int,java.lang.String,byte[],java.lang.String,boolean)
org.simpleframework.xml.core.Session: java.lang.Object get(java.lang.Object)
org.jaudiotagger.tag.datatype.PartOfSet: void readByteArray(byte[],int)
org.simpleframework.xml.core.ElementListLabel: java.lang.String getEntry()
org.simpleframework.xml.core.CompositeValue: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object)
org.simpleframework.xml.core.InstanceFactory$ValueInstance: boolean isReference()
org.simpleframework.xml.core.Support: boolean isFloat(java.lang.Class)
org.jaudiotagger.tag.id3.framebody.FrameBodySIGN: FrameBodySIGN(java.nio.ByteBuffer,int)
org.jaudiotagger.tag.datatype.BooleanString: void readByteArray(byte[],int)
com.tencent.bugly.proguard.i: com.tencent.bugly.proguard.i a(java.lang.String,java.lang.String)
org.jaudiotagger.audio.mp4.Mp4FileWriter: void deleteTag(org.jaudiotagger.tag.Tag,java.io.RandomAccessFile,java.io.RandomAccessFile)
com.caij.puremusic.network.model.Artist: java.util.List getArtists()
com.tencent.mm.opensdk.modelmsg.WXAppExtendObject: WXAppExtendObject(java.lang.String,byte[])
com.caij.puremusic.model.PlaylistWrapper: int component2()
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$deleteSongBySource$1: DriveFileDownUrlInfoQueries$deleteSongBySource$1(long)
org.jaudiotagger.tag.id3.framebody.FrameBodyEncrypted: FrameBodyEncrypted(java.lang.String,java.nio.ByteBuffer,int)
org.jaudiotagger.tag.lyrics3.Lyrics3v2: int seekSize(java.nio.ByteBuffer)
org.jcodec.containers.mp4.boxes.TrunBox: int flagsGetSampleIsDependedOn(int)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyLYR: FieldFrameBodyLYR(java.nio.ByteBuffer)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyUrlLink: AbstractFrameBodyUrlLink()
org.jaudiotagger.tag.id3.framebody.FrameBodyPRIV: void setData(byte[])
org.simpleframework.xml.transform.CurrencyTransform: java.lang.Object read(java.lang.String)
org.jaudiotagger.tag.lyrics3.Lyrics3v2: Lyrics3v2()
com.caij.puremusic.drive.model.AMediaContainer: int hashCode()
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
androidx.customview.view.AbsSavedState: int describeContents()
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level[] values()
org.jaudiotagger.tag.id3.ID3v1Tag: void deleteField(org.jaudiotagger.tag.FieldKey)
com.caij.puremusic.db.model.PlaybackSongQueries$insert$2: PlaybackSongQueries$insert$2()
nl.adaptivity.xmlutil.serialization.DefaultXmlSerializationPolicy$elementNamespaceDecls$$inlined$filterIsInstance$1: DefaultXmlSerializationPolicy$elementNamespaceDecls$$inlined$filterIsInstance$1()
org.jaudiotagger.tag.datatype.StringNullTerminated: StringNullTerminated(org.jaudiotagger.tag.datatype.StringNullTerminated)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyNumberTotal: java.lang.String getText()
com.caij.puremusic.drive.model.SubsonicSearchListResponse$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.simpleframework.xml.ElementArray: boolean required()
com.caij.puremusic.db.model.ServerAudioFormat: java.lang.String component4()
org.jaudiotagger.tag.id3.framebody.FrameBodyPCNT: FrameBodyPCNT()
com.tencent.bugly.proguard.aa: void a(java.lang.String)
com.google.android.material.navigation.NavigationBarMenuView: android.graphics.drawable.Drawable getItemBackground()
com.umeng.commonsdk.statistics.common.ULog: void v(java.lang.String,java.lang.String,java.lang.Throwable)
org.jaudiotagger.audio.wav.WavFileReader: WavFileReader()
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: byte getStreamCountTwoChannel()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getDefaultHintTextColor()
androidx.appcompat.app.AppCompatDialog: void onCreate(android.os.Bundle)
com.tencent.mm.opensdk.modelbiz.WXChannelOpenFeed$Resp: void toBundle(android.os.Bundle)
org.jcodec.containers.mp4.boxes.ClipRegionBox: short getX()
androidx.activity.ComponentDialog: ComponentDialog(android.content.Context,int)
com.alipay.sdk.m.x.e: java.lang.String getUrl()
org.simpleframework.xml.core.ElementMapUnionParameter$Contact: ElementMapUnionParameter$Contact(org.simpleframework.xml.ElementMap,java.lang.reflect.Constructor,int)
com.thegrizzlylabs.sardineandroid.Version: java.lang.String getSpecification()
org.simpleframework.xml.core.Reflector: java.lang.Class[] getReturnDependents(java.lang.reflect.Method)
org.jaudiotagger.tag.TagOptionSingleton: void setEncodeUTF16BomAsLittleEndian(boolean)
com.caij.puremusic.drive.model.AlbumSubsonicResponse: java.lang.String toString()
com.tencent.bugly.proguard.i: com.tencent.bugly.proguard.i a(boolean,java.lang.String)
org.jaudiotagger.tag.reference.Languages: org.jaudiotagger.tag.reference.Languages getInstanceOf()
com.yalantis.ucrop.view.UCropView: com.yalantis.ucrop.view.OverlayView getOverlayView()
com.google.android.material.materialswitch.MaterialSwitch: void setThumbIconDrawable(android.graphics.drawable.Drawable)
com.thegrizzlylabs.sardineandroid.model.Prop: com.thegrizzlylabs.sardineandroid.model.PrincipalCollectionSet getPrincipalCollectionSet()
androidx.fragment.app.Fragment: void setSharedElementNames(java.util.ArrayList,java.util.ArrayList)
org.jaudiotagger.tag.datatype.PartOfSet$PartOfSetValue: PartOfSet$PartOfSetValue()
org.jaudiotagger.utils.DirectByteBufferUtils: DirectByteBufferUtils()
com.umeng.analytics.pro.s: com.umeng.analytics.pro.s a(android.content.Context)
org.jaudiotagger.tag.id3.ID3v24FieldKey: java.lang.String getSubId()
org.jaudiotagger.tag.id3.framebody.FrameBodyTSRC: FrameBodyTSRC(org.jaudiotagger.tag.id3.framebody.FrameBodyTSRC)
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getImsi(android.content.Context)
org.simpleframework.xml.core.ModelMap: java.util.Iterator iterator()
org.jaudiotagger.tag.id3.framebody.FrameBodyTDEN: FrameBodyTDEN(org.jaudiotagger.tag.id3.framebody.FrameBodyTDEN)
androidx.mediarouter.app.MediaRouteButton: void setRouteSelector(androidx.mediarouter.media.MediaRouteSelector)
io.ktor.util.CaseInsensitiveMap$entries$1: CaseInsensitiveMap$entries$1()
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyTextInfo: java.lang.String getTextWithoutTrailingNulls()
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyPairs: void setupObjectList()
com.caij.puremusic.drive.model.SongItem: java.util.List component13()
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setParallaxDistance(int)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextEnabled(boolean)
com.umeng.commonsdk.statistics.proto.c: java.lang.String toString()
com.tencent.bugly.proguard.w: boolean a(int,java.lang.String,com.tencent.bugly.proguard.v)
org.jaudiotagger.tag.TagOptionSingleton: boolean isTruncateTextWithoutErrors()
com.caij.puremusic.fragments.player.normal.PlayerPlaybackControlsFragment: PlayerPlaybackControlsFragment()
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
com.umeng.commonsdk.statistics.internal.StatTracer: void logRequestStart()
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getSubOSVersion(android.content.Context)
org.jaudiotagger.audio.SupportedFileFormat$3: org.jaudiotagger.tag.Tag createDefaultTag()
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()
com.google.android.material.chip.Chip: void setCheckedIconVisible(int)
com.google.android.material.slider.BaseSlider: void setCustomThumbDrawable(int)
com.google.android.gms.internal.play_billing.zzx: zzx()
com.google.android.material.bottomappbar.BottomAppBar: void setBackgroundTint(android.content.res.ColorStateList)
com.caij.puremusic.drive.model.ArtistItem: int hashCode()
org.jcodec.containers.mp4.boxes.UdtaMetaBox: org.jcodec.containers.mp4.boxes.UdtaMetaBox createUdtaMetaBox()
org.jcodec.containers.mp4.boxes.TrackHeaderBox: boolean isOrientation180()
com.heinrichreimersoftware.materialintro.view.FadeableViewPager: void setAdapter(androidx.viewpager.widget.PagerAdapter)
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query getAlbumSongCount(long)
org.jaudiotagger.tag.id3.framebody.FrameBodyPIC: int getPictureType()
com.google.android.material.chip.Chip: void setCheckableResource(int)
com.umeng.analytics.pro.u: java.lang.String a(android.content.Context,long,boolean)
com.caij.puremusic.drive.model.OneDriveItem: int hashCode()
com.umeng.commonsdk.UMConfigure: boolean isPreInit()
org.simpleframework.xml.stream.DocumentReader$Entry: java.lang.String getName()
com.alipay.sdk.m.j.c: int b()
org.jcodec.containers.mp4.boxes.SegmentTypeBox: void parse(java.nio.ByteBuffer)
com.caij.puremusic.drive.model.SubsonicSearchResponse: java.lang.String getStatus()
com.google.common.reflect.Types$JavaVersion$4: Types$JavaVersion$4(java.lang.String,int)
androidx.mediarouter.app.MediaRouteVolumeSlider: MediaRouteVolumeSlider(android.content.Context,android.util.AttributeSet)
com.tencent.mm.opensdk.openapi.WXApiImplComm: boolean validateAppSignature(android.content.Context,android.content.pm.Signature[],boolean)
com.caij.puremusic.MainModuleKt$roomModule$1$14: MainModuleKt$roomModule$1$14()
com.google.common.io.Files$FilePredicate$1: Files$FilePredicate$1(java.lang.String,int)
org.jaudiotagger.utils.tree.DefaultTreeModel: DefaultTreeModel(org.jaudiotagger.utils.tree.TreeNode)
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.audio.mp3.VbriFrame: boolean isVbr()
androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[] values()
com.caij.puremusic.drive.model.PlayListsResponse$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.thegrizzlylabs.sardineandroid.DavPrincipal: java.lang.String toString()
org.jcodec.containers.mp4.boxes.ClipRegionBox: java.lang.String fourcc()
com.caij.puremusic.drive.model.Response$Companion: kotlinx.serialization.KSerializer serializer()
org.jcodec.containers.mp4.boxes.ClearApertureBox: void parse(java.nio.ByteBuffer)
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessView: WXOpenBusinessView()
com.afollestad.materialdialogs.internal.main.DialogLayout: void setCornerRadii(float[])
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView$Api17Impl: int getLayoutDirection(android.content.res.Configuration)
org.jaudiotagger.audio.asf.data.AudioStreamChunk: void setSamplingRate(long)
com.caij.puremusic.fragments.other.PlayingQueueRVFragment: PlayingQueueRVFragment()
com.umeng.commonsdk.framework.a: void k()
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean access$1000(com.google.android.material.bottomsheet.BottomSheetBehavior)
com.caij.puremusic.db.model.ServerLyricsQueries$insert$2: ServerLyricsQueries$insert$2()
org.simpleframework.xml.util.ConcurrentCache: java.lang.Object fetch(java.lang.Object)
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdCountQuery$execute$1: SongQueries$SongsByAlbumIdCountQuery$execute$1(com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdCountQuery)
com.tencent.mm.opensdk.openapi.IWXAPI: boolean sendReq(com.tencent.mm.opensdk.modelbase.BaseReq)
org.repackage.com.vivo.identifier.IdentifierIdObserver: IdentifierIdObserver(org.repackage.com.vivo.identifier.IdentifierIdClient,int,java.lang.String)
org.simpleframework.xml.core.CompositeListUnion: java.lang.Object readElement(org.simpleframework.xml.stream.InputNode,java.lang.Object)
com.caij.puremusic.db.model.SongQueries$GetSongCountBySourceIdQuery: void addListener(app.cash.sqldelight.Query$Listener)
org.simpleframework.xml.core.SignatureCreator: java.lang.Object getVariable(org.simpleframework.xml.core.Criteria,int)
androidx.core.app.ActivityCompat$Api23Impl: void onSharedElementsReady(java.lang.Object)
com.caij.puremusic.drive.model.PlayLists: com.caij.puremusic.drive.model.PlayLists copy(java.util.List)
org.simpleframework.xml.core.Reflector: java.lang.Class getArrayClass(java.lang.reflect.Type)
com.umeng.analytics.pro.ay: java.lang.Long f(byte[],com.umeng.analytics.pro.bc,com.umeng.analytics.pro.bc[])
com.tencent.bugly.proguard.l: void a(com.tencent.bugly.proguard.m,int)
com.caij.puremusic.drive.model.OneDriveFolder: com.caij.puremusic.drive.model.OneDriveFolder copy(int)
com.tencent.bugly.proguard.r: void a(long)
org.jaudiotagger.audio.dsf.DsfChunkType: org.jaudiotagger.audio.dsf.DsfChunkType[] values()
org.simpleframework.xml.convert.ConverterScanner: ConverterScanner()
org.simpleframework.xml.core.Model: org.simpleframework.xml.core.LabelMap getElements()
org.simpleframework.xml.core.Support: java.lang.String write(java.lang.Object,java.lang.Class)
com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)
androidx.fragment.app.Fragment: void onAttach(android.app.Activity)
com.caij.puremusic.views.ColorIconsImageView: void setIconBackgroundColor(int)
com.umeng.commonsdk.UMConfigure: void setLatencyWindow(long)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItems(java.lang.String[])
com.caij.puremusic.drive.model.OneDriveFileResponse: java.util.List component3()
org.jaudiotagger.tag.id3.framebody.FrameBodyTDOR: FrameBodyTDOR(org.jaudiotagger.tag.id3.framebody.FrameBodyTORY)
org.simpleframework.xml.core.ElementListUnionParameter: boolean isRequired()
org.simpleframework.xml.Serializer: java.lang.Object read(java.lang.Object,java.io.InputStream)
org.jaudiotagger.tag.datatype.Lyrics3Image: void setDescription(java.lang.String)
org.repackage.com.meizu.flyme.openidsdk.b: boolean a(android.content.Context,boolean)
org.simpleframework.xml.core.Support: org.simpleframework.xml.core.Detail getDetail(java.lang.Class,org.simpleframework.xml.DefaultType)
androidx.appcompat.widget.AppCompatImageView: void setImageLevel(int)
org.jaudiotagger.audio.AudioFileIO: void writeFile(org.jaudiotagger.audio.AudioFile,java.lang.String)
org.jcodec.containers.mp4.boxes.MediaBox: java.lang.String fourcc()
org.jaudiotagger.audio.flac.FlacTagCreator: FlacTagCreator()
com.caij.puremusic.network.model.Artist: Artist(java.util.Map,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,com.caij.puremusic.network.model.Artist,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.umeng.commonsdk.utils.UMUtils: void setChannel(android.content.Context,java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.widget.ImageView$ScaleType getStartIconScaleType()
com.umeng.analytics.pro.aw: int a(int,int)
com.caij.puremusic.db.model.SongQueries$SongsByAlumQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.tencent.mmkv.MMKV: boolean tryLock()
com.umeng.analytics.pro.bu: boolean t()
com.caij.puremusic.drive.model.Directory$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
org.simpleframework.xml.core.ElementUnionLabel: java.lang.String[] getNames()
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$nullResult$1: ExceptionsConstructorKt$createConstructor$nullResult$1()
org.jcodec.containers.mp4.Boxes: Boxes()
org.jaudiotagger.tag.aiff.AiffTag: java.util.List getFields(java.lang.String)
org.simpleframework.xml.core.TextParameter: org.simpleframework.xml.core.Expression getExpression()
com.umeng.commonsdk.stateless.b: void l()
com.umeng.analytics.pro.ad: java.lang.String a(android.content.Context)
org.jaudiotagger.audio.opus.OpusVorbisTagWriter: OpusVorbisTagWriter()
org.jcodec.containers.mp4.boxes.MP4ABox: void doWrite(java.nio.ByteBuffer)
org.simpleframework.xml.core.SignatureBuilder: java.util.List create(org.simpleframework.xml.core.SignatureBuilder$ParameterTable)
androidx.constraintlayout.widget.Guideline: void setVisibility(int)
org.jaudiotagger.tag.asf.AsfTagTextField: AsfTagTextField(java.lang.String,java.lang.String)
com.caij.puremusic.drive.model.Metadata: java.lang.String component8()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.umeng.commonsdk.statistics.common.ULog: void d(java.util.Locale,java.lang.String,java.lang.Object[])
com.umeng.commonsdk.UMConfigureImpl: java.util.concurrent.ScheduledExecutorService a(java.util.concurrent.ScheduledExecutorService)
me.tankery.lib.circularseekbar.CircularSeekBar: int getPointerHaloColor()
com.google.common.hash.BloomFilterStrategies$1: boolean put(java.lang.Object,com.google.common.hash.Funnel,int,com.google.common.hash.BloomFilterStrategies$LockFreeBitArray)
com.caij.puremusic.MainModuleKt$networkModule$1$4: MainModuleKt$networkModule$1$4()
org.jaudiotagger.tag.id3.ID3v24Tag: boolean isUnsynchronization()
com.github.dhaval2404.imagepicker.ImagePickerActivity: ImagePickerActivity()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(int)
androidx.appcompat.app.AppCompatDialog: android.view.View findViewById(int)
org.simpleframework.xml.core.CompositeMap: boolean validate(org.simpleframework.xml.stream.InputNode)
org.jaudiotagger.tag.id3.ID3v23Tag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.id3.ID3v23FieldKey,java.lang.String)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
org.jaudiotagger.tag.asf.AsfTag: org.jaudiotagger.tag.asf.AsfTagTextField createField(org.jaudiotagger.tag.asf.AsfFieldKey,java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyTRCK: java.lang.String getIdentifier()
org.jaudiotagger.tag.id3.framebody.FrameBodyAENC: FrameBodyAENC()
org.simpleframework.xml.core.CompositeValue: java.lang.Object read(org.simpleframework.xml.stream.InputNode)
org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)
org.jcodec.containers.mp4.boxes.MovieExtendsBox: MovieExtendsBox(org.jcodec.containers.mp4.boxes.Header)
org.simpleframework.xml.transform.URLTransform: java.net.URL read(java.lang.String)
androidx.core.app.ComponentActivity: ComponentActivity()
com.tencent.bugly.crashreport.crash.CrashDetailBean: int describeContents()
com.google.android.material.imageview.ShapeableImageView: int getContentPaddingRight()
org.jaudiotagger.tag.datatype.NumberHashMap: void readByteArray(byte[],int)
org.simpleframework.xml.core.Traverser: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object,java.lang.Class,java.lang.String)
com.thegrizzlylabs.sardineandroid.model.Propstat: com.thegrizzlylabs.sardineandroid.model.Error getError()
com.caij.puremusic.drive.model.DropboxDriveFileResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.DropboxDriveFileResponse)
org.jcodec.containers.mp4.boxes.TrakBox: org.jcodec.containers.mp4.boxes.TrackHeaderBox getTrackHeader()
androidx.fragment.app.Fragment: boolean isAdded()
com.google.common.hash.Hashing$ChecksumType: com.google.common.hash.Hashing$ChecksumType[] values()
org.jaudiotagger.tag.TagOptionSingleton: void setWriteChunkSize(long)
io.ktor.websocket.CloseReason$Codes: io.ktor.websocket.CloseReason$Codes valueOf(java.lang.String)
com.umeng.analytics.pro.bu: void m()
org.jcodec.containers.mp4.boxes.TrunBox: void doWrite(java.nio.ByteBuffer)
com.caij.puremusic.db.model.ServerLyricsQueries$getById$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
com.caij.puremusic.drive.model.PlaylistMetadata: java.lang.String getRatingKey()
com.yalantis.ucrop.view.TransformImageView: android.graphics.Bitmap getViewBitmap()
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: void setErrorMessage(android.media.session.PlaybackState$Builder,java.lang.CharSequence)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
com.tencent.mm.opensdk.modelbiz.WXChannelOpenProfile$Resp: void fromBundle(android.os.Bundle)
org.jaudiotagger.tag.datatype.StringFixedLength: void readByteArray(byte[],int)
com.tencent.bugly.proguard.ai: com.tencent.bugly.proguard.ai a()
org.simpleframework.xml.core.StructureBuilder: void version(org.simpleframework.xml.core.Contact,java.lang.annotation.Annotation)
org.jcodec.containers.mp4.boxes.EsdsBox: int getObjectType()
org.jcodec.containers.mp4.boxes.DataBox: int getType()
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
com.caij.puremusic.drive.model.PlexPlaylistsResponse$$serializer: com.caij.puremusic.drive.model.PlexPlaylistsResponse deserialize(kotlinx.serialization.encoding.Decoder)
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.fragment.app.Fragment: void onActivityCreated(android.os.Bundle)
org.jaudiotagger.audio.wav.WavSaveOrder: org.jaudiotagger.audio.wav.WavSaveOrder[] values()
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
com.caij.puremusic.drive.model.PlexArtistsResponse$$serializer: com.caij.puremusic.drive.model.PlexArtistsResponse deserialize(kotlinx.serialization.encoding.Decoder)
com.umeng.commonsdk.utils.a: long d(com.umeng.commonsdk.utils.a)
org.jaudiotagger.tag.datatype.AbstractDataTypeList: AbstractDataTypeList(org.jaudiotagger.tag.datatype.AbstractDataTypeList)
com.umeng.analytics.pro.p: void uncaughtException(java.lang.Thread,java.lang.Throwable)
com.umeng.commonsdk.stateless.d: java.lang.String c(byte[])
com.caij.puremusic.drive.model.AMetadata$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.caij.puremusic.drive.model.GoogleDriveFileResponse$$serializer: com.caij.puremusic.drive.model.GoogleDriveFileResponse deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.tag.lyrics3.AbstractLyrics3v2FieldFrameBody: void writeHeader(java.io.RandomAccessFile,int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
com.umeng.analytics.pro.bn: void o()
com.google.android.material.search.SearchView: androidx.appcompat.widget.Toolbar getToolbar()
org.json.alipay.a: java.lang.String toString()
com.caij.puremusic.drive.model.PlayListItem: java.lang.String component5()
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
org.simpleframework.xml.core.DetailScanner: void order(java.lang.annotation.Annotation)
org.jaudiotagger.audio.asf.io.ContentDescriptionReader: boolean canFail()
com.caij.puremusic.drive.model.AMetadata$$serializer: com.caij.puremusic.drive.model.AMetadata deserialize(kotlinx.serialization.encoding.Decoder)
com.tencent.mmkv.MMKV: long getMMKVWithIDAndSize(java.lang.String,int,int,java.lang.String)
org.simpleframework.xml.stream.PullReader: org.simpleframework.xml.stream.EventNode next()
org.simpleframework.xml.filter.SystemFilter: SystemFilter(org.simpleframework.xml.filter.Filter)
androidx.fragment.app.Fragment: void onActivityResult(int,int,android.content.Intent)
com.tencent.bugly.proguard.ap: boolean b(java.io.File,java.io.File)
org.simpleframework.xml.core.ElementListUnionLabel: java.lang.String getName()
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
com.alipay.sdk.app.PayTask: com.alipay.sdk.util.H5PayResultModel h5Pay(com.alipay.sdk.m.s.a,java.lang.String,boolean)
com.umeng.analytics.MobclickAgent: void onGKVEvent(android.content.Context,java.lang.String,java.util.HashMap)
org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Class,java.io.Reader,boolean)
org.simpleframework.xml.util.WeakCache: WeakCache(int)
com.alipay.apmobilesecuritysdk.e.f: void c(java.lang.String)
com.thegrizzlylabs.sardineandroid.model.Inherited: java.lang.String getHref()
androidx.cardview.widget.CardView: int getContentPaddingBottom()
com.thegrizzlylabs.sardineandroid.model.Report: void setAny(org.w3c.dom.Element)
com.tencent.mm.opensdk.modelbiz.WXLaunchWxaRedirectingPage$Resp: int getType()
com.caij.puremusic.drive.model.SubsonicAlbum$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.caij.puremusic.network.model.ArtistWrapper: boolean equals(java.lang.Object)
com.caij.puremusic.drive.model.PlayListsSubsonicResponse: java.lang.String component1()
org.jaudiotagger.tag.wav.WavTag: void syncToId3FromInfoIfEmpty()
com.caij.puremusic.model.Playlist$Creator: com.caij.puremusic.model.Playlist[] newArray(int)
org.jcodec.containers.mp4.boxes.TrunBox: int getFirstSampleFlags()
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getDisplayResolution(android.content.Context)
com.umeng.analytics.pro.a$a$a: android.os.IBinder asBinder()
android.support.v4.media.MediaDescriptionCompat$Api21Impl: java.lang.CharSequence getSubtitle(android.media.MediaDescription)
com.caij.puremusic.db.model.Album: java.lang.String component3()
org.simpleframework.xml.strategy.Visitor: void write(org.simpleframework.xml.strategy.Type,org.simpleframework.xml.stream.NodeMap)
org.jcodec.containers.mp4.boxes.TimeToSampleBox: void parse(java.nio.ByteBuffer)
com.tencent.bugly.BuglyStrategy: long getAppReportDelay()
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
org.simpleframework.xml.core.ElementParameter: java.lang.annotation.Annotation getAnnotation()
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.core.app.RemoteInput$Api26Impl: java.util.Set getAllowedDataTypes(java.lang.Object)
com.caij.puremusic.db.model.ServerAudioFormatQueries$GetByIdQuery: long getId()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyETT: void setTitle(java.lang.String)
com.caij.puremusic.drive.model.Auth2Token: long component2()
com.tencent.mm.opensdk.modelmsg.WXImageObject: int type()
com.google.common.reflect.Types$JavaVersion: boolean jdkTypeDuplicatesOwnerName()
org.simpleframework.xml.core.Persister: void write(java.lang.Object,org.simpleframework.xml.stream.OutputNode,org.simpleframework.xml.core.Session)
org.simpleframework.xml.Attribute: boolean required()
org.jaudiotagger.tag.id3.framebody.FrameBodyTMOO: FrameBodyTMOO(byte,java.lang.String)
com.umeng.commonsdk.statistics.common.DataHelper: java.lang.String assembleStatelessURL(java.lang.String)
org.jaudiotagger.audio.SupportedFileFormat$1: SupportedFileFormat$1(java.lang.String,int,java.lang.String)
org.simpleframework.xml.strategy.ObjectValue: java.lang.Class getType()
org.simpleframework.xml.stream.PullReader: org.simpleframework.xml.stream.EventNode peek()
com.caij.puremusic.db.model.PlayCountEntityQueries$deleteById$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.caij.puremusic.db.model.ServerSongCoverQueries$getBySource$1: java.lang.Object invoke(java.lang.Object)
com.umeng.analytics.vshelper.b: void b()
org.jaudiotagger.audio.asf.io.StreamBitratePropertiesReader: StreamBitratePropertiesReader()
com.umeng.commonsdk.internal.c: void a(android.content.Context,com.umeng.commonsdk.listener.OnGetOaidListener)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPlaceholderText()
com.umeng.commonsdk.internal.utils.k: int a(java.lang.String,java.lang.String)
com.google.android.material.navigation.NavigationBarItemView: void setBadge(com.google.android.material.badge.BadgeDrawable)
org.simpleframework.xml.core.TextListLabel: boolean isCollection()
com.caij.puremusic.db.model.SongQueries$delete$1: java.lang.Object invoke(java.lang.Object)
com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()
org.jaudiotagger.audio.mp4.Mp4FileWriter: void writeTag(org.jaudiotagger.audio.AudioFile,org.jaudiotagger.tag.Tag,java.io.RandomAccessFile,java.io.RandomAccessFile)
com.umeng.analytics.pro.bf: java.lang.Object b()
com.caij.puremusic.drive.model.GoogleDriveFile$Companion: GoogleDriveFile$Companion()
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)
org.jaudiotagger.tag.id3.ID3v1Tag: ID3v1Tag(java.io.RandomAccessFile,java.lang.String)
com.tencent.mm.opensdk.modelpay.PayReq: boolean checkArgs()
com.tencent.mmkv.MMKV: boolean encodeInt(long,java.lang.String,int)
com.caij.puremusic.views.TintedBottomNavigationView$2: TintedBottomNavigationView$2()
com.thegrizzlylabs.sardineandroid.model.Authenticated: Authenticated()
com.heinrichreimersoftware.materialintro.view.InkPageIndicator: int getDesiredHeight()
org.jcodec.containers.mp4.boxes.TrackHeaderBox: void setNo(int)
org.simpleframework.xml.filter.MapFilter: MapFilter(java.util.Map)
com.caij.puremusic.db.model.ArtistQueries$insert$2: void invoke(kotlin.jvm.functions.Function1)
com.umeng.analytics.MobclickAgent: void setGameScenarioType(android.content.Context)
org.repackage.com.meizu.flyme.openidsdk.ValueData: ValueData(java.lang.String,int)
androidx.constraintlayout.helper.widget.Flow: void setPadding(int)
org.simpleframework.xml.core.ElementMapUnionLabel: boolean isCollection()
org.simpleframework.xml.core.Converter: boolean validate(org.simpleframework.xml.stream.InputNode)
org.simpleframework.xml.core.TextParameter: java.lang.String toString()
org.simpleframework.xml.core.TextParameter: int getIndex()
com.google.common.hash.LittleEndianByteArray$UnsafeByteArray: com.google.common.hash.LittleEndianByteArray$UnsafeByteArray valueOf(java.lang.String)
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String component3()
com.caij.puremusic.drive.model.MediaInfoWrapper: void setAlbums(java.util.List)
com.caij.puremusic.drive.model.DavProperties: long parseDate(java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: FrameBodyTXXX()
org.simpleframework.xml.stream.OutputAttribute: void remove()
com.google.common.base.Optional: Optional()
com.umeng.commonsdk.framework.UMLogDataProtocol: void workEvent(java.lang.Object,int)
org.jaudiotagger.tag.asf.AsfTagTextField: AsfTagTextField(org.jaudiotagger.audio.asf.data.MetadataDescriptor)
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox$Factory: TrackFragmentHeaderBox$Factory(org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox)
com.afollestad.materialdialogs.color.view.PreviewFrameView: java.lang.Integer getColor()
com.umeng.analytics.pro.l: void c(android.content.Context)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getIconTint()
com.caij.puremusic.drive.model.JellyfinSongListResponse: com.caij.puremusic.drive.model.JellyfinSongListResponse copy(java.util.List,int,int)
org.jaudiotagger.audio.generic.GenericAudioHeader: void setNoOfSamples(java.lang.Long)
org.simpleframework.xml.core.Factory: org.simpleframework.xml.strategy.Value getConversion(org.simpleframework.xml.stream.InputNode)
org.simpleframework.xml.core.ObjectScanner: org.simpleframework.xml.core.Function getCommit()
androidx.gridlayout.widget.GridLayout: void setOrientation(int)
androidx.media.AudioFocusRequestCompat$Api26Impl: android.media.AudioFocusRequest createInstance(int,android.media.AudioAttributes,boolean,android.media.AudioManager$OnAudioFocusChangeListener,android.os.Handler)
com.caij.puremusic.drive.model.PlexPlaylistsResponse$Companion: PlexPlaylistsResponse$Companion()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void write(java.nio.channels.WritableByteChannel,int)
org.simpleframework.xml.core.ElementListLabel: java.lang.String getPath()
org.jaudiotagger.tag.mp4.Mp4NonStandardFieldKey: org.jaudiotagger.tag.mp4.Mp4NonStandardFieldKey[] values()
org.jaudiotagger.tag.id3.framebody.FrameBodyTLAN: FrameBodyTLAN(java.nio.ByteBuffer,int)
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean access$900(com.google.android.material.bottomsheet.BottomSheetBehavior)
com.google.android.material.textfield.TextInputEditText: void setTextInputLayoutFocusedRectEnabled(boolean)
com.alipay.android.phone.mrpc.core.d: org.apache.http.conn.ConnectionKeepAliveStrategy createConnectionKeepAliveStrategy()
com.tencent.bugly.proguard.aj: android.util.Pair a(java.util.Map)
com.tencent.mm.opensdk.modelbiz.WXPayInsurance$Resp: void toBundle(android.os.Bundle)
com.umeng.commonsdk.stateless.b$1: void handleMessage(android.os.Message)
com.caij.puremusic.network.model.LastFmTrack$Track$Album: void setArtist(java.lang.String)
com.tencent.bugly.proguard.az: android.app.ActivityManager$ProcessErrorStateInfo a(java.util.List)
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
org.jcodec.containers.mp4.boxes.KeysBox: KeysBox(org.jcodec.containers.mp4.boxes.Header)
com.tencent.mm.opensdk.modelmsg.WXMiniProgramObject: boolean checkArgs()
com.tencent.bugly.proguard.ai: java.lang.Object a(com.tencent.bugly.proguard.ai)
com.google.android.material.internal.NavigationMenuView: int getWindowAnimations()
com.caij.puremusic.db.model.SongQueries$getSongBySource$2: com.caij.puremusic.db.model.Song invoke(long,java.lang.String,int,int,long,java.lang.String,java.lang.String,long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,long,long)
com.umeng.commonsdk.statistics.proto.Response: com.umeng.analytics.pro.bz access$300()
com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport$SyncLevel: com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport$SyncLevel valueOf(java.lang.String)
org.repackage.com.vivo.identifier.IdentifierManager: boolean a(android.content.Context)
org.simpleframework.xml.core.Label: org.simpleframework.xml.core.Label getLabel(java.lang.Class)
org.simpleframework.xml.core.ExtractorFactory$ElementExtractor: java.lang.Class getType(org.simpleframework.xml.Element)
org.jaudiotagger.audio.mp4.Chunk: void dropFrontSamples(int)
com.caij.puremusic.network.model.LastFmAlbum$Album$Wiki: void setPublished(java.lang.String)
com.caij.puremusic.drive.model.AlbumSubsonicResponse: int hashCode()
com.thegrizzlylabs.sardineandroid.model.Unauthenticated: Unauthenticated()
com.alipay.apmobilesecuritysdk.face.TMNTokenClient: com.alipay.apmobilesecuritysdk.face.TMNTokenClient getInstance(android.content.Context)
org.jcodec.containers.mp4.boxes.KeysBox: int estimateSize()
com.thegrizzlylabs.sardineandroid.impl.handler.ExistsResponseHandler: ExistsResponseHandler()
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundMode()
org.simpleframework.xml.core.ExtractorFactory$ElementExtractor: java.lang.Class getType(java.lang.annotation.Annotation)
org.jaudiotagger.tag.id3.framebody.FrameBodySYLT: int getContentType()
com.alipay.sdk.m.x.e: android.widget.TextView getTitle()
com.umeng.commonsdk.statistics.proto.Response$e: com.umeng.commonsdk.statistics.proto.Response$e a(java.lang.String)
org.repackage.com.meizu.flyme.openidsdk.a: void onReceive(android.content.Context,android.content.Intent)
com.google.android.material.bottomsheet.BottomSheetBehavior: void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[])
androidx.fragment.app.DialogFragment: DialogFragment()
org.jaudiotagger.audio.generic.Utils: int skip(java.nio.ByteBuffer,int)
com.caij.puremusic.drive.model.AlbumSubsonicResponse: java.lang.String getStatus()
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
org.jaudiotagger.tag.datatype.Lyrics3Line: void setTimeStamp(org.jaudiotagger.tag.datatype.Lyrics3TimeStamp)
com.umeng.commonsdk.statistics.common.b: java.lang.String a(byte[],java.lang.String)
org.jaudiotagger.audio.ogg.util.OggPageHeader: void calculateChecksumOverPage(java.nio.ByteBuffer)
com.caij.puremusic.drive.model.SubsonicPlaylist$Companion: SubsonicPlaylist$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.caij.puremusic.dialogs.SleepTimerDialog: SleepTimerDialog()
com.tencent.bugly.crashreport.CrashReport: void putUserData(android.content.Context,java.lang.String,java.lang.String)
com.tencent.mm.opensdk.modelbiz.WXLaunchWxaRedirectingPage$Req: void fromArray(java.lang.String[])
com.caij.puremusic.network.model.TokenData: TokenData(java.lang.String,java.lang.String,java.lang.Long)
kotlin.collections.AbstractMutableSet: AbstractMutableSet()
org.jaudiotagger.tag.id3.framebody.FrameBodyTSST: FrameBodyTSST(org.jaudiotagger.tag.id3.framebody.FrameBodyTSST)
com.caij.puremusic.db.model.SongQueries$getSongBySource$2: SongQueries$getSongBySource$2()
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
org.jcodec.containers.mp4.boxes.MetaBox: java.util.Map getKeyedMeta()
org.jcodec.containers.mp4.boxes.FullBox: FullBox(org.jcodec.containers.mp4.boxes.Header)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: com.thegrizzlylabs.sardineandroid.DavAcl getAcl(java.lang.String)
org.jcodec.containers.mp4.boxes.MovieHeaderBox: org.jcodec.containers.mp4.boxes.MovieHeaderBox createMovieHeaderBox(int,long,float,float,long,long,int[],int)
com.google.android.material.card.MaterialCardView: void setCheckedIconSize(int)
org.jaudiotagger.tag.id3.ID3Tags: java.lang.String forceFrameID23To24(java.lang.String)
org.simpleframework.xml.core.ElementListUnionLabel: java.lang.String getOverride()
com.caij.puremusic.network.model.LastFmTrack$Track$Toptags: LastFmTrack$Track$Toptags()
com.caij.puremusic.db.model.ServerLyricsQueries$GetByIdQuery: long getId()
org.jcodec.containers.mp4.boxes.SampleToChunkBox$SampleToChunkEntry: long getFirst()
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: void setCompression()
org.jaudiotagger.tag.id3.ID3v22Tag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
org.simpleframework.xml.core.GroupExtractor: void extract()
com.thegrizzlylabs.sardineandroid.R: R()
androidx.activity.ComponentDialog: ComponentDialog(android.content.Context)
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale forLocale(java.util.Locale)
androidx.core.view.ViewCompat$Api19Impl: boolean isLayoutDirectionResolved(android.view.View)
com.umeng.analytics.b: void g(android.content.Context)
org.jaudiotagger.audio.wav.WavTagWriter: void saveActive(org.jaudiotagger.tag.wav.WavTag,java.nio.channels.FileChannel,org.jaudiotagger.tag.wav.WavTag)
org.jaudiotagger.tag.datatype.NumberVariableLength: NumberVariableLength(org.jaudiotagger.tag.datatype.NumberVariableLength)
com.alipay.android.phone.mrpc.core.w: java.lang.Object a(java.lang.Class,com.alipay.android.phone.mrpc.core.aa)
com.caij.puremusic.db.model.SongQueries$SongsByNameAlbumQuery$execute$1: java.lang.Object invoke(java.lang.Object)
org.simpleframework.xml.core.Context: org.simpleframework.xml.core.Support getSupport()
org.simpleframework.xml.core.MapFactory: java.lang.Class getConversion(java.lang.Class)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: void deleteField(org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey)
kotlinx.serialization.json.JsonElementSerializer$descriptor$1$5: JsonElementSerializer$descriptor$1$5()
com.caij.puremusic.drive.model.EmbyFoldersResponse$Companion: EmbyFoldersResponse$Companion()
com.caij.puremusic.drive.model.Media$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.Media)
com.caij.puremusic.drive.model.Resourcetype: Resourcetype()
org.jaudiotagger.audio.asf.data.StreamChunk: void setContentEncrypted(boolean)
com.caij.puremusic.db.model.ServerSongCoverQueries$GetByIdQuery: void addListener(app.cash.sqldelight.Query$Listener)
org.simpleframework.xml.core.TemplateParameter: boolean isAttribute()
com.caij.puremusic.drive.model.BaiduDriveItem: BaiduDriveItem(int,long,java.lang.String,long,java.lang.String,long,long,int,int,java.lang.String,kotlinx.serialization.internal.SerializationConstructorMarker)
org.jaudiotagger.tag.id3.framebody.FrameBodyTIT2: FrameBodyTIT2(org.jaudiotagger.tag.id3.framebody.FrameBodyTIT2)
com.alipay.apmobilesecuritysdk.face.APSecuritySdk: java.lang.String getSdkName()
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyUrlLink: java.lang.String getUrlLink()
org.jaudiotagger.audio.ogg.util.OggPage: void write(java.nio.ByteBuffer)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.caij.puremusic.model.smartplaylist.PlaylistIdGenerator: PlaylistIdGenerator()
org.simpleframework.xml.core.StructureBuilder: void process(org.simpleframework.xml.core.Contact,java.lang.annotation.Annotation)
com.umeng.analytics.pro.an: com.umeng.analytics.pro.bp Q()
org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()
com.tencent.mm.opensdk.modelbiz.WXChannelJumpMiniProgramInfo: void serialize(android.os.Bundle)
com.google.android.material.search.SearchView: com.google.android.material.search.SearchView$TransitionState getCurrentTransitionState()
com.umeng.analytics.process.UMProcessDBDatasSender: com.umeng.analytics.process.UMProcessDBDatasSender getInstance(android.content.Context)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: org.jaudiotagger.utils.tree.TreeNode[] getPath()
org.jaudiotagger.tag.id3.ID3v24Tag: void readHeaderFlags(java.nio.ByteBuffer)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void copyPrimitives(org.jaudiotagger.tag.id3.AbstractID3v2Tag)
com.google.common.hash.Hashing$ChecksumType: com.google.common.hash.Hashing$ChecksumType[] $values()
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: void serialize(android.os.Bundle)
org.jaudiotagger.tag.datatype.NumberHashMap: NumberHashMap(org.jaudiotagger.tag.datatype.NumberHashMap)
com.google.android.material.timepicker.TimeModel: TimeModel()
org.jcodec.containers.mp4.boxes.TimecodeSampleEntry: int getFlags()
org.simpleframework.xml.core.ClassSchema: boolean isPrimitive()
org.simpleframework.xml.core.PathParser: boolean isSpecial(char)
org.jcodec.containers.mp4.boxes.TrackHeaderBox: float readVolume(java.nio.ByteBuffer)
com.google.android.material.textfield.TextInputLayout: int getPlaceholderTextAppearance()
org.jaudiotagger.logging.AbstractTagDisplayFormatter: void addElement(java.lang.String,java.lang.String)
com.google.android.material.card.MaterialCardView: void setRippleColorResource(int)
com.caij.puremusic.drive.model.PlaylistResponse: com.caij.puremusic.drive.model.PlayListSubsonicResponse component1()
org.jaudiotagger.audio.ogg.OggVorbisTagReader: byte[] readRawPacketData(java.io.RandomAccessFile)
org.jaudiotagger.tag.id3.framebody.FrameBodyMCDI: void setupObjectList()
org.jaudiotagger.audio.AudioFile: java.lang.String getExt()
org.jaudiotagger.tag.id3.framebody.FrameBodyTPOS: void setDiscNo(java.lang.Integer)
org.jaudiotagger.audio.AudioFile: AudioFile(java.lang.String,org.jaudiotagger.audio.AudioHeader,org.jaudiotagger.tag.Tag)
org.jaudiotagger.audio.generic.TagWriter: void write(org.jaudiotagger.audio.AudioFile,org.jaudiotagger.tag.Tag,java.io.RandomAccessFile,java.io.RandomAccessFile)
org.simpleframework.xml.core.Model: int getIndex()
org.jaudiotagger.tag.id3.framebody.FrameBodyTEXT: FrameBodyTEXT(byte,java.lang.String)
com.caij.puremusic.drive.model.GoogleDriveFileResponse$Companion: GoogleDriveFileResponse$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.caij.puremusic.model.Data: boolean equals(java.lang.Object)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
com.caij.puremusic.drive.model.BaiduFileResponse$Companion: BaiduFileResponse$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.jaudiotagger.audio.AudioHeader: java.lang.String getChannels()
org.jaudiotagger.tag.id3.framebody.FrameBodyAENC: FrameBodyAENC(java.nio.ByteBuffer,int)
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier[] values()
com.caij.puremusic.db.model.Artist: Artist(long,java.lang.String)
org.simpleframework.xml.core.PrimitiveScanner$EmptySection: org.simpleframework.xml.core.LabelMap getElements()
org.jcodec.containers.mp4.boxes.NodeBox: void add(org.jcodec.containers.mp4.boxes.Box)
org.jcodec.containers.mp4.boxes.TrunBox$Factory: org.jcodec.containers.mp4.boxes.TrunBox$Factory dataOffset(long)
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgramWithToken$Req: int getType()
com.google.android.material.bottomappbar.BottomAppBar: int getLeftInset()
com.caij.puremusic.drive.model.PlexPlaylistsResponse: PlexPlaylistsResponse(int,com.caij.puremusic.drive.model.PlaylistsMediaContainer,kotlinx.serialization.internal.SerializationConstructorMarker)
org.simpleframework.xml.core.ElementLabel: org.simpleframework.xml.core.Converter getConverter(org.simpleframework.xml.core.Context)
org.simpleframework.xml.core.Context: java.lang.String getName(java.lang.Class)
org.jaudiotagger.audio.exceptions.NullBoxIdException: NullBoxIdException(java.lang.String)
com.google.gson.FieldNamingPolicy$5: FieldNamingPolicy$5(java.lang.String,int)
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getSerialNo()
com.tencent.bugly.proguard.bs: void a(java.lang.StringBuilder,int)
org.simpleframework.xml.strategy.ReadGraph: org.simpleframework.xml.strategy.Value readReference(org.simpleframework.xml.strategy.Type,java.lang.Class,org.simpleframework.xml.stream.NodeMap)
com.umeng.commonsdk.internal.utils.a: int c(android.content.Context)
org.jcodec.containers.mp4.boxes.ReverseDnsBox$LocalBoxes: ReverseDnsBox$LocalBoxes()
org.jaudiotagger.tag.id3.valuepair.ID3V2ExtendedGenreTypes: ID3V2ExtendedGenreTypes(java.lang.String,int,java.lang.String)
com.google.android.material.slider.BaseSlider: void setValues(java.util.List)
org.jaudiotagger.tag.id3.AggregatedFrame: java.util.Set getFrames()
com.caij.puremusic.db.model.SongEntityQueries$getPlaylistLastAddSong$1: java.lang.Object invoke(java.lang.Object)
com.tencent.bugly.BuglyStrategy: int getCallBackType()
com.caij.puremusic.drive.model.Metadata: java.lang.String component11()
org.jaudiotagger.audio.aiff.AiffAudioHeader: java.util.Date getTimestamp()
org.simpleframework.xml.stream.PullProvider: org.simpleframework.xml.stream.EventReader provide(java.io.Reader)
org.jcodec.containers.mp4.boxes.CompositionOffsetsBox$Entry: int getOffset()
com.caij.puremusic.drive.model.AlbumSubsonicResponse: com.caij.puremusic.drive.model.AlbumSubsonicResponse copy$default(com.caij.puremusic.drive.model.AlbumSubsonicResponse,java.lang.String,java.lang.String,com.caij.puremusic.drive.model.SubsonicAlbum,int,java.lang.Object)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[])
org.jaudiotagger.tag.wav.WavTag: void addField(org.jaudiotagger.tag.TagField)
com.tencent.mm.opensdk.modelmsg.WXVideoObject: WXVideoObject()
com.caij.puremusic.db.model.ArtistQueries$artistById$2: ArtistQueries$artistById$2()
org.simpleframework.xml.core.ElementMapUnionLabel: java.lang.String toString()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyIMG: java.lang.String getIdentifier()
io.ktor.websocket.FrameType: io.ktor.websocket.FrameType valueOf(java.lang.String)
org.jaudiotagger.audio.asf.util.Utils: void writeUINT64(long,java.io.OutputStream)
org.jaudiotagger.tag.datatype.StringDateTime: boolean equals(java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyIMG: void setValue(java.lang.String)
com.umeng.commonsdk.UMConfigure: void setEncryptEnabled(boolean)
com.tencent.bugly.proguard.ap: boolean a(java.lang.Runnable)
com.umeng.commonsdk.statistics.proto.d: void clear()
com.umeng.analytics.pro.l: void a(android.content.Context,java.lang.String)
com.google.android.material.appbar.MaterialToolbar: android.widget.ImageView$ScaleType getLogoScaleType()
org.simpleframework.xml.core.Support: Support(org.simpleframework.xml.filter.Filter,org.simpleframework.xml.transform.Matcher)
org.jaudiotagger.audio.generic.Utils: void write(java.nio.ByteBuffer,java.nio.ByteBuffer)
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgram$Resp: boolean checkArgs()
com.caij.puremusic.views.LollipopFixedWebView: LollipopFixedWebView(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.drive.model.JellyfinArtistResponse$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
org.jaudiotagger.tag.datatype.StringFixedLength: StringFixedLength(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody,int)
com.umeng.commonsdk.statistics.internal.c$3: void onImprintValueChanged(java.lang.String,java.lang.String)
org.jaudiotagger.tag.wav.WavTag: java.util.List getChunkSummaryList()
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean joinChatroom(android.content.Context,android.os.Bundle)
androidx.constraintlayout.motion.widget.MotionLayout$TransitionState: androidx.constraintlayout.motion.widget.MotionLayout$TransitionState[] values()
org.jaudiotagger.tag.id3.ID3v24Frame: ID3v24Frame(org.jaudiotagger.tag.id3.ID3v23Frame,java.lang.String)
com.caij.puremusic.drive.model.PlexSectionsResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.alipay.android.app.IAlixPay: java.lang.String pay02(java.lang.String,java.util.Map)
com.umeng.commonsdk.framework.a: void c()
org.jaudiotagger.tag.TagOptionSingleton: boolean isWriteMp3GenresAsText()
org.jaudiotagger.tag.id3.ID3v22Frame: void read(java.nio.ByteBuffer)
com.caij.puremusic.drive.model.OneDriveFolder: OneDriveFolder(int,int,kotlinx.serialization.internal.SerializationConstructorMarker)
org.jaudiotagger.audio.asf.io.CountingOutputstream: long getCount()
com.alipay.sdk.app.PayTask: java.lang.String getVersion()
com.caij.puremusic.drive.model.SubsonicSearchListResponse$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.google.android.material.button.MaterialButton: void setIconGravity(int)
com.google.android.material.internal.NavigationMenuItemView: void setIconPadding(int)
com.caij.puremusic.db.model.SongQueries$SongsByNameAlbumQuery$execute$1: SongQueries$SongsByNameAlbumQuery$execute$1(com.caij.puremusic.db.model.SongQueries$SongsByNameAlbumQuery)
com.alipay.android.phone.mrpc.core.ad: boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext)
android.support.v4.media.RatingCompat$Api19Impl: android.media.Rating newStarRating(int,float)
com.caij.puremusic.db.model.SearchAlbumResultQueries: void insert(com.caij.puremusic.db.model.SearchAlbumResult)
com.thegrizzlylabs.sardineandroid.impl.SardineException: int getStatusCode()
com.caij.puremusic.db.model.SongQueries$getAlbumSongCount$1: SongQueries$getAlbumSongCount$1()
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
org.simpleframework.xml.core.Source: org.simpleframework.xml.core.Session getSession()
org.simpleframework.xml.core.SessionManager: org.simpleframework.xml.core.Session create(boolean)
org.jaudiotagger.audio.iff.ChunkHeader: boolean readHeader(java.nio.channels.FileChannel)
org.simpleframework.xml.core.Composite: void validateAttributes(org.simpleframework.xml.stream.InputNode,org.simpleframework.xml.core.Section)
com.caij.puremusic.network.model.LastFmArtist$Artist$Image: void setSize(java.lang.String)
androidx.appcompat.app.AppCompatDialog: boolean dispatchKeyEvent(android.view.KeyEvent)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSRC: java.lang.String getIdentifier()
org.simpleframework.xml.core.Criteria: org.simpleframework.xml.core.Variable get(java.lang.Object)
org.jaudiotagger.audio.ogg.OggVorbisTagWriter: java.nio.ByteBuffer startCreateBasicSecondPage(org.jaudiotagger.audio.ogg.OggVorbisTagReader$OggVorbisHeaderSizes,int,int,org.jaudiotagger.audio.ogg.util.OggPageHeader,java.nio.ByteBuffer)
androidx.appcompat.app.AppCompatDialog: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
org.simpleframework.xml.transform.AtomicIntegerTransform: java.lang.String write(java.util.concurrent.atomic.AtomicInteger)
com.umeng.commonsdk.statistics.proto.Response: void validate()
com.tencent.mm.opensdk.modelbiz.WXQRCodePay$Req: int getType()
com.google.android.material.search.SearchBar: void setCenterView(android.view.View)
com.caij.puremusic.MainModuleKt$dataModule$1$4: MainModuleKt$dataModule$1$4()
org.simpleframework.xml.core.Composite: void writeSection(org.simpleframework.xml.stream.OutputNode,java.lang.Object,org.simpleframework.xml.core.Section)
com.caij.puremusic.drive.model.PlayListsResponse$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
nl.adaptivity.xmlutil.core.KtXmlWriter$WriteState: nl.adaptivity.xmlutil.core.KtXmlWriter$WriteState[] $values()
com.tencent.bugly.proguard.ae: com.tencent.bugly.proguard.bu a(com.tencent.bugly.crashreport.biz.UserInfoBean)
org.simpleframework.xml.core.DetailScanner: DetailScanner(java.lang.Class,org.simpleframework.xml.DefaultType)
org.jcodec.containers.mp4.boxes.GenericMediaInfoBox: void doWrite(java.nio.ByteBuffer)
org.simpleframework.xml.core.Section: org.simpleframework.xml.core.Section getSection(java.lang.String)
org.simpleframework.xml.core.ConversionInstance: ConversionInstance(org.simpleframework.xml.core.Context,org.simpleframework.xml.strategy.Value,java.lang.Class)
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setSliderFadeColor(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyAPIC: void setupObjectList()
org.jaudiotagger.audio.asf.data.MetadataContainer: long writeInto(java.io.OutputStream)
com.caij.puremusic.db.model.ServerAudioFormatQueries$insert$1: ServerAudioFormatQueries$insert$1(com.caij.puremusic.db.model.ServerAudioFormat)
com.caij.puremusic.db.model.SongQueries$SongsByNameAlbumQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
com.umeng.analytics.pro.bu: void a(java.lang.String)
org.simpleframework.xml.core.Structure: org.simpleframework.xml.Version getRevision()
com.umeng.commonsdk.UMConfigure: void setFile(java.lang.Class,java.lang.String,boolean)
com.umeng.commonsdk.statistics.common.d: int a()
androidx.appcompat.widget.SearchView: int getInputType()
org.simpleframework.xml.core.PrimitiveScanner: boolean isPrimitive()
com.umeng.commonsdk.UMInnerImpl: void initAndSendInternal(android.content.Context)
com.caij.puremusic.drive.model.User: java.lang.String component1()
org.jcodec.containers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox$Factory: org.jcodec.containers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox$Factory baseMediaDecodeTime(long)
com.google.android.material.bottomsheet.BottomSheetBehavior: void reset()
com.caij.puremusic.drive.model.AlbumMediaContainer: int hashCode()
com.alipay.sdk.app.AuthTask: java.util.Map authV2(java.lang.String,boolean)
org.jaudiotagger.audio.ogg.util.OggPageHeader: int getPageSequence()
org.jaudiotagger.audio.mp3.MPEGFrameHeader: boolean isMPEGFrame(java.nio.ByteBuffer)
org.jaudiotagger.tag.id3.framebody.FrameBodyUSLT: void setLanguage(java.lang.String)
com.tencent.mm.opensdk.modelmsg.WXDesignerSharedObject: WXDesignerSharedObject(java.lang.String,int,java.lang.String,java.lang.String)
com.tencent.bugly.proguard.ab: java.lang.String d(android.content.Context)
org.jaudiotagger.tag.aiff.AiffTag: long getEndLocationInFileOfId3Chunk()
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
com.umeng.analytics.pro.bn: void a(int)
com.umeng.commonsdk.stateless.b: void n()
com.caij.puremusic.drive.model.OneDriveFile: int hashCode()
org.simpleframework.xml.core.Signature: org.simpleframework.xml.core.Parameter get(java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyXSOA: FrameBodyXSOA(byte,java.lang.String)
androidx.fragment.app.Fragment: android.view.View getFocusedView()
org.jcodec.containers.mp4.boxes.MovieHeaderBox: int getTimescale()
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
org.jaudiotagger.audio.wav.chunk.WavListChunk: java.lang.String toString()
com.caij.puremusic.drive.model.ADriveFileResponse$$serializer: com.caij.puremusic.drive.model.ADriveFileResponse deserialize(kotlinx.serialization.encoding.Decoder)
androidx.fragment.app.Fragment: void onPictureInPictureModeChanged(boolean)
com.umeng.analytics.pro.bn: boolean t()
org.simpleframework.xml.core.Collector: org.simpleframework.xml.core.Variable remove(java.lang.Object)
nl.adaptivity.xmlutil.serialization.ElementSerializer$descriptor$1: ElementSerializer$descriptor$1()
com.caij.puremusic.db.model.SongQueries$song$2: SongQueries$song$2()
org.simpleframework.xml.core.TextParameter$Contact: java.lang.String getName()
org.jcodec.containers.mp4.boxes.ReverseDnsBox$RdnsMeanBox: void setIssuer(java.lang.String)
com.google.common.collect.ReverseNaturalOrdering: ReverseNaturalOrdering()
org.jaudiotagger.tag.id3.framebody.FrameBodyCHAP: FrameBodyCHAP(org.jaudiotagger.tag.id3.framebody.FrameBodyCHAP)
org.simpleframework.xml.core.SignatureBuilder$ParameterTable: void insert(org.simpleframework.xml.core.Parameter,int)
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean handleIntent(android.content.Intent,com.tencent.mm.opensdk.openapi.IWXAPIEventHandler)
kotlinx.serialization.internal.ClassValueParametrizedCache$get-gIAlu-s$$inlined$getOrSet$1: ClassValueParametrizedCache$get-gIAlu-s$$inlined$getOrSet$1()
com.caij.puremusic.drive.model.Part: int getDuration()
org.jcodec.containers.mp4.boxes.TrackHeaderBox: void readMatrix(java.nio.ByteBuffer)
org.simpleframework.xml.core.Composite: void access$300(org.simpleframework.xml.core.Composite,org.simpleframework.xml.stream.InputNode,java.lang.Object,org.simpleframework.xml.core.Section)
org.simpleframework.xml.core.ModelSection: boolean isSection(java.lang.String)
org.simpleframework.xml.core.ElementMapParameter: int getIndex()
com.caij.puremusic.db.model.ServerLyricsQueries: void deleteById(long)
com.caij.puremusic.model.smartplaylist.TopTracksPlaylist: TopTracksPlaylist()
org.jaudiotagger.audio.AudioHeader: boolean isLossless()
com.caij.puremusic.db.model.ServerAudioFormatQueries$deleteById$2: ServerAudioFormatQueries$deleteById$2()
org.simpleframework.xml.core.DefaultDetail: boolean isStrict()
com.google.android.material.bottomsheet.BottomSheetBehavior$3: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,com.google.android.material.internal.ViewUtils$RelativePadding)
com.yalantis.ucrop.view.TransformImageView: void setImageBitmap(android.graphics.Bitmap)
org.simpleframework.xml.core.ClassScanner: org.simpleframework.xml.core.Function getPersist()
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat[] values()
com.caij.puremusic.drive.model.OneDriveItem: java.lang.String getCreatedDateTime()
androidx.core.widget.TextViewCompat$Api17Impl: void setTextDirection(android.view.View,int)
androidx.core.view.MenuItemCompat$Api26Impl: int getNumericModifiers(android.view.MenuItem)
com.caij.puremusic.drive.model.OneDriveItem: java.lang.String component1()
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: java.lang.String getLanguage()
org.jaudiotagger.tag.id3.framebody.FrameBodyTIT1: FrameBodyTIT1(org.jaudiotagger.tag.id3.framebody.FrameBodyTIT1)
com.umeng.analytics.vshelper.PageNameMonitor: void activityResume(java.lang.String)
org.jaudiotagger.audio.flac.FlacTagWriter: void insertTagAndShift(java.lang.String,org.jaudiotagger.tag.Tag,java.nio.channels.FileChannel,org.jaudiotagger.audio.flac.FlacTagWriter$MetadataBlockInfo,org.jaudiotagger.audio.flac.FlacStreamReader,int,int)
com.umeng.commonsdk.framework.UMFrUtils: boolean removeEnvelopeFile(java.io.File)
org.jaudiotagger.audio.mp3.MP3AudioHeader: java.lang.String toString()
com.tencent.mm.opensdk.modelpay.JumpToOfflinePay$Resp: void toBundle(android.os.Bundle)
org.jcodec.containers.mp4.boxes.ChannelBox: java.lang.String fourcc()
org.jaudiotagger.test.MergeID3AndMP3Files: MergeID3AndMP3Files()
com.umeng.commonsdk.framework.a: void d()
com.umeng.commonsdk.framework.a$a: void onEvent(int,java.lang.String)
org.simpleframework.xml.core.Reflector: java.lang.Class getClass(java.lang.reflect.Type)
org.simpleframework.xml.core.PathParser: java.lang.String getLast()
com.caij.puremusic.db.model.ServerSongCoverQueries$deleteById$1: ServerSongCoverQueries$deleteById$1(java.lang.String)
org.jaudiotagger.tag.datatype.NumberHashMap: java.util.Iterator iterator()
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostStarted(android.app.Activity)
com.umeng.commonsdk.statistics.proto.Response: Response(int)
com.caij.puremusic.drive.model.GoogleDriveFileResponse: GoogleDriveFileResponse(java.lang.String,java.lang.String,boolean,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
org.jaudiotagger.audio.asf.data.AudioStreamChunk: void setChannelCount(long)
org.jaudiotagger.tag.id3.framebody.FrameBodyCTOC: FrameBodyCTOC(java.nio.ByteBuffer,int)
com.caij.puremusic.db.model.PlaylistEntityQueries: app.cash.sqldelight.Query checkPlaylistExists(long)
com.thegrizzlylabs.sardineandroid.DavAce: boolean isProtected()
org.simpleframework.xml.core.TreeModel: org.simpleframework.xml.core.Model lookup(org.simpleframework.xml.core.Expression)
com.caij.puremusic.drive.model.JellyfinLoginResponse: com.caij.puremusic.drive.model.JellyfinLoginResponse copy(java.lang.String,com.caij.puremusic.drive.model.User)
org.jaudiotagger.tag.wav.WavTag: int getFieldCountIncludingSubValues()
org.simpleframework.xml.core.CompositeUnion: boolean validate(org.simpleframework.xml.stream.InputNode)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: java.util.List getPrincipals(java.lang.String)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
org.jcodec.containers.mp4.boxes.SegmentIndexBox: int estimateSize()
com.alipay.apmobilesecuritysdk.e.i: void a()
com.caij.puremusic.MainModuleKt$autoModule$1$1: MainModuleKt$autoModule$1$1()
org.jaudiotagger.audio.mp4.InplaceMP4Editor: void replaceBox(java.nio.channels.FileChannel,org.jcodec.containers.mp4.MP4Util$Atom,java.nio.ByteBuffer)
com.caij.puremusic.db.model.SongQueries$getArtistSongCount$1: SongQueries$getArtistSongCount$1()
com.tencent.bugly.crashreport.biz.UserInfoBean: int describeContents()
com.umeng.analytics.pro.ad: ad()
org.jcodec.containers.mp4.boxes.NameBox: org.jcodec.containers.mp4.boxes.NameBox createNameBox(java.lang.String)
androidx.core.view.ViewCompat$Api24Impl: void dispatchStartTemporaryDetach(android.view.View)
org.jaudiotagger.audio.AudioHeader: java.lang.Integer getByteRate()
com.caij.puremusic.preferences.BlacklistPreference: BlacklistPreference(android.content.Context)
com.tencent.mm.opensdk.modelmsg.WXDesignerSharedObject: void unserialize(android.os.Bundle)
com.alipay.android.phone.mrpc.core.o: boolean e()
com.umeng.analytics.process.UMProcessDBDatasSender$ConstructMessageCallback: boolean onFileLock(java.io.File,int)
com.caij.puremusic.drive.model.JellyfinFolder: boolean equals(java.lang.Object)
org.jcodec.containers.mp4.boxes.EndianBox: EndianBox(org.jcodec.containers.mp4.boxes.Header)
com.caij.puremusic.drive.model.PlayListsSubsonicResponse: java.lang.String getStatus()
org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistReadOptions: org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistReadOptions valueOf(java.lang.String)
com.tencent.mm.opensdk.openapi.MMSharedPreferences$REditor: boolean commit()
org.jaudiotagger.tag.datatype.AbstractValuePair: int getSize()
org.jaudiotagger.tag.id3.ID3v24Tag: java.lang.String getValue(org.jaudiotagger.tag.FieldKey,int)
org.simpleframework.xml.Serializer: java.lang.Object read(java.lang.Class,java.io.Reader)
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: void decodeHeader(byte[])
com.tencent.mm.opensdk.modelpay.WXJointPay$JointPayResp: WXJointPay$JointPayResp(android.os.Bundle)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSSE: java.lang.String getIdentifier()
org.jaudiotagger.tag.datatype.Lyrics3Image: void readString(java.lang.String,int)
com.caij.puremusic.extensions.ViewExtensionsKt$drawAboveSystemBarsWithPadding$1: ViewExtensionsKt$drawAboveSystemBarsWithPadding$1()
org.simpleframework.xml.core.TreeModel: void validate(java.lang.Class)
org.jaudiotagger.tag.images.AndroidArtwork: java.lang.String getMimeType()
com.umeng.commonsdk.config.f: void a(java.lang.String,java.lang.Boolean)
com.caij.puremusic.drive.model.Part: java.lang.String component6()
com.umeng.commonsdk.statistics.proto.c: com.umeng.commonsdk.statistics.proto.c a(java.lang.String)
androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)
org.jaudiotagger.tag.id3.framebody.FrameBodySYTC: FrameBodySYTC(org.jaudiotagger.tag.id3.framebody.FrameBodySYTC)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataApplication: MetadataBlockDataApplication(org.jaudiotagger.audio.flac.metadatablock.MetadataBlockHeader,java.nio.channels.FileChannel)
com.alipay.apmobilesecuritysdk.e.a: void a()
com.google.common.reflect.Types$JavaVersion$2: java.lang.reflect.Type usedInGenericType(java.lang.reflect.Type)
com.caij.puremusic.db.model.Song: java.lang.String component14()
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
com.caij.puremusic.drive.model.Directory$Companion: Directory$Companion()
com.tencent.bugly.proguard.m: m()
org.jaudiotagger.tag.id3.framebody.FrameBodyTPRO: FrameBodyTPRO()
com.caij.puremusic.drive.model.BaiduDriveItem$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
org.jaudiotagger.tag.flac.FlacTag: java.util.List getImages()
org.jaudiotagger.audio.asf.io.ContentDescriptionReader: int[] getStringSizes(java.io.InputStream)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
com.caij.puremusic.drive.model.SubsonicSearchListResponse: SubsonicSearchListResponse(int,com.caij.puremusic.drive.model.SubsonicSearchResponse,kotlinx.serialization.internal.SerializationConstructorMarker)
org.jaudiotagger.tag.id3.ID3v22PreferredFrameOrderComparator: boolean equals(java.lang.Object)
com.thegrizzlylabs.sardineandroid.model.Prop: Prop()
org.simpleframework.xml.stream.Splitter: boolean number()
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: FrameBodyTDRC()
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
org.simpleframework.xml.stream.EventElement: EventElement()
com.umeng.analytics.Gender: Gender(java.lang.String,int,int)
org.jaudiotagger.tag.mp4.Mp4TagField: byte[] getRawContent()
com.thegrizzlylabs.sardineandroid.DavQuota: long getQuotaUsedBytes()
org.jaudiotagger.tag.id3.framebody.AbstractID3v2FrameBody: void setSize()
com.google.android.material.button.MaterialButtonToggleGroup: MaterialButtonToggleGroup(android.content.Context,android.util.AttributeSet)
com.umeng.analytics.pro.l: int b(com.umeng.analytics.pro.l)
org.jaudiotagger.tag.id3.framebody.FrameBodyETCO: boolean removeTimingCode(long,int[])
com.umeng.commonsdk.statistics.common.MLog: void v(java.lang.String,java.lang.Throwable)
com.caij.puremusic.drive.model.DropboxDriveFileResponse: com.caij.puremusic.drive.model.DropboxDriveFileResponse copy$default(com.caij.puremusic.drive.model.DropboxDriveFileResponse,java.lang.String,boolean,java.util.List,int,java.lang.Object)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: org.jaudiotagger.utils.tree.DefaultMutableTreeNode getNextSibling()
com.caij.puremusic.drive.model.AMediaContainer$Companion: AMediaContainer$Companion()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
org.jaudiotagger.tag.id3.framebody.FrameBodyWCOP: FrameBodyWCOP(java.lang.String)
com.caij.puremusic.db.model.Album: int hashCode()
com.tencent.bugly.proguard.aa: java.util.Map x()
org.simpleframework.xml.stream.DocumentReader$Entry: boolean isReserved()
org.simpleframework.xml.core.ExtractorFactory$ElementMapExtractor: org.simpleframework.xml.core.Label getLabel(org.simpleframework.xml.ElementMap)
com.caij.puremusic.drive.model.EmbyAlbumsResponse: boolean equals(java.lang.Object)
com.alipay.apmobilesecuritysdk.face.TMNTokenClient: void intiToken(java.lang.String,java.lang.String,java.lang.String,com.alipay.apmobilesecuritysdk.face.TMNTokenClient$InitResultListener)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: AppCompatTextViewAutoSizeHelper$Impl()
com.alipay.apmobilesecuritysdk.e.f: java.lang.String b()
com.umeng.commonsdk.statistics.proto.e: void k()
com.thegrizzlylabs.sardineandroid.model.Group: java.util.List getContent()
org.jaudiotagger.tag.mp4.Mp4RatingValue: int getId()
com.umeng.analytics.pro.bo: java.lang.String z()
com.google.android.material.appbar.AppBarFixBehavior: AppBarFixBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.navigation.NavigationBarMenuView: com.google.android.material.navigation.NavigationBarItemView getNewItem()
androidx.window.layout.SafeWindowLayoutComponentProvider$windowLayoutComponent$2: SafeWindowLayoutComponentProvider$windowLayoutComponent$2()
com.caij.puremusic.db.model.SongQueries$SongByPathQuery: SongQueries$SongByPathQuery(com.caij.puremusic.db.model.SongQueries,java.lang.String,kotlin.jvm.functions.Function1)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable getBoxBackground()
com.umeng.commonsdk.internal.utils.e$a: e$a(java.lang.String,int,java.lang.String[])
com.umeng.analytics.pro.b: java.lang.String a(java.lang.String)
com.caij.puremusic.drive.model.Metadata: java.lang.String getKey()
org.simpleframework.xml.core.SignatureBuilder: java.util.List build()
com.umeng.commonsdk.internal.c: void h()
com.tencent.mm.opensdk.modelbiz.WXChannelStartLive$Req: void toBundle(android.os.Bundle)
androidx.activity.ComponentDialog: void getOnBackPressedDispatcher$annotations()
com.umeng.commonsdk.statistics.proto.e: boolean d()
com.caij.puremusic.network.model.LastFmTrack$Track$Album$Attr: LastFmTrack$Track$Album$Attr()
org.jcodec.containers.mp4.boxes.ChunkOffsets64Box: java.lang.String fourcc()
com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyTMCL: java.lang.String getIdentifier()
com.tencent.mm.opensdk.modelmsg.WXLiteAppObject: void serialize(android.os.Bundle)
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean access$800(com.google.android.material.bottomsheet.BottomSheetBehavior)
com.caij.puremusic.network.model.LastFmAlbum$Album: void setWiki(com.caij.puremusic.network.model.LastFmAlbum$Album$Wiki)
com.caij.puremusic.drive.model.ADriveItem: ADriveItem(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,kotlinx.serialization.internal.SerializationConstructorMarker)
org.simpleframework.xml.stream.EventToken: EventToken()
org.simpleframework.xml.ElementList: java.lang.String entry()
com.caij.puremusic.drive.model.Multistatus$$serializer: com.caij.puremusic.drive.model.Multistatus deserialize(kotlinx.serialization.encoding.Decoder)
com.umeng.umzid.Spy: Spy()
com.caij.puremusic.drive.model.AlbumMetadata: AlbumMetadata(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,kotlinx.serialization.internal.SerializationConstructorMarker)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
com.thegrizzlylabs.sardineandroid.model.PrincipalCollectionSet: PrincipalCollectionSet()
com.caij.puremusic.db.model.PlaybackSong: long getId()
com.tencent.bugly.proguard.bi: byte[] a(byte[])
org.jaudiotagger.tag.wav.WavTag: void setInfoTag(org.jaudiotagger.tag.wav.WavInfoTag)
org.jaudiotagger.tag.datatype.TextEncodedStringNullTerminated: TextEncodedStringNullTerminated(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody)
com.umeng.commonsdk.statistics.idtracking.ImprintHandler$a: ImprintHandler$a()
androidx.fragment.app.Fragment: boolean getPopDirection()
org.jaudiotagger.tag.datatype.Lyrics3Line: java.util.Iterator getTimeStamp()
com.umeng.analytics.pro.bn: void m()
org.simpleframework.xml.transform.StringArrayTransform: java.lang.String[] read(java.lang.String)
org.simpleframework.xml.stream.PullReader: org.simpleframework.xml.stream.PullReader$End end()
com.caij.puremusic.db.model.SongQueries$GetSongCountBySourceIdQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.umeng.umzid.a$a: a$a()
org.repackage.com.meizu.flyme.openidsdk.b: void a(java.lang.String)
com.caij.puremusic.db.model.HistoryEntityQueries$HistorySongsQuery: HistoryEntityQueries$HistorySongsQuery(com.caij.puremusic.db.model.HistoryEntityQueries,long,long,kotlin.jvm.functions.Function1)
com.caij.puremusic.drive.model.AlbumItem$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.caij.puremusic.db.model.PlaylistEntityQueries: PlaylistEntityQueries(app.cash.sqldelight.db.SqlDriver)
com.umeng.commonsdk.debug.UMRTLog: void si(java.lang.String,java.lang.String)
org.simpleframework.xml.core.VersionLabel: java.lang.String getOverride()
org.jaudiotagger.tag.datatype.AbstractDataType: void setBody(org.jaudiotagger.tag.id3.AbstractTagFrameBody)
com.caij.puremusic.drive.model.SubsonicSong$Companion: SubsonicSong$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.jaudiotagger.tag.mp4.field.Mp4DiscNoField: Mp4DiscNoField(java.lang.String)
com.tencent.bugly.BuglyStrategy: com.tencent.bugly.BuglyStrategy setDeviceModel(java.lang.String)
com.umeng.commonsdk.utils.a: android.os.Handler e(com.umeng.commonsdk.utils.a)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
org.simpleframework.xml.core.MethodScanner: void remove(org.simpleframework.xml.core.MethodPart,org.simpleframework.xml.core.MethodScanner$PartMap)
com.alipay.android.phone.mrpc.core.x: x(com.alipay.android.phone.mrpc.core.g)
org.jcodec.containers.mp4.boxes.MetaBox: java.util.Map getItunesMeta()
com.thegrizzlylabs.sardineandroid.model.Owner: java.lang.String getHref()
com.caij.puremusic.drive.model.PlexPlaylistsResponse$Companion: PlexPlaylistsResponse$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.jcodec.containers.mp4.boxes.EsdsBox: int getBufSize()
com.caij.puremusic.db.model.SongEntityQueries$CheckSongPlaylistExistsQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.umeng.commonsdk.UMConfigureImpl: UMConfigureImpl()
org.repackage.com.vivo.identifier.IdentifierIdClient: org.repackage.com.vivo.identifier.IdentifierIdClient a(android.content.Context)
com.umeng.commonsdk.statistics.proto.Gender: com.umeng.commonsdk.statistics.proto.Gender valueOf(java.lang.String)
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier[] values()
com.caij.puremusic.drive.model.FMediaContainer: void write$Self(com.caij.puremusic.drive.model.FMediaContainer,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.umeng.commonsdk.statistics.proto.c: java.util.List h()
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItemSelectedRippleColor(android.content.res.ColorStateList)
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMR: void setupObjectList()
org.simpleframework.xml.core.ElementMapUnionLabel: boolean isUnion()
nl.adaptivity.xmlutil.serialization.XML$1: XML$1()
org.jcodec.containers.mp4.boxes.VideoMediaHeaderBox: int estimateSize()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyIMG: boolean isSubsetOf(java.lang.Object)
org.repackage.com.meizu.flyme.openidsdk.ValueData: java.lang.String toString()
com.caij.puremusic.MainModuleKt$dataModule$1$6: MainModuleKt$dataModule$1$6()
org.jaudiotagger.tag.datatype.ID3v2LyricLine: long getTimeStamp()
com.heinrichreimersoftware.materialintro.view.InkPageIndicator: int getDesiredWidth()
org.jcodec.containers.mp4.boxes.FormatBox: org.jcodec.containers.mp4.boxes.FormatBox createFormatBox(java.lang.String)
com.caij.puremusic.helper.BackupContent: com.caij.puremusic.helper.BackupContent[] $values()
org.simpleframework.xml.stream.StreamReader$Text: boolean isText()
org.jaudiotagger.utils.DirectByteBufferUtils$ReleaseStrategy: void release(java.nio.Buffer)
org.jcodec.containers.mp4.boxes.DataRefBox: java.lang.String fourcc()
org.jaudiotagger.audio.aiff.chunk.CopyrightChunk: CopyrightChunk(org.jaudiotagger.audio.iff.ChunkHeader,java.nio.ByteBuffer,org.jaudiotagger.audio.aiff.AiffAudioHeader)
org.jaudiotagger.audio.mp4.ChunkReader: ChunkReader(org.jcodec.containers.mp4.boxes.TrakBox,java.nio.channels.SeekableByteChannel)
com.caij.puremusic.model.AlbumWithCount: boolean equals(java.lang.Object)
com.google.common.reflect.Types$JavaVersion$1: java.lang.reflect.Type usedInGenericType(java.lang.reflect.Type)
org.simpleframework.xml.core.TemplateEngine: java.lang.String process(java.lang.String)
com.google.android.material.button.MaterialButton: int getIconGravity()
org.jaudiotagger.tag.aiff.AiffTag: boolean hasField(org.jaudiotagger.tag.FieldKey)
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean access$600(com.google.android.material.bottomsheet.BottomSheetBehavior)
androidx.fragment.app.DialogFragment: void setStyle(int,int)
com.umeng.analytics.pro.i: void a()
com.caij.puremusic.drive.model.Propstat: void write$Self(com.caij.puremusic.drive.model.Propstat,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
org.simpleframework.xml.core.ClassSchema: org.simpleframework.xml.core.Label getVersion()
org.repackage.com.meizu.flyme.openidsdk.b: boolean a(android.content.Context)
com.tencent.mm.opensdk.modelmsg.WXMiniProgramObject: void putExtra(java.lang.String,java.lang.String)
com.caij.puremusic.db.model.ServerAudioFormatQueries$getById$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodySYTC: void read(java.nio.ByteBuffer)
org.jaudiotagger.audio.asf.util.Utils: byte[] getBytes(java.lang.String,java.nio.charset.Charset)
com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)
org.jaudiotagger.audio.ogg.util.OggPageHeader$PacketStartAndLength: int getLength()
org.jaudiotagger.audio.asf.io.ChunkHeaderReader: boolean canFail()
me.tankery.lib.circularseekbar.CircularSeekBar: void setCircleColor(int)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void addFrame(org.jaudiotagger.tag.id3.AbstractID3v2Frame)
org.jaudiotagger.tag.datatype.MultipleTextEncodedStringNullTerminated: MultipleTextEncodedStringNullTerminated(org.jaudiotagger.tag.datatype.TextEncodedStringSizeTerminated)
com.caij.puremusic.service.MusicService$restoreState$1: MusicService$restoreState$1()
com.thegrizzlylabs.sardineandroid.DavAcl: java.lang.String getOwner()
com.umeng.analytics.pro.an: com.umeng.analytics.pro.bp I()
com.tencent.bugly.crashreport.CrashReport: void closeNativeReport()
org.jaudiotagger.tag.mp4.field.Mp4TagReverseDnsField: java.lang.String getContent()
com.tencent.mm.opensdk.diffdev.a.b: void onPostExecute(java.lang.Object)
org.jaudiotagger.tag.datatype.Lyrics3Line: void readByteArray(byte[],int)
org.jcodec.containers.mp4.boxes.MovieHeaderBox: MovieHeaderBox(org.jcodec.containers.mp4.boxes.Header)
org.jaudiotagger.tag.id3.framebody.FrameBodyETCO: FrameBodyETCO(org.jaudiotagger.tag.id3.framebody.FrameBodyETCO)
org.jcodec.containers.mp4.boxes.ChannelBox: void parse(java.nio.ByteBuffer)
org.simpleframework.xml.convert.Convert: java.lang.Class value()
androidx.core.view.ViewCompat$Api19Impl: boolean isLaidOut(android.view.View)
org.jcodec.containers.mp4.boxes.MovieBox: long rescale(long,long)
org.jcodec.containers.mp4.boxes.IListBox: java.lang.String fourcc()
org.jaudiotagger.tag.id3.framebody.FrameBodyTRCK: void setTrackNo(java.lang.Integer)
com.caij.puremusic.drive.model.Part$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: void addField(org.jaudiotagger.tag.TagField)
com.tencent.mm.opensdk.modelmsg.WXEmojiObject: void serialize(android.os.Bundle)
org.jaudiotagger.tag.datatype.Lyrics3Image: java.lang.String writeString()
org.simpleframework.xml.core.MethodDetail: java.lang.String getName()
org.simpleframework.xml.core.Entry: java.lang.String getEntry()
com.alipay.android.phone.mrpc.core.RpcException: void setOperationType(java.lang.String)
com.caij.puremusic.network.model.LastFmTrack$Track$Album: java.lang.String getArtist()
com.umeng.commonsdk.statistics.common.DataHelper: java.lang.String convertExceptionToString(java.lang.Throwable)
com.caij.puremusic.db.model.DriveFileDownUrlInfo: long component2()
com.caij.puremusic.db.model.SongQueries$GetSongBySourceQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
org.jaudiotagger.tag.datatype.ByteArraySizeTerminated: void readByteArray(byte[],int)
com.umeng.analytics.pro.i: void a(boolean,java.lang.String)
com.umeng.commonsdk.internal.utils.h: h()
org.simpleframework.xml.core.CacheLabel: CacheLabel(org.simpleframework.xml.core.Label)
com.caij.puremusic.drive.model.PlayLists: PlayLists(java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.caij.puremusic.drive.model.Prop: void getResourcetype$annotations()
kotlin.KotlinNullPointerException: KotlinNullPointerException()
com.caij.puremusic.util.HttpUtil$httpClient$1$1: HttpUtil$httpClient$1$1()
com.umeng.analytics.pro.bm: bm(byte,java.lang.Class)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
androidx.activity.ComponentDialog: androidx.lifecycle.Lifecycle getLifecycle()
com.umeng.analytics.pro.ch: void b(byte[],int,int)
com.caij.puremusic.drive.model.DriveFile: long getCreateTime()
com.caij.puremusic.drive.model.OneDriveFile$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
org.jcodec.containers.mp4.boxes.PartialSyncSamplesBox: PartialSyncSamplesBox(org.jcodec.containers.mp4.boxes.Header)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
org.jcodec.containers.mp4.boxes.NodeBox: java.util.List getBoxes()
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getImei(android.content.Context)
com.google.android.material.search.SearchBar: void setHint(int)
com.caij.puremusic.lyrics.SimpleLrcView: void setFlag(java.lang.Object)
org.simpleframework.xml.core.DefaultScanner: org.simpleframework.xml.core.Instantiator getInstantiator()
org.repackage.com.vivo.identifier.IdentifierIdClient$1: void handleMessage(android.os.Message)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior()
org.jcodec.containers.mp4.boxes.TrakBox: void setDuration(long)
com.google.gson.stream.JsonToken: JsonToken(java.lang.String,int)
com.bumptech.glide.load.PreferredColorSpace: com.bumptech.glide.load.PreferredColorSpace[] values()
com.google.android.material.card.MaterialCardView: void setMaxCardElevation(float)
com.caij.puremusic.db.model.SongQueries$songsByAlumId$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
com.umeng.analytics.pro.bf$c: void a(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.bf)
com.google.android.material.navigation.NavigationBarView: android.content.res.ColorStateList getItemIconTintList()
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.google.android.material.materialswitch.MaterialSwitch: void setThumbDrawable(android.graphics.drawable.Drawable)
com.google.android.material.search.SearchView: void setMenuItemsAnimated(boolean)
org.jaudiotagger.audio.asf.util.Utils: java.lang.String readFixedSizeUTF16Str(java.io.InputStream,int)
com.alipay.android.phone.mrpc.core.aa: java.util.List b()
com.caij.puremusic.drive.model.MediaInfoWrapper: java.util.List getArtists()
org.jaudiotagger.tag.images.StandardArtwork: void setHeight(int)
org.jaudiotagger.tag.wav.WavTag: boolean isEmpty()
com.umeng.commonsdk.internal.utils.a: float a(android.content.Context)
com.caij.puremusic.model.UpdateInfo: void writeToParcel(android.os.Parcel,int)
com.google.android.material.bottomsheet.BottomSheetBehavior: void replaceAccessibilityActionForState(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,int)
com.tencent.bugly.proguard.bk: byte[] b(byte[])
com.caij.puremusic.model.DriveFileParcelable: void writeToParcel(android.os.Parcel,int)
org.jaudiotagger.tag.id3.ID3v22Tag: void deleteField(org.jaudiotagger.tag.id3.ID3v22FieldKey)
androidx.activity.ComponentDialog: void onStart()
com.caij.puremusic.preferences.NowPlayingScreenPreferenceDialog: NowPlayingScreenPreferenceDialog()
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: BottomSheetBehavior$SavedState(android.os.Parcel,java.lang.ClassLoader)
org.jaudiotagger.tag.id3.ID3Tags: java.lang.String forceFrameID22To23(java.lang.String)
com.caij.puremusic.db.model.SongQueries$SongsByAlumQuery: java.lang.String getValue()
com.umeng.analytics.pro.b$a: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
io.ktor.websocket.FrameType: boolean getControlFrame()
com.google.android.material.button.MaterialButton: void setIconTintMode(android.graphics.PorterDuff$Mode)
org.simpleframework.xml.stream.NodeReader: NodeReader(org.simpleframework.xml.stream.EventReader)
com.thegrizzlylabs.sardineandroid.model.Propstat: Propstat()
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
com.alipay.mobile.framework.service.annotation.OperationType: java.lang.String value()
com.tencent.bugly.proguard.d: void a(java.lang.String,java.lang.Object)
okhttp3.TlsVersion: okhttp3.TlsVersion[] $values()
com.tencent.mm.opensdk.modelbiz.WXChannelShareVideo$Req: void fromBundle(android.os.Bundle)
com.umeng.commonsdk.stateless.d: boolean a(long,long)
androidx.preference.DialogPreference: DialogPreference(android.content.Context)
org.jaudiotagger.audio.asf.io.AsfExtHeaderReader: org.jaudiotagger.audio.asf.data.GUID[] getApplyingIds()
org.jaudiotagger.tag.id3.ID3v22Tag: void copyPrimitives(org.jaudiotagger.tag.id3.AbstractID3v2Tag)
com.umeng.commonsdk.stateless.b: void a(int)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
org.simpleframework.xml.core.Composite: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
org.jaudiotagger.audio.mp3.MP3AudioHeader: java.lang.String getFormat()
org.jaudiotagger.tag.TagOptionSingleton: void setAndroid(boolean)
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query songsByTitle(java.lang.String,kotlin.jvm.functions.Function18)
org.simpleframework.xml.stream.Builder: void setElement(java.lang.String,java.lang.String)
org.simpleframework.xml.core.UnionException: UnionException(java.lang.String,java.lang.Object[])
org.jcodec.containers.mp4.boxes.MovieBox: org.jcodec.containers.mp4.boxes.MovieHeaderBox getMovieHeader()
com.umeng.umzid.ZIDManager$b: void run()
com.tencent.mmkv.MMKV: java.lang.String[] allKeys()
com.google.android.material.card.MaterialCardView: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.umeng.commonsdk.internal.c: void f()
org.simpleframework.xml.strategy.WriteGraph: java.lang.Class writeArray(java.lang.Class,java.lang.Object,org.simpleframework.xml.stream.NodeMap)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setExpandedComponentIdHint(int)
com.caij.puremusic.db.model.PlaylistEntityQueries$deleteById$2: java.lang.Object invoke(java.lang.Object)
org.simpleframework.xml.strategy.ArrayValue: java.lang.Class getType()
com.google.android.material.timepicker.RadialViewGroup: RadialViewGroup(android.content.Context,android.util.AttributeSet)
com.umeng.analytics.pro.bf$d: bf$d(com.umeng.analytics.pro.bf$1)
org.jcodec.containers.mp4.boxes.TrackFragmentBox: org.jcodec.containers.mp4.boxes.TrackFragmentBox createTrackFragmentBox()
com.google.android.material.chip.Chip: void setCloseIconPressed(boolean)
com.tencent.bugly.proguard.as$3: as$3()
androidx.core.content.pm.PackageInfoCompat$Api28Impl: boolean hasSigningCertificate(android.content.pm.PackageManager,java.lang.String,byte[],int)
org.jcodec.containers.mp4.boxes.MetaValue: int toInt16(byte[])
com.tencent.mmkv.MMKVRecoverStrategic: com.tencent.mmkv.MMKVRecoverStrategic valueOf(java.lang.String)
org.simpleframework.xml.core.DetailScanner: boolean isPrimitive()
com.google.android.material.textfield.TextInputLayout: int getEndIconMode()
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.tag.asf.AsfFieldKey valueOf(java.lang.String)
com.umeng.commonsdk.statistics.internal.a$a: a$a()
com.caij.puremusic.drive.model.SongItem: java.lang.String getMediaType()
org.simpleframework.xml.core.TextParameter: TextParameter(java.lang.reflect.Constructor,org.simpleframework.xml.Text,org.simpleframework.xml.stream.Format,int)
com.umeng.commonsdk.statistics.proto.b$b: b$b()
org.jaudiotagger.tag.id3.framebody.FrameBodyOWNE: void setupObjectList()
com.caij.puremusic.drive.model.AlbumArtist$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.google.android.material.search.SearchBar: java.lang.CharSequence getText()
com.caij.puremusic.db.model.SongQueries$SongByPathQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.umeng.umzid.ZIDManager: org.json.JSONObject a(android.content.Context,org.json.JSONObject)
org.jaudiotagger.tag.id3.framebody.FrameBodyTRCK: java.lang.Integer getTrackNo()
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: android.media.session.PlaybackState$Builder createBuilder()
com.thegrizzlylabs.sardineandroid.model.Prop: void setGetlastmodified(java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyGRP1: java.lang.String getIdentifier()
org.simpleframework.xml.core.ObjectScanner: org.simpleframework.xml.core.Caller getCaller(org.simpleframework.xml.core.Context)
org.simpleframework.xml.core.Support: Support(org.simpleframework.xml.filter.Filter,org.simpleframework.xml.transform.Matcher,org.simpleframework.xml.stream.Format)
com.tencent.bugly.crashreport.CrashReport: void setAppVersion(android.content.Context,java.lang.String)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyPairs: java.lang.String getValueAtIndex(int)
org.simpleframework.xml.core.Extractor: org.simpleframework.xml.core.Label getLabel(java.lang.annotation.Annotation)
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getButtonTintList()
org.jaudiotagger.audio.asf.data.ContentDescription: void setAuthor(java.lang.String)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardForegroundColor()
org.jaudiotagger.tag.TagOptionSingleton: byte getId3v24UnicodeTextEncoding()
com.umeng.analytics.pro.f: void c(android.database.sqlite.SQLiteDatabase)
com.umeng.analytics.pro.l: void c()
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$IWXSceneDataObject: boolean checkArgs()
org.jcodec.containers.mp4.boxes.SegmentIndexBox$Reference: SegmentIndexBox$Reference()
com.tencent.mm.opensdk.constants.ConstantsAPI$WXMiniProgram: ConstantsAPI$WXMiniProgram()
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$Req: void toBundle(android.os.Bundle)
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: FrameBodyCOMM(java.nio.ByteBuffer,int)
org.simpleframework.xml.ElementList: boolean empty()
com.caij.puremusic.drive.model.MediaStream: int component2()
com.caij.puremusic.db.model.Folder: long component3()
org.jcodec.containers.mp4.boxes.SampleToChunkBox: int estimateSize()
com.caij.puremusic.drive.model.Media: java.lang.String component6()
com.caij.puremusic.drive.model.WebDAVToken: int hashCode()
com.umeng.commonsdk.statistics.proto.b$d: b$d(com.umeng.commonsdk.statistics.proto.b$1)
org.simpleframework.xml.strategy.Reference: boolean isReference()
androidx.fragment.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)
com.thegrizzlylabs.sardineandroid.model.Propertyupdate: java.util.List getRemoveOrSet()
org.jaudiotagger.tag.id3.ID3v24Tag: void readExtendedHeader(java.nio.ByteBuffer,int)
com.umeng.analytics.pro.bn: void c()
com.tencent.bugly.BuglyStrategy: void setUploadSpotCrash(boolean)
org.jcodec.containers.mp4.boxes.TrakBox: int getTimescale()
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$BreadthFirstEnumeration: java.lang.Object nextElement()
com.umeng.commonsdk.utils.UMUtils: UMUtils()
com.umeng.analytics.pro.r: com.umeng.analytics.pro.r a()
com.alipay.android.phone.mrpc.core.a.f: byte[] a()
com.tencent.bugly.proguard.ag: void b(java.util.List)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.util.List getFields(java.lang.String)
com.caij.puremusic.db.model.HistoryEntityQueries: app.cash.sqldelight.Query historySongs(long,long)
org.simpleframework.xml.strategy.ReadGraph: org.simpleframework.xml.strategy.Value read(org.simpleframework.xml.strategy.Type,org.simpleframework.xml.stream.NodeMap)
org.jcodec.containers.mp4.boxes.MovieBox: void updateDuration()
com.umeng.commonsdk.statistics.common.d$a: void a(com.umeng.commonsdk.statistics.common.d$b)
com.google.android.material.bottomsheet.BottomSheetBehavior: void setDraggable(boolean)
com.caij.puremusic.drive.model.SubsonicPlaylist: java.lang.String getId()
org.jaudiotagger.audio.asf.data.ContentDescription: void setComment(java.lang.String)
org.simpleframework.xml.core.MapFactory: MapFactory(org.simpleframework.xml.core.Context,org.simpleframework.xml.strategy.Type)
org.jcodec.containers.mp4.boxes.ColorExtension: void doWrite(java.nio.ByteBuffer)
org.simpleframework.xml.util.ConcurrentCache: void cache(java.lang.Object,java.lang.Object)
org.simpleframework.xml.util.WeakCache$SegmentList: int segment(java.lang.Object)
com.tencent.mm.opensdk.modelbiz.WXLaunchWxaRedirectingPage$Resp: void toBundle(android.os.Bundle)
com.alipay.android.app.IAlixPay: java.lang.String test()
org.jaudiotagger.tag.id3.framebody.FrameBodyWOAS: FrameBodyWOAS(java.nio.ByteBuffer,int)
com.caij.puremusic.drive.model.AlbumMediaContainer$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.AlbumMediaContainer)
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
com.caij.puremusic.db.model.HistoryEntity: com.caij.puremusic.db.model.HistoryEntity copy(long,long)
com.caij.puremusic.drive.model.SubsonicSearchResponse: com.caij.puremusic.drive.model.SubsonicSearchResponse copy$default(com.caij.puremusic.drive.model.SubsonicSearchResponse,java.lang.String,java.lang.String,com.caij.puremusic.drive.model.SearchResult3,int,java.lang.Object)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyUnsupported: FieldFrameBodyUnsupported(java.nio.ByteBuffer)
org.jaudiotagger.tag.id3.ID3Unsynchronization: java.nio.ByteBuffer synchronize(java.nio.ByteBuffer)
org.jcodec.containers.mp4.boxes.Box: org.jcodec.containers.mp4.boxes.Header getHeader()
com.caij.puremusic.drive.model.AlbumListResponse$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.umeng.commonsdk.utils.b: b()
org.jaudiotagger.tag.TagOptionSingleton: org.jaudiotagger.audio.wav.WavOptions getWavOptions()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintList(android.content.res.ColorStateList)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
org.jaudiotagger.audio.generic.Utils: long u(int)
com.tencent.mm.opensdk.modelmsg.WXMusicObject: int type()
com.caij.puremusic.db.model.ServerAudioFormatQueries$GetByIdQuery$execute$1: java.lang.Object invoke(java.lang.Object)
org.simpleframework.xml.core.ElementParameter: ElementParameter(java.lang.reflect.Constructor,org.simpleframework.xml.Element,org.simpleframework.xml.stream.Format,int)
com.umeng.analytics.pro.r: r()
androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater()
org.simpleframework.xml.stream.PullReader$Start: PullReader$Start(org.xmlpull.v1.XmlPullParser)
com.google.android.material.chip.ChipGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
com.umeng.commonsdk.internal.utils.k: java.lang.String c()
org.jaudiotagger.tag.id3.AbstractTagFrameBody: java.lang.String getBriefDescription()
org.jaudiotagger.tag.reference.GenreTypes: int getMaxStandardGenreId()
com.tencent.bugly.crashreport.crash.anr.TraceFileHelper: java.lang.String a(java.io.BufferedReader)
org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Object,java.lang.String)
com.google.android.material.navigationrail.NavigationRailMenuView: int getMenuGravity()
com.google.android.material.slider.BaseSlider: float getThumbStrokeWidth()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
com.thegrizzlylabs.sardineandroid.model.Bind: Bind()
org.jaudiotagger.tag.aiff.AiffTag: boolean isEmpty()
androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getSuffixText()
org.jaudiotagger.audio.wav.WavInfoReader: org.jaudiotagger.audio.generic.GenericAudioHeader read(java.nio.channels.FileChannel)
com.caij.puremusic.db.model.Album: long getAlbumId()
kotlin.collections.builders.MapBuilder: MapBuilder()
org.simpleframework.xml.core.SignatureBuilder$ParameterTable: org.simpleframework.xml.core.SignatureBuilder$ParameterList get(int)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealScrimColor(int)
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
org.simpleframework.xml.core.CompositeList: boolean validate(org.simpleframework.xml.stream.InputNode,java.lang.Class)
org.jaudiotagger.audio.generic.GenericAudioHeader: boolean isVariableBitRate()
com.caij.puremusic.db.model.SongEntityQueries: app.cash.sqldelight.Query getPlayListSongCount(long)
com.alipay.sdk.m.x.e: void setWebClientProxy(com.alipay.sdk.m.x.e$g)
org.simpleframework.xml.core.Support: Support(org.simpleframework.xml.filter.Filter)
org.simpleframework.xml.core.ModelList: ModelList()
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries: void deleteById(java.lang.String)
androidx.mediarouter.app.MediaRouteDiscoveryFragment: MediaRouteDiscoveryFragment()
com.caij.puremusic.MainModuleKt$roomModule$1$10: MainModuleKt$roomModule$1$10()
org.jaudiotagger.audio.AudioFileIO: void deleteTag(org.jaudiotagger.audio.AudioFile)
org.jaudiotagger.tag.images.ImageHandlingFactory: ImageHandlingFactory()
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
org.jaudiotagger.tag.id3.ID3v1Tag: java.util.List getFields(java.lang.String)
org.jaudiotagger.tag.asf.AsfTag: org.jaudiotagger.tag.asf.AsfTagTextField createField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
com.caij.puremusic.drive.model.PlexSectionsResponse$$serializer: com.caij.puremusic.drive.model.PlexSectionsResponse deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.drive.model.MediaContainer$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.caij.puremusic.db.model.SongQueries$songsDateLastDesc$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
com.caij.puremusic.drive.model.Part: int component5()
org.jaudiotagger.audio.AudioFile: org.jaudiotagger.tag.Tag getTagOrCreateAndSetDefault()
com.umeng.commonsdk.framework.a: void n()
com.caij.puremusic.drive.model.Auth2Token: com.caij.puremusic.drive.model.Auth2Token copy(java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,long)
androidx.fragment.app.Fragment: androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData()
com.umeng.analytics.MobclickAgent: void setLocation(double,double)
com.caij.puremusic.db.model.Album: long component1()
com.caij.puremusic.db.model.SongQueries$getSongCountBySourceId$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.audio.ogg.OggVorbisTagReader$OggVorbisHeaderSizes: long getSetupHeaderStartPosition()
com.umeng.analytics.pro.bf: boolean b(com.umeng.analytics.pro.bc)
com.caij.vip.PayInfoResponse: PayInfoResponse()
com.caij.puremusic.drive.model.OneDriveFolder: java.lang.String toString()
com.umeng.commonsdk.statistics.internal.StatTracer: long getFirstActivateTime()
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyPairs: void setText(java.lang.String)
com.google.android.material.card.MaterialCardView: void setStrokeColor(android.content.res.ColorStateList)
com.alipay.android.phone.mrpc.core.j: j(com.alipay.android.phone.mrpc.core.g,java.lang.reflect.Method,int,java.lang.String,byte[],boolean)
com.google.android.material.chip.Chip: void setAccessibilityClassName(java.lang.CharSequence)
com.umeng.analytics.pro.o: void a(java.lang.Object,boolean)
org.jaudiotagger.tag.InvalidFrameIdentifierException: InvalidFrameIdentifierException(java.lang.Throwable)
com.caij.puremusic.model.DeezerResponse: java.util.List getData()
org.jaudiotagger.tag.id3.framebody.FrameBodyPIC: void setDescription(java.lang.String)
com.umeng.analytics.CoreProtocol$a: com.umeng.analytics.CoreProtocol a()
com.caij.puremusic.db.model.ServerSongCoverQueries: void clear()
org.jaudiotagger.tag.id3.ID3v1TagField: boolean isBinary()
org.simpleframework.xml.stream.OutputNodeMap: org.simpleframework.xml.stream.OutputNode put(java.lang.String,java.lang.String)
com.google.android.material.slider.BaseSlider: float getValueTo()
com.google.android.material.navigation.NavigationBarItemView: void setTextAppearanceActive(int)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: EsdsBox$Kind(java.lang.String,int,int)
com.caij.puremusic.db.model.SongEntityQueries: void insert(com.caij.puremusic.db.model.SongEntity)
androidx.appcompat.widget.SwitchCompat: void setThumbDrawable(android.graphics.drawable.Drawable)
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean sendReq(com.tencent.mm.opensdk.modelbase.BaseReq)
com.umeng.commonsdk.UMConfigure: void setLogEnabled(boolean)
com.google.android.material.bottomsheet.BottomSheetBehavior: void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)
org.simpleframework.xml.core.ParameterContact: java.lang.String getName()
org.jaudiotagger.tag.TagOptionSingleton: boolean isEncodeUTF16BomAsLittleEndian()
com.caij.puremusic.drive.model.AlbumListResponse: AlbumListResponse(int,com.caij.puremusic.drive.model.SubsonicResponse,kotlinx.serialization.internal.SerializationConstructorMarker)
com.umeng.analytics.pro.al: void c(java.lang.String,java.lang.Object[])
org.jaudiotagger.tag.mp4.Mp4Tag: java.util.List getArtworkList()
org.simpleframework.xml.core.NamespaceDecorator: void namespace(org.simpleframework.xml.stream.OutputNode)
com.google.android.material.imageview.ShapeableImageView: int getContentPaddingTop()
io.ktor.util.date.WeekDay: WeekDay(java.lang.String,int,java.lang.String)
com.google.common.collect.Maps$EntryFunction$2: java.lang.Object apply(java.lang.Object)
org.jaudiotagger.tag.asf.AsfTag: boolean hasField(org.jaudiotagger.tag.FieldKey)
com.tencent.bugly.proguard.ab: int c()
org.simpleframework.xml.transform.BooleanTransform: java.lang.Boolean read(java.lang.String)
com.google.android.material.chip.Chip: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.core.app.ActivityCompat$Api16Impl: void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
org.jaudiotagger.audio.aiff.chunk.NameChunk: NameChunk(org.jaudiotagger.audio.iff.ChunkHeader,java.nio.ByteBuffer,org.jaudiotagger.audio.aiff.AiffAudioHeader)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.util.List doGetValues(org.jaudiotagger.tag.id3.AbstractID3v2Tag$FrameAndSubId)
org.jaudiotagger.tag.id3.ID3v1TagField: boolean isCommon()
com.google.android.material.chip.Chip: void setBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.chip.ChipGroup: void setSingleSelection(int)
org.jaudiotagger.tag.mp4.Mp4TagCreator: java.lang.Object convert(org.jaudiotagger.tag.Tag,int)
com.caij.puremusic.drive.model.SongItem: java.lang.String getName()
com.tencent.bugly.proguard.ap: java.lang.String b(java.lang.Throwable)
org.jaudiotagger.audio.asf.data.ContentBranding: void setCopyRightURL(java.lang.String)
org.jaudiotagger.audio.opus.OpusFileWriter: void deleteTag(org.jaudiotagger.tag.Tag,java.io.RandomAccessFile,java.io.RandomAccessFile)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: int getLeafCount()
com.google.android.material.chip.Chip: void setChipStrokeColor(android.content.res.ColorStateList)
com.umeng.commonsdk.framework.UMModuleRegister: com.umeng.commonsdk.framework.UMLogDataProtocol getCallbackFromModuleName(java.lang.String)
com.caij.puremusic.drive.model.EmbyAlbumsResponse: int component2()
com.umeng.commonsdk.framework.UMFrUtils: java.lang.String getSubProcessName(android.content.Context)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: boolean isHorizontallyScrollable(android.widget.TextView)
com.caij.puremusic.drive.model.AlbumMetadata: com.caij.puremusic.drive.model.AlbumMetadata copy(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
androidx.constraintlayout.helper.widget.Flow: void setOrientation(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyTPE2: FrameBodyTPE2(java.nio.ByteBuffer,int)
androidx.customview.view.AbsSavedState: android.os.Parcelable getSuperState()
org.simpleframework.xml.strategy.TreeStrategy: java.lang.Class readValue(org.simpleframework.xml.strategy.Type,org.simpleframework.xml.stream.NodeMap)
com.caij.puremusic.db.model.ServerAudioFormatQueries: void deleteSongBySource(long)
com.alipay.android.phone.mrpc.core.q: android.webkit.CookieManager i()
org.simpleframework.xml.stream.NodeWriter: void remove(org.simpleframework.xml.stream.OutputNode)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api16Impl: void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int)
org.simpleframework.xml.core.EmptyExpression: org.simpleframework.xml.core.Expression getPath(int,int)
org.jaudiotagger.audio.asf.io.LanguageListReader: boolean canFail()
com.caij.puremusic.drive.model.EmbyAlbumsResponse$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: java.lang.String getProvider()
com.tencent.mm.opensdk.modelmsg.ShowMessageFromWX$Req: ShowMessageFromWX$Req(android.os.Bundle)
com.thegrizzlylabs.sardineandroid.DavResource: java.lang.String getDisplayName()
org.jcodec.containers.mp4.boxes.MediaHeaderBox: org.jcodec.containers.mp4.boxes.MediaHeaderBox createMediaHeaderBox(int,long,int,long,long,int)
com.tencent.mm.opensdk.diffdev.IDiffDevOAuth: boolean stopAuth()
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.thegrizzlylabs.sardineandroid.model.Response: com.thegrizzlylabs.sardineandroid.model.Location getLocation()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
org.jaudiotagger.tag.id3.AggregatedFrame: boolean isBinary()
org.jaudiotagger.tag.id3.AbstractTag: void write(java.io.RandomAccessFile)
com.caij.puremusic.drive.model.Metadata$Companion: Metadata$Companion()
com.caij.puremusic.db.model.ServerSongCoverQueries$GetBySourceQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
kotlin.reflect.KVariance: kotlin.reflect.KVariance valueOf(java.lang.String)
com.umeng.analytics.pro.bu: void i()
org.jaudiotagger.utils.FileTypeUtil: FileTypeUtil()
com.tencent.bugly.proguard.i: com.tencent.bugly.proguard.i a(float,java.lang.String)
org.jaudiotagger.utils.DirectByteBufferUtils$UnsupportedJvmReleaseStrategy: void release(java.nio.Buffer)
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean canBeHiddenByDragging()
com.google.android.material.progressindicator.LinearProgressIndicator: void setIndicatorDirection(int)
org.jaudiotagger.tag.lyrics3.Lyrics3v1: void setLyric(java.lang.String)
org.simpleframework.xml.core.PrimitiveArray: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object,int)
com.tencent.bugly.proguard.br: void a(com.tencent.bugly.proguard.k)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: org.jaudiotagger.tag.TagField getFirstField(org.jaudiotagger.tag.FieldKey)
org.jaudiotagger.tag.datatype.AbstractIntStringValuePair: AbstractIntStringValuePair()
org.jcodec.containers.mp4.boxes.NameBox: java.lang.String fourcc()
org.simpleframework.xml.core.FieldScanner: boolean isStatic(java.lang.reflect.Field)
com.caij.puremusic.db.model.SongQueries$songsOrderDateAdd$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.caij.puremusic.drive.model.MediaInfoWrapper: java.util.ArrayList component7()
org.jaudiotagger.audio.asf.data.ContentDescription: java.lang.String getComment()
com.caij.puremusic.drive.model.OneDriveFolder: int hashCode()
com.caij.puremusic.drive.model.SubsonicPlaylist: java.lang.String component8()
com.tencent.bugly.proguard.ag: void a(java.util.List)
com.tencent.mm.opensdk.openapi.MMSharedPreferences: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)
com.google.android.material.chip.Chip: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
org.jaudiotagger.tag.images.StandardArtwork: int getHeight()
com.caij.puremusic.db.model.PlaybackSongQueries$insert$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.jaudiotagger.tag.id3.ID3v24Tag: org.jaudiotagger.tag.id3.AbstractID3v2Frame createFrame(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
org.simpleframework.xml.core.ElementListParameter: int getIndex()
org.jaudiotagger.audio.ogg.util.OggPageHeader: int getCheckSum()
com.tencent.mmkv.MMKV: void onExit()
com.caij.puremusic.db.model.ServerAudioFormatQueries$GetByIdQuery$execute$1: ServerAudioFormatQueries$GetByIdQuery$execute$1(com.caij.puremusic.db.model.ServerAudioFormatQueries$GetByIdQuery)
com.tencent.mm.opensdk.channel.MMessageActV2: void sendUsingPendingIntent(android.content.Context,android.content.Intent)
com.caij.puremusic.drive.model.ADriveItem: void write$Self(com.caij.puremusic.drive.model.ADriveItem,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: void setDescription(android.media.MediaDescription$Builder,java.lang.CharSequence)
com.google.android.material.navigation.NavigationBarView: void setElevation(float)
org.jaudiotagger.tag.id3.AbstractID3v2Frame$EncodingFlags: void resetFlags()
org.jaudiotagger.tag.FieldDataInvalidException: FieldDataInvalidException(java.lang.String,java.lang.Throwable)
com.google.android.material.navigation.NavigationBarItemView: void setShifting(boolean)
com.caij.puremusic.db.model.ServerSongCoverQueries$clear$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.tag.images.Artwork: void setBinaryData(byte[])
com.tencent.bugly.proguard.r: void a(com.tencent.bugly.crashreport.biz.UserInfoBean)
com.tencent.mmkv.MMKV: long actualSize(long)
org.jaudiotagger.audio.aiff.AiffTagWriter: AiffTagWriter()
org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Object,java.io.Reader)
org.simpleframework.xml.stream.StreamReader$Text: java.lang.Object getSource()
com.umeng.analytics.MobclickAgent: void setOpenGLContext(javax.microedition.khronos.opengles.GL10)
com.google.android.material.bottomsheet.BottomSheetDialog$3: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.caij.puremusic.db.model.AlbumQueries$searchAlbumsByName$2: AlbumQueries$searchAlbumsByName$2()
com.caij.puremusic.drive.model.PlayListsResponse: PlayListsResponse(int,com.caij.puremusic.drive.model.PlayListsSubsonicResponse,kotlinx.serialization.internal.SerializationConstructorMarker)
org.jaudiotagger.tag.Tag: void addField(org.jaudiotagger.tag.images.Artwork)
com.caij.puremusic.drive.model.JellyfinFolder$Companion: JellyfinFolder$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.bottomsheet.BottomSheetDialog: void onAttachedToWindow()
org.jaudiotagger.audio.ogg.util.OggInfoReader: OggInfoReader()
org.simpleframework.xml.core.Revision: boolean compare(java.lang.Object,java.lang.Object)
com.r0adkll.slidr.widget.SliderPanel: com.r0adkll.slidr.model.SlidrInterface getDefaultInterface()
org.jaudiotagger.audio.mp3.MP3File: org.jaudiotagger.tag.Tag createDefaultTag()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
com.caij.puremusic.db.model.SongQueries$SongsByAlumIdQuery: SongQueries$SongsByAlumIdQuery(com.caij.puremusic.db.model.SongQueries,long,kotlin.jvm.functions.Function1)
com.caij.puremusic.drive.model.SubsonicSearchListResponse$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
org.jcodec.containers.mp4.boxes.NameBox: java.lang.String getName()
org.jaudiotagger.tag.id3.framebody.FrameBodyTSOT: FrameBodyTSOT()
org.jcodec.containers.mp4.boxes.SyncSamplesBox: SyncSamplesBox(org.jcodec.containers.mp4.boxes.Header)
org.jaudiotagger.tag.datatype.Lyrics3TimeStamp: java.lang.String toString()
com.thegrizzlylabs.sardineandroid.model.Prop: com.thegrizzlylabs.sardineandroid.model.CurrentUserPrivilegeSet getCurrentUserPrivilegeSet()
com.thegrizzlylabs.sardineandroid.Sardine: void unlock(java.lang.String,java.lang.String)
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: void startNativeMonitor()
cn.lyric.getter.api.tools.EventTools: boolean hasEnable()
com.google.android.material.navigation.NavigationBarItemView: void setActiveIndicatorMarginHorizontal(int)
com.tencent.bugly.proguard.bu: void a(com.tencent.bugly.proguard.l)
com.umeng.commonsdk.statistics.proto.a: void a(java.io.ObjectInputStream)
kotlinx.serialization.json.JsonNull: kotlinx.serialization.KSerializer serializer()
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultAreEquivalent$1: FlowKt__DistinctKt$defaultAreEquivalent$1()
androidx.fragment.app.DialogFragment: void dismissInternal(boolean,boolean,boolean)
org.jcodec.containers.mp4.boxes.UdtaMetaBox: void doWrite(java.nio.ByteBuffer)
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$deleteSongBySource$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.simpleframework.xml.transform.DateType: org.simpleframework.xml.transform.DateType getType(java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int)
org.jaudiotagger.tag.KeyNotFoundException: KeyNotFoundException(java.lang.String)
org.simpleframework.xml.transform.DateFactory: java.util.Date getInstance(java.lang.Object[])
com.google.android.exoplayer2.video.spherical.SphericalGLSurfaceView: void setDefaultStereoMode(int)
org.simpleframework.xml.core.Context: java.lang.Object getAttribute(java.lang.Object)
com.tencent.bugly.proguard.at$3: at$3(com.tencent.bugly.proguard.at,java.lang.Thread,java.lang.Throwable,boolean)
org.jaudiotagger.audio.asf.io.ChunkContainerReader: org.jaudiotagger.audio.asf.io.ChunkReader getReader(org.jaudiotagger.audio.asf.data.GUID)
org.jaudiotagger.tag.datatype.StringHashMap: void setValue(java.lang.Object)
org.jcodec.containers.mp4.boxes.TrackExtendsBox: int getDefaultSampleBytes()
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: byte[] a(com.umeng.commonsdk.statistics.proto.e)
com.caij.puremusic.drive.model.SubsonicSong: com.caij.puremusic.drive.model.SubsonicSong copy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,long,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)
com.google.android.material.bottomsheet.BottomSheetBehavior: void restoreOptionalState(com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState)
com.caij.puremusic.db.model.SongEntityQueries$checkSongPlaylistExists$1: SongEntityQueries$checkSongPlaylistExists$1()
com.umeng.commonsdk.statistics.common.d: java.lang.String b()
com.caij.puremusic.db.model.SongQueries$songsByArtistIdWithLike$1: SongQueries$songsByArtistIdWithLike$1(kotlin.jvm.functions.Function18,com.caij.puremusic.db.model.SongQueries)
com.umeng.analytics.pro.d: d()
com.tencent.mm.opensdk.modelmsg.WXWeWorkObject: void unserialize(android.os.Bundle)
com.tencent.mm.opensdk.modelbiz.WXOpenCustomerServiceChat$Resp: int getType()
org.jaudiotagger.audio.ogg.util.VorbisSetupHeader: void decodeHeader(byte[])
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies: com.google.common.util.concurrent.CycleDetectingLockFactory$Policies[] values()
org.simpleframework.xml.transform.DateFactory: DateFactory(java.lang.Class,java.lang.Class[])
com.tencent.bugly.proguard.bg: void c()
org.simpleframework.xml.stream.IdentityStyle: IdentityStyle()
com.caij.puremusic.network.model.Image: int hashCode()
org.simpleframework.xml.core.MethodScanner$PartMap: MethodScanner$PartMap(org.simpleframework.xml.core.MethodScanner$1)
androidx.fragment.app.Fragment: void setAnimations(int,int,int,int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeResource(int)
com.umeng.commonsdk.statistics.proto.c$b: c$b(com.umeng.commonsdk.statistics.proto.c$1)
com.google.android.material.slider.BaseSlider: void setThumbRadius(int)
kotlin.io.FileWalkDirection: kotlin.io.FileWalkDirection valueOf(java.lang.String)
org.jaudiotagger.tag.id3.ID3v23Frame: void write(java.io.ByteArrayOutputStream)
org.jaudiotagger.tag.id3.framebody.FrameBodyTCON: java.lang.String convertID3v23GenreToGeneric(java.lang.String)
com.thegrizzlylabs.sardineandroid.model.Owner: com.thegrizzlylabs.sardineandroid.model.Unauthenticated getUnauthenticated()
org.simpleframework.xml.strategy.ReadState: org.simpleframework.xml.strategy.ReadGraph create(java.lang.Object)
org.jaudiotagger.tag.datatype.TextEncodedStringNullTerminated: TextEncodedStringNullTerminated(org.jaudiotagger.tag.datatype.TextEncodedStringNullTerminated)
com.umeng.analytics.process.UMProcessDBHelper$1: void a()
org.jcodec.containers.mp4.boxes.MdtaBox: MdtaBox(org.jcodec.containers.mp4.boxes.Header)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: int getNoOfChannels()
com.umeng.commonsdk.utils.FileLockCallback: boolean onFileLock(java.lang.String)
com.umeng.commonsdk.statistics.proto.a$e: com.umeng.commonsdk.statistics.proto.a$e[] values()
com.umeng.commonsdk.statistics.proto.c: void l()
org.simpleframework.xml.core.Signature: java.util.List getAll()
com.umeng.analytics.pro.be: be()
com.umeng.commonsdk.debug.UMRTLog: void sd(java.lang.String,java.lang.String)
org.jaudiotagger.audio.mp3.MPEGFrameHeader: boolean isCopyrighted()
org.jaudiotagger.audio.asf.io.StreamChunkReader: org.jaudiotagger.audio.asf.data.Chunk read(org.jaudiotagger.audio.asf.data.GUID,java.io.InputStream,long)
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$clear$1: void invoke(kotlin.jvm.functions.Function1)
com.tencent.mm.opensdk.modelbiz.OpenRankList$Req: boolean checkArgs()
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
org.jaudiotagger.tag.id3.framebody.FrameBodyTRCK: void setTrackTotal(java.lang.String)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event upTo(androidx.lifecycle.Lifecycle$State)
androidx.constraintlayout.motion.widget.MotionLayout: void setStartState(int)
com.caij.puremusic.drive.model.SongItem$$serializer: SongItem$$serializer()
androidx.core.view.WindowCompat$Api30Impl: void setDecorFitsSystemWindows(android.view.Window,boolean)
org.jaudiotagger.tag.flac.FlacTag: void deleteArtworkField()
com.caij.puremusic.db.model.SongQueries$SongByPathQuery$execute$1: SongQueries$SongByPathQuery$execute$1(com.caij.puremusic.db.model.SongQueries$SongByPathQuery)
org.jaudiotagger.tag.datatype.AbstractStringStringValuePair: java.lang.String getValueForId(java.lang.String)
com.caij.puremusic.drive.model.WebDAVToken$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.tencent.bugly.proguard.ap: java.lang.Object a(byte[],android.os.Parcelable$Creator)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyUnsupported: java.lang.String getIdentifier()
org.jaudiotagger.tag.id3.ID3v11Tag: java.lang.String getFirst(org.jaudiotagger.tag.FieldKey)
com.google.android.material.bottomsheet.BottomSheetBehavior: void updateDrawableForTargetState(int,boolean)
com.caij.puremusic.db.model.PlaylistEntityQueries$playlistByName$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
org.jaudiotagger.audio.ogg.OggVorbisTagWriter: void calculateChecksumOverPage(java.nio.ByteBuffer)
org.jaudiotagger.tag.id3.framebody.FrameBodySIGN: FrameBodySIGN()
com.thegrizzlylabs.sardineandroid.model.Property: org.w3c.dom.Element access$000(com.thegrizzlylabs.sardineandroid.model.Property)
org.jaudiotagger.audio.asf.io.EncodingChunkReader: org.jaudiotagger.audio.asf.data.Chunk read(org.jaudiotagger.audio.asf.data.GUID,java.io.InputStream,long)
org.jaudiotagger.audio.ogg.util.OggPageHeader$HeaderTypeFlag: org.jaudiotagger.audio.ogg.util.OggPageHeader$HeaderTypeFlag valueOf(java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyUFID: FrameBodyUFID(java.lang.String,byte[])
org.simpleframework.xml.core.ObjectScanner: boolean isPrimitive()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPrefixText()
com.caij.puremusic.db.model.FolderQueries$selectAll$1: FolderQueries$selectAll$1(kotlin.jvm.functions.Function7,com.caij.puremusic.db.model.FolderQueries)
com.caij.puremusic.db.model.ServerLyricsQueries$clear$1: ServerLyricsQueries$clear$1()
com.caij.puremusic.db.model.HistoryEntityQueries$deleteById$1: java.lang.Object invoke(java.lang.Object)
com.google.android.material.button.MaterialButton: MaterialButton(android.content.Context,android.util.AttributeSet)
org.simpleframework.xml.core.PathParser$PathSection: java.lang.String getFirst()
com.tencent.mm.opensdk.modelmsg.ShowMessageFromWX$Req: void fromBundle(android.os.Bundle)
com.google.android.material.appbar.CollapsingToolbarLayout: void setTitleEllipsize(android.text.TextUtils$TruncateAt)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
androidx.fragment.app.SpecialEffectsController$Operation$State: void applyState(android.view.View)
org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(int)
com.caij.puremusic.drive.model.PlexSongsResponse$Companion: kotlinx.serialization.KSerializer serializer()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void createStructure()
com.umeng.commonsdk.stateless.b: void k()
org.jaudiotagger.audio.asf.data.MetadataContainer: MetadataContainer(org.jaudiotagger.audio.asf.data.GUID,long,java.math.BigInteger)
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportQuasiRealtime: long getReportInterval()
org.simpleframework.xml.core.Detail: boolean isInstantiable()
com.umeng.commonsdk.statistics.proto.a: com.umeng.analytics.pro.bz o()
org.simpleframework.xml.stream.Stack: java.lang.Object bottom()
androidx.exifinterface.media.ExifInterfaceUtils$Api23Impl: void setDataSource(android.media.MediaMetadataRetriever,android.media.MediaDataSource)
org.jaudiotagger.tag.id3.framebody.FrameBodyUSER: java.lang.String getIdentifier()
io.ktor.client.request.forms.FormBuildersKt$submitForm$5: FormBuildersKt$submitForm$5()
org.jaudiotagger.audio.asf.data.MetadataContainer$DescriptorPointer: int hashCode()
org.jaudiotagger.tag.TagNotFoundException: TagNotFoundException(java.lang.String,java.lang.Throwable)
org.simpleframework.xml.core.Model: boolean isEmpty()
org.jaudiotagger.tag.mp4.Mp4TagFieldSubType: org.jaudiotagger.tag.mp4.Mp4TagFieldSubType[] values()
org.simpleframework.xml.util.Cache: boolean contains(java.lang.Object)
com.caij.puremusic.db.model.SongQueries$SongsByAlumIdQuery$execute$1: SongQueries$SongsByAlumIdQuery$execute$1(com.caij.puremusic.db.model.SongQueries$SongsByAlumIdQuery)
com.tencent.bugly.proguard.aa: void u()
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: void write(java.io.ByteArrayOutputStream)
com.umeng.commonsdk.statistics.TagHelper: TagHelper()
com.google.common.hash.BloomFilterStrategies: BloomFilterStrategies(java.lang.String,int)
org.xmlpull.v1.XmlPullParser: int next()
org.jaudiotagger.audio.wav.WavSubFormat: org.jaudiotagger.audio.wav.WavSubFormat valueOf(java.lang.String)
org.jaudiotagger.audio.SupportedFileFormat$13: SupportedFileFormat$13(java.lang.String,int,java.lang.String)
org.simpleframework.xml.core.Label: java.lang.annotation.Annotation getAnnotation()
com.tencent.mm.opensdk.modelbase.BaseResp: void fromBundle(android.os.Bundle)
com.umeng.analytics.pro.o: void b(org.json.JSONObject)
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate getBridge()
org.jcodec.containers.mp4.boxes.NodeBox: void dumpBoxes(java.lang.StringBuilder)
org.jcodec.containers.mp4.boxes.FullBox: void doWrite(java.nio.ByteBuffer)
org.jaudiotagger.tag.datatype.ByteArraySizeTerminated: byte[] writeByteArray()
org.jcodec.containers.mp4.boxes.AliasBox: java.util.List getExtras()
org.simpleframework.xml.core.ConversionInstance: boolean isReference()
org.jaudiotagger.tag.id3.ID3v22Tag: void deleteField(java.lang.String)
org.jaudiotagger.audio.dsf.DsfFileWriter: void writeTag(org.jaudiotagger.tag.Tag,java.nio.channels.FileChannel,java.lang.String)
com.caij.puremusic.views.BaselineGridTextView: int getCompoundPaddingBottom()
com.caij.puremusic.db.model.FolderQueries$selectAll$1: java.lang.Object invoke(java.lang.Object)
org.simpleframework.xml.stream.OutputDocument: org.simpleframework.xml.stream.OutputNode getChild(java.lang.String)
com.caij.puremusic.db.model.FolderQueries: app.cash.sqldelight.Query selectAll()
org.simpleframework.xml.strategy.CycleStrategy: boolean write(org.simpleframework.xml.strategy.Type,java.lang.Object,org.simpleframework.xml.stream.NodeMap,java.util.Map)
org.simpleframework.xml.stream.Format: Format(org.simpleframework.xml.stream.Verbosity)
org.simpleframework.xml.stream.StreamReader$Entry: StreamReader$Entry(javax.xml.stream.events.Attribute)
com.tencent.bugly.proguard.ap: android.content.Context a(android.content.Context)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyLYR: FieldFrameBodyLYR(org.jaudiotagger.tag.id3.framebody.FrameBodySYLT)
com.tencent.mm.opensdk.modelbiz.WXNontaxPay$Resp: WXNontaxPay$Resp()
org.simpleframework.xml.core.EmptyExpression: java.lang.String getAttribute(java.lang.String)
com.caij.puremusic.db.model.ServerLyrics: com.caij.puremusic.db.model.ServerLyrics copy(long,long,java.lang.String)
com.caij.puremusic.drive.model.MediaInfoWrapper: java.util.List getSongs()
com.thegrizzlylabs.sardineandroid.DavPrincipal: DavPrincipal(com.thegrizzlylabs.sardineandroid.model.Principal)
org.simpleframework.xml.core.Primitive: boolean validateElement(org.simpleframework.xml.stream.InputNode)
com.google.android.material.slider.Slider: void setLabelBehavior(int)
org.simpleframework.xml.core.Composite$Injector: java.lang.Object readInject(org.simpleframework.xml.stream.InputNode)
org.jaudiotagger.audio.ogg.OggFileReader: OggFileReader()
com.caij.puremusic.drive.model.SubsonicResponse: com.caij.puremusic.drive.model.AlbumList getAlbumList2()
com.caij.puremusic.fragments.NowPlayingScreen: NowPlayingScreen(java.lang.String,int,int,int,int,com.caij.puremusic.fragments.AlbumCoverStyle)
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: void setBitrateMinimal(int)
com.caij.puremusic.drive.model.Auth2Token: java.lang.String component4()
com.caij.puremusic.drive.model.PlexUser: java.lang.String component2()
org.jaudiotagger.tag.id3.framebody.FrameBodyEQUA: void setupObjectList()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
com.thegrizzlylabs.sardineandroid.model.SearchRequest: java.lang.String getLanguage()
com.afollestad.materialdialogs.internal.button.DialogActionButtonLayout: DialogActionButtonLayout(android.content.Context,android.util.AttributeSet)
org.simpleframework.xml.core.ElementListParameter$Contact: java.lang.String getName()
org.repackage.com.miui.deviceid.IdentifierManager: java.lang.String a(android.content.Context,java.lang.reflect.Method)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$PreorderEnumeration: java.lang.Object nextElement()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
com.umeng.commonsdk.debug.UMLog: void jsonArry(org.json.JSONArray)
com.umeng.analytics.pro.bo: void a(long)
org.jaudiotagger.audio.generic.GenericTag: java.util.List getArtworkList()
androidx.appcompat.widget.AppCompatButton: void setAllCaps(boolean)
com.tencent.mm.opensdk.modelbiz.WXQRCodePay$Resp: boolean checkArgs()
com.umeng.commonsdk.statistics.proto.Response$a: void b(com.umeng.analytics.pro.bu,com.umeng.commonsdk.statistics.proto.Response)
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1: com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel)
com.google.android.material.materialswitch.MaterialSwitch: android.graphics.PorterDuff$Mode getTrackDecorationTintMode()
com.google.android.material.chip.ChipGroup: void setSingleSelection(boolean)
org.jaudiotagger.audio.mp3.VbriFrame: int getAudioSize()
com.google.android.material.bottomsheet.BottomSheetDragHandleView$1: BottomSheetDragHandleView$1(com.google.android.material.bottomsheet.BottomSheetDragHandleView)
com.caij.puremusic.db.model.AlbumQueries$albums$2: AlbumQueries$albums$2()
com.umeng.commonsdk.framework.UMLogDataProtocol$UMBusinessType: com.umeng.commonsdk.framework.UMLogDataProtocol$UMBusinessType[] values()
org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Class,java.io.InputStream,boolean)
com.caij.puremusic.db.model.ArtistQueries$searchArtistByName$2: com.caij.puremusic.db.model.Artist invoke(long,java.lang.String)
org.jaudiotagger.tag.TagOptionSingleton: void setTruncateTextWithoutErrors(boolean)
org.jaudiotagger.tag.id3.AbstractID3v2Frame: org.jaudiotagger.tag.id3.AbstractID3v2Frame$EncodingFlags getEncodingFlags()
org.jaudiotagger.audio.asf.AsfFileReader: org.jaudiotagger.audio.AudioFile read(java.io.File)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.tencent.mm.opensdk.modelbiz.WXLaunchWxaRedirectingPage$Req: java.lang.String[] toArray()
com.caij.puremusic.drive.model.AlbumSubsonicResponse: void write$Self(com.caij.puremusic.drive.model.AlbumSubsonicResponse,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
org.jaudiotagger.tag.id3.ID3v22FieldKey: java.lang.String getSubId()
com.tencent.bugly.proguard.ap: java.lang.String a(android.content.Context,java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyTFLT: java.lang.String getIdentifier()
com.tencent.bugly.proguard.s: s()
org.jaudiotagger.tag.id3.ID3v23Tag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.images.Artwork)
com.google.android.material.navigation.NavigationBarView: void setOnItemReselectedListener(com.google.android.material.navigation.NavigationBarView$OnItemReselectedListener)
com.google.android.material.button.MaterialButton: void setBackground(android.graphics.drawable.Drawable)
com.thegrizzlylabs.sardineandroid.model.Inherited: Inherited()
com.umeng.commonsdk.utils.UMUtils: java.lang.String getAppHashKey(android.content.Context)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey[] values()
com.caij.puremusic.drive.model.AlbumResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.AlbumResponse)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
org.jaudiotagger.tag.id3.framebody.FrameBodyTIPL: FrameBodyTIPL(byte,java.util.List)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[])
com.umeng.analytics.pro.an$b: com.umeng.analytics.pro.cc b()
com.umeng.analytics.pro.ao: void a(java.lang.String,android.content.ContentValues)
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: boolean performAccessibilityAction(android.view.View$AccessibilityDelegate,android.view.View,int,android.os.Bundle)
org.jaudiotagger.tag.lyrics3.AbstractLyrics3v2FieldFrameBody: void read(java.nio.ByteBuffer)
com.caij.puremusic.db.model.HistoryEntityQueries$updateHistorySong$2: HistoryEntityQueries$updateHistorySong$2()
com.google.android.material.chip.Chip: void setChipIconSizeResource(int)
com.caij.puremusic.drive.model.WebDAVToken$Companion: WebDAVToken$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.caij.puremusic.drive.model.JellyfinLoginResponse: java.lang.String toString()
org.jaudiotagger.tag.TagOptionSingleton: org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistSaveOptions getVorbisAlbumArtistSaveOptions()
com.umeng.commonsdk.stateless.b: void o()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
org.simpleframework.xml.core.AttributeParameter: java.lang.annotation.Annotation getAnnotation()
com.google.common.reflect.Types$JavaVersion: com.google.common.collect.ImmutableList usedInGenericType(java.lang.reflect.Type[])
com.google.android.material.slider.BaseSlider: int getFocusedThumbIndex()
com.umeng.commonsdk.statistics.proto.Response$e: com.umeng.commonsdk.statistics.proto.Response$e valueOf(java.lang.String)
org.jaudiotagger.audio.aiff.AiffTagWriter: void rewriteRiffHeaderSize(java.nio.channels.FileChannel)
com.umeng.commonsdk.statistics.internal.c: void a()
org.jaudiotagger.tag.reference.ISOCountry$Country: ISOCountry$Country(java.lang.String,int,java.lang.String,java.lang.String)
org.jcodec.containers.mp4.boxes.SegmentTypeBox: java.util.Collection getCompBrands()
org.jaudiotagger.audio.SupportedFileFormat: org.jaudiotagger.audio.SupportedFileFormat[] values()
com.umeng.analytics.pro.an$c: void a(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
com.tencent.mmkv.MMKV: void jniInitialize(java.lang.String,int)
com.google.android.material.slider.BaseSlider: void setLabelBehavior(int)
com.umeng.commonsdk.statistics.c: com.umeng.commonsdk.statistics.noise.Defcon a(com.umeng.commonsdk.statistics.c)
org.jcodec.containers.mp4.boxes.AudioSampleEntry: AudioSampleEntry(org.jcodec.containers.mp4.boxes.Header)
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse: JellyfinPlaylistsResponse(java.util.List,int,int)
org.jaudiotagger.tag.reference.ISOScript$Script: org.jaudiotagger.tag.reference.ISOScript$Script[] values()
com.google.android.material.chip.Chip: void setShowMotionSpecResource(int)
org.simpleframework.xml.core.PathParser$PathSection: java.lang.String getPath()
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getThumbDrawable()
com.caij.puremusic.db.model.ServerArtistCoverQueries: ServerArtistCoverQueries(app.cash.sqldelight.db.SqlDriver)
com.google.android.material.textfield.TextInputLayout: void setMinWidthResource(int)
com.caij.puremusic.model.Home: boolean equals(java.lang.Object)
org.jaudiotagger.tag.wav.WavTag: java.util.List getArtworkList()
org.repackage.a.a.a.a.c: java.lang.String b(android.content.Context,java.lang.String)
com.caij.puremusic.drive.model.SubsonicSong: int getBitRate()
org.jaudiotagger.tag.id3.framebody.FrameBodyRVA2: FrameBodyRVA2(org.jaudiotagger.tag.id3.framebody.FrameBodyRVA2)
org.jaudiotagger.audio.asf.io.ChunkContainerReader: ChunkContainerReader(java.util.List,boolean)
org.jaudiotagger.audio.asf.data.EncryptionChunk: void setSecretData(java.lang.String)
com.caij.puremusic.db.model.SongEntityQueries$GetPlayListSongCountQuery$execute$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.tag.datatype.NumberFixedLength: int getSize()
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter getAdapter()
com.caij.puremusic.db.model.SongQueries$SearchSongsByTitleQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
org.jaudiotagger.tag.id3.ID3v22Tag: byte getRevision()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
org.simpleframework.xml.core.MethodContact: java.lang.Class[] getDependents()
org.simpleframework.xml.stream.Verbosity: Verbosity(java.lang.String,int)
org.jaudiotagger.tag.id3.ID3v23FieldKey: java.lang.String getSubId()
com.umeng.analytics.b: java.lang.String f()
androidx.fragment.app.Fragment: void performStop()
com.android.billingclient.api.ProxyBillingActivity: ProxyBillingActivity()
org.simpleframework.xml.stream.IdentityStyle: java.lang.String getElement(java.lang.String)
com.tencent.bugly.proguard.ai: void a(int,int,byte[],java.lang.String,java.lang.String,com.tencent.bugly.proguard.ah,boolean)
com.umeng.analytics.pro.bv: bv()
com.umeng.analytics.pro.bf: void read(com.umeng.analytics.pro.bu)
com.tencent.bugly.crashreport.CrashReport: void initCrashReport(android.content.Context,java.lang.String,boolean)
org.simpleframework.xml.core.ElementListLabel: org.simpleframework.xml.strategy.Type getDependent()
androidx.media.app.NotificationCompat$Api21Impl: void setMediaSession(android.app.Notification$MediaStyle,android.media.session.MediaSession$Token)
com.caij.puremusic.network.model.SearchResponse: com.caij.puremusic.network.model.SearchResponse copy(com.caij.puremusic.network.model.ArtistWrapper,com.caij.puremusic.network.model.ArtistWrapper,com.caij.puremusic.network.model.ArtistWrapper)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void doDeleteTagField(org.jaudiotagger.tag.id3.AbstractID3v2Tag$FrameAndSubId)
org.simpleframework.xml.core.RootException: RootException(java.lang.String,java.lang.Object[])
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.google.android.material.navigation.NavigationBarMenuView: android.util.SparseArray getBadgeDrawables()
org.jaudiotagger.tag.id3.framebody.FrameBodyTRCK: FrameBodyTRCK(org.jaudiotagger.tag.id3.framebody.FrameBodyTRCK)
com.caij.puremusic.dialogs.RenamePlaylistDialog: RenamePlaylistDialog()
org.simpleframework.xml.core.Factory: boolean isCompatible(java.lang.Class,java.lang.Class)
org.simpleframework.xml.core.StructureBuilder: void assemble(java.lang.Class)
com.alipay.android.phone.mrpc.core.b: org.apache.http.params.HttpParams getParams()
org.jaudiotagger.tag.id3.ID3v22Frames: org.jaudiotagger.tag.id3.ID3v22FieldKey getId3KeyFromGenericKey(org.jaudiotagger.tag.FieldKey)
com.umeng.analytics.process.UMProcessDBDatasSender$1: UMProcessDBDatasSender$1(com.umeng.analytics.process.UMProcessDBDatasSender)
com.tencent.bugly.proguard.bn: void a(java.lang.StringBuilder,int)
com.umeng.analytics.pro.aj: java.lang.String a(android.content.Context)
org.jcodec.containers.mp4.boxes.MdtaBox: java.lang.String getKey()
com.tencent.mm.opensdk.modelmsg.ShowMessageFromWX$Req: boolean checkArgs()
androidx.core.view.ViewCompat$Api31Impl: androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)
com.alipay.sdk.m.j.c: void a(int)
com.thegrizzlylabs.sardineandroid.DavResource: java.lang.String access$100(com.thegrizzlylabs.sardineandroid.DavResource,com.thegrizzlylabs.sardineandroid.model.Response)
org.jaudiotagger.audio.mp3.MP3FileWriter: void writeTag(org.jaudiotagger.audio.AudioFile,org.jaudiotagger.tag.Tag,java.io.RandomAccessFile,java.io.RandomAccessFile)
com.google.common.hash.LittleEndianByteArray$JavaLittleEndianBytes$1: LittleEndianByteArray$JavaLittleEndianBytes$1(java.lang.String,int)
nl.adaptivity.xmlutil.core.impl.XmlStreamingJavaCommon$serializationLoader$2: XmlStreamingJavaCommon$serializationLoader$2()
com.caij.puremusic.drive.model.JellyfinFolder: java.lang.String toString()
org.jaudiotagger.audio.AudioFile: AudioFile(java.io.File,org.jaudiotagger.audio.AudioHeader,org.jaudiotagger.tag.Tag)
org.simpleframework.xml.core.DefaultScanner: org.simpleframework.xml.core.Label getVersion()
com.caij.puremusic.drive.model.EmbyFoldersResponse: com.caij.puremusic.drive.model.EmbyFoldersResponse copy$default(com.caij.puremusic.drive.model.EmbyFoldersResponse,java.util.List,int,java.lang.Object)
com.umeng.commonsdk.debug.UMRTLog: void d(java.lang.String,java.lang.String)
org.jaudiotagger.utils.tree.TreeModelListener: void treeNodesChanged(org.jaudiotagger.utils.tree.TreeModelEvent)
com.caij.puremusic.db.model.SongEntityQueries$SongsFromPlaylistQuery: SongEntityQueries$SongsFromPlaylistQuery(com.caij.puremusic.db.model.SongEntityQueries,long,kotlin.jvm.functions.Function1)
com.google.android.material.slider.BaseSlider: android.content.res.ColorStateList getThumbStrokeColor()
org.jaudiotagger.audio.aiff.AiffTagReader: AiffTagReader()
com.tencent.bugly.proguard.k: int a(int,int,boolean)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
org.simpleframework.xml.core.Persister: boolean validate(java.lang.Class,java.io.Reader)
org.jcodec.containers.mp4.boxes.ClipRegionBox: short getRgnSize()
org.jaudiotagger.tag.asf.AsfTagCoverField: int getImageDataSize()
com.caij.puremusic.model.lyrics.SynchronizedLyricsLRC: com.caij.puremusic.model.lyrics.SynchronizedLyricsLRC parse(boolean)
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportDaily: boolean shouldSendMessage(boolean)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSST: FrameBodyTSST()
com.caij.puremusic.db.model.Album: java.lang.String component6()
org.simpleframework.xml.core.PrimitiveFactory: java.lang.Object getInstance(java.lang.String,java.lang.Class)
org.jaudiotagger.tag.wav.WavTag: void syncTagBeforeWrite()
com.google.android.material.chip.Chip: void setInternalOnCheckedChangeListener(com.google.android.material.internal.MaterialCheckable$OnCheckedChangeListener)
org.simpleframework.xml.core.Template: Template()
com.umeng.umzid.c: void c(android.content.Context,java.lang.String)
com.google.android.material.search.SearchView: void setStatusBarSpacerEnabledInternal(boolean)
org.simpleframework.xml.stream.StreamReader$Entry: java.lang.String getValue()
androidx.core.view.GravityCompat$Api17Impl: void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
com.tencent.bugly.proguard.as: com.tencent.bugly.crashreport.crash.CrashDetailBean a(android.database.Cursor)
com.umeng.analytics.pro.l: boolean e()
nl.adaptivity.xmlutil.serialization.OutputKind: nl.adaptivity.xmlutil.serialization.OutputKind valueOf(java.lang.String)
com.google.android.material.bottomsheet.BottomSheetDragHandleView: android.view.View getParentView(android.view.View)
com.tencent.mm.opensdk.openapi.MMSharedPreferences: long getLong(java.lang.String,long)
com.caij.puremusic.drive.model.Metadata: java.lang.String getGuid()
com.caij.puremusic.drive.model.PlayListSubsonicResponse: boolean equals(java.lang.Object)
com.google.common.collect.MapMakerInternalMap$Strength: MapMakerInternalMap$Strength(java.lang.String,int,com.google.common.collect.MapMakerInternalMap$1)
org.simpleframework.xml.core.Group: org.simpleframework.xml.core.LabelMap getElements()
com.caij.puremusic.drive.model.Response: void write$Self(com.caij.puremusic.drive.model.Response,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
org.jaudiotagger.audio.dsf.FmtChunk: org.jaudiotagger.audio.dsf.FmtChunk readChunkHeader(java.nio.ByteBuffer)
org.simpleframework.xml.core.ExtractorFactory$ElementMapExtractor: java.lang.Class getType(org.simpleframework.xml.ElementMap)
com.tencent.bugly.proguard.r: void a(int,boolean)
org.jaudiotagger.utils.tree.TreeModel: java.lang.Object getChild(java.lang.Object,int)
StatusBarLyric.API.StatusBarLyric: void stopLyric()
com.caij.puremusic.db.model.Song: long component5()
org.jaudiotagger.tag.id3.framebody.FrameBodyXSOP: FrameBodyXSOP(byte,java.lang.String)
org.jaudiotagger.tag.id3.ID3v23Tag: java.nio.ByteBuffer writeHeaderToBuffer(int,int)
com.umeng.commonsdk.statistics.common.DeviceConfig: int[] getResolutionArray(android.content.Context)
org.jaudiotagger.audio.mp4.ChunkReader: int size()
com.umeng.analytics.pro.o: void b(android.content.Context)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getContentDescription(android.view.MenuItem)
androidx.appcompat.view.ContextThemeWrapper$Api17Impl: android.content.Context createConfigurationContext(androidx.appcompat.view.ContextThemeWrapper,android.content.res.Configuration)
com.caij.puremusic.db.model.ServerAudioFormatQueries: void insert(com.caij.puremusic.db.model.ServerAudioFormat)
com.caij.puremusic.drive.model.JellyfinLoginResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.JellyfinLoginResponse)
org.jaudiotagger.audio.AudioFile: java.lang.String getBaseFilename(java.io.File)
com.tencent.bugly.proguard.aa: void b(java.lang.String,java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: void setTime(java.lang.String)
org.simpleframework.xml.core.ElementUnionLabel: org.simpleframework.xml.strategy.Type getType(java.lang.Class)
com.caij.puremusic.db.model.ServerSongCoverQueries$insert$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.jcodec.containers.mp4.boxes.MovieFragmentBox: java.lang.String fourcc()
org.jaudiotagger.tag.id3.ID3v24Frame$StatusFlags: ID3v24Frame$StatusFlags(org.jaudiotagger.tag.id3.ID3v24Frame)
com.tencent.mm.opensdk.modelmsg.WXEmojiSharedObject: void serialize(android.os.Bundle)
org.jaudiotagger.audio.generic.GenericAudioHeader: void setVariableBitRate(boolean)
com.umeng.analytics.pro.aj: aj()
androidx.fragment.app.Fragment: void performDestroy()
org.simpleframework.xml.core.Reflector: boolean isAcronym(char[])
org.simpleframework.xml.core.TemplateLabel: boolean isText()
org.jaudiotagger.audio.mp3.MP3File: java.lang.String displayStructureAsPlainText()
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: BottomSheetBehavior$SavedState(android.os.Parcel)
org.jcodec.containers.mp4.MP4Util: org.jcodec.containers.mp4.boxes.MovieBox parseMovie(java.io.File)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: java.util.List getPrincipalCollectionSet(java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyAPIC: FrameBodyAPIC(byte,java.lang.String,byte,java.lang.String,byte[])
com.thegrizzlylabs.sardineandroid.DavAce: com.thegrizzlylabs.sardineandroid.DavPrincipal getPrincipal()
com.umeng.analytics.Gender$2: java.lang.String toString()
com.caij.puremusic.adapter.album.AlbumCoverPagerAdapter$AlbumCoverFragment: AlbumCoverPagerAdapter$AlbumCoverFragment()
com.caij.puremusic.db.model.SongQueries: com.caij.puremusic.db.model.Song$Adapter access$getSongAdapter$p(com.caij.puremusic.db.model.SongQueries)
org.jcodec.containers.mp4.boxes.TrackExtendsBox: int getTrackId()
com.tencent.bugly.proguard.bf: java.lang.Thread e()
org.jaudiotagger.tag.id3.framebody.FrameBodyTRCK: FrameBodyTRCK()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.google.common.reflect.Types$JavaVersion$2: Types$JavaVersion$2(java.lang.String,int)
org.jaudiotagger.tag.TagField: java.lang.String toString()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.umeng.analytics.process.c: c()
com.umeng.analytics.pro.bu: com.umeng.analytics.pro.bq p()
org.simpleframework.xml.core.CompositeArray: void read(org.simpleframework.xml.stream.InputNode,java.lang.Object,int)
org.simpleframework.xml.stream.DocumentReader: org.simpleframework.xml.stream.EventNode peek()
com.tencent.bugly.proguard.r: boolean b(boolean)
com.tencent.mm.opensdk.diffdev.DiffDevOAuthFactory: com.tencent.mm.opensdk.diffdev.IDiffDevOAuth getDiffDevOAuth(int)
org.jaudiotagger.tag.mp4.field.Mp4TagReverseDnsField: byte[] getDataBytes()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataCueSheet: MetadataBlockDataCueSheet(org.jaudiotagger.audio.flac.metadatablock.MetadataBlockHeader,java.nio.channels.FileChannel)
com.caij.puremusic.db.model.PlaylistEntityQueries$searchPlaylistByName$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.tag.datatype.PartOfSet$PartOfSetValue: void initFromValue(java.lang.String)
com.umeng.commonsdk.statistics.proto.d: boolean h()
com.caij.puremusic.drive.model.AlbumItem: long getRunTimeTicks()
org.jaudiotagger.audio.wav.WavOptions: org.jaudiotagger.audio.wav.WavOptions[] values()
org.jaudiotagger.tag.id3.ID3v2ChapterFrames: org.jaudiotagger.tag.id3.ID3v2ChapterFrames getInstanceOf()
com.umeng.commonsdk.statistics.proto.b: com.umeng.commonsdk.statistics.proto.b a(int)
com.tencent.mm.opensdk.modelbiz.JoinChatroom$Req: void toBundle(android.os.Bundle)
com.caij.puremusic.network.model.LastFmArtist$Artist$Stats: java.lang.String getPlaycount()
org.jaudiotagger.audio.asf.data.ChunkContainer: java.lang.String prettyPrint(java.lang.String,java.lang.String)
com.caij.puremusic.drive.model.Metadata: java.lang.String toString()
com.caij.puremusic.drive.model.PlaylistsMediaContainer: java.lang.String toString()
com.caij.puremusic.drive.model.Type$Companion: Type$Companion()
org.jaudiotagger.audio.AudioFileFilter: AudioFileFilter(boolean)
com.thegrizzlylabs.sardineandroid.model.Grant: java.util.List getContent()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
com.alipay.apmobilesecuritysdk.b.a: int b()
com.umeng.commonsdk.statistics.common.b: b()
androidx.core.view.ViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
org.simpleframework.xml.core.AttributeLabel: java.lang.String getOverride()
com.umeng.commonsdk.statistics.common.DataHelper: byte[] decrypt(byte[],byte[])
com.thegrizzlylabs.sardineandroid.model.Source: java.util.List getLink()
org.jaudiotagger.tag.datatype.StringDateTime: StringDateTime(org.jaudiotagger.tag.datatype.StringDateTime)
org.simpleframework.xml.stream.CamelCaseBuilder$Element: void parse(char[],int,int)
com.caij.puremusic.db.model.SongQueries$delete$2: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSOA: FrameBodyTSOA(java.nio.ByteBuffer,int)
com.tencent.bugly.proguard.m: void a(com.tencent.bugly.proguard.l)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: org.jaudiotagger.tag.TagField createField(java.lang.String,java.lang.String)
org.simpleframework.xml.stream.Indenter$Cache: void set(int,java.lang.String)
com.tencent.bugly.proguard.ap: java.util.ArrayList a(android.content.Context,java.lang.String[])
org.jaudiotagger.tag.lyrics3.FieldFrameBodyEAL: FieldFrameBodyEAL(org.jaudiotagger.tag.lyrics3.FieldFrameBodyEAL)
com.umeng.analytics.pro.bc: short a()
com.caij.puremusic.db.model.AlbumQueries: app.cash.sqldelight.db.SqlDriver access$getDriver(com.caij.puremusic.db.model.AlbumQueries)
org.jcodec.containers.mp4.Boxes: void override(java.lang.String,java.lang.Class)
com.caij.puremusic.db.model.FolderQueries$SelectByIdQuery: void addListener(app.cash.sqldelight.Query$Listener)
org.jaudiotagger.audio.generic.AbstractTag: void addField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.appcompat.widget.Toolbar$Api33Impl: void tryUnregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
com.caij.puremusic.db.model.ServerArtistCoverQueries: void deleteSongBySource(long)
com.tencent.mm.opensdk.modelmsg.WXMusicObject: boolean checkArgs()
com.tencent.bugly.proguard.k: java.lang.String b(int,boolean)
com.caij.puremusic.db.model.FolderQueries$deleteById$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.simpleframework.xml.core.TreeModel: org.simpleframework.xml.core.ModelMap getModels()
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
org.jcodec.containers.mp4.boxes.Header: org.jcodec.containers.mp4.boxes.Header read(java.nio.ByteBuffer)
androidx.constraintlayout.motion.widget.MotionLayout$TransitionState: MotionLayout$TransitionState(java.lang.String,int)
org.jaudiotagger.tag.id3.framebody.FrameBodyTRSN: FrameBodyTRSN()
nl.adaptivity.xmlutil.serialization.OutputKind: nl.adaptivity.xmlutil.serialization.OutputKind[] values()
com.umeng.analytics.pro.bo$a: bo$a()
com.alipay.android.phone.mrpc.core.k: long a(java.lang.String)
com.caij.puremusic.drive.model.Metadata: java.lang.String component7()
org.jcodec.containers.mp4.boxes.AudioSampleEntry: int getBytesPerFrame()
com.caij.puremusic.db.model.PlaylistEntityQueries$CheckPlaylistExistsQuery: long getPlayListId()
androidx.viewpager.widget.ViewPager: int getPageMargin()
org.jaudiotagger.tag.mp4.Mp4Tag: boolean hasField(org.jaudiotagger.tag.mp4.Mp4FieldKey)
com.google.android.material.navigation.NavigationBarMenuView: void setItemBackground(android.graphics.drawable.Drawable)
com.tencent.bugly.proguard.al: boolean d(java.lang.String,java.lang.Object[])
com.google.android.material.chip.Chip: void setLines(int)
org.jaudiotagger.tag.id3.ID3v24Tag: byte getRevision()
com.umeng.commonsdk.statistics.noise.Defcon: long getRetryInterval()
com.google.android.material.textfield.TextInputLayout: void setCounterTextColor(android.content.res.ColorStateList)
org.jaudiotagger.audio.ogg.util.VorbisSetupHeader: boolean isValid()
org.jaudiotagger.tag.id3.ID3v22Tag: ID3v22Tag(java.nio.ByteBuffer)
com.caij.puremusic.drive.model.EmbyFoldersResponse: java.util.List getItems()
org.jcodec.containers.mp4.MP4Util: void writeMovieToFile(java.io.File,org.jcodec.containers.mp4.boxes.MovieBox)
com.google.android.material.textfield.TextInputLayout: void setStartIconMinSize(int)
org.jaudiotagger.audio.SupportedFileFormat$2: SupportedFileFormat$2(java.lang.String,int,java.lang.String)
com.umeng.commonsdk.framework.UMEnvelopeBuild: org.json.JSONObject buildZeroEnvelopeWithExtHeader(android.content.Context,org.json.JSONObject,org.json.JSONObject,java.lang.String)
com.caij.puremusic.network.model.SearchResponse: com.caij.puremusic.network.model.ArtistWrapper component3()
com.google.android.material.chip.Chip: void setTextAppearance(com.google.android.material.resources.TextAppearance)
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: void setTrackId(int)
com.umeng.commonsdk.utils.UMUtils: java.lang.String getRegisteredOperator(android.content.Context)
com.caij.puremusic.drive.model.Media: int component3()
org.jaudiotagger.tag.datatype.HashMapInterface: java.util.Map getValueToKey()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: boolean isEmpty()
org.simpleframework.xml.core.Model: void register(org.simpleframework.xml.core.Label)
androidx.appcompat.widget.Toolbar: void setBackInvokedCallbackEnabled(boolean)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
com.umeng.commonsdk.statistics.proto.a$b: com.umeng.commonsdk.statistics.proto.a$a a()
com.caij.puremusic.drive.model.PlayListsSubsonicResponse: PlayListsSubsonicResponse(java.lang.String,java.lang.String,com.caij.puremusic.drive.model.PlayLists)
org.simpleframework.xml.Serializer: void write(java.lang.Object,java.io.File)
org.jaudiotagger.audio.asf.data.AudioStreamChunk: void setBlockAlignment(long)
com.umeng.commonsdk.UMConfigure: boolean needSendZcfgEnv(android.content.Context)
org.simpleframework.xml.core.ElementParameter: int getIndex()
com.umeng.analytics.pro.e$d$a: e$d$a()
org.jaudiotagger.audio.iff.ChunkHeader: boolean readHeader(java.io.RandomAccessFile)
com.alipay.android.phone.mrpc.core.RpcException: RpcException(java.lang.Integer,java.lang.String,java.lang.Throwable)
com.caij.puremusic.db.model.SongQueries$songsByNameAlbum$2: com.caij.puremusic.db.model.Song invoke(long,java.lang.String,int,int,long,java.lang.String,java.lang.String,long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,long,long)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSOP: FrameBodyTSOP(byte,java.lang.String)
org.simpleframework.xml.stream.OutputElement: java.lang.String getPrefix()
com.caij.puremusic.db.model.ArtistQueries: app.cash.sqldelight.Query searchArtistByName(java.lang.String,kotlin.jvm.functions.Function2)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSOP: FrameBodyTSOP(java.nio.ByteBuffer,int)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.caij.puremusic.drive.model.AlbumResponse$$serializer: com.caij.puremusic.drive.model.AlbumResponse deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.drive.model.GoogleDriveFileResponse: com.caij.puremusic.drive.model.GoogleDriveFileResponse copy(java.lang.String,java.lang.String,boolean,java.util.List)
com.umeng.analytics.filter.EventList: boolean onFileLock(java.lang.String)
com.tencent.mm.opensdk.modelbiz.SubscribeMessage: SubscribeMessage()
com.caij.puremusic.drive.model.FMediaContainer$$serializer: FMediaContainer$$serializer()
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultKeySelector$1: FlowKt__DistinctKt$defaultKeySelector$1()
com.caij.puremusic.drive.model.SubsonicPlaylist: java.lang.Boolean getPublic()
androidx.appcompat.app.AppCompatDialog: androidx.appcompat.app.AppCompatDelegate getDelegate()
com.caij.puremusic.db.model.FolderQueries$selectById$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
com.tencent.mm.opensdk.modelmsg.WXFileObject: void setFilePath(java.lang.String)
com.google.android.material.navigation.NavigationBarView: void setItemPaddingBottom(int)
androidx.activity.ComponentDialog: androidx.lifecycle.LifecycleRegistry getLifecycleRegistry()
nl.adaptivity.xmlutil.EventType: EventType(java.lang.String,int)
org.jaudiotagger.audio.mp4.Flatten: void writeHeader(org.jcodec.containers.mp4.boxes.Header,java.nio.channels.SeekableByteChannel)
com.caij.puremusic.db.model.SongQueries$songsByAlbumId$1: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.db.model.PlaylistEntityQueries$getPlaylistEntityById$2: PlaylistEntityQueries$getPlaylistEntityById$2()
org.jaudiotagger.tag.id3.ID3v24Tag: void write(java.nio.channels.WritableByteChannel,int)
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgramEnvironment$Req: int getType()
com.tencent.mm.opensdk.modelbiz.CreateChatroom$Resp: void fromBundle(android.os.Bundle)
com.alipay.android.phone.mrpc.core.l: com.alipay.android.phone.mrpc.core.b a()
com.umeng.analytics.pro.bb: bb(java.lang.Throwable)
com.caij.puremusic.lyrics.CoverLrcView: float getLrcWidth()
org.simpleframework.xml.core.MethodPartFactory: java.lang.Class getParameterType(java.lang.reflect.Method)
org.jaudiotagger.tag.id3.AbstractID3v2Frame: AbstractID3v2Frame()
org.jaudiotagger.tag.datatype.TextEncodedStringNullTerminated: java.nio.charset.Charset getTextEncodingCharSet()
org.simpleframework.xml.core.PrimitiveScanner: org.simpleframework.xml.Order getOrder()
org.simpleframework.xml.core.ElementUnionLabel: java.lang.String[] getPaths()
com.google.common.hash.LittleEndianByteArray$UnsafeByteArray$1: void putLongLittleEndian(byte[],int,long)
com.umeng.analytics.process.c: android.database.sqlite.SQLiteDatabase a(java.lang.String)
com.caij.puremusic.drive.model.User$$serializer: User$$serializer()
org.simpleframework.xml.core.DetailScanner: boolean isEmpty(java.lang.String)
com.umeng.commonsdk.statistics.noise.ABTest: java.lang.String toString()
com.caij.puremusic.db.model.SongEntityQueries$GetPlaylistLastAddSongQuery$execute$1: SongEntityQueries$GetPlaylistLastAddSongQuery$execute$1(com.caij.puremusic.db.model.SongEntityQueries$GetPlaylistLastAddSongQuery)
com.umeng.commonsdk.framework.a: void a(int)
code.name.monkey.appthemehelper.common.prefs.BorderCircleView: void setBorderColor(int)
com.tencent.bugly.crashreport.CrashReport: void startCrashReport()
com.umeng.analytics.pro.ch: boolean a()
org.jaudiotagger.tag.datatype.AbstractStringStringValuePair: java.lang.String getIdForValue(java.lang.String)
org.jcodec.containers.mp4.boxes.Box: boolean containsBox(org.jcodec.containers.mp4.boxes.NodeBox,java.lang.String)
org.jaudiotagger.audio.generic.GenericAudioHeader: void setChannelNumber(int)
com.umeng.commonsdk.stateless.UMSLEnvelopeBuild: UMSLEnvelopeBuild()
org.jcodec.containers.mp4.MP4Util: org.jcodec.containers.mp4.MP4Util$Atom findFirstAtom(java.lang.String,java.nio.channels.FileChannel)
com.umeng.commonsdk.statistics.noise.Defcon: int getLevel()
com.umeng.analytics.pro.m: void a(android.content.Context)
org.jaudiotagger.tag.id3.AggregatedFrame: void setEncoding(java.nio.charset.Charset)
com.caij.puremusic.drive.model.ArtistItem: java.lang.Long component5()
com.thegrizzlylabs.sardineandroid.DavResource: java.net.URI getHref()
com.google.android.material.progressindicator.BaseProgressIndicator: void setProgress(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyPIC: java.lang.String getImageUrl()
com.umeng.analytics.pro.o$c: com.umeng.commonsdk.statistics.common.ReportPolicy$ReportStrategy b(int,int)
com.google.android.material.slider.BaseSlider: void setThumbTintList(android.content.res.ColorStateList)
org.simpleframework.xml.util.Dictionary: Dictionary()
org.simpleframework.xml.core.AttributeLabel: java.lang.String getEmpty(org.simpleframework.xml.core.Context)
org.jaudiotagger.tag.lyrics3.Lyrics3v2Field: Lyrics3v2Field(java.nio.ByteBuffer)
com.tencent.bugly.proguard.aa: java.lang.String g()
org.jcodec.containers.mp4.boxes.ClearApertureBox: float getHeight()
org.jaudiotagger.audio.asf.io.AsfExtHeaderReader: org.jaudiotagger.audio.asf.data.ChunkContainer createContainer(long,java.math.BigInteger,java.io.InputStream)
org.jaudiotagger.audio.asf.io.CountingInputStream: void reset()
com.caij.puremusic.drive.model.OneDriveFileResponse: OneDriveFileResponse(int,java.lang.String,int,java.util.List,kotlinx.serialization.internal.SerializationConstructorMarker)
com.tencent.mm.opensdk.modelbiz.JoinChatroom$Req: boolean checkArgs()
com.google.common.base.Predicates$ObjectPredicate$1: Predicates$ObjectPredicate$1(java.lang.String,int)
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
com.umeng.commonsdk.debug.E: void log(java.lang.String,java.lang.String)
com.umeng.analytics.pro.ao: void a(java.lang.String,java.lang.String)
org.jaudiotagger.tag.id3.ID3v24FieldKey: java.lang.String getFrameId()
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: void unsetEncryption()
org.simpleframework.xml.core.TemplateLabel: java.lang.Object getKey()
org.jaudiotagger.audio.SupportedFileFormat$16: org.jaudiotagger.tag.Tag createDefaultTag()
com.caij.puremusic.drive.model.EmbyFoldersResponse$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.tencent.bugly.BuglyStrategy: java.lang.String getDeviceID()
com.caij.puremusic.network.model.Image: java.lang.String component1()
com.caij.puremusic.model.Data: int getNbFan()
org.jaudiotagger.tag.mp4.Mp4ContentTypeValue: org.jaudiotagger.tag.mp4.Mp4ContentTypeValue valueOf(java.lang.String)
android.support.v4.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
com.tencent.bugly.proguard.ae: byte[] a(java.lang.Object)
org.jaudiotagger.audio.asf.io.StreamBitratePropertiesReader: org.jaudiotagger.audio.asf.data.GUID[] getApplyingIds()
com.caij.puremusic.drive.model.OneDriveItem: java.lang.String component5()
com.caij.puremusic.drive.model.MediaStream: boolean component3()
com.caij.puremusic.db.model.ServerAudioFormatQueries$GetByIdQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.google.android.material.navigationrail.NavigationRailMenuView: void setMenuGravity(int)
com.caij.puremusic.drive.model.PlexArtistsResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.PlexArtistsResponse)
com.bumptech.glide.GeneratedAppGlideModuleImpl: GeneratedAppGlideModuleImpl(android.content.Context)
org.jaudiotagger.utils.IntArrayList: boolean contains(int)
org.jaudiotagger.tag.id3.ID3v23Tag: boolean equals(java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyPIC: boolean isImageUrl()
com.afollestad.materialdialogs.WhichButton: WhichButton(java.lang.String,int,int)
org.jaudiotagger.utils.tree.DefaultTreeModel: void valueForPathChanged(org.jaudiotagger.utils.tree.TreePath,java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyETCO: java.util.List getTimestamps(int[])
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)
com.google.android.material.button.MaterialButton: void setCornerRadius(int)
org.simpleframework.xml.stream.OutputElement: void commit()
org.jaudiotagger.tag.asf.AsfTag: org.jaudiotagger.tag.TagField getFirstField(org.jaudiotagger.tag.FieldKey)
org.simpleframework.xml.core.CompositeInlineList: boolean validate(org.simpleframework.xml.stream.InputNode)
com.caij.puremusic.drive.model.MediaContainer: com.caij.puremusic.drive.model.MediaContainer copy(int,java.lang.String,java.util.List)
org.simpleframework.xml.core.ObjectInstance: boolean isReference()
com.google.android.material.button.MaterialButton: android.text.Layout$Alignment getGravityTextAlignment()
com.thegrizzlylabs.sardineandroid.util.EntityWithAnyElementConverter: com.thegrizzlylabs.sardineandroid.model.EntityWithAnyElement read(org.simpleframework.xml.stream.InputNode)
androidx.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
com.tencent.bugly.proguard.aa: java.lang.String o()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
com.umeng.commonsdk.statistics.common.HelperUtils: java.lang.String MD5(java.lang.String)
androidx.core.view.ViewCompat$Api17Impl: android.view.Display getDisplay(android.view.View)
com.thegrizzlylabs.sardineandroid.Sardine: com.thegrizzlylabs.sardineandroid.DavQuota getQuota(java.lang.String)
com.tencent.bugly.proguard.ab: java.lang.String m()
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$1: boolean hasMoreElements()
com.thegrizzlylabs.sardineandroid.model.Propstat: void setResponsedescription(java.lang.String)
androidx.appcompat.widget.SwitchCompat: int getSwitchMinWidth()
org.simpleframework.xml.util.Resolver: Resolver()
com.caij.puremusic.db.model.PlaybackSong$Adapter: PlaybackSong$Adapter(app.cash.sqldelight.ColumnAdapter,app.cash.sqldelight.ColumnAdapter)
org.jaudiotagger.audio.mp3.MP3File: org.jaudiotagger.audio.mp3.MP3AudioHeader getMP3AudioHeader()
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: java.lang.String getDescription()
org.jaudiotagger.tag.lyrics3.Lyrics3v2Field: int getSize()
org.simpleframework.xml.stream.Formatter: void writeProlog()
com.caij.puremusic.drive.model.AlbumMetadata: java.lang.String getThumb()
com.caij.puremusic.drive.model.Multistatus$$serializer: Multistatus$$serializer()
com.caij.puremusic.drive.model.SubsonicSong: long getDuration()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpecResource(int)
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query songsByAlumId(long,kotlin.jvm.functions.Function18)
com.caij.puremusic.db.model.SongQueries$SongsByArtistQuery: java.lang.String toString()
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: boolean isNonStandardFlags()
com.tencent.mm.opensdk.diffdev.a.d: com.tencent.mm.opensdk.diffdev.a.d valueOf(java.lang.String)
com.umeng.commonsdk.statistics.common.ULog: void i(java.lang.Throwable)
com.tencent.mm.opensdk.diffdev.a.b$a: com.tencent.mm.opensdk.diffdev.a.b$a a(byte[])
android.support.v4.media.AudioAttributesImplApi26Parcelizer: void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel)
com.tencent.bugly.proguard.aa: java.lang.String G()
org.simpleframework.xml.stream.Node: java.lang.String getName()
com.tencent.mm.opensdk.modelbiz.SubscribeMiniProgramMsg$Req: SubscribeMiniProgramMsg$Req()
org.simpleframework.xml.core.Composite: java.lang.Object writeReplace(java.lang.Object)
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.caij.puremusic.drive.model.Directory: boolean equals(java.lang.Object)
org.jaudiotagger.audio.AudioFile: java.io.File getFile()
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean sendInvoiceAuthInsert(android.content.Context,com.tencent.mm.opensdk.modelbase.BaseReq)
com.tencent.mm.opensdk.modelmsg.WXVideoFileObject: void unserialize(android.os.Bundle)
com.caij.puremusic.drive.model.SongItem: java.lang.String component2()
org.jaudiotagger.tag.TagOptionSingleton: boolean isPadNumbers()
androidx.core.app.RemoteInput$Api26Impl: android.app.RemoteInput$Builder setAllowDataType(android.app.RemoteInput$Builder,java.lang.String,boolean)
org.jaudiotagger.tag.datatype.StringDate: void setValue(java.lang.Object)
org.jaudiotagger.audio.flac.FlacTagCreator: java.lang.Object convert(org.jaudiotagger.tag.Tag,int)
com.caij.puremusic.db.model.AlbumQueries$SearchAlbumsByNameQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
androidx.fragment.app.Fragment: void setPopDirection(boolean)
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
androidx.fragment.app.Fragment: void setHasOptionsMenu(boolean)
org.jaudiotagger.utils.tree.DefaultTreeModel: void nodeStructureChanged(org.jaudiotagger.utils.tree.TreeNode)
org.jaudiotagger.tag.reference.ISOCountry: java.lang.String[] getDescriptionsAsArray()
com.tencent.bugly.crashreport.BuglyLog: void w(java.lang.String,java.lang.String)
com.umeng.umzid.R: R()
org.jaudiotagger.tag.mp4.Mp4Tag: boolean isAllowedEncoding(java.nio.charset.Charset)
org.simpleframework.xml.core.PathParser: void path()
com.umeng.commonsdk.statistics.internal.StatTracer: void logRequestEnd()
com.tencent.bugly.proguard.aa: void c()
org.simpleframework.xml.core.KeyBuilder: KeyBuilder(org.simpleframework.xml.core.Label)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$PostorderEnumeration: org.jaudiotagger.utils.tree.TreeNode nextElement()
org.jaudiotagger.tag.id3.framebody.FrameBodyASPI: java.lang.String getIdentifier()
org.jaudiotagger.tag.datatype.PartOfSet$PartOfSetValue: void setTotal(java.lang.Integer)
org.jaudiotagger.audio.generic.AudioFileWriter: void delete(org.jaudiotagger.tag.Tag,java.io.RandomAccessFile,java.io.RandomAccessFile)
com.umeng.commonsdk.statistics.common.ULog: void v(java.lang.String,java.lang.Object[])
org.simpleframework.xml.core.ObjectScanner: java.util.List getSignatures()
com.caij.puremusic.db.model.Song$Adapter: app.cash.sqldelight.ColumnAdapter getYearAdapter()
com.umeng.analytics.pro.as: boolean a(int,int)
org.jaudiotagger.tag.aiff.AiffTag: void setExistingId3Tag(boolean)
com.caij.puremusic.views.StatusBarView: StatusBarView(android.content.Context,android.util.AttributeSet)
com.thegrizzlylabs.sardineandroid.model.Locktype: void setWrite(com.thegrizzlylabs.sardineandroid.model.Write)
org.jaudiotagger.audio.asf.data.MetadataDescriptor: int writeInto(java.io.OutputStream,org.jaudiotagger.audio.asf.data.ContainerType)
org.jaudiotagger.audio.mp3.MPEGFrameHeader: void setLayer()
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: void launchWXIfNeed()
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
org.simpleframework.xml.core.PathParser: java.lang.String getAttributePath(java.lang.String,java.lang.String)
org.jaudiotagger.tag.datatype.NumberHashMap: java.util.Map getKeyToValue()
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: boolean isLossless()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
com.caij.puremusic.network.model.LastFmTrack$Track$Album: LastFmTrack$Track$Album()
org.simpleframework.xml.core.DefaultScanner: org.simpleframework.xml.Order getOrder()
org.simpleframework.xml.core.Schema: org.simpleframework.xml.core.Caller getCaller()
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
com.caij.puremusic.db.model.SongQueries$getAlbumSongCount$1: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.drive.model.AlbumItem: java.util.List getParentBackdropImageTags()
com.google.android.material.appbar.MaterialToolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int getLayer()
com.caij.puremusic.drive.model.JellyfinSongListResponse$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.drive.model.AlbumListResponse: AlbumListResponse(com.caij.puremusic.drive.model.SubsonicResponse,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.umeng.analytics.pro.p: void a(com.umeng.analytics.pro.t)
com.tencent.bugly.proguard.aj: void a(java.lang.String)
com.google.android.material.search.SearchBar: void setStrokeColor(int)
com.tencent.mm.opensdk.channel.a.a: boolean a(android.content.Context,com.tencent.mm.opensdk.channel.a.a$a)
org.simpleframework.xml.core.KeyBuilder$KeyType: org.simpleframework.xml.core.KeyBuilder$KeyType valueOf(java.lang.String)
org.jaudiotagger.audio.generic.Utils: short getShortBE(java.nio.ByteBuffer,int,int)
com.caij.puremusic.drive.model.SubsonicResponse$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
org.jaudiotagger.tag.mp4.Mp4RatingValue: java.lang.String getDescription()
org.jaudiotagger.tag.id3.ID3v23Frame$EncodingFlags: void setCompression()
com.caij.puremusic.drive.model.ADriveItem: java.lang.String toString()
org.simpleframework.xml.convert.ConverterScanner: org.simpleframework.xml.convert.Convert getConvert(org.simpleframework.xml.strategy.Type)
org.jaudiotagger.tag.id3.framebody.FrameBodyUSLT: java.lang.String getDescription()
com.google.android.material.checkbox.MaterialCheckBox: void setChecked(boolean)
com.tencent.bugly.crashreport.CrashReport$a: java.lang.CharSequence c()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void replaceFile(java.io.File,java.io.File)
org.jaudiotagger.audio.mp4.Chunk: long getSize()
com.umeng.commonsdk.statistics.idtracking.ImprintHandler$a: void b(com.umeng.commonsdk.statistics.proto.d)
com.caij.puremusic.model.DriveFileParcelable: int describeContents()
com.umeng.commonsdk.stateless.c: c(android.content.Context)
com.caij.puremusic.db.model.SongQueries$songsByAlumId$1: SongQueries$songsByAlumId$1(kotlin.jvm.functions.Function18,com.caij.puremusic.db.model.SongQueries)
org.jaudiotagger.tag.images.AndroidArtwork: AndroidArtwork()
org.simpleframework.xml.core.TreeModel: void register(org.simpleframework.xml.core.Label)
com.caij.puremusic.views.ColorIconsImageView: ColorIconsImageView(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.tag.PaddingException: PaddingException(java.lang.Throwable)
com.thegrizzlylabs.sardineandroid.DavPrincipal: DavPrincipal(com.thegrizzlylabs.sardineandroid.DavPrincipal$PrincipalType,java.lang.String,java.lang.String)
org.simpleframework.xml.core.EmptyExpression: java.lang.String getLast()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockHeader: java.lang.String toString()
com.caij.puremusic.model.Genre: int component3()
com.umeng.commonsdk.statistics.idtracking.Envelope: byte[] genCheckSum()
androidx.preference.SwitchPreferenceCompat: SwitchPreferenceCompat(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.core.content.ContextCompat$Api24Impl: android.content.Context createDeviceProtectedStorageContext(android.content.Context)
org.jcodec.containers.mp4.boxes.EsdsBox$DecoderSpecific: EsdsBox$DecoderSpecific(java.nio.ByteBuffer)
org.jcodec.containers.mp4.boxes.EsdsBox: org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile getAudioProfile()
com.tencent.bugly.proguard.bp: void a(java.lang.StringBuilder,int)
com.caij.puremusic.drive.model.JellyfinSongListResponse: JellyfinSongListResponse(java.util.List,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
org.jaudiotagger.audio.wav.chunk.WavListChunk: boolean readChunk()
org.jaudiotagger.audio.wav.WavTagWriter: void writeInfoDataToFile(java.nio.channels.FileChannel,java.nio.ByteBuffer)
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
org.jaudiotagger.audio.asf.data.LanguageList: void addLanguage(java.lang.String)
com.thegrizzlylabs.sardineandroid.DavResource: java.util.Map access$800(com.thegrizzlylabs.sardineandroid.DavResource,com.thegrizzlylabs.sardineandroid.model.Response)
com.caij.puremusic.drive.model.Metadata: java.lang.String component6()
org.jaudiotagger.tag.id3.ID3v1Tag: void deleteField(java.lang.String)
com.umeng.commonsdk.statistics.idtracking.Envelope: byte[] genGuid(byte[],int)
com.google.android.material.search.SearchBar: void setSubtitle(java.lang.CharSequence)
com.google.android.material.bottomsheet.BottomSheetBehavior: void setHideable(boolean)
androidx.constraintlayout.widget.ConstraintLayout: void setOptimizationLevel(int)
com.tencent.mm.opensdk.modelbiz.WXLaunchWxaRedirectingPage$Resp: boolean checkArgs()
org.jaudiotagger.audio.mp3.MP3File: byte[] getHash(java.lang.String)
org.repackage.com.vivo.identifier.IdentifierIdClient: java.lang.String a(java.lang.String)
org.jaudiotagger.audio.opus.OpusFileReader: void summarizeOggPageHeaders(java.io.File)
com.umeng.analytics.pro.r: void a(org.json.JSONObject,android.content.Context)
com.caij.puremusic.db.model.PlayCountEntityQueries$playCountSongs$1: PlayCountEntityQueries$playCountSongs$1(kotlin.jvm.functions.Function3)
com.umeng.commonsdk.statistics.common.ULog: void v(java.util.Locale,java.lang.String,java.lang.Object[])
org.repackage.a.a.a.a.b: void onServiceDisconnected(android.content.ComponentName)
org.simpleframework.xml.core.Creator: java.lang.Object getInstance()
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
org.jaudiotagger.tag.id3.ID3v1Tag: void setField(org.jaudiotagger.tag.images.Artwork)
code.name.monkey.appthemehelper.common.prefs.supportv7.ATEColorPreference: ATEColorPreference(android.content.Context)
com.caij.puremusic.db.model.SongQueries$songsByArtistIdWithLike$2: SongQueries$songsByArtistIdWithLike$2()
com.caij.puremusic.db.model.SongQueries$songsOrderDateAdd$2: com.caij.puremusic.db.model.Song invoke(long,java.lang.String,int,int,long,java.lang.String,java.lang.String,long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,long,long)
org.jcodec.containers.mp4.boxes.TrakBox: void setClipRect(short,short,short,short)
org.simpleframework.xml.core.PathParser: boolean isDigit(char)
org.jaudiotagger.tag.id3.framebody.FrameBodyWXXX: FrameBodyWXXX(byte,java.lang.String,java.lang.String)
org.simpleframework.xml.core.Variable$Adapter: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.lang.Object)
com.afollestad.materialdialogs.internal.main.DialogLayout: com.afollestad.materialdialogs.internal.button.DialogActionButtonLayout getButtonsLayout()
com.tencent.mm.opensdk.modelbiz.AddCardToWXCardPackage$Req: AddCardToWXCardPackage$Req()
com.caij.puremusic.drive.model.PlaylistResponse: int hashCode()
com.caij.puremusic.drive.model.PlayListsResponse: PlayListsResponse(com.caij.puremusic.drive.model.PlayListsSubsonicResponse)
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: java.lang.String getTokenFromWX(android.content.Context)
org.jaudiotagger.tag.id3.ID3v23Tag: org.jaudiotagger.tag.id3.ID3Frames getID3Frames()
com.thegrizzlylabs.sardineandroid.impl.handler.LockResponseHandler: LockResponseHandler()
code.name.monkey.appthemehelper.common.prefs.supportv7.ATEListPreference: ATEListPreference(android.content.Context,android.util.AttributeSet,int)
com.umeng.analytics.pro.o: org.json.JSONObject k()
com.caij.puremusic.db.model.ServerAudioFormatQueries$deleteById$1: ServerAudioFormatQueries$deleteById$1(long)
com.umeng.commonsdk.internal.c: void e(android.content.Context)
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query songsByInfo(java.lang.String,java.lang.String,java.lang.String)
com.umeng.commonsdk.statistics.proto.Gender: com.umeng.commonsdk.statistics.proto.Gender[] values()
com.caij.puremusic.db.model.AlbumQueries: app.cash.sqldelight.Query searchAlbumsByName(java.lang.String)
org.jcodec.containers.mp4.boxes.AudioSampleEntry: short getChannelCount()
com.umeng.commonsdk.statistics.proto.c: java.lang.String k()
com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback: void onLayout(android.view.View)
org.jaudiotagger.audio.aiff.AiffType: org.jaudiotagger.audio.aiff.AiffType valueOf(java.lang.String)
org.jaudiotagger.tag.wav.WavInfoTag: void addUnRecognizedField(java.lang.String,java.lang.String)
com.tencent.bugly.proguard.k: k(byte[],byte)
org.simpleframework.xml.core.StructureBuilder: org.simpleframework.xml.core.Model register(org.simpleframework.xml.core.Expression)
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: RecyclerView$Adapter$StateRestorationPolicy(java.lang.String,int)
org.jaudiotagger.audio.asf.data.AsfHeader: org.jaudiotagger.audio.asf.data.EncryptionChunk getEncryptionChunk()
org.simpleframework.xml.core.Support: org.simpleframework.xml.core.ContactList getMethods(java.lang.Class,org.simpleframework.xml.DefaultType)
com.thegrizzlylabs.sardineandroid.model.Prop: void setDisplayname(java.lang.String)
org.jaudiotagger.audio.wav.chunk.WavChunkSummary: long getStartLocationOfFirstMetadataChunk(org.jaudiotagger.tag.wav.WavTag)
com.caij.puremusic.network.model.LastFmAlbum$Album$Tag: java.lang.String getName()
org.jaudiotagger.tag.images.Artwork: void setWidth(int)
org.jaudiotagger.tag.mp4.Mp4ContentTypeValue: java.lang.String getDescription()
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
org.jcodec.containers.mp4.boxes.TrackExtendsBox: void parse(java.nio.ByteBuffer)
androidx.fragment.app.Fragment: boolean performContextItemSelected(android.view.MenuItem)
com.google.android.material.floatingactionbutton.FloatingActionButton: FloatingActionButton(android.content.Context,android.util.AttributeSet)
org.simpleframework.xml.core.ElementMapUnionLabel: java.lang.String getPath()
org.jaudiotagger.tag.id3.framebody.FrameBodyTDOR: java.lang.String getIdentifier()
com.google.android.material.bottomsheet.BottomSheetDialog: android.view.View wrapInBottomSheet(int,android.view.View,android.view.ViewGroup$LayoutParams)
com.caij.puremusic.drive.model.SubsonicPlaylist: void write$Self(com.caij.puremusic.drive.model.SubsonicPlaylist,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
org.jaudiotagger.tag.images.AndroidArtwork: int getHeight()
com.google.android.material.navigation.NavigationBarView: void setLabelVisibilityMode(int)
com.umeng.analytics.pro.g: g(com.umeng.analytics.pro.g$1)
org.simpleframework.xml.core.ClassScanner: ClassScanner(org.simpleframework.xml.core.Detail,org.simpleframework.xml.core.Support)
androidx.constraintlayout.helper.widget.Flow: void setVerticalGap(int)
com.umeng.analytics.pro.ci: boolean i()
com.umeng.analytics.pro.an: com.umeng.analytics.pro.an b(java.lang.String)
com.caij.puremusic.drive.model.PlayListSubsonicResponse$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyNumberTotal: void setupObjectList()
com.google.android.material.imageview.ShapeableImageView: int getPaddingLeft()
org.simpleframework.xml.stream.EventToken: java.lang.String getValue()
com.tencent.bugly.proguard.ai: void a(java.lang.Runnable,boolean,boolean,long)
org.simpleframework.xml.core.ClassScanner: org.simpleframework.xml.core.Function getValidate()
org.simpleframework.xml.core.AttributeParameter: AttributeParameter(java.lang.reflect.Constructor,org.simpleframework.xml.Attribute,org.simpleframework.xml.stream.Format,int)
androidx.activity.ComponentActivity$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
com.umeng.commonsdk.statistics.proto.e$c: void b(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
com.tencent.mm.opensdk.modelmsg.SendAuth$Req: SendAuth$Req(android.os.Bundle)
org.jaudiotagger.audio.mp3.MPEGFrameHeader: boolean isPadding()
com.google.android.gms.internal.play_billing.zzbt: zzbt(java.lang.String,int,int,int,com.google.android.gms.internal.play_billing.zzcj)
org.jaudiotagger.tag.id3.AbstractID3v1Tag: AbstractID3v1Tag(org.jaudiotagger.tag.id3.AbstractID3v1Tag)
org.simpleframework.xml.core.Source: org.simpleframework.xml.core.Support getSupport()
org.simpleframework.xml.core.PrimitiveList: java.lang.Object populate(org.simpleframework.xml.stream.InputNode,java.lang.Object)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$PostorderEnumeration: DefaultMutableTreeNode$PostorderEnumeration(org.jaudiotagger.utils.tree.DefaultMutableTreeNode,org.jaudiotagger.utils.tree.TreeNode)
com.tencent.bugly.proguard.af: java.net.HttpURLConnection a(java.lang.String,byte[],java.lang.String,java.util.Map)
org.simpleframework.xml.core.ExtractorFactory$ElementMapExtractor: ExtractorFactory$ElementMapExtractor(org.simpleframework.xml.core.Contact,org.simpleframework.xml.ElementMapUnion,org.simpleframework.xml.stream.Format)
org.jaudiotagger.tag.asf.AsfTagBannerField: byte[] getRawImageData()
com.google.android.material.navigation.NavigationBarMenuView: void setItemPaddingBottom(int)
com.google.android.material.navigation.NavigationBarItemView: int getItemLayoutResId()
org.jaudiotagger.audio.generic.Utils: void copy(java.nio.channels.ReadableByteChannel,java.nio.channels.WritableByteChannel,long)
com.caij.puremusic.network.model.LastFmTrack$Track$Album$Attr: java.lang.String getPosition()
org.simpleframework.xml.core.TemplateParameter: boolean isText()
org.simpleframework.xml.core.ElementArrayParameter: ElementArrayParameter(java.lang.reflect.Constructor,org.simpleframework.xml.ElementArray,org.simpleframework.xml.stream.Format,int)
com.umeng.commonsdk.UMConfigureImpl: int f()
com.tencent.bugly.proguard.aj: java.lang.String b(java.lang.String)
com.caij.puremusic.dialogs.PlaybackSpeedDialog: PlaybackSpeedDialog()
com.umeng.analytics.b: void a(android.content.Context,java.lang.String,java.util.Map,long,boolean)
org.jaudiotagger.tag.TagOptionSingleton: void setId3v1SaveTrack(boolean)
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$GetByIdQuery: void addListener(app.cash.sqldelight.Query$Listener)
org.simpleframework.xml.transform.Transformer: org.simpleframework.xml.transform.Transform match(java.lang.Class)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetView(android.view.View)
com.tencent.bugly.crashreport.CrashReport: void setCrashFilter(java.lang.String)
org.jcodec.containers.mp4.Boxes: void clear()
com.google.common.reflect.TypeToken$TypeFilter: TypeToken$TypeFilter(java.lang.String,int,com.google.common.reflect.TypeToken$1)
org.jaudiotagger.audio.generic.GenericTag$GenericTagTextField: boolean isCommon()
com.umeng.analytics.pro.cf: cf()
com.tencent.mm.opensdk.modelbiz.IWXChannelJumpInfo: int type()
com.umeng.analytics.pro.m: boolean a(com.umeng.analytics.pro.m)
org.jaudiotagger.tag.id3.framebody.FrameBodySEEK: FrameBodySEEK(org.jaudiotagger.tag.id3.framebody.FrameBodySEEK)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyUnsupported: void write(java.io.RandomAccessFile)
com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()
com.tencent.mm.opensdk.diffdev.a.a: com.tencent.mm.opensdk.diffdev.a.b a(com.tencent.mm.opensdk.diffdev.a.a,com.tencent.mm.opensdk.diffdev.a.b)
org.simpleframework.xml.core.TemplateEngine: void clear()
com.google.android.material.chip.Chip: void setHideMotionSpecResource(int)
com.caij.puremusic.db.model.SongEntityQueries$GetPlaylistLastAddSongQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
org.jaudiotagger.tag.datatype.Lyrics3Line: java.lang.String getLyric()
com.caij.puremusic.drive.model.SongItem: SongItem(java.lang.String,java.lang.String,java.lang.String,long,int,boolean,java.lang.String,java.lang.String,java.util.List,java.util.List,java.lang.String,java.lang.String,java.util.List,java.util.Map,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSO2: FrameBodyTSO2()
com.umeng.analytics.filter.b: b(java.lang.String,java.lang.String)
org.jaudiotagger.tag.id3.ID3v24Tag: void addFrame(org.jaudiotagger.tag.id3.AbstractID3v2Frame)
com.caij.puremusic.db.model.Song: int hashCode()
org.simpleframework.xml.strategy.ObjectValue: java.lang.Object getValue()
com.caij.puremusic.drive.model.SubsonicPlaylist: java.lang.String component10()
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$1: org.jaudiotagger.utils.tree.TreeNode nextElement()
com.thegrizzlylabs.sardineandroid.Sardine: void setAcl(java.lang.String,java.util.List)
com.google.android.material.behavior.SwipeDismissBehavior: SwipeDismissBehavior()
com.tencent.bugly.proguard.as: void a(com.tencent.bugly.crashreport.crash.CrashDetailBean,java.util.Map)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api18Impl: boolean isInLayout(android.view.View)
com.umeng.analytics.pro.o: android.content.Context g()
com.caij.puremusic.drive.model.EmbyAlbumsResponse: EmbyAlbumsResponse(java.util.List,int,int)
com.tencent.bugly.proguard.av: boolean a(java.lang.Thread)
org.jaudiotagger.tag.id3.framebody.FrameBodyTRCK: java.lang.String getTrackNoAsText()
org.jaudiotagger.audio.dsf.DsdChunk: long getMetadataOffset()
com.umeng.commonsdk.config.FieldManager: com.umeng.commonsdk.config.FieldManager a()
com.tencent.bugly.proguard.z: java.lang.String c(android.content.Context)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$PreorderEnumeration: org.jaudiotagger.utils.tree.TreeNode nextElement()
org.jcodec.containers.mp4.boxes.TrunBox: void parse(java.nio.ByteBuffer)
org.simpleframework.xml.core.ElementMapLabel: boolean isCollection()
org.simpleframework.xml.Default: org.simpleframework.xml.DefaultType value()
com.tencent.mm.opensdk.modelmsg.WXImageObject: WXImageObject(byte[])
com.umeng.analytics.pro.au: void b(com.umeng.analytics.pro.bu)
org.jaudiotagger.tag.datatype.SynchronisedTempoCode: void readByteArray(byte[],int)
org.jcodec.containers.mp4.boxes.UrlBox: UrlBox(org.jcodec.containers.mp4.boxes.Header)
com.caij.puremusic.db.model.SongQueries$songsByTitle$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: java.lang.String lock(java.lang.String,int)
org.jaudiotagger.audio.asf.io.CountingOutputstream: CountingOutputstream(java.io.OutputStream)
com.caij.puremusic.network.model.Artist: boolean equals(java.lang.Object)
com.tencent.bugly.BuglyStrategy: com.tencent.bugly.BuglyStrategy setEnableUserInfo(boolean)
org.jaudiotagger.audio.generic.ModificationHandler: ModificationHandler()
com.umeng.commonsdk.statistics.idtracking.Envelope: byte[] toBinary()
com.google.android.material.bottomsheet.BottomSheetBehavior: float getHalfExpandedRatio()
com.umeng.commonsdk.config.g: void a(java.lang.String,java.lang.Object,java.lang.String[])
org.jaudiotagger.tag.id3.framebody.FrameBodyTMOO: FrameBodyTMOO(java.nio.ByteBuffer,int)
org.jaudiotagger.tag.flac.FlacTag: boolean hasField(java.lang.String)
com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)
com.caij.puremusic.drive.model.PlayLists: java.util.List component1()
org.jaudiotagger.tag.id3.ID3v23Tag: java.util.Comparator getPreferredFrameOrderComparator()
com.caij.puremusic.drive.model.Media$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$BreadthFirstEnumeration$Queue: boolean isEmpty()
com.caij.puremusic.db.model.Folder: long getId()
com.caij.puremusic.drive.model.PlexAlbumsResponse$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
org.simpleframework.xml.stream.Format: Format(int,java.lang.String,org.simpleframework.xml.stream.Style)
org.jaudiotagger.audio.asf.util.Utils: boolean isBlank(java.lang.String)
com.tencent.mm.opensdk.modelbiz.OpenWebview$Resp: int getType()
com.caij.puremusic.db.model.HistoryEntityQueries$historySongs$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
org.simpleframework.xml.core.TextListLabel: java.lang.Object getKey()
com.umeng.analytics.pro.i: void i()
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: void setTextLocale(android.widget.TextView,java.util.Locale)
org.simpleframework.xml.core.MethodScanner: MethodScanner(org.simpleframework.xml.core.Detail,org.simpleframework.xml.core.Support)
org.jaudiotagger.tag.datatype.BooleanByte: void readByteArray(byte[],int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)
kotlinx.serialization.json.JsonElementSerializer$descriptor$1$3: JsonElementSerializer$descriptor$1$3()
com.thegrizzlylabs.sardineandroid.model.Grant: void setPrivilege(java.util.List)
org.jaudiotagger.tag.mp4.Mp4TagFieldSubType: Mp4TagFieldSubType(java.lang.String,int)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSRC: FrameBodyTSRC(java.nio.ByteBuffer,int)
com.caij.puremusic.drive.model.SubPlayList: SubPlayList(java.util.List)
com.caij.puremusic.db.model.SongEntityQueries: app.cash.sqldelight.Query songsFromPlaylist(long,kotlin.jvm.functions.Function3)
org.jaudiotagger.tag.id3.framebody.FrameBodyENCR: FrameBodyENCR(org.jaudiotagger.tag.id3.framebody.FrameBodyENCR)
org.jaudiotagger.audio.mp3.MP3File: java.io.File extractID3v2TagDataIntoFile(java.io.File)
me.tankery.lib.circularseekbar.CircularSeekBar: android.graphics.RectF getPathCircle()
com.umeng.commonsdk.statistics.proto.b: void clear()
com.caij.puremusic.drive.model.AlbumItem: boolean equals(java.lang.Object)
org.jaudiotagger.tag.datatype.StringHashMap: java.util.Iterator iterator()
org.jaudiotagger.audio.ogg.util.OggPageHeader: byte[] getSegmentTable()
com.umeng.commonsdk.statistics.idtracking.a: java.lang.String f()
org.simpleframework.xml.util.WeakCache: org.simpleframework.xml.util.WeakCache$Segment map(java.lang.Object)
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: void setUserOpened(boolean)
com.umeng.commonsdk.statistics.proto.a$b: a$b()
com.umeng.analytics.pro.an$d: com.umeng.analytics.pro.an$c a()
org.simpleframework.xml.core.DefaultDetail: org.simpleframework.xml.DefaultType getAccess()
nl.adaptivity.xmlutil.serialization.DefaultXmlSerializationPolicy$elementNamespaceDecls$1: DefaultXmlSerializationPolicy$elementNamespaceDecls$1()
com.caij.puremusic.db.model.PlaylistEntity: PlaylistEntity(long,java.lang.String)
com.caij.puremusic.db.model.SongQueries$SongsDateLastDescQuery: java.lang.String toString()
com.caij.puremusic.drive.model.AlbumList$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
org.simpleframework.xml.core.AnnotationFactory: java.lang.annotation.Annotation getInstance(java.lang.ClassLoader,java.lang.Class)
com.umeng.commonsdk.statistics.common.DataHelper: java.lang.String encryptEx(java.lang.String)
com.tencent.bugly.proguard.b: b(java.lang.Exception)
org.jaudiotagger.tag.id3.framebody.FrameBodyWOAS: FrameBodyWOAS(java.lang.String)
org.simpleframework.xml.DefaultType: DefaultType(java.lang.String,int)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
org.jaudiotagger.tag.datatype.AbstractDataTypeList: AbstractDataTypeList(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody)
com.alipay.sdk.app.PayTask: void showLoading()
androidx.constraintlayout.motion.widget.MotionLayout: void setProgress(float)
org.jaudiotagger.audio.generic.AudioFileReader: org.jaudiotagger.audio.AudioFile read(java.io.File)
com.caij.puremusic.db.model.HistoryEntityQueries: void clear()
kotlin.coroutines.intrinsics.CoroutineSingletons: CoroutineSingletons(java.lang.String,int)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconTintList(android.content.res.ColorStateList)
org.simpleframework.xml.core.PathParser: void element(int,int)
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: long getBaseDataOffset()
com.caij.puremusic.db.model.AlbumQueries$insert$1: java.lang.Object invoke(java.lang.Object)
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: void testNativeCrash()
com.umeng.analytics.pro.ad$b: android.os.IBinder asBinder()
org.simpleframework.xml.core.AttributeLabel: org.simpleframework.xml.core.Expression getExpression()
org.simpleframework.xml.core.AttributeParameter: boolean isPrimitive()
org.simpleframework.xml.stream.EventElement: java.lang.String getValue()
me.tankery.lib.circularseekbar.CircularSeekBar: float getProgress()
org.jaudiotagger.audio.dsf.DsdChunk: java.nio.ByteBuffer write()
org.jaudiotagger.tag.mp4.field.Mp4TagTextSingleNumberField: Mp4TagTextSingleNumberField(java.lang.String,java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyCHAP: java.lang.String getIdentifier()
org.jaudiotagger.tag.id3.framebody.FrameBodyETCO: void setupObjectList()
com.caij.puremusic.model.smartplaylist.ShuffleAllPlaylist$Creator: java.lang.Object[] newArray(int)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void deleteArtworkField()
org.jaudiotagger.tag.id3.ID3v24Frame: org.jaudiotagger.tag.id3.AbstractID3v2Frame$EncodingFlags getEncodingFlags()
org.jaudiotagger.tag.images.ImageHandlingFactory: org.jaudiotagger.tag.images.ImageHandler getInstance()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: int getValue()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)
com.caij.puremusic.model.lyrics.Lyrics: java.lang.String getText()
org.jaudiotagger.tag.datatype.PairedTextEncodedStringNullTerminated: boolean equals(java.lang.Object)
com.caij.puremusic.drive.model.ADriveFileResponse$$serializer: ADriveFileResponse$$serializer()
com.caij.puremusic.db.model.SongEntityQueries$CheckSongPlaylistExistsQuery: long getSongId()
org.jaudiotagger.tag.id3.ID3Tags: java.lang.String convertFrameID23To24(java.lang.String)
androidx.fragment.app.Fragment: void onPause()
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
org.jcodec.containers.mp4.boxes.FileTypeBox: org.jcodec.containers.mp4.boxes.FileTypeBox createFileTypeBox(java.lang.String,int,java.util.Collection)
org.simpleframework.xml.core.ElementListParameter: org.simpleframework.xml.core.Expression getExpression()
androidx.core.view.ViewCompat$Api19Impl: void setAccessibilityLiveRegion(android.view.View,int)
com.umeng.analytics.pro.v: void b(java.lang.String)
com.caij.puremusic.network.model.LastFmAlbum$Album$Image: void setText(java.lang.String)
com.caij.puremusic.drive.model.OneDriveItem: java.lang.String getId()
org.simpleframework.xml.transform.DateTransform: java.lang.Object read(java.lang.String)
org.jaudiotagger.tag.id3.ID3v23Tag: org.jaudiotagger.tag.id3.AbstractID3v2Tag$FrameAndSubId getFrameAndSubIdFromGenericKey(org.jaudiotagger.tag.FieldKey)
org.simpleframework.xml.core.Scanner: org.simpleframework.xml.core.Section getSection()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyEAR: void setArtist(java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getHelperTextCurrentTextColor()
org.simpleframework.xml.transform.BigDecimalTransform: java.lang.Object read(java.lang.String)
com.google.android.material.timepicker.ChipTextInputComboView: ChipTextInputComboView(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.audio.wav.WavTagWriter: void writeID3DataToFile(java.nio.channels.FileChannel,java.nio.ByteBuffer)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTagField: java.lang.String toString()
com.google.common.base.AbstractIterator$State: com.google.common.base.AbstractIterator$State[] values()
com.umeng.commonsdk.utils.UMUtils: java.lang.String getOperator(android.content.Context)
com.umeng.commonsdk.statistics.common.ULog: void i(java.lang.String,java.lang.Object[])
org.simpleframework.xml.core.MapFactory: boolean isMap(java.lang.Class)
androidx.appcompat.widget.SwitchCompat: void setShowText(boolean)
org.simpleframework.xml.transform.ArrayTransform: java.lang.String write(java.lang.Object,int)
com.caij.puremusic.drive.model.PlexAlbumsResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
org.jaudiotagger.audio.flac.FlacTagWriter$MetadataBlockInfo: java.util.List access$300(org.jaudiotagger.audio.flac.FlacTagWriter$MetadataBlockInfo)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: ExtendedFloatingActionButton(android.content.Context,android.util.AttributeSet)
org.simpleframework.xml.core.DetailScanner: org.simpleframework.xml.Namespace getNamespace()
com.umeng.commonsdk.statistics.proto.Gender: Gender(java.lang.String,int,int)
org.simpleframework.xml.core.Support: org.simpleframework.xml.core.ContactList getFields(java.lang.Class)
com.umeng.analytics.pro.a: java.lang.String c(java.lang.String)
com.google.android.material.navigation.NavigationBarItemView: void setIconTintList(android.content.res.ColorStateList)
com.tencent.mm.opensdk.modelmsg.WXMusicObject: WXMusicObject()
org.simpleframework.xml.stream.Verbosity: org.simpleframework.xml.stream.Verbosity valueOf(java.lang.String)
org.simpleframework.xml.core.ConversionInstance: java.lang.Class getType()
androidx.core.view.ViewCompat$Api16Impl: boolean getFitsSystemWindows(android.view.View)
com.thegrizzlylabs.sardineandroid.model.PrincipalURL: PrincipalURL()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
code.name.monkey.appthemehelper.common.prefs.supportv7.ATESeekBarPreference: ATESeekBarPreference(android.content.Context,android.util.AttributeSet,int)
com.google.android.material.navigation.NavigationBarMenuView: int getItemPaddingBottom()
com.umeng.analytics.pro.bf: void b(com.umeng.analytics.pro.bc,java.lang.Object)
com.caij.puremusic.db.model.SongEntityQueries: app.cash.sqldelight.Query isSongExistsInPlaylist(long,long,kotlin.jvm.functions.Function3)
com.tencent.bugly.proguard.l: void a(boolean[],int)
com.google.gson.FieldNamingPolicy$6: FieldNamingPolicy$6(java.lang.String,int)
com.alipay.apmobilesecuritysdk.e.d: void a()
com.umeng.commonsdk.framework.UMWorkDispatch: void registerConnStateObserver(com.umeng.commonsdk.framework.UMSenderStateNotify)
com.tencent.bugly.proguard.ai: long a(boolean)
com.caij.puremusic.fragments.folder.FoldersFragment: FoldersFragment()
com.tencent.bugly.proguard.p: void a(android.content.Context,com.tencent.bugly.BuglyStrategy)
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: int access$002(com.tencent.mm.opensdk.openapi.BaseWXApiImplV10,int)
com.tencent.bugly.BuglyStrategy: com.tencent.bugly.BuglyStrategy setAppVersion(java.lang.String)
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessView$Req: boolean checkArgs()
org.jaudiotagger.audio.wav.WavChunkType: java.lang.String getCode()
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.appcompat.app.AppCompatDialog: void onStop()
com.afollestad.materialdialogs.internal.button.DialogActionButtonLayout: com.afollestad.materialdialogs.internal.button.DialogActionButton[] getActionButtons()
com.google.android.material.color.utilities.QuantizerWu$Direction: com.google.android.material.color.utilities.QuantizerWu$Direction[] values()
com.google.android.material.navigation.NavigationBarMenuView: void setItemTextAppearanceInactive(int)
org.jaudiotagger.audio.dsf.DsdChunk: void setFileLength(long)
com.umeng.commonsdk.UMConfigureImpl: java.util.concurrent.ScheduledExecutorService e()
com.afollestad.materialdialogs.internal.message.DialogContentLayout: void setRecyclerView(com.afollestad.materialdialogs.internal.list.DialogRecyclerView)
com.caij.puremusic.drive.model.JellyfinArtistResponse: com.caij.puremusic.drive.model.JellyfinArtistResponse copy$default(com.caij.puremusic.drive.model.JellyfinArtistResponse,java.util.List,int,int,int,java.lang.Object)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: java.lang.CharSequence getName(android.media.session.PlaybackState$CustomAction)
org.jaudiotagger.audio.SupportedFileFormat: org.jaudiotagger.tag.Tag createDefaultTag()
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: boolean isDefaultSampleDurationAvailable()
com.tencent.bugly.crashreport.CrashReport: java.util.Set getAllUserDataKeys(android.content.Context)
org.jaudiotagger.audio.aiff.chunk.ID3Chunk: boolean isId3v2Tag(java.nio.ByteBuffer)
com.umeng.analytics.pro.o: boolean s()
org.jaudiotagger.tag.flac.FlacTag: java.util.Iterator getFields()
korlibs.crypto.MD5$Companion$1: MD5$Companion$1()
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query searchSongsByTitle(java.lang.String,kotlin.jvm.functions.Function18)
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String[] getGPU(javax.microedition.khronos.opengles.GL10)
androidx.fragment.app.Fragment: void setEnterTransition(java.lang.Object)
com.tencent.mm.opensdk.modelbiz.WXChannelStartLive$Req: boolean checkArgs()
com.caij.puremusic.drive.model.Propstat$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.umeng.analytics.pro.as: void a(int,byte[])
com.caij.puremusic.model.Data: java.lang.String component6()
com.caij.puremusic.drive.model.ImageTags: com.caij.puremusic.drive.model.ImageTags copy$default(com.caij.puremusic.drive.model.ImageTags,java.lang.String,int,java.lang.Object)
com.google.android.material.sidesheet.SideSheetBehavior: SideSheetBehavior()
org.simpleframework.xml.stream.DocumentReader: org.simpleframework.xml.stream.EventNode read(org.w3c.dom.Node)
org.jaudiotagger.audio.mp4.Mp4TagWriter: void delete(java.io.RandomAccessFile,java.io.RandomAccessFile)
com.caij.puremusic.drive.model.ADriveFileResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.ADriveFileResponse)
org.jaudiotagger.tag.Tag: java.util.List getArtworkList()
org.simpleframework.xml.core.CompositeInlineList: CompositeInlineList(org.simpleframework.xml.core.Context,org.simpleframework.xml.strategy.Type,org.simpleframework.xml.strategy.Type,java.lang.String)
org.simpleframework.xml.core.Collector$Registry: Collector$Registry()
com.umeng.umzid.c: void d(android.content.Context,java.lang.String)
androidx.appcompat.app.AppCompatDialog: AppCompatDialog(android.content.Context,int)
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean sendOpenBusinessWebview(android.content.Context,com.tencent.mm.opensdk.modelbase.BaseReq)
androidx.constraintlayout.helper.widget.Flow: void setVerticalStyle(int)
org.simpleframework.xml.core.Label: org.simpleframework.xml.strategy.Type getType(java.lang.Class)
com.tencent.mm.opensdk.modelbiz.WXChannelJumpUrlInfo: int type()
com.umeng.commonsdk.statistics.b: org.json.JSONObject a(android.content.Context,java.lang.String,boolean)
androidx.media.AudioManagerCompat$Api26Impl: int requestAudioFocus(android.media.AudioManager,android.media.AudioFocusRequest)
org.jaudiotagger.audio.SupportedFileFormat$15: org.jaudiotagger.tag.Tag createDefaultTag()
kotlin.random.Random: Random()
com.caij.puremusic.db.model.SongEntityQueries$deletePlaylistSongs$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.tag.reference.ISOScript$Script: java.lang.String toString()
com.tencent.bugly.BuglyStrategy: com.tencent.bugly.BuglyStrategy setLibBuglySOFilePath(java.lang.String)
org.repackage.com.meizu.flyme.openidsdk.OpenId: void a(int)
org.simpleframework.xml.transform.DefaultMatcher: org.simpleframework.xml.transform.Transform match(java.lang.Class)
org.jaudiotagger.audio.generic.AudioFileWriter2: void writeTag(org.jaudiotagger.tag.Tag,java.nio.channels.FileChannel,java.lang.String)
com.caij.puremusic.db.model.SongQueries$SongsByIdsQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.jaudiotagger.tag.id3.ID3v24Tag: void deleteField(org.jaudiotagger.tag.id3.ID3v24FieldKey)
com.caij.puremusic.model.ArtistWrapper: void setSongs(java.util.List)
org.simpleframework.xml.strategy.ReadState: ReadState(org.simpleframework.xml.strategy.Contract)
org.jaudiotagger.tag.datatype.NumberHashMap: void setValue(java.lang.Object)
org.jaudiotagger.audio.real.RealFileReader: org.jaudiotagger.audio.generic.GenericAudioHeader getEncodingInfo(java.io.RandomAccessFile)
com.tencent.mm.opensdk.modelmsg.ShowMessageFromWX$Resp: ShowMessageFromWX$Resp()
com.caij.puremusic.db.model.SongQueries$SongsDateLastDescQuery: SongQueries$SongsDateLastDescQuery(com.caij.puremusic.db.model.SongQueries,long,kotlin.jvm.functions.Function1)
org.simpleframework.xml.core.FieldDetail: FieldDetail(java.lang.reflect.Field)
com.google.android.material.navigation.NavigationBarMenuView: int getLabelVisibilityMode()
org.repackage.com.meizu.flyme.openidsdk.SupportInfo: SupportInfo()
org.jaudiotagger.tag.datatype.Lyrics3TimeStamp: int getSize()
org.simpleframework.xml.strategy.TreeStrategy: org.simpleframework.xml.strategy.Value read(org.simpleframework.xml.strategy.Type,org.simpleframework.xml.stream.NodeMap,java.util.Map)
com.umeng.commonsdk.internal.c: java.lang.Class a(java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyTRCK: void setTrackNo(java.lang.String)
com.caij.puremusic.views.insets.InsetsConstraintLayout$1: InsetsConstraintLayout$1()
com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener)
org.jaudiotagger.audio.asf.io.ChunkReader: org.jaudiotagger.audio.asf.data.GUID[] getApplyingIds()
org.jaudiotagger.tag.lyrics3.Lyrics3v1: java.lang.String getIdentifier()
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: boolean isDataLengthIndicator()
com.tencent.mm.opensdk.modelmsg.WXDynamicVideoMiniProgramObject: WXDynamicVideoMiniProgramObject()
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
com.caij.puremusic.db.model.ServerAudioFormat: boolean equals(java.lang.Object)
org.jaudiotagger.audio.asf.data.MetadataContainerFactory: org.jaudiotagger.audio.asf.data.MetadataContainer[] createContainers(org.jaudiotagger.audio.asf.data.ContainerType[])
org.simpleframework.xml.core.EmptyExpression: java.util.Iterator iterator()
org.simpleframework.xml.stream.PullProvider: org.simpleframework.xml.stream.EventReader provide(java.io.InputStream)
com.caij.puremusic.db.model.ArtistQueries$artistById$2: com.caij.puremusic.db.model.Artist invoke(long,java.lang.String)
com.caij.puremusic.drive.model.AMetadata$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
org.koin.core.definition.Kind: org.koin.core.definition.Kind valueOf(java.lang.String)
org.simpleframework.xml.core.Expression: org.simpleframework.xml.core.Expression getPath(int,int)
com.thegrizzlylabs.sardineandroid.model.Privilege: java.util.List getContent()
org.jcodec.containers.mp4.MP4Util$Atom: MP4Util$Atom(org.jcodec.containers.mp4.boxes.Header,long)
org.simpleframework.xml.stream.PullProvider: PullProvider()
org.jaudiotagger.audio.asf.io.MetadataReader: boolean canFail()
com.caij.puremusic.drive.model.SubsonicResponse: boolean equals(java.lang.Object)
com.caij.puremusic.drive.model.GoogleDriveFile$Companion: kotlinx.serialization.KSerializer serializer()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()
org.jaudiotagger.audio.dsf.DsdChunk: void setChunkSizeLength(long)
com.google.android.material.navigation.NavigationBarMenuView: void setBadgeIfNeeded(com.google.android.material.navigation.NavigationBarItemView)
org.simpleframework.xml.filter.EnvironmentFilter: EnvironmentFilter(org.simpleframework.xml.filter.Filter)
com.umeng.commonsdk.statistics.common.MLog: void e(java.lang.String,java.lang.Object[])
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setEnabled(boolean)
com.umeng.analytics.pro.bs: boolean a(com.umeng.analytics.pro.bs)
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean shouldHandleDraggingWithHelper()
org.simpleframework.xml.stream.NodeReader: org.simpleframework.xml.stream.InputNode readStart(org.simpleframework.xml.stream.InputNode,org.simpleframework.xml.stream.EventNode)
com.umeng.analytics.pro.an$e: short a()
org.jaudiotagger.audio.ogg.util.OggPageHeader$PacketStartAndLength: void setLength(int)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.caij.puremusic.db.model.SongQueries$SongsDateLastDescQuery$execute$1: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.db.model.ServerSongCoverQueries: ServerSongCoverQueries(app.cash.sqldelight.db.SqlDriver)
org.jaudiotagger.tag.id3.ID3v11Tag: ID3v11Tag()
com.google.android.material.navigation.NavigationBarView: com.google.android.material.shape.ShapeAppearanceModel getItemActiveIndicatorShapeAppearance()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataCueSheet: int getLength()
org.jaudiotagger.tag.id3.reference.MediaPlayerRating: MediaPlayerRating()
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource[] values()
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getAppHashKey(android.content.Context)
com.caij.puremusic.db.model.PlaylistEntityQueries$PlaylistByNameQuery: void addListener(app.cash.sqldelight.Query$Listener)
org.jaudiotagger.tag.reference.Tagger: Tagger(java.lang.String,int,int,java.lang.String)
com.umeng.commonsdk.statistics.common.ULog: void e(java.lang.String,java.lang.String,java.lang.Throwable)
org.simpleframework.xml.transform.TransformException: TransformException(java.lang.Throwable,java.lang.String,java.lang.Object[])
org.jaudiotagger.tag.datatype.Lyrics3Line: java.lang.String toString()
com.google.android.material.navigation.NavigationBarItemView: int getSuggestedMinimumHeight()
org.jaudiotagger.audio.generic.Utils: java.lang.String getExtension(java.io.File)
org.simpleframework.xml.stream.DocumentReader$Text: DocumentReader$Text(org.w3c.dom.Node)
com.google.android.material.slider.BaseSlider: android.content.res.ColorStateList getTickInactiveTintList()
org.jcodec.containers.mp4.boxes.SampleEntry: void parse(java.nio.ByteBuffer)
com.thegrizzlylabs.sardineandroid.model.Property: Property()
com.umeng.analytics.process.UMProcessDBHelper: boolean insertEvents_(java.lang.String,java.util.List)
org.jaudiotagger.tag.datatype.EventTimingCodeList: EventTimingCodeList(org.jaudiotagger.tag.datatype.EventTimingCodeList)
com.google.android.material.appbar.CollapsingToolbarLayout: void setStatusBarScrimColor(int)
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: void setBitrateMaximal(int)
com.umeng.analytics.pro.f: void d(android.database.sqlite.SQLiteDatabase)
com.alipay.apmobilesecuritysdk.e.d: void a(android.content.Context,com.alipay.apmobilesecuritysdk.e.c)
com.caij.puremusic.drive.model.ADriveFileResponse$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
androidx.constraintlayout.motion.widget.MotionLayout: float getVelocity()
org.jaudiotagger.audio.generic.Utils: int getIntLE(byte[])
org.jaudiotagger.tag.id3.framebody.AbstractID3v2FrameBody: AbstractID3v2FrameBody()
com.caij.puremusic.drive.model.DropboxDriveFileResponse: java.lang.String toString()
org.jcodec.containers.mp4.boxes.EditListBox: EditListBox(org.jcodec.containers.mp4.boxes.Header)
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.umeng.commonsdk.stateless.b: void h()
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdTypeCountQuery: void removeListener(app.cash.sqldelight.Query$Listener)
org.jaudiotagger.audio.aiff.AiffAudioHeader$Endian: org.jaudiotagger.audio.aiff.AiffAudioHeader$Endian[] values()
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
com.alipay.apmobilesecuritysdk.e.a: com.alipay.apmobilesecuritysdk.e.b b()
nl.adaptivity.xmlutil.serialization.InputKind: nl.adaptivity.xmlutil.serialization.InputKind[] values()
com.caij.puremusic.db.model.SongEntityQueries$GetPlayListSongCountQuery: void addListener(app.cash.sqldelight.Query$Listener)
org.simpleframework.xml.stream.StreamProvider: org.simpleframework.xml.stream.EventReader provide(javax.xml.stream.XMLEventReader)
org.simpleframework.xml.core.Factory: java.lang.Object getInstance()
org.xmlpull.v1.XmlPullParser: boolean getFeature(java.lang.String)
com.tencent.mm.opensdk.modelbiz.WXInvoiceAuthInsert$Resp: int getType()
org.simpleframework.xml.core.InstantiatorBuilder: void validateConstructors()
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdQuery: java.lang.String toString()
org.jaudiotagger.tag.id3.AbstractTagFrameBody: java.util.Iterator iterator()
com.google.gson.LongSerializationPolicy$1: com.google.gson.JsonElement serialize(java.lang.Long)
org.jaudiotagger.audio.asf.io.WriteableChunk: boolean isEmpty()
org.repackage.com.zui.deviceidservice.IDeviceidInterface: boolean c()
org.jaudiotagger.tag.id3.ID3v1TagField: java.nio.charset.Charset getEncoding()
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getFlymeVersion(java.util.Properties)
org.simpleframework.xml.core.ElementMapUnionParameter: org.simpleframework.xml.core.Expression getExpression()
com.google.android.material.bottomsheet.BottomSheetDialogFragment: BottomSheetDialogFragment(int)
com.afollestad.materialdialogs.internal.main.DialogLayout: int getMaxHeight()
com.caij.puremusic.drive.model.ArtistItem: java.lang.String toString()
com.umeng.analytics.pro.w: boolean a(long,long)
com.umeng.analytics.pro.bn: void a(com.umeng.analytics.pro.by)
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: BaseTransientBottomBar$Behavior()
com.google.android.material.button.MaterialButtonToggleGroup: int getVisibleButtonCount()
com.caij.puremusic.model.Home: int component2()
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
org.jaudiotagger.tag.TagOptionSingleton: long getWriteChunkSize()
com.caij.puremusic.drive.model.PlayListsSubsonicResponse$$serializer: PlayListsSubsonicResponse$$serializer()
org.simpleframework.xml.transform.ShortTransform: ShortTransform()
org.jcodec.containers.mp4.boxes.SimpleBoxFactory: SimpleBoxFactory(org.jcodec.containers.mp4.Boxes)
com.caij.puremusic.drive.model.PlayListsSubsonicResponse$Companion: kotlinx.serialization.KSerializer serializer()
com.tencent.mm.opensdk.modelmsg.WXStateSceneDataObject$IWXStateJumpInfo: int type()
org.jaudiotagger.audio.generic.AbstractTag: org.jaudiotagger.tag.TagField getFirstField(java.lang.String)
com.tencent.mm.opensdk.modelbiz.SubscribeMessage$Resp: int getType()
com.umeng.analytics.pro.bu: void a(long)
com.umeng.commonsdk.config.d$a: d$a(java.lang.String,int)
com.google.android.material.navigationrail.NavigationRailMenuView: void setItemMinimumHeight(int)
org.jaudiotagger.audio.AudioFileIO: org.jaudiotagger.audio.AudioFile readAs(java.io.File,java.lang.String)
com.caij.puremusic.drive.model.OneDriveFolder$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.umeng.commonsdk.statistics.proto.b: com.umeng.commonsdk.statistics.proto.b a(long)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
com.tencent.mm.opensdk.modelbiz.CreateChatroom$Req: CreateChatroom$Req()
com.caij.puremusic.drive.model.JellyfinFolder: com.caij.puremusic.drive.model.JellyfinFolder copy$default(com.caij.puremusic.drive.model.JellyfinFolder,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
org.simpleframework.xml.stream.Formatter: void write(java.lang.String,java.lang.String)
com.umeng.commonsdk.statistics.proto.d: void write(com.umeng.analytics.pro.bu)
org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistReadOptions: org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistReadOptions[] values()
com.tencent.mm.opensdk.modelbiz.WXChannelOpenEvent: WXChannelOpenEvent()
com.caij.puremusic.drive.model.Propstat: Propstat()
org.jaudiotagger.audio.mp3.MPEGFrameHeader: org.jaudiotagger.audio.mp3.MPEGFrameHeader parseMPEGHeader(java.nio.ByteBuffer)
org.jaudiotagger.tag.KeyNotFoundException: KeyNotFoundException(java.lang.Throwable)
org.simpleframework.xml.core.Signature: org.simpleframework.xml.core.Parameter remove(java.lang.Object)
com.caij.puremusic.drive.model.SongItem: java.lang.String component8()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int)
org.simpleframework.xml.transform.AtomicIntegerTransform: AtomicIntegerTransform()
org.jaudiotagger.tag.id3.framebody.FrameBodyWPUB: FrameBodyWPUB()
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()
org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Class,java.io.Reader)
com.caij.puremusic.drive.model.ParentReference: boolean equals(java.lang.Object)
org.jaudiotagger.audio.generic.Utils: java.lang.String readFourBytesAsChars(java.nio.ByteBuffer)
org.simpleframework.xml.core.Label: java.lang.String[] getPaths()
com.caij.puremusic.model.lyrics.AbsSynchronizedLyrics: boolean isValid()
com.caij.puremusic.drive.model.OneDriveItem: java.lang.String getName()
org.simpleframework.xml.core.TreeModel: org.simpleframework.xml.core.Expression getExpression()
org.jaudiotagger.tag.id3.ID3v1Tag: void setTitle(java.lang.String)
androidx.preference.Preference: Preference(android.content.Context,android.util.AttributeSet,int,int)
org.jaudiotagger.utils.tree.DefaultTreeModel: int getIndexOfChild(java.lang.Object,java.lang.Object)
com.umeng.commonsdk.statistics.proto.c: void a(com.umeng.commonsdk.statistics.proto.a)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityStopped(android.app.Activity)
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: void doWrite(java.nio.ByteBuffer)
com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextSize(float)
org.simpleframework.xml.stream.NodeWriter: org.simpleframework.xml.stream.OutputNode writeStart(org.simpleframework.xml.stream.OutputNode,java.lang.String)
com.google.android.material.internal.FlowLayout: int getItemSpacing()
com.tencent.bugly.proguard.ad: android.util.Pair a(java.lang.String,java.lang.String,java.util.Map)
org.repackage.com.meizu.flyme.openidsdk.SupportInfo: boolean a()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: org.jaudiotagger.tag.TagField createCompilationField(boolean)
kotlin.coroutines.CombinedContext$toString$1: CombinedContext$toString$1()
org.jcodec.containers.mp4.boxes.KeysBox: void parse(java.nio.ByteBuffer)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: org.jaudiotagger.utils.tree.DefaultMutableTreeNode getPreviousNode()
org.jcodec.containers.mp4.boxes.MediaBox: org.jcodec.containers.mp4.boxes.MediaBox createMediaBox()
com.umeng.commonsdk.framework.UMModuleRegister: boolean registerCallback(int,com.umeng.commonsdk.framework.UMLogDataProtocol)
org.simpleframework.xml.strategy.Reference: java.lang.Class getType()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
org.simpleframework.xml.core.PrimitiveScanner$EmptySection: java.lang.String getPath(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: void setInsets(int,androidx.core.graphics.Insets)
org.jaudiotagger.tag.TagException: TagException(java.lang.Throwable)
org.simpleframework.xml.core.TemplateEngine: void replace()
com.caij.puremusic.drive.model.SubsonicAlbum$Companion: SubsonicAlbum$Companion()
com.caij.puremusic.drive.model.ADriveFileResponse$Companion: kotlinx.serialization.KSerializer serializer()
org.jaudiotagger.utils.tree.DefaultTreeModel: void fireTreeStructureChanged(java.lang.Object,org.jaudiotagger.utils.tree.TreePath)
com.caij.puremusic.db.model.ServerArtistCoverQueries: void insert(com.caij.puremusic.db.model.ServerArtistCover)
com.umeng.commonsdk.utils.JSONArraySortUtil: int compare(java.lang.Object,java.lang.Object)
com.umeng.analytics.pro.an: com.umeng.analytics.pro.an a(byte[])
androidx.core.view.ViewCompat$Api16Impl: void setHasTransientState(android.view.View,boolean)
com.umeng.commonsdk.statistics.idtracking.i: i()
androidx.core.content.pm.PackageInfoCompat$Api28Impl: android.content.pm.Signature[] getSigningCertificateHistory(android.content.pm.SigningInfo)
androidx.fragment.app.Fragment: java.lang.String generateActivityResultKey()
org.simpleframework.xml.core.SignatureCreator: java.lang.Object getInstance()
org.simpleframework.xml.stream.NodeWriter: void writeNamespaces(org.simpleframework.xml.stream.OutputNode)
org.simpleframework.xml.stream.PrefixResolver: java.util.Iterator iterator()
com.google.android.material.navigation.NavigationBarView: void setItemActiveIndicatorMarginHorizontal(int)
com.caij.puremusic.drive.model.User$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.umeng.analytics.pro.m: java.util.ArrayList c(com.umeng.analytics.pro.m)
org.jaudiotagger.audio.mp4.ChunkReader: int getFrameSize()
com.umeng.commonsdk.stateless.b: void i()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.caij.puremusic.db.model.SongQueries$SongsByNameArtistQuery: java.lang.String toString()
com.thegrizzlylabs.sardineandroid.model.Principal: Principal()
com.umeng.commonsdk.config.FieldManager: void a(android.content.Context,java.lang.String)
com.caij.puremusic.drive.model.PlexLoginResponse$Companion: PlexLoginResponse$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.caij.puremusic.drive.model.MediaContainer: MediaContainer(int,int,java.lang.String,java.util.List,kotlinx.serialization.internal.SerializationConstructorMarker)
org.jaudiotagger.audio.mp4.EncoderType: org.jaudiotagger.audio.mp4.EncoderType valueOf(java.lang.String)
androidx.appcompat.widget.SwitchCompat: boolean getTargetCheckedState()
com.google.common.reflect.Types$JavaVersion: java.lang.reflect.Type newArrayType(java.lang.reflect.Type)
org.simpleframework.xml.transform.PrimitiveMatcher: org.simpleframework.xml.transform.Transform match(java.lang.Class)
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
org.jaudiotagger.audio.asf.io.RandomAccessFileOutputStream: void write(int)
androidx.constraintlayout.widget.Barrier: boolean getAllowsGoneWidget()
org.jaudiotagger.tag.id3.ID3v1Tag: java.lang.String getFirstTitle()
com.afollestad.materialdialogs.internal.main.DialogTitleLayout: DialogTitleLayout(android.content.Context,android.util.AttributeSet)
com.umeng.commonsdk.internal.c: java.lang.String b()
com.google.common.base.Predicates$ObjectPredicate$2: Predicates$ObjectPredicate$2(java.lang.String,int)
androidx.appcompat.widget.AppCompatImageView: void drawableStateChanged()
com.caij.puremusic.drive.model.Collection$Companion: kotlinx.serialization.KSerializer serializer()
com.tencent.bugly.proguard.ai: void a(java.lang.Runnable,long)
org.jaudiotagger.tag.datatype.TCONString: int getNumberOfValues()
kotlin.jvm.internal.Lambda: Lambda(int)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
org.jcodec.containers.mp4.boxes.MediaHeaderBox: java.lang.String fourcc()
org.jcodec.containers.mp4.boxes.AliasBox: java.lang.String fourcc()
org.jaudiotagger.tag.id3.ID3v22Tag: org.jaudiotagger.tag.TagField createArtworkField(byte[],java.lang.String)
org.jaudiotagger.audio.generic.GenericAudioHeader: java.lang.Long getAudioDataEndPosition()
com.tencent.bugly.proguard.ao: boolean b(java.lang.String,java.lang.String,java.lang.String)
com.tencent.bugly.crashreport.CrashReport$UserStrategy: com.tencent.bugly.crashreport.CrashReport$CrashHandleCallback getCrashHandleCallback()
com.google.android.material.slider.Slider: float getValue()
com.tencent.bugly.proguard.aa: int z()
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: java.io.InputStream get(java.lang.String)
com.caij.puremusic.drive.model.BaiduFileResponse$Companion: BaiduFileResponse$Companion()
org.jaudiotagger.tag.id3.framebody.FrameBodyTRSN: FrameBodyTRSN(org.jaudiotagger.tag.id3.framebody.FrameBodyTRSN)
com.caij.puremusic.db.model.SongEntityQueries$SongsFromPlaylistQuery: long getPlaylistId()
org.jaudiotagger.tag.id3.framebody.FrameBodyRBUF: java.lang.String getIdentifier()
com.caij.puremusic.db.model.SongEntityQueries$deletePlaylistSongs$2: SongEntityQueries$deletePlaylistSongs$2()
org.jaudiotagger.audio.generic.GenericAudioHeader: java.lang.Long getAudioDataStartPosition()
com.caij.puremusic.db.model.SongQueries$song$2: com.caij.puremusic.db.model.Song invoke(long,java.lang.String,int,int,long,java.lang.String,java.lang.String,long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,long,long)
org.jaudiotagger.audio.asf.data.EncryptionChunk: EncryptionChunk(java.math.BigInteger)
org.simpleframework.xml.core.Detail: java.lang.Class getSuper()
com.alipay.android.app.IAlixPay: int getVersion()
com.google.android.material.card.MaterialCardView: void setCheckedIconTint(android.content.res.ColorStateList)
com.google.gson.FieldNamingPolicy$2: FieldNamingPolicy$2(java.lang.String,int)
com.umeng.analytics.vshelper.PageNameMonitor: void customPageEnd(java.lang.String)
org.jcodec.containers.mp4.boxes.NodeBox: org.jcodec.containers.mp4.boxes.Box[] findDeep(org.jcodec.containers.mp4.boxes.Box,java.lang.Class,java.lang.String)
org.jaudiotagger.audio.mp3.MP3AudioHeader: java.lang.String getEncodingType()
org.simpleframework.xml.core.Composite: void readVersion(org.simpleframework.xml.stream.InputNode,java.lang.Object,org.simpleframework.xml.core.Label)
org.jaudiotagger.tag.id3.framebody.FrameBodyUSLT: FrameBodyUSLT(java.nio.ByteBuffer,int)
org.simpleframework.xml.core.ElementUnionParameter$Contact: ElementUnionParameter$Contact(org.simpleframework.xml.Element,java.lang.reflect.Constructor,int)
com.umeng.commonsdk.statistics.common.ULog: void e(java.lang.Throwable)
org.jaudiotagger.audio.mp3.MP3File: void setID3v1Tag(org.jaudiotagger.tag.Tag)
com.umeng.commonsdk.statistics.proto.a: java.lang.String e()
org.simpleframework.xml.core.ElementListParameter: ElementListParameter(java.lang.reflect.Constructor,org.simpleframework.xml.ElementList,org.simpleframework.xml.stream.Format,int)
com.alipay.sdk.m.x.e: android.widget.ImageView getBackButton()
org.simpleframework.xml.core.Persister: boolean validate(java.lang.Class,org.simpleframework.xml.stream.InputNode,org.simpleframework.xml.core.Context)
androidx.fragment.app.Fragment: Fragment(int)
org.simpleframework.xml.core.DefaultDetail: org.simpleframework.xml.Root getRoot()
com.caij.puremusic.drive.model.SongItem: SongItem(java.lang.String,java.lang.String,java.lang.String,long,int,boolean,java.lang.String,java.lang.String,java.util.List,java.util.List,java.lang.String,java.lang.String,java.util.List,java.util.Map,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.umeng.analytics.process.UMProcessDBHelper: void createDBByProcess(java.lang.String)
com.caij.puremusic.db.model.ArtistQueries$insert$1: ArtistQueries$insert$1(com.caij.puremusic.db.model.Artist)
org.jcodec.containers.mp4.boxes.TrakBox: org.jcodec.containers.mp4.boxes.MediaBox getMdia()
org.jcodec.containers.mp4.SampleBoxes: SampleBoxes()
com.caij.puremusic.db.model.PlaybackSongQueries$insert$2: java.lang.Object invoke(java.lang.Object)
com.umeng.analytics.MobclickAgent$PageMode: MobclickAgent$PageMode(java.lang.String,int)
com.caij.puremusic.network.model.LastFmTrack$Track$Album$Image: java.lang.String getSize()
com.caij.puremusic.network.model.ArtistWrapper: java.lang.String component1()
com.alipay.apmobilesecuritysdk.e.g: void a(android.content.Context,java.lang.String,java.lang.String)
com.google.common.collect.Maps$EntryFunction: java.lang.Object apply(java.lang.Object)
com.google.android.material.chip.ChipGroup: void setOnCheckedChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedChangeListener)
org.simpleframework.xml.core.PrimitiveScanner: java.lang.Class getType()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthResource(int)
com.tencent.bugly.proguard.ao: void a(int)
androidx.preference.TwoStatePreference: TwoStatePreference(android.content.Context,android.util.AttributeSet,int,int)
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: FrameBodyTXXX(java.nio.ByteBuffer,int)
com.caij.puremusic.drive.model.OneDriveItem: com.caij.puremusic.drive.model.OneDriveFile getFile()
com.tencent.mm.opensdk.modelpay.WXJointPay$JointPayReq: void fromBundle(android.os.Bundle)
org.simpleframework.xml.core.DetailScanner: void access(java.lang.annotation.Annotation)
com.umeng.analytics.MobclickAgent: void setLatencyWindow(long)
com.umeng.commonsdk.debug.I: void log(java.lang.String,java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyEQU2: FrameBodyEQU2()
com.caij.puremusic.drive.model.PlayListItem: com.caij.puremusic.drive.model.PlayListItem copy(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,long,java.lang.String,int,java.lang.String,java.lang.String)
com.tencent.bugly.proguard.k: long[] g(int,boolean)
org.jaudiotagger.tag.mp4.field.Mp4TrackField: Mp4TrackField(byte[])
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessView$Resp: int getType()
com.tencent.bugly.proguard.g: void a(com.tencent.bugly.proguard.k)
org.simpleframework.xml.core.DetailScanner: org.simpleframework.xml.Root getRoot()
com.tencent.mm.opensdk.channel.a.a$a: a$a()
org.jaudiotagger.tag.datatype.BooleanString: java.lang.String toString()
org.jaudiotagger.tag.datatype.TCONString: TCONString(org.jaudiotagger.tag.datatype.TCONString)
org.jaudiotagger.tag.id3.ID3v24Tag: void deleteField(java.lang.String)
com.caij.puremusic.db.model.PlaylistEntityQueries$getPlaylistEntityById$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyTPE2: FrameBodyTPE2()
com.caij.puremusic.drive.model.PlayListSubsonicResponse$$serializer: com.caij.puremusic.drive.model.PlayListSubsonicResponse deserialize(kotlinx.serialization.encoding.Decoder)
androidx.mediarouter.app.MediaRouteChooserDialogFragment: MediaRouteChooserDialogFragment()
com.caij.puremusic.model.Contributor$Creator: java.lang.Object[] newArray(int)
com.caij.puremusic.drive.model.Prop$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
org.jaudiotagger.tag.images.Artwork: java.lang.String getImageUrl()
com.caij.puremusic.db.model.FolderQueries$SelectByIdQuery: void removeListener(app.cash.sqldelight.Query$Listener)
org.simpleframework.xml.core.Variable: java.lang.Object getValue()
org.jcodec.containers.mp4.boxes.Box$LeafBox: void parse(java.nio.ByteBuffer)
com.alipay.android.app.IRemoteServiceCallback: void r03(java.lang.String,java.lang.String,java.util.Map)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$BreadthFirstEnumeration$Queue: DefaultMutableTreeNode$BreadthFirstEnumeration$Queue(org.jaudiotagger.utils.tree.DefaultMutableTreeNode$BreadthFirstEnumeration)
com.caij.puremusic.views.VerticalTextView: VerticalTextView(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)
org.jcodec.containers.mp4.boxes.MovieFragmentHeaderBox: org.jcodec.containers.mp4.boxes.MovieFragmentHeaderBox createMovieFragmentHeaderBox()
org.jaudiotagger.audio.asf.data.VideoStreamChunk: java.lang.String getCodecIdAsString()
com.google.android.material.bottomsheet.BottomSheetDragHandleView: void updateInteractableState()
com.thegrizzlylabs.sardineandroid.model.Lockentry: com.thegrizzlylabs.sardineandroid.model.Lockscope getLockscope()
com.google.android.material.appbar.CollapsingToolbarLayout: int getTitleCollapseMode()
com.umeng.analytics.pro.i: boolean c()
org.repackage.a.a.a.a.c: c(org.repackage.a.a.a.a.b)
org.simpleframework.xml.transform.AtomicLongTransform: java.lang.Object read(java.lang.String)
org.simpleframework.xml.stream.OutputDocument: org.simpleframework.xml.stream.Node getParent()
com.alipay.android.app.IAlixPay$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
org.jaudiotagger.tag.mp4.Mp4NonStandardFieldKey: org.jaudiotagger.tag.reference.Tagger geTagger()
androidx.viewpager.widget.ViewPager: int getClientWidth()
org.jaudiotagger.audio.asf.data.MetadataContainer: java.util.List getDescriptors()
com.tencent.mmkv.MMKV: void checkContentChangedByOuterProcess()
com.google.android.material.navigation.NavigationBarItemView: int getItemDefaultMarginResId()
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
com.google.android.material.navigation.NavigationBarView: void setItemIconTintList(android.content.res.ColorStateList)
com.thegrizzlylabs.sardineandroid.report.SardineReport: SardineReport()
com.umeng.analytics.pro.at: at(int)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: int readBitsPerSample()
org.jcodec.containers.mp4.boxes.SegmentTypeBox: org.jcodec.containers.mp4.boxes.SegmentTypeBox createSegmentTypeBox(java.lang.String,int,java.util.Collection)
org.simpleframework.xml.core.ObjectInstance: java.lang.Object getInstance()
org.jaudiotagger.tag.mp4.field.Mp4TagReverseDnsField: java.lang.String getIssuer()
org.jaudiotagger.tag.images.AndroidArtwork: void setLinked(boolean)
com.caij.puremusic.network.model.LastFmTrack$Track$Toptags$Tag: LastFmTrack$Track$Toptags$Tag()
com.tencent.bugly.proguard.am: void a(java.lang.String,java.lang.String,java.lang.String,long)
org.jaudiotagger.tag.id3.framebody.FrameBodyTDOR: FrameBodyTDOR(byte,java.lang.String)
org.jaudiotagger.audio.iff.ChunkHeader: void setID(java.lang.String)
com.caij.puremusic.db.model.ServerLyricsQueries: void clear()
com.caij.puremusic.drive.model.JellyfinSongListResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
okhttp3.Protocol: okhttp3.Protocol get(java.lang.String)
androidx.window.core.SpecificationComputer$VerificationMode: androidx.window.core.SpecificationComputer$VerificationMode[] $values()
org.jcodec.containers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox: TrackFragmentBaseMediaDecodeTimeBox(org.jcodec.containers.mp4.boxes.Header)
com.tencent.bugly.proguard.bt: bt()
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: boolean a(com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler,java.lang.String)
com.caij.puremusic.drive.model.BaiduFileResponse: com.caij.puremusic.drive.model.BaiduFileResponse copy(int,java.util.List)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
org.jcodec.containers.mp4.boxes.FileTypeBox: java.util.Collection getCompBrands()
com.caij.puremusic.db.model.SongEntityQueries$CheckSongPlaylistExistsQuery: void addListener(app.cash.sqldelight.Query$Listener)
com.caij.puremusic.drive.model.Resourcetype$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.alipay.tscenter.biz.rpc.report.general.model.DataReportRequest: DataReportRequest()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdQuery: SongQueries$SongsByAlbumIdQuery(com.caij.puremusic.db.model.SongQueries,long,kotlin.jvm.functions.Function1)
org.jaudiotagger.tag.id3.framebody.FrameBodyTDAT: FrameBodyTDAT(byte,java.lang.String)
com.tencent.mm.opensdk.channel.MMessageActV2: boolean send(android.content.Context,com.tencent.mm.opensdk.channel.MMessageActV2$Args)
com.caij.puremusic.drive.model.SubsonicSong: SubsonicSong(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,long,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,kotlinx.serialization.internal.SerializationConstructorMarker)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataSeekTable: java.nio.ByteBuffer getBytes()
com.caij.puremusic.drive.model.BaiduDriveItem: java.lang.String component4()
com.umeng.analytics.b: void a(java.lang.Object)
com.tencent.mmkv.MMKV: void unlock()
org.jaudiotagger.audio.mp3.MP3AudioHeader: java.lang.String getTrackLengthAsString()
org.simpleframework.xml.core.KeyBuilder$Key: boolean equals(java.lang.Object)
org.jaudiotagger.audio.wav.chunk.WavChunkSummary: boolean isOnlyMetadataTagsAfterStartingMetadataTag(org.jaudiotagger.tag.wav.WavTag)
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.caij.puremusic.fragments.player.CoverLyricsFragment: CoverLyricsFragment()
org.jaudiotagger.tag.id3.ID3v23Tag: void read(java.nio.ByteBuffer)
com.tencent.bugly.proguard.s: long k()
org.simpleframework.xml.core.TemplateEngine: void parse()
com.tencent.mmkv.MMKV: boolean encodeDouble(long,java.lang.String,double)
org.jaudiotagger.tag.id3.AbstractID3v2Frame: java.lang.String getLoggingFilename()
org.jcodec.containers.mp4.boxes.EsdsBox$DecoderConfig: int getAvgBitrate()
com.github.dhaval2404.imagepicker.ImagePickerFileProvider: ImagePickerFileProvider()
org.jaudiotagger.tag.mp4.field.Mp4TagReverseDnsField: void setEncoding(java.nio.charset.Charset)
com.umeng.analytics.pro.bi: boolean c()
com.google.android.material.search.SearchView: void setText(java.lang.CharSequence)
org.jaudiotagger.tag.id3.framebody.FrameBodyGRID: void setGroupSymbol(byte)
com.caij.puremusic.drive.model.OneDriveFileResponse$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
org.jaudiotagger.audio.generic.Utils: int u(byte)
com.caij.puremusic.db.model.PlaylistEntityQueries$SearchPlaylistByNameQuery: java.lang.String toString()
com.thegrizzlylabs.sardineandroid.Version: java.lang.String getImplementation()
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.images.Artwork)
com.caij.puremusic.fragments.NowPlayingScreen: com.caij.puremusic.fragments.AlbumCoverStyle getDefaultCoverTheme()
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: void launchWXUsingPendingIntent()
com.umeng.commonsdk.statistics.proto.b: boolean j()
org.jaudiotagger.tag.id3.framebody.FrameBodyTLEN: java.lang.String getIdentifier()
com.tencent.bugly.proguard.ae: com.tencent.bugly.proguard.m a(byte[],java.lang.Class)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
com.google.common.collect.Maps$EntryFunction$1: java.lang.Object apply(java.lang.Object)
com.tencent.mm.opensdk.modelmsg.ShowMessageFromWX$Req: void toBundle(android.os.Bundle)
org.simpleframework.xml.stream.Builder: java.lang.String getElement(java.lang.String)
org.json.alipay.b: b(java.lang.String)
androidx.core.view.ViewCompat$Api16Impl: android.view.ViewParent getParentForAccessibility(android.view.View)
com.caij.puremusic.drive.model.PlayListsSubsonicResponse: java.lang.String toString()
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: void insert(org.jaudiotagger.utils.tree.MutableTreeNode,int)
org.jcodec.containers.mp4.MP4Util: MP4Util()
org.jaudiotagger.tag.id3.framebody.FrameBodyTRSN: FrameBodyTRSN(java.nio.ByteBuffer,int)
com.caij.puremusic.activities.LockScreenActivity: LockScreenActivity()
org.jaudiotagger.tag.id3.AbstractID3v2Frame: org.jaudiotagger.tag.id3.AbstractID3v2Frame$StatusFlags getStatusFlags()
org.jcodec.containers.mp4.boxes.SampleToChunkBox: void parse(java.nio.ByteBuffer)
org.jaudiotagger.audio.aiff.ExtDouble: double toDouble()
com.caij.puremusic.db.model.SongQueries$songsByAlbumIdCount$1: SongQueries$songsByAlbumIdCount$1()
org.jaudiotagger.tag.TagOptionSingleton: void setWavSaveOptions(org.jaudiotagger.audio.wav.WavSaveOptions)
com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport: SyncCollectionReport(java.lang.String,com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport$SyncLevel,java.util.Set,java.lang.Integer)
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query songsByNameArtist(java.lang.String,java.lang.String)
com.umeng.analytics.pro.bo: void s()
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory()
org.jcodec.containers.mp4.boxes.CleanApertureExtension: void doWrite(java.nio.ByteBuffer)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] $values()
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.audio.asf.data.ContainerType getLowestContainer()
com.umeng.analytics.pro.cg: cg(java.io.InputStream,java.io.OutputStream)
com.tencent.mm.opensdk.modelmsg.ShowMessageFromWX$Resp: int getType()
org.jaudiotagger.audio.asf.data.MetadataContainer: java.lang.String getValueFor(java.lang.String)
org.jaudiotagger.tag.flac.FlacTag: void addField(org.jaudiotagger.tag.images.Artwork)
com.thegrizzlylabs.sardineandroid.model.Unlock: Unlock()
com.thegrizzlylabs.sardineandroid.model.Location: java.lang.String getHref()
com.thegrizzlylabs.sardineandroid.Sardine: void put(java.lang.String,java.io.File,java.lang.String,boolean,java.lang.String)
com.caij.puremusic.drive.model.AMediaContainer: com.caij.puremusic.drive.model.AMediaContainer copy(java.util.List)
com.heinrichreimersoftware.materialintro.view.InkPageIndicator: void setPageCount(int)
org.jcodec.containers.mp4.boxes.TrackExtendsBox: void setDefaultSampleDescriptionIndex(int)
org.jaudiotagger.audio.flac.metadatablock.BlockType: int getId()
org.simpleframework.xml.stream.InputNodeMap: void build(org.simpleframework.xml.stream.EventNode)
androidx.appcompat.widget.SwitchCompat: int getSwitchPadding()
com.caij.puremusic.drive.model.AlbumItem: java.util.List component9()
org.repackage.a.a.a.a$a$a: android.os.IBinder asBinder()
androidx.fragment.app.Fragment: void registerOnPreAttachListener(androidx.fragment.app.Fragment$OnPreAttachedListener)
androidx.appcompat.widget.AppCompatTextHelper$Api28Impl: android.graphics.Typeface create(android.graphics.Typeface,int,boolean)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyIMG: FieldFrameBodyIMG()
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
com.alipay.android.phone.mrpc.core.HttpUrlHeader: HttpUrlHeader()
org.jaudiotagger.utils.tree.MutableTreeNode: void remove(org.jaudiotagger.utils.tree.MutableTreeNode)
org.jaudiotagger.tag.id3.framebody.FrameBodyTLAN: FrameBodyTLAN()
com.umeng.commonsdk.stateless.d: byte[] a(byte[])
com.umeng.commonsdk.utils.UMUtils: java.lang.String byte2HexFormatted(byte[])
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPlaceholderTextColor()
androidx.media.AudioAttributesImplApi26Parcelizer: AudioAttributesImplApi26Parcelizer()
org.jaudiotagger.audio.wav.WavFileWriter: void deleteTag(org.jaudiotagger.tag.Tag,java.nio.channels.FileChannel,java.lang.String)
com.caij.puremusic.drive.model.OneDriveFileResponse$Companion: kotlinx.serialization.KSerializer serializer()
com.alipay.apmobilesecuritysdk.face.TMNTokenClient: android.content.Context a(com.alipay.apmobilesecuritysdk.face.TMNTokenClient)
org.jaudiotagger.tag.id3.ID3v1Tag: java.lang.String getFirstComment()
org.jaudiotagger.tag.id3.ID3v23Frame$EncodingFlags: void createStructure()
com.tencent.mm.opensdk.modelbase.BaseReq: void toBundle(android.os.Bundle)
com.google.android.material.search.SearchView: void setUseWindowInsetsController(boolean)
org.simpleframework.xml.Serializer: boolean validate(java.lang.Class,java.io.File)
org.jaudiotagger.tag.images.StandardArtwork: java.lang.Object getImage()
com.caij.puremusic.db.model.PlaybackSongQueries$GetPlaybacksByTypeQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.caij.puremusic.drive.model.BaiduFileResponse: java.util.List getList()
com.umeng.commonsdk.framework.UMWorkDispatch: boolean eventHasExist()
com.google.android.material.bottomappbar.BottomAppBar: androidx.appcompat.widget.ActionMenuView getActionMenuView()
com.alipay.android.phone.mrpc.core.o: void a(boolean)
org.simpleframework.xml.core.Reflector: java.lang.Class[] getParameterDependents(java.lang.reflect.Constructor,int)
com.umeng.analytics.pro.bq: bq(byte,int)
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: org.jaudiotagger.tag.id3.AbstractID3v2Frame getFirstField(java.lang.String)
org.repackage.com.miui.deviceid.IdentifierManager: IdentifierManager()
org.simpleframework.xml.core.Model: org.simpleframework.xml.core.Model lookup(java.lang.String,int)
com.caij.puremusic.drive.model.AMetadata: java.lang.String getType()
org.simpleframework.xml.core.ElementLabel: java.lang.String getName()
com.tencent.mm.opensdk.modelmsg.SendAuth: SendAuth()
com.caij.puremusic.db.model.ArtistQueries$artistById$1: ArtistQueries$artistById$1(kotlin.jvm.functions.Function2)
com.umeng.commonsdk.statistics.internal.StatTracer: void saveSate()
org.jaudiotagger.tag.id3.ID3v1Tag: ID3v1Tag(java.io.RandomAccessFile)
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
com.caij.puremusic.network.model.SearchResponse: com.caij.puremusic.network.model.ArtistWrapper getTracks()
com.caij.puremusic.db.model.SongEntityQueries$getPlayListSongCount$1: SongEntityQueries$getPlayListSongCount$1()
com.caij.puremusic.drive.model.GoogleDriveFileResponse$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.simpleframework.xml.core.ElementUnionLabel: java.lang.String toString()
org.jaudiotagger.tag.images.Artwork: java.lang.String getDescription()
com.umeng.analytics.pro.o: void d(java.lang.Object)
org.jaudiotagger.tag.id3.ID3Tags: java.lang.String convertFrameID22To23(java.lang.String)
com.tencent.mm.opensdk.modelmsg.SendTdiAuth$Resp: SendTdiAuth$Resp(android.os.Bundle)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyLYR: java.lang.String toString()
com.umeng.analytics.pro.cd: com.umeng.analytics.pro.cc b()
com.tencent.mm.opensdk.modelmsg.SendTdiAuth$Resp: boolean checkArgs()
org.simpleframework.xml.core.Composite$Builder: Composite$Builder(org.simpleframework.xml.core.Composite,org.simpleframework.xml.core.Criteria,org.simpleframework.xml.core.Schema,org.simpleframework.xml.core.Instance)
com.tencent.bugly.crashreport.CrashReport: void setUserSceneTag(android.content.Context,int)
org.jaudiotagger.tag.datatype.TCONString: java.lang.String getValueWithoutTrailingNull()
org.jaudiotagger.audio.dsf.DsfChunkType: DsfChunkType(java.lang.String,int,java.lang.String)
com.tencent.bugly.proguard.as: void a(java.util.List,long,boolean,boolean,boolean)
com.umeng.analytics.pro.m$a: m$a(com.umeng.analytics.pro.m)
com.caij.puremusic.drive.model.AlbumListResponse$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.umeng.commonsdk.framework.a: void a(int,long)
org.jaudiotagger.tag.reference.Tagger: org.jaudiotagger.tag.reference.Tagger[] values()
com.umeng.analytics.pro.bf$c: void b(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
com.caij.puremusic.drive.model.ArtistItem$$serializer: ArtistItem$$serializer()
com.caij.puremusic.fragments.NowPlayingScreen: int getId()
com.caij.puremusic.network.model.LastFmArtist$Artist$Stats: void setPlaycount(java.lang.String)
com.umeng.analytics.pro.an: an(com.umeng.analytics.pro.an)
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.db.SqlDriver access$getDriver(com.caij.puremusic.db.model.SongQueries)
com.tencent.mm.opensdk.utils.b: int a(java.lang.String)
com.google.android.material.progressindicator.BaseProgressIndicator: int getTrackColor()
org.simpleframework.xml.core.PrimitiveScanner$EmptySection: org.simpleframework.xml.core.Section getSection(java.lang.String)
com.tencent.bugly.proguard.d: void c(java.lang.String,java.lang.Object)
com.google.android.material.chip.Chip: float getIconEndPadding()
androidx.constraintlayout.motion.widget.MotionLayout: android.os.Bundle getTransitionState()
org.simpleframework.xml.core.Primitive: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object)
com.tencent.mm.opensdk.modelbiz.WXLaunchWxaRedirectingPage$Req: int getType()
com.umeng.analytics.pro.y: boolean e(android.content.Context)
com.caij.puremusic.db.model.PlaylistEntityQueries$playlistByName$2: com.caij.puremusic.db.model.PlaylistEntity invoke(long,java.lang.String)
org.jaudiotagger.audio.AudioHeader: int getBitsPerSample()
org.simpleframework.xml.core.MapFactory: org.simpleframework.xml.core.Instance getInstance(org.simpleframework.xml.strategy.Value)
kotlin.reflect.TypesJVMKt$typeToString$unwrap$1: TypesJVMKt$typeToString$unwrap$1()
com.tencent.bugly.proguard.z: java.lang.String a(int)
com.caij.puremusic.drive.model.AlbumItem: java.lang.String getId()
com.umeng.commonsdk.utils.UMUtils: java.lang.String getUmengToken(android.content.Context)
com.tencent.bugly.crashreport.CrashReport: boolean setJavascriptMonitor(android.webkit.WebView,boolean)
org.simpleframework.xml.transform.CharacterTransform: java.lang.String write(java.lang.Object)
com.umeng.commonsdk.statistics.idtracking.d: java.lang.String f()
org.jaudiotagger.tag.id3.framebody.FrameBodyMVNM: FrameBodyMVNM(org.jaudiotagger.tag.id3.framebody.FrameBodyMVNM)
com.caij.puremusic.db.model.ServerLyricsQueries: void insert(com.caij.puremusic.db.model.ServerLyrics)
org.simpleframework.xml.core.SessionManager$Reference: SessionManager$Reference(boolean)
org.jaudiotagger.audio.iff.ChunkSummary: long getFileStartLocation()
org.jcodec.containers.mp4.boxes.SyncSamplesBox: void parse(java.nio.ByteBuffer)
com.google.common.collect.Ordering: Ordering()
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag valueOf(java.lang.String)
com.umeng.common.b: void a(java.lang.String,java.lang.String)
com.google.android.material.button.MaterialButton: void setShouldDrawSurfaceColorStroke(boolean)
org.jaudiotagger.tag.mp4.field.Mp4TagRawBinaryField: org.jaudiotagger.tag.mp4.field.Mp4FieldType getFieldType()
com.caij.puremusic.db.model.SongQueries$clear$1: SongQueries$clear$1()
com.caij.puremusic.model.Genre$Creator: java.lang.Object[] newArray(int)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyAUT: FieldFrameBodyAUT(org.jaudiotagger.tag.lyrics3.FieldFrameBodyAUT)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
com.thegrizzlylabs.sardineandroid.impl.handler.VoidResponseHandler: java.lang.Void handleResponse(okhttp3.Response)
androidx.fragment.app.DialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)
com.caij.puremusic.drive.model.SubsonicSearchResponse$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.caij.puremusic.db.model.SongEntityQueries: app.cash.sqldelight.db.SqlDriver access$getDriver(com.caij.puremusic.db.model.SongEntityQueries)
org.repackage.com.meizu.flyme.openidsdk.SupportInfo: void b(java.lang.String)
com.caij.puremusic.db.model.Folder: java.lang.String getTitle()
com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleColor(int)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void setStartLocationInFile(long)
org.simpleframework.xml.core.LabelMap: LabelMap(org.simpleframework.xml.core.Policy)
com.umeng.analytics.pro.a: java.lang.String d(java.lang.String)
org.simpleframework.xml.stream.OutputNode: java.lang.String getComment()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
org.jaudiotagger.audio.generic.AbstractTag$1: java.lang.Object next()
com.caij.puremusic.db.model.ServerArtistCover: com.caij.puremusic.db.model.ServerArtistCover copy(java.lang.String,long,java.lang.String)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
com.caij.puremusic.drive.model.Prop: void write$Self(com.caij.puremusic.drive.model.Prop,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.alipay.android.phone.mrpc.core.b: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)
com.caij.puremusic.drive.model.BaiduDriveItem: int getIsdir()
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean sendOpenRankListReq(android.content.Context,android.os.Bundle)
androidx.preference.DialogPreference: DialogPreference(android.content.Context,android.util.AttributeSet)
com.umeng.commonsdk.statistics.idtracking.Envelope: void setSignature(java.lang.String)
org.simpleframework.xml.stream.EventNode: boolean isText()
org.simpleframework.xml.core.DefaultScanner: org.simpleframework.xml.core.Label getText()
org.simpleframework.xml.core.Session: java.lang.Object remove(java.lang.Object)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: java.lang.String getValue(org.jaudiotagger.tag.FieldKey,int)
com.thegrizzlylabs.sardineandroid.model.Grant: Grant()
kotlinx.serialization.json.JsonElementSerializer$descriptor$1: JsonElementSerializer$descriptor$1()
com.umeng.commonsdk.statistics.proto.b: void a(java.io.ObjectInputStream)
org.jaudiotagger.tag.datatype.EventTimingCode: java.lang.Object clone()
org.jcodec.containers.mp4.MP4Util$Movie: org.jcodec.containers.mp4.boxes.MovieBox getMoov()
org.koin.core.logger.Level: org.koin.core.logger.Level[] $values()
com.caij.puremusic.drive.model.Directory: java.lang.String getTitle()
com.google.android.material.chip.Chip: void setChipMinHeightResource(int)
org.jaudiotagger.tag.datatype.TextEncodedStringSizeTerminated: TextEncodedStringSizeTerminated(org.jaudiotagger.tag.datatype.TextEncodedStringSizeTerminated)
androidx.constraintlayout.core.SolverVariable$Type: androidx.constraintlayout.core.SolverVariable$Type valueOf(java.lang.String)
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: boolean a(java.lang.String,java.lang.String)
com.umeng.analytics.pro.an: com.umeng.analytics.pro.an d(int)
com.umeng.commonsdk.statistics.common.c: void b()
com.caij.puremusic.drive.model.WebDAVToken$$serializer: com.caij.puremusic.drive.model.WebDAVToken deserialize(kotlinx.serialization.encoding.Decoder)
org.simpleframework.xml.core.Variable: java.lang.Class getType()
org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Object,java.io.InputStream,boolean)
com.caij.puremusic.drive.model.SubsonicAlbum: java.lang.String component8()
com.google.android.material.bottomsheet.BottomSheetBehavior: void access$1200(com.google.android.material.bottomsheet.BottomSheetBehavior,boolean)
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
com.umeng.analytics.pro.ca: void a(java.util.BitSet,int)
org.jaudiotagger.tag.asf.AsfTagCoverField: AsfTagCoverField(org.jaudiotagger.audio.asf.data.MetadataDescriptor)
org.jaudiotagger.tag.id3.ID3v22PreferredFrameOrderComparator: int compare(java.lang.String,java.lang.String)
nl.adaptivity.xmlutil.core.XmlVersion: nl.adaptivity.xmlutil.core.XmlVersion[] values()
com.umeng.analytics.pro.bn: com.umeng.analytics.pro.by r()
org.jaudiotagger.tag.datatype.TempoCode: TempoCode(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody,java.lang.Object)
org.simpleframework.xml.core.PathParser: void attribute()
com.umeng.commonsdk.statistics.proto.a: void write(com.umeng.analytics.pro.bu)
com.caij.puremusic.model.Data: java.lang.String getTracklist()
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTagField: void setContent(java.lang.String)
com.tencent.bugly.proguard.ao: byte[] a()
org.jaudiotagger.tag.id3.framebody.FrameBodyPOPM: java.lang.String getIdentifier()
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: void extractID3v23Formats(java.util.Date,int)
com.caij.puremusic.db.model.SongQueries$SongsByArtistIdWithLikeQuery$execute$1: SongQueries$SongsByArtistIdWithLikeQuery$execute$1(com.caij.puremusic.db.model.SongQueries$SongsByArtistIdWithLikeQuery)
com.caij.puremusic.drive.model.Collection$$serializer: com.caij.puremusic.drive.model.Collection deserialize(kotlinx.serialization.encoding.Decoder)
androidx.fragment.app.DialogFragment: void onStart()
com.google.android.material.textfield.TextInputLayout: void setErrorTextColor(android.content.res.ColorStateList)
com.caij.puremusic.drive.model.PlaylistMetadata: java.lang.String getType()
org.jaudiotagger.audio.generic.GenericTag$GenericTagTextField: void copyContent(org.jaudiotagger.tag.TagField)
com.caij.puremusic.db.model.SongQueries$SongQuery$execute$1: java.lang.Object invoke(java.lang.Object)
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getButtonIconTintList()
org.jaudiotagger.audio.generic.GenericAudioHeader: java.lang.Integer getByteRate()
org.simpleframework.xml.core.TextParameter: java.lang.String getPath(org.simpleframework.xml.core.Context)
com.google.android.material.radiobutton.MaterialRadioButton: MaterialRadioButton(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.network.model.LastFmTrack$Track: LastFmTrack$Track()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getExpandedComponentIdHint()
org.jaudiotagger.audio.mp3.MP3File: void createPlainTextStructureFormatter()
com.tencent.mm.opensdk.utils.Log: void setLogImpl(com.tencent.mm.opensdk.utils.ILog)
com.caij.puremusic.fragments.player.full.FullPlayerFragment: FullPlayerFragment()
org.jaudiotagger.tag.id3.framebody.FrameBodyTSO2: java.lang.String getIdentifier()
com.google.common.base.AbstractIterator$State: AbstractIterator$State(java.lang.String,int)
com.alipay.android.phone.mrpc.core.q: int g()
org.jaudiotagger.test.ExtractID3TagFromFile$MP3FileFilter: ExtractID3TagFromFile$MP3FileFilter(org.jaudiotagger.test.ExtractID3TagFromFile,boolean)
com.umeng.tunnel.UMChannelAgent: UMChannelAgent()
com.caij.puremusic.db.model.PlaylistEntityQueries: app.cash.sqldelight.Query getPlaylistEntityById(long,kotlin.jvm.functions.Function2)
com.caij.puremusic.db.model.SongQueries$firstSongByAlbumId$1: java.lang.Object invoke(java.lang.Object)
nl.adaptivity.xmlutil.serialization.OutputKind: nl.adaptivity.xmlutil.serialization.OutputKind[] $values()
com.caij.puremusic.drive.model.Response: Response()
com.umeng.analytics.pro.y: java.lang.String a(android.content.Context)
com.umeng.commonsdk.statistics.internal.StatTracer: long getLastReqTime()
com.umeng.commonsdk.utils.a$1: boolean handleMessage(android.os.Message)
com.umeng.commonsdk.statistics.proto.d: d(com.umeng.commonsdk.statistics.proto.d)
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessWebview$Req: boolean checkArgs()
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean isNestedScrollingCheckEnabled()
org.simpleframework.xml.core.CacheLabel: java.lang.String getPath()
com.caij.puremusic.network.model.TokenData: java.lang.String getToken_type()
org.simpleframework.xml.core.PrimitiveInlineList: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object)
com.google.android.material.materialswitch.MaterialSwitch: android.graphics.drawable.Drawable getThumbIconDrawable()
com.thegrizzlylabs.sardineandroid.DavResource: java.lang.String getPath()
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.tag.Tag: void setField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.umeng.commonsdk.statistics.proto.a: com.umeng.analytics.pro.bp s()
org.jaudiotagger.audio.AudioFile: java.lang.String displayStructureAsXML()
com.caij.puremusic.drive.model.FMediaContainer$$serializer: com.caij.puremusic.drive.model.FMediaContainer deserialize(kotlinx.serialization.encoding.Decoder)
com.tencent.bugly.proguard.aa: void a(java.lang.String,java.lang.String,boolean)
com.caij.puremusic.db.model.SongEntityQueries$IsSongExistsInPlaylistQuery: SongEntityQueries$IsSongExistsInPlaylistQuery(com.caij.puremusic.db.model.SongEntityQueries,long,long,kotlin.jvm.functions.Function1)
com.caij.puremusic.drive.model.OneDriveItem: void write$Self(com.caij.puremusic.drive.model.OneDriveItem,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.caij.puremusic.drive.model.User: int hashCode()
org.jaudiotagger.tag.id3.framebody.FrameBodyTIT2: FrameBodyTIT2(java.nio.ByteBuffer,int)
com.caij.puremusic.drive.model.AMetadata$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
org.jcodec.containers.mp4.boxes.TimeToSampleBox: TimeToSampleBox(org.jcodec.containers.mp4.boxes.Header)
com.caij.puremusic.db.model.PlayCountEntityQueries$CheckSongExistInPlayCountQuery$execute$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.tag.flac.FlacTag: FlacTag()
org.simpleframework.xml.core.TextListLabel: java.lang.String getEntry()
androidx.core.content.ContextCompat$Api26Impl: android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent)
org.jaudiotagger.audio.wav.WavTagWriter: void deleteExistingMetadataTagsToEndOfFile(java.nio.channels.FileChannel,org.jaudiotagger.tag.wav.WavTag)
org.simpleframework.xml.core.TemplateEngine: TemplateEngine(org.simpleframework.xml.filter.Filter)
org.jaudiotagger.tag.id3.ID3v23Tag: void write(java.nio.channels.WritableByteChannel,int)
org.jaudiotagger.audio.mp3.MP3AudioHeader: void setNumberOfFrames()
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
com.tencent.mm.opensdk.modelbiz.WXInvoiceAuthInsert$Resp: void toBundle(android.os.Bundle)
org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile: org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile[] values()
com.umeng.commonsdk.statistics.proto.a$a: a$a()
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyPairs: AbstractFrameBodyPairs()
org.jcodec.containers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox: long access$000(org.jcodec.containers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox)
org.jaudiotagger.tag.id3.framebody.FrameBodyIPLS: FrameBodyIPLS(byte,java.util.List)
org.jaudiotagger.audio.flac.FlacTagWriter: int computeNeededRoom(org.jaudiotagger.audio.flac.FlacTagWriter$MetadataBlockInfo)
com.umeng.commonsdk.utils.b$a: b$a()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintList(android.content.res.ColorStateList)
org.simpleframework.xml.core.ParameterContact: java.lang.Object get(java.lang.Object)
org.jcodec.containers.mp4.boxes.Box: java.lang.String getFourcc()
com.umeng.analytics.pro.e$d: e$d()
org.jaudiotagger.audio.generic.AbstractTag: void addField(org.jaudiotagger.tag.TagField)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: void remove(org.jaudiotagger.utils.tree.MutableTreeNode)
org.jaudiotagger.tag.id3.ID3v23Tag: ID3v23Tag()
com.umeng.analytics.pro.bu: void a(com.umeng.analytics.pro.bp)
com.bumptech.glide.request.RequestCoordinator$RequestState: com.bumptech.glide.request.RequestCoordinator$RequestState[] values()
com.thegrizzlylabs.sardineandroid.model.Activelock: java.lang.String getDepth()
com.caij.puremusic.drive.model.Part$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.Part)
org.jaudiotagger.tag.id3.framebody.FrameBodyWORS: FrameBodyWORS(java.nio.ByteBuffer,int)
androidx.appcompat.widget.ActionMenuPresenter$SavedState: ActionMenuPresenter$SavedState()
com.caij.puremusic.model.AlbumWrapper: java.util.List getSongs()
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
org.jaudiotagger.audio.ogg.util.OggPageHeader: boolean isLastPacketIncomplete()
com.caij.puremusic.db.model.Song: java.lang.String getComposer()
org.simpleframework.xml.core.AnnotationFactory: AnnotationFactory(org.simpleframework.xml.core.Detail,org.simpleframework.xml.core.Support)
code.name.monkey.appthemehelper.common.prefs.supportv7.ATEPreferenceCategory: ATEPreferenceCategory(android.content.Context,android.util.AttributeSet,int,int)
com.umeng.commonsdk.statistics.proto.c: void clear()
com.tencent.mm.opensdk.modelbiz.WXInvoiceAuthInsert$Req: WXInvoiceAuthInsert$Req()
org.jaudiotagger.tag.id3.framebody.FrameBodySYLT: void setLyrics(byte[])
com.caij.puremusic.drive.model.GoogleDriveFileResponse$Companion: kotlinx.serialization.KSerializer serializer()
org.simpleframework.xml.Attribute: java.lang.String empty()
com.alipay.android.phone.mrpc.core.HttpException: java.lang.String getMsg()
com.google.android.material.card.MaterialCardView: int getContentPaddingTop()
org.jaudiotagger.audio.generic.GenericAudioHeader: int getTrackLength()
org.jaudiotagger.audio.aiff.AiffTagWriter: void writeExtraByteIfChunkOddSize(java.nio.channels.FileChannel,long)
org.jaudiotagger.tag.id3.ID3v1Tag: java.util.List getArtworkList()
com.caij.puremusic.drive.model.Collection: Collection(int,java.lang.String,kotlinx.serialization.internal.SerializationConstructorMarker)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
org.simpleframework.xml.strategy.ObjectValue: boolean isReference()
com.umeng.umzid.a: java.lang.String a(java.lang.String,java.lang.String)
org.simpleframework.xml.core.Persister: boolean validate(java.lang.Class,java.io.Reader,boolean)
com.caij.puremusic.db.model.SongQueries$GetSongCountBySourceIdQuery: long getSourceId()
org.jaudiotagger.tag.id3.TyerTdatAggregatedFrame: java.lang.String getContent()
org.jaudiotagger.test.MergeID3AndMP3Files: void scanSingleDir(java.io.File,java.io.File,java.io.File)
com.umeng.analytics.pro.o$a: o$a()
org.jcodec.containers.mp4.DataBoxes: DataBoxes()
org.jaudiotagger.audio.generic.GenericAudioHeader: void setSamplingRate(int)
org.repackage.com.vivo.identifier.DataBaseOperation: DataBaseOperation(android.content.Context)
org.simpleframework.xml.core.PrimitiveValue: boolean validate(org.simpleframework.xml.stream.InputNode)
org.jaudiotagger.audio.exceptions.NoWritePermissionsException: NoWritePermissionsException()
com.umeng.analytics.filter.a: void setMD5ClearFlag(boolean)
kotlin.reflect.ParameterizedTypeImpl$getTypeName$1$1: ParameterizedTypeImpl$getTypeName$1$1()
org.simpleframework.xml.core.ArrayInstance: java.lang.Class getType()
androidx.fragment.app.Fragment: void registerForContextMenu(android.view.View)
com.tencent.mm.opensdk.modelmsg.WXGameVideoFileObject: boolean checkArgs()
com.umeng.analytics.pro.z: java.lang.String a(android.content.Context)
com.tencent.bugly.proguard.as: com.tencent.bugly.proguard.bp a(android.content.Context,java.util.List,com.tencent.bugly.proguard.aa)
org.jaudiotagger.tag.id3.framebody.FrameBodyUSLT: java.lang.String getUserFriendlyValue()
com.umeng.commonsdk.internal.utils.a: int d(android.content.Context,java.lang.String)
com.umeng.commonsdk.statistics.proto.Response$e: com.umeng.commonsdk.statistics.proto.Response$e a(int)
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType[] values()
com.caij.puremusic.drive.model.PlayListsSubsonicResponse: com.caij.puremusic.drive.model.PlayListsSubsonicResponse copy$default(com.caij.puremusic.drive.model.PlayListsSubsonicResponse,java.lang.String,java.lang.String,com.caij.puremusic.drive.model.PlayLists,int,java.lang.Object)
org.jaudiotagger.audio.io.FileOperator: FileOperator(java.nio.channels.FileChannel)
com.caij.puremusic.db.model.Album: int component2()
org.simpleframework.xml.core.ElementArrayParameter: boolean isRequired()
org.simpleframework.xml.core.PrimitiveScanner: org.simpleframework.xml.core.Label getVersion()
com.caij.puremusic.db.model.ServerLyricsQueries$getById$1: java.lang.Object invoke(java.lang.Object)
com.umeng.vt.diff.util.ClassLoadUtil: java.lang.Class findClass(java.lang.String)
com.caij.vip.PayInfos: PayInfos()
com.tencent.bugly.proguard.bm: void a(com.tencent.bugly.proguard.k)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: boolean isNodeChild(org.jaudiotagger.utils.tree.TreeNode)
org.simpleframework.xml.core.ElementParameter: org.simpleframework.xml.core.Expression getExpression()
com.google.android.material.bottomsheet.BottomSheetBehavior: void calculateHalfExpandedOffset()
org.simpleframework.xml.convert.ScannerBuilder: org.simpleframework.xml.convert.Scanner build(java.lang.Class)
org.jaudiotagger.tag.lyrics3.Lyrics3v2: java.lang.String getIdentifier()
com.caij.puremusic.drive.model.PlayListItem: void write$Self(com.caij.puremusic.drive.model.PlayListItem,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
org.simpleframework.xml.transform.DoubleTransform: java.lang.Object read(java.lang.String)
com.umeng.commonsdk.utils.UMUtils: java.lang.String getSubOSVersion(android.content.Context)
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: boolean isMediaMonkeyFrame()
com.caij.puremusic.fragments.about.AboutFragment: AboutFragment()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.lang.String doGetValueAtIndex(org.jaudiotagger.tag.id3.AbstractID3v2Tag$FrameAndSubId,int)
com.google.android.material.button.MaterialButtonToggleGroup: int getLastVisibleChildIndex()
org.simpleframework.xml.core.CompositeInlineList: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.lang.Class)
kotlinx.coroutines.CoroutineStart: void invoke(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
com.google.common.hash.LittleEndianByteArray$UnsafeByteArray: sun.misc.Unsafe access$200()
com.caij.puremusic.db.model.PlaybackSongQueries: app.cash.sqldelight.Query getPlaybacksByType(int)
com.caij.puremusic.activities.base.AbsSlidingMusicPanelActivity: AbsSlidingMusicPanelActivity()
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void setDefaultLocales(androidx.core.os.LocaleListCompat)
com.caij.puremusic.db.model.FolderQueries: app.cash.sqldelight.Query selectById(long,kotlin.jvm.functions.Function7)
org.jaudiotagger.tag.id3.ID3Tags: java.lang.String forceFrameID23To22(java.lang.String)
com.tencent.bugly.CrashModule: CrashModule()
org.simpleframework.xml.transform.CharacterArrayTransform: java.lang.Object read(java.lang.String)
org.jaudiotagger.audio.ogg.util.VorbisPacketType: org.jaudiotagger.audio.ogg.util.VorbisPacketType[] values()
org.simpleframework.xml.transform.DoubleTransform: java.lang.Double read(java.lang.String)
com.umeng.analytics.pro.an$e: com.umeng.analytics.pro.an$e valueOf(java.lang.String)
org.jcodec.containers.mp4.boxes.ChannelBox$ChannelDescription: int getChannelLabel()
com.caij.puremusic.drive.model.OneDriveItem$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.OneDriveItem)
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.umeng.commonsdk.framework.UMFrUtils: java.lang.String getLegacyEnvelopeDir(android.content.Context)
com.umeng.analytics.pro.bo: void a(byte)
org.jaudiotagger.tag.id3.framebody.FrameBodyAPIC: java.lang.String getUserFriendlyValue()
com.caij.puremusic.drive.model.DavResource: boolean isDirectory()
org.simpleframework.xml.core.MethodScanner: void scan(org.simpleframework.xml.core.Detail)
com.caij.puremusic.model.CategoryInfo$Category: int getStringRes()
com.afollestad.materialdialogs.internal.main.DialogLayout: int getFrameMarginVertical$core()
org.jaudiotagger.audio.asf.util.Utils: byte[] getBytes(long,int)
com.caij.puremusic.activities.tageditor.SongTagEditorActivity$bindingInflater$1: SongTagEditorActivity$bindingInflater$1()
com.alipay.apmobilesecuritysdk.e.i: void a(java.lang.String,java.lang.String)
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl: void rebase(android.content.res.Resources$Theme)
org.jaudiotagger.audio.AudioFile: java.lang.String displayStructureAsPlainText()
org.jaudiotagger.tag.datatype.TextEncodedStringSizeTerminated: java.lang.String getValueWithoutTrailingNull()
com.caij.puremusic.model.Genre: boolean equals(java.lang.Object)
com.caij.puremusic.drive.model.JellyfinSongListResponse: void write$Self(com.caij.puremusic.drive.model.JellyfinSongListResponse,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.caij.puremusic.views.SettingListItemView: com.caij.puremusic.databinding.ListSettingItemViewBinding getBinding()
org.jaudiotagger.tag.id3.framebody.FrameBodyTPOS: FrameBodyTPOS(org.jaudiotagger.tag.id3.framebody.FrameBodyTPOS)
org.jaudiotagger.tag.id3.valuepair.ImageFormats: boolean binaryDataIsJpgFormat(byte[])
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyTextInfo: void addTextValue(java.lang.String)
org.simpleframework.xml.stream.Splitter: java.lang.String process()
org.jcodec.containers.mp4.boxes.DataRefBox: DataRefBox(org.jcodec.containers.mp4.boxes.Header)
org.simpleframework.xml.core.PathParser: java.util.Iterator iterator()
com.google.android.material.bottomsheet.BottomSheetBehavior$1: BottomSheetBehavior$1(com.google.android.material.bottomsheet.BottomSheetBehavior,android.view.View,int)
org.jaudiotagger.audio.asf.data.ChunkContainer: java.util.List assertChunkList(org.jaudiotagger.audio.asf.data.GUID)
com.tencent.bugly.proguard.aa: long l()
com.caij.puremusic.drive.model.PlexAlbumsResponse$Companion: PlexAlbumsResponse$Companion()
org.simpleframework.xml.core.ModelSection: org.simpleframework.xml.core.Section getSection(java.lang.String)
androidx.appcompat.widget.AppCompatCheckedTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.caij.puremusic.drive.model.PlayListsResponse: com.caij.puremusic.drive.model.PlayListsResponse copy(com.caij.puremusic.drive.model.PlayListsSubsonicResponse)
org.jaudiotagger.tag.mp4.Mp4Tag: org.jaudiotagger.tag.TagField createArtworkField(byte[])
org.jaudiotagger.tag.id3.framebody.FrameBodyTOPE: FrameBodyTOPE(org.jaudiotagger.tag.id3.framebody.FrameBodyTOPE)
org.jaudiotagger.audio.dsf.DsdChunk: java.lang.String toString()
org.jaudiotagger.tag.id3.framebody.FrameBodyGRID: void setupObjectList()
org.simpleframework.xml.stream.InputAttribute: java.lang.String toString()
org.simpleframework.xml.core.Label: java.lang.String getName()
org.jaudiotagger.audio.flac.FlacFileWriter: FlacFileWriter()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockHeader: org.jaudiotagger.audio.flac.metadatablock.BlockType getBlockType()
org.simpleframework.xml.core.ElementLabel: org.simpleframework.xml.strategy.Type getType(java.lang.Class)
org.simpleframework.xml.core.Composite: void readText(org.simpleframework.xml.stream.InputNode,java.lang.Object,org.simpleframework.xml.core.Section)
org.jaudiotagger.tag.id3.ID3v24Frames: org.jaudiotagger.tag.FieldKey getGenericKeyFromId3(org.jaudiotagger.tag.id3.ID3v24FieldKey)
com.google.android.material.navigationrail.NavigationRailMenuView: int getItemMinimumHeight()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
com.tencent.bugly.proguard.am: java.util.List b(java.lang.String,java.lang.String,java.lang.String,long)
org.simpleframework.xml.util.WeakCache$SegmentList: WeakCache$SegmentList(org.simpleframework.xml.util.WeakCache,int)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
com.umeng.commonsdk.debug.W: W()
org.simpleframework.xml.core.Composite: void access$400(org.simpleframework.xml.core.Composite,org.simpleframework.xml.stream.InputNode,java.lang.Object,org.simpleframework.xml.core.Section)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getChildFragmentManager()
org.jaudiotagger.tag.InvalidTagException: InvalidTagException(java.lang.Throwable)
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: void setMonthOnly(boolean)
com.thegrizzlylabs.sardineandroid.model.Prop: void setCurrentUserPrivilegeSet(com.thegrizzlylabs.sardineandroid.model.CurrentUserPrivilegeSet)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
org.jaudiotagger.tag.id3.reference.ITunesRating: org.jaudiotagger.tag.id3.reference.ID3Rating getInstance()
com.thegrizzlylabs.sardineandroid.model.Propertybehavior: Propertybehavior()
com.caij.puremusic.db.model.SongQueries$songsDateLastDesc$1: java.lang.Object invoke(java.lang.Object)
com.umeng.commonsdk.service.UMGlobalContext$a: com.umeng.commonsdk.service.UMGlobalContext a()
com.google.android.material.bottomappbar.BottomAppBar: void setMenuAlignmentMode(int)
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean access$1400(com.google.android.material.bottomsheet.BottomSheetBehavior)
com.caij.puremusic.drive.model.PlexArtistsResponse$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
org.simpleframework.xml.core.DetailScanner: void namespace(java.lang.annotation.Annotation)
me.tankery.lib.circularseekbar.CircularSeekBar: void setCircleProgressColor(int)
com.alipay.android.phone.mrpc.core.a.d: d(java.lang.reflect.Type,byte[])
org.simpleframework.xml.convert.ConverterFactory: org.simpleframework.xml.convert.Converter getInstance(java.lang.Class)
com.yalantis.ucrop.view.CropImageView: void setCropBoundsChangeListener(com.yalantis.ucrop.callback.CropBoundsChangeListener)
org.jaudiotagger.tag.id3.framebody.FrameBodyTIME: void setHoursOnly(boolean)
com.tencent.mm.opensdk.diffdev.IDiffDevOAuth: void removeAllListeners()
com.thegrizzlylabs.sardineandroid.model.Ace: void setProtected(com.thegrizzlylabs.sardineandroid.model.Protected)
org.jaudiotagger.tag.id3.framebody.FrameBodyUSLT: FrameBodyUSLT(org.jaudiotagger.tag.id3.framebody.FrameBodyUSLT)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SwitchCompat: void setTrackTintMode(android.graphics.PorterDuff$Mode)
com.tencent.bugly.proguard.bs: void a(com.tencent.bugly.proguard.l)
org.jcodec.containers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox: void doWrite(java.nio.ByteBuffer)
org.simpleframework.xml.core.CacheParameter: java.lang.String toString()
org.simpleframework.xml.core.PrimitiveFactory: java.lang.String getText(java.lang.Object)
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query songsByIds(java.util.Collection,kotlin.jvm.functions.Function18)
org.simpleframework.xml.stream.EventToken: int getLine()
com.tencent.mmkv.MMKV: void mmkvLogImp(int,java.lang.String,int,java.lang.String,java.lang.String)
org.jaudiotagger.tag.TagTextField: java.nio.charset.Charset getEncoding()
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
com.google.android.material.chip.ChipGroup: void setDividerDrawableHorizontal(android.graphics.drawable.Drawable)
org.jaudiotagger.tag.id3.framebody.FrameBodyTBPM: FrameBodyTBPM()
com.bumptech.glide.Priority: Priority(java.lang.String,int)
com.caij.puremusic.db.model.PlaylistEntityQueries$playlists$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.view.MenuItemCompat$Api26Impl: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
org.jaudiotagger.audio.asf.data.MetadataContainer: org.jaudiotagger.audio.asf.data.MetadataDescriptor assertDescriptor(java.lang.String)
androidx.fragment.app.DialogFragment: boolean onHasView()
com.tencent.mm.opensdk.modelmsg.WXImageObject: int getFileSize(java.lang.String)
com.caij.puremusic.activities.tageditor.AlbumTagEditorActivity: AlbumTagEditorActivity()
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl: android.view.ActionMode onWindowStartingActionMode(android.view.Window$Callback,android.view.ActionMode$Callback,int)
org.jaudiotagger.tag.id3.framebody.FrameBodyTLAN: boolean isValid()
com.afollestad.materialdialogs.internal.main.BaseSubLayout: void setDrawDivider(boolean)
com.thegrizzlylabs.sardineandroid.DavResource: java.util.Map getCustomProps(com.thegrizzlylabs.sardineandroid.model.Response)
com.thegrizzlylabs.sardineandroid.model.QuotaAvailableBytes: QuotaAvailableBytes()
org.jaudiotagger.audio.real.RealChunk: byte[] getBytes()
com.umeng.commonsdk.statistics.proto.e: com.umeng.analytics.pro.bp m()
androidx.activity.ComponentDialog: void setContentView(int)
org.jaudiotagger.audio.ogg.OggFileReader: org.jaudiotagger.audio.ogg.util.OggPageHeader readOggPageHeader(java.io.RandomAccessFile,int)
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setCoveredFadeColor(int)
org.jaudiotagger.audio.AudioFile: org.jaudiotagger.tag.id3.AbstractID3v2Tag convertID3Tag(org.jaudiotagger.tag.id3.AbstractID3v2Tag,org.jaudiotagger.tag.reference.ID3V2Version)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
androidx.cardview.widget.CardView: void setMinimumWidth(int)
com.tencent.bugly.BuglyStrategy$a: java.util.Map onCrashHandleStart(int,java.lang.String,java.lang.String,java.lang.String)
org.simpleframework.xml.core.CacheLabel: boolean isRequired()
com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)
org.simpleframework.xml.core.ElementListParameter: boolean isPrimitive()
com.umeng.analytics.pro.as: void a(int,byte[],int)
org.jaudiotagger.audio.asf.io.CountingInputStream: int read(byte[],int,int)
com.google.android.material.chip.ChipGroup: void setChipSpacingVertical(int)
org.jaudiotagger.audio.asf.io.CountingOutputstream: void write(int)
org.simpleframework.xml.core.PrimitiveInlineList: PrimitiveInlineList(org.simpleframework.xml.core.Context,org.simpleframework.xml.strategy.Type,org.simpleframework.xml.strategy.Type,java.lang.String)
com.caij.puremusic.drive.model.ArtistItem: java.lang.String getServerId()
org.jaudiotagger.tag.mp4.field.Mp4TagReverseDnsField: java.lang.String getDescriptor()
com.google.android.material.imageview.ShapeableImageView: int getContentPaddingBottom()
com.caij.puremusic.drive.model.PlayListsSubsonicResponse: int hashCode()
com.umeng.analytics.pro.ar: void e(android.app.Activity)
com.caij.puremusic.drive.model.MediaContainer$Companion: MediaContainer$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.caij.puremusic.drive.model.Type: java.lang.String component3()
com.caij.puremusic.db.model.SongQueries$SongsByIdsQuery$execute$1: java.lang.Object invoke(java.lang.Object)
org.simpleframework.xml.core.CompositeKey: CompositeKey(org.simpleframework.xml.core.Context,org.simpleframework.xml.core.Entry,org.simpleframework.xml.strategy.Type)
com.caij.puremusic.activities.tageditor.AlbumTagEditorActivityV2: AlbumTagEditorActivityV2()
org.jaudiotagger.audio.ogg.OggFileWriter: OggFileWriter()
org.jaudiotagger.tag.id3.ID3v24Frame: ID3v24Frame()
com.caij.puremusic.model.DriveFileParcelable: boolean equals(java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyTCON: FrameBodyTCON(java.nio.ByteBuffer,int)
org.jaudiotagger.tag.mp4.Mp4RatingValue: Mp4RatingValue(java.lang.String,int,java.lang.String,int)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer$Api23: void setAudioSinkPreferredDevice(com.google.android.exoplayer2.audio.AudioSink,java.lang.Object)
org.jaudiotagger.tag.images.StandardArtwork: void setWidth(int)
com.caij.puremusic.drive.model.JellyfinLoginResponse$$serializer: JellyfinLoginResponse$$serializer()
org.jaudiotagger.tag.id3.ID3SyncSafeInteger: int bufferToValue(java.nio.ByteBuffer)
com.tencent.mm.opensdk.modelpay.PayResp: PayResp(android.os.Bundle)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyNumberTotal: AbstractFrameBodyNumberTotal(byte,java.lang.Integer,java.lang.Integer)
com.alipay.android.phone.mrpc.core.l: com.alipay.android.phone.mrpc.core.l b(android.content.Context)
org.jaudiotagger.tag.id3.ID3v22Tag: void loadFrameIntoMap(java.lang.String,org.jaudiotagger.tag.id3.AbstractID3v2Frame)
org.jcodec.containers.mp4.boxes.MovieBox: void appendTrack(org.jcodec.containers.mp4.boxes.TrakBox)
com.tencent.mm.opensdk.channel.MMessageActV2$Args: MMessageActV2$Args()
org.simpleframework.xml.util.Resolver: boolean match(char[],int,char[],int)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
org.jaudiotagger.tag.Tag: void addField(org.jaudiotagger.tag.TagField)
com.tencent.mm.opensdk.modelbiz.WXChannelJumpUrlInfo: void unserialize(android.os.Bundle)
androidx.customview.widget.ViewDragHelper$Callback: void onViewDragStateChanged(int)
com.umeng.commonsdk.utils.UMUtils: java.lang.String parseId(java.lang.String)
org.simpleframework.xml.transform.EnumTransform: java.lang.Object read(java.lang.String)
androidx.cardview.widget.CardView: int getContentPaddingTop()
org.simpleframework.xml.transform.PrimitiveMatcher: PrimitiveMatcher()
com.caij.puremusic.db.model.Song: java.lang.String component7()
org.jaudiotagger.tag.datatype.PairedTextEncodedStringNullTerminated: boolean canBeEncoded()
com.caij.puremusic.drive.model.ADriveItem: java.lang.Long component4()
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a[] values()
com.umeng.commonsdk.utils.c: void d(android.content.Context)
org.jaudiotagger.audio.asf.io.AsfStreamer: void copyChunk(org.jaudiotagger.audio.asf.data.GUID,java.io.InputStream,java.io.OutputStream)
com.umeng.analytics.pro.bi: java.lang.String b()
com.caij.puremusic.db.model.SongEntityQueries: void deleteSongFromPlaylist(long,long)
org.simpleframework.xml.core.ElementListUnionLabel: java.lang.String[] getPaths()
org.jaudiotagger.tag.id3.framebody.FrameBodyOWNE: void write(java.io.ByteArrayOutputStream)
com.umeng.analytics.pro.g: com.umeng.analytics.pro.g a(android.content.Context)
com.caij.puremusic.model.AudioTagInfo: java.util.Map getFieldKeyValueMap()
com.tencent.mm.opensdk.modelmsg.GetMessageFromWX: GetMessageFromWX()
org.jaudiotagger.tag.datatype.TextEncodedStringNullTerminated: TextEncodedStringNullTerminated(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody,java.lang.String)
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean isHideableWhenDragging()
com.tencent.bugly.proguard.r: java.util.List a(java.lang.String)
com.umeng.analytics.pro.ab: void b(android.content.Context)
org.jaudiotagger.tag.mp4.field.Mp4TagRawBinaryField: int getDataSize()
com.caij.puremusic.drive.model.AMetadata: int hashCode()
com.umeng.commonsdk.statistics.common.MLog: void i(java.util.Locale,java.lang.String,java.lang.Object[])
com.tencent.mm.opensdk.diffdev.DiffDevOAuthFactory: com.tencent.mm.opensdk.diffdev.IDiffDevOAuth getDiffDevOAuth()
com.google.common.reflect.TypeToken$TypeFilter: TypeToken$TypeFilter(java.lang.String,int)
org.jaudiotagger.tag.datatype.HashMapInterface: java.util.Iterator iterator()
org.jaudiotagger.audio.wav.WavTagWriter: void deleteInfoTagChunk(java.nio.channels.FileChannel,org.jaudiotagger.tag.wav.WavTag,org.jaudiotagger.audio.iff.ChunkHeader)
com.caij.puremusic.drive.model.Type$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.caij.puremusic.network.model.LastFmArtist$Artist$Image: LastFmArtist$Artist$Image()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
org.jaudiotagger.audio.asf.util.Utils: java.lang.String readCharacterSizedString(java.io.InputStream)
org.jcodec.containers.mp4.boxes.ClipRegionBox: void parse(java.nio.ByteBuffer)
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: void d()
org.jaudiotagger.tag.id3.framebody.FrameBodyTMOO: FrameBodyTMOO(org.jaudiotagger.tag.id3.framebody.FrameBodyTMOO)
org.jaudiotagger.audio.SupportedFileFormat$17: SupportedFileFormat$17(java.lang.String,int,java.lang.String)
com.umeng.analytics.pro.bi: bi(byte,boolean)
org.jcodec.containers.mp4.boxes.PixelAspectExt: void parse(java.nio.ByteBuffer)
com.caij.puremusic.db.model.PlaylistEntity: java.lang.String toString()
org.jcodec.containers.mp4.boxes.ChunkOffsetsBox: long[] getChunkOffsets()
androidx.fragment.app.Fragment: java.lang.Object getSharedElementReturnTransition()
org.jaudiotagger.tag.TagNotFoundException: TagNotFoundException()
com.umeng.analytics.c: void a(android.content.Context,java.lang.String,java.lang.String)
com.caij.puremusic.db.model.SongEntityQueries$SongsFromPlaylistQuery$execute$1: java.lang.Object invoke(java.lang.Object)
com.umeng.commonsdk.statistics.internal.c: void b()
com.tencent.bugly.proguard.bo: void a(com.tencent.bugly.proguard.l)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCheckMarkTintList()
com.bumptech.glide.module.AppGlideModule: AppGlideModule()
com.caij.puremusic.fragments.folder.manager.MusicFolderManagerFragment: MusicFolderManagerFragment()
com.tencent.mm.opensdk.modelmsg.WXStateJumpMiniProgramInfo: void serialize(android.os.Bundle)
com.tencent.mm.opensdk.modelbiz.WXChannelJumpMiniProgramInfo: int type()
com.umeng.analytics.pro.bf: void a(com.umeng.analytics.pro.bu)
com.umeng.commonsdk.UMConfigure: boolean getInitStatus()
org.jaudiotagger.tag.datatype.PartOfSet$PartOfSetValue: java.lang.Integer getTotal()
com.caij.puremusic.db.model.PlayCountEntity: long getSongId()
com.caij.puremusic.db.model.Album$Adapter: Album$Adapter(app.cash.sqldelight.ColumnAdapter,app.cash.sqldelight.ColumnAdapter,app.cash.sqldelight.ColumnAdapter)
org.jaudiotagger.audio.wav.chunk.WavChunkSummary: org.jaudiotagger.audio.iff.ChunkSummary getChunkBeforeFirstMetadataTag(org.jaudiotagger.tag.wav.WavTag)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getNestedScrollAxes()
org.jaudiotagger.tag.id3.framebody.FrameBodyPCNT: FrameBodyPCNT(long)
androidx.core.app.Person$Api28Impl: androidx.core.app.Person fromAndroidPerson(android.app.Person)
com.google.android.material.appbar.CollapsingToolbarLayout: java.lang.CharSequence getTitle()
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getThumbTintList()
org.simpleframework.xml.core.ModelSection: java.lang.String getName()
org.jaudiotagger.utils.tree.EventListenerList: void add(java.lang.Class,java.util.EventListener)
org.jaudiotagger.tag.id3.framebody.FrameBodyTOAL: FrameBodyTOAL()
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyNumberTotal: AbstractFrameBodyNumberTotal(org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyNumberTotal)
org.simpleframework.xml.strategy.Value: java.lang.Class getType()
com.umeng.analytics.pro.a$a: a$a()
org.jaudiotagger.audio.ogg.util.OggPageHeader: org.jaudiotagger.audio.ogg.util.OggPageHeader read(java.nio.ByteBuffer)
org.jaudiotagger.audio.ogg.OggVorbisTagReader: org.jaudiotagger.tag.Tag read(java.io.RandomAccessFile)
com.umeng.analytics.pro.as: boolean a(short,int)
org.simpleframework.xml.core.ModelSection: org.simpleframework.xml.core.Label getText()
com.caij.puremusic.db.model.PlayCountEntityQueries: void deleteById(long)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: java.lang.String getVendor()
com.google.android.material.materialswitch.MaterialSwitch: void setTrackDecorationDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setStartIconCheckable(boolean)
com.umeng.commonsdk.stateless.d: int a(android.content.Context,java.lang.String,java.lang.String,byte[])
com.thegrizzlylabs.sardineandroid.model.Lockinfo: void setOwner(com.thegrizzlylabs.sardineandroid.model.Owner)
com.umeng.commonsdk.config.d$d: com.umeng.commonsdk.config.d$d[] values()
org.simpleframework.xml.core.Detail: boolean isPrimitive()
androidx.media.AudioAttributesImplApi26Parcelizer: androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel)
com.tencent.mmkv.MMKV: boolean containsKey(long,java.lang.String)
org.jaudiotagger.tag.id3.ID3v22Tag: int getSize()
com.umeng.commonsdk.utils.c: int a(int)
com.google.android.material.bottomsheet.BottomSheetBehavior: void updateAccessibilityActions(android.view.View,int)
org.jaudiotagger.tag.id3.framebody.FrameBodyWOAF: FrameBodyWOAF()
com.alipay.android.phone.mrpc.core.q: java.lang.String f()
org.simpleframework.xml.stream.Stack: Stack(int)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()
com.tencent.mm.opensdk.modelmsg.WXAppExtendObject: int type()
org.repackage.com.heytap.openid.sdk.OpenIDSDK: java.lang.String b(android.content.Context)
org.simpleframework.xml.stream.PrefixResolver: java.lang.String getReference(java.lang.String)
com.tencent.bugly.proguard.aw: java.lang.String b()
com.heinrichreimersoftware.materialintro.view.parallax.ParallaxLinearLayout: void setOffset(float)
com.caij.puremusic.drive.model.ParentReference$$serializer: com.caij.puremusic.drive.model.ParentReference deserialize(kotlinx.serialization.encoding.Decoder)
com.tencent.bugly.proguard.ap: java.lang.String a(int,java.lang.String)
com.google.android.material.bottomsheet.BottomSheetDragHandleView: void setBottomSheetBehavior(com.google.android.material.bottomsheet.BottomSheetBehavior)
com.caij.puremusic.drive.model.GoogleDriveFile$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: java.lang.String a(com.umeng.commonsdk.statistics.proto.d)
com.umeng.commonsdk.statistics.proto.a: boolean d()
org.jaudiotagger.utils.tree.TreeModelListener: void treeNodesInserted(org.jaudiotagger.utils.tree.TreeModelEvent)
com.caij.puremusic.drive.model.DropboxDriveFileResponse$$serializer: DropboxDriveFileResponse$$serializer()
org.jaudiotagger.audio.generic.GenericAudioHeader: void setLossless(boolean)
org.simpleframework.xml.core.DetailScanner: java.lang.Class getSuper()
org.jaudiotagger.tag.id3.framebody.FrameBodyXSOT: FrameBodyXSOT(java.nio.ByteBuffer,int)
org.simpleframework.xml.stream.Indenter: java.lang.String create()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: NetworkConnectionInfo$NetworkType(java.lang.String,int,int)
com.caij.puremusic.model.smartplaylist.ShuffleAllPlaylist$Creator: com.caij.puremusic.model.smartplaylist.ShuffleAllPlaylist createFromParcel(android.os.Parcel)
com.thegrizzlylabs.sardineandroid.model.Prop: void setPrincipalURL(com.thegrizzlylabs.sardineandroid.model.PrincipalURL)
org.simpleframework.xml.transform.ArrayMatcher: org.simpleframework.xml.transform.Transform match(java.lang.Class)
com.bumptech.glide.load.EncodeStrategy: com.bumptech.glide.load.EncodeStrategy[] values()
com.caij.puremusic.drive.model.OneDriveFileResponse: int getCount()
org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Class,org.simpleframework.xml.stream.InputNode,org.simpleframework.xml.core.Context)
com.alipay.apmobilesecuritysdk.e.c: c(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.umeng.analytics.pro.ay: void a(com.umeng.analytics.pro.av,byte[],com.umeng.analytics.pro.bc,com.umeng.analytics.pro.bc[])
org.jaudiotagger.tag.id3.ID3v1Tag: boolean hasField(java.lang.String)
org.jaudiotagger.tag.id3.AbstractID3v2Frame: java.nio.charset.Charset getEncoding()
org.jaudiotagger.audio.mp4.Flatten: void flatten(org.jcodec.containers.mp4.MP4Util$Movie,java.io.File)
com.caij.puremusic.model.ArtistWrapper: ArtistWrapper(com.caij.puremusic.db.model.Artist,java.util.List)
org.jaudiotagger.audio.generic.GenericAudioHeader: long getBitRateAsNumber()
com.caij.puremusic.db.model.SongQueries$deleteSongBySource$2: void invoke(kotlin.jvm.functions.Function1)
org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Object,java.io.Reader,boolean)
androidx.fragment.app.Fragment: void onLowMemory()
com.google.android.material.slider.Slider: void setValue(float)
androidx.core.text.HtmlCompat$Api24Impl: android.text.Spanned fromHtml(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler)
org.repackage.com.meizu.flyme.openidsdk.b: java.lang.String a(android.content.pm.PackageManager,java.lang.String)
androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType[] values()
com.tencent.bugly.proguard.k: float a(float,int,boolean)
org.jcodec.containers.mp4.boxes.EsdsBox$DecoderSpecific: java.nio.ByteBuffer getData()
org.simpleframework.xml.core.MethodContact: org.simpleframework.xml.core.MethodPart getWrite()
com.caij.puremusic.db.model.PlaybackSongQueries$GetPlaybacksByTypeQuery: PlaybackSongQueries$GetPlaybacksByTypeQuery(com.caij.puremusic.db.model.PlaybackSongQueries,int,kotlin.jvm.functions.Function1)
org.jaudiotagger.tag.id3.framebody.FrameBodyWOAF: FrameBodyWOAF(java.lang.String)
com.caij.puremusic.drive.model.DavProperties: java.lang.String getContentType(com.caij.puremusic.drive.model.Response)
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration)
org.jcodec.containers.mp4.boxes.MovieBox: void setTimescale(int)
org.jaudiotagger.tag.id3.ID3v22Tag: boolean equals(java.lang.Object)
org.simpleframework.xml.stream.Formatter: void writeNamespace(java.lang.String,java.lang.String)
org.simpleframework.xml.Root: boolean strict()
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
androidx.core.view.ViewCompat$Api17Impl: int getPaddingStart(android.view.View)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSOP: FrameBodyTSOP(org.jaudiotagger.tag.id3.framebody.FrameBodyTSOP)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
com.alipay.apmobilesecuritysdk.a.a: void b()
com.caij.puremusic.drive.model.Metadata$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.tag.mp4.field.Mp4TagReverseDnsField: void copyContent(org.jaudiotagger.tag.TagField)
org.simpleframework.xml.convert.Registry: org.simpleframework.xml.convert.Registry bind(java.lang.Class,org.simpleframework.xml.convert.Converter)
com.tencent.bugly.proguard.as: boolean b(com.tencent.bugly.crashreport.crash.CrashDetailBean,java.util.List,java.util.List)
com.caij.puremusic.views.NumberRollView: void setNumberRoll(float)
org.jaudiotagger.tag.id3.framebody.FrameBodyTDLY: FrameBodyTDLY(java.nio.ByteBuffer,int)
com.tencent.mm.opensdk.modelmsg.WXGameVideoFileObject: int type()
com.google.common.base.Predicates$ObjectPredicate: com.google.common.base.Predicates$ObjectPredicate[] $values()
com.caij.puremusic.drive.model.DropboxDriveFileResponse$$serializer: com.caij.puremusic.drive.model.DropboxDriveFileResponse deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.model.CategoryInfo$Creator: CategoryInfo$Creator()
org.jaudiotagger.tag.id3.framebody.FrameBodyTPE2: FrameBodyTPE2(org.jaudiotagger.tag.id3.framebody.FrameBodyTPE2)
com.umeng.analytics.process.UMProcessDBHelper$a: UMProcessDBHelper$a(com.umeng.analytics.process.UMProcessDBHelper)
com.caij.puremusic.db.model.ServerLyricsQueries$deleteSongBySource$2: void invoke(kotlin.jvm.functions.Function1)
com.umeng.commonsdk.statistics.proto.a: long k()
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: boolean c(com.umeng.commonsdk.statistics.proto.d)
org.simpleframework.xml.core.Composite: Composite(org.simpleframework.xml.core.Context,org.simpleframework.xml.strategy.Type,java.lang.Class)
com.google.android.material.bottomsheet.BottomSheetDialogFragment: void dismiss()
com.umeng.commonsdk.UMInnerImpl$2: void run()
com.google.android.material.search.SearchView: int getSoftInputMode()
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: short getOutputGain()
com.tencent.bugly.proguard.bb: bb()
com.umeng.commonsdk.statistics.proto.d$a: d$a()
androidx.core.os.LocaleListCompat$Api21Impl: boolean matchesLanguageAndScript(java.util.Locale,java.util.Locale)
com.google.android.exoplayer2.mediacodec.MediaCodecInfo$Api29: int areResolutionAndFrameRateCovered(android.media.MediaCodecInfo$VideoCapabilities,int,int,double)
com.thegrizzlylabs.sardineandroid.Sardine: java.util.List getPrincipals(java.lang.String)
com.caij.puremusic.db.model.ArtistQueries$ArtistByNameQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.umeng.analytics.CoreProtocol: void onSenderIdle()
com.umeng.analytics.pro.i: void b()
org.jaudiotagger.tag.id3.framebody.FrameBodyLINK: FrameBodyLINK(org.jaudiotagger.tag.id3.framebody.FrameBodyLINK)
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
org.jaudiotagger.tag.TagOptionSingleton: void setId3v1SaveYear(boolean)
org.jcodec.containers.mp4.boxes.UdtaBox: java.lang.String fourcc()
com.caij.puremusic.fragments.search.Filter: com.caij.puremusic.fragments.search.Filter[] values()
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: int access$102(org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox,int)
org.jaudiotagger.tag.id3.framebody.FrameBodyTDEN: FrameBodyTDEN(java.nio.ByteBuffer,int)
com.caij.puremusic.drive.model.SongItem: java.util.List getArtists()
androidx.viewpager.widget.ViewPager: void setAdapter(androidx.viewpager.widget.PagerAdapter)
com.caij.puremusic.db.model.ServerLyrics: java.lang.String toString()
com.google.common.collect.Iterators$EmptyModifiableIterator: Iterators$EmptyModifiableIterator(java.lang.String,int)
com.umeng.commonsdk.statistics.common.HelperUtils: HelperUtils()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewEndOffset()
com.caij.puremusic.drive.model.SubsonicResponse$Companion: kotlinx.serialization.KSerializer serializer()
org.simpleframework.xml.stream.OutputElement: void remove()
org.jaudiotagger.tag.id3.ID3v1Tag: byte getRelease()
org.simpleframework.xml.core.ModelSection: org.simpleframework.xml.core.ModelMap getModels()
org.simpleframework.xml.transform.InvalidFormatException: InvalidFormatException(java.lang.Throwable,java.lang.String,java.lang.Object[])
org.simpleframework.xml.stream.NodeWriter: void writeAttributes(org.simpleframework.xml.stream.OutputNode)
com.caij.puremusic.model.UpdateInfo$ForcedUpgradeInfo$1: com.caij.puremusic.model.UpdateInfo$ForcedUpgradeInfo createFromParcel(android.os.Parcel)
com.google.common.collect.Iterators$EmptyModifiableIterator: boolean hasNext()
com.umeng.commonsdk.UMConfigureImpl: boolean a(boolean)
com.caij.puremusic.drive.model.SubsonicPlaylist: SubsonicPlaylist(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,int,int,java.lang.String,java.lang.String,java.lang.String,kotlinx.serialization.internal.SerializationConstructorMarker)
org.jaudiotagger.tag.id3.framebody.FrameBodyUSLT: void addLyric(org.jaudiotagger.tag.datatype.Lyrics3Line)
android.support.v4.media.session.MediaSessionCompat$QueueItem$Api21Impl: long getQueueId(android.media.session.MediaSession$QueueItem)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyTextInfo: AbstractFrameBodyTextInfo(java.nio.ByteBuffer,int)
org.simpleframework.xml.stream.InputNode: org.simpleframework.xml.stream.InputNode getNext(java.lang.String)
com.caij.puremusic.drive.model.SearchResult3$Companion: kotlinx.serialization.KSerializer serializer()
org.jaudiotagger.tag.datatype.MultipleTextEncodedStringNullTerminated: boolean canBeEncoded()
org.simpleframework.xml.core.ClassScanner: void complete(java.lang.reflect.Method)
org.jaudiotagger.tag.id3.ID3v23Tag: void deleteField(org.jaudiotagger.tag.id3.ID3v23FieldKey)
org.jaudiotagger.utils.tree.TreeModelEvent: TreeModelEvent(java.lang.Object,java.lang.Object[])
org.simpleframework.xml.transform.ClassTransform: java.lang.String write(java.lang.Object)
com.tencent.mm.opensdk.modelmsg.WXFileObject: boolean checkArgs()
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
com.tencent.bugly.proguard.at: void f()
org.simpleframework.xml.core.ElementListUnionLabel: org.simpleframework.xml.core.Decorator getDecorator()
com.caij.puremusic.db.model.ServerLyricsQueries$deleteById$2: void invoke(kotlin.jvm.functions.Function1)
com.caij.puremusic.drive.model.Part: com.caij.puremusic.drive.model.Part copy(int,java.lang.String,int,java.lang.String,int,java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet)
org.simpleframework.xml.core.Label: java.lang.Object getEmpty(org.simpleframework.xml.core.Context)
androidx.fragment.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)
com.tencent.bugly.proguard.aq: android.content.Context b(com.tencent.bugly.proguard.aq)
org.jaudiotagger.tag.id3.framebody.FrameBodyTRCK: void setText(java.lang.String)
com.thegrizzlylabs.sardineandroid.model.Prop: void setAcl(com.thegrizzlylabs.sardineandroid.model.Acl)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: void setCustomProps(java.lang.String,java.util.Map,java.util.List)
kotlinx.serialization.json.JsonObject$toString$1: JsonObject$toString$1()
com.caij.puremusic.db.model.Song$Adapter: app.cash.sqldelight.ColumnAdapter getSourceTypeAdapter()
com.tencent.bugly.crashreport.CrashReport: void initCrashReport(android.content.Context,java.lang.String,boolean,com.tencent.bugly.crashreport.CrashReport$UserStrategy)
com.tencent.mm.opensdk.modelmsg.LaunchFromWX$Resp: int getType()
com.tencent.bugly.proguard.ai: void a(int,long)
org.simpleframework.xml.core.MethodScanner: void extract(org.simpleframework.xml.core.Detail)
com.umeng.analytics.pro.bu: void q()
com.tencent.mm.opensdk.modelmsg.WXLocationObject: int type()
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: java.lang.String getDataType()
com.caij.puremusic.db.model.ServerAudioFormatQueries$GetByIdQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.umeng.analytics.pro.bn: void c(int)
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$2: CycleDetectingLockFactory$Policies$2(java.lang.String,int)
org.simpleframework.xml.core.Entry: org.simpleframework.xml.core.Converter getKey(org.simpleframework.xml.core.Context)
org.jaudiotagger.tag.datatype.ByteArraySizeTerminated: ByteArraySizeTerminated(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody)
org.jaudiotagger.tag.datatype.BooleanByte: BooleanByte(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody,int)
com.umeng.analytics.pro.bo: byte[] e(int)
com.tencent.mmkv.MMKV: long createNB(int)
com.caij.puremusic.drive.model.FMediaContainer: FMediaContainer()
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$IMediaObject: void unserialize(android.os.Bundle)
androidx.appcompat.widget.SwitchCompat: void setTrackTintList(android.content.res.ColorStateList)
com.caij.puremusic.drive.model.SubsonicPlaylist: java.lang.String toString()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: void initFromByteBuffer(java.nio.ByteBuffer)
com.caij.puremusic.db.model.Album: com.caij.puremusic.db.model.Album copy$default(com.caij.puremusic.db.model.Album,long,int,java.lang.String,long,long,java.lang.String,long,java.lang.String,java.lang.String,int,int,int,java.lang.Object)
kotlinx.coroutines.channels.BufferOverflow: BufferOverflow(java.lang.String,int)
com.umeng.commonsdk.internal.utils.a: java.lang.String b()
com.thegrizzlylabs.sardineandroid.model.SearchRequest: java.lang.String getQuery()
org.jaudiotagger.audio.generic.Utils: java.lang.Integer reinterpretStringAsInt(java.lang.String)
org.simpleframework.xml.core.Persister: Persister(org.simpleframework.xml.strategy.Strategy,org.simpleframework.xml.stream.Format)
com.tencent.mm.opensdk.modelmsg.GetMessageFromWX$Req: GetMessageFromWX$Req(android.os.Bundle)
org.jaudiotagger.tag.id3.ID3v22Frame: ID3v22Frame(org.jaudiotagger.tag.id3.framebody.AbstractID3v2FrameBody)
com.umeng.analytics.vshelper.b: void a()
com.thegrizzlylabs.sardineandroid.model.Propertybehavior: com.thegrizzlylabs.sardineandroid.model.Keepalive getKeepalive()
org.simpleframework.xml.transform.PackageMatcher: org.simpleframework.xml.transform.Transform matchEnum(java.lang.Class)
org.jaudiotagger.audio.dsf.DsfChunkType: org.jaudiotagger.audio.dsf.DsfChunkType valueOf(java.lang.String)
com.umeng.commonsdk.statistics.proto.a: void f()
com.tencent.bugly.proguard.m: void a(java.lang.StringBuilder,int)
org.jaudiotagger.audio.asf.io.RandomAccessFileOutputStream: RandomAccessFileOutputStream(java.io.RandomAccessFile)
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String getArtist()
com.caij.puremusic.db.model.SongEntityQueries$GetSongEntityQuery$execute$1: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.db.model.SongQueries$SongsByArtistIdWithLikeQuery: java.lang.String getArtistId()
org.jaudiotagger.tag.id3.framebody.FrameBodyUSER: void write(java.io.ByteArrayOutputStream)
com.tencent.mm.opensdk.modelmsg.WXEmojiObject: WXEmojiObject(java.lang.String)
org.jcodec.containers.mp4.boxes.TrackExtendsBox: java.lang.String fourcc()
org.simpleframework.xml.filter.PlatformFilter: PlatformFilter(java.util.Map)
org.jaudiotagger.tag.id3.framebody.FrameBodyTPE1: java.lang.String getIdentifier()
org.jaudiotagger.tag.id3.AbstractTagFrame: org.jaudiotagger.tag.id3.AbstractTagFrameBody getBody()
com.caij.puremusic.drive.model.ImageTags: ImageTags(java.lang.String)
org.jcodec.containers.mp4.boxes.EsdsBox$DecoderConfig: int getObjectType()
com.umeng.analytics.pro.ab: java.lang.String a(android.content.Context)
org.jaudiotagger.audio.aiff.chunk.AiffChunkType: org.jaudiotagger.audio.aiff.chunk.AiffChunkType valueOf(java.lang.String)
org.jaudiotagger.audio.mp3.XingFrame: boolean isFrameCountEnabled()
org.jaudiotagger.tag.TagOptionSingleton: void setVorbisAlbumArtistSaveOptions(org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistSaveOptions)
com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport$SyncLevel: com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport$SyncLevel[] values()
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: java.lang.String getCode()
org.simpleframework.xml.core.ConstructorScanner: org.simpleframework.xml.core.Signature getSignature()
com.caij.puremusic.db.model.SongQueries$SongQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.umeng.analytics.pro.ac: ac()
com.google.android.gms.internal.play_billing.zzcz: zzcz()
com.umeng.commonsdk.statistics.idtracking.j: java.lang.String h()
org.jaudiotagger.audio.SupportedFileFormat$10: SupportedFileFormat$10(java.lang.String,int,java.lang.String)
com.caij.puremusic.drive.model.OneDriveItem$$serializer: com.caij.puremusic.drive.model.OneDriveItem deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSO2: FrameBodyTSO2(java.nio.ByteBuffer,int)
com.caij.puremusic.db.model.AlbumQueries$getAlbumByArtistId$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.tencent.mm.opensdk.modelbiz.WXInvoiceAuthInsert$Req: void toBundle(android.os.Bundle)
org.jaudiotagger.tag.lyrics3.Lyrics3v1: boolean equals(java.lang.Object)
com.umeng.analytics.process.UMProcessDBHelper$InsertEventCallback: UMProcessDBHelper$InsertEventCallback(com.umeng.analytics.process.UMProcessDBHelper)
com.caij.puremusic.drive.model.GoogleDriveFile: GoogleDriveFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)
com.google.android.material.progressindicator.LinearProgressIndicator: int getIndicatorDirection()
com.thegrizzlylabs.sardineandroid.Sardine: void put(java.lang.String,java.io.File,java.lang.String,boolean)
io.ktor.client.engine.okhttp.OkHttpEngine$Companion$okHttpClientPrototype$2: OkHttpEngine$Companion$okHttpClientPrototype$2()
org.json.alipay.a: a()
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: byte getAudioChannels()
org.jaudiotagger.tag.TagOptionSingleton: boolean isWriteMp4GenresAsText()
org.jaudiotagger.tag.id3.ID3v1Tag: ID3v1Tag()
com.tencent.bugly.proguard.bl: void a(java.lang.StringBuilder,int)
com.umeng.analytics.pro.bf: void b(com.umeng.analytics.pro.bu)
org.jaudiotagger.tag.id3.framebody.FrameBodyTPE4: FrameBodyTPE4(java.nio.ByteBuffer,int)
com.caij.puremusic.drive.model.Media: int getBitrate()
org.jaudiotagger.tag.id3.ID3TextEncodingConversion: byte getUnicodeTextEncoding(org.jaudiotagger.tag.id3.AbstractTagFrame)
androidx.preference.DialogPreference: DialogPreference(android.content.Context,android.util.AttributeSet,int,int)
com.caij.puremusic.drive.model.Type: java.lang.String component1()
com.caij.puremusic.db.model.SongEntityQueries$getPlaylistLastAddSong$2: SongEntityQueries$getPlaylistLastAddSong$2()
com.caij.puremusic.drive.model.BaiduFileResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
io.ktor.client.engine.okhttp.OkHttpEngine$clientCache$2: OkHttpEngine$clientCache$2()
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getSuffixTextView()
com.umeng.analytics.pro.bo: void b(long)
com.umeng.analytics.pro.ci: int a(byte[],int,int)
com.caij.puremusic.drive.model.SubsonicPlaylist$$serializer: SubsonicPlaylist$$serializer()
com.tencent.bugly.BuglyStrategy: com.tencent.bugly.BuglyStrategy setEnableNativeCrashMonitor(boolean)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyETT: java.lang.String getIdentifier()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.tencent.bugly.proguard.br: br()
org.jaudiotagger.tag.id3.ID3v24Tag: java.nio.ByteBuffer writeHeaderToBuffer(int,int)
org.simpleframework.xml.core.ElementListLabel: org.simpleframework.xml.core.Expression getExpression()
com.umeng.commonsdk.statistics.proto.c: com.umeng.analytics.pro.bz o()
com.caij.puremusic.db.model.Album: long getArtistId()
com.umeng.commonsdk.statistics.proto.c: void write(com.umeng.analytics.pro.bu)
com.umeng.commonsdk.framework.UMWorkDispatch: void handleQuit()
org.jaudiotagger.tag.id3.framebody.FrameBodyDeprecated: java.lang.String getIdentifier()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
org.simpleframework.xml.transform.AtomicIntegerTransform: java.lang.Object read(java.lang.String)
org.jcodec.containers.mp4.boxes.KeysBox: java.lang.String fourcc()
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.PathInterpolator createPathInterpolator(float,float)
org.jcodec.containers.mp4.boxes.SegmentIndexBox$Reference: java.lang.String toString()
com.google.android.material.slider.BaseSlider: android.content.res.ColorStateList getTrackInactiveTintList()
org.simpleframework.xml.core.ExtractorFactory$ElementListExtractor: java.lang.Class getType(org.simpleframework.xml.ElementList)
org.jaudiotagger.logging.PlainTextTagDisplayFormatter: void openHeadingElement(java.lang.String,java.lang.String)
com.caij.puremusic.drive.model.SongItem: java.lang.String getServerId()
com.caij.puremusic.drive.model.BaiduDriveItem: void write$Self(com.caij.puremusic.drive.model.BaiduDriveItem,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
com.caij.puremusic.db.model.SongQueries$songsByArtist$2: SongQueries$songsByArtist$2()
com.tencent.mm.opensdk.modelbiz.WXInvoiceAuthInsert$Resp: void fromBundle(android.os.Bundle)
com.google.android.material.search.SearchView: void setToolbarTouchscreenBlocksFocus(boolean)
com.caij.puremusic.drive.model.SubsonicResponse: java.lang.String component2()
org.jaudiotagger.audio.AudioHeader: java.lang.String getFormat()
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidthFocused()
org.jcodec.containers.mp4.boxes.SampleSizesBox: void parse(java.nio.ByteBuffer)
org.jaudiotagger.audio.asf.data.FileHeader: java.math.BigInteger getFileSize()
com.umeng.commonsdk.statistics.proto.c$d: c$d(com.umeng.commonsdk.statistics.proto.c$1)
com.umeng.commonsdk.statistics.proto.e: e(long,java.lang.String)
com.caij.puremusic.db.model.ArtistQueries$artists$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.app.NavUtils$Api16Impl: boolean navigateUpTo(android.app.Activity,android.content.Intent)
com.caij.puremusic.db.model.SongEntityQueries$IsSongExistsInPlaylistQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
org.jcodec.containers.mp4.boxes.Edit: float getRate()
org.simpleframework.xml.core.KeyBuilder: java.lang.String getKey(java.lang.String[])
org.jaudiotagger.tag.flac.FlacTag: org.jaudiotagger.tag.TagField createLinkedArtworkField(java.lang.String)
com.umeng.analytics.c: c()
org.jaudiotagger.tag.id3.framebody.FrameBodyTDEN: java.lang.String getIdentifier()
androidx.appcompat.app.AppCompatDialog: int getThemeResId(android.content.Context,int)
com.afollestad.materialdialogs.internal.main.DialogLayout: void setContentLayout(com.afollestad.materialdialogs.internal.message.DialogContentLayout)
com.google.android.material.appbar.CollapsingToolbarLayout: void setVisibility(int)
com.umeng.commonsdk.utils.UMUtils: java.lang.String getAppkeyByXML(android.content.Context)
com.tencent.bugly.proguard.af: byte[] a(java.lang.String,byte[],com.tencent.bugly.proguard.aj,java.util.Map)
org.jaudiotagger.tag.id3.framebody.FrameBodyUFID: void setOwner(java.lang.String)
androidx.fragment.app.DialogFragment: DialogFragment(int)
com.umeng.commonsdk.statistics.proto.d: com.umeng.analytics.pro.bc fieldForId(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyAPIC: java.lang.String getDescription()
org.jaudiotagger.audio.opus.OpusVorbisTagWriter: java.util.List readPages(java.nio.channels.FileChannel)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$1: java.lang.Object nextElement()
com.tencent.mm.opensdk.constants.Build: int getMajorVersion()
org.jcodec.containers.mp4.boxes.EditListBox: void parse(java.nio.ByteBuffer)
org.jaudiotagger.tag.KeyNotFoundException: KeyNotFoundException()
org.simpleframework.xml.core.FieldScanner: FieldScanner(org.simpleframework.xml.core.Detail,org.simpleframework.xml.core.Support)
nl.adaptivity.xmlutil.core.XmlVersion: nl.adaptivity.xmlutil.core.XmlVersion valueOf(java.lang.String)
com.google.android.material.slider.Slider: int getHaloRadius()
org.jaudiotagger.audio.ogg.VorbisVersion: java.lang.String toString()
com.tencent.mm.opensdk.modelmsg.SendAuth$Resp: int getType()
com.caij.puremusic.db.model.SongQueries$song$1: SongQueries$song$1(kotlin.jvm.functions.Function18,com.caij.puremusic.db.model.SongQueries)
com.tencent.mm.opensdk.modelbiz.WXChannelOpenProfile$Resp: int getType()
com.google.android.material.imageview.ShapeableImageView: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
org.simpleframework.xml.transform.RegistryMatcher: RegistryMatcher()
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior()
com.umeng.analytics.pro.l: l(com.umeng.analytics.pro.l$1)
com.caij.puremusic.drive.model.FMediaContainer$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.caij.puremusic.db.model.SongQueries$GetAlbumSongCountQuery$execute$1: java.lang.Object invoke(java.lang.Object)
org.simpleframework.xml.core.SignatureCreator: double getPercentage(org.simpleframework.xml.core.Criteria)
org.jaudiotagger.tag.mp4.field.Mp4TrackField: Mp4TrackField(int,int)
com.umeng.commonsdk.UMConfigureInternation: UMConfigureInternation()
org.jcodec.containers.mp4.boxes.MovieBox: org.jcodec.containers.mp4.boxes.TrakBox[] getTracks()
com.google.android.material.textfield.TextInputLayout: float getHintCollapsedTextHeight()
org.simpleframework.xml.stream.PullReader$Start: int getLine()
org.jcodec.containers.mp4.boxes.Box$LeafBox: Box$LeafBox(org.jcodec.containers.mp4.boxes.Header)
com.google.android.material.button.MaterialButton: int getIconSize()
org.simpleframework.xml.transform.IntegerTransform: IntegerTransform()
com.tencent.mm.opensdk.diffdev.a.d: int a()
org.repackage.com.meizu.flyme.openidsdk.OpenId: OpenId(java.lang.String)
com.caij.puremusic.network.model.LastFmTrack$Track$Wiki: void setPublished(java.lang.String)
org.jaudiotagger.audio.mp4.RelocateMP4Editor: org.jcodec.containers.mp4.MP4Util$Atom getMoov(java.nio.channels.FileChannel)
com.umeng.analytics.vshelper.PageNameMonitor$a: com.umeng.analytics.vshelper.PageNameMonitor a()
app.cash.sqldelight.BaseTransacterImpl: java.lang.Object postTransactionCleanup(app.cash.sqldelight.Transacter$Transaction,app.cash.sqldelight.Transacter$Transaction,java.lang.Throwable,java.lang.Object)
com.caij.puremusic.drive.model.MediaInfoWrapper: java.util.ArrayList component8()
com.caij.puremusic.drive.model.Media: java.util.List getPart()
com.caij.puremusic.drive.model.SubsonicResponse: java.lang.String toString()
com.caij.puremusic.drive.model.DropboxDriveFileResponse$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
org.jaudiotagger.audio.aiff.chunk.AiffChunkReader: AiffChunkReader()
com.umeng.analytics.pro.bf: java.util.List a(java.util.List)
org.koin.core.definition.BeanDefinition$toString$defOtherTypes$typesAsString$1: BeanDefinition$toString$defOtherTypes$typesAsString$1()
com.umeng.umzid.ZIDManager: void init(android.content.Context,java.lang.String,com.umeng.umzid.IZIDCompletionCallback)
org.repackage.com.vivo.identifier.IdentifierIdClient: void d()
org.jaudiotagger.tag.id3.AbstractID3Tag: byte getRevision()
com.bumptech.glide.load.ImageHeaderParser$ImageType: boolean isWebp()
org.simpleframework.xml.core.Qualifier: void decorate(org.simpleframework.xml.stream.OutputNode)
org.jaudiotagger.tag.images.AndroidArtwork: int getPictureType()
com.caij.puremusic.drive.model.AlbumList$$serializer: com.caij.puremusic.drive.model.AlbumList deserialize(kotlinx.serialization.encoding.Decoder)
com.alipay.apmobilesecuritysdk.e.f: java.lang.String a()
com.alipay.tscenter.biz.rpc.vkeydfp.result.BaseResult: BaseResult()
com.caij.puremusic.model.Data: java.lang.String getLink()
org.slf4j.event.Level: java.lang.String toString()
org.jaudiotagger.audio.asf.data.AudioStreamChunk: void setBitsPerSample(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyOWNE: java.lang.String getIdentifier()
com.tencent.mm.opensdk.modelbase.BaseReq: BaseReq()
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
com.google.android.material.navigation.NavigationBarItemView: com.google.android.material.badge.BadgeDrawable getBadge()
com.tencent.bugly.crashreport.CrashReport: void closeCrashReport()
org.jaudiotagger.audio.exceptions.NoWritePermissionsException: NoWritePermissionsException(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(int)
org.jcodec.containers.mp4.boxes.ChunkOffsetsBox: org.jcodec.containers.mp4.boxes.ChunkOffsetsBox createChunkOffsetsBox(long[])
com.google.android.material.appbar.CollapsingToolbarLayout: int getCollapsedTitleGravity()
com.caij.puremusic.drive.model.Type$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.caij.puremusic.drive.model.SubsonicSearchResponse$$serializer: SubsonicSearchResponse$$serializer()
org.jaudiotagger.audio.asf.io.AsfHeaderReader: java.io.InputStream createStream(java.io.RandomAccessFile)
org.simpleframework.xml.stream.PullReader: org.simpleframework.xml.stream.EventNode read()
org.simpleframework.xml.transform.AtomicLongTransform: AtomicLongTransform()
org.simpleframework.xml.core.TextParameter$Contact: TextParameter$Contact(org.simpleframework.xml.Text,java.lang.reflect.Constructor,int)
org.jaudiotagger.audio.aiff.AiffUtil: java.lang.String formatDate(java.util.Date)
org.jaudiotagger.tag.datatype.MultipleTextEncodedStringNullTerminated$Values: int getNumberOfValues()
org.jcodec.containers.mp4.boxes.MediaHeaderBox: void setTimescale(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyTOFN: java.lang.String getIdentifier()
org.jaudiotagger.tag.id3.ID3v24Frame: int getSize()
com.google.android.datatransport.cct.CctBackendFactory: CctBackendFactory()
com.umeng.analytics.AnalyticsConfig: AnalyticsConfig()
org.jaudiotagger.tag.datatype.EventTimingCode: void readByteArray(byte[],int)
com.caij.puremusic.drive.model.ParentReference$Companion: ParentReference$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.jcodec.containers.mp4.MP4Util: org.jcodec.containers.mp4.boxes.Box parseBox(java.nio.ByteBuffer,org.jcodec.containers.mp4.boxes.Header,org.jcodec.containers.mp4.IBoxFactory)
com.alipay.apmobilesecuritysdk.e.d: com.alipay.apmobilesecuritysdk.e.c b()
com.umeng.commonsdk.a: a()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: org.jaudiotagger.audio.aiff.chunk.AiffCompressionType valueOf(java.lang.String)
com.google.android.material.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)
org.simpleframework.xml.core.ExpressionBuilder: org.simpleframework.xml.core.Expression create(java.lang.String)
org.jaudiotagger.tag.id3.AbstractTagFrameBody: void createStructure()
org.simpleframework.xml.stream.NodeWriter: boolean isRoot(org.simpleframework.xml.stream.OutputNode)
org.jaudiotagger.audio.generic.Utils: java.nio.ByteBuffer duplicate(java.nio.ByteBuffer)
com.google.android.material.slider.Slider: float getThumbElevation()
com.tencent.bugly.proguard.ai: int b(com.tencent.bugly.proguard.ai)
com.google.android.material.internal.NavigationMenuItemView: void setIconSize(int)
com.caij.puremusic.db.model.SongQueries: void deleteSongBySource(long)
com.umeng.analytics.pro.e$a: e$a()
com.tencent.bugly.proguard.r: void b(java.util.List)
org.repackage.com.zui.deviceidservice.IDeviceidInterface: java.lang.String a(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
org.jcodec.containers.mp4.boxes.MP4ABox: int estimateSize()
androidx.cardview.widget.CardView: void setCardElevation(float)
org.simpleframework.xml.ElementList: boolean inline()
org.jaudiotagger.tag.aiff.AiffTag: java.lang.String getFirst(java.lang.String)
org.repackage.com.meizu.flyme.openidsdk.b: void a(boolean)
com.caij.puremusic.model.smartplaylist.TopTracksPlaylist$Creator: TopTracksPlaylist$Creator()
com.caij.puremusic.drive.model.ArtistItem$Companion: kotlinx.serialization.KSerializer serializer()
org.jaudiotagger.tag.id3.ID3v24Tag: org.jaudiotagger.tag.TagField createArtworkField(byte[],java.lang.String)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPaused(android.app.Activity)
org.jaudiotagger.audio.asf.io.StreamChunkReader: org.jaudiotagger.audio.asf.data.GUID[] getApplyingIds()
com.caij.puremusic.db.model.SearchAlbumResultQueries: SearchAlbumResultQueries(app.cash.sqldelight.db.SqlDriver)
org.jaudiotagger.audio.mp3.MPEGFrameHeader: void setCopyrighted()
org.jaudiotagger.audio.asf.util.Utils: boolean isStringLengthValidNullSafe(java.lang.String)
org.jaudiotagger.audio.generic.GenericAudioHeader: int getChannelNumber()
androidx.fragment.app.Fragment: void performMultiWindowModeChanged(boolean)
com.tencent.mm.opensdk.openapi.WXAPIFactory: com.tencent.mm.opensdk.openapi.IWXAPI createWXAPI(android.content.Context,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.caij.puremusic.drive.model.PlexLoginResponse$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.alipay.apmobilesecuritysdk.face.TMNTokenClient$1: TMNTokenClient$1(com.alipay.apmobilesecuritysdk.face.TMNTokenClient,java.util.Map,com.alipay.apmobilesecuritysdk.face.TMNTokenClient$InitResultListener,java.lang.String)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View)
me.tankery.lib.circularseekbar.CircularSeekBar: CircularSeekBar(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.model.UpdateInfo$1: UpdateInfo$1()
com.umeng.analytics.process.UMProcessDBHelper$1: UMProcessDBHelper$1(com.umeng.analytics.process.UMProcessDBHelper)
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean sendFinderOpenLive(android.content.Context,com.tencent.mm.opensdk.modelbase.BaseReq)
com.umeng.umzid.b$a: b$a()
org.simpleframework.xml.core.Entry: java.lang.String getValue()
org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId: org.repackage.com.zui.deviceidservice.IDeviceidInterface a(org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId,org.repackage.com.zui.deviceidservice.IDeviceidInterface)
org.jaudiotagger.audio.SupportedFileFormat$5: org.jaudiotagger.tag.Tag createDefaultTag()
com.umeng.analytics.vshelper.b: void a(android.app.Activity)
org.jaudiotagger.tag.TagException: TagException()
com.umeng.commonsdk.statistics.common.DataHelper: java.lang.String encryptBySHA1(java.lang.String)
com.umeng.analytics.pro.u: void b(android.content.Context,java.lang.Object)
com.caij.puremusic.db.model.ServerAudioFormat: java.lang.String getMimeType()
org.jaudiotagger.tag.id3.framebody.FrameBodyPCNT: FrameBodyPCNT(java.nio.ByteBuffer,int)
com.umeng.common.b: b()
org.simpleframework.xml.core.Traverser: Traverser(org.simpleframework.xml.core.Context)
com.google.android.material.chip.Chip: float getChipCornerRadius()
com.tencent.mm.opensdk.modelmsg.LaunchFromWX$Req: void toBundle(android.os.Bundle)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()
com.tencent.mm.opensdk.modelbiz.WXChannelOpenEvent$Req: WXChannelOpenEvent$Req()
org.jaudiotagger.tag.datatype.BooleanString: BooleanString(org.jaudiotagger.tag.datatype.BooleanString)
org.jaudiotagger.tag.lyrics3.Lyrics3v2: int getSize()
org.jaudiotagger.tag.id3.ID3v23Tag: ID3v23Tag(java.nio.ByteBuffer)
com.tencent.mm.opensdk.modelbiz.OpenBusiLuckyMoney$Req: boolean checkArgs()
org.simpleframework.xml.core.Persister: boolean validate(java.lang.Class,org.simpleframework.xml.stream.InputNode,boolean)
org.jaudiotagger.tag.id3.framebody.FrameBodySEEK: FrameBodySEEK(java.nio.ByteBuffer,int)
com.caij.puremusic.fragments.backup.RestoreActivity: RestoreActivity()
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query allSongs()
com.caij.puremusic.model.DeezerResponse: com.caij.puremusic.model.DeezerResponse copy$default(com.caij.puremusic.model.DeezerResponse,java.util.List,java.lang.String,int,int,java.lang.Object)
org.jaudiotagger.audio.generic.Utils: void writePascalString(java.nio.ByteBuffer,java.lang.String)
com.caij.puremusic.activities.bugreport.BugReportActivity: BugReportActivity()
com.tencent.mmkv.MMKVLogLevel: com.tencent.mmkv.MMKVLogLevel[] values()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewStartOffset()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
com.caij.puremusic.db.model.PlaylistEntityQueries$SearchPlaylistByNameQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
com.umeng.analytics.pro.bf$a: void a(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
org.simpleframework.xml.stream.HyphenStyle: void setAttribute(java.lang.String,java.lang.String)
com.caij.puremusic.db.model.Song: java.lang.String getTitle()
com.caij.puremusic.network.model.LastFmAlbum$Album$Tags: java.util.List getTag()
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox$Factory: org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox$Factory defaultSampleFlags(long)
com.caij.puremusic.model.Data: java.lang.String component2()
com.caij.puremusic.fragments.lyrics.LyricsFragment: LyricsFragment()
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setShadowDrawableLeft(android.graphics.drawable.Drawable)
com.caij.puremusic.db.model.ServerArtistCoverQueries$insert$2: java.lang.Object invoke(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(int)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior()
org.simpleframework.xml.util.Resolver$Stack: void purge(int)
com.umeng.commonsdk.statistics.internal.b: void onRequestFailed()
org.jaudiotagger.audio.iff.ChunkHeader: long getSize()
org.jaudiotagger.tag.datatype.PairedTextEncodedStringNullTerminated: PairedTextEncodedStringNullTerminated(org.jaudiotagger.tag.datatype.PairedTextEncodedStringNullTerminated)
com.caij.puremusic.drive.model.JellyfinSongListResponse$Companion: kotlinx.serialization.KSerializer serializer()
com.caij.puremusic.drive.model.Part: int hashCode()
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintMode(android.graphics.PorterDuff$Mode)
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgram$Resp: int getType()
com.afollestad.materialdialogs.internal.button.DialogActionButton: DialogActionButton(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.db.model.SongQueries$songsByAlum$2: com.caij.puremusic.db.model.Song invoke(long,java.lang.String,int,int,long,java.lang.String,java.lang.String,long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,long,long)
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getEmuiVersion(java.util.Properties)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)
org.simpleframework.xml.core.PrimitiveScanner: org.simpleframework.xml.core.Function getResolve()
com.tencent.bugly.proguard.s: int g()
com.google.common.hash.LittleEndianByteArray$JavaLittleEndianBytes: com.google.common.hash.LittleEndianByteArray$JavaLittleEndianBytes valueOf(java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: void setYear(java.lang.String)
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$IWXSceneDataObject: int getJumpType()
org.simpleframework.xml.transform.PackageMatcher: PackageMatcher()
com.google.android.material.bottomsheet.BottomSheetDragHandleView: void onBottomSheetStateChanged(int)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: boolean getAllowsChildren()
com.tencent.mm.opensdk.channel.a.a: int a(android.os.Bundle,java.lang.String,int)
com.caij.puremusic.drive.model.SubsonicSearchListResponse: SubsonicSearchListResponse(com.caij.puremusic.drive.model.SubsonicSearchResponse,int,kotlin.jvm.internal.DefaultConstructorMarker)
org.jaudiotagger.logging.XMLTagDisplayFormatter: void closeHeadingElement(java.lang.String)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
org.jaudiotagger.tag.id3.framebody.FrameBodyAPIC: boolean isImageUrl()
org.jaudiotagger.audio.asf.io.ChunkContainerReader: boolean isReaderAvailable(org.jaudiotagger.audio.asf.data.GUID)
com.caij.puremusic.activities.base.AbsMusicServiceActivity: AbsMusicServiceActivity()
com.caij.puremusic.drive.model.SubsonicPlaylist: java.lang.String component2()
com.caij.puremusic.db.model.Song: long getSize()
org.jaudiotagger.tag.id3.framebody.FrameBodyASPI: void setupObjectList()
org.jaudiotagger.tag.datatype.NumberVariableLength: void setMinimumSize(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
org.jaudiotagger.audio.mp4.ChunkWriter: void apply()
com.alipay.android.phone.mrpc.core.aa: aa()
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity)
kotlin.jvm.internal.Ref$BooleanRef: Ref$BooleanRef()
com.caij.puremusic.drive.model.BaiduDriveItem: long component5()
com.tencent.mm.opensdk.modelbiz.OpenWebview$Req: boolean checkArgs()
org.jaudiotagger.audio.asf.data.MetadataDescriptor: int getRawDataSize()
com.google.android.material.materialswitch.MaterialSwitch: android.content.res.ColorStateList getTrackDecorationTintList()
com.umeng.commonsdk.debug.I: I()
com.thegrizzlylabs.sardineandroid.model.Group: void setHref(java.lang.String)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior()
com.umeng.analytics.MobclickAgent: com.umeng.analytics.b getAgent()
com.alipay.apmobilesecuritysdk.e.a: void a(android.content.Context)
org.simpleframework.xml.core.Model: void registerElement(org.simpleframework.xml.core.Label)
com.tencent.mm.opensdk.modelbiz.WXChannelOpenLive$Req: WXChannelOpenLive$Req()
com.umeng.analytics.pro.bo: long a(byte[])
org.jaudiotagger.audio.asf.AsfFileWriter: boolean[] searchExistence(org.jaudiotagger.audio.asf.data.ChunkContainer,org.jaudiotagger.audio.asf.data.MetadataContainer[])
org.jaudiotagger.tag.id3.ID3Tags: java.lang.String truncate(java.lang.String,int)
com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)
org.jaudiotagger.tag.datatype.EventTimingCode: void setBody(org.jaudiotagger.tag.id3.AbstractTagFrameBody)
org.jaudiotagger.tag.id3.framebody.FrameBodyTIT2: FrameBodyTIT2()
org.jaudiotagger.audio.asf.io.EncryptionChunkReader: org.jaudiotagger.audio.asf.data.Chunk read(org.jaudiotagger.audio.asf.data.GUID,java.io.InputStream,long)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
com.umeng.commonsdk.utils.UMUtils: boolean isDebug(android.content.Context)
org.jaudiotagger.audio.flac.FlacTagWriter$MetadataBlockInfo: FlacTagWriter$MetadataBlockInfo(org.jaudiotagger.audio.flac.FlacTagWriter$1)
org.simpleframework.xml.stream.InputAttribute: boolean isRoot()
kotlinx.serialization.SerializersCacheKt$PARAMETRIZED_SERIALIZERS_CACHE$1: SerializersCacheKt$PARAMETRIZED_SERIALIZERS_CACHE$1()
org.simpleframework.xml.strategy.WriteGraph: boolean writeReference(java.lang.Object,org.simpleframework.xml.stream.NodeMap)
com.umeng.commonsdk.utils.UMUtils: java.lang.String getMac(android.content.Context)
org.simpleframework.xml.stream.EventElement: int getLine()
com.caij.puremusic.drive.model.PlayListItem: PlayListItem(int,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,long,java.lang.String,int,java.lang.String,java.lang.String,kotlinx.serialization.internal.SerializationConstructorMarker)
com.caij.puremusic.db.model.SongQueries$delete$2: SongQueries$delete$2()
androidx.core.view.ViewPropertyAnimatorCompat$Api19Impl: android.view.ViewPropertyAnimator setUpdateListener(android.view.ViewPropertyAnimator,android.animation.ValueAnimator$AnimatorUpdateListener)
org.jcodec.containers.mp4.boxes.ChunkOffsets64Box: ChunkOffsets64Box(org.jcodec.containers.mp4.boxes.Header)
com.umeng.commonsdk.statistics.b: b()
org.jaudiotagger.audio.asf.util.Utils: Utils()
org.jcodec.containers.mp4.boxes.AudioSampleEntry: boolean isFloat()
com.umeng.analytics.process.UMProcessDBHelper$ProcessToMainCallback: boolean onFileLock(java.lang.String,java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyTPUB: FrameBodyTPUB(java.nio.ByteBuffer,int)
com.umeng.commonsdk.statistics.proto.d$e: d$e(java.lang.String,int,short,java.lang.String)
com.umeng.analytics.pro.bu: com.umeng.analytics.pro.br n()
com.thegrizzlylabs.sardineandroid.model.Resourcetype: java.util.List getAny()
com.umeng.commonsdk.framework.UMEnvelopeBuild: void registerNetReceiver(android.content.Context)
com.umeng.commonsdk.framework.UMWorkDispatch: void access$100()
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$3: CycleDetectingLockFactory$Policies$3(java.lang.String,int)
com.umeng.commonsdk.config.a: int b(int,int)
org.jcodec.containers.mp4.boxes.TrunBox: int[] getSamplesFlags()
org.jaudiotagger.tag.asf.AsfFieldKey: boolean isMultiValued(java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyUFID: java.lang.String getOwner()
com.umeng.commonsdk.statistics.proto.c: com.umeng.analytics.pro.bp q()
org.simpleframework.xml.core.ElementUnionLabel: org.simpleframework.xml.core.Contact getContact()
com.caij.puremusic.extensions.ViewExtensionsKt$drawAboveSystemBarsWithPadding$1$1: ViewExtensionsKt$drawAboveSystemBarsWithPadding$1$1()
com.google.android.material.chip.Chip: float getChipStartPadding()
android.support.v4.media.MediaDescriptionCompat$Api21Impl: void setSubtitle(android.media.MediaDescription$Builder,java.lang.CharSequence)
org.jaudiotagger.tag.id3.ID3v23Frame: int getFrameSizeSize()
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessWebview$Resp: WXOpenBusinessWebview$Resp()
android.support.v4.media.MediaDescriptionCompat$Api21Impl: android.graphics.Bitmap getIconBitmap(android.media.MediaDescription)
com.caij.puremusic.drive.model.PlayListsResponse$$serializer: PlayListsResponse$$serializer()
com.caij.puremusic.drive.model.SubsonicSong: int getTrack()
org.simpleframework.xml.core.FieldContact: java.lang.Class getDeclaringClass()
com.umeng.commonsdk.debug.UMLog: void mutlInfo(java.lang.String,java.lang.String,int,java.lang.String)
com.caij.puremusic.db.model.PlaylistEntityQueries$checkPlaylistExists$1: java.lang.Boolean invoke(app.cash.sqldelight.db.SqlCursor)
com.caij.puremusic.drive.model.GoogleDriveFileResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.tencent.mm.opensdk.diffdev.IDiffDevOAuth: void addListener(com.tencent.mm.opensdk.diffdev.OAuthListener)
com.umeng.analytics.pro.bu: java.lang.String z()
org.jaudiotagger.audio.AudioFileIO: void writeAs(org.jaudiotagger.audio.AudioFile,java.lang.String)
com.umeng.commonsdk.statistics.proto.a: com.umeng.commonsdk.statistics.proto.a$e a(int)
org.simpleframework.xml.core.ElementMapUnionLabel: boolean isData()
com.caij.puremusic.db.model.SongQueries$GetArtistSongCountQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.umeng.analytics.pro.bf$d: com.umeng.analytics.pro.cc b()
com.caij.puremusic.drive.model.PlexSectionsResponse$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.tencent.mm.opensdk.modelmsg.WXVideoFileObject: boolean checkArgs()
com.tencent.mm.opensdk.openapi.MMSharedPreferences: android.content.SharedPreferences$Editor edit()
com.umeng.analytics.vshelper.b: b()
androidx.core.view.ViewCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
com.tencent.mm.opensdk.modelbiz.WXChannelBaseJumpInfo: void unserialize(android.os.Bundle)
com.thegrizzlylabs.sardineandroid.model.Lockinfo: com.thegrizzlylabs.sardineandroid.model.Owner getOwner()
org.jaudiotagger.audio.mp4.Chunk: int getSampleDur()
org.simpleframework.xml.core.AttributeParameter: java.lang.Object getKey()
org.simpleframework.xml.core.Entry: org.simpleframework.xml.strategy.Type getKeyType()
com.umeng.commonsdk.statistics.idtracking.ImprintHandler$a: void a(java.lang.String)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: java.util.Enumeration pathFromAncestorEnumeration(org.jaudiotagger.utils.tree.TreeNode)
com.tencent.mm.opensdk.diffdev.DiffDevOAuthFactory: DiffDevOAuthFactory()
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.caij.puremusic.drive.model.SongItem: long component4()
com.caij.puremusic.drive.model.PlayLists$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
androidx.core.view.ViewCompat$Api26Impl: int getImportantForAutofill(android.view.View)
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: void setPreSkip(short)
com.tencent.mm.opensdk.modelpay.JumpToOfflinePay$Resp: int getType()
com.umeng.commonsdk.statistics.proto.e$b: com.umeng.analytics.pro.cc b()
com.google.android.material.navigation.NavigationBarView: void setOnItemSelectedListener(com.google.android.material.navigation.NavigationBarView$OnItemSelectedListener)
org.simpleframework.xml.core.LabelExtractor: org.simpleframework.xml.core.LabelExtractor$LabelBuilder getBuilder(java.lang.annotation.Annotation)
org.jaudiotagger.tag.id3.framebody.FrameBodyTPE3: FrameBodyTPE3(byte,java.lang.String)
com.caij.puremusic.views.RetroShapeableImageView: RetroShapeableImageView(android.content.Context,android.util.AttributeSet)
com.thegrizzlylabs.sardineandroid.model.Protected: Protected()
com.tencent.mm.opensdk.modelmsg.WXMediaMessage: int getType()
org.jaudiotagger.tag.datatype.BooleanByte: int getSize()
com.tencent.mm.opensdk.modelbiz.WXChannelJumpMiniProgramInfo: WXChannelJumpMiniProgramInfo()
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason[] values()
com.caij.puremusic.drive.model.SubsonicSearchListResponse$Companion: SubsonicSearchListResponse$Companion()
com.caij.puremusic.db.model.ServerAudioFormatQueries$deleteById$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.caij.puremusic.drive.model.BaiduFileResponse$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
org.jaudiotagger.tag.asf.AbstractAsfTagImageField: java.awt.image.BufferedImage getImage()
com.google.android.material.chip.ChipGroup: int getChipSpacingVertical()
com.tencent.bugly.proguard.be: long b(java.util.Map)
com.caij.puremusic.drive.model.WebDAVToken$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.WebDAVToken)
org.jaudiotagger.tag.id3.AbstractID3v2Frame: AbstractID3v2Frame(org.jaudiotagger.tag.id3.framebody.AbstractID3v2FrameBody)
org.jaudiotagger.tag.id3.ID3v22Tag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.images.Artwork)
org.simpleframework.xml.core.Model: org.simpleframework.xml.core.Model register(java.lang.String,java.lang.String,int)
com.umeng.commonsdk.UMConfigureImpl: boolean d(android.content.Context)
org.jaudiotagger.tag.id3.framebody.FrameBodyMVNM: java.lang.String getIdentifier()
org.repackage.com.zui.deviceidservice.IDeviceidInterface: java.lang.String b(java.lang.String)
org.jaudiotagger.audio.generic.GenericTag: java.util.EnumSet getSupportedKeys()
androidx.gridlayout.widget.GridLayout: int getAlignmentMode()
org.simpleframework.xml.core.Entry: java.lang.Class getDependent(int)
com.tencent.mm.opensdk.modelmsg.WXEmojiSharedObject: WXEmojiSharedObject()
org.jaudiotagger.audio.generic.Utils: java.nio.ByteBuffer readFileDataIntoBufferLE(java.nio.channels.FileChannel,int)
org.jaudiotagger.tag.lyrics3.Lyrics3v2: Lyrics3v2(org.jaudiotagger.tag.id3.AbstractTag)
org.jaudiotagger.tag.id3.framebody.FrameBodyTBPM: FrameBodyTBPM(byte,java.lang.String)
org.simpleframework.xml.transform.Transformer: Transformer(org.simpleframework.xml.transform.Matcher)
org.simpleframework.xml.transform.StringArrayTransform: java.lang.String write(java.lang.String[])
com.caij.puremusic.drive.model.AlbumList: boolean equals(java.lang.Object)
com.google.android.material.navigation.NavigationBarView: int getItemIconSize()
org.simpleframework.xml.transform.DefaultMatcher: org.simpleframework.xml.transform.Transform matchType(java.lang.Class)
org.jaudiotagger.audio.asf.data.MetadataContainer$DescriptorPointer: org.jaudiotagger.audio.asf.data.MetadataContainer$DescriptorPointer setDescriptor(org.jaudiotagger.audio.asf.data.MetadataDescriptor)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyUrlLink: AbstractFrameBodyUrlLink(java.nio.ByteBuffer,int)
com.caij.vip.VipApiService: java.lang.Object getPayInfos(java.lang.String,kotlin.coroutines.Continuation)
com.caij.puremusic.drive.model.BaiduDriveItem$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.afollestad.materialdialogs.internal.list.DialogRecyclerView: DialogRecyclerView(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.model.lyrics.Lyrics: Lyrics()
com.umeng.analytics.pro.l: void b(android.content.Context)
com.tencent.bugly.proguard.n: byte[] a(java.nio.ByteBuffer)
org.simpleframework.xml.core.ConstructorScanner: void scan(org.simpleframework.xml.core.Detail)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyLYR: void readString(java.lang.String)
org.simpleframework.xml.stream.EventElement: boolean isText()
com.caij.puremusic.drive.model.EmbyFoldersResponse: void write$Self(com.caij.puremusic.drive.model.EmbyFoldersResponse,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.caij.puremusic.drive.model.AMetadata$$serializer: AMetadata$$serializer()
org.jaudiotagger.audio.generic.ModificationHandler: void fileOperationFinished(java.io.File)
org.jaudiotagger.tag.TagOptionSingleton: java.lang.String getLanguage()
org.simpleframework.xml.stream.Splitter: boolean isSpecial(char)
com.google.android.material.chip.ChipGroup: void setChipSpacingResource(int)
org.jaudiotagger.audio.asf.io.FileHeaderReader: boolean canFail()
com.google.android.material.checkbox.MaterialCheckBox: android.graphics.drawable.Drawable getButtonIconDrawable()
com.caij.puremusic.db.model.Artist: boolean equals(java.lang.Object)
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
org.simpleframework.xml.core.MethodType: MethodType(java.lang.String,int,int)
com.caij.puremusic.db.model.ServerArtistCoverQueries$deleteSongBySource$2: void invoke(kotlin.jvm.functions.Function1)
org.jaudiotagger.tag.asf.AsfTagCoverField: java.lang.String getDescription()
androidx.preference.DialogPreference: DialogPreference(android.content.Context,android.util.AttributeSet,int)
org.jaudiotagger.utils.tree.DefaultTreeModel: void writeObject(java.io.ObjectOutputStream)
org.simpleframework.xml.strategy.CycleStrategy: CycleStrategy()
com.caij.puremusic.drive.model.Auth2Token$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.tencent.bugly.crashreport.common.info.PlugInBean: void writeToParcel(android.os.Parcel,int)
com.google.android.material.bottomsheet.BottomSheetDialog: void removeDefaultCallback()
androidx.constraintlayout.helper.widget.Flow: void setHorizontalBias(float)
com.caij.puremusic.model.Data: java.lang.String getId()
org.jcodec.containers.mp4.boxes.FielExtension: java.lang.String getOrderInterpretation()
com.caij.puremusic.drive.model.SubsonicAlbum: com.caij.puremusic.drive.model.SubsonicAlbum copy(java.lang.String,java.lang.String,java.lang.String,int,int,int,java.lang.String,java.lang.String,java.util.List)
com.tencent.bugly.BuglyStrategy: com.tencent.bugly.BuglyStrategy setAppReportDelay(long)
org.jaudiotagger.tag.mp4.field.Mp4TagTextField: void setEncoding(java.nio.charset.Charset)
com.caij.puremusic.db.model.ServerSongCoverQueries: app.cash.sqldelight.Query getBySource(long)
com.umeng.commonsdk.debug.UMLog: void mutlInfo(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String[],java.lang.String[])
org.simpleframework.xml.stream.OutputAttribute: java.lang.String toString()
org.repackage.a.a.a.a.c: java.lang.String a(android.content.Context,java.lang.String)
org.jaudiotagger.tag.images.ArtworkFactory: org.jaudiotagger.tag.images.Artwork createArtworkFromFile(java.io.File)
com.caij.puremusic.db.model.PlaylistEntityQueries$SearchPlaylistByNameQuery: void removeListener(app.cash.sqldelight.Query$Listener)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: java.nio.ByteBuffer getBytes()
com.google.android.material.internal.FlowLayout: void setLineSpacing(int)
com.caij.puremusic.db.model.SongQueries$songsByAlum$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.PathInterpolator createPathInterpolator(android.graphics.Path)
com.caij.puremusic.drive.model.Part: java.lang.String getContainer()
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: java.lang.Object getUserObject()
org.simpleframework.xml.stream.Position: java.lang.String toString()
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: com.umeng.commonsdk.statistics.idtracking.ImprintHandler$a c()
org.jaudiotagger.tag.datatype.PartOfSet$PartOfSetValue: java.lang.String getRawValue()
org.simpleframework.xml.stream.StreamProvider: StreamProvider()
com.caij.puremusic.drive.model.GoogleDriveFile: java.lang.String component1()
org.simpleframework.xml.core.ModelSection: java.util.Iterator iterator()
org.jaudiotagger.audio.mp3.MP3AudioHeader: java.lang.Long getAudioDataLength()
com.umeng.analytics.pro.r: org.json.JSONArray b()
com.umeng.analytics.pro.w: java.lang.String a(android.content.Context)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorStateList(android.content.res.ColorStateList)
org.simpleframework.xml.core.Qualifier: void decorate(org.simpleframework.xml.stream.OutputNode,org.simpleframework.xml.core.Decorator)
org.jaudiotagger.utils.tree.EventListenerList: int getListenerCount()
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
com.umeng.analytics.pro.bu: java.nio.ByteBuffer A()
com.umeng.commonsdk.utils.UMUtils: java.lang.String getAppVersionName(android.content.Context)
com.umeng.analytics.pro.an: com.umeng.analytics.pro.av deepCopy()
com.umeng.commonsdk.internal.utils.a: void b(android.content.Context)
com.caij.puremusic.db.model.PlaylistEntityQueries$GetPlaylistEntityByIdQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
org.jaudiotagger.tag.id3.ID3v11Tag: void write(java.io.RandomAccessFile)
com.umeng.commonsdk.framework.UMFrUtils$1: int compare(java.lang.Object,java.lang.Object)
com.umeng.commonsdk.statistics.proto.a: void c()
com.caij.puremusic.views.TopAppBarLayout$1: TopAppBarLayout$1()
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
org.jaudiotagger.logging.AbstractTagDisplayFormatter: void closeHeadingElement(java.lang.String)
org.jcodec.containers.mp4.boxes.MovieHeaderBox: void writeFixed88(java.nio.ByteBuffer,float)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$PreorderEnumeration: DefaultMutableTreeNode$PreorderEnumeration(org.jaudiotagger.utils.tree.DefaultMutableTreeNode,org.jaudiotagger.utils.tree.TreeNode)
org.jaudiotagger.tag.id3.ID3v23Frame: ID3v23Frame(java.nio.ByteBuffer)
com.caij.puremusic.drive.model.Prop: void setResourcetype(com.caij.puremusic.drive.model.Resourcetype)
com.umeng.commonsdk.statistics.common.ULog: ULog()
io.ktor.utils.io.jvm.javaio.BlockingKt$ADAPTER_LOGGER$2: BlockingKt$ADAPTER_LOGGER$2()
com.tencent.mm.opensdk.modelmsg.WXImageObject: WXImageObject(android.graphics.Bitmap)
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String getId()
com.caij.puremusic.drive.model.OneDriveItem: OneDriveItem(int,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,com.caij.puremusic.drive.model.OneDriveFolder,com.caij.puremusic.drive.model.OneDriveFile,com.caij.puremusic.drive.model.ParentReference,kotlinx.serialization.internal.SerializationConstructorMarker)
org.simpleframework.xml.core.CompositeListUnion: java.lang.Object readElement(org.simpleframework.xml.stream.InputNode)
com.caij.puremusic.db.model.ServerSongCoverQueries$getById$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
org.jaudiotagger.tag.id3.framebody.FrameBodyTOLY: FrameBodyTOLY(java.nio.ByteBuffer,int)
com.umeng.commonsdk.statistics.b: com.umeng.commonsdk.statistics.idtracking.Envelope a(android.content.Context,byte[])
org.jaudiotagger.utils.tree.MutableTreeNode: void setUserObject(java.lang.Object)
com.tencent.bugly.BuglyStrategy: boolean isEnableANRCrashMonitor()
org.jaudiotagger.tag.images.StandardArtwork: void setFromFile(java.io.File)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void removeFrame(java.lang.String)
com.caij.puremusic.drive.model.PlexSongsResponse$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
org.simpleframework.xml.core.CacheLabel: org.simpleframework.xml.strategy.Type getDependent()
com.umeng.analytics.pro.x: java.lang.String a(android.content.Context)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyIND: FieldFrameBodyIND()
com.caij.puremusic.drive.model.SubsonicPlaylist: int hashCode()
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
org.jaudiotagger.utils.tree.DefaultTreeModel: java.lang.Object getChild(java.lang.Object,int)
com.caij.puremusic.drive.model.Directory$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.Directory)
com.tencent.mm.opensdk.modelmsg.WXMediaMessage: void setThumbImage(android.graphics.Bitmap)
com.umeng.commonsdk.statistics.proto.e: void i()
org.jcodec.containers.mp4.boxes.TimeToSampleBox: int estimateSize()
org.jaudiotagger.tag.mp4.Mp4RatingValue: org.jaudiotagger.tag.mp4.Mp4RatingValue[] values()
com.tencent.mm.opensdk.modelbiz.OpenBusiLuckyMoney$Req: OpenBusiLuckyMoney$Req()
org.jcodec.containers.mp4.MP4Util: java.util.List parseMovieFragments(java.nio.channels.FileChannel)
com.caij.puremusic.drive.model.Auth2Token$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.tencent.mm.opensdk.modelmsg.WXEmojiObject: void setEmojiPath(java.lang.String)
com.caij.puremusic.fragments.albums.AlbumsFragment: AlbumsFragment()
com.tencent.mmkv.MMKVRecoverStrategic: MMKVRecoverStrategic(java.lang.String,int)
com.umeng.analytics.pro.l: boolean a()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(int)
com.caij.puremusic.drive.model.JellyfinSongListResponse: int component3()
com.caij.puremusic.network.model.LastFmArtist$Artist: java.util.List getImage()
org.jaudiotagger.tag.mp4.field.Mp4TagBinaryField: Mp4TagBinaryField(java.lang.String,byte[])
org.jaudiotagger.tag.id3.ID3v23Tag: void processDuplicateFrame(org.jaudiotagger.tag.id3.AbstractID3v2Frame,org.jaudiotagger.tag.id3.AbstractID3v2Frame)
com.tencent.bugly.BuglyStrategy: java.lang.String getAppVersion()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationY(float)
com.caij.puremusic.db.model.SongQueries$songsByAlbumIdCount$1: java.lang.Long invoke(app.cash.sqldelight.db.SqlCursor)
com.caij.puremusic.drive.model.EmbyFoldersResponse$Companion: kotlinx.serialization.KSerializer serializer()
com.caij.puremusic.drive.model.AlbumItem$Companion: AlbumItem$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgram$Resp: void toBundle(android.os.Bundle)
com.google.android.material.button.MaterialButton: void setIconPadding(int)
com.umeng.analytics.pro.aa: void b(android.content.Context)
com.tencent.bugly.proguard.bt: boolean equals(java.lang.Object)
com.google.android.material.appbar.CollapsingToolbarLayout: void setScrimsShown(boolean)
com.caij.puremusic.MainModuleKt$viewModules$1: MainModuleKt$viewModules$1()
org.simpleframework.xml.core.Context: org.simpleframework.xml.Version getVersion(java.lang.Class)
org.simpleframework.xml.stream.InputNodeMap: org.simpleframework.xml.stream.Node get(java.lang.String)
org.simpleframework.xml.core.ElementArrayParameter: int getIndex()
com.caij.puremusic.drive.model.PlexAlbumsResponse: PlexAlbumsResponse(com.caij.puremusic.drive.model.AlbumMediaContainer)
com.umeng.commonsdk.framework.UMEnvelopeBuild: boolean isOnline(android.content.Context)
com.caij.puremusic.model.Playlist$Creator: com.caij.puremusic.model.Playlist createFromParcel(android.os.Parcel)
org.jaudiotagger.audio.generic.AudioFileReader: org.jaudiotagger.tag.Tag getTag(java.io.RandomAccessFile)
org.jaudiotagger.tag.id3.ID3v22Frame: boolean isPadding(byte[])
com.umeng.analytics.pro.bo: void a(com.umeng.analytics.pro.bp,byte)
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean sendAddCardToWX(android.content.Context,android.os.Bundle)
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: FrameBodyTXXX(org.jaudiotagger.tag.id3.framebody.FrameBodyTMOO)
com.caij.puremusic.drive.model.Metadata: java.lang.String getParentKey()
com.tencent.mm.opensdk.channel.MMessageActV2$1: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)
org.simpleframework.xml.core.ElementListLabel: java.lang.String getOverride()
org.jcodec.containers.mp4.boxes.MovieHeaderBox: float readRate(java.nio.ByteBuffer)
com.tencent.mm.opensdk.modelbiz.CreateChatroom$Resp: CreateChatroom$Resp()
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: int getIcon(android.media.session.PlaybackState$CustomAction)
com.tencent.bugly.proguard.r: void a(com.tencent.bugly.proguard.r,com.tencent.bugly.crashreport.biz.UserInfoBean,boolean)
com.umeng.commonsdk.stateless.c: void b()
com.tencent.bugly.proguard.ac: java.lang.String e()
com.caij.puremusic.service.PlaybackLocation: com.caij.puremusic.service.PlaybackLocation valueOf(java.lang.String)
com.caij.puremusic.MainModuleKt$roomModule$1$12: MainModuleKt$roomModule$1$12()
org.jaudiotagger.tag.id3.AbstractID3v2Frame$EncodingFlags: AbstractID3v2Frame$EncodingFlags(org.jaudiotagger.tag.id3.AbstractID3v2Frame)
com.alipay.apmobilesecuritysdk.e.h: boolean c(android.content.Context)
com.caij.puremusic.lyrics.SimpleLrcView: void setCurrentColor(int)
com.caij.puremusic.drive.model.OneDriveFile: OneDriveFile(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
org.simpleframework.xml.core.Contact: void set(java.lang.Object,java.lang.Object)
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse: java.util.List component1()
com.umeng.commonsdk.UMConfigure: void ignoreSdkCheck(android.content.Context)
org.simpleframework.xml.transform.FloatTransform: java.lang.String write(java.lang.Object)
org.simpleframework.xml.core.Schema: org.simpleframework.xml.core.Instantiator getInstantiator()
com.umeng.analytics.pro.bo: boolean t()
com.umeng.commonsdk.UMConfigure: void invoke(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
com.tencent.mm.opensdk.modelbiz.SubscribeMiniProgramMsg$Req: boolean checkArgs()
com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)
org.jaudiotagger.tag.id3.framebody.FrameBodyGRID: FrameBodyGRID(java.lang.String,byte,byte[])
com.google.android.material.chip.Chip: void setIconStartPadding(float)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
com.caij.puremusic.db.model.PlayCountEntityQueries$CheckSongExistInPlayCountQuery: void addListener(app.cash.sqldelight.Query$Listener)
com.google.common.base.Equivalence: Equivalence()
org.jaudiotagger.audio.ogg.util.VorbisPacketType: int getType()
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
org.jaudiotagger.utils.IntArrayList: int size()
com.umeng.analytics.pro.r: org.json.JSONArray c()
com.google.android.material.checkbox.MaterialCheckBox: void setCheckedState(int)
com.tencent.mm.opensdk.modelpay.WXJointPay$JointPayResp: void toBundle(android.os.Bundle)
me.tankery.lib.circularseekbar.CircularSeekBar: float getMax()
androidx.core.widget.TextViewCompat$Api16Impl: int getMinLines(android.widget.TextView)
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: ImprintHandler(android.content.Context)
com.google.android.material.slider.BaseSlider: int getHaloRadius()
org.jaudiotagger.tag.id3.framebody.FrameBodyEQU2: void setupObjectList()
org.jaudiotagger.tag.TagOptionSingleton: void setResetTextEncodingForExistingFrames(boolean)
org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistSaveOptions: VorbisAlbumArtistSaveOptions(java.lang.String,int)
com.google.android.material.textfield.TextInputLayout: void setMaxEms(int)
org.jaudiotagger.tag.lyrics3.Lyrics3v2Fields: Lyrics3v2Fields()
com.tencent.bugly.BuglyStrategy: com.tencent.bugly.BuglyStrategy setAppChannel(java.lang.String)
com.caij.puremusic.db.model.ArtistQueries$SearchArtistByNameQuery: void removeListener(app.cash.sqldelight.Query$Listener)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.caij.puremusic.drive.model.AlbumResponse: com.caij.puremusic.drive.model.AlbumResponse copy$default(com.caij.puremusic.drive.model.AlbumResponse,com.caij.puremusic.drive.model.AlbumSubsonicResponse,int,java.lang.Object)
com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker$1: void run()
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnClickListener(android.view.View$OnClickListener)
com.caij.puremusic.drive.model.SubsonicSearchResponse$Companion: SubsonicSearchResponse$Companion()
com.caij.puremusic.db.model.ArtistQueries: ArtistQueries(app.cash.sqldelight.db.SqlDriver)
org.simpleframework.xml.core.ElementUnionLabel: boolean isInline()
org.jaudiotagger.tag.mp4.field.Mp4TagByteField: byte[] getDataBytes()
com.umeng.analytics.pro.ar: void b()
org.simpleframework.xml.core.ElementArrayLabel: boolean isRequired()
org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
com.tencent.bugly.proguard.aq: boolean a(android.content.Context,android.content.Intent)
org.simpleframework.xml.core.Structure: org.simpleframework.xml.core.Section getSection()
com.tencent.mm.opensdk.modelmsg.WXStateJumpUrlInfo: void unserialize(android.os.Bundle)
okhttp3.Protocol: okhttp3.Protocol[] $values()
org.simpleframework.xml.core.Detail: org.simpleframework.xml.DefaultType getOverride()
com.umeng.analytics.pro.s: void a()
com.tencent.bugly.proguard.y: y()
org.simpleframework.xml.core.PathParser$PathSection: boolean isEmpty()
com.caij.puremusic.fragments.player.card.CardPlaybackControlsFragment: CardPlaybackControlsFragment()
org.jaudiotagger.tag.datatype.NumberFixedLength: java.lang.String toString()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockHeader: int u(int)
com.caij.puremusic.db.model.FolderQueries: com.caij.puremusic.db.model.Folder$Adapter access$getFolderAdapter$p(com.caij.puremusic.db.model.FolderQueries)
com.tencent.mm.opensdk.modelbiz.SubscribeMiniProgramMsg$Resp: void toBundle(android.os.Bundle)
org.simpleframework.xml.core.SignatureCreator: SignatureCreator(org.simpleframework.xml.core.Signature)
org.simpleframework.xml.stream.InputNodeMap: java.lang.String getName()
com.caij.puremusic.db.model.ServerSongCoverQueries: void deleteSongBySource(long)
org.simpleframework.xml.core.ContactList: ContactList()
app.cash.sqldelight.ExecutableQuery: kotlin.jvm.functions.Function1 getMapper()
org.jcodec.containers.mp4.boxes.Box: void write(java.nio.ByteBuffer)
androidx.core.view.accessibility.AccessibilityEventCompat$Api19Impl: int getContentChangeTypes(android.view.accessibility.AccessibilityEvent)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
com.google.android.material.search.SearchView: void setHint(java.lang.CharSequence)
com.google.android.material.navigation.NavigationBarItemView: void setTextColor(android.content.res.ColorStateList)
org.jaudiotagger.tag.datatype.PartOfSet$PartOfSetValue: java.lang.String getCountAsText()
org.jaudiotagger.tag.id3.ID3v22Tag: org.jaudiotagger.tag.id3.ID3Frames getID3Frames()
com.umeng.commonsdk.stateless.b: void p()
com.umeng.analytics.pro.am: am()
com.umeng.analytics.b: boolean c(java.lang.String)
org.simpleframework.xml.transform.ShortTransform: java.lang.Object read(java.lang.String)
com.umeng.commonsdk.statistics.proto.b: void i()
com.thegrizzlylabs.sardineandroid.util.ElementConverter: org.w3c.dom.Element read(org.simpleframework.xml.stream.InputNode)
com.caij.puremusic.drive.model.PlayLists$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.jaudiotagger.tag.reference.ID3V2Version: org.jaudiotagger.tag.reference.ID3V2Version[] values()
com.umeng.commonsdk.statistics.common.ULog: void d(java.lang.String,java.lang.Object[])
androidx.fragment.app.DialogFragment: boolean isCancelable()
org.jaudiotagger.tag.id3.ID3v11Tag: boolean equals(java.lang.Object)
org.simpleframework.xml.core.Composite: java.lang.Object readPrimitive(org.simpleframework.xml.stream.InputNode,org.simpleframework.xml.core.Instance)
com.umeng.commonsdk.statistics.proto.Response: boolean isSetResp_code()
com.thegrizzlylabs.sardineandroid.DavAcl: java.util.List getAces(com.thegrizzlylabs.sardineandroid.model.Response)
com.umeng.analytics.pro.an: boolean d()
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior()
com.umeng.analytics.pro.bo: void a(com.umeng.analytics.pro.bp)
com.tencent.mm.opensdk.modelmsg.WXMusicVideoObject: int type()
org.jaudiotagger.tag.id3.ID3v22Tag: void addFrame(org.jaudiotagger.tag.id3.AbstractID3v2Frame)
com.caij.puremusic.activities.PermissionActivity$onCreate$1: PermissionActivity$onCreate$1()
com.caij.puremusic.fragments.songs.SongsFragment: SongsFragment()
com.caij.puremusic.db.model.SongEntityQueries$checkSongPlaylistExists$1: java.lang.Boolean invoke(app.cash.sqldelight.db.SqlCursor)
com.umeng.analytics.pro.bo: com.umeng.analytics.pro.bq p()
org.jaudiotagger.tag.TagOptionSingleton: boolean isResetTextEncodingForExistingFrames()
org.simpleframework.xml.core.Structure: org.simpleframework.xml.core.Label getVersion()
com.umeng.analytics.process.DBFileTraversalUtil$1: void run()
com.umeng.commonsdk.stateless.b$a: void onEvent(int,java.lang.String)
com.caij.puremusic.lyrics.CoverLrcView: void setTimelineColor(int)
com.caij.puremusic.drive.model.MediaStream$$serializer: MediaStream$$serializer()
javax.xml.namespace.QName: QName(java.lang.String,java.lang.String,java.lang.String)
org.jaudiotagger.utils.tree.EventListenerList: java.lang.Object[] getListenerList()
com.umeng.analytics.Gender$1: Gender$1(java.lang.String,int,int)
org.jaudiotagger.audio.generic.Utils: long getLongBE(java.nio.ByteBuffer,int,int)
org.simpleframework.xml.core.Composite: void writeAttribute(org.simpleframework.xml.stream.OutputNode,java.lang.Object,org.simpleframework.xml.core.Label)
org.jaudiotagger.tag.images.Artwork: boolean isLinked()
com.umeng.commonsdk.statistics.proto.c: void a(java.io.ObjectInputStream)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
com.caij.puremusic.drive.model.MediaInfoWrapper: java.util.List component2()
com.thegrizzlylabs.sardineandroid.DavPrincipal: com.thegrizzlylabs.sardineandroid.DavPrincipal$PrincipalType getPrincipalType()
org.jcodec.containers.mp4.boxes.ChunkOffsets64Box: org.jcodec.containers.mp4.boxes.ChunkOffsets64Box createChunkOffsets64Box(long[])
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: boolean appendLogToNative(java.lang.String,java.lang.String,java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
org.simpleframework.xml.core.Group: boolean isTextList()
org.jaudiotagger.tag.options.PadNumberOption: PadNumberOption(java.lang.String,int)
com.tencent.mm.opensdk.modelbase.BaseReq: int getType()
org.simpleframework.xml.transform.DateTransform: java.lang.String write(java.util.Date)
org.simpleframework.xml.core.Source: org.simpleframework.xml.strategy.Value getOverride(org.simpleframework.xml.strategy.Type,org.simpleframework.xml.stream.InputNode)
com.umeng.commonsdk.stateless.d$3: d$3()
com.caij.puremusic.network.model.LastFmTrack$Track$Album: java.lang.String getTitle()
org.jcodec.containers.mp4.boxes.TimecodeSampleEntry: void doWrite(java.nio.ByteBuffer)
com.umeng.analytics.pro.u: com.umeng.analytics.pro.u a()
com.caij.puremusic.db.model.SongQueries$GetArtistSongCountQuery$execute$1: java.lang.Object invoke(java.lang.Object)
androidx.viewpager.widget.ViewPager: void setPageMarginDrawable(int)
com.google.common.collect.Iterators$EmptyModifiableIterator: com.google.common.collect.Iterators$EmptyModifiableIterator[] values()
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.Id3FieldType getFieldType()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyIND: java.lang.String getIdentifier()
com.caij.puremusic.preferences.NowPlayingScreenPreference: NowPlayingScreenPreference(android.content.Context,android.util.AttributeSet,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
org.simpleframework.xml.core.PathParser$PathSection: java.lang.String getLast()
androidx.startup.InitializationProvider: InitializationProvider()
com.tencent.mmkv.MMKV: void destroyNB(long,int)
com.tencent.bugly.proguard.x: android.database.sqlite.SQLiteDatabase getReadableDatabase()
com.umeng.analytics.pro.bf$a: bf$a()
org.jaudiotagger.tag.datatype.SynchronisedTempoCode: SynchronisedTempoCode(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody)
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
com.caij.puremusic.drive.model.PlaylistsMediaContainer$$serializer: PlaylistsMediaContainer$$serializer()
org.simpleframework.xml.stream.OutputAttribute: org.simpleframework.xml.stream.NodeMap getAttributes()
org.simpleframework.xml.core.Persister: Persister(org.simpleframework.xml.strategy.Strategy,org.simpleframework.xml.filter.Filter,org.simpleframework.xml.transform.Matcher,org.simpleframework.xml.stream.Format)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: org.jaudiotagger.utils.tree.TreeNode[] getPathToRoot(org.jaudiotagger.utils.tree.TreeNode,int)
org.simpleframework.xml.util.Resolver: boolean add(org.simpleframework.xml.util.Match)
com.tencent.bugly.proguard.n: boolean a(int,int)
com.caij.puremusic.db.model.SongQueries$searchSongsByTitle$2: SongQueries$searchSongsByTitle$2()
com.caij.puremusic.db.model.SongEntity: long getSongId()
com.tencent.mmkv.MMKV: boolean encodeString(long,java.lang.String,java.lang.String)
com.umeng.analytics.pro.i: i()
com.tencent.bugly.proguard.s: long d()
com.umeng.commonsdk.internal.crash.UMCrashManager: void buildEnvelope(android.content.Context,java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyDeprecated: boolean equals(java.lang.Object)
org.jcodec.containers.mp4.boxes.PixelAspectExt: int estimateSize()
com.tencent.bugly.crashreport.CrashReport: void enableObtainId(android.content.Context,boolean)
com.google.android.material.internal.FlowLayout: int getRowCount()
com.umeng.commonsdk.statistics.common.DataHelper: DataHelper()
com.google.android.exoplayer2.audio.DefaultAudioSink$Api31: void setLogSessionIdOnAudioTrack(android.media.AudioTrack,com.google.android.exoplayer2.analytics.PlayerId)
org.simpleframework.xml.core.ElementUnionLabel: boolean isData()
org.jaudiotagger.audio.generic.AbstractTag: java.util.List getFields(java.lang.String)
org.jcodec.containers.mp4.boxes.MovieBox: java.lang.String fourcc()
com.tencent.mm.opensdk.modelbiz.WXChannelStartLive$Req: void fromBundle(android.os.Bundle)
com.caij.puremusic.drive.model.ADriveFileResponse: java.lang.String getNext_marker()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyEAR: java.lang.String getIdentifier()
org.jaudiotagger.tag.TagOptionSingleton: TagOptionSingleton()
org.jaudiotagger.tag.id3.framebody.FrameBodyWOAR: FrameBodyWOAR()
com.caij.puremusic.drive.model.SongItem: java.lang.String component11()
com.umeng.commonsdk.statistics.common.d$a$1: d$a$1(com.umeng.commonsdk.statistics.common.d$a)
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$GetByIdQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.jaudiotagger.tag.lyrics3.Lyrics3v2Field: org.jaudiotagger.tag.lyrics3.AbstractLyrics3v2FieldFrameBody readBody(java.lang.String,java.nio.ByteBuffer)
com.tencent.bugly.proguard.i: com.tencent.bugly.proguard.i a(double[],java.lang.String)
com.google.android.material.circularreveal.CircularRevealFrameLayout: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
com.google.android.material.bottomsheet.BottomSheetDialog: void onStart()
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$IWXMusicVipObject: void serialize(android.os.Bundle)
com.tencent.bugly.proguard.as$5: as$5()
org.jaudiotagger.audio.wav.WavFileReader: org.jaudiotagger.audio.generic.GenericAudioHeader getEncodingInfo(java.nio.channels.FileChannel,java.lang.String)
org.jaudiotagger.audio.mp4.Chunk: int[] getSampleSizes()
com.alipay.sdk.m.u.g: java.lang.String b()
nl.adaptivity.xmlutil.XmlDeclMode: XmlDeclMode(java.lang.String,int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)
org.jaudiotagger.tag.images.StandardArtwork: int getPictureType()
com.caij.puremusic.db.model.SearchAlbumResultQueries$deleteById$2: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.tag.id3.ID3v1Tag: byte getRevision()
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$deleteById$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.tencent.bugly.proguard.e: void b(java.lang.String)
com.caij.puremusic.drive.model.MediaContainer: int getSize()
org.simpleframework.xml.core.PrimitiveFactory: PrimitiveFactory(org.simpleframework.xml.core.Context,org.simpleframework.xml.strategy.Type,java.lang.Class)
org.jaudiotagger.tag.id3.ID3v24Tag: void createStructure()
org.simpleframework.xml.core.EmptyExpression: boolean isEmpty()
com.google.android.material.navigation.NavigationBarView: int getItemTextAppearanceInactive()
org.simpleframework.xml.transform.IntegerTransform: java.lang.String write(java.lang.Object)
org.jaudiotagger.audio.generic.AbstractTag: java.lang.String getItem(java.lang.String,int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setTargetOffsetTopAndBottom(int)
com.umeng.analytics.MobclickAgent: void unregisterPreProperty(android.content.Context,java.lang.String)
com.caij.puremusic.db.model.SongQueries$FirstSongByAlbumIdQuery: java.lang.String toString()
com.google.android.material.navigationrail.NavigationRailView: android.view.View getHeaderView()
org.jaudiotagger.audio.asf.data.MetadataContainer: org.jaudiotagger.audio.asf.data.MetadataDescriptor assertDescriptor(java.lang.String,int)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconDrawableResource(int)
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
com.tencent.bugly.proguard.w: boolean a(com.tencent.bugly.proguard.w,int,java.lang.String,byte[],com.tencent.bugly.proguard.v)
com.alipay.android.phone.mrpc.core.t: void g()
org.jaudiotagger.audio.io.FileOperator: void read(long,okio.Buffer,long)
org.json.alipay.a: java.lang.String a(java.lang.String)
org.simpleframework.xml.util.WeakCache$SegmentList: void create(int)
com.caij.puremusic.drive.model.EmbyFoldersResponse$$serializer: com.caij.puremusic.drive.model.EmbyFoldersResponse deserialize(kotlinx.serialization.encoding.Decoder)
com.umeng.analytics.process.UMProcessDBDatasSender: void workEvent(java.lang.Object,int)
androidx.core.view.ViewCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int getPaddingLength()
com.caij.puremusic.db.model.ServerSongCoverQueries$getBySource$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
com.tencent.bugly.crashreport.CrashReport: void setUserId(java.lang.String)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtended(boolean)
com.tencent.mm.opensdk.modelbiz.WXChannelStartLive$Resp: void fromBundle(android.os.Bundle)
org.jaudiotagger.tag.id3.framebody.FrameBodyWXXX: java.lang.String getUrlLinkAtIndex(int)
org.jaudiotagger.tag.id3.ID3v23Frame$EncodingFlags: boolean isCompression()
com.umeng.commonsdk.framework.UMEnvelopeBuild: boolean isReadyBuildNew(android.content.Context,com.umeng.commonsdk.framework.UMLogDataProtocol$UMBusinessType)
com.google.common.collect.AbstractMapEntry: AbstractMapEntry()
com.google.android.exoplayer2.video.spherical.SphericalGLSurfaceView: android.view.Surface getVideoSurface()
org.jaudiotagger.tag.id3.ID3v23Frame: int getSize()
com.tencent.bugly.proguard.d: byte[] a()
com.caij.puremusic.db.model.AlbumQueries$albums$2: com.caij.puremusic.db.model.Album invoke(long,int,java.lang.String,long,long,java.lang.String,long,java.lang.String,java.lang.String,int,int)
com.caij.puremusic.drive.model.JellyfinArtistResponse$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.drive.model.AlbumListResponse$Companion: AlbumListResponse$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.umeng.analytics.pro.bu: void a(boolean)
androidx.mediarouter.app.MediaRouteButton: androidx.fragment.app.FragmentManager getFragmentManager()
org.jaudiotagger.tag.id3.framebody.FrameBodyPCNT: long getCounter()
com.caij.puremusic.fragments.player.blur.BlurPlaybackControlsFragment: BlurPlaybackControlsFragment()
com.caij.puremusic.model.ArtistWrapper: com.caij.puremusic.db.model.Artist getArtist()
com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)
com.caij.puremusic.drive.model.AlbumMediaContainer: AlbumMediaContainer(int,java.util.List,kotlinx.serialization.internal.SerializationConstructorMarker)
com.google.android.material.bottomsheet.BottomSheetBehavior$4: boolean tryCaptureView(android.view.View,int)
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: VorbisIdentificationHeader(byte[])
com.caij.puremusic.drive.model.BaiduDriveItem: boolean equals(java.lang.Object)
com.caij.puremusic.db.model.ServerSongCoverQueries$GetBySourceQuery: void addListener(app.cash.sqldelight.Query$Listener)
com.thegrizzlylabs.sardineandroid.model.Collection: Collection()
com.google.android.material.datepicker.MaterialCalendar: MaterialCalendar()
com.google.android.material.color.utilities.QuantizerWu$Direction: QuantizerWu$Direction(java.lang.String,int)
org.jaudiotagger.tag.id3.ID3v22Tag: java.util.List getAll(org.jaudiotagger.tag.FieldKey)
com.umeng.commonsdk.statistics.proto.b: void read(com.umeng.analytics.pro.bu)
com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat[] values()
com.umeng.commonsdk.utils.UMUtils: boolean isFlyMe()
org.jaudiotagger.tag.Tag: org.jaudiotagger.tag.images.Artwork getFirstArtwork()
com.tencent.mm.opensdk.openapi.WXApiImplV10: WXApiImplV10(android.content.Context,java.lang.String,boolean,int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
com.caij.puremusic.drive.model.PlayListSubsonicResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.tencent.bugly.crashreport.CrashReport: boolean setJavascriptMonitor(com.tencent.bugly.crashreport.CrashReport$a,boolean)
org.simpleframework.xml.core.PathParser: java.lang.String getPath()
com.tencent.bugly.proguard.a: java.lang.String a(java.util.ArrayList)
com.umeng.analytics.MobclickAgent: void onProfileSignIn(java.lang.String)
androidx.cardview.widget.CardView: boolean getUseCompatPadding()
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior()
org.jcodec.containers.mp4.boxes.TrunBox: boolean isSampleSizeAvailable()
com.umeng.analytics.pro.an: java.lang.String h()
org.jaudiotagger.tag.aiff.AiffTag: void deleteField(org.jaudiotagger.tag.FieldKey)
com.caij.puremusic.db.model.ServerAudioFormat: java.lang.String component5()
org.simpleframework.xml.core.CacheParameter: int getIndex()
com.umeng.commonsdk.statistics.proto.b: void a(boolean)
com.caij.puremusic.db.model.HistoryEntityQueries$GetByIdQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.caij.puremusic.db.model.PlayCountEntityQueries: PlayCountEntityQueries(app.cash.sqldelight.db.SqlDriver)
com.caij.puremusic.drive.model.Metadata: int component13()
org.jaudiotagger.audio.dsf.Dsf: org.jaudiotagger.tag.Tag createDefaultTag()
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String getArtistId()
com.umeng.commonsdk.statistics.common.HelperUtils: boolean checkStrLen(java.lang.String,int)
com.umeng.analytics.pro.bo: long c(long)
com.caij.puremusic.db.model.SongQueries$song$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
org.simpleframework.xml.core.CompositeMapUnion: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.lang.Object)
org.simpleframework.xml.util.Resolver: boolean remove(org.simpleframework.xml.util.Match)
com.caij.puremusic.drive.model.MediaStream$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
org.jaudiotagger.audio.wav.chunk.WavId3Chunk: WavId3Chunk(java.nio.ByteBuffer,org.jaudiotagger.audio.iff.ChunkHeader,org.jaudiotagger.tag.wav.WavTag)
com.caij.puremusic.drive.model.EmbyFoldersResponse: boolean equals(java.lang.Object)
com.caij.puremusic.drive.model.PlexPlaylistsResponse$Companion: kotlinx.serialization.KSerializer serializer()
org.simpleframework.xml.transform.FloatTransform: FloatTransform()
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean shouldSkipSmoothAnimation()
com.google.android.material.navigation.NavigationBarView: int getItemActiveIndicatorHeight()
com.google.android.material.navigation.NavigationBarView: void setItemActiveIndicatorHeight(int)
com.caij.puremusic.db.model.ArtistQueries$SearchArtistByNameQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
androidx.fragment.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)
com.umeng.commonsdk.statistics.common.ReportPolicy$DefconPolicy: boolean shouldSendMessage(boolean)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: boolean isID3V2Header(java.io.RandomAccessFile)
com.umeng.tunnel.UMChannelAgent: void reflectOnEvent(android.content.Context,java.lang.String,java.util.Map)
com.caij.puremusic.db.model.Album: int component11()
kotlinx.serialization.json.internal.WriteMode: WriteMode(java.lang.String,int,char,char)
org.jaudiotagger.audio.asf.io.EncodingChunkReader: EncodingChunkReader()
org.jaudiotagger.audio.generic.AbstractTagCreator: java.lang.Object convert(org.jaudiotagger.tag.Tag)
org.simpleframework.xml.core.LabelMap: java.util.Iterator iterator()
com.thegrizzlylabs.sardineandroid.model.SupportedReportSet: SupportedReportSet()
com.tencent.bugly.proguard.au: com.tencent.bugly.proguard.au a()
org.jaudiotagger.audio.mp4.Chunk: long getOffset()
com.umeng.commonsdk.utils.UMUtils: java.lang.String getOaidRequiredTime(android.content.Context)
org.repackage.com.heytap.openid.sdk.OpenIDSDK: void a(android.content.Context)
org.simpleframework.xml.core.Signature: org.simpleframework.xml.core.Signature copy()
org.jcodec.containers.mp4.boxes.LoadSettingsBox: int getDefaultHints()
kotlinx.serialization.SerializersCacheKt$PARAMETRIZED_SERIALIZERS_CACHE_NULLABLE$1: SerializersCacheKt$PARAMETRIZED_SERIALIZERS_CACHE_NULLABLE$1()
com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)
com.caij.puremusic.drive.model.EmbyFoldersResponse$Companion: EmbyFoldersResponse$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void removeFrameOfType(java.lang.String)
com.google.android.material.chip.Chip: void setIconStartPaddingResource(int)
org.jaudiotagger.audio.asf.util.ChunkPositionComparator: int compare(java.lang.Object,java.lang.Object)
org.simpleframework.xml.transform.TimeZoneTransform: TimeZoneTransform()
org.simpleframework.xml.strategy.Value: boolean isReference()
org.simpleframework.xml.stream.OutputAttribute: void setValue(java.lang.String)
com.thegrizzlylabs.sardineandroid.DavResource: int getStatusCode()
org.simpleframework.xml.strategy.Strategy: org.simpleframework.xml.strategy.Value read(org.simpleframework.xml.strategy.Type,org.simpleframework.xml.stream.NodeMap,java.util.Map)
com.umeng.analytics.process.UMProcessDBDatasSender$ReplaceCallback: UMProcessDBDatasSender$ReplaceCallback(com.umeng.analytics.process.UMProcessDBDatasSender)
com.caij.puremusic.drive.model.FMediaContainer: boolean equals(java.lang.Object)
org.jcodec.containers.mp4.boxes.IListBox: IListBox(org.jcodec.containers.mp4.boxes.Header)
com.caij.puremusic.drive.model.Type: java.lang.String getTitle()
org.simpleframework.xml.convert.ScannerBuilder$Entry: java.lang.annotation.Annotation find(java.lang.Class)
com.caij.puremusic.drive.model.PlayListsSubsonicResponse$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.tag.wav.WavTag: void deleteArtworkField()
org.simpleframework.xml.core.PrimitiveScanner: boolean isEmpty()
com.tencent.bugly.proguard.k: java.util.HashMap a(java.util.Map,int,boolean)
com.yalantis.ucrop.view.OverlayView: void setShowCropFrame(boolean)
org.jaudiotagger.tag.id3.ID3v1Tag: java.lang.String getFirst(java.lang.String)
com.yalantis.ucrop.view.OverlayView: android.graphics.RectF getCropViewRect()
org.repackage.com.vivo.identifier.IdentifierIdClient: void a(int,java.lang.String)
com.caij.puremusic.drive.model.User: void write$Self(com.caij.puremusic.drive.model.User,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.caij.puremusic.drive.model.PlayListsResponse: com.caij.puremusic.drive.model.PlayListsResponse copy$default(com.caij.puremusic.drive.model.PlayListsResponse,com.caij.puremusic.drive.model.PlayListsSubsonicResponse,int,java.lang.Object)
com.caij.puremusic.drive.model.Propstat$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.caij.puremusic.views.NumberRollView: void setTextColorStateList(android.content.res.ColorStateList)
com.caij.puremusic.drive.model.PlexSectionsResponse$Companion: kotlinx.serialization.KSerializer serializer()
com.caij.puremusic.db.model.SongQueries$songsByIds$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.caij.puremusic.fragments.player.tiny.TinyPlayerFragment: TinyPlayerFragment()
com.caij.puremusic.network.model.LastFmArtist$Artist$Image: void setText(java.lang.String)
androidx.fragment.app.Fragment: void setSharedElementReturnTransition(java.lang.Object)
org.jaudiotagger.audio.asf.io.ContentBrandingReader: ContentBrandingReader()
org.jaudiotagger.audio.asf.io.WriteableChunkModifer: boolean isApplicable(org.jaudiotagger.audio.asf.data.GUID)
com.umeng.commonsdk.statistics.proto.b$a: void a(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
androidx.appcompat.widget.SwitchCompat: int getThumbScrollRange()
com.umeng.analytics.pro.aw: int a(double,double)
org.jaudiotagger.tag.id3.ID3v23FieldKey: org.jaudiotagger.tag.id3.ID3v23FieldKey[] values()
org.jaudiotagger.audio.mp3.MP3File: void save()
com.caij.puremusic.drive.model.SubsonicSearchListResponse$$serializer: com.caij.puremusic.drive.model.SubsonicSearchListResponse deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.db.model.SongEntityQueries$SongsFromPlaylistQuery: void addListener(app.cash.sqldelight.Query$Listener)
com.umeng.commonsdk.statistics.internal.a: boolean b(java.lang.String)
com.tencent.bugly.proguard.w: com.tencent.bugly.proguard.y b(android.database.Cursor)
org.simpleframework.xml.core.Variable: org.simpleframework.xml.core.Expression getExpression()
com.tencent.bugly.proguard.ay: void a(com.tencent.bugly.proguard.ay)
org.simpleframework.xml.Element: java.lang.Class type()
com.google.android.material.slider.BaseSlider: int getTrackWidth()
okhttp3.TlsVersion: okhttp3.TlsVersion[] values()
com.caij.puremusic.db.model.SongEntityQueries$GetSongEntityQuery$execute$1: SongEntityQueries$GetSongEntityQuery$execute$1(com.caij.puremusic.db.model.SongEntityQueries$GetSongEntityQuery)
com.google.android.material.bottomsheet.BottomSheetBehavior: float calculateSlideOffsetWithTop(int)
org.jaudiotagger.audio.dsf.Dsf: Dsf()
com.caij.puremusic.db.model.Folder$Adapter: app.cash.sqldelight.ColumnAdapter getTypeAdapter()
com.caij.puremusic.drive.model.OneDriveFile: java.lang.String component1()
com.google.android.material.textview.MaterialTextView: MaterialTextView(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.MaterialAutoCompleteTextView: int getSimpleItemSelectedColor()
com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)
org.simpleframework.xml.core.TreeModel: boolean isElement(java.lang.String)
com.caij.puremusic.db.model.PlaybackSongQueries$GetPlaybacksByTypeQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
com.caij.puremusic.db.model.PlaylistEntityQueries$renamePlaylist$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.umeng.commonsdk.utils.UMUtils: java.lang.String getDisplayResolution(android.content.Context)
com.caij.puremusic.drive.model.PlaylistsMediaContainer$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.PlaylistsMediaContainer)
org.simpleframework.xml.core.ClassScanner: boolean isContextual(java.lang.reflect.Method)
com.umeng.commonsdk.statistics.common.ReportPolicy$DefconPolicy: boolean shouldSendMessageByInstant()
androidx.constraintlayout.motion.widget.MotionLayout: int getEndState()
com.umeng.commonsdk.config.d$c: com.umeng.commonsdk.config.d$c[] values()
org.simpleframework.xml.stream.Stack: java.lang.Object pop()
com.caij.puremusic.drive.model.EmbyAlbumsResponse$$serializer: EmbyAlbumsResponse$$serializer()
com.caij.puremusic.fragments.NowPlayingScreen: int getTitleRes()
com.caij.puremusic.model.Genre: int hashCode()
org.jaudiotagger.audio.aiff.AiffInfoReader: org.jaudiotagger.audio.generic.GenericAudioHeader read(java.nio.channels.FileChannel,java.lang.String)
org.json.alipay.a: a(java.lang.Object)
androidx.constraintlayout.motion.widget.MotionHelper: void setProgress(float)
com.thegrizzlylabs.sardineandroid.model.Owner: Owner()
kotlinx.coroutines.internal.ThreadContextKt$countAll$1: ThreadContextKt$countAll$1()
com.umeng.commonsdk.stateless.d$6: d$6()
org.jaudiotagger.tag.id3.ID3v23Frame: boolean isCommon()
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdQuery$execute$1: SongQueries$SongsByAlbumIdQuery$execute$1(com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdQuery)
com.google.android.material.slider.Slider: int getFocusedThumbIndex()
com.umeng.commonsdk.statistics.proto.e$e: short a()
com.umeng.commonsdk.statistics.common.HelperUtils: void writeFile(java.io.File,java.lang.String)
com.caij.puremusic.db.model.SongQueries$SongQuery$execute$1: SongQueries$SongQuery$execute$1(com.caij.puremusic.db.model.SongQueries$SongQuery)
androidx.fragment.app.Fragment: void performPrimaryNavigationFragmentChanged()
org.simpleframework.xml.convert.ConverterFactory: java.lang.reflect.Constructor getConstructor(java.lang.Class)
com.caij.puremusic.drive.model.Prop: java.lang.String getGetcontenttype()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyLYR: boolean isSubsetOf(java.lang.Object)
org.jaudiotagger.utils.tree.TreePath: TreePath(java.lang.Object)
com.afollestad.materialdialogs.internal.message.DialogContentLayout: com.afollestad.materialdialogs.internal.main.DialogScrollView getScrollView()
com.umeng.commonsdk.statistics.proto.b: long e()
org.jaudiotagger.audio.real.RealTag: java.lang.String toString()
com.caij.puremusic.db.model.AlbumQueries: AlbumQueries(app.cash.sqldelight.db.SqlDriver,com.caij.puremusic.db.model.Album$Adapter)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getTooltipText(android.view.MenuItem)
org.simpleframework.xml.stream.OutputDocument: org.simpleframework.xml.stream.NodeMap getAttributes()
com.caij.puremusic.model.Data: java.lang.String component7()
com.umeng.commonsdk.internal.c: java.lang.String a()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
org.simpleframework.xml.core.NamespaceDecorator: void scope(org.simpleframework.xml.stream.OutputNode)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable getContentBackground()
org.jaudiotagger.tag.images.AndroidArtwork: void setPictureType(int)
org.jaudiotagger.tag.datatype.PartOfSet: byte[] writeByteArray()
com.caij.puremusic.drive.model.DropboxDriveFileResponse: DropboxDriveFileResponse(java.lang.String,boolean,java.util.List)
androidx.cardview.widget.CardView: int getContentPaddingRight()
com.tencent.mm.opensdk.modelpay.PayReq$Options: void toBundle(android.os.Bundle)
org.jaudiotagger.tag.id3.framebody.FrameBodyTDTG: FrameBodyTDTG(org.jaudiotagger.tag.id3.framebody.FrameBodyTDTG)
com.thegrizzlylabs.sardineandroid.model.Activelock: void setLocktype(com.thegrizzlylabs.sardineandroid.model.Locktype)
com.umeng.commonsdk.utils.a: a(long,long)
com.caij.puremusic.db.model.Folder: int component2()
com.tencent.bugly.proguard.bl: void a(com.tencent.bugly.proguard.k)
org.jaudiotagger.audio.asf.data.ContentDescription: java.lang.String getCopyRight()
org.jaudiotagger.audio.mp4.Mp4AudioHeader: void setKind(org.jcodec.containers.mp4.boxes.EsdsBox$Kind)
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
org.jaudiotagger.tag.id3.framebody.FrameBodyTRSO: FrameBodyTRSO()
com.caij.puremusic.drive.model.OneDriveFileResponse$$serializer: com.caij.puremusic.drive.model.OneDriveFileResponse deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.model.DriveFileParcelable: long getSourceId()
org.jaudiotagger.tag.wav.WavTag: java.util.Iterator getFields()
androidx.appcompat.app.ResourcesFlusher$Api16Impl: void clear(android.util.LongSparseArray)
com.caij.puremusic.db.model.PlaylistEntityQueries$searchPlaylistByName$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
androidx.appcompat.app.AppCompatDialog: AppCompatDialog(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)
com.caij.puremusic.drive.model.PlexUser: java.lang.String toString()
com.umeng.commonsdk.statistics.common.a$c: java.lang.String a()
com.caij.puremusic.drive.model.EmbyAlbumsResponse$Companion: EmbyAlbumsResponse$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.tencent.bugly.proguard.k: short a(short,int,boolean)
org.simpleframework.xml.transform.PackageMatcher: org.simpleframework.xml.transform.Transform matchFile(java.lang.Class)
com.caij.puremusic.drive.model.Part: com.caij.puremusic.drive.model.Part copy$default(com.caij.puremusic.drive.model.Part,int,java.lang.String,int,java.lang.String,int,java.lang.String,int,java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodySYLT: java.lang.String getDescription()
org.jaudiotagger.audio.aiff.AiffFileWriter: AiffFileWriter()
com.google.android.material.slider.Slider: float getValueFrom()
org.simpleframework.xml.core.GroupExtractor$Registry: org.simpleframework.xml.core.Label resolveText(java.lang.Class)
org.xmlpull.v1.XmlPullParser: boolean isWhitespace()
com.tencent.mm.opensdk.modelmsg.WXAppLaunchData$Builder: com.tencent.mm.opensdk.modelmsg.WXAppLaunchData fromBundle(android.os.Bundle)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSOT: FrameBodyTSOT(java.nio.ByteBuffer,int)
com.umeng.analytics.pro.an: void j(boolean)
com.caij.puremusic.db.model.ServerSongCoverQueries: void deleteById(java.lang.String)
com.google.android.material.progressindicator.BaseProgressIndicator: void setIndeterminateDrawable(android.graphics.drawable.Drawable)
org.jaudiotagger.tag.id3.framebody.FrameBodyEQUA: java.lang.String getIdentifier()
org.simpleframework.xml.stream.StreamReader$Entry: java.lang.String getReference()
org.simpleframework.xml.core.ElementUnionParameter: java.lang.String toString()
com.caij.puremusic.drive.model.Type: java.lang.String getKey()
com.google.android.material.materialswitch.MaterialSwitch: void setTrackDrawable(android.graphics.drawable.Drawable)
org.simpleframework.xml.strategy.Type: java.lang.String toString()
org.simpleframework.xml.transform.AtomicIntegerTransform: java.lang.String write(java.lang.Object)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void setFrame(java.lang.String,java.util.List)
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction[] $values()
com.google.android.material.card.MaterialCardView: android.graphics.drawable.Drawable getCheckedIcon()
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
com.tencent.bugly.proguard.w: java.util.Map a(com.tencent.bugly.proguard.w,int,com.tencent.bugly.proguard.v)
org.jaudiotagger.tag.id3.ID3v11Tag: void setComment(java.lang.String)
com.tencent.bugly.proguard.af: byte[] b(java.net.HttpURLConnection)
org.jcodec.containers.mp4.boxes.HandlerBox: HandlerBox(org.jcodec.containers.mp4.boxes.Header)
com.caij.puremusic.model.Genre$Creator: Genre$Creator()
org.simpleframework.xml.core.MethodPart: java.lang.Class[] getDependents()
com.caij.puremusic.fragments.NowPlayingScreen: com.caij.puremusic.fragments.NowPlayingScreen[] $values()
com.google.android.material.slider.BaseSlider: void setValueTo(float)
org.jaudiotagger.tag.reference.MusicalKey: org.jaudiotagger.tag.reference.MusicalKey[] values()
org.jaudiotagger.tag.id3.ID3v24Frames: org.jaudiotagger.tag.id3.ID3v24Frames getInstanceOf()
org.simpleframework.xml.core.ElementListLabel: org.simpleframework.xml.core.Converter getInlineConverter(org.simpleframework.xml.core.Context,java.lang.String)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.umeng.analytics.pro.o: void a(java.lang.Object,int)
com.tencent.mm.opensdk.modelbiz.WXInvoiceAuthInsert: WXInvoiceAuthInsert()
org.jaudiotagger.audio.wav.WavTagWriter: void write(org.jaudiotagger.tag.Tag,java.nio.channels.FileChannel)
com.caij.puremusic.drive.model.AlbumMetadata$$serializer: AlbumMetadata$$serializer()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int)
org.jaudiotagger.tag.images.AndroidImageHandler: void makeSmaller(org.jaudiotagger.tag.images.Artwork,int)
com.umeng.commonsdk.utils.a: void a()
com.alipay.android.phone.mrpc.core.o: void a(java.lang.String,java.lang.String)
com.caij.puremusic.drive.model.JellyfinArtistResponse: int getTotalRecordCount()
org.jaudiotagger.audio.ogg.OggVorbisTagWriter: OggVorbisTagWriter()
androidx.appcompat.widget.Toolbar: void setTitle(int)
org.simpleframework.xml.core.Session: boolean isEmpty()
com.caij.puremusic.network.model.TokenData: com.caij.puremusic.network.model.TokenData copy$default(com.caij.puremusic.network.model.TokenData,java.lang.String,java.lang.String,java.lang.Long,int,java.lang.Object)
org.simpleframework.xml.core.DefaultScanner: org.simpleframework.xml.core.Function getReplace()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.heinrichreimersoftware.materialintro.slide.FragmentSlide$FragmentSlideFragment: FragmentSlide$FragmentSlideFragment()
com.google.android.material.card.MaterialCardView: float getRadius()
com.tencent.bugly.proguard.be: java.util.Map d(java.lang.String)
org.jaudiotagger.audio.generic.ModificationHandler: void fileWillBeModified(org.jaudiotagger.audio.AudioFile,boolean)
com.umeng.analytics.process.UMProcessDBHelper$ProcessToMainCallback: boolean onFileLock(java.lang.String)
org.jcodec.containers.mp4.boxes.EsdsBox$SL: EsdsBox$SL()
com.tencent.mm.opensdk.modelbiz.SubscribeMessage$Req: SubscribeMessage$Req(android.os.Bundle)
org.simpleframework.xml.core.Scanner: org.simpleframework.xml.core.Decorator getDecorator()
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: java.lang.String getEncodingType()
org.simpleframework.xml.core.MethodPart: java.lang.reflect.Method getMethod()
com.caij.puremusic.drive.model.PlaylistResponse$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.caij.puremusic.db.model.SongQueries$GetSongBySourceQuery: java.lang.String toString()
org.jaudiotagger.tag.id3.framebody.FrameBodyTLEN: FrameBodyTLEN()
androidx.gridlayout.widget.GridLayout: int getRowCount()
com.tencent.mm.opensdk.modelbiz.WXPayInsurance: WXPayInsurance()
org.simpleframework.xml.core.FieldContact: java.lang.String getName()
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTagField: byte[] getRawContent()
com.caij.puremusic.db.model.PlayCountEntityQueries$CheckSongExistInPlayCountQuery: java.lang.String toString()
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: int getTextAlignment(android.view.View)
org.jaudiotagger.audio.asf.data.ContentDescription: ContentDescription(long,java.math.BigInteger)
org.simpleframework.xml.core.ClassInstantiator: org.simpleframework.xml.core.Parameter getParameter(java.lang.String)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyLYR: void setLyric(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
com.tencent.bugly.proguard.aj: aj(android.content.Context,int,int,byte[],java.lang.String,java.lang.String,com.tencent.bugly.proguard.ah,boolean)
org.jaudiotagger.audio.asf.io.ChunkRemover: ChunkRemover(org.jaudiotagger.audio.asf.data.GUID[])
com.tencent.bugly.crashreport.CrashReport: void setContext(android.content.Context)
org.jcodec.containers.mp4.boxes.MetaValue: org.jcodec.containers.mp4.boxes.MetaValue createOtherWithLocale(int,int,byte[])
com.caij.puremusic.drive.model.PlaylistMetadata$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.tencent.bugly.proguard.aa: boolean a()
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture createMetadataBlockDataPicture(org.jaudiotagger.tag.images.Artwork)
org.jaudiotagger.tag.id3.framebody.FrameBodyTIT3: java.lang.String getIdentifier()
org.jaudiotagger.tag.id3.framebody.FrameBodyTENC: FrameBodyTENC(byte,java.lang.String)
com.caij.puremusic.extensions.ViewExtensionsKt$drawAboveSystemBars$1$1: ViewExtensionsKt$drawAboveSystemBars$1$1()
org.jaudiotagger.tag.datatype.Lyrics3TimeStamp: byte[] writeByteArray()
org.simpleframework.xml.stream.Formatter: void append(char)
com.google.android.material.bottomsheet.BottomSheetBehavior: int getTopOffsetForState(int)
com.caij.puremusic.network.model.Image: java.lang.String toString()
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine$AuthenticationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
org.simpleframework.xml.core.DetailScanner: org.simpleframework.xml.DefaultType getOverride()
com.umeng.commonsdk.framework.a$1: a$1()
org.jaudiotagger.audio.ogg.util.OggPageHeader$HeaderTypeFlag: org.jaudiotagger.audio.ogg.util.OggPageHeader$HeaderTypeFlag[] values()
org.jaudiotagger.tag.asf.AsfTagField: AsfTagField(java.lang.String)
com.umeng.commonsdk.statistics.proto.Response$e: com.umeng.commonsdk.statistics.proto.Response$e[] values()
com.caij.puremusic.network.model.TokenData: java.lang.String component1()
org.simpleframework.xml.transform.RegistryMatcher: org.simpleframework.xml.transform.Transform create(java.lang.Class)
com.umeng.analytics.pro.o$b: com.umeng.analytics.pro.o a()
org.simpleframework.xml.core.AnnotationFactory: boolean isAttribute()
com.google.android.material.appbar.CollapsingToolbarLayout: void setScrimVisibleHeightTrigger(int)
com.thegrizzlylabs.sardineandroid.model.Activelock: java.lang.String getTimeout()
org.simpleframework.xml.core.PrimitiveList: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyTKEY: boolean isValid()
org.simpleframework.xml.core.SignatureBuilder$ParameterTable: int access$000(org.simpleframework.xml.core.SignatureBuilder$ParameterTable)
org.jcodec.containers.mp4.boxes.MetaValue: boolean isString()
androidx.appcompat.widget.AppCompatToggleButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.caij.puremusic.db.model.SongQueries$SongsByInfoQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.umeng.commonsdk.internal.c: org.json.JSONObject setupReportData(long)
org.jaudiotagger.tag.id3.framebody.FrameBodyPIC: void setImageData(byte[])
org.simpleframework.xml.core.CompositeKey: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object)
com.umeng.commonsdk.UMConfigureInternation: void sendInternal(android.content.Context)
org.jaudiotagger.audio.mp3.MP3File: org.jaudiotagger.tag.Tag getTagAndConvertOrCreateAndSetDefault()
org.simpleframework.xml.transform.StringTransform: StringTransform()
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: android.os.LocaleList forLanguageTags(java.lang.String)
com.umeng.commonsdk.statistics.common.d: com.umeng.commonsdk.statistics.common.d a(android.content.Context)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int)
com.umeng.commonsdk.framework.UMLogDataProtocol$UMBusinessType: com.umeng.commonsdk.framework.UMLogDataProtocol$UMBusinessType valueOf(java.lang.String)
org.jaudiotagger.tag.TagField: void copyContent(org.jaudiotagger.tag.TagField)
com.caij.puremusic.db.model.SongEntityQueries$deleteSongFromPlaylist$2: java.lang.Object invoke(java.lang.Object)
com.tencent.mm.opensdk.modelmsg.WXImageObject: void serialize(android.os.Bundle)
com.caij.puremusic.db.model.SongQueries$songsByInfo$1: SongQueries$songsByInfo$1(kotlin.jvm.functions.Function18,com.caij.puremusic.db.model.SongQueries)
org.simpleframework.xml.core.PrimitiveScanner$EmptySection: boolean isSection(java.lang.String)
com.caij.puremusic.network.model.LastFmTrack$Track$Toptags$Tag: java.lang.String getName()
com.alipay.android.phone.mrpc.core.RpcException: RpcException(java.lang.String)
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier valueOf(java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyASPI: FrameBodyASPI(java.nio.ByteBuffer,int)
com.tencent.bugly.proguard.aa: int B()
com.afollestad.materialdialogs.internal.main.DialogLayout: void setTitleLayout(com.afollestad.materialdialogs.internal.main.DialogTitleLayout)
com.caij.puremusic.lyrics.SimpleLrcView: void setShowLine(int)
com.google.android.material.progressindicator.BaseProgressIndicator: void setShowAnimationBehavior(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyTCON: java.lang.String convertID3v22GenreToGeneric(java.lang.String)
com.umeng.analytics.pro.bi: boolean e()
com.umeng.analytics.b: void a(android.content.Context,int)
org.simpleframework.xml.transform.StringArrayTransform: StringArrayTransform(java.lang.String)
com.caij.puremusic.network.model.LastFmTrack$Track$Album: java.util.List getImage()
com.google.android.material.chip.Chip: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
org.jaudiotagger.tag.reference.ISOScript: org.jaudiotagger.tag.reference.ISOScript$Script getScriptByDescription(java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyPIC: FrameBodyPIC()
org.jaudiotagger.tag.aiff.AiffTagFieldKey: org.jaudiotagger.tag.aiff.AiffTagFieldKey[] values()
org.jaudiotagger.tag.id3.ID3v1Iterator: java.lang.Object next()
org.simpleframework.xml.core.PrimitiveValue: void writeElement(org.simpleframework.xml.stream.OutputNode,java.lang.Object,java.lang.String)
com.caij.puremusic.db.model.SongQueries$SongsByArtistQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.umeng.commonsdk.internal.c: void workEvent(java.lang.Object,int)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundResource(int)
org.jaudiotagger.audio.dsf.DsfFileReader: DsfFileReader()
com.tencent.bugly.proguard.ai: boolean b(int)
com.google.common.base.Predicates$ObjectPredicate: Predicates$ObjectPredicate(java.lang.String,int)
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleRoundedCornerRadius(float)
com.umeng.analytics.pro.o: boolean a(long,int)
com.thegrizzlylabs.sardineandroid.impl.handler.ResponseHandler: java.lang.Object handleResponse(okhttp3.Response)
org.simpleframework.xml.transform.DateType: DateType(java.lang.String,int,java.lang.String)
org.jaudiotagger.tag.mp4.Mp4NonStandardFieldKey: java.lang.String getFieldName()
org.simpleframework.xml.transform.GregorianCalendarTransform: java.lang.String write(java.lang.Object)
com.caij.puremusic.drive.model.Auth2Token: java.lang.String component3()
com.thegrizzlylabs.sardineandroid.DavResource: java.lang.String getDisplayName(com.thegrizzlylabs.sardineandroid.model.Response)
org.jaudiotagger.audio.wav.WavSubFormat: org.jaudiotagger.audio.wav.WavSubFormat getByCode(java.lang.Integer)
com.umeng.analytics.pro.an$e: com.umeng.analytics.pro.an$e a(java.lang.String)
com.tencent.mm.opensdk.openapi.MMSharedPreferences: int getInt(java.lang.String,int)
com.caij.puremusic.network.model.Artist: java.util.List component7()
com.caij.puremusic.drive.model.PlaylistMetadata: int hashCode()
com.umeng.analytics.pro.bf$a: void b(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.bf)
com.caij.puremusic.drive.model.ParentReference$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
androidx.appcompat.resources.Compatibility$Api18Impl: void setAutoCancel(android.animation.ObjectAnimator,boolean)
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: org.jaudiotagger.audio.aiff.chunk.AiffCompressionType getByCode(java.lang.String)
com.caij.puremusic.network.model.LastFmTrack$Track: com.caij.puremusic.network.model.LastFmTrack$Track$Toptags getToptags()
com.caij.puremusic.db.model.PlayCountEntityQueries$deleteById$2: void invoke(kotlin.jvm.functions.Function1)
org.jaudiotagger.tag.id3.ID3v24Tag: java.lang.String getIdentifier()
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundColor()
org.simpleframework.xml.core.SignatureScanner: void scan(java.lang.Class)
com.umeng.analytics.pro.bn$a: bn$a(boolean,boolean)
com.tencent.mm.opensdk.utils.b: int a(android.content.ContentResolver,android.net.Uri)
com.caij.puremusic.drive.model.PlexAlbumsResponse$$serializer: com.caij.puremusic.drive.model.PlexAlbumsResponse deserialize(kotlinx.serialization.encoding.Decoder)
com.google.common.hash.BloomFilterStrategies$2: BloomFilterStrategies$2(java.lang.String,int)
com.tencent.mm.opensdk.modelpay.WXJointPay: WXJointPay()
com.umeng.analytics.pro.bs: boolean equals(java.lang.Object)
com.tencent.bugly.proguard.as: java.lang.String e(com.tencent.bugly.crashreport.crash.CrashDetailBean)
com.umeng.commonsdk.statistics.proto.e: com.umeng.commonsdk.statistics.proto.e a()
org.jaudiotagger.audio.AudioHeader: long getBitRateAsNumber()
org.jaudiotagger.tag.id3.reference.MediaMonkeyPlayerRating: org.jaudiotagger.tag.id3.reference.ID3Rating getInstance()
com.umeng.commonsdk.stateless.d$1: d$1()
org.simpleframework.xml.stream.InputAttribute: org.simpleframework.xml.stream.InputNode getNext(java.lang.String)
com.umeng.commonsdk.statistics.common.a$a: boolean a()
org.simpleframework.xml.transform.DateType: org.simpleframework.xml.transform.DateType valueOf(java.lang.String)
org.jcodec.containers.mp4.boxes.ColorExtension: void parse(java.nio.ByteBuffer)
com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.ChipDrawable)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void setField(org.jaudiotagger.tag.images.Artwork)
org.jaudiotagger.test.ExtractID3TagFromFile$MP3FileFilter: boolean accept(java.io.File)
com.caij.puremusic.db.model.ServerAudioFormatQueries$clear$1: void invoke(kotlin.jvm.functions.Function1)
org.simpleframework.xml.core.ElementMapUnionLabel: org.simpleframework.xml.strategy.Type getType(java.lang.Class)
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: void put(java.lang.String,byte[])
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
com.tencent.bugly.proguard.be: java.lang.String a(java.io.BufferedInputStream)
com.google.android.exoplayer2.video.spherical.SphericalGLSurfaceView: com.google.android.exoplayer2.video.VideoFrameMetadataListener getVideoFrameMetadataListener()
org.simpleframework.xml.core.InstanceFactory$ClassInstance: java.lang.Class getType()
com.caij.puremusic.db.model.PlayCountEntityQueries: app.cash.sqldelight.Query playCountSongs(kotlin.jvm.functions.Function3)
com.google.android.material.card.MaterialCardView: void setProgress(float)
org.jaudiotagger.audio.aiff.AiffAudioHeader: java.lang.String getName()
com.caij.puremusic.drive.model.Auth2Token$$serializer: Auth2Token$$serializer()
org.simpleframework.xml.transform.EmptyMatcher: EmptyMatcher()
com.caij.puremusic.db.model.SongQueries$clear$1: java.lang.Object invoke(java.lang.Object)
com.umeng.analytics.pro.ab: void c(android.content.Context)
com.google.android.material.internal.ParcelableSparseArray: ParcelableSparseArray()
com.alipay.android.app.IRemoteServiceCallback$Stub: com.alipay.android.app.IRemoteServiceCallback asInterface(android.os.IBinder)
org.jaudiotagger.audio.asf.data.MetadataDescriptor: void setStreamNumber(int)
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
com.google.common.collect.MapMakerInternalMap$Strength$1: MapMakerInternalMap$Strength$1(java.lang.String,int)
org.simpleframework.xml.stream.Formatter: void append(java.lang.String)
org.simpleframework.xml.stream.InputAttribute: java.lang.String getReference()
org.simpleframework.xml.core.LabelMap: org.simpleframework.xml.core.LabelMap getLabels()
org.simpleframework.xml.transform.CharacterTransform: CharacterTransform()
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$Builder: java.lang.String pathNewToOld(java.lang.String)
org.jaudiotagger.tag.id3.ID3v23Frame$EncodingFlags: ID3v23Frame$EncodingFlags(org.jaudiotagger.tag.id3.ID3v23Frame)
com.google.android.material.internal.BaselineLayout: BaselineLayout(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.tag.InvalidDataTypeException: InvalidDataTypeException(java.lang.Throwable)
com.caij.puremusic.db.model.Folder: java.lang.String component7()
com.caij.puremusic.fragments.settings.AbsSettingsFragment$onViewCreated$1$1: AbsSettingsFragment$onViewCreated$1$1()
com.alipay.android.phone.mrpc.core.aa: void a(java.lang.String)
com.umeng.commonsdk.internal.utils.k: boolean c(android.content.Context)
com.afollestad.materialdialogs.color.view.PreviewFrameView: void setColor(int)
org.jaudiotagger.audio.mp4.Chunk: int getSampleCount()
org.simpleframework.xml.core.VersionLabel: boolean isRequired()
com.caij.puremusic.drive.model.AlbumItem$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
org.repackage.com.heytap.openid.sdk.OpenIDSDK: java.lang.String d(android.content.Context)
com.umeng.commonsdk.internal.utils.d: java.lang.String b()
org.jaudiotagger.tag.mp4.Mp4TagField: java.lang.String getId()
org.jaudiotagger.tag.id3.framebody.FrameBodyETCO: FrameBodyETCO(java.nio.ByteBuffer,int)
org.jaudiotagger.test.MergeID3AndMP3Files: boolean append(java.io.File,java.io.File,java.io.File)
com.caij.puremusic.network.model.LastFmTrack$Track$Album$Image: LastFmTrack$Track$Album$Image(com.caij.puremusic.network.model.LastFmTrack$Track$Album)
org.simpleframework.xml.convert.Registry: org.simpleframework.xml.convert.Converter create(java.lang.Class)
com.caij.puremusic.model.Playlist$Companion: com.caij.puremusic.model.Playlist getEmpty()
org.simpleframework.xml.core.ElementUnionParameter: ElementUnionParameter(java.lang.reflect.Constructor,org.simpleframework.xml.ElementUnion,org.simpleframework.xml.Element,org.simpleframework.xml.stream.Format,int)
com.tencent.mm.opensdk.modelmsg.LaunchFromWX$Resp: LaunchFromWX$Resp()
com.tencent.mm.opensdk.modelmsg.WXFileObject: void serialize(android.os.Bundle)
org.simpleframework.xml.strategy.Reference: java.lang.Object getValue()
com.umeng.analytics.pro.ab: java.lang.String b(com.umeng.analytics.pro.ab)
androidx.core.view.ViewCompat$Api16Impl: void setBackground(android.view.View,android.graphics.drawable.Drawable)
androidx.constraintlayout.helper.widget.Flow: void setLastVerticalBias(float)
org.jaudiotagger.audio.asf.data.ContentBranding: boolean isAddSupported(org.jaudiotagger.audio.asf.data.MetadataDescriptor)
com.alipay.apmobilesecuritysdk.d.e: java.lang.String b(android.content.Context,java.util.Map)
com.tencent.mm.opensdk.openapi.MMSharedPreferences$REditor: android.content.SharedPreferences$Editor putStringSet(java.lang.String,java.util.Set)
org.jaudiotagger.tag.id3.valuepair.TextEncoding: TextEncoding()
com.google.android.material.chip.Chip: void setCheckedIconResource(int)
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setShadowDrawable(android.graphics.drawable.Drawable)
com.caij.puremusic.drive.model.Location: void setHref(java.lang.String)
androidx.preference.MultiSelectListPreferenceDialogFragmentCompat: MultiSelectListPreferenceDialogFragmentCompat()
androidx.appcompat.widget.SearchView: int getPreferredWidth()
com.tencent.bugly.proguard.bh: com.tencent.bugly.proguard.bi a()
com.caij.puremusic.drive.model.AlbumResponse: java.lang.String toString()
org.jcodec.containers.mp4.boxes.TrackHeaderBox: long getAltGroup()
org.jaudiotagger.tag.datatype.EventTimingCode: long getTimestamp()
com.caij.puremusic.drive.model.BaiduFileResponse: java.lang.String toString()
org.jaudiotagger.tag.images.Artwork: byte[] getBinaryData()
com.umeng.commonsdk.statistics.common.ULog: void w(java.lang.String,java.lang.String,java.lang.Throwable)
com.tencent.mm.opensdk.constants.ConstantsAPI$LaunchApplication: ConstantsAPI$LaunchApplication()
org.jcodec.containers.mp4.boxes.TrackExtendsBox: int getDefaultSampleDescriptionIndex()
com.caij.puremusic.db.model.SongQueries$SongsByArtistQuery$execute$1: java.lang.Object invoke(java.lang.Object)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType[] values()
com.umeng.commonsdk.statistics.internal.a: java.lang.String a()
org.jaudiotagger.tag.TagOptionSingleton: java.util.Iterator getKeywordListIterator(java.lang.Class)
androidx.constraintlayout.widget.ConstraintLayout: void setMinWidth(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyPRIV: java.lang.String getIdentifier()
com.umeng.commonsdk.utils.FileLockUtil: void doFileOperateion(java.io.File,com.umeng.commonsdk.utils.FileLockCallback,int)
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessWebview: WXOpenBusinessWebview()
org.jaudiotagger.audio.wav.WavTagWriter: java.nio.ByteBuffer convertID3Chunk(org.jaudiotagger.tag.wav.WavTag,org.jaudiotagger.tag.wav.WavTag)
org.simpleframework.xml.ElementArray: boolean empty()
com.caij.puremusic.fragments.player.material.MaterialFragment: MaterialFragment()
org.jaudiotagger.tag.id3.ID3v22FieldKey: org.jaudiotagger.tag.id3.ID3v22FieldKey valueOf(java.lang.String)
com.caij.puremusic.db.model.SongQueries$SongQuery: SongQueries$SongQuery(com.caij.puremusic.db.model.SongQueries,long,kotlin.jvm.functions.Function1)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setNestedScrollingEnabled(boolean)
com.caij.puremusic.drive.model.Resourcetype$Companion: Resourcetype$Companion()
org.jcodec.containers.mp4.boxes.TimecodeMediaInfoBox: java.lang.String fourcc()
com.umeng.analytics.pro.o: void d(org.json.JSONObject)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: void addField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
com.tencent.bugly.proguard.i: com.tencent.bugly.proguard.i a(char,java.lang.String)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: boolean isImageUrl()
com.umeng.analytics.pro.ay: java.lang.Byte b(byte[],com.umeng.analytics.pro.bc,com.umeng.analytics.pro.bc[])
org.simpleframework.xml.stream.StreamReader$Start: java.lang.String getName()
com.caij.puremusic.drive.model.AlbumList$Companion: kotlinx.serialization.KSerializer serializer()
com.google.android.material.card.MaterialCardView: void setRadius(float)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getMaxWidth()
com.caij.puremusic.drive.model.ParentReference: java.lang.String getDriveId()
com.umeng.commonsdk.internal.utils.d: com.umeng.commonsdk.internal.utils.d$a a()
org.simpleframework.xml.util.Resolver: int size()
org.jaudiotagger.audio.mp3.MPEGFrameHeader: void setBitrate()
org.simpleframework.xml.core.CacheParameter: boolean isAttribute()
org.simpleframework.xml.core.InstanceFactory$ValueInstance: java.lang.Object setInstance(java.lang.Object)
com.umeng.analytics.process.UMProcessDBHelper$InsertEventCallback: UMProcessDBHelper$InsertEventCallback(com.umeng.analytics.process.UMProcessDBHelper,com.umeng.analytics.process.UMProcessDBHelper$1)
org.jaudiotagger.tag.TagOptionSingleton: void setLyrics3SaveEmptyField(boolean)
com.umeng.commonsdk.debug.UInterface: void log(java.lang.String,java.lang.String)
com.alipay.android.phone.mrpc.core.b$a: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundColor(int)
com.umeng.commonsdk.utils.UMUtils: java.lang.String MD5(java.lang.String)
com.umeng.analytics.pro.o: boolean p()
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportRealtime: ReportPolicy$ReportRealtime()
org.jaudiotagger.utils.tree.DefaultTreeModel: void nodesChanged(org.jaudiotagger.utils.tree.TreeNode,int[])
com.umeng.commonsdk.internal.d: org.json.JSONObject b()
com.umeng.analytics.pro.an$a: void b(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.an)
com.tencent.bugly.crashreport.CrashReport: java.util.Map getSdkExtraData(android.content.Context)
org.jaudiotagger.tag.id3.framebody.FrameBodyUSLT: java.lang.String getLanguage()
androidx.fragment.app.SpecialEffectsController$Operation$State: SpecialEffectsController$Operation$State(java.lang.String,int)
org.jaudiotagger.audio.iff.ChunkSummary: long getChunkSize()
org.jaudiotagger.audio.asf.io.AsfExtHeaderReader: boolean canFail()
org.jaudiotagger.tag.id3.ID3v22Tag: java.util.List convertFrame(org.jaudiotagger.tag.id3.AbstractID3v2Frame)
com.tencent.bugly.proguard.ap: boolean a(java.io.File,java.io.File)
org.jaudiotagger.tag.id3.ID3Frames: boolean isExtensionFrames(java.lang.String)
com.google.android.material.bottomsheet.BottomSheetBehavior: void setFitToContents(boolean)
com.caij.puremusic.drive.model.AlbumItem: AlbumItem(int,java.lang.String,java.lang.String,java.lang.String,boolean,long,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List,java.lang.String,kotlinx.serialization.internal.SerializationConstructorMarker)
com.caij.puremusic.db.model.ArtistQueries$artistById$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getPackageName(android.content.Context)
com.caij.puremusic.db.model.ServerArtistCoverQueries$clear$1: ServerArtistCoverQueries$clear$1()
org.jaudiotagger.tag.TagOptionSingleton: void setLyrics3SaveField(java.lang.String,boolean)
androidx.media.MediaBrowserServiceCompat: MediaBrowserServiceCompat()
com.caij.puremusic.views.BreadCrumbLayout: com.caij.puremusic.views.BreadCrumbLayout$SavedStateWrapper getStateWrapper()
org.simpleframework.xml.convert.ConverterFactory: org.simpleframework.xml.convert.Converter getInstance(org.simpleframework.xml.convert.Convert)
com.caij.puremusic.db.model.ArtistQueries: app.cash.sqldelight.Query artists()
com.umeng.commonsdk.statistics.noise.ABTest: java.lang.String getGroupInfo()
com.caij.puremusic.drive.model.AlbumList: com.caij.puremusic.drive.model.AlbumList copy(java.util.List)
org.simpleframework.xml.core.MethodException: MethodException(java.lang.String,java.lang.Object[])
org.simpleframework.xml.core.DetailExtractor: org.simpleframework.xml.core.Detail getDetail(java.lang.Class)
org.jaudiotagger.audio.wav.WavTagWriter: boolean isID3TagAtEndOfFileAllowingForPaddingByte(org.jaudiotagger.tag.wav.WavTag,java.nio.channels.FileChannel)
com.umeng.commonsdk.stateless.d$5: boolean accept(java.io.File,java.lang.String)
com.tencent.bugly.proguard.ap: java.lang.String a(long)
com.alipay.android.app.IRemoteServiceCallback: boolean isHideLoadingScreen()
org.jaudiotagger.tag.datatype.TextEncodedStringSizeTerminated: void checkTrailingNull(java.util.List,java.lang.String)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentContainer createFragmentContainer()
com.google.android.material.appbar.MaterialToolbar: void setLogoAdjustViewBounds(boolean)
com.google.android.material.slider.Slider: void setValueFrom(float)
org.jcodec.containers.mp4.boxes.TimeToSampleBox: void setEntries(org.jcodec.containers.mp4.boxes.TimeToSampleBox$TimeToSampleEntry[])
com.caij.puremusic.drive.model.PlexPlaylistsResponse$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.google.common.collect.ImmutableSet: ImmutableSet()
androidx.fragment.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataApplication: java.nio.ByteBuffer getBytes()
com.caij.puremusic.drive.model.DropboxDriveItem: DropboxDriveItem(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyTIPL: FrameBodyTIPL()
com.tencent.bugly.proguard.ap: java.lang.Object a(java.lang.String,java.lang.String,java.lang.Class[],java.lang.Object[])
com.umeng.commonsdk.statistics.common.d$a: d$a(android.content.Context,java.lang.String)
com.umeng.analytics.pro.bn: void s()
org.simpleframework.xml.stream.OutputDocument: java.lang.String getValue()
com.umeng.analytics.filter.c: void onImprintValueChanged(java.lang.String,java.lang.String)
org.simpleframework.xml.stream.InputElement: org.simpleframework.xml.stream.InputNode getParent()
com.alipay.android.phone.mrpc.core.l: java.util.concurrent.Future a(com.alipay.android.phone.mrpc.core.t)
com.caij.puremusic.db.model.ArtistQueries$ArtistByIdQuery: void removeListener(app.cash.sqldelight.Query$Listener)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: android.os.Bundle getExtras(android.media.MediaDescription)
com.google.common.base.Predicates$ObjectPredicate$2: java.lang.String toString()
com.caij.puremusic.db.model.PlaylistEntityQueries$PlaylistByNameQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.tencent.bugly.BuglyStrategy: java.lang.String getDeviceModel()
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: void put(java.lang.String,java.io.File,java.lang.String)
com.umeng.analytics.MobclickAgent$EScenarioType: MobclickAgent$EScenarioType(java.lang.String,int,int)
com.google.android.material.progressindicator.LinearProgressIndicator: void setTrackCornerRadius(int)
org.jaudiotagger.audio.opus.OpusVorbisTagWriter: void writePage(java.nio.channels.FileChannel,org.jaudiotagger.audio.ogg.util.OggPage)
org.simpleframework.xml.stream.OutputElement: OutputElement(org.simpleframework.xml.stream.OutputNode,org.simpleframework.xml.stream.NodeWriter,java.lang.String)
org.jaudiotagger.audio.mp3.LameFrame: org.jaudiotagger.audio.mp3.LameFrame parseLameFrame(java.nio.ByteBuffer)
com.umeng.analytics.pro.u: boolean b(android.content.Context,long,boolean)
com.thegrizzlylabs.sardineandroid.util.SardineUtil: java.util.Date parseDate(java.lang.String)
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$1: void handlePotentialDeadlock(com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException)
com.umeng.analytics.pro.bh: java.util.Map a(java.lang.Class)
com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: void a(boolean)
com.tencent.bugly.proguard.ap: java.lang.Thread a(java.lang.Runnable,java.lang.String)
org.simpleframework.xml.core.PathParser$PathSection: java.lang.String toString()
androidx.fragment.app.Fragment: void onStop()
org.simpleframework.xml.core.SetPart: java.lang.reflect.Method getMethod()
com.caij.puremusic.db.model.SongQueries$FirstSongByAlbumIdQuery$execute$1: SongQueries$FirstSongByAlbumIdQuery$execute$1(com.caij.puremusic.db.model.SongQueries$FirstSongByAlbumIdQuery,com.caij.puremusic.db.model.SongQueries)
org.jaudiotagger.tag.datatype.EventTimingCode: EventTimingCode(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody)
com.tencent.bugly.crashreport.CrashReport: void postCatchedException(java.lang.Throwable)
org.simpleframework.xml.util.Resolver: java.util.List resolveAll(java.lang.String,char[])
com.caij.puremusic.drive.model.Location: Location(int,java.lang.String,kotlinx.serialization.internal.SerializationConstructorMarker)
com.tencent.bugly.crashreport.common.info.PlugInBean: PlugInBean(android.os.Parcel)
com.yalantis.ucrop.view.TransformImageView: java.lang.String getImageOutputPath()
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State from(android.view.View)
com.umeng.analytics.pro.cc: void a(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
com.bumptech.glide.load.PreferredColorSpace: PreferredColorSpace(java.lang.String,int)
org.simpleframework.xml.transform.StringTransform: java.lang.String write(java.lang.String)
org.jaudiotagger.audio.flac.metadatablock.BlockType: BlockType(java.lang.String,int,int)
org.simpleframework.xml.core.TextLabel: java.lang.String getOverride()
androidx.appcompat.widget.SwitchCompat: void setTextOffInternal(java.lang.CharSequence)
org.simpleframework.xml.core.Persister: Persister(org.simpleframework.xml.strategy.Strategy,org.simpleframework.xml.transform.Matcher,org.simpleframework.xml.stream.Format)
com.google.android.material.materialswitch.MaterialSwitch: android.content.res.ColorStateList getTrackTintList()
org.simpleframework.xml.core.SetPart: java.lang.Class[] getDependents()
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status[] values()
com.umeng.analytics.pro.cg: void b(byte[],int,int)
com.tencent.mm.opensdk.modelbiz.WXOpenCustomerServiceChat$Req: boolean checkArgs()
org.jaudiotagger.audio.mp3.MPEGFrameHeader: void setPadding()
org.jaudiotagger.tag.id3.ID3v24Frame: boolean isValidID3v2FrameIdentifier(java.lang.String)
com.caij.puremusic.db.model.ArtistQueries$SearchArtistByNameQuery$execute$1: ArtistQueries$SearchArtistByNameQuery$execute$1(com.caij.puremusic.db.model.ArtistQueries$SearchArtistByNameQuery)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSSE: FrameBodyTSSE(byte,java.lang.String)
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: boolean isDefaultSampleFlagsAvailable()
org.jcodec.containers.mp4.boxes.TrunBox: int access$102(org.jcodec.containers.mp4.boxes.TrunBox,int)
com.caij.puremusic.fragments.AlbumCoverStyle: com.caij.puremusic.fragments.AlbumCoverStyle[] $values()
com.tencent.mm.opensdk.modelbiz.WXChannelOpenEvent$Resp: void toBundle(android.os.Bundle)
com.caij.puremusic.drive.model.PlaylistsMediaContainer: java.util.List component1()
org.simpleframework.xml.core.TreeModel: void registerText(org.simpleframework.xml.core.Label)
com.caij.puremusic.views.TintedBottomNavigationView: TintedBottomNavigationView(android.content.Context,android.util.AttributeSet)
com.tencent.mm.opensdk.diffdev.a.a: boolean stopAuth()
com.caij.puremusic.drive.model.JellyfinFolder: JellyfinFolder(int,java.lang.String,java.lang.String,java.lang.String,kotlinx.serialization.internal.SerializationConstructorMarker)
org.simpleframework.xml.core.ExtractorFactory$ExtractorBuilder: java.lang.reflect.Constructor getConstructor()
com.caij.puremusic.drive.model.User: java.lang.String getId()
com.caij.puremusic.drive.model.AlbumArtist$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.thegrizzlylabs.sardineandroid.model.Allprop: Allprop()
org.jaudiotagger.audio.exceptions.ReadOnlyFileException: ReadOnlyFileException(java.lang.String,java.lang.Throwable)
org.simpleframework.xml.core.ModelSection: org.simpleframework.xml.core.LabelMap getAttributes()
com.caij.puremusic.drive.model.BaiduDriveItem$$serializer: BaiduDriveItem$$serializer()
org.jaudiotagger.tag.id3.ID3Tags: long findNumber(java.lang.String,int)
org.simpleframework.xml.stream.OutputDocument: boolean isRoot()
org.simpleframework.xml.core.PrimitiveScanner: org.simpleframework.xml.core.Instantiator getInstantiator()
org.jaudiotagger.tag.id3.framebody.FrameBodyAPIC: FrameBodyAPIC(org.jaudiotagger.tag.id3.framebody.FrameBodyPIC)
org.jaudiotagger.audio.mp3.MPEGFrameHeader: void setChannelMode()
code.name.monkey.appthemehelper.common.views.ATESwitch: ATESwitch(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.db.model.ArtistQueries$ArtistByNameQuery$execute$1: ArtistQueries$ArtistByNameQuery$execute$1(com.caij.puremusic.db.model.ArtistQueries$ArtistByNameQuery)
com.caij.puremusic.db.model.PlaylistEntityQueries: app.cash.sqldelight.Query playlistByName(java.lang.String)
com.caij.puremusic.fragments.NowPlayingScreen: int getDrawableResId()
org.simpleframework.xml.core.Scanner: boolean isPrimitive()
com.tencent.bugly.proguard.bt: void a(com.tencent.bugly.proguard.k)
com.caij.puremusic.drive.model.PlaylistResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.caij.puremusic.db.model.PlaybackSongQueries$GetPlaybacksByTypeQuery: void removeListener(app.cash.sqldelight.Query$Listener)
org.simpleframework.xml.core.Entry: Entry(org.simpleframework.xml.core.Contact,org.simpleframework.xml.ElementMap)
com.thegrizzlylabs.sardineandroid.impl.handler.MultiStatusResponseHandler: com.thegrizzlylabs.sardineandroid.model.Multistatus getMultistatus(java.io.InputStream)
org.jaudiotagger.tag.datatype.StringDateTime: StringDateTime(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody)
com.umeng.vt.diff.Event: void commit(android.content.Context,android.view.View,java.lang.String,java.util.Map,java.lang.Boolean)
com.tencent.mm.opensdk.modelmsg.WXEmojiPageSharedObject: void serialize(android.os.Bundle)
com.alipay.android.phone.mrpc.core.o: byte[] b()
com.thegrizzlylabs.sardineandroid.model.Response: com.thegrizzlylabs.sardineandroid.model.Error getError()
org.jaudiotagger.tag.id3.framebody.FrameBodyGEOB: FrameBodyGEOB(java.nio.ByteBuffer,int)
org.jaudiotagger.audio.ogg.util.OggInfoReader: org.jaudiotagger.audio.generic.GenericAudioHeader read(java.io.RandomAccessFile)
org.simpleframework.xml.core.ElementUnionLabel: boolean isUnion()
org.simpleframework.xml.core.Scanner: org.simpleframework.xml.core.Function getResolve()
com.tencent.mm.opensdk.modelbiz.WXQRCodePay$Resp: void fromBundle(android.os.Bundle)
com.caij.puremusic.drive.model.FMediaContainer: java.util.List getDirectory()
org.jaudiotagger.audio.asf.io.AsfHeaderReader: org.jaudiotagger.audio.asf.data.AsfHeader readTagHeader(java.io.RandomAccessFile)
com.google.common.hash.LittleEndianByteArray$UnsafeByteArray: LittleEndianByteArray$UnsafeByteArray(java.lang.String,int,com.google.common.hash.LittleEndianByteArray$1)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: java.util.List getResources(java.lang.String)
com.umeng.analytics.pro.o: boolean d(boolean)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
com.alipay.apmobilesecuritysdk.e.h: void a(android.content.Context,java.lang.String,long)
com.tencent.bugly.proguard.l: void a(java.lang.String,int)
com.caij.puremusic.drive.model.MediaStream$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
com.google.android.material.slider.BaseSlider: int getTrackSidePadding()
com.umeng.analytics.pro.s: boolean b(java.lang.String)
org.repackage.com.zui.deviceidservice.IDeviceidInterface$Stub: org.repackage.com.zui.deviceidservice.IDeviceidInterface a(android.os.IBinder)
org.jcodec.containers.mp4.boxes.MediaHeaderBox: void parse(java.nio.ByteBuffer)
com.alipay.apmobilesecuritysdk.f.a: java.lang.String a(java.lang.String,java.lang.String)
com.tencent.bugly.proguard.br: void a(com.tencent.bugly.proguard.l)
org.simpleframework.xml.core.SignatureBuilder$ParameterTable: org.simpleframework.xml.core.Parameter get(int,int)
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status valueOf(java.lang.String)
org.jaudiotagger.tag.mp4.field.Mp4TagTextNumberField: org.jaudiotagger.tag.mp4.field.Mp4FieldType getFieldType()
org.jaudiotagger.tag.id3.ID3v11Tag: void setField(org.jaudiotagger.tag.TagField)
org.simpleframework.xml.stream.Mode: org.simpleframework.xml.stream.Mode valueOf(java.lang.String)
com.umeng.analytics.pro.bf: boolean c()
com.thegrizzlylabs.sardineandroid.DavPrincipal: DavPrincipal(com.thegrizzlylabs.sardineandroid.DavPrincipal$PrincipalType,java.lang.String,javax.xml.namespace.QName,java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
com.umeng.commonsdk.statistics.proto.d$c: d$c(com.umeng.commonsdk.statistics.proto.d$1)
com.caij.puremusic.drive.model.GoogleDriveFileResponse: boolean getIncompleteSearch()
com.caij.puremusic.drive.model.AlbumMetadata$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.AlbumMetadata)
com.caij.puremusic.db.model.AlbumQueries$insert$1: AlbumQueries$insert$1(com.caij.puremusic.db.model.Album,com.caij.puremusic.db.model.AlbumQueries)
com.tencent.mm.opensdk.modelbiz.JoinChatroom$Resp: JoinChatroom$Resp(android.os.Bundle)
org.jaudiotagger.audio.asf.data.FileHeader: FileHeader(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,long,long,long,long)
com.tencent.mm.opensdk.openapi.MMSharedPreferences: boolean getBoolean(java.lang.String,boolean)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: boolean hasField(org.jaudiotagger.tag.FieldKey)
org.simpleframework.xml.core.Structure: org.simpleframework.xml.core.Label getText()
org.jaudiotagger.tag.mp4.field.Mp4TagBinaryField: int getDataSize()
org.simpleframework.xml.strategy.ReadState: org.simpleframework.xml.strategy.ReadGraph find(java.lang.Object)
com.caij.puremusic.drive.model.ADriveFileResponse$Companion: ADriveFileResponse$Companion()
org.jaudiotagger.logging.XMLTagDisplayFormatter: java.lang.String xmlSingleTag(java.lang.String)
org.jaudiotagger.tag.aiff.AiffTag: void addField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
org.simpleframework.xml.strategy.Value: void setValue(java.lang.Object)
org.jaudiotagger.tag.id3.AbstractTagFrameBody: void setHeader(org.jaudiotagger.tag.id3.AbstractTagFrame)
org.simpleframework.xml.stream.StreamReader: org.simpleframework.xml.stream.StreamReader$Entry attribute(javax.xml.stream.events.Attribute)
org.jaudiotagger.audio.SupportedFileFormat$12: org.jaudiotagger.tag.Tag createDefaultTag()
com.umeng.analytics.pro.o: void e(org.json.JSONObject)
com.caij.puremusic.db.model.SongQueries$searchSongsByTitle$2: com.caij.puremusic.db.model.Song invoke(long,java.lang.String,int,int,long,java.lang.String,java.lang.String,long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,long,long)
com.umeng.commonsdk.statistics.proto.a: java.lang.String h()
org.jaudiotagger.audio.asf.data.AudioStreamChunk: java.lang.String getCodecDescription()
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: com.tencent.bugly.crashreport.crash.jni.NativeExceptionHandler getNativeExceptionHandler()
androidx.fragment.app.DialogFragment: void showNow(androidx.fragment.app.FragmentManager,java.lang.String)
com.caij.puremusic.db.model.Song: long getDateModified()
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String byte2HexFormatted(byte[])
org.simpleframework.xml.core.Template: int length()
com.tencent.mm.opensdk.modelmsg.WXMiniProgramObject: java.lang.String getExtra(java.lang.String,java.lang.String)
org.jaudiotagger.tag.mp4.field.Mp4TagCoverField: java.lang.String getMimeTypeForImageType(org.jaudiotagger.tag.mp4.field.Mp4FieldType)
com.umeng.commonsdk.utils.UMUtils: java.lang.String encryptBySHA1(java.lang.String)
org.simpleframework.xml.core.ObjectScanner: org.simpleframework.xml.core.Function getValidate()
com.tencent.bugly.proguard.w: int a(java.lang.String,java.lang.String,java.lang.String[],com.tencent.bugly.proguard.v)
com.caij.puremusic.drive.model.DavResource$Companion: java.lang.String[] getSUPPORTED_DATE_FORMATS()
com.umeng.analytics.AnalyticsConfig: void a(android.content.Context,java.lang.String)
org.jaudiotagger.tag.wav.WavTag: boolean isExistingInfoTag()
org.jaudiotagger.logging.AbstractTagDisplayFormatter: void addElement(java.lang.String,int)
com.google.android.material.bottomsheet.BottomSheetDialog: BottomSheetDialog(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)
com.google.android.material.materialswitch.MaterialSwitch: void setThumbIconTintMode(android.graphics.PorterDuff$Mode)
org.jaudiotagger.audio.dsf.DsfFileWriter: DsfFileWriter()
org.jaudiotagger.audio.ogg.OggVorbisTagReader$OggVorbisHeaderSizes: long getCommentHeaderStartPosition()
com.tencent.bugly.proguard.ay: void c(boolean)
org.jaudiotagger.audio.asf.AsfFileReader: org.jaudiotagger.audio.generic.GenericAudioHeader getEncodingInfo(java.io.RandomAccessFile)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
com.tencent.bugly.proguard.ac: void a(java.lang.String)
com.caij.puremusic.drive.model.PlayListItem: java.lang.String component3()
org.jaudiotagger.tag.Tag: boolean hasField(java.lang.String)
com.caij.puremusic.db.model.SearchAlbumResultQueries$insert$2: SearchAlbumResultQueries$insert$2()
com.caij.puremusic.db.model.SongQueries$SongsByAlumIdQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
com.caij.puremusic.drive.model.Collection$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
com.umeng.commonsdk.statistics.common.ULog: void d(java.lang.String)
com.umeng.commonsdk.statistics.internal.c: c(android.content.Context)
com.tencent.mm.opensdk.modelpay.PayResp: boolean checkArgs()
org.simpleframework.xml.stream.InputNodeMap: InputNodeMap(org.simpleframework.xml.stream.InputNode)
com.caij.puremusic.drive.model.PlayLists$Companion: kotlinx.serialization.KSerializer serializer()
org.simpleframework.xml.core.ClassType: ClassType(java.lang.Class)
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
com.caij.puremusic.views.insets.InsetsRecyclerView$1$1: InsetsRecyclerView$1$1()
org.jaudiotagger.tag.id3.ID3v1Tag: java.util.List getAll(org.jaudiotagger.tag.FieldKey)
com.thegrizzlylabs.sardineandroid.DavResource: com.thegrizzlylabs.sardineandroid.model.Lockdiscovery getLockDiscovery(com.thegrizzlylabs.sardineandroid.model.Response)
com.umeng.analytics.filter.d: boolean a(java.lang.String)
org.simpleframework.xml.core.Composite: java.lang.Object readResolve(org.simpleframework.xml.stream.InputNode,java.lang.Object,org.simpleframework.xml.core.Caller)
com.umeng.analytics.pro.an$e: com.umeng.analytics.pro.an$e a(int)
com.caij.puremusic.model.CategoryInfo: int getCategoryId()
com.umeng.analytics.pro.r: r(com.umeng.analytics.pro.r$1)
com.caij.puremusic.drive.model.Metadata: Metadata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,java.util.List)
com.caij.puremusic.model.DriveFileParcelable: java.lang.String getFileName()
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: java.lang.String getDumpFilePath()
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String[] getNetworkAccessMode(android.content.Context)
org.jaudiotagger.audio.iff.ChunkSummary: java.lang.String toString()
com.caij.puremusic.db.model.ServerArtistCover: java.lang.String toString()
com.google.android.material.navigation.NavigationBarView: void setItemActiveIndicatorEnabled(boolean)
com.umeng.analytics.process.UMProcessDBDatasSender$ConstructMessageCallback: boolean onFileLock(java.lang.String)
org.jaudiotagger.tag.aiff.AiffTag: long getSizeOfID3TagOnly()
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void generateConfigDelta_locale(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration)
com.caij.puremusic.db.model.HistoryEntityQueries$historySongs$1: HistoryEntityQueries$historySongs$1(kotlin.jvm.functions.Function2)
org.jaudiotagger.logging.ErrorMessage: java.lang.String getMsg()
com.caij.puremusic.util.HttpUtil$httpClient$1: HttpUtil$httpClient$1()
okhttp3.internal.http2.ErrorCode: ErrorCode(java.lang.String,int,int)
androidx.media.AudioAttributesCompat: AudioAttributesCompat()
org.jaudiotagger.tag.id3.framebody.FrameBodyTPOS: java.lang.Integer getDiscNo()
org.simpleframework.xml.filter.StackFilter: java.lang.String replace(java.lang.String)
org.jaudiotagger.tag.asf.AsfTag: boolean isCopyingFields()
org.simpleframework.xml.core.ParameterContact: java.lang.Class getDeclaringClass()
org.simpleframework.xml.core.Composite: void writeUnion(org.simpleframework.xml.stream.OutputNode,java.lang.Object,org.simpleframework.xml.core.Section,org.simpleframework.xml.core.Label)
org.jaudiotagger.tag.images.StandardArtwork: void setPictureType(int)
com.caij.puremusic.db.model.SearchAlbumResultQueries$insert$2: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.tag.reference.ISOCountry$Country: java.lang.String getDescription()
org.jaudiotagger.tag.datatype.AbstractStringStringValuePair: void createMaps()
com.google.common.collect.ImmutableCollection: ImmutableCollection()
com.caij.puremusic.model.AudioTagInfo: AudioTagInfo(java.util.List,java.util.Map,com.caij.puremusic.model.ArtworkInfo)
com.caij.puremusic.network.model.LastFmArtist: com.caij.puremusic.network.model.LastFmArtist$Artist getArtist()
org.simpleframework.xml.core.CompositeMap: boolean validate(org.simpleframework.xml.stream.InputNode,java.lang.Class)
com.caij.puremusic.drive.model.Media$$serializer: com.caij.puremusic.drive.model.Media deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.appwidgets.AppWidgetText: AppWidgetText()
com.tencent.bugly.proguard.aa: java.lang.String f(java.lang.String)
com.umeng.commonsdk.internal.d: void c(android.content.Context)
org.simpleframework.xml.core.ExtractorFactory$ElementExtractor: org.simpleframework.xml.Element[] getAnnotations()
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$getById$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
org.jaudiotagger.tag.reference.ISOCountry: org.jaudiotagger.tag.reference.ISOCountry$Country getCountryByCode(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
com.google.android.material.navigation.NavigationBarMenuView: void setItemPaddingTop(int)
com.google.android.gms.internal.play_billing.zzex: zzex(java.lang.String,int,java.lang.Object)
org.jaudiotagger.logging.ErrorMessage: org.jaudiotagger.logging.ErrorMessage valueOf(java.lang.String)
org.simpleframework.xml.core.Composite: java.lang.Object readVariable(org.simpleframework.xml.stream.InputNode,java.lang.Object,org.simpleframework.xml.core.Label)
com.tencent.bugly.proguard.be: java.lang.Object a(java.util.Map,java.lang.Object,java.lang.Object)
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdQuery: long getAlbumId()
com.umeng.vt.diff.Channel$1: void onImprintValueChanged(java.lang.String,java.lang.String)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentCreator: java.nio.ByteBuffer convert(org.jaudiotagger.tag.Tag,int)
org.jcodec.containers.mp4.boxes.CompositionOffsetsBox: org.jcodec.containers.mp4.boxes.CompositionOffsetsBox createCompositionOffsetsBox(org.jcodec.containers.mp4.boxes.CompositionOffsetsBox$Entry[])
com.google.android.material.checkbox.MaterialCheckBox: android.graphics.PorterDuff$Mode getButtonIconTintMode()
com.umeng.commonsdk.statistics.common.ULog: void d(java.lang.String,java.lang.Throwable)
com.tencent.bugly.crashreport.CrashReport: void setIsDevelopmentDevice(android.content.Context,boolean)
androidx.core.view.ViewCompat$Api17Impl: int getPaddingEnd(android.view.View)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
org.simpleframework.xml.core.Persister: Persister(org.simpleframework.xml.strategy.Strategy,org.simpleframework.xml.filter.Filter,org.simpleframework.xml.stream.Format)
io.ktor.client.request.HttpRequestBuilder$setCapability$capabilities$1: HttpRequestBuilder$setCapability$capabilities$1()
com.umeng.analytics.pro.an: an(java.lang.String,java.lang.String,java.lang.String,int,int,int,java.nio.ByteBuffer,java.lang.String,java.lang.String)
com.google.android.material.bottomsheet.BottomSheetBehavior: int getState()
com.google.android.material.appbar.CollapsingToolbarLayout: int getExpandedTitleMarginTop()
com.caij.puremusic.MainModuleKt$dataModule$1$5: MainModuleKt$dataModule$1$5()
androidx.fragment.app.Fragment: java.lang.Object getReturnTransition()
com.caij.puremusic.db.model.ServerLyrics: java.lang.String getUrl()
com.alipay.apmobilesecuritysdk.face.APSecuritySdk$1: APSecuritySdk$1(com.alipay.apmobilesecuritysdk.face.APSecuritySdk,java.util.Map,com.alipay.apmobilesecuritysdk.face.APSecuritySdk$InitResultListener)
com.caij.puremusic.drive.model.PlayLists$$serializer: com.caij.puremusic.drive.model.PlayLists deserialize(kotlinx.serialization.encoding.Decoder)
com.tencent.bugly.proguard.u: boolean b(com.tencent.bugly.proguard.u,int)
com.umeng.commonsdk.statistics.proto.b$a: void a(com.umeng.analytics.pro.bu,com.umeng.commonsdk.statistics.proto.b)
org.jaudiotagger.audio.mp4.Flatten: java.io.File[] getInputs(org.jcodec.containers.mp4.boxes.MovieBox)
org.jaudiotagger.audio.mp3.XingFrame: void setFrameCount()
com.tencent.bugly.crashreport.CrashReport: java.lang.String removeUserData(android.content.Context,java.lang.String)
com.umeng.commonsdk.statistics.proto.Response: java.lang.String toString()
org.jaudiotagger.audio.ogg.util.OggPageHeader: java.lang.String toString()
com.umeng.commonsdk.config.c: c()
org.jaudiotagger.audio.mp3.MP3FileReader: org.jaudiotagger.audio.generic.GenericAudioHeader getEncodingInfo(java.io.RandomAccessFile)
org.jcodec.containers.mp4.boxes.EndianBox: java.lang.String fourcc()
com.caij.puremusic.drive.model.SubsonicAlbum$Companion: kotlinx.serialization.KSerializer serializer()
com.umeng.commonsdk.statistics.internal.c: void d()
com.caij.puremusic.db.model.SongQueries$GetSongBySourceQuery: void addListener(app.cash.sqldelight.Query$Listener)
com.google.android.material.navigation.NavigationBarItemView: void setActiveIndicatorResizeable(boolean)
com.umeng.analytics.pro.ci: void b(byte[])
org.simpleframework.xml.stream.PullReader$Start: java.lang.String getPrefix()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZ(float)
com.google.android.material.bottomappbar.BottomAppBar: void setTitle(java.lang.CharSequence)
com.umeng.commonsdk.statistics.common.HelperUtils: void writeFile(java.io.File,byte[])
com.google.android.material.card.MaterialCardView: void setCardForegroundColor(android.content.res.ColorStateList)
com.alipay.android.phone.mrpc.core.f: long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)
app.cash.sqldelight.driver.android.AndroidSqliteDriver$execute$2: AndroidSqliteDriver$execute$2()
org.jcodec.containers.mp4.boxes.SampleToChunkBox: java.lang.String fourcc()
com.umeng.commonsdk.statistics.proto.Response: java.lang.String getMsg()
com.umeng.commonsdk.utils.UMUtils: boolean checkIntentFilterData(android.content.Context,java.lang.String)
org.simpleframework.xml.transform.DoubleTransform: DoubleTransform()
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey valueOf(java.lang.String)
com.caij.puremusic.db.model.SongQueries$SearchSongsByTitleQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportRealtime: boolean shouldSendMessage(boolean)
com.caij.puremusic.model.DriveFileParcelable: java.lang.String toString()
org.simpleframework.xml.core.LabelMap: boolean isStrict(org.simpleframework.xml.core.Context)
org.jaudiotagger.tag.mp4.Mp4TagField: void isBinary(boolean)
com.tencent.mm.opensdk.modelbiz.WXChannelOpenFeed: WXChannelOpenFeed()
com.umeng.analytics.pro.ab: java.util.concurrent.CountDownLatch c(com.umeng.analytics.pro.ab)
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl: void setLocale(android.content.res.Configuration,java.util.Locale)
com.caij.puremusic.drive.model.Auth2Token: long getCreateTime()
org.jcodec.containers.mp4.boxes.ChunkOffsets64Box: void doWrite(java.nio.ByteBuffer)
org.simpleframework.xml.core.GroupExtractor: org.simpleframework.xml.core.LabelMap getElements()
com.caij.puremusic.drive.model.OneDriveItem$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
org.jcodec.containers.mp4.boxes.ColorExtension: void setColorRange(java.lang.Byte)
me.tankery.lib.circularseekbar.CircularSeekBar: void setEndAngle(float)
com.google.android.material.checkbox.MaterialCheckBox: int getCheckedState()
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$deleteById$1: java.lang.Object invoke(java.lang.Object)
com.tencent.bugly.proguard.u: void a(com.tencent.bugly.proguard.u,int,java.util.List)
com.caij.puremusic.db.model.PlaylistEntityQueries: app.cash.sqldelight.Query playlists()
org.simpleframework.xml.core.FieldContact: java.lang.annotation.Annotation getAnnotation(java.lang.Class)
androidx.window.layout.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
com.tencent.bugly.proguard.ap: java.io.BufferedReader a(java.io.File)
com.google.android.material.button.MaterialButton: void setIconResource(int)
org.simpleframework.xml.core.MethodScanner: void process(java.lang.reflect.Method,java.lang.annotation.Annotation[])
com.alipay.apmobilesecuritysdk.e.i: void a(com.alipay.apmobilesecuritysdk.e.c)
com.umeng.commonsdk.statistics.proto.Response$c: void a(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
org.jaudiotagger.tag.aiff.AiffTag: void deleteArtworkField()
com.caij.puremusic.drive.model.SubsonicResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyWPAY: FrameBodyWPAY(org.jaudiotagger.tag.id3.framebody.FrameBodyWPAY)
com.umeng.commonsdk.vchannel.b: long b()
com.caij.puremusic.drive.model.SearchResult3: boolean equals(java.lang.Object)
com.caij.puremusic.drive.model.SubsonicPlaylist: java.lang.String getComment()
com.caij.puremusic.drive.model.Type$Companion: Type$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.tencent.bugly.proguard.al: boolean a(java.lang.Throwable)
com.caij.puremusic.db.model.ServerLyrics: long component1()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void removeUnsupportedFrames()
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean registerApp(java.lang.String,long)
com.alipay.apmobilesecuritysdk.f.c: c(com.alipay.apmobilesecuritysdk.f.b)
org.simpleframework.xml.core.Detail: java.lang.Class getType()
com.caij.puremusic.db.model.SongEntityQueries$CheckSongPlaylistExistsQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
org.jaudiotagger.audio.aiff.chunk.AiffChunkType: org.jaudiotagger.audio.aiff.chunk.AiffChunkType get(java.lang.String)
com.caij.puremusic.db.model.ServerArtistCover: com.caij.puremusic.db.model.ServerArtistCover copy$default(com.caij.puremusic.db.model.ServerArtistCover,java.lang.String,long,java.lang.String,int,java.lang.Object)
org.simpleframework.xml.core.TreeModel: org.simpleframework.xml.core.LabelMap getElements()
com.umeng.analytics.pro.cj: cj(int)
com.caij.puremusic.db.model.ServerLyricsQueries$deleteById$1: ServerLyricsQueries$deleteById$1(long)
org.simpleframework.xml.core.TextLabel: boolean isData()
com.caij.puremusic.model.smartplaylist.ShuffleAllPlaylist$Creator: java.lang.Object createFromParcel(android.os.Parcel)
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
com.tencent.bugly.proguard.k: double a(double,int,boolean)
com.caij.puremusic.drive.model.PlexSongsResponse$$serializer: com.caij.puremusic.drive.model.PlexSongsResponse deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.tag.id3.framebody.FrameBodyCRM: FrameBodyCRM(java.lang.String,java.lang.String,byte[])
com.caij.puremusic.db.model.SongQueries$SongQuery: void addListener(app.cash.sqldelight.Query$Listener)
com.umeng.commonsdk.statistics.proto.d: void a(java.io.ObjectOutputStream)
com.caij.puremusic.drive.model.BaiduFileResponse: boolean equals(java.lang.Object)
org.jaudiotagger.audio.aiff.AiffUtil: java.util.Date timestampToDate(long)
org.simpleframework.xml.core.ElementMapParameter: org.simpleframework.xml.core.Expression getExpression()
org.simpleframework.xml.core.DetailScanner: void scan(java.lang.Class)
org.jaudiotagger.tag.Tag: java.util.List getAll(org.jaudiotagger.tag.FieldKey)
com.umeng.analytics.pro.bn: void a(byte)
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgram$Req: boolean checkArgs()
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$insert$2: void invoke(kotlin.jvm.functions.Function1)
com.afollestad.materialdialogs.internal.message.DialogContentLayout: int getFrameHorizontalMargin()
com.umeng.commonsdk.statistics.common.MLog: void d(java.util.Locale,java.lang.String,java.lang.Object[])
com.umeng.analytics.process.UMProcessDBHelper: UMProcessDBHelper(android.content.Context)
androidx.core.view.ViewCompat$Api31Impl: java.lang.String[] getReceiveContentMimeTypes(android.view.View)
androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
com.caij.puremusic.drive.model.PlayListsResponse: com.caij.puremusic.drive.model.PlayListsSubsonicResponse component1()
org.jcodec.containers.mp4.boxes.SampleEntry: short getDrefInd()
code.name.monkey.appthemehelper.common.prefs.supportv7.ATEDialogPreference: ATEDialogPreference(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.db.model.AlbumQueries: app.cash.sqldelight.Query albums()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlock: int getLength()
com.umeng.analytics.pro.bo: void a(byte[],int,int)
com.caij.puremusic.drive.model.ADriveItem$$serializer: com.caij.puremusic.drive.model.ADriveItem deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.drive.model.AlbumList: void write$Self(com.caij.puremusic.drive.model.AlbumList,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.caij.puremusic.network.model.LastFmTrack$Track: com.caij.puremusic.network.model.LastFmTrack$Track$Album getAlbum()
com.tencent.mm.opensdk.modelbiz.OpenBusiLuckyMoney: OpenBusiLuckyMoney()
org.jaudiotagger.tag.id3.framebody.FrameBodyTDAT: FrameBodyTDAT(java.nio.ByteBuffer,int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)
com.umeng.analytics.pro.o: void b()
org.jaudiotagger.tag.wav.WavInfoTag: java.lang.Long getStartLocationInFile()
com.caij.puremusic.drive.model.PlexSectionsResponse$$serializer: PlexSectionsResponse$$serializer()
com.umeng.analytics.b: void a(boolean)
org.jcodec.containers.mp4.boxes.TrakBox: TrakBox(org.jcodec.containers.mp4.boxes.Header)
com.umeng.commonsdk.statistics.common.DeviceConfig: boolean isOnline(android.content.Context)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
com.thegrizzlylabs.sardineandroid.DavAce: com.thegrizzlylabs.sardineandroid.model.Ace toModel()
com.umeng.commonsdk.statistics.internal.PreferenceWrapper: android.content.SharedPreferences getDefault(android.content.Context)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyEAL: void setAlbum(java.lang.String)
com.tencent.bugly.proguard.bg: boolean b()
org.jaudiotagger.logging.XMLTagDisplayFormatter: java.lang.String xmlOpenHeading(java.lang.String,java.lang.String)
com.umeng.analytics.process.UMProcessDBHelper$ProcessToMainCallback: UMProcessDBHelper$ProcessToMainCallback(com.umeng.analytics.process.UMProcessDBHelper,com.umeng.analytics.process.UMProcessDBHelper$1)
com.alipay.apmobilesecuritysdk.b.a: java.lang.String a(java.lang.String,java.lang.String)
org.simpleframework.xml.transform.CurrencyTransform: java.lang.String write(java.lang.Object)
com.alipay.apmobilesecuritysdk.e.h: void g(android.content.Context,java.lang.String)
com.caij.puremusic.drive.model.PlayLists$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.umeng.analytics.pro.l: int c(com.umeng.analytics.pro.l)
org.jaudiotagger.tag.id3.framebody.FrameBodyXSOA: java.lang.String getIdentifier()
org.jaudiotagger.audio.mp3.MP3FileWriter: void delete(org.jaudiotagger.audio.AudioFile)
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier getByByFieldKey(org.jaudiotagger.tag.FieldKey)
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: boolean onFileLock(java.lang.String,java.lang.Object)
org.simpleframework.xml.core.ElementArrayParameter: java.lang.Class getType()
com.caij.puremusic.model.CategoryInfo$Category: com.caij.puremusic.model.CategoryInfo$Category[] $values()
com.google.android.material.search.SearchBar$ScrollingViewBehavior: SearchBar$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
com.tencent.bugly.crashreport.crash.anr.TraceFileHelper$b: boolean a(java.lang.String,int,java.lang.String,java.lang.String)
org.simpleframework.xml.core.ClassScanner: void resolve(java.lang.reflect.Method)
com.yalantis.ucrop.view.OverlayView: void setFreestyleCropMode(int)
org.jaudiotagger.tag.id3.ID3v11Tag: void addTrack(java.lang.String)
org.simpleframework.xml.core.ElementUnionParameter: java.lang.Object getKey()
org.jaudiotagger.utils.tree.TreeModel: void removeTreeModelListener(org.jaudiotagger.utils.tree.TreeModelListener)
org.simpleframework.xml.core.TemplateLabel: java.lang.String getEntry()
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: NativeCrashHandler(android.content.Context,com.tencent.bugly.proguard.aa,com.tencent.bugly.proguard.as,com.tencent.bugly.proguard.ak,boolean,java.lang.String)
com.umeng.analytics.pro.b$a$a: java.lang.String b(java.lang.String)
com.caij.puremusic.db.model.FolderQueries$SelectByIdQuery: FolderQueries$SelectByIdQuery(com.caij.puremusic.db.model.FolderQueries,long,kotlin.jvm.functions.Function1)
com.caij.puremusic.model.CategoryInfo$Category: com.caij.puremusic.model.CategoryInfo$Category valueOf(java.lang.String)
org.jaudiotagger.tag.datatype.SynchronisedTempoCode: java.lang.Object clone()
androidx.media.app.NotificationCompat$Api21Impl: void setShowActionsInCompactView(android.app.Notification$MediaStyle,int[])
com.umeng.commonsdk.framework.UMFrUtils: void removeRedundantEnvelopeFiles(android.content.Context,int)
androidx.core.view.ViewCompat$Api26Impl: boolean isImportantForAutofill(android.view.View)
org.jaudiotagger.tag.id3.ID3v23Tag: void copyPrimitives(org.jaudiotagger.tag.id3.AbstractID3v2Tag)
org.jaudiotagger.audio.AudioFile: java.lang.String toString()
com.tencent.bugly.proguard.ax: ax()
kotlin.jvm.KotlinReflectionNotSupportedError: KotlinReflectionNotSupportedError()
com.umeng.commonsdk.vchannel.b: void a(java.lang.String)
com.umeng.analytics.pro.an: com.umeng.analytics.pro.an a(java.lang.String)
com.umeng.commonsdk.internal.utils.h: boolean b()
com.afollestad.materialdialogs.internal.list.DialogRecyclerView$onAttachedToWindow$1: DialogRecyclerView$onAttachedToWindow$1()
com.caij.puremusic.drive.model.SearchResult3: void write$Self(com.caij.puremusic.drive.model.SearchResult3,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
org.jaudiotagger.audio.ogg.util.OggPageHeader: byte[] getRawHeaderData()
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimation(android.view.View,java.lang.Runnable)
com.caij.puremusic.network.model.Image: int getWidth()
org.jaudiotagger.utils.IntArrayList: IntArrayList(int)
com.google.android.material.bottomsheet.BottomSheetBehavior: void createShapeValueAnimator()
org.jaudiotagger.tag.vorbiscomment.VorbisCommentReader: org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag read(byte[],boolean)
org.jcodec.containers.mp4.boxes.UrlBox: org.jcodec.containers.mp4.boxes.UrlBox createUrlBox(java.lang.String)
me.tankery.lib.circularseekbar.CircularSeekBar: void setNegativeEnabled(boolean)
com.google.gson.FieldNamingPolicy$1: FieldNamingPolicy$1(java.lang.String,int)
com.google.android.material.bottomappbar.BottomAppBar: void setFabCornerSize(float)
com.umeng.analytics.pro.y: void b(com.umeng.analytics.pro.y$a)
com.thegrizzlylabs.sardineandroid.model.Ace: void setGrant(com.thegrizzlylabs.sardineandroid.model.Grant)
com.tencent.mm.opensdk.modelbiz.CreateChatroom$Resp: int getType()
com.umeng.umzid.Spy: java.lang.String getNativeID()
com.umeng.commonsdk.statistics.proto.b: b(java.lang.String,long,int)
com.afollestad.materialdialogs.internal.main.DialogLayout: float[] getCornerRadii()
com.google.android.material.imageview.ShapeableImageView: void setStrokeWidthResource(int)
androidx.lifecycle.LegacySavedStateHandleController$OnRecreation: LegacySavedStateHandleController$OnRecreation()
com.tencent.mm.opensdk.modelmsg.WXFileObject: int getFileSize(java.lang.String)
com.caij.puremusic.drive.model.SubsonicAlbum: java.lang.String component3()
org.simpleframework.xml.core.AttributeParameter: boolean isRequired()
com.caij.puremusic.drive.model.PlayListSubsonicResponse$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.umeng.commonsdk.statistics.proto.c: com.umeng.analytics.pro.bc fieldForId(int)
com.google.android.material.appbar.CollapsingToolbarLayout: void setScrimAnimationDuration(long)
org.jaudiotagger.tag.datatype.AbstractString: java.lang.String toString()
com.umeng.analytics.pro.i: java.lang.String d(java.lang.String)
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgramEnvironment$Resp: void toBundle(android.os.Bundle)
com.google.android.material.bottomsheet.BottomSheetDialog: void setCancelable(boolean)
org.jaudiotagger.tag.wav.WavTag: void addField(org.jaudiotagger.tag.images.Artwork)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
org.jaudiotagger.tag.id3.ID3v23Tag: void loadFrameIntoMap(java.lang.String,org.jaudiotagger.tag.id3.AbstractID3v2Frame)
org.simpleframework.xml.core.PrimitiveScanner: org.simpleframework.xml.core.Section getSection()
org.jaudiotagger.tag.images.ImageHandler: byte[] writeImageAsPng(java.awt.image.BufferedImage)
com.umeng.common.b: android.content.SharedPreferences e()
org.simpleframework.xml.core.Scanner: boolean isStrict()
com.google.android.material.search.SearchView: android.view.Window getActivityWindow()
com.caij.puremusic.drive.model.AlbumSubsonicResponse: com.caij.puremusic.drive.model.SubsonicAlbum getAlbum()
com.alipay.android.phone.mrpc.core.p: com.alipay.android.phone.mrpc.core.HttpUrlHeader a()
org.simpleframework.xml.stream.InputElement: org.simpleframework.xml.stream.InputNode getNext(java.lang.String)
com.caij.puremusic.drive.model.AlbumMediaContainer: java.lang.String toString()
com.umeng.analytics.pro.b$a: b$a()
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
org.jaudiotagger.tag.id3.AbstractID3v2Frame$StatusFlags: AbstractID3v2Frame$StatusFlags(org.jaudiotagger.tag.id3.AbstractID3v2Frame)
com.caij.puremusic.drive.model.JellyfinSongListResponse: boolean equals(java.lang.Object)
org.simpleframework.xml.core.Template: void append(char[],int,int)
androidx.fragment.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)
com.caij.puremusic.db.model.SongEntityQueries$deletePlaylistSongs$2: void invoke(kotlin.jvm.functions.Function1)
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getCPU()
org.jcodec.containers.mp4.MP4Util$Atom: org.jcodec.containers.mp4.boxes.Header getHeader()
com.umeng.commonsdk.statistics.idtracking.a: java.util.List e()
com.umeng.commonsdk.statistics.proto.Response: void write(com.umeng.analytics.pro.bu)
org.simpleframework.xml.core.MethodType: int getPrefix()
com.tencent.bugly.proguard.ac: com.tencent.bugly.proguard.ac a()
com.alipay.apmobilesecuritysdk.e.d: com.alipay.apmobilesecuritysdk.e.c a(java.lang.String)
org.simpleframework.xml.core.Persister: boolean validate(java.lang.Class,org.simpleframework.xml.stream.InputNode,org.simpleframework.xml.core.Session)
com.caij.puremusic.lyrics.LrcView: void setTimeTextColor(int)
com.umeng.analytics.pro.bi: bi(byte)
org.simpleframework.xml.core.Entry: boolean isInline()
com.umeng.commonsdk.UMConfigureInternation: void doSelfCheck(android.content.Context)
org.simpleframework.xml.core.PathParser: void truncate()
org.simpleframework.xml.core.ElementUnionParameter: boolean isPrimitive()
com.caij.puremusic.db.model.ServerArtistCoverQueries$getById$1: java.lang.Object invoke(java.lang.Object)
com.umeng.analytics.pro.f$a: com.umeng.analytics.pro.f a()
org.simpleframework.xml.core.KeyBuilder$KeyType: KeyBuilder$KeyType(java.lang.String,int)
org.jcodec.containers.mp4.boxes.MP4ABox: void parse(java.nio.ByteBuffer)
com.umeng.analytics.pro.bb: bb(java.lang.String)
com.tencent.mm.opensdk.modelbiz.WXChannelOpenProfile$Resp: WXChannelOpenProfile$Resp()
com.google.android.material.bottomsheet.BottomSheetBehavior: void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable)
org.simpleframework.xml.core.ElementListLabel: boolean isCollection()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.util.List getFields(org.jaudiotagger.tag.FieldKey)
org.simpleframework.xml.stream.StreamReader$Text: StreamReader$Text(javax.xml.stream.events.XMLEvent)
com.umeng.analytics.pro.e$a$b: e$a$b()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getTargetFragment(boolean)
com.caij.puremusic.drive.model.SubsonicResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.SubsonicResponse)
com.caij.puremusic.drive.model.GoogleDriveFile$$serializer: com.caij.puremusic.drive.model.GoogleDriveFile deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.tag.lyrics3.Lyrics3v2: boolean equals(java.lang.Object)
com.caij.puremusic.drive.model.AlbumMetadata$Companion: kotlinx.serialization.KSerializer serializer()
org.simpleframework.xml.strategy.VisitorStrategy: VisitorStrategy(org.simpleframework.xml.strategy.Visitor,org.simpleframework.xml.strategy.Strategy)
org.jaudiotagger.tag.id3.framebody.FrameBodyPRIV: FrameBodyPRIV()
com.tencent.bugly.BuglyStrategy: com.tencent.bugly.BuglyStrategy$a getCrashHandleCallback()
org.jaudiotagger.tag.mp4.field.Mp4TagBinaryField: byte[] getDataBytes()
com.umeng.analytics.pro.aw: int a(java.lang.Comparable,java.lang.Comparable)
org.jaudiotagger.tag.id3.ID3v11Tag: java.lang.String getFirstTrack()
org.jaudiotagger.audio.opus.OpusFileWriter: void writeTag(org.jaudiotagger.audio.AudioFile,org.jaudiotagger.tag.Tag,java.io.RandomAccessFile,java.io.RandomAccessFile)
com.caij.puremusic.dialogs.SongDetailDialog: SongDetailDialog()
org.simpleframework.xml.stream.OutputBuffer: void clear()
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: void d()
org.simpleframework.xml.core.ElementListParameter: java.lang.String getPath()
org.simpleframework.xml.core.Variable$Adapter: boolean validate(org.simpleframework.xml.stream.InputNode)
org.jaudiotagger.tag.id3.ID3TextEncodingConversion: byte getTextEncoding(org.jaudiotagger.tag.id3.AbstractTagFrame,byte)
org.jcodec.containers.mp4.boxes.GamaExtension: void parse(java.nio.ByteBuffer)
com.caij.puremusic.drive.model.Multistatus: void setResponse(java.util.List)
org.jaudiotagger.audio.aiff.chunk.CopyrightChunk: boolean readChunk()
org.jaudiotagger.tag.id3.ID3v24Tag: void copyPrimitives(org.jaudiotagger.tag.id3.AbstractID3v2Tag)
com.umeng.commonsdk.config.a: boolean a(long,int)
com.caij.puremusic.db.model.SearchAlbumResultQueries$deleteById$2: void invoke(kotlin.jvm.functions.Function1)
org.simpleframework.xml.core.Session: java.util.Collection values()
com.tencent.mm.opensdk.modelbiz.JoinChatroom$Req: int getType()
org.simpleframework.xml.core.Source: java.lang.Object getAttribute(java.lang.Object)
com.tencent.mm.opensdk.openapi.MMSharedPreferences$REditor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)
com.umeng.analytics.filter.d: d(boolean,java.lang.String)
com.umeng.analytics.pro.bo: com.umeng.analytics.pro.bz j()
com.caij.puremusic.appshortcuts.AppShortcutLauncherActivity: AppShortcutLauncherActivity()
org.jcodec.containers.mp4.boxes.Header: org.jcodec.containers.mp4.boxes.Header newHeader(java.lang.String,long,boolean)
org.jaudiotagger.audio.ogg.OggVorbisTagReader$OggVorbisHeaderSizes: int getSetupHeaderSize()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void writeBufferToFile(java.io.File,java.nio.ByteBuffer,byte[],int,int,long)
org.simpleframework.xml.stream.InputElement: java.lang.String getValue()
org.jaudiotagger.tag.id3.AbstractID3v2Frame: int getFrameHeaderSize()
com.caij.puremusic.drive.model.Metadata: Metadata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
org.simpleframework.xml.core.FieldScanner: void extract(org.simpleframework.xml.core.Detail)
com.umeng.commonsdk.internal.c: void d()
com.tencent.bugly.proguard.ab: long f()
org.simpleframework.xml.stream.OutputElement: org.simpleframework.xml.stream.OutputNodeMap getAttributes()
org.simpleframework.xml.stream.PullReader$Entry: boolean isReserved()
org.jcodec.containers.mp4.boxes.SegmentIndexBox: SegmentIndexBox(org.jcodec.containers.mp4.boxes.Header)
com.google.android.material.bottomsheet.BottomSheetBehavior: int access$1102(com.google.android.material.bottomsheet.BottomSheetBehavior,int)
com.caij.puremusic.MainModuleKt$dataModule$1$1: MainModuleKt$dataModule$1$1()
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgram$Resp: int getType()
com.google.android.material.bottomsheet.BottomSheetBehavior: void clearAccessibilityAction(android.view.View,int)
com.caij.puremusic.activities.LicenseActivity: LicenseActivity()
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query songsDateLastDesc(long)
org.simpleframework.xml.core.ElementMapUnionLabel: java.lang.annotation.Annotation getAnnotation()
com.umeng.commonsdk.config.d$a: com.umeng.commonsdk.config.d$a valueOf(java.lang.String)
org.jcodec.containers.mp4.boxes.SegmentIndexBox: java.lang.String fourcc()
org.simpleframework.xml.core.ElementListLabel: boolean isData()
com.umeng.commonsdk.statistics.proto.d: java.lang.String toString()
com.caij.puremusic.db.model.HistoryEntity: long getTimePlayed()
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean sendLaunchWXMiniprogram(android.content.Context,com.tencent.mm.opensdk.modelbase.BaseReq)
com.umeng.commonsdk.statistics.UMServerURL: UMServerURL()
org.simpleframework.xml.stream.CamelCaseBuilder: java.lang.String getElement(java.lang.String)
com.caij.puremusic.drive.model.PlayListItem: int hashCode()
com.umeng.commonsdk.statistics.common.MLog: void i(java.lang.String)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
org.jcodec.containers.mp4.boxes.HandlerBox: int estimateSize()
androidx.constraintlayout.widget.ConstraintLayout: int getMinHeight()
org.jaudiotagger.tag.datatype.TCONString: java.util.List splitV23(java.lang.String)
org.simpleframework.xml.core.ExtractorFactory$ExtractorBuilder: ExtractorFactory$ExtractorBuilder(java.lang.Class,java.lang.Class)
org.jcodec.containers.mp4.boxes.TrakBox: boolean isVideo()
com.google.android.material.appbar.CollapsingToolbarLayout: android.text.TextUtils$TruncateAt getTitleTextEllipsize()
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.caij.puremusic.db.model.SongQueries$songsByNameArtist$2: com.caij.puremusic.db.model.Song invoke(long,java.lang.String,int,int,long,java.lang.String,java.lang.String,long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,long,long)
androidx.core.content.ContextCompat$Api16Impl: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyPairs: java.lang.String getIdentifier()
com.thegrizzlylabs.sardineandroid.model.Multistatus: java.lang.String getSyncToken()
io.ktor.http.HttpUrlEncodedKt$formUrlEncodeTo$1: HttpUrlEncodedKt$formUrlEncodeTo$1()
com.umeng.analytics.pro.bb: bb()
com.umeng.commonsdk.statistics.common.HelperUtils: java.lang.String getUmengMD5(java.lang.String)
com.tencent.mm.opensdk.modelmsg.WXWebpageObject: void serialize(android.os.Bundle)
com.tencent.bugly.proguard.aa: java.lang.Boolean r()
org.simpleframework.xml.stream.OutputDocument: void setValue(java.lang.String)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: void setBufferedPosition(android.media.session.PlaybackState$Builder,long)
com.alipay.android.phone.mrpc.core.t: t()
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries: app.cash.sqldelight.Query getById(java.lang.String)
org.jaudiotagger.test.MergeID3AndMP3Files$MP3FileFilter: boolean accept(java.io.File)
org.jaudiotagger.audio.asf.data.AsfHeader: org.jaudiotagger.audio.asf.data.AudioStreamChunk getAudioStreamChunk()
com.google.common.hash.BloomFilterStrategies$1: BloomFilterStrategies$1(java.lang.String,int)
com.caij.puremusic.drive.model.Prop$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.umeng.commonsdk.statistics.common.DeviceTypeEnum: java.lang.String getDeviceIdType()
com.umeng.commonsdk.statistics.proto.e: void clear()
com.caij.puremusic.drive.model.PlayListSubsonicResponse: java.lang.String getStatus()
com.tencent.mmkv.MMKV: int writeValueToNB(long,java.lang.String,long,int)
org.simpleframework.xml.core.ValueRequiredException: ValueRequiredException(java.lang.Throwable,java.lang.String,java.lang.Object[])
org.simpleframework.xml.core.ObjectScanner: boolean isEmpty()
com.umeng.analytics.pro.as: long b(long,int)
com.caij.puremusic.drive.model.SubsonicAlbum$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.caij.puremusic.db.model.DriveFileDownUrlInfo: java.lang.String toString()
com.caij.puremusic.drive.model.PlexArtistsResponse: PlexArtistsResponse(com.caij.puremusic.drive.model.AMediaContainer)
com.umeng.analytics.process.UMProcessDBHelper$ProcessToMainCallback: boolean onFileLock(java.io.File,int)
com.caij.puremusic.db.model.ServerAudioFormat: long component1()
com.umeng.analytics.pro.an: com.umeng.analytics.pro.bz H()
com.caij.puremusic.drive.model.PlexArtistsResponse: java.lang.String toString()
com.umeng.commonsdk.stateless.b: void c()
com.caij.puremusic.network.model.Artist: java.lang.String component5()
org.jaudiotagger.tag.id3.ID3v22Frame: boolean isBinary()
com.caij.puremusic.db.model.Song: com.caij.puremusic.db.model.Song copy(long,java.lang.String,int,int,long,java.lang.String,java.lang.String,long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,long,long)
com.tencent.bugly.proguard.aj: aj(android.content.Context,int,int,byte[],java.lang.String,java.lang.String,com.tencent.bugly.proguard.ah,int,int,boolean)
org.simpleframework.xml.core.PathParser$PathSection: java.lang.String getCanonicalPath()
androidx.lifecycle.SavedStateHandlesVM: SavedStateHandlesVM()
org.jaudiotagger.audio.asf.data.AudioStreamChunk: long getBlockAlignment()
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean sendPreloadWXMiniprogram(android.content.Context,com.tencent.mm.opensdk.modelbase.BaseReq)
org.jaudiotagger.tag.id3.framebody.FrameBodyMVNM: FrameBodyMVNM()
com.caij.puremusic.db.model.SongQueries$songsOrderDateAdd$1: SongQueries$songsOrderDateAdd$1(kotlin.jvm.functions.Function18,com.caij.puremusic.db.model.SongQueries)
org.jaudiotagger.audio.asf.util.TagConverter: TagConverter()
com.umeng.analytics.pro.at: void a(short)
org.simpleframework.xml.core.MethodPartFactory: org.simpleframework.xml.core.MethodName getWrite(java.lang.reflect.Method,org.simpleframework.xml.core.MethodType)
org.repackage.com.meizu.flyme.openidsdk.OpenIdHelper: java.lang.String d(android.content.Context)
org.simpleframework.xml.transform.ByteTransform: java.lang.Byte read(java.lang.String)
org.jaudiotagger.tag.id3.ID3v23Tag: int getPaddingSize()
com.caij.puremusic.db.model.ServerLyricsQueries$deleteById$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.yalantis.ucrop.view.GestureCropImageView: int getDoubleTapScaleSteps()
com.umeng.commonsdk.UMConfigureImpl: int a()
org.jaudiotagger.audio.asf.AsfFileWriter: AsfFileWriter()
com.google.android.material.search.SearchBar: void setNavigationIconDecorative(boolean)
com.caij.puremusic.views.TopAppBarLayout: TopAppBarLayout(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.tag.id3.ID3v1Tag: int getFieldCount()
com.afollestad.materialdialogs.color.view.PreviewFrameView: void setOnHexChanged(kotlin.jvm.functions.Function1)
com.umeng.commonsdk.statistics.noise.ImLatent: void onImprintChanged(com.umeng.commonsdk.statistics.idtracking.ImprintHandler$a)
com.google.android.material.internal.NavigationMenuItemView: void setMaxLines(int)
com.umeng.commonsdk.statistics.proto.e$c: void a(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
com.tencent.bugly.CrashModule: void a(android.content.Context,com.tencent.bugly.BuglyStrategy)
com.google.android.material.bottomsheet.BottomSheetDialog: void cancel()
org.simpleframework.xml.core.Introspector: java.lang.String toString()
org.jaudiotagger.utils.tree.TreePath: org.jaudiotagger.utils.tree.TreePath getParentPath()
org.jaudiotagger.audio.asf.io.ChunkContainerReader: void checkStream(java.io.InputStream)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void write(java.io.OutputStream,int)
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox createTrackFragmentHeaderBoxWithId(int)
org.jaudiotagger.logging.XMLTagDisplayFormatter: void openHeadingElement(java.lang.String,java.lang.String)
org.jaudiotagger.tag.datatype.StringHashMap: java.util.Map getValueToKey()
org.jcodec.containers.mp4.boxes.ReverseDnsBox: java.lang.String getName()
org.jaudiotagger.tag.id3.ID3v22Frame: void write(java.io.ByteArrayOutputStream)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void registerOnBackInvokedCallback(java.lang.Object,int,java.lang.Object)
com.google.common.reflect.TypeToken$TypeFilter$1: boolean apply(com.google.common.reflect.TypeToken)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShadowPaddingEnabled(boolean)
com.caij.puremusic.drive.model.GoogleDriveFileResponse: GoogleDriveFileResponse(int,java.lang.String,java.lang.String,boolean,java.util.List,kotlinx.serialization.internal.SerializationConstructorMarker)
com.caij.puremusic.drive.model.SubsonicSearchResponse$Companion: kotlinx.serialization.KSerializer serializer()
me.tankery.lib.circularseekbar.CircularSeekBar: android.graphics.Paint$Cap getCircleStyle()
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShrinkMotionSpec()
com.tencent.mm.opensdk.modelbiz.WXChannelOpenLive$Resp: WXChannelOpenLive$Resp()
com.caij.puremusic.network.model.SearchResponse: SearchResponse(com.caij.puremusic.network.model.ArtistWrapper,com.caij.puremusic.network.model.ArtistWrapper,com.caij.puremusic.network.model.ArtistWrapper)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: void put(java.lang.String,java.io.File,java.lang.String,boolean)
com.google.android.material.navigation.NavigationBarMenuView: android.content.res.ColorStateList getItemTextColor()
com.caij.puremusic.db.model.ServerLyricsQueries$getById$1: ServerLyricsQueries$getById$1(kotlin.jvm.functions.Function3)
com.tencent.mmkv.MMKV: long getDefaultMMKV(int,java.lang.String)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()
com.caij.puremusic.network.model.TokenData: java.lang.String toString()
com.umeng.commonsdk.framework.UMFrUtils: long getDistanceDays(long,long)
org.jcodec.containers.mp4.boxes.ReverseDnsBox$RdnsNameBox: java.lang.String fourcc()
com.umeng.commonsdk.statistics.noise.ABTest: java.lang.String getTestName()
com.google.android.material.navigation.NavigationBarMenuView: void setItemActiveIndicatorMarginHorizontal(int)
com.alipay.sdk.m.r.a: a(java.lang.String,int,java.lang.String)
org.jaudiotagger.tag.datatype.AbstractValuePair: java.util.Map getValueToIdMap()
com.caij.puremusic.db.model.PlaylistEntityQueries$checkPlaylistExists$1: java.lang.Object invoke(java.lang.Object)
com.google.android.material.appbar.MaterialToolbar: MaterialToolbar(android.content.Context,android.util.AttributeSet)
com.tencent.bugly.proguard.be: java.util.Map a(java.util.Map)
org.jcodec.containers.mp4.boxes.TrackHeaderBox: float getVolume()
org.jaudiotagger.tag.lyrics3.Lyrics3v1: java.lang.String toString()
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: void ignoreCookies()
org.jaudiotagger.tag.id3.ID3v1Tag: java.lang.String getFirstYear()
org.jaudiotagger.tag.asf.AsfTag: java.lang.String getFirst(org.jaudiotagger.tag.asf.AsfFieldKey)
com.caij.puremusic.drive.model.PlayListItem: java.lang.String getSortName()
com.umeng.commonsdk.stateless.d$6: int a(java.io.File,java.io.File)
com.google.android.material.search.SearchView: android.text.Editable getText()
com.alipay.apmobilesecuritysdk.face.APSecuritySdk$TokenResult: APSecuritySdk$TokenResult(com.alipay.apmobilesecuritysdk.face.APSecuritySdk)
com.tencent.bugly.BuglyStrategy$a: byte[] onCrashHandleStart2GetExtraDatas(int,java.lang.String,java.lang.String,java.lang.String)
org.jcodec.containers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox: org.jcodec.containers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox createTrackFragmentBaseMediaDecodeTimeBox(long)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getShowMotionSpec()
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: int getDepth()
androidx.media.AudioAttributesImplApi26Parcelizer: void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel)
com.tencent.bugly.proguard.i: com.tencent.bugly.proguard.i a(java.lang.Object,java.lang.String)
com.afollestad.materialdialogs.internal.main.DialogLayout: void setButtonsLayout(com.afollestad.materialdialogs.internal.button.DialogActionButtonLayout)
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1: ExecutorCoroutineDispatcher$Key$1()
com.caij.puremusic.db.model.ArtistQueries$ArtistByIdQuery: long getId()
com.umeng.analytics.pro.b: java.lang.String b(java.lang.String)
org.simpleframework.xml.stream.NodeReader: boolean isRoot(org.simpleframework.xml.stream.InputNode)
com.caij.puremusic.drive.model.PlexUser: int hashCode()
org.jaudiotagger.tag.id3.framebody.FrameBodyAPIC: void setPictureType(byte)
org.jaudiotagger.audio.SupportedFileFormat$11: SupportedFileFormat$11(java.lang.String,int,java.lang.String)
com.umeng.analytics.process.c$a: com.umeng.analytics.process.c$a a(android.content.Context,java.lang.String)
org.simpleframework.xml.strategy.ReadGraph: org.simpleframework.xml.strategy.Value readArray(org.simpleframework.xml.strategy.Type,java.lang.Class,org.simpleframework.xml.stream.NodeMap)
org.simpleframework.xml.core.CompositeListUnion: java.lang.Object readText(org.simpleframework.xml.stream.InputNode)
com.afollestad.materialdialogs.color.view.PreviewFrameView: kotlin.jvm.functions.Function1 getOnHexChanged()
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: boolean isGrouping()
nl.adaptivity.xmlutil.serialization.InputKind: nl.adaptivity.xmlutil.serialization.InputKind[] $values()
org.simpleframework.xml.transform.CharacterArrayTransform: java.lang.String write(java.lang.Object)
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
org.jaudiotagger.tag.id3.framebody.FrameBodyTSRC: FrameBodyTSRC()
org.jaudiotagger.audio.opus.OpusVorbisTagReader: OpusVorbisTagReader()
com.tencent.mm.opensdk.modelbiz.WXPayInsurance$Resp: boolean checkArgs()
com.tencent.bugly.proguard.as: java.util.Map a(com.tencent.bugly.crashreport.crash.CrashDetailBean,com.tencent.bugly.proguard.aa)
org.jaudiotagger.tag.datatype.Lyrics3TimeStamp: void setTimeStamp(long,byte)
com.umeng.commonsdk.statistics.proto.e$e: com.umeng.commonsdk.statistics.proto.e$e a(java.lang.String)
com.caij.puremusic.drive.model.GoogleDriveFileResponse: com.caij.puremusic.drive.model.GoogleDriveFileResponse copy$default(com.caij.puremusic.drive.model.GoogleDriveFileResponse,java.lang.String,java.lang.String,boolean,java.util.List,int,java.lang.Object)
code.name.monkey.appthemehelper.common.prefs.BorderCircleView: void setBackgroundColor(int)
org.simpleframework.xml.core.TextListLabel: java.lang.String getName()
com.tencent.bugly.proguard.aj: void b(long)
org.jcodec.containers.mp4.boxes.EsdsBox$Descriptor: int getTag()
com.caij.puremusic.drive.model.PlexUser$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.caij.puremusic.model.lyrics.AbsSynchronizedLyrics: java.lang.String getLine(int)
org.jaudiotagger.audio.asf.data.ContainerType: java.math.BigInteger getMaximumDataLength()
org.simpleframework.xml.convert.Registry: Registry()
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyUrlLink: void setUrlLink(java.lang.String)
org.simpleframework.xml.core.InstantiatorBuilder: void validateConstructors(org.simpleframework.xml.core.LabelMap,java.util.List)
org.jaudiotagger.tag.id3.framebody.FrameBodyTCMP: boolean isCompilation()
org.jaudiotagger.tag.mp4.field.Mp4TrackField: Mp4TrackField(int)
org.jaudiotagger.audio.asf.io.ContentDescriptionReader: org.jaudiotagger.audio.asf.data.GUID[] getApplyingIds()
org.jaudiotagger.tag.id3.framebody.FrameBodyMLLT: void setupObjectList()
org.jcodec.containers.mp4.boxes.Box: org.jcodec.containers.mp4.boxes.Box$LeafBox createLeafBox(org.jcodec.containers.mp4.boxes.Header,java.nio.ByteBuffer)
org.jaudiotagger.tag.datatype.MultipleTextEncodedStringNullTerminated$Values: void add(java.lang.String)
com.umeng.analytics.filter.d: java.lang.String toString()
org.jaudiotagger.tag.id3.framebody.FrameBodyTPOS: FrameBodyTPOS(byte,java.lang.Integer,java.lang.Integer)
com.caij.puremusic.activities.saf.SAFGuideActivity: SAFGuideActivity()
com.google.common.collect.AbstractIterator$State: com.google.common.collect.AbstractIterator$State[] values()
org.simpleframework.xml.core.TextParameter: boolean isPrimitive()
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRL: FrameBodyTDRL()
org.jaudiotagger.audio.mp3.MP3AudioHeader: java.lang.Integer getByteRate()
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey byFieldName(java.lang.String)
com.caij.puremusic.drive.model.Response$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: java.io.FileDescriptor dup(java.io.FileDescriptor)
com.umeng.analytics.AnalyticsConfig: java.lang.String getRealTimeDebugKey()
org.jaudiotagger.audio.AudioHeader: java.lang.String getEncodingType()
org.jaudiotagger.tag.options.PadNumberOption: org.jaudiotagger.tag.options.PadNumberOption[] values()
org.simpleframework.xml.stream.NamespaceMap: java.util.Iterator iterator()
org.simpleframework.xml.core.ArrayInstance: boolean isReference()
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyTextInfo: java.lang.String getValueAtIndex(int)
com.caij.puremusic.drive.model.Media: int getAudioChannels()
org.simpleframework.xml.strategy.Contract: java.lang.String getLabel()
org.simpleframework.xml.core.ElementMapUnionLabel: java.lang.String[] getPaths()
com.caij.puremusic.model.smartplaylist.ShuffleAllPlaylist: int describeContents()
org.jaudiotagger.utils.EqualsUtil: boolean areEqual(java.lang.Object,java.lang.Object)
org.jaudiotagger.test.ExtractID3TagFromFile: ExtractID3TagFromFile()
org.jaudiotagger.tag.id3.framebody.FrameBodySYLT: java.lang.String getIdentifier()
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean isLayouting(android.view.View)
com.caij.puremusic.drive.model.MediaContainer$Companion: kotlinx.serialization.KSerializer serializer()
com.caij.puremusic.db.model.PlaylistEntityQueries$GetPlaylistEntityByIdQuery$execute$1: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query songsByAlbumIdTypeCount(long,int)
com.tencent.mm.opensdk.modelbiz.OpenWebview$Resp: boolean checkArgs()
androidx.constraintlayout.core.widgets.ConstraintAnchor$Type: androidx.constraintlayout.core.widgets.ConstraintAnchor$Type valueOf(java.lang.String)
com.caij.puremusic.drive.model.DropboxDriveItem: long component3()
org.jaudiotagger.tag.id3.ID3v1Tag: java.util.List getGenre()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: void addCustomProperties(com.thegrizzlylabs.sardineandroid.model.Prop,java.util.Set)
com.umeng.analytics.pro.bq: bq()
com.caij.puremusic.dialogs.ImportPlaylistDialog: ImportPlaylistDialog()
com.umeng.vt.diff.Event: java.lang.String getPageName()
com.google.firebase.encoders.proto.Protobuf$IntEncoding: Protobuf$IntEncoding(java.lang.String,int)
com.tencent.bugly.proguard.ap: byte[] a(java.lang.String,java.lang.String)
org.jaudiotagger.audio.ogg.VorbisVersion: VorbisVersion(java.lang.String,int,java.lang.String)
com.alipay.apmobilesecuritysdk.face.APSecuritySdk$1: void run()
com.caij.puremusic.drive.model.GoogleDriveFile$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
org.jaudiotagger.utils.tree.DefaultTreeModel: void reload()
org.simpleframework.xml.core.InstanceFactory$ValueInstance: java.lang.Object getInstance()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.slider.BaseSlider: void setThumbStrokeColor(android.content.res.ColorStateList)
com.umeng.analytics.process.UMProcessDBDatasSender$ReplaceCallback: boolean onFileLock(java.lang.String)
org.jaudiotagger.audio.wav.WavTagWriter: void rewriteRiffHeaderSize(java.nio.channels.FileChannel)
com.caij.puremusic.drive.model.ImageTags: java.lang.String toString()
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportStrategy: boolean isValid()
com.umeng.analytics.pro.ax: ax()
com.tencent.bugly.BuglyStrategy$a: BuglyStrategy$a()
com.caij.puremusic.drive.model.JellyfinLoginResponse: boolean equals(java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationX(float)
com.google.android.material.appbar.CollapsingToolbarLayout: void setStatusBarScrimResource(int)
com.umeng.analytics.b: boolean b(java.lang.String,java.lang.Object)
com.umeng.analytics.pro.an: void f()
com.umeng.commonsdk.stateless.UMSLEnvelopeBuild$1: UMSLEnvelopeBuild$1(com.umeng.commonsdk.stateless.UMSLEnvelopeBuild,android.content.Context)
org.simpleframework.xml.transform.IntegerTransform: java.lang.Object read(java.lang.String)
com.caij.puremusic.drive.model.EmbyAlbumsResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
org.jaudiotagger.audio.asf.data.EncryptionChunk: java.lang.String prettyPrint(java.lang.String)
org.jaudiotagger.tag.aiff.AiffTag: void addField(org.jaudiotagger.tag.images.Artwork)
org.simpleframework.xml.core.FieldContact: java.lang.Class[] getDependents()
androidx.constraintlayout.motion.widget.MotionLayout: void setDelayedApplicationOfInitialState(boolean)
org.jaudiotagger.logging.PlainTextTagDisplayFormatter: void openHeadingElement(java.lang.String,int)
org.jaudiotagger.tag.TagOptionSingleton: boolean isOpenParenthesis(java.lang.String)
com.tencent.bugly.proguard.w: long a(com.tencent.bugly.proguard.w,java.lang.String,android.content.ContentValues,com.tencent.bugly.proguard.v)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: void isBinary(boolean)
org.simpleframework.xml.stream.EventToken: boolean isStart()
org.jcodec.containers.mp4.boxes.ChannelBox$ChannelDescription: float[] getCoordinates()
com.google.android.material.chip.Chip: void setChipText(java.lang.CharSequence)
com.google.android.material.bottomsheet.BottomSheetDragHandleView$2: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
com.caij.puremusic.views.PermissionItem: androidx.appcompat.widget.AppCompatImageView getCheckImage()
com.google.android.material.textfield.TextInputLayout: int getMinWidth()
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$BreadthFirstEnumeration: org.jaudiotagger.utils.tree.TreeNode nextElement()
org.jaudiotagger.tag.id3.framebody.FrameBodyTRCK: java.lang.Integer getTrackTotal()
org.simpleframework.xml.core.ElementListUnionParameter: org.simpleframework.xml.core.Expression getExpression()
com.umeng.commonsdk.statistics.c: boolean a(java.io.File)
com.umeng.analytics.process.UMProcessDBDatasSender: org.json.JSONObject generalBody()
org.jaudiotagger.tag.wav.WavTag: void addChunkSummary(org.jaudiotagger.audio.iff.ChunkSummary)
com.thegrizzlylabs.sardineandroid.impl.SardineException: SardineException(java.lang.String,int,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundMode(int)
kotlin.collections.State: kotlin.collections.State[] $values()
org.jaudiotagger.utils.tree.TreePath: java.lang.Object[] getPath()
com.umeng.commonsdk.internal.utils.InfoPreferenceAgent: InfoPreferenceAgent()
com.caij.puremusic.drive.model.SongItem: java.util.List component18()
org.jaudiotagger.tag.lyrics3.Lyrics3v2: java.lang.String toString()
org.jaudiotagger.tag.id3.framebody.AbstractID3v2FrameBody: int getSize()
com.tencent.bugly.proguard.k: void a(int)
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean sendOpenWebview(android.content.Context,android.os.Bundle)
com.alipay.sdk.app.H5PayCallback: void onPayResult(com.alipay.sdk.util.H5PayResultModel)
org.simpleframework.xml.core.Variable: Variable(org.simpleframework.xml.core.Label,java.lang.Object)
com.google.common.base.Predicates$ObjectPredicate: Predicates$ObjectPredicate(java.lang.String,int,com.google.common.base.Predicates$1)
org.jaudiotagger.tag.id3.framebody.FrameBodyTMOO: java.lang.String getIdentifier()
androidx.fragment.app.Fragment: void setFocusedView(android.view.View)
com.alipay.sdk.app.AuthTask: void a(com.alipay.sdk.app.AuthTask)
com.google.android.material.chip.Chip: void setChipIconSize(float)
com.google.android.material.slider.BaseSlider: void setCustomThumbDrawablesForValues(android.graphics.drawable.Drawable[])
org.simpleframework.xml.ElementArray: java.lang.String name()
com.caij.puremusic.drive.model.AlbumResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyEAR: FieldFrameBodyEAR(org.jaudiotagger.tag.lyrics3.FieldFrameBodyEAR)
com.umeng.commonsdk.statistics.proto.Response: void unsetImprint()
com.google.android.gms.internal.play_billing.zzba: zzba()
androidx.preference.ListPreference: ListPreference(android.content.Context,android.util.AttributeSet)
com.umeng.commonsdk.stateless.b: void d()
com.thegrizzlylabs.sardineandroid.DavResource$DavProperties: DavResource$DavProperties(com.thegrizzlylabs.sardineandroid.DavResource,java.util.Date,java.util.Date,java.lang.String,java.lang.Long,java.lang.String,java.lang.String,java.util.List,java.lang.String,java.util.List,java.util.Map)
org.jcodec.containers.mp4.boxes.TrunBox: java.lang.String fourcc()
org.jaudiotagger.tag.id3.ID3v1Tag: boolean hasCommonFields()
com.umeng.analytics.b: org.json.JSONObject b()
com.caij.puremusic.db.model.SearchAlbumResultQueries: void clear()
com.caij.puremusic.drive.model.ArtistItem: java.util.List getBackdropImageTags()
android.support.v4.media.MediaDescriptionCompat$Api21Impl: java.lang.String getMediaId(android.media.MediaDescription)
org.simpleframework.xml.core.ClassInstantiator: ClassInstantiator(java.util.List,org.simpleframework.xml.core.Creator,org.simpleframework.xml.core.ParameterMap,org.simpleframework.xml.core.Detail)
org.jaudiotagger.tag.lyrics3.Lyrics3v2: Lyrics3v2(org.jaudiotagger.tag.lyrics3.Lyrics3v2)
com.caij.puremusic.model.Data: com.caij.puremusic.model.Data copy(java.lang.String,java.lang.String,java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String)
androidx.fragment.app.DialogFragment: int show(androidx.fragment.app.FragmentTransaction,java.lang.String)
com.umeng.analytics.pro.bo: void o()
org.jaudiotagger.tag.id3.ID3v1Tag: boolean seek(java.nio.ByteBuffer)
org.jaudiotagger.tag.id3.framebody.FrameBodyUnsupported: FrameBodyUnsupported()
com.caij.puremusic.drive.model.ADriveItem: com.caij.puremusic.drive.model.ADriveItem copy$default(com.caij.puremusic.drive.model.ADriveItem,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
com.google.android.material.navigation.NavigationBarView: void setItemTextAppearanceInactive(int)
com.umeng.commonsdk.stateless.d$4: int compare(java.lang.Object,java.lang.Object)
com.umeng.commonsdk.statistics.proto.a: void c(boolean)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: int getValue()
com.caij.puremusic.db.model.ServerSongCover: java.lang.String component3()
com.alipay.sdk.app.PayTask: boolean payInterceptorWithUrl(java.lang.String,boolean,com.alipay.sdk.app.H5PayCallback)
org.jaudiotagger.tag.FieldKey: org.jaudiotagger.tag.FieldKey valueOf(java.lang.String)
org.jcodec.containers.mp4.boxes.SampleSizesBox: void setCount(int)
com.caij.puremusic.drive.model.OneDriveFile$Companion: OneDriveFile$Companion()
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
androidx.fragment.app.Fragment: java.lang.String toString()
org.jcodec.containers.mp4.boxes.GamaExtension: int estimateSize()
org.simpleframework.xml.core.ObjectFactory: ObjectFactory(org.simpleframework.xml.core.Context,org.simpleframework.xml.strategy.Type,java.lang.Class)
com.caij.puremusic.preferences.LibraryPreference: LibraryPreference(android.content.Context)
org.jcodec.containers.mp4.boxes.DataBox: void doWrite(java.nio.ByteBuffer)
org.simpleframework.xml.core.DefaultScanner: boolean isStrict()
com.umeng.commonsdk.framework.UMWorkDispatch: void removeEvent()
com.tencent.mm.opensdk.modelmsg.WXFileObject: WXFileObject(java.lang.String)
org.simpleframework.xml.core.ConstructorException: ConstructorException(java.lang.String,java.lang.Object[])
org.simpleframework.xml.core.InstantiatorBuilder: org.simpleframework.xml.core.Label resolve(org.simpleframework.xml.core.Parameter)
com.tencent.mmkv.MMKV: boolean encodeBytes(long,java.lang.String,byte[])
com.caij.puremusic.drive.model.OneDriveItem: long component4()
com.caij.puremusic.drive.model.DavResource: java.lang.String getEncodePath()
com.umeng.analytics.process.UMProcessDBDatasSender$1: void run()
org.jaudiotagger.tag.id3.ID3v1Tag: java.util.List getComment()
com.tencent.bugly.proguard.ae: com.tencent.bugly.proguard.br a(byte[])
org.repackage.com.miui.deviceid.IdentifierManager: boolean a()
org.jcodec.containers.mp4.boxes.ClearApertureBox: ClearApertureBox(org.jcodec.containers.mp4.boxes.Header)
org.simpleframework.xml.core.TextLabel: java.lang.String getName()
kotlinx.coroutines.CoroutineStart: CoroutineStart(java.lang.String,int)
org.simpleframework.xml.stream.OutputBuffer: void append(char[],int,int)
androidx.fragment.app.Fragment: void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
com.caij.puremusic.drive.model.SongItem: int getIndexNumber()
org.repackage.com.vivo.identifier.IdentifierIdClient: boolean a()
org.simpleframework.xml.Text: boolean required()
com.umeng.commonsdk.statistics.proto.d$a: void a(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
com.thegrizzlylabs.sardineandroid.impl.handler.LockResponseHandler: java.lang.String handleResponse(okhttp3.Response)
com.caij.puremusic.drive.model.ImageTags: boolean equals(java.lang.Object)
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: int getTrackId()
org.simpleframework.xml.core.DetailExtractor: DetailExtractor(org.simpleframework.xml.core.Support,org.simpleframework.xml.DefaultType)
org.jaudiotagger.tag.id3.valuepair.StandardIPLSKey: StandardIPLSKey(java.lang.String,int,java.lang.String)
com.caij.puremusic.drive.model.PlexSectionsResponse$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.caij.puremusic.drive.model.AlbumResponse: int hashCode()
com.thegrizzlylabs.sardineandroid.report.SardineReport: java.lang.Object fromMultistatus(com.thegrizzlylabs.sardineandroid.model.Multistatus)
org.simpleframework.xml.transform.AtomicLongTransform: java.util.concurrent.atomic.AtomicLong read(java.lang.String)
com.google.common.hash.BloomFilterStrategies$2: long lowerEight(byte[])
org.simpleframework.xml.core.AnnotationHandler: boolean equals(java.lang.Object,java.lang.Object[])
com.umeng.analytics.process.UMProcessDBDatasSender: void removeCacheData(java.lang.Object)
com.afollestad.materialdialogs.color.view.PreviewFrameView$onHexChanged$1: PreviewFrameView$onHexChanged$1()
org.jaudiotagger.tag.id3.ID3v24Tag: ID3v24Tag(java.nio.ByteBuffer)
org.jaudiotagger.tag.flac.FlacTag: java.lang.String getFirst(org.jaudiotagger.tag.FieldKey)
com.thegrizzlylabs.sardineandroid.model.Propertybehavior: void setKeepalive(com.thegrizzlylabs.sardineandroid.model.Keepalive)
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
kotlin.KotlinNothingValueException: KotlinNothingValueException()
org.simpleframework.xml.core.StructureBuilder: org.simpleframework.xml.core.Model create(org.simpleframework.xml.core.Expression)
org.simpleframework.xml.Serializer: java.lang.Object read(java.lang.Class,java.lang.String,boolean)
com.caij.puremusic.drive.model.JellyfinLoginResponse$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.simpleframework.xml.core.Persister: Persister(org.simpleframework.xml.strategy.Strategy,org.simpleframework.xml.filter.Filter,org.simpleframework.xml.transform.Matcher)
org.jaudiotagger.tag.datatype.PartOfSet$PartOfSetValue: PartOfSet$PartOfSetValue(java.lang.Integer,java.lang.Integer)
com.tencent.bugly.proguard.ab: boolean e(android.content.Context)
com.caij.puremusic.db.model.ServerArtistCoverQueries$GetByIdQuery$execute$1: java.lang.Object invoke(java.lang.Object)
com.umeng.commonsdk.framework.UMWorkDispatch: void delayProcess()
org.jaudiotagger.tag.id3.AbstractID3Tag: AbstractID3Tag()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
com.caij.puremusic.drive.model.OneDriveItem: com.caij.puremusic.drive.model.ParentReference component9()
me.tankery.lib.circularseekbar.CircularSeekBar: int getCircleProgressColor()
com.caij.puremusic.drive.model.EmbyAlbumsResponse: void write$Self(com.caij.puremusic.drive.model.EmbyAlbumsResponse,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyAUT: FieldFrameBodyAUT(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
com.caij.puremusic.db.model.ArtistQueries: void clear()
code.name.monkey.appthemehelper.common.prefs.supportv7.ATEPreference: ATEPreference(android.content.Context,android.util.AttributeSet)
com.umeng.commonsdk.framework.a: void a(com.umeng.commonsdk.framework.UMSenderStateNotify)
org.jaudiotagger.tag.id3.framebody.FrameBodyTRCK: FrameBodyTRCK(byte,java.lang.Integer,java.lang.Integer)
org.simpleframework.xml.stream.OutputStack$Sequence: org.simpleframework.xml.stream.OutputNode next()
org.jaudiotagger.tag.id3.AbstractID3v2Tag$1: void remove()
org.simpleframework.xml.stream.PullReader: org.simpleframework.xml.stream.PullReader$Start build(org.simpleframework.xml.stream.PullReader$Start)
org.jaudiotagger.audio.generic.Utils: java.lang.String getMinBaseFilenameAllowedForTempFile(java.io.File)
org.jaudiotagger.tag.TagOptionSingleton: void setOriginalSavedAfterAdjustingID3v2Padding(boolean)
io.ktor.util.date.Month: io.ktor.util.date.Month[] $values()
com.tencent.bugly.crashreport.CrashReport: void putSdkData(android.content.Context,java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setStartIconTintList(android.content.res.ColorStateList)
com.umeng.commonsdk.framework.UMEnvelopeBuild: boolean isReadyBuild(android.content.Context,com.umeng.commonsdk.framework.UMLogDataProtocol$UMBusinessType)
com.caij.puremusic.drive.model.FMediaContainer: java.lang.String getTitle1()
org.simpleframework.xml.core.StructureBuilder: void commit(java.lang.Class)
com.tencent.bugly.proguard.l: l(int)
com.thegrizzlylabs.sardineandroid.model.Ace: Ace()
com.caij.puremusic.db.model.SongQueries$allSongs$2: com.caij.puremusic.db.model.Song invoke(long,java.lang.String,int,int,long,java.lang.String,java.lang.String,long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,long,long)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getChild(android.graphics.drawable.DrawableContainer$DrawableContainerState,int)
org.jaudiotagger.tag.id3.valuepair.ID3NumberTotalFields: boolean isTotal(org.jaudiotagger.tag.FieldKey)
org.simpleframework.xml.stream.InputNode: org.simpleframework.xml.stream.InputNode getNext()
com.caij.puremusic.db.model.ServerLyricsQueries$insert$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.umeng.commonsdk.framework.UMWorkDispatch: void sendEventInternal(android.content.Context,int,int,com.umeng.commonsdk.framework.UMLogDataProtocol,java.lang.Object,long)
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessWebview$Resp: int getType()
com.caij.puremusic.db.model.AlbumQueries: app.cash.sqldelight.Query searchAlbumsByName(java.lang.String,kotlin.jvm.functions.Function11)
com.caij.puremusic.views.NumberRollView: NumberRollView(android.content.Context,android.util.AttributeSet)
com.tencent.bugly.proguard.l: void a(float[],int)
org.simpleframework.xml.stream.InputAttribute: InputAttribute(org.simpleframework.xml.stream.InputNode,org.simpleframework.xml.stream.Attribute)
org.simpleframework.xml.core.ElementParameter$Contact: ElementParameter$Contact(org.simpleframework.xml.Element,java.lang.reflect.Constructor,int)
com.thegrizzlylabs.sardineandroid.model.SyncCollection: void setProp(com.thegrizzlylabs.sardineandroid.model.Prop)
org.jcodec.containers.mp4.boxes.SampleSizesBox: int estimateSize()
org.simpleframework.xml.util.WeakCache: java.lang.Object take(java.lang.Object)
com.caij.puremusic.drive.model.PlexArtistsResponse$Companion: kotlinx.serialization.KSerializer serializer()
com.caij.puremusic.drive.model.FMediaContainer: com.caij.puremusic.drive.model.FMediaContainer copy$default(com.caij.puremusic.drive.model.FMediaContainer,int,java.lang.String,java.util.List,int,java.lang.Object)
com.afollestad.materialdialogs.internal.main.DialogLayout: void setDebugMode(boolean)
com.tencent.mm.opensdk.modelmsg.WXVideoFileObject: int getFileSize(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
com.umeng.analytics.pro.ad$b: java.lang.String a()
com.tencent.bugly.proguard.ac: com.tencent.bugly.crashreport.common.strategy.StrategyBean c()
org.simpleframework.xml.core.PrimitiveList: boolean validate(org.simpleframework.xml.stream.InputNode,java.lang.Class)
org.jaudiotagger.audio.asf.io.WriteableChunk: long getCurrentAsfChunkSize()
com.google.android.material.textfield.TextInputLayout: void setPrefixTextColor(android.content.res.ColorStateList)
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: FrameBodyTDRC(org.jaudiotagger.tag.id3.framebody.FrameBodyTDAT)
com.caij.puremusic.drive.model.AlbumResponse$Companion: AlbumResponse$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: java.lang.Object[] getUserObjectPath()
org.simpleframework.xml.stream.Formatter: void escape(char)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$PathBetweenNodesEnumeration: org.jaudiotagger.utils.tree.TreeNode nextElement()
org.simpleframework.xml.stream.NodeWriter: void writeEnd(org.simpleframework.xml.stream.OutputNode)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgram$Resp: WXPreloadMiniProgram$Resp()
com.umeng.commonsdk.UMConfigure: java.lang.Object getDecInstanceObject(java.lang.Class)
org.simpleframework.xml.stream.NodeBuilder: org.simpleframework.xml.stream.InputNode read(java.io.InputStream)
com.umeng.commonsdk.debug.UMRTLog: void v(java.lang.String,java.lang.String)
com.caij.puremusic.network.model.LastFmArtist: LastFmArtist()
org.jcodec.containers.mp4.boxes.EsdsBox$Descriptor: void write(java.nio.ByteBuffer)
org.simpleframework.xml.core.DetailExtractor: org.simpleframework.xml.core.ContactList getMethods(java.lang.Class)
com.alipay.android.phone.mrpc.core.u: byte[] b()
com.google.android.material.bottomsheet.BottomSheetBehavior: int calculatePeekHeight()
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
org.jaudiotagger.tag.id3.ID3Tags: java.lang.String convertFrameID24To23(java.lang.String)
com.alipay.android.app.IAlixPay: void registerCallback(com.alipay.android.app.IRemoteServiceCallback)
org.simpleframework.xml.core.ParameterContact: java.lang.Class[] getDependents()
com.caij.puremusic.db.model.HistoryEntity: HistoryEntity(long,long)
com.google.android.material.button.MaterialButton: int getTextLayoutWidth()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void loadFrameIntoSpecifiedMap(java.util.HashMap,java.lang.String,org.jaudiotagger.tag.id3.AbstractID3v2Frame)
org.jcodec.containers.mp4.boxes.NodeBox: org.jcodec.containers.mp4.boxes.Box[] findAllPath(org.jcodec.containers.mp4.boxes.Box,java.lang.Class,java.lang.String[])
com.google.android.material.navigation.NavigationBarView: void setItemActiveIndicatorShapeAppearance(com.google.android.material.shape.ShapeAppearanceModel)
com.google.common.io.Files$FilePredicate$2: boolean apply(java.lang.Object)
org.simpleframework.xml.core.ClassInstantiator: boolean isDefault()
androidx.constraintlayout.widget.Barrier: int getMargin()
org.simpleframework.xml.core.ElementListUnionParameter: java.lang.String toString()
org.simpleframework.xml.stream.InputAttribute: java.lang.String getValue()
org.jaudiotagger.audio.asf.data.ContainerType: boolean isStreamNumberEnabled()
com.tencent.bugly.proguard.as: void b(com.tencent.bugly.crashreport.crash.CrashDetailBean,java.util.List)
com.caij.puremusic.drive.model.JellyfinArtistResponse: java.util.List component1()
org.jaudiotagger.tag.flac.FlacTag: boolean hasField(org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey)
com.tencent.bugly.proguard.ac$1: ac$1(com.tencent.bugly.proguard.ac)
com.umeng.umzid.a$a: boolean verify(java.lang.String,javax.net.ssl.SSLSession)
com.caij.puremusic.model.AbsCustomPlaylist: AbsCustomPlaylist(long,java.lang.String)
org.jcodec.containers.mp4.boxes.NodeBox: void doWrite(java.nio.ByteBuffer)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
org.jaudiotagger.tag.id3.ID3v24PreferredFrameOrderComparator: ID3v24PreferredFrameOrderComparator()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.umeng.analytics.pro.cg: int a(byte[],int,int)
org.jaudiotagger.audio.wav.WavFileReader: org.jaudiotagger.tag.Tag getTag(java.nio.channels.FileChannel,java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.exoplayer2.ExoPlayerImpl$Api31: com.google.android.exoplayer2.analytics.PlayerId registerMediaMetricsListener(android.content.Context,com.google.android.exoplayer2.ExoPlayerImpl,boolean)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getOrCreateOutlinedDropDownMenuBackground()
org.jaudiotagger.audio.aiff.AiffTagWriter: org.jaudiotagger.audio.iff.ChunkHeader seekToStartOfMetadata(java.nio.channels.FileChannel,org.jaudiotagger.tag.aiff.AiffTag,java.lang.String)
com.caij.puremusic.fragments.about.AboutFragment$onViewCreated$1$1: AboutFragment$onViewCreated$1$1()
org.jaudiotagger.tag.id3.ID3v23Frame$EncodingFlags: void setGrouping()
com.thegrizzlylabs.sardineandroid.model.Lockinfo: Lockinfo()
androidx.appcompat.widget.AppCompatButton: void setFilters(android.text.InputFilter[])
org.jaudiotagger.tag.datatype.SynchronisedTempoCodeList: org.jaudiotagger.tag.datatype.SynchronisedTempoCode createListElement()
com.caij.puremusic.db.model.SongQueries$songsByInfo$1: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.db.model.SongQueries$getAlbumSongCount$1: java.lang.Long invoke(app.cash.sqldelight.db.SqlCursor)
com.umeng.analytics.pro.bn: void e()
com.caij.puremusic.db.model.AlbumQueries$albums$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
com.caij.puremusic.drive.model.AlbumItem$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.google.android.material.bottomsheet.BottomSheetBehavior: void removeBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback)
com.caij.puremusic.db.model.ServerSongCoverQueries$getById$1: java.lang.Object invoke(java.lang.Object)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: java.lang.CharSequence getErrorMessage(android.media.session.PlaybackState)
com.caij.puremusic.drive.model.Response: void setPropstat(java.util.List)
com.google.common.reflect.TypeToken$TypeFilter: com.google.common.reflect.TypeToken$TypeFilter valueOf(java.lang.String)
com.tencent.bugly.BuglyStrategy: boolean isUploadSpotCrash()
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessView$Resp: WXOpenBusinessView$Resp()
org.simpleframework.xml.core.ModelAssembler: void registerElements(org.simpleframework.xml.core.Model,org.simpleframework.xml.core.Expression)
com.caij.puremusic.network.model.ArtistWrapper: java.util.List getItems()
org.jcodec.containers.mp4.boxes.TrunBox: int flagsGetSamplePaddingValue(int)
org.jaudiotagger.audio.asf.data.EncryptionChunk: void addString(java.lang.String)
org.simpleframework.xml.stream.OutputNodeMap: org.simpleframework.xml.stream.Node put(java.lang.String,java.lang.String)
com.thegrizzlylabs.sardineandroid.DavAcl: DavAcl(com.thegrizzlylabs.sardineandroid.model.Response)
com.tencent.bugly.proguard.e: void c(java.lang.String)
com.google.common.base.Predicates$ObjectPredicate$3: boolean apply(java.lang.Object)
org.simpleframework.xml.stream.InputElement: InputElement(org.simpleframework.xml.stream.InputNode,org.simpleframework.xml.stream.NodeReader,org.simpleframework.xml.stream.EventNode)
com.caij.puremusic.drive.model.AlbumSubsonicResponse: java.lang.String getVersion()
com.caij.puremusic.drive.model.AlbumArtist: void write$Self(com.caij.puremusic.drive.model.AlbumArtist,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.tencent.bugly.proguard.s: void a(com.tencent.bugly.crashreport.common.strategy.StrategyBean,boolean)
com.tencent.bugly.proguard.i: void a(java.lang.String)
com.tencent.bugly.proguard.s: long c(long)
com.caij.puremusic.db.model.ServerSongCoverQueries$insert$2: java.lang.Object invoke(java.lang.Object)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
org.simpleframework.xml.Default: boolean required()
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine$AuthenticationInterceptor: OkHttpSardine$AuthenticationInterceptor(com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine,java.lang.String,java.lang.String)
com.caij.puremusic.db.model.ServerSongCoverQueries$deleteSongBySource$2: java.lang.Object invoke(java.lang.Object)
com.google.android.material.navigation.NavigationBarView: void setItemIconSizeRes(int)
org.jaudiotagger.audio.asf.data.ContentDescription: boolean isAddSupported(org.jaudiotagger.audio.asf.data.MetadataDescriptor)
org.jaudiotagger.tag.mp4.field.Mp4DiscNoField: void setDiscTotal(int)
com.tencent.mm.opensdk.modelbiz.AddCardToWXCardPackage$Resp: void toBundle(android.os.Bundle)
org.jaudiotagger.audio.flac.FlacStreamReader: FlacStreamReader(java.nio.channels.FileChannel,java.lang.String)
com.caij.puremusic.db.model.ArtistQueries$SearchArtistByNameQuery$execute$1: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.model.Data: java.lang.String getPictureXl()
com.umeng.analytics.pro.bo: void b(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyTORY: FrameBodyTORY(org.jaudiotagger.tag.id3.framebody.FrameBodyTDOR)
com.caij.puremusic.db.model.PlaylistEntityQueries$playlists$1: PlaylistEntityQueries$playlists$1(kotlin.jvm.functions.Function2)
org.simpleframework.xml.core.FieldScanner: void process(java.lang.reflect.Field,java.lang.annotation.Annotation,java.lang.annotation.Annotation[])
com.caij.puremusic.drive.model.MediaInfoWrapper: java.util.List component4()
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getMacByJavaAPI()
org.jaudiotagger.tag.id3.framebody.FrameBodyRBUF: FrameBodyRBUF(org.jaudiotagger.tag.id3.framebody.FrameBodyRBUF)
com.thegrizzlylabs.sardineandroid.model.Locktoken: Locktoken()
org.simpleframework.xml.core.Comparer: boolean isIgnore(java.lang.reflect.Method)
com.google.android.material.navigation.NavigationBarItemView: void setItemRippleColor(android.content.res.ColorStateList)
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: FrameBodyTDRC(org.jaudiotagger.tag.id3.framebody.FrameBodyTRDA)
com.caij.puremusic.db.model.ArtistQueries$deleteArtistById$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.tag.images.AndroidArtwork: int getWidth()
android.support.v4.media.MediaDescriptionCompat$Api21Impl: void setMediaId(android.media.MediaDescription$Builder,java.lang.String)
com.caij.puremusic.db.model.SongQueries$songsByAlbumId$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
javax.xml.namespace.QName: QName(java.lang.String)
org.jaudiotagger.tag.flac.FlacTag: org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag getVorbisCommentTag()
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean isHideable()
com.umeng.analytics.pro.ao: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)
androidx.core.app.ActivityCompat$Api23Impl: void requestPermissions(android.app.Activity,java.lang.String[],int)
org.simpleframework.xml.core.OverrideValue: void setValue(java.lang.Object)
com.caij.puremusic.db.model.PlayCountEntityQueries$CheckSongExistInPlayCountQuery: long getSongId()
org.jaudiotagger.audio.generic.Utils: java.lang.Class[] classes(java.lang.Object[])
com.tencent.bugly.proguard.aa: java.util.Map A()
org.simpleframework.xml.stream.InputElement: java.lang.String toString()
org.jaudiotagger.audio.generic.AudioFileModificationAdapter: void fileWillBeModified(org.jaudiotagger.audio.AudioFile,boolean)
com.umeng.commonsdk.utils.UMUtils: boolean checkPermission(android.content.Context,java.lang.String)
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query songsByAlbumIdCount(long)
org.jaudiotagger.audio.opus.OpusFileReader: org.jaudiotagger.tag.Tag getTag(java.io.RandomAccessFile)
com.umeng.analytics.Gender: int value()
com.caij.puremusic.lyrics.SimpleLrcView: void setNormalTextColor(int)
com.caij.puremusic.model.DeezerResponse: java.lang.String toString()
com.google.android.datatransport.cct.internal.QosTier: int getNumber()
com.caij.puremusic.db.model.PlaybackSongQueries$getPlaybacksByType$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: OkHttpSardine(okhttp3.OkHttpClient)
org.jaudiotagger.tag.flac.FlacTag: void setField(java.lang.String,java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyTCMP: FrameBodyTCMP(java.nio.ByteBuffer,int)
com.google.android.material.search.SearchView$TransitionState: com.google.android.material.search.SearchView$TransitionState[] values()
org.jcodec.containers.mp4.boxes.TrackHeaderBox: void writeVolume(java.nio.ByteBuffer)
org.simpleframework.xml.core.TemplateParameter: TemplateParameter()
androidx.constraintlayout.widget.ConstraintLayout: int getOptimizationLevel()
com.tencent.bugly.proguard.ae: byte[] a(com.tencent.bugly.proguard.m)
org.simpleframework.xml.stream.CamelCaseStyle: void setAttribute(java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setErrorContentDescription(java.lang.CharSequence)
com.google.android.material.button.MaterialButton: void setRippleColorResource(int)
com.umeng.commonsdk.statistics.common.DeviceTypeEnum: com.umeng.commonsdk.statistics.common.DeviceTypeEnum valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.Fragment: android.view.View requireView()
com.caij.puremusic.drive.model.Directory$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.caij.puremusic.db.model.SongEntity: long component1()
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setShadowResourceLeft(int)
androidx.constraintlayout.widget.Guideline: void setGuidelineEnd(int)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)
kotlin.collections.State: kotlin.collections.State[] values()
androidx.appcompat.widget.AppCompatCheckedTextView: void setAllCaps(boolean)
org.simpleframework.xml.stream.Format: Format()
org.simpleframework.xml.core.Composite: java.lang.Object read(org.simpleframework.xml.stream.InputNode,org.simpleframework.xml.core.Instance,java.lang.Class)
org.simpleframework.xml.core.ClassScanner: org.simpleframework.xml.core.Function getFunction(java.lang.reflect.Method)
org.jaudiotagger.tag.asf.AsfTag: java.lang.String getFirstRating()
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: void resendSigquit()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: int readNoOfChannels()
com.umeng.commonsdk.UMConfigureImpl: int b()
org.simpleframework.xml.core.Traverser: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object)
com.caij.puremusic.db.model.Song: java.lang.String component2()
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: int getBitrateMaximal()
com.tencent.bugly.crashreport.CrashReport: java.lang.String getDeviceID(android.content.Context)
com.caij.puremusic.db.model.Album: int getYear()
org.simpleframework.xml.core.Variable: java.lang.Object getKey()
org.simpleframework.xml.core.Variable: java.lang.annotation.Annotation getAnnotation()
com.caij.puremusic.drive.model.BaiduDriveItem$Companion: BaiduDriveItem$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.umeng.analytics.pro.cb: cb()
org.jaudiotagger.tag.id3.valuepair.ReceivedAsTypes: org.jaudiotagger.tag.id3.valuepair.ReceivedAsTypes getInstanceOf()
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
org.simpleframework.xml.strategy.WriteGraph: WriteGraph(org.simpleframework.xml.strategy.Contract)
com.caij.puremusic.drive.model.DropboxDriveItem$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.DropboxDriveItem)
io.ktor.websocket.FrameType: io.ktor.websocket.FrameType[] access$getByOpcodeArray$cp()
com.umeng.analytics.vshelper.b: void c()
org.simpleframework.xml.core.Support: org.simpleframework.xml.core.Detail getDetail(java.lang.Class)
org.jcodec.containers.mp4.boxes.TimecodeSampleEntry: boolean isDropFrame()
org.simpleframework.xml.core.Reflector: java.lang.Class[] getDependents(java.lang.reflect.Field)
org.jaudiotagger.utils.tree.DefaultTreeModel: boolean asksAllowsChildren()
com.tencent.mm.opensdk.modelbiz.OpenWebview: OpenWebview()
com.tencent.bugly.proguard.w: boolean b(com.tencent.bugly.proguard.y)
org.jaudiotagger.audio.aiff.chunk.AiffChunkType: org.jaudiotagger.audio.aiff.chunk.AiffChunkType[] values()
com.umeng.analytics.pro.bn: void a(boolean)
com.afollestad.materialdialogs.internal.main.DialogLayout: boolean getDebugMode()
org.simpleframework.xml.stream.InputElement: boolean isElement()
org.simpleframework.xml.stream.InputAttribute: org.simpleframework.xml.stream.InputNode getAttribute(java.lang.String)
com.umeng.commonsdk.statistics.common.MLog: void v(java.util.Locale,java.lang.String,java.lang.Object[])
org.simpleframework.xml.core.Structure: Structure(org.simpleframework.xml.core.Instantiator,org.simpleframework.xml.core.Model,org.simpleframework.xml.core.Label,org.simpleframework.xml.core.Label,boolean)
org.simpleframework.xml.util.LimitedCache: LimitedCache()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyIMG: void readString(java.lang.String)
org.simpleframework.xml.core.MethodDetail: java.lang.annotation.Annotation[] getAnnotations()
org.jaudiotagger.audio.wav.WavSaveOrder: org.jaudiotagger.audio.wav.WavSaveOrder valueOf(java.lang.String)
org.simpleframework.xml.stream.NodeReader: void skipElement(org.simpleframework.xml.stream.InputNode)
com.caij.puremusic.drive.model.PlayListItem$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.google.android.material.card.MaterialCardView: int getCheckedIconMargin()
com.caij.puremusic.drive.model.SubsonicPlaylist: int component6()
org.repackage.com.vivo.identifier.IdentifierIdClient: java.lang.Object f()
com.umeng.analytics.pro.bj: bj(byte,com.umeng.analytics.pro.bi)
org.jaudiotagger.audio.SupportedFileFormat$4: org.jaudiotagger.tag.Tag createDefaultTag()
com.tencent.mm.opensdk.modelbiz.WXChannelOpenProfile$Req: void fromBundle(android.os.Bundle)
org.jcodec.containers.mp4.boxes.WaveExtension: java.lang.String fourcc()
org.simpleframework.xml.core.ElementParameter: java.lang.String getPath()
com.caij.puremusic.drive.model.ADriveFileResponse: java.util.List component2()
org.jaudiotagger.audio.dsf.DsfFileWriter: java.nio.ByteBuffer convert(org.jaudiotagger.tag.id3.AbstractID3v2Tag)
com.caij.puremusic.db.model.SongEntityQueries$isSongExistsInPlaylist$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyTCON: java.lang.String checkBracketed(java.lang.String)
com.caij.puremusic.views.TopAppBarLayout$1$1: TopAppBarLayout$1$1()
org.jaudiotagger.tag.datatype.StringFixedLength: StringFixedLength(org.jaudiotagger.tag.datatype.StringFixedLength)
org.simpleframework.xml.core.SessionManager: org.simpleframework.xml.core.Session open()
com.google.android.material.bottomsheet.BottomSheetBehavior: int access$1500(com.google.android.material.bottomsheet.BottomSheetBehavior)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior()
com.tencent.mm.opensdk.modelmsg.WXFileObject: void setContentLengthLimit(int)
com.umeng.commonsdk.statistics.common.MLog: MLog()
code.name.monkey.appthemehelper.common.prefs.BorderCircleView: BorderCircleView(android.content.Context,android.util.AttributeSet)
org.simpleframework.xml.core.GroupExtractor: GroupExtractor(org.simpleframework.xml.core.Contact,java.lang.annotation.Annotation,org.simpleframework.xml.stream.Format)
com.google.android.material.progressindicator.BaseProgressIndicator: void setTrackThickness(int)
com.umeng.analytics.pro.ao: int a()
org.jaudiotagger.audio.asf.io.AsfExtHeaderModifier: org.jaudiotagger.audio.asf.io.ModificationResult modify(org.jaudiotagger.audio.asf.data.GUID,java.io.InputStream,java.io.OutputStream)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)
com.tencent.bugly.proguard.q: boolean appendLogToNative(java.lang.String,java.lang.String,java.lang.String)
com.google.android.material.button.MaterialButton: void setToggleCheckedStateOnClick(boolean)
androidx.fragment.app.Fragment: boolean isRemoving()
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgram$Resp: void toBundle(android.os.Bundle)
org.repackage.com.zui.deviceidservice.IDeviceidInterface$Stub$Proxy: java.lang.String a()
org.jaudiotagger.tag.id3.Id3FieldType: org.jaudiotagger.tag.id3.Id3FieldType[] values()
org.simpleframework.xml.stream.NodeReader: java.lang.String readValue(org.simpleframework.xml.stream.InputNode)
com.caij.puremusic.model.Contributor: Contributor(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTagField: java.nio.charset.Charset getEncoding()
com.google.android.material.bottomsheet.BottomSheetDialog: BottomSheetDialog(android.content.Context)
com.caij.puremusic.drive.model.GoogleDriveFile$$serializer: GoogleDriveFile$$serializer()
com.google.android.material.navigation.NavigationBarView: int getItemActiveIndicatorMarginHorizontal()
org.simpleframework.xml.core.ExtractorFactory$ElementExtractor: java.lang.annotation.Annotation[] getAnnotations()
org.simpleframework.xml.util.Resolver: java.util.Iterator iterator()
org.simpleframework.xml.core.ElementListParameter: boolean isRequired()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onRequestChildRectangleOnScreen(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean)
org.jaudiotagger.tag.datatype.NumberFixedLength: boolean equals(java.lang.Object)
com.caij.puremusic.db.model.Song: long getDateAdded()
androidx.customview.view.AbsSavedState: AbsSavedState()
com.google.android.material.button.MaterialButton: void setTextAlignment(int)
com.umeng.analytics.pro.bp: java.lang.String toString()
com.umeng.commonsdk.statistics.proto.c$a: void b(com.umeng.analytics.pro.bu,com.umeng.commonsdk.statistics.proto.c)
org.jaudiotagger.audio.asf.data.EncryptionChunk: java.lang.String getKeyID()
org.simpleframework.xml.core.Model: void registerAttribute(org.simpleframework.xml.core.Label)
org.simpleframework.xml.stream.Stack: java.lang.Object top()
org.jcodec.containers.mp4.BoxFactory: BoxFactory(org.jcodec.containers.mp4.Boxes)
org.xmlpull.v1.XmlPullParser: int getEventType()
org.jaudiotagger.tag.reference.PictureTypes: PictureTypes()
org.jaudiotagger.tag.id3.ID3v24Frames: ID3v24Frames()
com.thegrizzlylabs.sardineandroid.model.Self: Self()
org.jaudiotagger.tag.datatype.Pair: java.lang.Object getValue()
org.jaudiotagger.audio.asf.util.Utils: long readUINT32(java.io.InputStream)
org.jaudiotagger.tag.wav.WavTag: void syncToInfoFromId3IfEmpty()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void mergeDuplicateFrames(org.jaudiotagger.tag.id3.AbstractID3v2Frame,java.util.List)
com.google.android.material.internal.VisibilityAwareImageButton: VisibilityAwareImageButton(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.drive.model.SubsonicSearchListResponse$$serializer: SubsonicSearchListResponse$$serializer()
com.tencent.mmkv.MMKV: int ashmemMetaFD()
com.umeng.analytics.pro.bn: short v()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
org.jaudiotagger.audio.aiff.chunk.NameChunk: boolean readChunk()
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
com.umeng.analytics.pro.ai$a: ai$a()
org.jcodec.containers.mp4.boxes.GenericMediaInfoBox: GenericMediaInfoBox(org.jcodec.containers.mp4.boxes.Header)
androidx.core.widget.TextViewCompat$Api16Impl: boolean getIncludeFontPadding(android.widget.TextView)
org.jaudiotagger.tag.asf.AsfTag: boolean isValidField(org.jaudiotagger.tag.TagField)
com.umeng.analytics.pro.bn: java.lang.String b(int)
org.simpleframework.xml.core.ModelSection: org.simpleframework.xml.core.Label getElement(java.lang.String)
com.alipay.android.phone.mrpc.core.q: long a(java.lang.String[])
com.caij.puremusic.drive.model.Auth2Token: java.lang.String component5()
com.caij.puremusic.db.model.PlaylistEntityQueries$checkPlaylistExists$1: PlaylistEntityQueries$checkPlaylistExists$1()
com.caij.puremusic.drive.model.Type$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.Type)
com.umeng.analytics.pro.bn: void a(java.lang.String)
com.tencent.mm.opensdk.diffdev.OAuthErrCode: com.tencent.mm.opensdk.diffdev.OAuthErrCode valueOf(java.lang.String)
com.caij.puremusic.db.model.FolderQueries$SelectByIdQuery$execute$1: FolderQueries$SelectByIdQuery$execute$1(com.caij.puremusic.db.model.FolderQueries$SelectByIdQuery)
org.jaudiotagger.tag.mp4.field.Mp4DiscNoField: java.lang.Short getDiscNo()
org.jaudiotagger.tag.id3.framebody.FrameBodyTOAL: FrameBodyTOAL(byte,java.lang.String)
com.umeng.analytics.pro.an$b: com.umeng.analytics.pro.an$a a()
org.jcodec.containers.mp4.boxes.NameBox: void doWrite(java.nio.ByteBuffer)
com.google.android.material.card.MaterialCardView: void setCheckedIconMarginResource(int)
com.caij.puremusic.drive.model.WebDAVToken: void write$Self(com.caij.puremusic.drive.model.WebDAVToken,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.caij.puremusic.drive.model.ParentReference$Companion: kotlinx.serialization.KSerializer serializer()
com.google.common.hash.Hashing$ChecksumType$2: Hashing$ChecksumType$2(java.lang.String,int,java.lang.String)
org.jaudiotagger.tag.TagOptionSingleton: void setVorbisAlbumArtistReadOptions(org.jaudiotagger.tag.vorbiscomment.VorbisAlbumArtistReadOptions)
org.simpleframework.xml.core.FieldScanner: void process(java.lang.reflect.Field,java.lang.Class,java.lang.annotation.Annotation[])
com.umeng.commonsdk.stateless.b: void g()
com.umeng.analytics.pro.u: void c(android.content.Context,java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSOC: FrameBodyTSOC()
com.umeng.commonsdk.internal.utils.k: java.lang.String a(android.content.Context)
com.umeng.analytics.pro.u: void a(android.content.Context,java.lang.Object)
com.umeng.commonsdk.statistics.proto.b$e: com.umeng.commonsdk.statistics.proto.b$e b(int)
com.caij.puremusic.db.model.SongEntityQueries$isSongExistsInPlaylist$2: SongEntityQueries$isSongExistsInPlaylist$2()
com.caij.puremusic.db.model.AlbumQueries$searchAlbumsByName$1: AlbumQueries$searchAlbumsByName$1(kotlin.jvm.functions.Function11,com.caij.puremusic.db.model.AlbumQueries)
org.jcodec.containers.mp4.boxes.ColorExtension: short getTransferFunctionIndex()
org.jcodec.containers.mp4.boxes.EndianBox: java.nio.ByteOrder getEndian()
org.simpleframework.xml.core.ElementListUnionLabel: org.simpleframework.xml.core.Converter getConverter(org.simpleframework.xml.core.Context)
com.tencent.mm.opensdk.modelmsg.WXEmojiSharedObject: void unserialize(android.os.Bundle)
com.umeng.commonsdk.statistics.common.MLog: void e(java.lang.String,java.lang.String,java.lang.Throwable)
com.google.android.material.progressindicator.BaseProgressIndicator: android.graphics.drawable.Drawable getCurrentDrawable()
org.jaudiotagger.tag.id3.AggregatedFrame: void isBinary(boolean)
com.umeng.commonsdk.statistics.proto.e$e: e$e(java.lang.String,int,short,java.lang.String)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: int getDuplicateBytes()
org.jaudiotagger.tag.id3.framebody.FrameBodyTSST: FrameBodyTSST(byte,java.lang.String)
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox$Factory: org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox$Factory defaultSampleDuration(long)
com.caij.puremusic.db.model.AlbumQueries$deleteAlbumById$1: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.drive.model.EmbyFoldersResponse$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
org.simpleframework.xml.core.AttributeLabel: java.lang.annotation.Annotation getAnnotation()
com.tencent.mm.opensdk.openapi.MMSharedPreferences$REditor: MMSharedPreferences$REditor(android.content.ContentResolver)
com.tencent.bugly.proguard.ap: byte[] b(byte[])
com.caij.puremusic.drive.model.SubsonicPlaylist: java.lang.String component3()
org.jcodec.containers.mp4.boxes.TrunBox: int[] access$502(org.jcodec.containers.mp4.boxes.TrunBox,int[])
org.simpleframework.xml.strategy.TreeStrategy: java.lang.Class writeArray(java.lang.Class,java.lang.Object,org.simpleframework.xml.stream.NodeMap)
com.alipay.android.app.IRemoteServiceCallback: int getVersion()
com.caij.puremusic.drive.model.DropboxDriveItem: java.lang.String toString()
org.jaudiotagger.utils.tree.TreeModelEvent: java.lang.String toString()
org.jaudiotagger.tag.id3.framebody.FrameBodyTDTG: FrameBodyTDTG()
com.tencent.mm.opensdk.utils.b: boolean b(java.lang.String)
com.caij.puremusic.drive.model.Type$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyLYR: java.util.Iterator iterator()
kotlin.time.DurationUnit: kotlin.time.DurationUnit valueOf(java.lang.String)
com.caij.puremusic.drive.model.ImageTags$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
org.jaudiotagger.audio.real.RealChunk: boolean isPROP()
androidx.gridlayout.widget.GridLayout: android.util.Printer getPrinter()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: boolean isId3Tag(java.nio.channels.FileChannel)
com.alipay.apmobilesecuritysdk.c.a: com.alipay.sdk.m.c0.a b(android.content.Context,java.lang.String,java.lang.String,java.lang.String)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollY(android.view.accessibility.AccessibilityRecord)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void addField(org.jaudiotagger.tag.images.Artwork)
com.umeng.umzid.c: java.lang.String c(android.content.Context)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
com.umeng.commonsdk.statistics.internal.UMImprintPreProcessCallback: boolean onPreProcessImprintKey(java.lang.String,java.lang.String)
org.jaudiotagger.audio.flac.FlacStreamReader: boolean isId3v2Tag()
com.thegrizzlylabs.sardineandroid.model.Prop: java.lang.String getGetetag()
com.tencent.mm.opensdk.modelbiz.IWXChannelJumpInfo: boolean checkArgs()
org.jaudiotagger.audio.asf.io.ModificationResult: long getByteDifference()
com.google.android.material.bottomsheet.BottomSheetBehavior: void setSkipCollapsed(boolean)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyNumberTotal: void setTotal(java.lang.Integer)
org.simpleframework.xml.core.Variable: org.simpleframework.xml.strategy.Type getType(java.lang.Class)
com.umeng.commonsdk.statistics.idtracking.Envelope: com.umeng.commonsdk.statistics.idtracking.Envelope genEncryptEnvelope(android.content.Context,java.lang.String,byte[])
com.tencent.mm.opensdk.channel.a.a: byte[] a(java.lang.String,int)
com.tencent.bugly.proguard.ap: long b()
org.jaudiotagger.tag.images.StandardArtwork: void setLinked(boolean)
com.caij.puremusic.db.model.SongQueries$GetAlbumSongCountQuery: SongQueries$GetAlbumSongCountQuery(com.caij.puremusic.db.model.SongQueries,long,kotlin.jvm.functions.Function1)
com.google.gson.FieldNamingPolicy$3: java.lang.String translateName(java.lang.reflect.Field)
com.caij.puremusic.drive.model.ADriveFileResponse$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
org.simpleframework.xml.core.Composite: void readAttribute(org.simpleframework.xml.stream.InputNode,java.lang.Object,org.simpleframework.xml.core.Section,org.simpleframework.xml.core.LabelMap)
com.caij.puremusic.db.model.ServerSongCoverQueries$deleteById$2: void invoke(kotlin.jvm.functions.Function1)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
com.umeng.commonsdk.statistics.internal.StatTracer: void logSuccessfulRequest(boolean)
com.thegrizzlylabs.sardineandroid.model.Lockdiscovery: Lockdiscovery()
org.simpleframework.xml.core.ConstructorScanner: void scan(java.lang.reflect.Constructor)
com.tencent.bugly.proguard.w: android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)
com.caij.puremusic.drive.model.Media: int component1()
org.jaudiotagger.audio.opus.OpusVorbisTagReader: boolean isVorbisCommentHeader(byte[])
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgram$Resp: void fromBundle(android.os.Bundle)
com.caij.puremusic.db.model.ArtistQueries$SearchArtistByNameQuery: void addListener(app.cash.sqldelight.Query$Listener)
org.jaudiotagger.audio.asf.io.RandomAccessFileInputstream: RandomAccessFileInputstream(java.io.RandomAccessFile)
org.jaudiotagger.utils.PrimitiveUtils: PrimitiveUtils()
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$getById$2: DriveFileDownUrlInfoQueries$getById$2()
androidx.appcompat.app.AppLocalesMetadataHolderService$Api24Impl: int getDisabledComponentFlag()
org.simpleframework.xml.core.SetPart: java.lang.Class getDependent()
com.umeng.commonsdk.statistics.proto.b$d: com.umeng.analytics.pro.cc b()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
com.google.gson.LongSerializationPolicy$2: com.google.gson.JsonElement serialize(java.lang.Long)
org.simpleframework.xml.core.PrimitiveValue: java.lang.Object readAttribute(org.simpleframework.xml.stream.InputNode,java.lang.String)
com.thegrizzlylabs.sardineandroid.impl.handler.ResourcesResponseHandler: java.util.List handleResponse(okhttp3.Response)
com.umeng.analytics.pro.h: java.lang.String b(android.content.Context)
org.jaudiotagger.tag.id3.ID3v24Tag: void readFrames(java.nio.ByteBuffer,int)
org.jaudiotagger.tag.Tag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
com.google.android.material.slider.Slider: void setLabelFormatter(com.google.android.material.slider.LabelFormatter)
com.tencent.mm.opensdk.modelmsg.WXLiteAppObject: void unserialize(android.os.Bundle)
org.jaudiotagger.tag.flac.FlacTag: org.jaudiotagger.tag.TagField getFirstField(org.jaudiotagger.tag.FieldKey)
org.jaudiotagger.audio.exceptions.CannotWriteException: CannotWriteException(java.lang.String)
com.umeng.commonsdk.statistics.proto.e: com.umeng.commonsdk.statistics.proto.e b(java.lang.String)
androidx.appcompat.widget.SearchView: int getMaxWidth()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
com.umeng.commonsdk.statistics.b: org.json.JSONObject a(int,org.json.JSONObject)
com.caij.puremusic.network.model.LastFmTrack$Track: java.lang.String getName()
org.jaudiotagger.tag.id3.framebody.FrameBodyCTOC: java.lang.String getIdentifier()
org.jaudiotagger.tag.id3.framebody.FrameBodyTLAN: FrameBodyTLAN(byte,java.lang.String)
javax.xml.namespace.QName: QName(java.lang.String,java.lang.String)
com.umeng.commonsdk.statistics.proto.c: com.umeng.analytics.pro.bp p()
com.umeng.commonsdk.utils.UMUtils: java.lang.String getAppkey(android.content.Context)
com.google.common.io.Files$FilePredicate$2: boolean apply(java.io.File)
org.jaudiotagger.tag.wav.WavInfoTag: org.jaudiotagger.tag.TagField createCompilationField(boolean)
com.umeng.analytics.pro.bu: void a(double)
com.caij.puremusic.drive.model.ImageTags$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.ImageTags)
org.jaudiotagger.tag.id3.framebody.FrameBodyTPE1: FrameBodyTPE1(org.jaudiotagger.tag.id3.framebody.FrameBodyTPE1)
com.caij.puremusic.drive.model.PlexLoginResponse$$serializer: PlexLoginResponse$$serializer()
com.caij.puremusic.drive.model.AlbumItem: java.lang.String component7()
org.jaudiotagger.tag.datatype.AbstractDataType: void setValue(java.lang.Object)
org.jaudiotagger.tag.mp4.field.Mp4TrackField: void setTrackNo(int)
com.caij.puremusic.drive.model.DavProperties: java.lang.String getContentType()
org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile: EsdsBox$AudioProfile(java.lang.String,int,int,java.lang.String)
org.simpleframework.xml.convert.AnnotationStrategy: boolean isReference(org.simpleframework.xml.strategy.Value)
com.umeng.analytics.MobclickAgent: void onProfileSignIn(java.lang.String,java.lang.String)
com.afollestad.materialdialogs.internal.button.DialogActionButtonLayout: void setStackButtons$core(boolean)
org.jaudiotagger.tag.id3.framebody.FrameBodyPOSS: FrameBodyPOSS()
com.umeng.commonsdk.statistics.proto.Response: com.umeng.analytics.pro.bp access$500()
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$IWXSceneDataObject: void serialize(android.os.Bundle)
com.tencent.mm.opensdk.modelbiz.WXNontaxPay: WXNontaxPay()
org.jaudiotagger.audio.mp3.MP3FileWriter: MP3FileWriter()
com.umeng.commonsdk.statistics.common.a: java.lang.String a(android.content.Context)
com.caij.puremusic.db.model.PlaylistEntityQueries$searchPlaylistByName$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
org.simpleframework.xml.stream.NodeBuilder: org.simpleframework.xml.stream.OutputNode write(java.io.Writer)
com.caij.puremusic.db.model.ServerAudioFormatQueries$insert$1: java.lang.Object invoke(java.lang.Object)
org.simpleframework.xml.core.GroupExtractor$Registry: void registerElement(java.lang.Class,org.simpleframework.xml.core.Label)
com.caij.puremusic.drive.model.DropboxDriveFileResponse: void write$Self(com.caij.puremusic.drive.model.DropboxDriveFileResponse,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.umeng.commonsdk.service.UMGlobalContext: UMGlobalContext(com.umeng.commonsdk.service.UMGlobalContext$1)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyEAL: FieldFrameBodyEAL()
androidx.fragment.app.Fragment: java.lang.Object getReenterTransition()
com.caij.puremusic.drive.model.AlbumMediaContainer$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
com.caij.puremusic.db.model.SongEntityQueries$songsFromPlaylist$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
com.caij.puremusic.db.model.ServerSongCover: java.lang.String getId()
com.thegrizzlylabs.sardineandroid.DavResource: java.lang.String getContentType()
com.caij.puremusic.model.lyrics.AbsSynchronizedLyrics: java.lang.String getText()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: boolean isUnsynchronised()
com.google.android.material.bottomsheet.BottomSheetDialog: void setCanceledOnTouchOutside(boolean)
org.jaudiotagger.audio.ogg.util.OggPageHeader: boolean isContinuedPage()
org.jaudiotagger.tag.mp4.field.Mp4TagTextNumberField: void copyContent(org.jaudiotagger.tag.TagField)
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.google.android.material.chip.Chip: void setCloseIconSize(float)
org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX: void setupObjectList()
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
org.jaudiotagger.tag.datatype.PairedTextEncodedStringNullTerminated$ValuePairs: int getNumberOfPairs()
com.tencent.bugly.proguard.k: java.lang.Object a(java.lang.Object,int,boolean)
com.tencent.bugly.crashreport.CrashReport: java.lang.String getAppID()
org.jaudiotagger.tag.mp4.Mp4ContentTypeValue: int getId()
com.caij.puremusic.db.model.ServerLyricsQueries$GetByIdQuery: void addListener(app.cash.sqldelight.Query$Listener)
androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)
com.umeng.commonsdk.statistics.proto.a: void b(boolean)
org.simpleframework.xml.core.ElementLabel: java.lang.String toString()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.caij.puremusic.db.model.SongQueries$FirstSongByAlbumIdQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.jaudiotagger.tag.TagOptionSingleton: void setNumberMP3SyncFrame(int)
org.jaudiotagger.tag.id3.ID3v1TagField: java.lang.String toString()
org.simpleframework.xml.core.MethodName: MethodName(java.lang.reflect.Method,org.simpleframework.xml.core.MethodType,java.lang.String)
com.thegrizzlylabs.sardineandroid.model.Activelock: void setDepth(java.lang.String)
com.google.android.material.navigation.NavigationBarMenuView: com.google.android.material.shape.ShapeAppearanceModel getItemActiveIndicatorShapeAppearance()
com.thegrizzlylabs.sardineandroid.util.SardineUtil: javax.xml.namespace.QName createQNameWithCustomNamespace(java.lang.String)
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment requireParentFragment()
com.caij.puremusic.drive.model.AlbumMetadata: AlbumMetadata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.umeng.commonsdk.internal.c: c(android.content.Context)
com.caij.puremusic.drive.model.DropboxDriveItem: void getTag$annotations()
com.tencent.mm.opensdk.diffdev.a.a$a$a: a$a$a(com.tencent.mm.opensdk.diffdev.a.a$a)
com.caij.puremusic.db.model.SongEntityQueries$deleteSongFromPlaylist$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.caij.puremusic.drive.model.ADriveItem: java.lang.String component7()
org.jaudiotagger.tag.id3.ID3v1Tag: java.util.List getAlbum()
org.simpleframework.xml.core.Template: void ensureCapacity(int)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyETT: FieldFrameBodyETT(java.lang.String)
org.jaudiotagger.audio.aiff.AiffTagWriter: void deleteTagChunk(java.nio.channels.FileChannel,org.jaudiotagger.tag.aiff.AiffTag,org.jaudiotagger.audio.iff.ChunkHeader,java.lang.String)
org.jaudiotagger.tag.id3.ID3v1Tag: java.lang.String getFirstTrack()
com.caij.puremusic.drive.model.DriveFile: java.lang.String getUrl()
com.tencent.bugly.proguard.u: u(android.content.Context)
com.umeng.commonsdk.UMConfigure$2: UMConfigure$2(android.content.Context)
com.caij.puremusic.model.PlaylistWrapper: com.caij.puremusic.model.PlaylistWrapper copy$default(com.caij.puremusic.model.PlaylistWrapper,com.caij.puremusic.db.model.PlaylistEntity,int,com.caij.puremusic.db.model.Song,int,java.lang.Object)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.umeng.analytics.pro.bu: void b()
com.caij.puremusic.db.model.ServerAudioFormatQueries$deleteSongBySource$2: java.lang.Object invoke(java.lang.Object)
androidx.mediarouter.app.MediaRouteButton: void setRemoteIndicatorDrawable(android.graphics.drawable.Drawable)
org.jcodec.containers.mp4.boxes.SampleToChunkBox$SampleToChunkEntry: int getCount()
com.google.common.collect.Maps$EntryFunction$2: Maps$EntryFunction$2(java.lang.String,int)
org.simpleframework.xml.stream.NodeMap: org.simpleframework.xml.stream.Node put(java.lang.String,java.lang.String)
org.jaudiotagger.audio.asf.AsfFileReader: org.jaudiotagger.tag.asf.AsfTag getTag(org.jaudiotagger.audio.asf.data.AsfHeader)
org.simpleframework.xml.transform.TransformException: TransformException(java.lang.String,java.lang.Object[])
org.simpleframework.xml.core.LabelMap: java.lang.String[] getArray(java.util.Set)
org.jcodec.containers.mp4.boxes.ColorExtension: org.jcodec.containers.mp4.boxes.ColorExtension createColorExtension(short,short,short)
org.jaudiotagger.audio.mp3.MP3File: java.lang.String displayStructureAsXML()
com.caij.puremusic.db.model.ArtistQueries$ArtistByIdQuery: java.lang.String toString()
com.caij.puremusic.drive.model.SearchResult3: int hashCode()
org.jaudiotagger.audio.mp3.MP3AudioHeader: java.lang.Long getNoOfSamples()
org.jaudiotagger.tag.wav.WavInfoTag: WavInfoTag()
com.caij.puremusic.db.model.ServerSongCoverQueries$getById$1: ServerSongCoverQueries$getById$1(kotlin.jvm.functions.Function3)
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$Resp: void fromBundle(android.os.Bundle)
androidx.core.app.RemoteInput$Api29Impl: android.app.RemoteInput$Builder setEditChoicesBeforeSending(android.app.RemoteInput$Builder,int)
org.jaudiotagger.tag.id3.ID3v1Tag: java.lang.String getFirstGenre()
org.jaudiotagger.utils.tree.DefaultTreeModel: DefaultTreeModel(org.jaudiotagger.utils.tree.TreeNode,boolean)
com.umeng.commonsdk.config.a: long c(long,int)
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
com.caij.puremusic.drive.model.MediaStream: com.caij.puremusic.drive.model.MediaStream copy(java.lang.String,int,boolean)
org.jaudiotagger.audio.mp3.MPEGFrameHeader: java.lang.String getModeExtension()
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
org.jaudiotagger.audio.aiff.AiffAudioHeader: void addApplicationIdentifier(java.lang.String)
com.google.android.material.timepicker.ClockHandView: ClockHandView(android.content.Context,android.util.AttributeSet)
com.google.common.hash.HashCode: HashCode()
org.simpleframework.xml.core.ElementListUnionLabel: ElementListUnionLabel(org.simpleframework.xml.core.Contact,org.simpleframework.xml.ElementListUnion,org.simpleframework.xml.ElementList,org.simpleframework.xml.stream.Format)
com.caij.puremusic.drive.model.ADriveItem$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.ADriveItem)
com.umeng.analytics.pro.ac: boolean a()
androidx.cardview.widget.CardView: android.content.res.ColorStateList getCardBackgroundColor()
com.tencent.bugly.proguard.ag: void d(java.util.List)
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: boolean isValid()
org.jaudiotagger.test.ExtractID3TagFromFile$MP3FileFilter: java.lang.String getDescription()
com.caij.puremusic.drive.model.ADriveItem$$serializer: ADriveItem$$serializer()
com.google.android.material.card.MaterialCardView: void setOnCheckedChangeListener(com.google.android.material.card.MaterialCardView$OnCheckedChangeListener)
org.jaudiotagger.tag.TagException: TagException(java.lang.String)
org.jaudiotagger.audio.generic.AbstractTag: java.util.Iterator getFields()
com.caij.puremusic.drive.model.Metadata: java.lang.String component9()
com.afollestad.materialdialogs.internal.main.DialogTitleLayout: android.widget.TextView getTitleView$core()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZResource(int)
com.tencent.bugly.crashreport.BuglyLog: void d(java.lang.String,java.lang.String)
com.caij.puremusic.db.model.HistoryEntityQueries$getById$1: HistoryEntityQueries$getById$1(kotlin.jvm.functions.Function2)
androidx.gridlayout.widget.GridLayout: int getOrientation()
com.caij.puremusic.drive.model.JellyfinArtistResponse$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.caij.puremusic.db.model.HistoryEntityQueries$HistorySongsQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.tencent.mm.opensdk.modelbiz.WXChannelOpenLive$Resp: void toBundle(android.os.Bundle)
org.jaudiotagger.tag.id3.framebody.FrameBodyTDTG: FrameBodyTDTG(java.nio.ByteBuffer,int)
com.tencent.mm.opensdk.openapi.MMSharedPreferences$REditor: android.content.SharedPreferences$Editor remove(java.lang.String)
org.jaudiotagger.tag.id3.ID3v23Frame$StatusFlags: byte convertV4ToV3Flags(byte)
com.yalantis.ucrop.UCropActivity: UCropActivity()
com.google.android.material.chip.Chip: void setCloseIconTint(android.content.res.ColorStateList)
com.caij.puremusic.model.Contributor$Creator: java.lang.Object createFromParcel(android.os.Parcel)
com.umeng.analytics.pro.ar: void a(android.app.Activity,android.os.Bundle)
org.jaudiotagger.tag.id3.AbstractID3Tag: byte getRelease()
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$PathBetweenNodesEnumeration: java.lang.Object nextElement()
com.caij.puremusic.db.model.ServerLyricsQueries: app.cash.sqldelight.Query getById(long,kotlin.jvm.functions.Function3)
org.jcodec.containers.mp4.boxes.TrunBox: int[] access$602(org.jcodec.containers.mp4.boxes.TrunBox,int[])
com.tencent.bugly.proguard.at: void h()
com.caij.puremusic.db.model.SongEntityQueries$deleteSongFromPlaylist$1: SongEntityQueries$deleteSongFromPlaylist$1(long,long)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMR: void write(java.io.ByteArrayOutputStream)
com.caij.puremusic.drive.model.PlayListsSubsonicResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.PlayListsSubsonicResponse)
org.jaudiotagger.tag.id3.framebody.FrameBodyXSOT: FrameBodyXSOT()
com.umeng.analytics.process.UMProcessDBHelper: org.json.JSONObject readVersionInfoFromColumId(java.lang.Integer)
com.google.android.material.bottomsheet.BottomSheetDialog: android.widget.FrameLayout access$200(com.google.android.material.bottomsheet.BottomSheetDialog)
com.umeng.commonsdk.statistics.idtracking.g: g(android.content.Context)
org.jaudiotagger.audio.asf.data.ContentBranding: long getCurrentAsfChunkSize()
com.google.android.material.navigation.NavigationBarMenuView: void setPresenter(com.google.android.material.navigation.NavigationBarPresenter)
org.simpleframework.xml.stream.DocumentReader$Text: java.lang.String getValue()
com.google.android.material.navigation.NavigationBarView: void setItemActiveIndicatorColor(android.content.res.ColorStateList)
org.jaudiotagger.tag.id3.AbstractID3v2Frame: org.jaudiotagger.tag.id3.framebody.AbstractID3v2FrameBody readBody(java.lang.String,java.nio.ByteBuffer,int)
org.jaudiotagger.tag.wav.WavTag: java.lang.String toString()
org.jcodec.containers.mp4.boxes.ClearApertureBox: org.jcodec.containers.mp4.boxes.ClearApertureBox createClearApertureBox(int,int)
com.alipay.android.phone.mrpc.core.g: com.alipay.android.phone.mrpc.core.aa c()
com.tencent.bugly.proguard.ao: void g(java.lang.String,java.lang.String,java.lang.String)
org.simpleframework.xml.core.Model: void registerAttribute(java.lang.String)
org.jaudiotagger.tag.datatype.Lyrics3TimeStamp: Lyrics3TimeStamp(org.jaudiotagger.tag.datatype.Lyrics3TimeStamp)
com.umeng.commonsdk.statistics.noise.ABTest: void onImprintChanged(com.umeng.commonsdk.statistics.idtracking.ImprintHandler$a)
org.jaudiotagger.tag.id3.framebody.FrameBodyUSER: void setOwner(java.lang.String)
com.caij.puremusic.db.model.HistoryEntityQueries$historySongs$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.caij.puremusic.drive.model.ImageTags: com.caij.puremusic.drive.model.ImageTags copy(java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: java.lang.String getOriginalID()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean sendOpenBusiLuckyMoney(android.content.Context,android.os.Bundle)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.customview.widget.ViewDragHelper$Callback: int clampViewPositionVertical(android.view.View,int,int)
com.caij.puremusic.drive.model.PlayListsResponse: boolean equals(java.lang.Object)
org.jaudiotagger.audio.asf.data.AudioStreamChunk: java.lang.String prettyPrint(java.lang.String)
com.caij.puremusic.drive.model.PlexAlbumsResponse$$serializer: PlexAlbumsResponse$$serializer()
com.caij.puremusic.drive.model.Directory: java.lang.String getKey()
com.caij.puremusic.drive.model.AlbumResponse$Companion: kotlinx.serialization.KSerializer serializer()
com.umeng.commonsdk.statistics.idtracking.c: java.lang.String f()
org.jaudiotagger.audio.aiff.AiffTagWriter: void deleteTagChunkUsingSmallByteBufferSegments(org.jaudiotagger.tag.aiff.AiffTag,java.nio.channels.FileChannel,long,long)
org.jaudiotagger.audio.asf.data.AudioStreamChunk: byte[] getCodecData()
com.umeng.vt.diff.Channel: Channel()
org.jaudiotagger.tag.id3.ID3Frames: boolean isCommon(java.lang.String)
org.simpleframework.xml.core.Template: Template(int)
com.google.android.material.slider.BaseSlider: float getValueFrom()
androidx.fragment.app.DialogFragment: void onAttach(android.content.Context)
org.jcodec.containers.mp4.boxes.AudioSampleEntry: java.nio.ByteOrder getEndian()
com.umeng.commonsdk.statistics.internal.a$a: com.umeng.commonsdk.statistics.internal.a a()
com.umeng.analytics.pro.bo: bo(com.umeng.analytics.pro.ci,long)
org.jaudiotagger.audio.SupportedFileFormat: SupportedFileFormat(java.lang.String,int,java.lang.String)
com.google.android.material.bottomsheet.BottomSheetDialog$3: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
com.umeng.commonsdk.statistics.proto.d$e: com.umeng.commonsdk.statistics.proto.d$e a(java.lang.String)
org.jaudiotagger.audio.generic.AudioFileModificationListener: void fileModified(org.jaudiotagger.audio.AudioFile,java.io.File)
com.google.android.material.slider.Slider: void setThumbTintList(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
org.jcodec.containers.mp4.boxes.HandlerBox: java.lang.String fourcc()
org.xmlpull.v1.XmlPullParser: void setProperty(java.lang.String,java.lang.Object)
com.umeng.analytics.pro.by: by(com.umeng.analytics.pro.bq)
com.umeng.commonsdk.statistics.proto.d$e: com.umeng.commonsdk.statistics.proto.d$e[] values()
org.jaudiotagger.audio.mp4.ChunkWriter: ChunkWriter(org.jcodec.containers.mp4.boxes.TrakBox,java.nio.channels.SeekableByteChannel,java.nio.channels.SeekableByteChannel)
com.umeng.analytics.pro.bi: bi(byte,java.lang.String)
org.jaudiotagger.audio.SupportedFileFormat: java.lang.String getFilesuffix()
com.thegrizzlylabs.sardineandroid.model.Location: void setHref(java.lang.String)
com.caij.puremusic.model.CategoryInfo: void writeToParcel(android.os.Parcel,int)
com.umeng.analytics.vshelper.PageNameMonitor: void activityPause(java.lang.String)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.umeng.analytics.MobclickAgent: void onKillProcess(android.content.Context)
org.jaudiotagger.tag.id3.ID3v22FieldKey: java.lang.String getFieldName()
org.simpleframework.xml.core.Model: boolean isModel(java.lang.String)
org.jaudiotagger.tag.datatype.AbstractString: AbstractString(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody,java.lang.String)
org.jaudiotagger.audio.SupportedFileFormat$8: org.jaudiotagger.tag.Tag createDefaultTag()
com.umeng.commonsdk.listener.OnGetOaidListener: void onGetOaid(java.lang.String)
org.jaudiotagger.tag.reference.GenreTypes: GenreTypes()
com.google.android.material.navigation.NavigationBarItemView: int getSuggestedIconWidth()
androidx.fragment.app.Fragment: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)
com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)
com.github.dhaval2404.imagepicker.constant.ImageProvider: ImageProvider(java.lang.String,int)
com.caij.puremusic.db.model.SongQueries$SongsByInfoQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
com.umeng.analytics.pro.o: boolean a(org.json.JSONObject)
com.caij.puremusic.db.model.ServerArtistCoverQueries$deleteSongBySource$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.simpleframework.xml.core.Schema: org.simpleframework.xml.core.Label getText()
org.jaudiotagger.tag.datatype.NumberFixedLength: NumberFixedLength(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody,int)
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: org.jaudiotagger.audio.aiff.chunk.AiffCompressionType[] values()
org.simpleframework.xml.core.Persister: Persister(java.util.Map,org.simpleframework.xml.stream.Format)
com.umeng.commonsdk.UMConfigure: java.lang.reflect.Method getDecMethod(java.lang.Class,java.lang.String,java.lang.Class[])
org.jaudiotagger.tag.id3.framebody.FrameBodyUSER: java.lang.String getLanguage()
com.caij.puremusic.model.smartplaylist.AbsSmartPlaylist: AbsSmartPlaylist(java.lang.String,int)
org.jcodec.containers.mp4.boxes.TrackExtendsBox: void setTrackId(int)
com.google.android.material.appbar.CollapsingToolbarLayout: int getLineCount()
com.tencent.bugly.proguard.ap: java.lang.String a()
com.caij.puremusic.model.AlbumWithCount: java.lang.String toString()
com.tencent.mm.opensdk.modelpay.PayReq: void fromBundle(android.os.Bundle)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(android.content.res.ColorStateList)
org.jaudiotagger.tag.id3.framebody.FrameBodyTOPE: FrameBodyTOPE(byte,java.lang.String)
com.google.android.gms.internal.play_billing.zza: zza(java.lang.String,int,int)
com.tencent.bugly.crashreport.crash.h5.H5JavaScriptInterface: void printLog(java.lang.String)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: int getEmptyFrameBytes()
com.umeng.commonsdk.stateless.b: boolean a()
org.jaudiotagger.audio.generic.GenericAudioHeader: java.lang.String getChannels()
org.jaudiotagger.tag.id3.framebody.FrameBodyTCOM: FrameBodyTCOM(java.nio.ByteBuffer,int)
com.umeng.analytics.pro.bo: bo(com.umeng.analytics.pro.ci)
android.support.v4.media.RatingCompat$Api19Impl: android.media.Rating newThumbRating(boolean)
org.jaudiotagger.audio.generic.AbstractTag$1: AbstractTag$1(org.jaudiotagger.audio.generic.AbstractTag,java.util.Iterator)
org.jaudiotagger.tag.images.AndroidArtwork: void setFromMetadataBlockDataPicture(org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture)
com.google.android.material.bottomsheet.BottomSheetBehavior: android.view.View findScrollingChild(android.view.View)
org.simpleframework.xml.stream.DocumentReader: org.simpleframework.xml.stream.EventNode next()
com.umeng.commonsdk.statistics.common.DeviceConfig: boolean checkPermission(android.content.Context,java.lang.String)
org.jaudiotagger.audio.mp3.MP3AudioHeader: long getNumberOfFrames()
org.simpleframework.xml.core.Scanner: org.simpleframework.xml.core.Function getComplete()
com.tencent.mm.opensdk.modelmsg.GetMessageFromWX$Req: void fromBundle(android.os.Bundle)
com.tencent.mm.opensdk.utils.Log: Log()
org.jaudiotagger.audio.asf.data.MetadataDescriptor: byte[] getBytes()
com.umeng.umzid.ZIDManager$b: ZIDManager$b(com.umeng.umzid.ZIDManager,android.content.Context)
com.umeng.analytics.pro.au: au(java.lang.String)
org.jaudiotagger.tag.aiff.AiffTag: boolean isExistingId3Tag()
com.umeng.commonsdk.internal.c$1: void run()
org.simpleframework.xml.stream.OutputAttribute: java.lang.String getName()
org.simpleframework.xml.core.ElementException: ElementException(java.lang.String,java.lang.Object[])
org.jaudiotagger.tag.id3.AggregatedFrame: boolean isEmpty()
org.jaudiotagger.tag.id3.valuepair.StandardIPLSKey: java.lang.String getKey()
org.jaudiotagger.audio.mp3.MPEGFrameHeader: void setVersion()
org.jaudiotagger.tag.id3.framebody.FrameBodyTCON: void setV23Format()
com.caij.puremusic.db.model.AlbumQueries$GetAlbumByArtistIdQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
com.caij.puremusic.db.model.SongEntity: java.lang.String toString()
com.thegrizzlylabs.sardineandroid.model.Prop: java.lang.String getGetcontenttype()
com.umeng.commonsdk.statistics.idtracking.Envelope: void seal()
com.caij.puremusic.drive.model.Type: Type(int,java.lang.String,java.lang.String,java.lang.String,boolean,kotlinx.serialization.internal.SerializationConstructorMarker)
org.jaudiotagger.audio.asf.data.MetadataDescriptor: MetadataDescriptor(org.jaudiotagger.audio.asf.data.ContainerType,java.lang.String,int,int,int)
com.caij.puremusic.model.UpdateInfo$1: com.caij.puremusic.model.UpdateInfo createFromParcel(android.os.Parcel)
com.google.android.material.search.SearchBar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.alipay.android.phone.mrpc.core.u: u()
com.caij.puremusic.drive.model.SubsonicPlaylist$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyNumberTotal: AbstractFrameBodyNumberTotal(java.nio.ByteBuffer,int)
com.tencent.bugly.proguard.al: boolean b(java.lang.Class,java.lang.String,java.lang.Object[])
com.google.common.collect.Iterators$EmptyModifiableIterator: com.google.common.collect.Iterators$EmptyModifiableIterator valueOf(java.lang.String)
org.jaudiotagger.audio.mp4.Chunk: int getSampleSize()
org.simpleframework.xml.core.Variable: java.lang.String getOverride()
com.umeng.commonsdk.config.e: void a(java.lang.String,java.lang.Object,java.lang.String[])
com.caij.puremusic.drive.model.PlexSongsResponse: PlexSongsResponse(com.caij.puremusic.drive.model.MediaContainer)
com.yalantis.ucrop.view.widget.AspectRatioTextView: AspectRatioTextView(android.content.Context,android.util.AttributeSet)
com.google.common.hash.LittleEndianByteArray$JavaLittleEndianBytes: LittleEndianByteArray$JavaLittleEndianBytes(java.lang.String,int,com.google.common.hash.LittleEndianByteArray$1)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
org.xmlpull.v1.XmlPullParser: int nextToken()
com.afollestad.viewpagerdots.DotsIndicator: DotsIndicator(android.content.Context,android.util.AttributeSet)
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: void a(com.umeng.commonsdk.statistics.internal.d)
com.caij.puremusic.drive.model.Metadata: int getDuration()
org.simpleframework.xml.core.ParameterContact: void set(java.lang.Object,java.lang.Object)
com.umeng.commonsdk.internal.utils.a: java.util.List f(android.content.Context)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityStopped(android.app.Activity)
com.caij.puremusic.drive.model.PlexArtistsResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.caij.puremusic.db.model.SongQueries$GetArtistSongCountQuery$execute$1: SongQueries$GetArtistSongCountQuery$execute$1(com.caij.puremusic.db.model.SongQueries$GetArtistSongCountQuery)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: DefaultMutableTreeNode()
androidx.constraintlayout.widget.Barrier: void setMargin(int)
com.caij.puremusic.drive.model.PlayLists: java.util.List getPlaylist()
org.simpleframework.xml.core.CompositeList: boolean validate(org.simpleframework.xml.stream.InputNode)
org.simpleframework.xml.stream.InputNode: boolean isRoot()
com.umeng.analytics.MobclickAgent: void disable()
org.jaudiotagger.tag.flac.FlacTag: int getFieldCount()
com.caij.puremusic.model.Playlist: java.lang.String getName()
com.umeng.analytics.pro.ac: com.umeng.analytics.pro.z a(android.content.Context)
com.umeng.commonsdk.statistics.idtracking.Envelope: com.umeng.commonsdk.statistics.idtracking.Envelope genEnvelope(android.content.Context,java.lang.String,byte[])
org.jaudiotagger.tag.id3.framebody.FrameBodyUFID: FrameBodyUFID(java.nio.ByteBuffer,int)
org.jcodec.containers.mp4.boxes.TrunBox: int[] getSampleDurations()
org.jaudiotagger.tag.id3.framebody.FrameBodyDeprecated: java.lang.String getBriefDescription()
com.caij.puremusic.fragments.player.flat.FlatPlayerFragment: FlatPlayerFragment()
com.caij.puremusic.drive.model.GoogleDriveFileResponse$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.thegrizzlylabs.sardineandroid.Sardine: void setCredentials(java.lang.String,java.lang.String)
com.caij.puremusic.drive.model.AlbumMetadata: java.lang.String component3()
com.umeng.commonsdk.UMConfigureImpl: void removeMessageSendListener(com.umeng.commonsdk.utils.onMessageSendListener)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleEnabled(boolean)
org.simpleframework.xml.core.Source: boolean isFloat(java.lang.Class)
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: boolean isEmpty()
com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport: java.lang.Object fromMultistatus(com.thegrizzlylabs.sardineandroid.model.Multistatus)
org.simpleframework.xml.stream.InputNode: java.lang.String getReference()
com.caij.puremusic.network.model.Artist: void setType(java.lang.String)
com.thegrizzlylabs.sardineandroid.DavResource: long getContentLength(com.thegrizzlylabs.sardineandroid.model.Response)
com.tencent.mm.opensdk.modelbiz.WXChannelShareVideo$Req: void toBundle(android.os.Bundle)
com.tencent.bugly.proguard.bv: void a(com.tencent.bugly.proguard.k)
com.tencent.bugly.proguard.bg: bg()
org.simpleframework.xml.core.Scanner: org.simpleframework.xml.core.Function getValidate()
com.caij.puremusic.drive.model.JellyfinArtistResponse$$serializer: JellyfinArtistResponse$$serializer()
com.caij.puremusic.db.model.SongQueries$SongsByTitleQuery$execute$1: SongQueries$SongsByTitleQuery$execute$1(com.caij.puremusic.db.model.SongQueries$SongsByTitleQuery)
org.simpleframework.xml.convert.Registry: org.simpleframework.xml.convert.Converter lookup(java.lang.Class)
org.jaudiotagger.tag.id3.ID3v1Tag: void setField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
com.caij.puremusic.db.model.SearchAlbumResultQueries$GetByIdQuery: SearchAlbumResultQueries$GetByIdQuery(com.caij.puremusic.db.model.SearchAlbumResultQueries,java.lang.String,kotlin.jvm.functions.Function1)
com.umeng.commonsdk.framework.UMWorkDispatch: void sendEvent(android.content.Context,int,com.umeng.commonsdk.framework.UMLogDataProtocol,java.lang.Object)
org.simpleframework.xml.core.DetailScanner: java.lang.annotation.Annotation[] getAnnotations()
com.caij.puremusic.drive.model.FMediaContainer: java.lang.String component2()
com.umeng.commonsdk.utils.a: void a(long)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: org.jaudiotagger.tag.id3.AbstractID3v2Frame createFrame(java.lang.String)
com.google.android.material.imageview.ShapeableImageView: int getContentPaddingStart()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
com.umeng.commonsdk.statistics.idtracking.j: j(android.content.Context)
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean access$1600(com.google.android.material.bottomsheet.BottomSheetBehavior)
com.google.common.collect.NaturalOrdering: NaturalOrdering()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: byte[] getImageData()
nl.adaptivity.xmlutil.EventType: EventType(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.umeng.analytics.pro.o: void a(boolean)
com.afollestad.materialdialogs.color.view.WrapContentViewPager: WrapContentViewPager(android.content.Context,android.util.AttributeSet)
org.simpleframework.xml.core.OverrideValue: java.lang.Class getType()
org.jaudiotagger.tag.aiff.AiffTag: boolean setEncoding(java.nio.charset.Charset)
com.caij.puremusic.views.PermissionItem: void setNumber(java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
org.jaudiotagger.tag.datatype.PairedTextEncodedStringNullTerminated$ValuePairs: java.util.List access$000(org.jaudiotagger.tag.datatype.PairedTextEncodedStringNullTerminated$ValuePairs)
com.caij.puremusic.preferences.BlacklistPreference: BlacklistPreference(android.content.Context,android.util.AttributeSet,int,int)
org.simpleframework.xml.core.CompositeListUnion: java.lang.Object read(org.simpleframework.xml.stream.InputNode)
com.caij.puremusic.drive.model.SubsonicSearchResponse: SubsonicSearchResponse(java.lang.String,java.lang.String,com.caij.puremusic.drive.model.SearchResult3,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.caij.puremusic.drive.model.Propstat$$serializer: com.caij.puremusic.drive.model.Propstat deserialize(kotlinx.serialization.encoding.Decoder)
org.simpleframework.xml.core.DetailScanner: java.lang.String getName()
org.jaudiotagger.tag.TagField: java.lang.String getId()
com.thegrizzlylabs.sardineandroid.model.PrincipalURL: void setHref(java.lang.String)
com.tencent.mmkv.MMKV: void clearAll()
org.jcodec.containers.mp4.boxes.MovieFragmentHeaderBox: MovieFragmentHeaderBox(org.jcodec.containers.mp4.boxes.Header)
com.caij.puremusic.db.model.ArtistQueries$artists$1: ArtistQueries$artists$1(kotlin.jvm.functions.Function2)
com.google.android.exoplayer2.video.spherical.SphericalGLSurfaceView: void setUseSensorRotation(boolean)
org.jaudiotagger.tag.id3.ID3v23FieldKey: java.lang.String getFrameId()
org.jaudiotagger.tag.datatype.StringHashMap: java.util.Map getKeyToValue()
com.tencent.bugly.crashreport.CrashReport: java.lang.String getAppChannel()
androidx.fragment.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
org.jaudiotagger.tag.aiff.AiffTag: void setIncorrectlyAlignedTag(boolean)
org.simpleframework.xml.core.CompositeList: java.lang.Object read(org.simpleframework.xml.stream.InputNode)
com.google.android.material.slider.BaseSlider: java.util.List getValues()
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
com.caij.puremusic.drive.model.JellyfinArtistResponse: java.lang.String toString()
org.jcodec.containers.mp4.WaveExtBoxes: WaveExtBoxes()
org.simpleframework.xml.core.Introspector: java.lang.String getDefault()
com.thegrizzlylabs.sardineandroid.model.Error: void setAny(java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyTOFN: FrameBodyTOFN(org.jaudiotagger.tag.id3.framebody.FrameBodyTOFN)
com.tencent.bugly.proguard.ao: void a(android.content.Context)
org.jaudiotagger.tag.id3.ID3v1Tag: java.nio.charset.Charset getEncoding()
org.jaudiotagger.audio.asf.data.EncryptionChunk: java.lang.String getSecretData()
org.jaudiotagger.audio.asf.io.AsfHeaderReader: org.jaudiotagger.audio.asf.data.GUID[] getApplyingIds()
org.jaudiotagger.audio.flac.metadatablock.BlockType: org.jaudiotagger.audio.flac.metadatablock.BlockType valueOf(java.lang.String)
org.jaudiotagger.audio.asf.data.MetadataContainer$DescriptorPointer: MetadataContainer$DescriptorPointer(org.jaudiotagger.audio.asf.data.MetadataDescriptor)
com.umeng.analytics.MobclickAgent: void reportError(android.content.Context,java.lang.Throwable)
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportByInterval: boolean isValidValue(int)
com.thegrizzlylabs.sardineandroid.model.Lockentry: com.thegrizzlylabs.sardineandroid.model.Locktype getLocktype()
androidx.appcompat.widget.AppCompatSeekBar: AppCompatSeekBar(android.content.Context,android.util.AttributeSet)
org.jcodec.containers.mp4.boxes.UrlBox: int estimateSize()
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportBackgroundTintList()
org.jaudiotagger.tag.wav.WavTag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
com.umeng.commonsdk.utils.a: com.umeng.commonsdk.utils.a b()
com.umeng.commonsdk.statistics.idtracking.ImprintHandler$a: java.lang.String a(java.lang.String,java.lang.String)
org.jaudiotagger.audio.generic.AbstractTag: boolean hasField(java.lang.String)
com.tencent.mm.opensdk.openapi.WXApiImplComm: boolean isIntentFromWx(android.content.Intent,java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
com.google.common.base.Predicates$ObjectPredicate$4: Predicates$ObjectPredicate$4(java.lang.String,int)
org.simpleframework.xml.transform.ClassTransform: java.lang.ClassLoader getCallerClassLoader()
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgramEnvironment$Resp: WXPreloadMiniProgramEnvironment$Resp(android.os.Bundle)
com.umeng.analytics.pro.e$c$a: e$c$a()
com.caij.puremusic.db.model.ServerSongCover: com.caij.puremusic.db.model.ServerSongCover copy(java.lang.String,long,java.lang.String)
com.google.android.gms.auth.api.signin.RevocationBoundService: RevocationBoundService()
org.jaudiotagger.tag.mp4.field.Mp4TagByteField: Mp4TagByteField(org.jaudiotagger.tag.mp4.Mp4FieldKey,java.lang.String)
com.afollestad.materialdialogs.internal.main.DialogScrollView$onAttachedToWindow$1: DialogScrollView$onAttachedToWindow$1()
com.thegrizzlylabs.sardineandroid.model.Principal: void setSelf(com.thegrizzlylabs.sardineandroid.model.Self)
com.caij.puremusic.drive.model.PlayListItem: long getRunTimeTicks()
com.caij.puremusic.drive.model.BaiduFileResponse: int component1()
com.caij.puremusic.drive.model.PlaylistResponse: void getSubsonicResponse$annotations()
com.tencent.mm.opensdk.openapi.IWXAPI: boolean handleIntent(android.content.Intent,com.tencent.mm.opensdk.openapi.IWXAPIEventHandler)
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
com.afollestad.materialdialogs.internal.main.DialogLayout: com.afollestad.materialdialogs.MaterialDialog getDialog()
com.umeng.analytics.pro.ad$b: ad$b(android.os.IBinder)
com.tencent.bugly.proguard.k: int a(java.lang.String)
org.jcodec.containers.mp4.boxes.TrakBox: long rescale(long,long)
com.caij.puremusic.drive.model.OneDriveItem: com.caij.puremusic.drive.model.ParentReference getParentReference()
com.caij.puremusic.drive.model.SearchResult3$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean shouldSkipHalfExpandedStateWhenDragging()
com.thegrizzlylabs.sardineandroid.model.Principal: com.thegrizzlylabs.sardineandroid.model.Property getProperty()
com.google.android.material.navigation.NavigationBarItemView: void setItemPaddingBottom(int)
org.jaudiotagger.audio.mp4.Mp4TagReader: Mp4TagReader()
org.simpleframework.xml.core.Expression: boolean isEmpty()
org.jaudiotagger.tag.id3.framebody.FrameBodyTCON: void setupObjectList()
com.caij.puremusic.drive.model.SubsonicPlaylist$Companion: SubsonicPlaylist$Companion()
org.jaudiotagger.audio.ogg.OggVorbisTagReader$OggVorbisHeaderSizes: int getExtraPacketDataSize()
javax.xml.namespace.NamespaceContext: java.util.Iterator getPrefixes(java.lang.String)
com.google.android.material.slider.Slider: float getStepSize()
org.jaudiotagger.tag.asf.AsfTag$AsfFieldIterator: void remove()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyETT: void setupObjectList()
com.caij.puremusic.fragments.AlbumCoverStyle: int getId()
org.simpleframework.xml.stream.DocumentReader$Start: java.lang.String getName()
com.umeng.analytics.pro.bk: bk(byte,com.umeng.analytics.pro.bi,com.umeng.analytics.pro.bi)
org.jaudiotagger.audio.flac.FlacTagWriter: void writeTags(org.jaudiotagger.tag.Tag,java.nio.channels.FileChannel,org.jaudiotagger.audio.flac.FlacTagWriter$MetadataBlockInfo,org.jaudiotagger.audio.flac.FlacStreamReader)
com.umeng.commonsdk.internal.utils.i: i()
com.caij.puremusic.db.model.FolderQueries$insertFolder$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.utils.IntArrayList: void push(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyPRIV: void setOwner(java.lang.String)
com.caij.puremusic.drive.model.OneDriveFolder$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.tencent.mm.opensdk.modelmsg.WXStateSceneDataObject$IWXStateJumpInfo: boolean checkArgs()
com.caij.puremusic.fragments.NowPlayingScreen: com.caij.puremusic.fragments.NowPlayingScreen[] values()
com.umeng.analytics.filter.EventList: void register(android.content.Context)
com.caij.puremusic.drive.model.Media: int getId()
com.caij.puremusic.db.model.ServerSongCover: long getSourceId()
org.jcodec.containers.mp4.boxes.MetaValue: float toFloat(byte[])
com.caij.puremusic.db.model.SongEntityQueries$GetPlayListSongCountQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.umeng.analytics.pro.s$a: s$a()
org.simpleframework.xml.stream.InputAttribute: org.simpleframework.xml.stream.InputNode getNext()
com.alipay.apmobilesecuritysdk.f.a: void a(java.lang.String,java.lang.String,java.lang.String)
org.simpleframework.xml.stream.Formatter: void append(char[])
com.alipay.android.phone.mrpc.core.s: boolean a(android.content.Context)
com.umeng.commonsdk.statistics.proto.c: boolean e()
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: java.lang.String removeNativeKeyValue(java.lang.String)
com.umeng.commonsdk.stateless.c: boolean a(byte[],java.lang.String,java.lang.String,java.lang.String)
com.caij.puremusic.util.CoverLyricsType: CoverLyricsType(java.lang.String,int)
com.caij.puremusic.MainModuleKt$dataModule$1$2: MainModuleKt$dataModule$1$2()
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query songsOrderDateAdd()
org.jaudiotagger.tag.id3.ID3v23Frame$StatusFlags: ID3v23Frame$StatusFlags(org.jaudiotagger.tag.id3.ID3v23Frame,byte)
androidx.core.util.ObjectsCompat$Api19Impl: int hash(java.lang.Object[])
com.tencent.bugly.proguard.at: void a(com.tencent.bugly.crashreport.crash.CrashDetailBean)
nl.adaptivity.xmlutil.core.XmlVersion: XmlVersion(java.lang.String,int,java.lang.String)
com.tencent.mm.opensdk.diffdev.a.a$a: void onAuthGotQrcode(java.lang.String,byte[])
com.google.android.material.progressindicator.BaseProgressIndicator: int getHideAnimationBehavior()
com.umeng.analytics.pro.bu: double y()
com.caij.puremusic.network.model.Artist: java.util.List component9()
com.tencent.mm.opensdk.modelbiz.ChooseCardFromWXCardPackage$Req: ChooseCardFromWXCardPackage$Req()
com.caij.puremusic.db.model.SearchAlbumResult: java.lang.String component2()
com.tencent.mm.opensdk.modelbiz.OpenWebview$Resp: void fromBundle(android.os.Bundle)
com.caij.puremusic.drive.model.PlaylistMetadata$$serializer: com.caij.puremusic.drive.model.PlaylistMetadata deserialize(kotlinx.serialization.encoding.Decoder)
com.google.common.hash.LittleEndianByteArray$UnsafeByteArray$2: LittleEndianByteArray$UnsafeByteArray$2(java.lang.String,int)
androidx.constraintlayout.helper.widget.Flow: void setHorizontalGap(int)
com.umeng.commonsdk.statistics.proto.d: void g()
org.jaudiotagger.tag.TagOptionSingleton: void setPadNumbers(boolean)
com.google.android.material.navigation.NavigationBarItemView: void setItemBackground(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyTENC: FrameBodyTENC(org.jaudiotagger.tag.id3.framebody.FrameBodyTENC)
org.simpleframework.xml.stream.EventNode: java.lang.Object getSource()
com.caij.puremusic.drive.model.AlbumMediaContainer: com.caij.puremusic.drive.model.AlbumMediaContainer copy$default(com.caij.puremusic.drive.model.AlbumMediaContainer,java.util.List,int,java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyWXXX: java.lang.String getFirstUrlLink()
org.simpleframework.xml.core.TextListLabel: boolean isData()
org.jaudiotagger.tag.id3.framebody.FrameBodyAPIC: FrameBodyAPIC(org.jaudiotagger.tag.id3.framebody.FrameBodyAPIC)
com.caij.puremusic.drive.model.PlaylistResponse: com.caij.puremusic.drive.model.PlaylistResponse copy$default(com.caij.puremusic.drive.model.PlaylistResponse,com.caij.puremusic.drive.model.PlayListSubsonicResponse,int,java.lang.Object)
com.caij.puremusic.db.model.PlaybackSong$Adapter: app.cash.sqldelight.ColumnAdapter getPositionAdapter()
com.google.android.material.slider.BaseSlider: BaseSlider(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
org.simpleframework.xml.core.Parameter: org.simpleframework.xml.core.Expression getExpression()
androidx.constraintlayout.motion.widget.MotionLayout: void setInteractionEnabled(boolean)
org.simpleframework.xml.ElementMap: java.lang.Class valueType()
com.tencent.bugly.proguard.ba: ba(java.lang.String,long)
com.caij.puremusic.fragments.lyrics.ComnLyricsFragment$LyricsType: com.caij.puremusic.fragments.lyrics.ComnLyricsFragment$LyricsType valueOf(java.lang.String)
com.caij.puremusic.drive.model.AlbumMetadata$$serializer: com.caij.puremusic.drive.model.AlbumMetadata deserialize(kotlinx.serialization.encoding.Decoder)
com.google.android.material.navigation.NavigationBarPresenter$SavedState: NavigationBarPresenter$SavedState()
com.thegrizzlylabs.sardineandroid.util.EntityWithAnyElementConverter: java.lang.reflect.Method getSetterForField(java.lang.reflect.Field)
com.caij.puremusic.db.model.ServerArtistCoverQueries$deleteSongBySource$2: ServerArtistCoverQueries$deleteSongBySource$2()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.bottomsheet.BottomSheetDragHandleView: void onAccessibilityStateChanged(boolean)
com.google.android.material.bottomnavigation.BottomNavigationMenuView: void setItemHorizontalTranslationEnabled(boolean)
org.jaudiotagger.audio.mp3.VbriFrame: void setAudioSize()
com.caij.puremusic.drive.model.JellyfinFolder: java.lang.String component2()
org.simpleframework.xml.core.GetPart: java.lang.reflect.Method getMethod()
com.umeng.commonsdk.statistics.common.a$b: a$b()
com.caij.puremusic.db.model.PlaylistEntityQueries$deleteById$2: void invoke(kotlin.jvm.functions.Function1)
com.tencent.bugly.proguard.d: void a(java.lang.String)
org.simpleframework.xml.core.StructureBuilder: boolean isElement(java.lang.String)
com.umeng.commonsdk.statistics.proto.a$a: void b(com.umeng.analytics.pro.bu,com.umeng.commonsdk.statistics.proto.a)
org.jaudiotagger.tag.TagOptionSingleton: org.jaudiotagger.audio.wav.WavSaveOptions getWavSaveOptions()
com.caij.puremusic.drive.model.MediaStream$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.MediaStream)
org.simpleframework.xml.core.Section: org.simpleframework.xml.core.LabelMap getElements()
org.xmlpull.v1.XmlPullParser: java.lang.String getNamespace(java.lang.String)
org.jaudiotagger.audio.mp4.Chunk: Chunk(long,long,int,int,int[],int,int[],int)
org.jcodec.containers.mp4.boxes.MovieHeaderBox: void writeMatrix(java.nio.ByteBuffer)
org.simpleframework.xml.core.TemplateLabel: java.lang.String[] getPaths()
com.caij.puremusic.db.model.PlayCountEntityQueries$update$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
androidx.preference.internal.PreferenceImageView: int getMaxWidth()
com.thegrizzlylabs.sardineandroid.model.Property$PropertyConverter: com.thegrizzlylabs.sardineandroid.model.Property read(org.simpleframework.xml.stream.InputNode)
org.simpleframework.xml.core.Scanner: org.simpleframework.xml.Order getOrder()
com.alipay.android.phone.mrpc.core.b: void b(org.apache.http.HttpRequest)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
org.jaudiotagger.tag.datatype.Lyrics3Image: java.lang.String getDescription()
com.tencent.bugly.proguard.l: void a(short[],int)
org.jaudiotagger.tag.datatype.DataTypes: DataTypes()
com.tencent.bugly.proguard.ab: boolean f(android.content.Context)
org.jaudiotagger.audio.asf.data.VideoStreamChunk: java.lang.String prettyPrint(java.lang.String)
org.simpleframework.xml.strategy.Type: java.lang.annotation.Annotation getAnnotation(java.lang.Class)
com.thegrizzlylabs.sardineandroid.DavResource: com.thegrizzlylabs.sardineandroid.model.Supportedlock getSupportedlock()
org.jaudiotagger.tag.mp4.Mp4FieldKey: int getFieldLength()
org.jaudiotagger.audio.ogg.OggVorbisCommentTagCreator: OggVorbisCommentTagCreator()
com.tencent.mm.opensdk.modelmsg.WXMusicVipInfo: WXMusicVipInfo()
org.jaudiotagger.tag.Tag: int getFieldCountIncludingSubValues()
com.caij.puremusic.db.model.ServerAudioFormat: int hashCode()
com.tencent.bugly.proguard.e: void b()
org.jaudiotagger.audio.mp3.XingFrame: boolean isVbr()
org.simpleframework.xml.core.ElementListUnionLabel: org.simpleframework.xml.core.Label getLabel(java.lang.Class)
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: AiffCompressionType(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)
kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1: CoroutineContextKt$hasCopyableElements$1()
com.tencent.bugly.BuglyStrategy: void setEnableCatchAnrTrace(boolean)
com.umeng.commonsdk.statistics.proto.b$c: void b(com.umeng.analytics.pro.bu,com.umeng.commonsdk.statistics.proto.b)
org.simpleframework.xml.core.DefaultScanner: org.simpleframework.xml.core.Function getComplete()
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyPairs: AbstractFrameBodyPairs(byte,java.lang.String)
org.jaudiotagger.tag.lyrics3.Lyrics3v1: void write(java.io.RandomAccessFile)
com.caij.puremusic.drive.model.ADriveItem$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.umeng.commonsdk.statistics.proto.c: java.util.Map c()
org.jaudiotagger.tag.id3.framebody.FrameBodyTIME: boolean isHoursOnly()
com.tencent.bugly.proguard.p: void a(android.content.Context)
com.umeng.commonsdk.statistics.proto.a: void a(boolean)
org.simpleframework.xml.core.ElementListLabel: java.lang.String getName()
org.simpleframework.xml.core.Persister: Persister(org.simpleframework.xml.strategy.Strategy)
com.tencent.mm.opensdk.utils.ILog: void d(java.lang.String,java.lang.String)
com.tencent.bugly.proguard.l: void b(byte,int)
com.tencent.mm.opensdk.modelbiz.WXPayInsurance$Req: int getType()
org.jaudiotagger.logging.XMLTagDisplayFormatter: java.lang.String xmlCData(java.lang.String)
org.jaudiotagger.tag.id3.AggregatedFrame: void copyContent(org.jaudiotagger.tag.TagField)
kotlinx.serialization.json.internal.WriteMode: kotlinx.serialization.json.internal.WriteMode[] values()
org.simpleframework.xml.core.Composite: Composite(org.simpleframework.xml.core.Context,org.simpleframework.xml.strategy.Type)
org.jcodec.containers.mp4.boxes.FullBox: int getFlags()
org.jcodec.containers.mp4.boxes.ClearApertureBox: void doWrite(java.nio.ByteBuffer)
com.thegrizzlylabs.sardineandroid.BuildConfig: BuildConfig()
org.jcodec.containers.mp4.boxes.CompositionOffsetsBox$Entry: CompositionOffsetsBox$Entry(int,int)
org.simpleframework.xml.transform.AtomicIntegerTransform: java.util.concurrent.atomic.AtomicInteger read(java.lang.String)
org.simpleframework.xml.convert.Scanner: java.lang.annotation.Annotation scan(java.lang.Class)
org.repackage.a.a.a.a.b: b(org.repackage.a.a.a.a.c)
com.caij.puremusic.drive.model.Auth2Token: java.lang.String toString()
androidx.mediarouter.app.MediaRouteButton: androidx.mediarouter.app.MediaRouteDialogFactory getDialogFactory()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyINF: FieldFrameBodyINF(org.jaudiotagger.tag.lyrics3.FieldFrameBodyINF)
com.thegrizzlylabs.sardineandroid.DavResource: java.lang.String getContentLanguage(com.thegrizzlylabs.sardineandroid.model.Response)
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: void unsetCompression()
org.simpleframework.xml.core.Introspector: boolean isEmpty(java.lang.String)
com.umeng.commonsdk.config.FieldManager$a: FieldManager$a()
org.jaudiotagger.tag.asf.AsfTagField: byte[] getRawContent()
com.caij.puremusic.drive.model.OneDriveItem$Companion: OneDriveItem$Companion()
com.umeng.commonsdk.stateless.d: java.lang.String a(android.content.Context,boolean)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.TextInputLayout$LengthCounter getLengthCounter()
org.jaudiotagger.utils.tree.TreePath: boolean equals(java.lang.Object)
org.simpleframework.xml.core.TextListLabel: org.simpleframework.xml.core.Expression getExpression()
com.tencent.bugly.proguard.w: void b(int)
com.caij.puremusic.drive.model.DropboxDriveFileResponse: boolean component2()
com.umeng.commonsdk.vchannel.Sender: void setCustomHeader(java.util.Map)
org.simpleframework.xml.core.Template: void append(java.lang.String,int,int)
org.simpleframework.xml.stream.OutputAttribute: org.simpleframework.xml.stream.OutputNode setAttribute(java.lang.String,java.lang.String)
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: java.lang.String getCompression()
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String getTitle()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleY(float)
org.jaudiotagger.audio.asf.data.EncryptionChunk: void setProtectionType(java.lang.String)
com.alipay.sdk.app.PayTask: java.lang.String a(java.lang.String[])
androidx.cardview.widget.CardView: boolean getPreventCornerOverlap()
com.google.android.material.materialswitch.MaterialSwitch: void setThumbIconResource(int)
org.simpleframework.xml.core.Detail: boolean isStrict()
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
com.caij.puremusic.drive.model.PlayListItem: java.lang.String getName()
org.simpleframework.xml.core.ElementListUnionParameter$Contact: java.lang.String getName()
com.caij.puremusic.drive.model.SubsonicAlbum: void write$Self(com.caij.puremusic.drive.model.SubsonicAlbum,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.caij.puremusic.db.model.ServerArtistCoverQueries: void clear()
org.jcodec.containers.mp4.boxes.EsdsBox$DecoderSpecific: int tag()
com.umeng.umzid.b: java.util.concurrent.ScheduledThreadPoolExecutor a()
org.jaudiotagger.tag.id3.ID3v24Frame: int getFrameSizeSize()
com.umeng.analytics.pro.j: j()
com.tencent.bugly.proguard.w: int a(com.tencent.bugly.proguard.w,java.lang.String,java.lang.String,java.lang.String[],com.tencent.bugly.proguard.v)
com.umeng.analytics.pro.br: br()
com.umeng.analytics.pro.o$c: void b()
com.tencent.mm.opensdk.modelmsg.WXLocationObject: void serialize(android.os.Bundle)
com.umeng.common.b$a: b$a()
com.caij.puremusic.drive.model.BaiduFileResponse: int getErrno()
com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()
org.simpleframework.xml.Namespace: java.lang.String prefix()
org.jaudiotagger.tag.id3.reference.ID3Rating: int convertRatingFromFiveStarScale(int)
com.caij.puremusic.db.model.PlayCountEntityQueries$CheckSongExistInPlayCountQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
com.google.android.material.imageview.ShapeableImageView: android.content.res.ColorStateList getStrokeColor()
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessWebview$Resp: void fromBundle(android.os.Bundle)
org.jaudiotagger.audio.aiff.AiffAudioHeader: void addAnnotation(java.lang.String)
androidx.fragment.app.Fragment: void setReturnTransition(java.lang.Object)
org.jcodec.containers.mp4.boxes.TrunBox$Factory: org.jcodec.containers.mp4.boxes.TrunBox$Factory sampleDuration(int[])
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
com.caij.puremusic.db.model.SongQueries$songsByTitle$2: com.caij.puremusic.db.model.Song invoke(long,java.lang.String,int,int,long,java.lang.String,java.lang.String,long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,long,long)
org.simpleframework.xml.core.Parameter: java.lang.String getPath()
org.simpleframework.xml.stream.HyphenBuilder$Parser: void commit(char[],int,int)
com.umeng.analytics.pro.i: void a(boolean,boolean)
com.caij.puremusic.network.model.ArtistWrapper: java.lang.String toString()
org.simpleframework.xml.core.TreeModel: void registerElement(org.simpleframework.xml.core.Label)
code.name.monkey.appthemehelper.common.prefs.supportv7.ATEPreference: ATEPreference(android.content.Context,android.util.AttributeSet,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.preference.ListPreference: ListPreference(android.content.Context,android.util.AttributeSet,int)
androidx.preference.internal.PreferenceImageView: int getMaxHeight()
org.jaudiotagger.tag.datatype.TextEncodedStringNullTerminated: void readByteArray(byte[],int)
org.simpleframework.xml.core.LabelKey: int hashCode()
org.jcodec.containers.mp4.boxes.IListBox: int estimateSize()
com.umeng.analytics.pro.bo: void f()
org.simpleframework.xml.core.Source: java.lang.Class getType(org.simpleframework.xml.strategy.Type,java.lang.Object)
org.jaudiotagger.utils.tree.DefaultTreeModel: boolean isLeaf(java.lang.Object)
com.tencent.mm.opensdk.modelmsg.ShowMessageFromWX: ShowMessageFromWX()
com.tencent.mmkv.MMKV: void lock()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
org.simpleframework.xml.core.Caller: Caller(org.simpleframework.xml.core.Scanner,org.simpleframework.xml.core.Context)
org.jcodec.containers.mp4.boxes.MovieBox: org.jcodec.containers.mp4.boxes.TrakBox importTrack(org.jcodec.containers.mp4.boxes.MovieBox,org.jcodec.containers.mp4.boxes.TrakBox)
org.jaudiotagger.tag.id3.ID3Tags: boolean isID3v24FrameIdentifier(java.lang.String)
org.jaudiotagger.audio.asf.io.MetadataReader: org.jaudiotagger.audio.asf.data.Chunk read(org.jaudiotagger.audio.asf.data.GUID,java.io.InputStream,long)
org.koin.core.logger.Level: Level(java.lang.String,int)
com.caij.puremusic.drive.model.AlbumMediaContainer$$serializer: com.caij.puremusic.drive.model.AlbumMediaContainer deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.db.model.PlaylistEntityQueries$SearchPlaylistByNameQuery: java.lang.String getValue()
com.caij.puremusic.model.Contributor$Creator: Contributor$Creator()
org.jaudiotagger.logging.AbstractTagDisplayFormatter: java.lang.String toString()
androidx.constraintlayout.widget.ConstraintLayout: void setMaxHeight(int)
com.umeng.analytics.pro.an: com.umeng.analytics.pro.bp M()
com.umeng.commonsdk.statistics.proto.Gender: com.umeng.commonsdk.statistics.proto.Gender findByValue(int)
javax.xml.namespace.QName: java.lang.String toString()
com.caij.puremusic.drive.model.SubsonicPlaylist$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.caij.puremusic.drive.model.SubsonicPlaylist: int component7()
org.repackage.com.vivo.identifier.DataBaseOperation: java.lang.String a(int,java.lang.String)
org.jaudiotagger.tag.asf.AsfTag: boolean hasField(org.jaudiotagger.tag.asf.AsfFieldKey)
org.jaudiotagger.audio.asf.data.VideoStreamChunk: long getPictureHeight()
org.jaudiotagger.tag.images.ArtworkFactory: org.jaudiotagger.tag.images.Artwork getNew()
com.tencent.bugly.proguard.x: x(android.content.Context,java.util.List)
com.caij.puremusic.drive.model.DropboxDriveItem: java.lang.String component4()
com.caij.puremusic.drive.model.AlbumMetadata$Companion: AlbumMetadata$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.simpleframework.xml.transform.EnumTransform: java.lang.String write(java.lang.Object)
com.umeng.commonsdk.statistics.proto.Response$e: java.lang.String b()
org.simpleframework.xml.core.MethodScanner: void process(org.simpleframework.xml.core.MethodContact)
org.repackage.com.vivo.identifier.IdentifierIdClient: java.lang.String b()
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse$$serializer: JellyfinPlaylistsResponse$$serializer()
com.caij.puremusic.db.model.PlaylistEntityQueries$GetPlaylistEntityByIdQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.umeng.commonsdk.debug.E: E()
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: void createStructure()
com.umeng.analytics.pro.bn: com.umeng.analytics.pro.bq p()
org.simpleframework.xml.core.Source: org.simpleframework.xml.core.Instance getInstance(org.simpleframework.xml.strategy.Value)
com.caij.puremusic.db.model.SongQueries$firstSongByAlbumId$2: SongQueries$firstSongByAlbumId$2()
com.google.android.material.checkbox.MaterialCheckBox: void setStateDescription(java.lang.CharSequence)
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String component2()
com.caij.puremusic.preferences.DurationPreference: DurationPreference(android.content.Context,android.util.AttributeSet)
org.simpleframework.xml.core.MethodPart: org.simpleframework.xml.core.MethodType getMethodType()
org.jcodec.containers.mp4.boxes.DataBox: void parse(java.nio.ByteBuffer)
com.caij.puremusic.drive.model.SubPlayList: java.util.List component1()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZ(float)
org.simpleframework.xml.core.TreeModel: org.simpleframework.xml.core.Model lookup(java.lang.String,int)
org.jaudiotagger.tag.id3.framebody.FrameBodyWPAY: FrameBodyWPAY(java.nio.ByteBuffer,int)
org.jaudiotagger.tag.mp4.Mp4Tag: void deleteField(org.jaudiotagger.tag.FieldKey)
com.caij.puremusic.drive.model.WebDAVToken: java.lang.String component1()
com.google.common.hash.LittleEndianByteArray$UnsafeByteArray: void putLongLittleEndian(byte[],int,long)
org.simpleframework.xml.util.WeakCache: boolean contains(java.lang.Object)
com.tencent.mm.opensdk.diffdev.a.a$a: void onAuthFinish(com.tencent.mm.opensdk.diffdev.OAuthErrCode,java.lang.String)
androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentContainer createFragmentContainer()
com.caij.puremusic.preferences.LibraryPreference: LibraryPreference(android.content.Context,android.util.AttributeSet,int,int)
com.caij.puremusic.drive.model.SubsonicSearchListResponse: SubsonicSearchListResponse()
com.google.android.material.appbar.CollapsingToolbarLayout: int getExpandedTitleMarginStart()
com.umeng.commonsdk.statistics.proto.e$e: com.umeng.commonsdk.statistics.proto.e$e b(int)
com.caij.puremusic.drive.model.MediaStream: int hashCode()
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: boolean setNativeAppPackage(java.lang.String)
kotlin.jvm.internal.CallableReference: CallableReference()
org.jaudiotagger.audio.asf.data.ChunkContainer: void addChunk(org.jaudiotagger.audio.asf.data.Chunk)
app.cash.sqldelight.TransacterImpl: void transaction(boolean,kotlin.jvm.functions.Function1)
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: void addTextValue(java.lang.String)
com.umeng.analytics.AnalyticsConfig: java.lang.String getGameSdkVersion(android.content.Context)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyIND: void setAuthor(java.lang.String)
org.jaudiotagger.audio.asf.data.ContainerType: org.jaudiotagger.audio.asf.data.ContainerType[] getOrdered()
com.tencent.bugly.proguard.l: void a(double,int)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: void add(org.jaudiotagger.utils.tree.MutableTreeNode)
com.umeng.commonsdk.statistics.c$1: void onImprintChanged(com.umeng.commonsdk.statistics.idtracking.ImprintHandler$a)
org.jcodec.containers.mp4.boxes.TimecodeMediaInfoBox: TimecodeMediaInfoBox(org.jcodec.containers.mp4.boxes.Header)
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean sendPayReq(android.content.Context,android.os.Bundle)
com.google.android.material.search.SearchView: void setupWithSearchBar(com.google.android.material.search.SearchBar)
com.google.android.material.chip.ChipGroup: ChipGroup(android.content.Context,android.util.AttributeSet)
com.tencent.mm.opensdk.modelbiz.WXChannelBaseJumpInfo: boolean checkArgs()
org.jaudiotagger.tag.id3.AbstractTagFrame: AbstractTagFrame(org.jaudiotagger.tag.id3.AbstractTagFrame)
org.jaudiotagger.tag.id3.ID3v24PreferredFrameOrderComparator: boolean equals(java.lang.Object)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
com.umeng.commonsdk.framework.UMEnvelopeBuild: UMEnvelopeBuild()
org.jaudiotagger.tag.id3.framebody.FrameBodyTPUB: FrameBodyTPUB()
org.simpleframework.xml.core.Criteria: org.simpleframework.xml.core.Variable get(org.simpleframework.xml.core.Label)
org.simpleframework.xml.core.CompositeInlineList: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: float getPreciseLength()
com.caij.puremusic.db.model.Song: long component9()
org.simpleframework.xml.core.InstantiatorBuilder: boolean contains(java.lang.String[],java.lang.String)
com.caij.puremusic.drive.model.BaiduDriveItem: java.lang.String toString()
org.jaudiotagger.tag.datatype.Lyrics3TimeStamp: Lyrics3TimeStamp(java.lang.String)
com.caij.puremusic.drive.model.PlexPlaylistsResponse: com.caij.puremusic.drive.model.PlaylistsMediaContainer component1()
org.jaudiotagger.audio.flac.FlacTagCreator: java.nio.ByteBuffer convert(org.jaudiotagger.tag.Tag,int)
org.simpleframework.xml.core.PrimitiveScanner: org.simpleframework.xml.core.Function getReplace()
org.jaudiotagger.tag.images.Artwork: int getPictureType()
com.google.android.material.bottomsheet.BottomSheetBehavior: int addAccessibilityActionForState(android.view.View,int,int)
org.jaudiotagger.audio.asf.io.AsfStreamer: void modifyFileHeader(java.io.InputStream,java.io.OutputStream,long)
com.umeng.commonsdk.framework.UMEnvelopeBuild: boolean getTransmissionSendFlag()
com.caij.puremusic.drive.model.Media: int getDuration()
org.jaudiotagger.audio.asf.data.Chunk: long getPosition()
org.jaudiotagger.tag.datatype.AbstractDataTypeList: java.util.List getValue()
com.caij.puremusic.drive.model.Type$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
io.ktor.util.date.Month: io.ktor.util.date.Month[] values()
com.tencent.bugly.proguard.be: void c(java.lang.String)
com.caij.puremusic.drive.model.ADriveFileResponse: com.caij.puremusic.drive.model.ADriveFileResponse copy(java.lang.String,java.util.List)
androidx.activity.ComponentActivity: ComponentActivity()
com.caij.puremusic.db.model.ServerArtistCoverQueries$deleteById$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.caij.puremusic.db.model.Folder: int getType()
com.caij.puremusic.network.model.LastFmArtist$Artist$Image: java.lang.String getText()
com.umeng.commonsdk.statistics.internal.StatTracer: com.umeng.commonsdk.statistics.internal.StatTracer getInstance(android.content.Context)
org.simpleframework.xml.stream.OutputElement: java.lang.String toString()
org.jaudiotagger.audio.asf.data.StreamChunk: StreamChunk(org.jaudiotagger.audio.asf.data.GUID,java.math.BigInteger)
com.caij.puremusic.model.Genre: java.lang.String getName()
com.umeng.commonsdk.internal.utils.k: java.lang.String a()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: int getLength()
androidx.fragment.app.ListFragment: ListFragment()
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: boolean setNativeAppChannel(java.lang.String)
com.umeng.commonsdk.internal.d: org.json.JSONObject e(android.content.Context)
org.jaudiotagger.logging.XMLTagDisplayFormatter: java.lang.String xmlClose(java.lang.String)
com.afollestad.materialdialogs.LayoutMode: LayoutMode(java.lang.String,int)
com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport: java.lang.Object toJaxb()
org.jaudiotagger.tag.id3.framebody.FrameBodyRVRB: FrameBodyRVRB()
org.simpleframework.xml.core.Template: void append(org.simpleframework.xml.core.Template)
com.umeng.analytics.pro.an: com.umeng.analytics.pro.an a()
com.google.android.material.chip.Chip: void setLayoutDirection(int)
org.simpleframework.xml.core.PathParser: void attribute(int,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setMaxImageSize(int)
org.jaudiotagger.audio.wav.WavTagWriter: org.jaudiotagger.tag.wav.WavTag getExistingMetadata(java.nio.channels.FileChannel)
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
org.simpleframework.xml.transform.BigDecimalTransform: java.math.BigDecimal read(java.lang.String)
com.alipay.android.phone.mrpc.core.l: com.alipay.android.phone.mrpc.core.l a(android.content.Context)
com.google.android.material.bottomappbar.BottomAppBar: float getCradleVerticalOffset()
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence)
org.simpleframework.xml.core.Section: org.simpleframework.xml.core.Label getText()
org.simpleframework.xml.core.Scanner: org.simpleframework.xml.core.Label getText()
com.caij.puremusic.model.CategoryInfo$Creator: java.lang.Object createFromParcel(android.os.Parcel)
com.tencent.bugly.proguard.ap: byte[] a(android.os.Parcelable)
org.simpleframework.xml.core.GetPart: java.lang.String toString()
com.caij.puremusic.views.PermissionItem: PermissionItem(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.tag.id3.ID3v23Tag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
org.jaudiotagger.audio.wav.WavSubFormat: java.lang.String getDescription()
org.jcodec.containers.mp4.boxes.CompositionOffsetsBox: CompositionOffsetsBox(org.jcodec.containers.mp4.boxes.Header)
com.tencent.bugly.proguard.at: void a(long)
com.umeng.commonsdk.statistics.common.ULog: void e(java.lang.String,java.lang.Throwable)
androidx.appcompat.app.AppCompatDialog: void setTitle(int)
com.umeng.commonsdk.utils.UMUtils: java.lang.String getYunOSVersion(java.util.Properties)
org.jaudiotagger.tag.id3.ID3v1Tag: void setGenre(java.lang.String)
androidx.preference.CheckBoxPreference: CheckBoxPreference(android.content.Context)
com.caij.puremusic.drive.model.Propstat: void setStatus(java.lang.String)
org.jaudiotagger.tag.datatype.MultipleTextEncodedStringNullTerminated: byte[] writeByteArray()
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: boolean appendWholeNativeLog(java.lang.String)
org.simpleframework.xml.core.CacheLabel: org.simpleframework.xml.core.Expression getExpression()
com.google.android.material.internal.ForegroundLinearLayout: void setForegroundGravity(int)
org.jaudiotagger.audio.asf.io.MetadataReader: boolean readBoolean(java.io.InputStream,int)
com.tencent.mm.opensdk.modelbiz.WXChannelOpenFeed$Req: int getType()
com.umeng.commonsdk.statistics.proto.e: com.umeng.commonsdk.statistics.proto.e a(java.lang.String)
org.jaudiotagger.tag.id3.ID3v23Frame$EncodingFlags: void unsetEncryption()
com.umeng.analytics.pro.bu: void a(int)
org.jaudiotagger.tag.id3.ID3v11Tag: void createStructure()
org.jaudiotagger.audio.asf.data.GUID: java.lang.String toString()
com.caij.puremusic.db.model.AlbumQueries$SearchAlbumsByNameQuery: java.lang.String toString()
org.jaudiotagger.tag.datatype.BooleanString: BooleanString(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody)
com.umeng.commonsdk.statistics.common.DeviceConfig: boolean isChineseAera(android.content.Context)
com.thegrizzlylabs.sardineandroid.util.SardineUtil: javax.xml.namespace.QName toQName(org.w3c.dom.Element)
org.jaudiotagger.tag.id3.framebody.FrameBodyTEXT: java.lang.String getIdentifier()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
org.jaudiotagger.tag.id3.framebody.FrameBodyUnsupported: FrameBodyUnsupported(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setFilters(android.text.InputFilter[])
org.simpleframework.xml.Serializer: java.lang.Object read(java.lang.Object,java.io.File,boolean)
com.caij.puremusic.drive.model.ImageTags: ImageTags(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
org.jaudiotagger.tag.id3.framebody.FrameBodyPOPM: void setRating(long)
com.google.android.material.search.SearchView: java.lang.CharSequence getHint()
com.tencent.mm.opensdk.modelbiz.SubscribeMessage$Req: SubscribeMessage$Req()
com.umeng.commonsdk.stateless.b: void b()
com.caij.puremusic.drive.model.PlexUser$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.PlexUser)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.caij.puremusic.drive.model.SubPlayList: com.caij.puremusic.drive.model.SubPlayList copy(java.util.List)
org.simpleframework.xml.core.Scanner: org.simpleframework.xml.core.Instantiator getInstantiator()
com.caij.puremusic.db.model.HistoryEntityQueries: void deleteById(long)
org.simpleframework.xml.stream.OutputNode: java.lang.String getPrefix(boolean)
org.jaudiotagger.tag.id3.framebody.FrameBodyGRID: java.lang.String getIdentifier()
org.jaudiotagger.audio.asf.io.AsfHeaderReader: void setExtendedHeaderReader(org.jaudiotagger.audio.asf.io.AsfExtHeaderReader)
com.google.android.material.navigation.NavigationBarView: android.view.Menu getMenu()
com.umeng.analytics.pro.u: long a(android.content.Context)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyIND: void setupObjectList()
com.caij.puremusic.drive.model.Prop: void getGetlastmodified$annotations()
com.tencent.mm.opensdk.modelbiz.WXNontaxPay$Req: boolean checkArgs()
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: int getDefaultSampleDuration()
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
com.caij.puremusic.drive.model.ADriveItem: java.lang.String getUpdated_at()
org.jcodec.containers.mp4.boxes.MovieBox: int getTimescale()
com.google.android.material.navigation.NavigationBarMenuView: int getItemActiveIndicatorWidth()
androidx.core.widget.TextViewCompat$Api23Impl: int getHyphenationFrequency(android.widget.TextView)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()
com.caij.puremusic.db.model.SongEntityQueries$GetPlayListSongCountQuery: java.lang.String toString()
com.umeng.analytics.pro.an: boolean C()
com.caij.puremusic.drive.model.PlaylistMetadata: void write$Self(com.caij.puremusic.drive.model.PlaylistMetadata,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
androidx.appcompat.app.AppCompatDialogFragment: AppCompatDialogFragment()
com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextSize(float)
org.jaudiotagger.audio.aiff.chunk.CommonChunk: CommonChunk(org.jaudiotagger.audio.iff.ChunkHeader,java.nio.ByteBuffer,org.jaudiotagger.audio.aiff.AiffAudioHeader)
org.simpleframework.xml.stream.OutputElement: org.simpleframework.xml.stream.OutputNode setAttribute(java.lang.String,java.lang.String)
com.google.common.hash.BloomFilterStrategies: com.google.common.hash.BloomFilterStrategies[] values()
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyTextInfo: AbstractFrameBodyTextInfo()
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyPairs: void write(java.io.ByteArrayOutputStream)
com.caij.puremusic.db.model.SongQueries$SongsByNameArtistQuery: java.lang.String getValue()
com.alipay.android.phone.mrpc.core.b$b: boolean a(com.alipay.android.phone.mrpc.core.b$b)
com.tencent.mm.opensdk.modelmsg.WXDesignerSharedObject: boolean checkArgs()
org.jaudiotagger.tag.id3.ID3v1Tag: ID3v1Tag(org.jaudiotagger.tag.id3.ID3v1Tag)
com.google.android.material.appbar.CollapsingToolbarLayout: void setRtlTextDirectionHeuristicsEnabled(boolean)
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean access$400(com.google.android.material.bottomsheet.BottomSheetBehavior)
org.jaudiotagger.tag.mp4.field.Mp4TagRawBinaryField: boolean isEmpty()
com.tencent.bugly.proguard.at$3: void run()
org.simpleframework.xml.core.TemplateFilter: java.lang.String replace(java.lang.String)
org.jcodec.containers.mp4.boxes.CleanApertureExtension: java.lang.String fourcc()
com.heinrichreimersoftware.materialintro.view.InkPageIndicator: void setCurrentPageIndicatorColor(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyTOWN: FrameBodyTOWN(byte,java.lang.String)
com.caij.puremusic.drive.model.SubsonicPlaylist: java.lang.String component4()
com.tencent.bugly.proguard.ad: void a(java.io.Closeable)
com.thegrizzlylabs.sardineandroid.model.Supportedlock: java.util.List getLockentryList()
androidx.cardview.widget.CardView: void setCardBackgroundColor(int)
com.caij.puremusic.drive.model.PlayListSubsonicResponse: void write$Self(com.caij.puremusic.drive.model.PlayListSubsonicResponse,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.alipay.apmobilesecuritysdk.d.d: java.util.Map a(android.content.Context)
org.jaudiotagger.audio.asf.data.FileHeader: long getFlags()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: AbstractID3v2Tag()
org.jaudiotagger.tag.id3.framebody.FrameBodyRBUF: FrameBodyRBUF(byte,boolean,byte)
org.simpleframework.xml.core.TextListLabel: boolean isInline()
org.jaudiotagger.tag.mp4.Mp4ContentTypeValue: java.lang.String getIdAsString()
org.jaudiotagger.tag.images.AndroidArtwork: org.jaudiotagger.tag.images.AndroidArtwork createArtworkFromFile(java.io.File)
org.jaudiotagger.utils.tree.DefaultTreeModel: void setRoot(org.jaudiotagger.utils.tree.TreeNode)
org.simpleframework.xml.core.GroupExtractor: java.lang.String[] getPaths()
com.umeng.analytics.pro.ci: int h()
com.caij.puremusic.drive.model.PlexSectionsResponse: com.caij.puremusic.drive.model.FMediaContainer component1()
com.caij.puremusic.drive.model.GoogleDriveFile: java.lang.String component2()
com.umeng.commonsdk.statistics.proto.d$e: com.umeng.commonsdk.statistics.proto.d$e a(int)
org.simpleframework.xml.core.LabelExtractor: LabelExtractor(org.simpleframework.xml.stream.Format)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
org.simpleframework.xml.stream.CamelCaseBuilder$Attribute: void commit(char[],int,int)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyNumberTotal: void setText(java.lang.String)
org.simpleframework.xml.stream.PullReader$End: boolean isEnd()
com.caij.puremusic.drive.model.SubPlayList$Companion: kotlinx.serialization.KSerializer serializer()
com.tencent.mm.opensdk.modelbiz.WXQRCodePay$Resp: WXQRCodePay$Resp()
com.caij.puremusic.drive.model.AlbumSubsonicResponse$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.bumptech.glide.Registry$NoImageHeaderParserException: Registry$NoImageHeaderParserException()
org.jaudiotagger.tag.id3.AbstractID3Tag: java.lang.String getIdentifier()
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: void setActions(android.media.session.PlaybackState$Builder,long)
com.umeng.analytics.pro.i: void a(org.json.JSONObject,java.lang.String)
com.caij.puremusic.model.DriveFileParcelable: java.lang.String component10()
org.jaudiotagger.audio.asf.io.StreamChunkReader: StreamChunkReader()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: long getV2TagSizeIfExists(java.io.File)
com.umeng.analytics.pro.ca: java.util.BitSet b(int)
com.caij.puremusic.network.model.Artist: java.lang.String getType()
com.tencent.bugly.proguard.ap: java.lang.String d(java.lang.String,java.lang.String)
com.caij.puremusic.model.Playlist$Companion: Playlist$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.SwitchCompat$Api18Impl: void setAutoCancel(android.animation.ObjectAnimator,boolean)
com.caij.puremusic.db.model.AlbumQueries$album$1: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.drive.model.Media: java.lang.String toString()
org.jaudiotagger.audio.flac.FlacInfoReader: int computeBitrate(long,float)
androidx.core.view.ViewCompat$Api26Impl: void setImportantForAutofill(android.view.View,int)
com.umeng.commonsdk.statistics.common.ReportPolicy: boolean isValid(int)
com.umeng.commonsdk.statistics.proto.d: int f()
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
org.simpleframework.xml.core.PathParser: java.lang.String toString()
com.caij.puremusic.drive.model.MediaInfoWrapper: java.util.List getAlbums()
cn.lyric.getter.api.tools.EventTools: void stopLyric(android.content.Context)
org.jaudiotagger.tag.id3.ID3v23Tag: void addFrame(org.jaudiotagger.tag.id3.AbstractID3v2Frame)
com.tencent.bugly.proguard.aa: java.lang.String e()
com.caij.puremusic.drive.model.DropboxDriveItem: java.lang.String component1()
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
com.caij.vip.DonatedActivity: DonatedActivity()
org.jaudiotagger.tag.wav.WavTag: boolean isInfoTag()
org.jaudiotagger.audio.flac.metadatablock.BlockType: org.jaudiotagger.audio.flac.metadatablock.BlockType[] values()
org.jcodec.containers.mp4.boxes.EditListBox: java.lang.String fourcc()
com.caij.puremusic.drive.model.MediaInfoWrapper: java.util.List getPlaylistEntities()
com.caij.puremusic.db.model.SearchAlbumResultQueries: app.cash.sqldelight.db.SqlDriver access$getDriver(com.caij.puremusic.db.model.SearchAlbumResultQueries)
com.umeng.commonsdk.statistics.proto.b: com.umeng.commonsdk.statistics.proto.b$e b(int)
androidx.core.view.AccessibilityDelegateCompat: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
com.caij.puremusic.drive.model.AMetadata: java.lang.String getSummary()
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.alipay.android.phone.mrpc.core.i: com.alipay.android.phone.mrpc.core.aa c()
com.tencent.mm.opensdk.modelmsg.GetMessageFromWX$Resp: GetMessageFromWX$Resp(android.os.Bundle)
org.simpleframework.xml.core.MethodPartFactory: org.simpleframework.xml.core.MethodType getMethodType(java.lang.reflect.Method)
com.caij.puremusic.drive.model.Media$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.caij.puremusic.drive.model.AlbumItem: long component5()
org.jaudiotagger.tag.flac.FlacTag: java.lang.String getFirst(java.lang.String)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: void createDirectory(java.lang.String)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: void setVendor(java.lang.String)
com.tencent.bugly.proguard.aa: void c(java.lang.String)
org.simpleframework.xml.transform.BooleanTransform: BooleanTransform()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void createStructureBody()
org.jaudiotagger.tag.asf.AsfTagCoverField: void processRawContent()
com.caij.puremusic.drive.model.BaiduDriveItem: java.lang.String component9()
org.jaudiotagger.audio.mp4.ReplaceMP4Editor: void copy(java.nio.channels.FileChannel,java.nio.channels.FileChannel,org.jcodec.containers.mp4.boxes.MovieBox)
org.jaudiotagger.tag.id3.framebody.FrameBodyTENC: java.lang.String getIdentifier()
com.alipay.android.phone.mrpc.core.b: java.lang.String a(org.apache.http.client.methods.HttpUriRequest)
org.jaudiotagger.tag.id3.framebody.AbstractID3v2FrameBody: java.lang.String getIdentifier()
com.tencent.bugly.CrashModule: void init(android.content.Context,boolean,com.tencent.bugly.BuglyStrategy)
com.caij.puremusic.db.model.SongQueries$SongsDateLastDescQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.google.android.material.bottomsheet.BottomSheetBehavior: void setStateInternal(int)
org.jaudiotagger.tag.datatype.ID3v2LyricLine: byte[] writeByteArray()
com.caij.puremusic.preferences.NowPlayingScreenPreference: NowPlayingScreenPreference(android.content.Context,android.util.AttributeSet,int,int)
org.simpleframework.xml.core.DefaultDetail: java.lang.reflect.Constructor[] getConstructors()
org.jaudiotagger.audio.aiff.chunk.TextChunk: java.lang.String readChunkText()
com.tencent.bugly.BuglyStrategy: boolean recordUserInfoOnceADay()
com.google.android.material.appbar.CollapsingToolbarLayout: void setScrimAlpha(int)
com.umeng.commonsdk.debug.UMLog: com.umeng.commonsdk.debug.UInterface getLogger(int)
org.simpleframework.xml.transform.RegistryMatcher: org.simpleframework.xml.transform.Transform create(java.lang.Class,java.lang.Class)
androidx.fragment.app.Fragment: boolean getAllowReturnTransitionOverlap()
org.jaudiotagger.audio.mp4.EncoderType: org.jaudiotagger.audio.mp4.EncoderType[] values()
com.caij.puremusic.db.model.AlbumQueries: app.cash.sqldelight.Query album(long)
com.caij.lib.lifemanager.ProcessProvider: ProcessProvider()
org.jcodec.containers.mp4.boxes.SegmentTypeBox: int estimateSize()
com.umeng.analytics.pro.az: int getValue()
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query songsByNameArtist(java.lang.String,java.lang.String,kotlin.jvm.functions.Function18)
org.jaudiotagger.tag.id3.AbstractID3v2Frame: byte[] getRawContent()
org.simpleframework.xml.core.ElementListParameter: java.lang.String toString()
com.caij.puremusic.drive.model.PlayListsResponse$$serializer: com.caij.puremusic.drive.model.PlayListsResponse deserialize(kotlinx.serialization.encoding.Decoder)
com.tencent.mm.opensdk.modelbiz.WXChannelOpenEvent$Resp: void fromBundle(android.os.Bundle)
com.tencent.mm.opensdk.modelbiz.ChooseCardFromWXCardPackage$Resp: ChooseCardFromWXCardPackage$Resp(android.os.Bundle)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(android.content.res.ColorStateList)
com.tencent.mm.opensdk.modelbiz.WXInvoiceAuthInsert$Req: boolean checkArgs()
androidx.preference.SeekBarPreference: SeekBarPreference(android.content.Context,android.util.AttributeSet,int,int)
com.alipay.sdk.app.PayTask: java.lang.String fetchOrderInfoFromH5PayUrl(java.lang.String)
com.caij.puremusic.network.model.SearchResponse: com.caij.puremusic.network.model.ArtistWrapper component1()
com.caij.puremusic.db.model.SearchAlbumResultQueries$GetByIdQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.jaudiotagger.audio.generic.Utils: java.nio.ByteBuffer read(java.nio.ByteBuffer,int)
org.simpleframework.xml.stream.EventToken: java.util.Iterator iterator()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: boolean isId3Tag(java.io.RandomAccessFile)
com.google.android.material.bottomsheet.BottomSheetDragHandleView: boolean expandOrCollapseBottomSheetIfPossible()
org.jaudiotagger.audio.wav.WavTagReader: org.jaudiotagger.tag.wav.WavTag read(java.nio.channels.FileChannel)
com.tencent.bugly.proguard.bp: void a(com.tencent.bugly.proguard.k)
org.jaudiotagger.tag.id3.framebody.FrameBodySYLT: FrameBodySYLT(org.jaudiotagger.tag.id3.framebody.FrameBodySYLT)
com.umeng.analytics.pro.as: int b(int,int)
org.jaudiotagger.tag.datatype.ID3v2LyricLine: int getSize()
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$BreadthFirstEnumeration$Queue: java.lang.Object firstObject()
com.tencent.mm.opensdk.modelmsg.SendMessageToWX$Resp: boolean checkArgs()
com.google.android.material.bottomappbar.BottomAppBar: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.tencent.bugly.proguard.k: k()
org.jaudiotagger.audio.mp3.MP3File: void setID3v1Tag(org.jaudiotagger.tag.id3.AbstractTag)
org.jaudiotagger.tag.id3.framebody.FrameBodyTFLT: FrameBodyTFLT(org.jaudiotagger.tag.id3.framebody.FrameBodyTFLT)
org.simpleframework.xml.core.Contact: java.lang.Class[] getDependents()
com.tencent.mm.opensdk.modelbiz.ChooseCardFromWXCardPackage$Resp: void toBundle(android.os.Bundle)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
org.simpleframework.xml.core.Signature: void add(org.simpleframework.xml.core.Parameter)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnClickListener(android.view.View$OnClickListener)
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query songsByArtistIdWithLike(java.lang.String,java.lang.String,java.lang.String,java.lang.String,kotlin.jvm.functions.Function18)
com.caij.vip.DefaultPayTypeResponse: DefaultPayTypeResponse()
org.jaudiotagger.tag.id3.ID3v23Tag: java.util.List getArtworkList()
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
org.jcodec.containers.mp4.boxes.MovieFragmentBox: org.jcodec.containers.mp4.boxes.TrackFragmentBox[] getTracks()
org.jaudiotagger.audio.generic.AudioFileModificationListener: void vetoThrown(org.jaudiotagger.audio.generic.AudioFileModificationListener,org.jaudiotagger.audio.AudioFile,org.jaudiotagger.audio.exceptions.ModifyVetoException)
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessView$Req: int getType()
org.jaudiotagger.tag.datatype.AbstractDataTypeList: org.jaudiotagger.tag.datatype.AbstractDataType createListElement()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] $values()
com.alipay.android.phone.mrpc.core.z: z(com.alipay.android.phone.mrpc.core.x)
com.umeng.commonsdk.statistics.proto.e$a: void b(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
com.google.common.collect.MapMakerInternalMap$Strength$1: com.google.common.base.Equivalence defaultEquivalence()
com.caij.puremusic.db.model.Album$Adapter: app.cash.sqldelight.ColumnAdapter getSongCountAdapter()
com.tencent.bugly.proguard.w: com.tencent.bugly.proguard.y a(android.database.Cursor)
com.caij.puremusic.network.model.TokenData: java.lang.Long component3()
org.simpleframework.xml.stream.Format: Format(int,org.simpleframework.xml.stream.Verbosity)
com.umeng.analytics.pro.an: com.umeng.analytics.pro.an e(java.lang.String)
com.umeng.analytics.pro.a$a: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
com.alipay.android.phone.mrpc.core.b: java.io.InputStream a(org.apache.http.HttpEntity)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.google.android.material.button.MaterialButton: void setPressed(boolean)
org.jcodec.containers.mp4.MP4Util: org.jcodec.containers.mp4.MP4Util$Atom getMoov(java.util.List)
org.jaudiotagger.audio.asf.data.FileHeader: java.math.BigInteger getTimeEndPos()
com.google.common.base.Equivalence$Equals: Equivalence$Equals()
org.jaudiotagger.audio.aiff.AiffInfoReader: boolean readChunk(java.nio.channels.FileChannel,org.jaudiotagger.audio.aiff.AiffAudioHeader,java.lang.String)
org.jaudiotagger.tag.images.StandardArtwork: java.lang.String getMimeType()
org.simpleframework.xml.core.PrimitiveScanner: org.simpleframework.xml.core.Decorator getDecorator()
com.tencent.bugly.R: R()
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: java.lang.String formatDateAsYear(java.util.Date)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipIcon()
com.umeng.commonsdk.statistics.common.DeviceConfig: boolean isEmui(java.util.Properties)
androidx.customview.view.AbsSavedState$1: AbsSavedState$1()
nl.adaptivity.xmlutil.XmlStreaming$serviceLoader$2: XmlStreaming$serviceLoader$2()
org.jaudiotagger.tag.lyrics3.Lyrics3v1: Lyrics3v1(java.nio.ByteBuffer)
com.caij.puremusic.drive.model.Response: java.lang.String getStatus()
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: int getSiblingCount()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageDrawable(android.graphics.drawable.Drawable)
org.simpleframework.xml.core.InstantiatorBuilder: void validateAnnotations(org.simpleframework.xml.core.Label,org.simpleframework.xml.core.Parameter)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorScheme(int[])
org.jaudiotagger.tag.id3.ID3v23PreferredFrameOrderComparator: int compare(java.lang.Object,java.lang.Object)
org.simpleframework.xml.core.ElementMapParameter: boolean isPrimitive()
com.google.android.material.slider.Slider: int getActiveThumbIndex()
org.simpleframework.xml.transform.ShortTransform: java.lang.String write(java.lang.Short)
com.tencent.bugly.crashreport.CrashReport: void setAppPackage(android.content.Context,java.lang.String)
com.caij.puremusic.drive.model.PlexLoginResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.PlexLoginResponse)
com.tencent.bugly.proguard.u: java.util.List d(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyTIT3: FrameBodyTIT3(byte,java.lang.String)
com.caij.puremusic.views.BreadCrumbLayout: void setDeactivatedContentColor(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyPRIV: FrameBodyPRIV(org.jaudiotagger.tag.id3.framebody.FrameBodyPRIV)
com.alipay.sdk.app.PayTask: PayTask(android.app.Activity)
com.caij.puremusic.drive.model.PlexUser: PlexUser(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
org.jaudiotagger.tag.flac.FlacTag: org.jaudiotagger.tag.TagField getFirstField(java.lang.String)
androidx.core.view.ViewCompat$Api18Impl: void setClipBounds(android.view.View,android.graphics.Rect)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyUnsupported: FieldFrameBodyUnsupported()
com.caij.puremusic.db.model.SongQueries$SongsByAlumQuery: void removeListener(app.cash.sqldelight.Query$Listener)
org.jaudiotagger.tag.reference.ISOCountry$Country: java.lang.String toString()
org.jaudiotagger.audio.asf.io.MetadataReader: org.jaudiotagger.audio.asf.data.GUID[] getApplyingIds()
androidx.constraintlayout.widget.ConstraintLayout: int getMaxHeight()
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
org.jcodec.containers.mp4.boxes.TrakBox: void setName(java.lang.String)
org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId: java.lang.String d()
org.jaudiotagger.tag.id3.framebody.FrameBodyRBUF: FrameBodyRBUF()
org.jaudiotagger.tag.TagOptionSingleton: boolean isId3v2PaddingWillShorten()
com.caij.puremusic.network.model.SearchResponse: boolean equals(java.lang.Object)
com.caij.puremusic.network.model.TokenStore: android.content.SharedPreferences getSharedPreferences()
com.umeng.analytics.b: void a(android.content.Context,java.lang.String,java.util.Map,long)
com.umeng.analytics.pro.bo$a: com.umeng.analytics.pro.bu a(com.umeng.analytics.pro.ci)
com.umeng.commonsdk.utils.UMUtils: boolean isApplication(android.content.Context)
org.simpleframework.xml.stream.NodeReader: boolean isName(org.simpleframework.xml.stream.EventNode,java.lang.String)
com.caij.puremusic.views.SettingListItemView: SettingListItemView(android.content.Context,android.util.AttributeSet)
org.simpleframework.xml.core.TextLabel: java.lang.String getPath()
com.google.android.material.search.SearchView: void setSearchPrefixText(java.lang.CharSequence)
org.jaudiotagger.audio.generic.Utils: java.lang.Object newInstance(java.lang.Class,java.lang.Object[])
com.tencent.mm.opensdk.modelbiz.WXChannelOpenProfile$Resp: WXChannelOpenProfile$Resp(android.os.Bundle)
com.caij.puremusic.drive.model.WebDAVToken: java.lang.String toString()
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: com.umeng.commonsdk.statistics.proto.d a(com.umeng.commonsdk.statistics.proto.d,com.umeng.commonsdk.statistics.proto.d,java.util.Map)
com.umeng.commonsdk.statistics.proto.a$d: com.umeng.analytics.pro.cc b()
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies: CycleDetectingLockFactory$Policies(java.lang.String,int)
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessView$Req: void toBundle(android.os.Bundle)
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: long access$002(org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox,long)
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportDaily: ReportPolicy$ReportDaily(com.umeng.commonsdk.statistics.internal.StatTracer)
com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)
com.caij.puremusic.drive.model.DavResource: DavResource(com.caij.puremusic.drive.model.Response)
com.caij.puremusic.drive.model.AlbumMediaContainer: AlbumMediaContainer(java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.umeng.analytics.pro.bu: com.umeng.analytics.pro.ci C()
com.umeng.analytics.pro.aw$a: aw$a()
com.caij.puremusic.db.model.SongQueries$allSongs$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.caij.puremusic.drive.model.Media$Companion: Media$Companion()
kotlin.collections.AbstractList: AbstractList()
org.jaudiotagger.tag.datatype.StringHashMap: boolean equals(java.lang.Object)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: java.lang.String toString()
org.jcodec.containers.mp4.boxes.NameBox: NameBox(org.jcodec.containers.mp4.boxes.Header)
org.jaudiotagger.audio.asf.data.FileHeader: long getUncompressedFrameSize()
com.caij.puremusic.db.model.ServerLyricsQueries$GetByIdQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
com.caij.puremusic.network.model.Artist: void setExternal_urls(java.util.Map)
org.jcodec.containers.mp4.boxes.MovieFragmentBox: org.jcodec.containers.mp4.boxes.MovieFragmentBox createMovieFragmentBox()
com.caij.puremusic.drive.model.ADriveFileResponse: ADriveFileResponse(int,java.lang.String,java.util.List,kotlinx.serialization.internal.SerializationConstructorMarker)
com.umeng.analytics.pro.f: f(android.content.Context,java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int,com.umeng.analytics.pro.f$1)
com.google.android.material.theme.MaterialComponentsViewInflater: MaterialComponentsViewInflater()
org.jaudiotagger.tag.Tag: void deleteArtworkField()
org.jaudiotagger.tag.id3.framebody.FrameBodyUFID: void setupObjectList()
com.caij.puremusic.drive.model.PlexSongsResponse: com.caij.puremusic.drive.model.MediaContainer component1()
androidx.core.view.ViewCompat$Api26Impl: void setFocusedByDefault(android.view.View,boolean)
com.caij.puremusic.db.model.SongQueries$SongsByTitleQuery: java.lang.String getValue()
com.tencent.bugly.proguard.at: void d()
com.umeng.analytics.process.UMProcessDBDatasSender$ReplaceCallback: boolean onFileLock(java.io.File,int)
org.simpleframework.xml.core.ElementMapLabel: org.simpleframework.xml.core.Expression getExpression()
org.jaudiotagger.tag.asf.AsfTag: java.util.List getAll(org.jaudiotagger.tag.FieldKey)
androidx.core.widget.PopupWindowCompat$Api19Impl: void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
com.caij.puremusic.db.model.ServerLyricsQueries$deleteSongBySource$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.simpleframework.xml.stream.OutputNode: void remove()
org.simpleframework.xml.core.Revision: Revision()
com.umeng.commonsdk.statistics.common.ReportPolicy$SmartPolicy: boolean shouldSendMessage(boolean)
org.jaudiotagger.audio.ogg.util.OggPageHeader$PacketStartAndLength: int getStartPosition()
com.umeng.commonsdk.internal.d: org.json.JSONObject f(android.content.Context)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyLYR: FieldFrameBodyLYR(org.jaudiotagger.tag.lyrics3.FieldFrameBodyLYR)
org.jcodec.containers.mp4.boxes.TrakBox: org.jcodec.containers.mp4.boxes.SampleToChunkBox getStsc()
com.umeng.commonsdk.internal.c$3: c$3(android.content.Context)
com.google.android.material.textfield.MaterialAutoCompleteTextView: android.content.res.ColorStateList getSimpleItemSelectedRippleColor()
com.caij.puremusic.db.model.ArtistQueries$artistById$1: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.drive.model.JellyfinArtistResponse: JellyfinArtistResponse(java.util.List,int,int)
com.caij.puremusic.db.model.PlaybackSong: long getSongId()
com.caij.puremusic.db.model.ArtistQueries$deleteArtistById$2: void invoke(kotlin.jvm.functions.Function1)
com.umeng.commonsdk.statistics.common.MLog: void w(java.util.Locale,java.lang.String,java.lang.Object[])
org.simpleframework.xml.stream.EventNode: java.lang.String getValue()
com.umeng.analytics.pro.l$1: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.tencent.mm.opensdk.modelmsg.SendAuth$Options: void fromBundle(android.os.Bundle)
org.simpleframework.xml.core.Persister: Persister(org.simpleframework.xml.filter.Filter,org.simpleframework.xml.transform.Matcher)
androidx.gridlayout.widget.GridLayout: void setRowCount(int)
com.caij.puremusic.db.model.ServerArtistCoverQueries$deleteSongBySource$1: ServerArtistCoverQueries$deleteSongBySource$1(long)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior(android.content.Context,android.util.AttributeSet)
com.tencent.mm.opensdk.modelmsg.WXFileObject: WXFileObject()
org.jaudiotagger.audio.generic.Utils: long getLongLE(byte[],int,int)
com.caij.puremusic.network.model.TokenStore: TokenStore()
com.caij.puremusic.db.model.DriveFileDownUrlInfo: boolean equals(java.lang.Object)
org.jaudiotagger.audio.wav.WavTagWriter: boolean isInfoTagAtEndOfFileAllowingForPaddingByte(org.jaudiotagger.tag.wav.WavTag,java.nio.channels.FileChannel)
com.umeng.analytics.pro.c: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory,android.database.DatabaseErrorHandler)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
com.umeng.commonsdk.statistics.internal.a: boolean d(java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyTIT3: FrameBodyTIT3(java.nio.ByteBuffer,int)
org.jaudiotagger.audio.aiff.chunk.AuthorChunk: AuthorChunk(org.jaudiotagger.audio.iff.ChunkHeader,java.nio.ByteBuffer,org.jaudiotagger.audio.aiff.AiffAudioHeader)
org.simpleframework.xml.core.AttributeParameter$Contact: java.lang.String getName()
com.umeng.commonsdk.statistics.idtracking.h: h(android.content.Context)
com.google.android.material.navigation.NavigationBarMenuView: void setItemIconSize(int)
com.umeng.analytics.pro.ah: java.lang.String a(android.content.Context)
com.caij.puremusic.db.model.ServerSongCoverQueries$getBySource$2: ServerSongCoverQueries$getBySource$2()
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int)
org.jcodec.containers.mp4.boxes.MetaValue: boolean isInt()
org.jaudiotagger.utils.tree.TreeModelListener: void treeStructureChanged(org.jaudiotagger.utils.tree.TreeModelEvent)
org.jaudiotagger.tag.Tag: org.jaudiotagger.tag.TagField getFirstField(org.jaudiotagger.tag.FieldKey)
com.thegrizzlylabs.sardineandroid.model.Lockscope: com.thegrizzlylabs.sardineandroid.model.Exclusive getExclusive()
com.caij.puremusic.views.TopAppBarLayout: void setTitle(java.lang.String)
org.jaudiotagger.audio.ogg.OggVorbisTagWriter: void delete(java.io.RandomAccessFile,java.io.RandomAccessFile)
org.simpleframework.xml.stream.OutputBuffer: void append(char[])
com.caij.puremusic.db.model.PlayCountEntityQueries$insert$2: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.tag.datatype.Lyrics3Image: boolean equals(java.lang.Object)
com.caij.puremusic.drive.model.BaiduDriveItem: long getFs_id()
com.thegrizzlylabs.sardineandroid.model.CurrentUserPrivilegeSet: CurrentUserPrivilegeSet()
org.jcodec.containers.mp4.boxes.EsdsBox$ES: void doWrite(java.nio.ByteBuffer)
org.simpleframework.xml.core.ElementParameter: java.lang.Class getType()
org.simpleframework.xml.stream.OutputStack: org.simpleframework.xml.stream.OutputNode pop()
com.google.common.hash.LittleEndianByteArray$JavaLittleEndianBytes: void putLongLittleEndian(byte[],int,long)
androidx.cardview.widget.CardView: void setMaxCardElevation(float)
com.caij.puremusic.db.model.ServerArtistCoverQueries: app.cash.sqldelight.db.SqlDriver access$getDriver(com.caij.puremusic.db.model.ServerArtistCoverQueries)
org.simpleframework.xml.core.Persister: Persister(org.simpleframework.xml.strategy.Strategy,java.util.Map,org.simpleframework.xml.stream.Format)
com.caij.puremusic.db.model.SongQueries$firstSongByAlbumId$1: SongQueries$firstSongByAlbumId$1(kotlin.jvm.functions.Function18,com.caij.puremusic.db.model.SongQueries)
org.simpleframework.xml.core.CompositeArray: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object)
com.umeng.commonsdk.config.FieldManager$a: com.umeng.commonsdk.config.FieldManager a()
com.google.android.material.chip.Chip: com.google.android.material.resources.TextAppearance getTextAppearance()
com.caij.puremusic.drive.model.PlaylistResponse: com.caij.puremusic.drive.model.PlayListSubsonicResponse getSubsonicResponse()
org.jaudiotagger.tag.asf.AbstractAsfTagImageField: int getImageDataSize()
com.thegrizzlylabs.sardineandroid.model.Prop: com.thegrizzlylabs.sardineandroid.model.Resourcetype getResourcetype()
androidx.fragment.app.Fragment: java.lang.String getString(int)
com.umeng.commonsdk.UMConfigure: void setCheckDevice(boolean)
com.alipay.apmobilesecuritysdk.e.i: java.lang.String e()
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(int)
org.simpleframework.xml.stream.PullReader$Text: boolean isText()
com.caij.puremusic.drive.model.BaiduDriveItem$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: int estimateSize()
com.caij.puremusic.drive.model.OneDriveFileResponse$$serializer: OneDriveFileResponse$$serializer()
com.tencent.bugly.proguard.ab: boolean n()
org.simpleframework.xml.core.VersionLabel: java.lang.Object getEmpty(org.simpleframework.xml.core.Context)
com.caij.puremusic.model.Playlist$Creator: java.lang.Object createFromParcel(android.os.Parcel)
androidx.core.text.TextUtilsCompat$Api17Impl: int getLayoutDirectionFromLocale(java.util.Locale)
com.caij.puremusic.drive.model.SubsonicSong: SubsonicSong(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,long,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] $values()
com.caij.puremusic.db.model.SongQueries$songsByAlbumId$2: com.caij.puremusic.db.model.Song invoke(long,java.lang.String,int,int,long,java.lang.String,java.lang.String,long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,long,long)
com.tencent.bugly.BuglyStrategy: void setReplaceOldChannel(boolean)
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getPrefixTextView()
org.jaudiotagger.tag.id3.framebody.FrameBodyTDAT: void setMonthOnly(boolean)
com.thegrizzlylabs.sardineandroid.model.Propfind: com.thegrizzlylabs.sardineandroid.model.Allprop getAllprop()
com.caij.puremusic.db.model.PlaylistEntityQueries$deleteById$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.tencent.bugly.proguard.f: java.lang.String a(byte[])
org.jaudiotagger.logging.XMLTagDisplayFormatter: void openHeadingElement(java.lang.String,boolean)
com.alipay.sdk.m.r.a: com.alipay.sdk.m.r.a[] values()
com.umeng.analytics.pro.f: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)
com.umeng.commonsdk.statistics.proto.b: com.umeng.commonsdk.statistics.proto.b a(java.lang.String)
com.alipay.android.phone.mrpc.core.d: org.apache.http.protocol.HttpContext createHttpContext()
org.jaudiotagger.tag.asf.AsfTagTextField: void setContent(java.lang.String)
org.simpleframework.xml.core.ModelSection: ModelSection(org.simpleframework.xml.core.Model)
com.google.android.material.checkbox.MaterialCheckBox: java.lang.String getButtonStateDescription()
org.simpleframework.xml.core.VersionLabel: boolean isAttribute()
com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()
com.caij.puremusic.MainModuleKt$networkModule$1$3: MainModuleKt$networkModule$1$3()
org.simpleframework.xml.core.ElementListUnionLabel: java.lang.String toString()
org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Object,org.simpleframework.xml.stream.InputNode,boolean)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
org.simpleframework.xml.core.ElementUnionParameter: org.simpleframework.xml.core.Expression getExpression()
com.yalantis.ucrop.view.OverlayView: void setCircleDimmedLayer(boolean)
org.simpleframework.xml.core.ElementMapUnionParameter: java.lang.Object getKey()
com.heinrichreimersoftware.materialintro.view.FadeableViewPager: FadeableViewPager(android.content.Context,android.util.AttributeSet)
com.tencent.bugly.proguard.i: com.tencent.bugly.proguard.i a(java.util.Map,java.lang.String)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: java.lang.String readMd5()
com.tencent.bugly.proguard.au: com.tencent.bugly.proguard.au a(android.content.Context)
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: java.lang.String getUserFriendlyValue()
org.simpleframework.xml.core.CacheLabel: java.lang.Class getType()
com.google.android.material.search.SearchBar: java.lang.CharSequence getHint()
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportStrategy: ReportPolicy$ReportStrategy()
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag valueOf(java.lang.String)
org.jaudiotagger.tag.id3.ID3v11Tag: byte getRevision()
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int getChannelMode()
com.umeng.analytics.vshelper.a: void customPageBegin(java.lang.String)
com.umeng.commonsdk.utils.UMUtils: void setUUIDForZid(android.content.Context)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: boolean isValid()
org.jaudiotagger.tag.id3.framebody.FrameBodyTPE3: FrameBodyTPE3()
org.jaudiotagger.tag.datatype.AbstractDataType: boolean equals(java.lang.Object)
org.jaudiotagger.tag.id3.ID3v1TagField: java.lang.String getId()
com.caij.puremusic.db.model.PlayCountEntityQueries$playCountSongs$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.tag.mp4.field.Mp4TagCoverField: java.lang.String toString()
org.jaudiotagger.tag.reference.MusicalKey: org.jaudiotagger.tag.reference.MusicalKey valueOf(java.lang.String)
org.simpleframework.xml.core.ElementListUnionLabel: java.lang.String getPath()
com.umeng.analytics.pro.bo: java.nio.ByteBuffer A()
org.simpleframework.xml.stream.StreamReader: org.simpleframework.xml.stream.StreamReader$Start start(javax.xml.stream.events.XMLEvent)
com.caij.puremusic.db.model.SongEntity: int hashCode()
com.umeng.commonsdk.statistics.proto.d$d: com.umeng.analytics.pro.cc b()
org.jcodec.containers.mp4.boxes.UdtaBox: org.jcodec.containers.mp4.boxes.Box lambda$setFactory$0(org.jcodec.containers.mp4.IBoxFactory,org.jcodec.containers.mp4.boxes.Header)
com.umeng.umzid.R$string: R$string()
androidx.lifecycle.ProcessLifecycleOwner$3: ProcessLifecycleOwner$3(androidx.lifecycle.ProcessLifecycleOwner)
com.caij.puremusic.db.model.SongEntityQueries: app.cash.sqldelight.Query songsFromPlaylist(long)
com.caij.puremusic.network.model.LastFmAlbum$Album: void setName(java.lang.String)
org.simpleframework.xml.core.ElementArrayLabel: java.lang.String toString()
org.jaudiotagger.tag.id3.ID3Tags: boolean isID3v23FrameIdentifier(java.lang.String)
org.jcodec.containers.mp4.MP4Util$Atom: long getOffset()
org.jaudiotagger.tag.id3.AbstractID3v2Tag$FrameAndSubId: java.lang.String getFrameId()
org.simpleframework.xml.transform.GregorianCalendarTransform: java.lang.Object read(java.lang.String)
org.repackage.com.zui.opendeviceidlibrary.BuildConfig: BuildConfig()
com.caij.puremusic.drive.model.SubsonicSong$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.tag.aiff.AiffTag: java.lang.String getFirst(org.jaudiotagger.tag.FieldKey)
org.simpleframework.xml.core.CompositeMap: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object)
org.jcodec.containers.mp4.boxes.EsdsBox$SL: int tag()
com.umeng.analytics.pro.ar: void a(android.app.Activity)
com.caij.puremusic.db.model.SongEntityQueries$deleteSongFromPlaylist$2: void invoke(kotlin.jvm.functions.Function1)
com.caij.puremusic.fragments.player.gradient.GradientPlayerFragment: GradientPlayerFragment()
org.jaudiotagger.tag.id3.framebody.FrameBodyXSOA: FrameBodyXSOA(org.jaudiotagger.tag.id3.framebody.FrameBodyXSOA)
code.name.monkey.appthemehelper.common.prefs.supportv7.ATEDialogPreference: ATEDialogPreference(android.content.Context,android.util.AttributeSet,int)
com.caij.puremusic.drive.model.SubsonicAlbum: java.lang.String toString()
androidx.core.widget.TextViewCompat$Api23Impl: void setBreakStrategy(android.widget.TextView,int)
org.jaudiotagger.tag.id3.framebody.FrameBodySIGN: void setGroupSymbol(byte)
org.simpleframework.xml.core.SignatureScanner: void validate(org.simpleframework.xml.core.Parameter,java.lang.Object)
com.google.android.material.slider.Slider: void setTrackTintList(android.content.res.ColorStateList)
org.jaudiotagger.tag.datatype.ByteArraySizeTerminated: boolean equals(java.lang.Object)
com.umeng.umzid.ZIDManager: java.lang.String a(com.umeng.umzid.ZIDManager,android.content.Context)
com.caij.puremusic.db.model.SongQueries$GetArtistSongCountQuery: java.lang.String getArtistId___()
org.jaudiotagger.tag.id3.AbstractTagItem: boolean isSubsetOf(java.lang.Object)
com.caij.puremusic.drive.model.JellyfinLoginResponse: JellyfinLoginResponse(java.lang.String,com.caij.puremusic.drive.model.User)
org.simpleframework.xml.stream.Splitter: boolean isUpper(char)
com.google.android.material.appbar.CollapsingToolbarLayout: android.graphics.Typeface getCollapsedTitleTypeface()
com.tencent.bugly.proguard.u: java.util.List a(com.tencent.bugly.proguard.u,int)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetViewId(int)
com.caij.puremusic.drive.model.AMediaContainer: java.lang.String toString()
com.tencent.bugly.proguard.aa: void a(int,boolean)
com.caij.puremusic.fragments.AlbumCoverStyle: AlbumCoverStyle(java.lang.String,int,int,int,int)
com.heinrichreimersoftware.materialintro.view.InkPageIndicator: void setViewPager(androidx.viewpager.widget.ViewPager)
com.tencent.mm.opensdk.modelbiz.WXChannelShareVideo: WXChannelShareVideo()
org.repackage.com.zui.deviceidservice.IDeviceidInterface$Stub$Proxy: android.os.IBinder asBinder()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: int access$402(org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox,int)
com.caij.puremusic.drive.model.PlayListItem: java.lang.String component7()
com.tencent.mm.opensdk.modelbiz.SubscribeMiniProgramMsg$Req: void toBundle(android.os.Bundle)
com.caij.puremusic.db.model.PlayCountEntityQueries$checkSongExistInPlayCount$2: com.caij.puremusic.db.model.PlayCountEntity invoke(long,long,long)
com.umeng.analytics.pro.bx: com.umeng.analytics.pro.bw a(byte[],com.umeng.analytics.pro.bw)
com.google.android.gms.auth.api.signin.internal.SignInHubActivity: SignInHubActivity()
org.jaudiotagger.audio.asf.io.AsfHeaderReader: AsfHeaderReader(java.util.List,boolean)
com.caij.puremusic.drive.model.Directory: java.lang.String component2()
com.github.dhaval2404.imagepicker.constant.ImageProvider: com.github.dhaval2404.imagepicker.constant.ImageProvider[] values()
com.umeng.analytics.pro.s: void a(java.lang.String,java.util.Map,long,java.lang.String,boolean)
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: FrameBodyTDRC(byte,java.lang.String)
com.caij.puremusic.network.model.TokenData: int hashCode()
org.simpleframework.xml.core.ElementMapLabel: ElementMapLabel(org.simpleframework.xml.core.Contact,org.simpleframework.xml.ElementMap,org.simpleframework.xml.stream.Format)
androidx.core.view.ViewCompat$Api24Impl: void dispatchFinishTemporaryDetach(android.view.View)
org.jaudiotagger.utils.tree.DefaultTreeModel: void reload(org.jaudiotagger.utils.tree.TreeNode)
com.google.android.material.ripple.RippleUtils$RippleUtilsLollipop: android.graphics.drawable.Drawable createOvalRipple(android.content.Context,int)
org.jaudiotagger.audio.mp3.MP3AudioHeader: boolean isNextFrameValid(java.io.File,long,java.nio.ByteBuffer,java.nio.channels.FileChannel)
com.umeng.commonsdk.internal.utils.k: k()
com.umeng.analytics.MobclickAgent: void enableEncrypt(boolean)
org.simpleframework.xml.core.ClassScanner: org.simpleframework.xml.core.ParameterMap getParameters()
org.jaudiotagger.tag.mp4.Mp4TagCreator: Mp4TagCreator()
com.google.android.material.chip.Chip: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
org.simpleframework.xml.strategy.Strategy: boolean write(org.simpleframework.xml.strategy.Type,java.lang.Object,org.simpleframework.xml.stream.NodeMap,java.util.Map)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
org.jaudiotagger.tag.id3.ID3v22Tag: long write(java.io.File,long)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
org.simpleframework.xml.core.MethodScanner: void scan(java.lang.reflect.Method,java.lang.annotation.Annotation,java.lang.annotation.Annotation[])
org.simpleframework.xml.transform.ArrayTransform: ArrayTransform(org.simpleframework.xml.transform.Transform,java.lang.Class)
com.google.common.hash.Hashing$ChecksumType$2: java.util.zip.Checksum get()
org.simpleframework.xml.core.Structure: boolean isPrimitive()
org.jcodec.containers.mp4.boxes.MetaValue: int getLocale()
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$insert$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.caij.puremusic.drive.model.OneDriveFolder$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.OneDriveFolder)
com.caij.puremusic.db.model.SongEntityQueries$checkSongPlaylistExists$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.tag.id3.AbstractID3v2Frame$StatusFlags: byte getOriginalFlags()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipStrokeColor()
org.jaudiotagger.tag.id3.framebody.FrameBodySYLT: void setupObjectList()
com.umeng.commonsdk.internal.utils.c: android.content.Context d()
com.alipay.apmobilesecuritysdk.e.i: void e(java.lang.String)
com.umeng.common.a: a()
com.umeng.commonsdk.statistics.proto.c: c(java.util.Map)
org.simpleframework.xml.core.Group: org.simpleframework.xml.core.Label getLabel(java.lang.Class)
com.caij.puremusic.db.model.PlaylistEntityQueries: void deleteById(long)
com.umeng.commonsdk.statistics.common.a: java.lang.String b(android.content.Context)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior(android.content.Context,android.util.AttributeSet)
com.umeng.commonsdk.framework.a: a(android.content.Context,android.os.Handler)
org.simpleframework.xml.stream.InputPosition: java.lang.String toString()
com.caij.puremusic.db.model.SongQueries$insertOrReplace$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.tencent.mm.opensdk.modelmsg.GetMessageFromWX$Req: void toBundle(android.os.Bundle)
org.simpleframework.xml.transform.DateType: java.util.Date getDate(java.lang.String)
androidx.recyclerview.widget.LinearLayoutManager$SavedState: LinearLayoutManager$SavedState()
com.thegrizzlylabs.sardineandroid.util.SardineUtil: java.lang.Object unmarshal(java.lang.Class,java.io.InputStream)
com.umeng.commonsdk.utils.UMUtils: java.lang.String getChannel(android.content.Context)
org.simpleframework.xml.core.ObjectInstance: java.lang.Class getType()
com.caij.puremusic.db.model.SongEntityQueries$IsSongExistsInPlaylistQuery$execute$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyWORS: FrameBodyWORS()
org.jcodec.containers.mp4.boxes.UdtaMetaBox: UdtaMetaBox(org.jcodec.containers.mp4.boxes.Header)
com.caij.puremusic.db.model.DriveFileDownUrlInfo: java.lang.String component1()
com.tencent.mm.opensdk.openapi.MMSharedPreferences: void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)
com.tencent.bugly.proguard.k: long a(long,int,boolean)
com.caij.puremusic.db.model.ServerAudioFormatQueries$getById$2: ServerAudioFormatQueries$getById$2()
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String component9()
com.umeng.commonsdk.statistics.idtracking.e: e(android.content.Context)
org.jcodec.containers.mp4.boxes.FileTypeBox: int estimateSize()
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyPairs: org.jaudiotagger.tag.datatype.PairedTextEncodedStringNullTerminated$ValuePairs getPairing()
com.caij.puremusic.db.model.SongQueries$SongsByInfoQuery: java.lang.String toString()
org.simpleframework.xml.core.TreeModel: boolean isModel(java.lang.String)
org.simpleframework.xml.Serializer: boolean validate(java.lang.Class,java.io.File,boolean)
com.tencent.mm.opensdk.modelmsg.SendTdiAuth$Resp: void fromBundle(android.os.Bundle)
com.thegrizzlylabs.sardineandroid.model.Propfind: void setAllprop(com.thegrizzlylabs.sardineandroid.model.Allprop)
kotlin.coroutines.CoroutineContext$plus$1: CoroutineContext$plus$1()
com.caij.puremusic.drive.model.AlbumItem: java.util.List getArtistItems()
androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)
org.jaudiotagger.audio.asf.io.AsfExtHeaderReader: org.jaudiotagger.audio.asf.data.AsfExtendedHeader createContainer(long,java.math.BigInteger,java.io.InputStream)
com.tencent.mm.opensdk.modelmsg.WXAppExtendObject: void serialize(android.os.Bundle)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconTintMode(android.graphics.PorterDuff$Mode)
com.umeng.commonsdk.statistics.proto.e$a: void a(com.umeng.analytics.pro.bu,com.umeng.commonsdk.statistics.proto.e)
com.caij.puremusic.drive.model.PlexAlbumsResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.PlexAlbumsResponse)
com.caij.puremusic.network.model.LastFmTrack$Track$Album: void setImage(java.util.List)
org.simpleframework.xml.core.ModelMap: void register(java.lang.String,org.simpleframework.xml.core.Model)
com.umeng.analytics.pro.i: boolean e()
com.caij.puremusic.network.model.ArtistWrapper: java.util.List component3()
org.simpleframework.xml.core.MethodPartFactory: org.simpleframework.xml.core.MethodPart getInstance(java.lang.reflect.Method,java.lang.annotation.Annotation,java.lang.annotation.Annotation[])
com.alipay.android.phone.mrpc.core.b$a: b$a(com.alipay.android.phone.mrpc.core.b,byte)
com.umeng.commonsdk.internal.utils.c$1: void onReceive(android.content.Context,android.content.Intent)
com.caij.puremusic.drive.model.AlbumListResponse: boolean equals(java.lang.Object)
com.tencent.mm.opensdk.modelmsg.GetMessageFromWX$Resp: int getType()
org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId: OpenDeviceId()
org.simpleframework.xml.stream.OutputDocument: boolean isCommitted()
com.tencent.mm.opensdk.modelmsg.WXMiniProgramObject: void serialize(android.os.Bundle)
org.jaudiotagger.audio.AudioHeader: java.lang.Long getAudioDataLength()
org.jaudiotagger.audio.iff.Chunk: boolean readChunk()
com.umeng.commonsdk.statistics.TagHelper: void deleteModuleTag(java.lang.String)
org.jaudiotagger.audio.asf.data.ContentDescription: java.lang.String getAuthor()
org.jaudiotagger.tag.flac.FlacTag: void deleteField(java.lang.String)
com.caij.puremusic.drive.model.MediaStream: MediaStream(java.lang.String,int,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.umeng.commonsdk.statistics.proto.e: java.lang.String h()
com.caij.puremusic.activities.ShareInstagramStory: ShareInstagramStory()
com.caij.puremusic.db.model.SongQueries$getSongCountBySourceId$1: java.lang.Long invoke(app.cash.sqldelight.db.SqlCursor)
androidx.viewpager.widget.ViewPager: void setOffscreenPageLimit(int)
com.google.android.gms.internal.play_billing.zza: com.google.android.gms.internal.play_billing.zza zza(int)
com.google.android.material.appbar.CollapsingToolbarLayout: void setTitleCollapseMode(int)
com.umeng.analytics.pro.v: void a(java.lang.String)
com.umeng.analytics.pro.u: u()
com.tencent.mm.opensdk.modelbiz.ChooseCardFromWXCardPackage$Resp: boolean checkArgs()
com.umeng.commonsdk.statistics.common.a: a()
com.tencent.mm.opensdk.modelmsg.WXAppExtendObject: void unserialize(android.os.Bundle)
com.umeng.commonsdk.statistics.noise.Defcon: com.umeng.commonsdk.statistics.noise.Defcon getService(android.content.Context)
org.simpleframework.xml.Serializer: boolean validate(java.lang.Class,org.simpleframework.xml.stream.InputNode)
org.jaudiotagger.audio.exceptions.ReadOnlyFileException: ReadOnlyFileException(java.lang.Throwable)
com.caij.puremusic.db.model.ServerLyrics: long component2()
com.google.android.material.progressindicator.BaseProgressIndicator: int getTrackThickness()
org.jaudiotagger.tag.id3.ID3v23Frames: org.jaudiotagger.tag.id3.ID3v23FieldKey getId3KeyFromGenericKey(org.jaudiotagger.tag.FieldKey)
com.afollestad.materialdialogs.internal.message.DialogContentLayout: android.view.View getCustomView()
org.jaudiotagger.audio.mp4.ChunkWriter: void write(org.jaudiotagger.audio.mp4.Chunk)
com.caij.puremusic.MainModuleKt$mainModule$1$1: MainModuleKt$mainModule$1$1()
com.tencent.bugly.proguard.at: at(android.content.Context,com.tencent.bugly.proguard.ak,boolean,com.tencent.bugly.BuglyStrategy$a)
com.caij.puremusic.drive.model.Type: com.caij.puremusic.drive.model.Type copy(java.lang.String,java.lang.String,java.lang.String,boolean)
org.jaudiotagger.tag.id3.framebody.FrameBodyPOPM: FrameBodyPOPM()
org.simpleframework.xml.core.Persister: Persister(org.simpleframework.xml.transform.Matcher)
com.tencent.bugly.proguard.l: void a(int[],int)
com.umeng.commonsdk.internal.utils.f: void a(android.content.Context,java.lang.String)
com.caij.puremusic.db.model.SongQueries$SongsDateLastDescQuery$execute$1: SongQueries$SongsDateLastDescQuery$execute$1(com.caij.puremusic.db.model.SongQueries$SongsDateLastDescQuery)
org.jaudiotagger.audio.exceptions.CannotReadVideoException: CannotReadVideoException(java.lang.Throwable)
androidx.fragment.app.DialogFragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
com.tencent.bugly.proguard.aq: com.tencent.bugly.proguard.aq b()
com.caij.puremusic.db.model.ArtistQueries: app.cash.sqldelight.Query artistByName(java.lang.String,kotlin.jvm.functions.Function2)
org.jaudiotagger.audio.aiff.AiffAudioHeader: java.lang.String getCopyright()
org.jaudiotagger.tag.aiff.AiffTag: void setField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
com.caij.puremusic.db.model.SongEntityQueries$GetSongEntityQuery: java.lang.String toString()
org.jaudiotagger.tag.lyrics3.AbstractLyrics3v2FieldFrameBody: AbstractLyrics3v2FieldFrameBody()
org.jcodec.containers.mp4.MP4Util: org.jcodec.containers.mp4.MP4Util$Movie createRefFullMovieFromFile(java.io.File)
org.jaudiotagger.tag.datatype.Lyrics3Image: byte[] writeByteArray()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
org.jaudiotagger.tag.id3.framebody.FrameBodyTDLY: FrameBodyTDLY(org.jaudiotagger.tag.id3.framebody.FrameBodyTDLY)
com.caij.puremusic.drive.model.OneDriveItem: com.caij.puremusic.drive.model.OneDriveFolder component7()
com.thegrizzlylabs.sardineandroid.model.Principal: void setAll(com.thegrizzlylabs.sardineandroid.model.All)
com.umeng.analytics.MobclickAgent: void setCheckDevice(boolean)
org.jcodec.containers.mp4.boxes.ColorExtension: ColorExtension(org.jcodec.containers.mp4.boxes.Header)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setAdapter(android.widget.ListAdapter)
com.caij.puremusic.model.smartplaylist.TopTracksPlaylist$Creator: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.material.slider.BaseSlider: void setHaloRadiusResource(int)
org.jaudiotagger.tag.images.StandardImageHandler: void makeSmaller(org.jaudiotagger.tag.images.Artwork,int)
com.tencent.mm.opensdk.modelmsg.WXStateJumpUrlInfo: void serialize(android.os.Bundle)
com.caij.puremusic.views.BreadCrumbLayout: void setActivatedContentColor(int)
com.caij.puremusic.drive.model.ImageTags$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
org.jaudiotagger.tag.id3.framebody.FrameBodyRVA2: FrameBodyRVA2(java.nio.ByteBuffer,int)
org.jaudiotagger.tag.images.AndroidArtwork: org.jaudiotagger.tag.images.AndroidArtwork createLinkedArtworkFromURL(java.lang.String)
androidx.fragment.app.Fragment: void performOptionsMenuClosed(android.view.Menu)
org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile: int getId()
org.jcodec.containers.mp4.boxes.MediaInfoBox: org.jcodec.containers.mp4.boxes.MediaInfoBox createMediaInfoBox()
org.simpleframework.xml.core.CacheParameter: org.simpleframework.xml.core.Expression getExpression()
androidx.core.graphics.BlendModeColorFilterCompat$Api29Impl: android.graphics.ColorFilter createBlendModeColorFilter(int,java.lang.Object)
com.umeng.commonsdk.statistics.proto.Response: com.umeng.analytics.pro.bp access$600()
org.jcodec.containers.mp4.boxes.MetaBox: void setKeyedMeta(java.util.Map)
com.umeng.analytics.pro.a$a$a: java.lang.String c()
com.google.android.material.slider.BaseSlider: void setValueFrom(float)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: java.lang.CharSequence getDescription(android.media.MediaDescription)
org.jaudiotagger.audio.asf.io.ContentBrandingReader: org.jaudiotagger.audio.asf.data.GUID[] getApplyingIds()
androidx.fragment.app.Fragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
com.umeng.commonsdk.statistics.proto.b$b: com.umeng.commonsdk.statistics.proto.b$a a()
com.caij.puremusic.db.model.SongEntityQueries$getSongEntity$2: com.caij.puremusic.db.model.SongEntity invoke(long,long,long)
com.google.android.material.chip.Chip: float getCloseIconSize()
org.simpleframework.xml.core.DetailExtractor: org.simpleframework.xml.core.ContactList getFields(java.lang.Class,org.simpleframework.xml.core.Detail)
com.caij.puremusic.db.model.ServerArtistCoverQueries$insert$1: java.lang.Object invoke(java.lang.Object)
androidx.fragment.app.DialogFragment: void dismiss()
com.caij.puremusic.db.model.PlayCountEntity: long getPlayCount()
com.alipay.apmobilesecuritysdk.e.f: java.lang.String e()
org.simpleframework.xml.core.ElementMapUnionParameter: java.lang.Class getType()
io.ktor.util.date.WeekDay: io.ktor.util.date.WeekDay[] values()
org.jaudiotagger.audio.asf.data.VideoStreamChunk: VideoStreamChunk(java.math.BigInteger)
com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgramEnvironment$Resp: void fromBundle(android.os.Bundle)
com.tencent.bugly.proguard.av: com.tencent.bugly.crashreport.crash.CrashDetailBean b(java.lang.Thread,java.lang.Throwable,boolean,java.lang.String,byte[],boolean)
org.xmlpull.v1.XmlPullParser: boolean isEmptyElementTag()
com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()
org.simpleframework.xml.core.Variable: boolean isRequired()
org.jcodec.containers.mp4.boxes.NodeBox: org.jcodec.containers.mp4.boxes.Box[] findAll(org.jcodec.containers.mp4.boxes.Box,java.lang.Class,java.lang.String)
org.jaudiotagger.tag.datatype.BooleanByte: byte[] writeByteArray()
org.jaudiotagger.audio.asf.io.StreamBitratePropertiesReader: org.jaudiotagger.audio.asf.data.Chunk read(org.jaudiotagger.audio.asf.data.GUID,java.io.InputStream,long)
com.umeng.commonsdk.utils.UMUtils: byte[] genIv()
com.umeng.analytics.filter.c: c()
com.caij.puremusic.drive.model.Metadata$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.alipay.apmobilesecuritysdk.e.a: void a(android.content.Context,com.alipay.apmobilesecuritysdk.e.b)
com.caij.puremusic.drive.model.DropboxDriveFileResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$GetByIdQuery$execute$1: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.caij.puremusic.drive.model.AlbumList$$serializer: AlbumList$$serializer()
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setIsClippedToScreen(android.widget.PopupWindow,boolean)
org.jcodec.containers.mp4.MP4Util: void writeMovie(java.nio.channels.FileChannel,org.jcodec.containers.mp4.boxes.MovieBox)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
org.jaudiotagger.audio.asf.data.MetadataDescriptor: int compareTo(java.lang.Object)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: boolean hasField(org.jaudiotagger.tag.FieldKey)
org.jcodec.containers.mp4.boxes.Box$LeafBox: int estimateSize()
com.umeng.commonsdk.framework.UMModuleRegister: android.content.Context getAppContext()
org.simpleframework.xml.transform.BigIntegerTransform: java.lang.Object read(java.lang.String)
org.jaudiotagger.tag.datatype.SynchronisedTempoCodeList: SynchronisedTempoCodeList(org.jaudiotagger.tag.datatype.SynchronisedTempoCodeList)
org.jaudiotagger.tag.id3.framebody.FrameBodyTOAL: FrameBodyTOAL(java.nio.ByteBuffer,int)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyPairs: AbstractFrameBodyPairs(java.nio.ByteBuffer,int)
com.caij.puremusic.drive.model.PlaylistResponse: void write$Self(com.caij.puremusic.drive.model.PlaylistResponse,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.umeng.commonsdk.statistics.common.HelperUtils: java.lang.String subStr(java.lang.String,int)
org.simpleframework.xml.stream.CamelCaseStyle: CamelCaseStyle(boolean,boolean)
com.caij.puremusic.drive.model.SongItem$Companion: kotlinx.serialization.KSerializer serializer()
org.jaudiotagger.tag.id3.framebody.FrameBodyWCOM: FrameBodyWCOM(java.lang.String)
org.jaudiotagger.audio.asf.data.ContentBranding: ContentBranding()
com.google.android.material.bottomsheet.BottomSheetDialog$EdgeToEdgeCallback: void onSlide(android.view.View,float)
com.umeng.common.b: java.lang.String c()
org.jaudiotagger.tag.id3.valuepair.TextEncoding: java.lang.Integer getIdForCharset(java.nio.charset.Charset)
com.umeng.commonsdk.stateless.UMSLEnvelopeBuild: org.json.JSONObject buildSLEnvelope(android.content.Context,org.json.JSONObject,org.json.JSONObject,java.lang.String)
org.simpleframework.xml.core.ModelAssembler: void assembleAttributes(org.simpleframework.xml.core.Model,org.simpleframework.xml.Order)
com.tencent.bugly.proguard.ai: ai(android.content.Context)
com.umeng.umzid.ZIDManager$c: void run()
org.jaudiotagger.audio.wav.WavTagReader: boolean readChunk(java.nio.channels.FileChannel,org.jaudiotagger.tag.wav.WavTag)
org.jaudiotagger.tag.aiff.AiffTag: java.util.List getChunkSummaryList()
com.umeng.analytics.pro.o$c: int a(int)
org.simpleframework.xml.core.DetailScanner: org.simpleframework.xml.Order getOrder()
com.caij.puremusic.model.smartplaylist.AbsSmartPlaylist: AbsSmartPlaylist(java.lang.String,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
org.jaudiotagger.tag.id3.framebody.FrameBodyPIC: java.lang.String getMimeType()
com.alipay.android.phone.mrpc.core.RpcException: int getCode()
org.jaudiotagger.audio.asf.data.ContentDescription: java.lang.String getRating()
org.jaudiotagger.audio.generic.Utils: java.lang.String getMagicExtension(java.io.File)
com.thegrizzlylabs.sardineandroid.model.Activelock: com.thegrizzlylabs.sardineandroid.model.Owner getOwner()
com.caij.puremusic.MainModuleKt$roomModule$1$6: MainModuleKt$roomModule$1$6()
com.umeng.commonsdk.utils.UMUtils: java.lang.String getLastAppkey(android.content.Context)
org.jaudiotagger.tag.flac.FlacTag: java.util.List getAll(org.jaudiotagger.tag.FieldKey)
org.simpleframework.xml.stream.OutputNode: void setReference(java.lang.String)
com.tencent.mm.opensdk.modelbiz.AddCardToWXCardPackage$Req: int getType()
com.thegrizzlylabs.sardineandroid.model.Exclusive: Exclusive()
com.tencent.mm.opensdk.modelmsg.SendAuth$Req: void fromBundle(android.os.Bundle)
org.jaudiotagger.tag.datatype.AbstractDataTypeList: int getSize()
com.caij.puremusic.drive.model.ParentReference: java.lang.String component3()
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: java.util.Enumeration postorderEnumeration()
com.umeng.analytics.pro.l: void b()
org.jaudiotagger.utils.FileTypeUtil: void main(java.lang.String[])
org.jaudiotagger.audio.mp3.VbriFrame: VbriFrame(java.nio.ByteBuffer)
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgram$Req: void toBundle(android.os.Bundle)
com.umeng.commonsdk.statistics.proto.a$c: void a(com.umeng.analytics.pro.bu,com.umeng.commonsdk.statistics.proto.a)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
com.caij.vip.VipApiService: java.lang.Object getPayBody(java.lang.String,int,kotlin.coroutines.Continuation)
com.umeng.analytics.pro.at: short a()
com.alipay.apmobilesecuritysdk.otherid.UtdidWrapper: UtdidWrapper()
org.simpleframework.xml.core.AttributeParameter: java.lang.String toString()
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: void enableCompression()
com.tencent.mm.opensdk.channel.a.a: byte[] a(java.lang.String,int,java.lang.String)
com.tencent.bugly.proguard.aa: java.lang.String n()
org.jaudiotagger.tag.flac.FlacTag: int getFieldCountIncludingSubValues()
org.simpleframework.xml.core.GroupExtractor: boolean isInline()
com.caij.puremusic.drive.model.DropboxDriveItem: void write$Self(com.caij.puremusic.drive.model.DropboxDriveItem,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.caij.puremusic.db.model.Song: long getAlbumId()
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyTextInfo: void setupObjectList()
com.caij.puremusic.drive.model.ADriveFileResponse: java.lang.String toString()
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: java.lang.String unregist()
org.simpleframework.xml.stream.OutputAttribute: boolean isCommitted()
com.tencent.mm.opensdk.modelmsg.WXDesignerSharedObject: void serialize(android.os.Bundle)
com.thegrizzlylabs.sardineandroid.model.Report: Report()
org.jaudiotagger.tag.id3.framebody.FrameBodyWORS: FrameBodyWORS(org.jaudiotagger.tag.id3.framebody.FrameBodyWORS)
com.caij.puremusic.drive.model.ArtistItem: java.lang.String component1()
com.alipay.apmobilesecuritysdk.e.d: void a(android.content.Context)
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: void setAudioSampleRate(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
com.caij.puremusic.drive.model.Media: boolean equals(java.lang.Object)
com.umeng.analytics.process.UMProcessDBDatasSender$ConstructMessageCallback: boolean onFileLock(java.lang.String,java.lang.Object)
kotlin.collections.EmptyList: EmptyList()
org.jaudiotagger.tag.id3.framebody.FrameBodySYTC: FrameBodySYTC(java.nio.ByteBuffer,int)
com.caij.puremusic.db.model.Song: com.caij.puremusic.db.model.Song copy$default(com.caij.puremusic.db.model.Song,long,java.lang.String,int,int,long,java.lang.String,java.lang.String,long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,long,long,int,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)
com.caij.puremusic.db.model.Song: long getSourceId()
com.caij.puremusic.model.CategoryInfo$Creator: java.lang.Object[] newArray(int)
org.simpleframework.xml.core.Source: boolean isPrimitive(java.lang.Class)
com.umeng.analytics.pro.a$a: com.umeng.analytics.pro.a a(android.os.IBinder)
com.caij.puremusic.drive.model.OneDriveFile$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.caij.puremusic.network.model.LastFmTrack: com.caij.puremusic.network.model.LastFmTrack$Track getTrack()
com.umeng.commonsdk.config.d: java.lang.String[] b(java.lang.String)
com.caij.puremusic.db.model.AlbumQueries$searchAlbumsByName$1: java.lang.Object invoke(java.lang.Object)
org.simpleframework.xml.core.Extractor: java.lang.Class getType(java.lang.annotation.Annotation)
org.jaudiotagger.tag.TagTextField: void setEncoding(java.nio.charset.Charset)
com.google.android.material.textfield.TextInputLayout: void setBoxCornerFamily(int)
okhttp3.Protocol: okhttp3.Protocol[] values()
org.jaudiotagger.tag.flac.FlacTag: void deleteField(org.jaudiotagger.tag.FieldKey)
org.simpleframework.xml.core.ExtractorFactory: org.simpleframework.xml.core.ExtractorFactory$ExtractorBuilder getBuilder(java.lang.annotation.Annotation)
com.umeng.analytics.pro.bu: void c()
org.jaudiotagger.audio.asf.data.AudioStreamChunk: void setAverageBytesPerSec(long)
com.tencent.mm.opensdk.openapi.IWXAPI: int getWXAppSupportAPI()
org.jcodec.containers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox: long access$002(org.jcodec.containers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox,long)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyPairs: java.lang.String getText()
org.jcodec.containers.mp4.MP4Util$Atom: org.jcodec.containers.mp4.boxes.Box parseBox(java.nio.channels.FileChannel)
com.google.android.datatransport.runtime.backends.BackendResponse$Status: BackendResponse$Status(java.lang.String,int)
org.jaudiotagger.tag.aiff.AiffTag: java.util.List getArtworkList()
com.google.android.material.bottomsheet.BottomSheetDialog: boolean getDismissWithAnimation()
com.thegrizzlylabs.sardineandroid.model.Owner: void setHref(java.lang.String)
com.caij.puremusic.drive.model.GoogleDriveFile: java.lang.String toString()
androidx.core.view.PointerIconCompat$Api24Impl: android.view.PointerIcon load(android.content.res.Resources,int)
nl.adaptivity.xmlutil.core.KtXmlWriter$WriteState: nl.adaptivity.xmlutil.core.KtXmlWriter$WriteState valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatEditText$SuperCaller getSuperCaller()
com.alipay.android.phone.mrpc.core.HttpException: HttpException(java.lang.String)
com.umeng.analytics.pro.ch: void a(int)
com.caij.puremusic.model.CategoryInfo: int describeContents()
com.caij.puremusic.db.model.SongQueries$songsOrderDateAdd$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
com.umeng.analytics.pro.o: void q()
com.tencent.mm.opensdk.modelbiz.ChooseCardFromWXCardPackage$Resp: void fromBundle(android.os.Bundle)
com.alipay.android.app.IAlixPay: java.lang.String Pay(java.lang.String)
com.caij.puremusic.dialogs.DeletePlaylistDialog: DeletePlaylistDialog()
org.jaudiotagger.audio.SupportedFileFormat$7: SupportedFileFormat$7(java.lang.String,int,java.lang.String)
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(boolean)
org.jaudiotagger.tag.datatype.MultipleTextEncodedStringNullTerminated$Values: java.lang.String toString()
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getOaid(android.content.Context)
com.caij.puremusic.db.model.ServerLyricsQueries$GetByIdQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.alipay.android.phone.mrpc.core.HttpUrlHeader: void setHead(java.lang.String,java.lang.String)
org.jaudiotagger.audio.mp3.MP3File: void setID3v2TagOnly(org.jaudiotagger.tag.id3.AbstractID3v2Tag)
org.simpleframework.xml.stream.DocumentProvider: org.simpleframework.xml.stream.EventReader provide(java.io.Reader)
com.caij.puremusic.network.model.ArtistWrapper: java.lang.Integer getTotal()
com.umeng.commonsdk.statistics.idtracking.a: boolean a()
com.caij.puremusic.drive.model.SubsonicPlaylist: java.lang.String getChanged()
com.caij.puremusic.fragments.GridStyle: com.caij.puremusic.fragments.GridStyle[] $values()
com.caij.puremusic.db.model.PlaybackSongQueries$getPlaybacksByType$1: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.drive.model.BaiduDriveItem: int getCategory()
com.google.gson.LongSerializationPolicy$1: LongSerializationPolicy$1(java.lang.String,int)
com.caij.puremusic.drive.model.SubsonicSearchListResponse: java.lang.String toString()
org.jcodec.containers.mp4.boxes.ReverseDnsBox$RdnsMeanBox: org.jcodec.containers.mp4.boxes.ReverseDnsBox$RdnsMeanBox createRdnsMeanBox(java.lang.String)
com.google.android.material.search.SearchBar: void setOnLoadAnimationFadeInEnabled(boolean)
com.caij.puremusic.db.model.SongQueries$SearchSongsByTitleQuery: void removeListener(app.cash.sqldelight.Query$Listener)
org.jaudiotagger.tag.aiff.AiffTag: org.jaudiotagger.tag.id3.AbstractID3v2Tag getID3Tag()
androidx.preference.PreferenceGroup: PreferenceGroup(android.content.Context,android.util.AttributeSet,int,int)
com.umeng.analytics.pro.o$c: o$c()
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
org.jaudiotagger.tag.Tag: java.util.Iterator getFields()
org.jaudiotagger.tag.id3.framebody.FrameBodyCRM: FrameBodyCRM()
com.caij.puremusic.drive.model.MediaContainer: java.lang.String getThumb()
com.umeng.commonsdk.debug.UMRTLog: boolean shouldOutput()
com.caij.puremusic.db.model.SongQueries$getSongBySource$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
com.caij.puremusic.drive.model.GoogleDriveFileResponse: java.util.List getFiles()
com.tencent.mm.opensdk.modelbiz.WXChannelStartLive$Resp: WXChannelStartLive$Resp(android.os.Bundle)
org.jaudiotagger.tag.mp4.Mp4Tag: void setField(org.jaudiotagger.tag.mp4.Mp4FieldKey,java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: byte[] getRawContent()
app.cash.sqldelight.TransacterImpl: TransacterImpl(app.cash.sqldelight.db.SqlDriver)
org.simpleframework.xml.core.CompositeList: CompositeList(org.simpleframework.xml.core.Context,org.simpleframework.xml.strategy.Type,org.simpleframework.xml.strategy.Type,java.lang.String)
androidx.fragment.app.Fragment: void onDestroy()
com.umeng.commonsdk.framework.UMModuleRegister: void registerAppContext(android.content.Context)
com.tencent.mm.opensdk.modelbiz.WXChannelOpenFeed$Req: boolean checkArgs()
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.constraintlayout.widget.Placeholder: void setEmptyVisibility(int)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: float getChipStrokeWidth()
androidx.core.graphics.TypefaceCompatUtil$Api19Impl: android.os.ParcelFileDescriptor openFileDescriptor(android.content.ContentResolver,android.net.Uri,java.lang.String,android.os.CancellationSignal)
com.caij.puremusic.drive.model.SongItem: java.util.List component9()
org.simpleframework.xml.core.SignatureScanner: java.util.List process(java.lang.annotation.Annotation,int)
com.caij.puremusic.drive.model.Metadata: int component14()
com.umeng.commonsdk.statistics.proto.Response: void unsetResp_code()
com.caij.puremusic.db.model.PlaybackSongQueries$getPlaybacksByType$2: PlaybackSongQueries$getPlaybacksByType$2()
com.tencent.bugly.BuglyStrategy: com.tencent.bugly.BuglyStrategy setBuglyLogUpload(boolean)
com.tencent.bugly.crashreport.CrashReport$UserStrategy: void setCloseErrorCallback(boolean)
com.caij.puremusic.drive.model.OneDriveFileResponse: int hashCode()
com.umeng.commonsdk.UMConfigure: void getOaid(android.content.Context,com.umeng.commonsdk.listener.OnGetOaidListener)
com.caij.puremusic.db.model.SongQueries$FirstSongByAlbumIdQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
com.tencent.bugly.proguard.ab: boolean o()
com.caij.puremusic.model.lyrics.SynchronizedLyricsLRC: com.caij.puremusic.model.lyrics.Lyrics parse(boolean)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyAUT: void setupObjectList()
com.umeng.commonsdk.statistics.idtracking.e$a: void c(java.lang.String)
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: byte getFlags()
org.jaudiotagger.tag.mp4.field.Mp4DiscNoField: Mp4DiscNoField(int,int)
com.umeng.analytics.MobclickAgent: void onPause(android.content.Context)
com.google.android.material.slider.BaseSlider: int getLabelBehavior()
com.caij.puremusic.drive.model.PlexLoginResponse: java.lang.String toString()
org.simpleframework.xml.core.InstantiatorBuilder: void register(org.simpleframework.xml.core.Label)
com.google.android.material.slider.BaseSlider: void setLabelFormatter(com.google.android.material.slider.LabelFormatter)
com.caij.puremusic.drive.model.AlbumListResponse$Companion: kotlinx.serialization.KSerializer serializer()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
io.ktor.http.HttpHeaderValueParserKt$parseHeaderValue$items$1: HttpHeaderValueParserKt$parseHeaderValue$items$1()
com.tencent.bugly.proguard.ap: boolean b(android.content.Context,java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setSplitTrack(boolean)
com.umeng.analytics.filter.EventList: boolean onFileLock(java.io.File,int)
com.caij.puremusic.drive.model.PlexArtistsResponse$$serializer: PlexArtistsResponse$$serializer()
org.jaudiotagger.tag.id3.AbstractID3v2Frame: void setLoggingFilename(java.lang.String)
com.alipay.sdk.app.APayEntranceActivity: APayEntranceActivity()
com.caij.puremusic.db.model.PlaylistEntityQueries$searchPlaylistByName$1: PlaylistEntityQueries$searchPlaylistByName$1(kotlin.jvm.functions.Function2)
com.thegrizzlylabs.sardineandroid.model.Propstat: void setError(com.thegrizzlylabs.sardineandroid.model.Error)
org.jaudiotagger.audio.asf.data.ContainerType: void assertConstraints(java.lang.String,byte[],int,int,int)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.lang.String toString()
com.thegrizzlylabs.sardineandroid.model.Prop: com.thegrizzlylabs.sardineandroid.model.QuotaUsedBytes getQuotaUsedBytes()
me.tankery.lib.circularseekbar.CircularSeekBar: float getCircleStrokeWidth()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
org.simpleframework.xml.util.WeakCache: boolean isEmpty()
com.google.android.gms.internal.play_billing.zzew: com.google.android.gms.internal.play_billing.zzex zza()
org.jaudiotagger.tag.id3.ID3v23Tag: long write(java.io.File,long)
org.simpleframework.xml.stream.Node: org.simpleframework.xml.stream.Node getParent()
org.simpleframework.xml.core.Support: java.util.List getLabels(org.simpleframework.xml.core.Contact,java.lang.annotation.Annotation)
org.simpleframework.xml.transform.CharacterTransform: java.lang.Character read(java.lang.String)
androidx.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)
com.caij.puremusic.drive.model.SongItem: int component5()
org.jaudiotagger.tag.mp4.field.Mp4TrackField: java.lang.Short getTrackNo()
org.simpleframework.xml.core.Caller: void persist(java.lang.Object)
org.jaudiotagger.audio.generic.Utils: java.lang.String readThreeBytesAsChars(java.nio.ByteBuffer)
org.jcodec.containers.mp4.boxes.TrunBox: int getSampleFlags(int)
com.caij.puremusic.drive.model.SubsonicAlbum$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.tag.id3.ID3v1Tag: byte getMajorVersion()
androidx.lifecycle.Lifecycle$State: Lifecycle$State(java.lang.String,int)
org.jaudiotagger.tag.images.AndroidImageHandler: void showWriteFormats()
com.umeng.analytics.pro.as: byte a(byte,int,boolean)
com.google.android.material.bottomsheet.BottomSheetDialogFragment: BottomSheetDialogFragment()
com.tencent.mm.opensdk.modelmsg.WXStateJumpChannelProfileInfo: void unserialize(android.os.Bundle)
com.umeng.analytics.b: void j()
com.bumptech.glide.request.RequestCoordinator$RequestState: com.bumptech.glide.request.RequestCoordinator$RequestState valueOf(java.lang.String)
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessWebview$Req: WXOpenBusinessWebview$Req()
org.jaudiotagger.logging.PlainTextTagDisplayFormatter: void increaseLevel()
com.google.android.material.bottomsheet.BottomSheetDialog$EdgeToEdgeCallback: BottomSheetDialog$EdgeToEdgeCallback(android.view.View,androidx.core.view.WindowInsetsCompat,com.google.android.material.bottomsheet.BottomSheetDialog$1)
androidx.preference.PreferenceCategory: PreferenceCategory(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.db.model.DriveFileDownUrlInfo: java.lang.String getUrl()
com.tencent.mm.opensdk.modelpay.JumpToOfflinePay$Req: JumpToOfflinePay$Req()
org.jaudiotagger.tag.id3.framebody.FrameBodyRBUF: void setupObjectList()
com.google.android.material.progressindicator.CircularProgressIndicator: void setTrackThickness(int)
com.tencent.mm.opensdk.modelpay.PayReq$Options: PayReq$Options()
com.tencent.bugly.proguard.w: com.tencent.bugly.proguard.w a()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
org.repackage.com.meizu.flyme.openidsdk.SupportInfo: boolean b()
com.caij.puremusic.drive.model.ArtistItem: java.lang.Long getRunTimeTicks()
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: int getAutoSizeStepGranularity(android.widget.TextView)
com.caij.puremusic.model.UpdateInfo: UpdateInfo()
org.jaudiotagger.tag.id3.ID3v22Frame: int decodeSize(byte[])
com.caij.puremusic.model.AlbumWrapper: AlbumWrapper(com.caij.puremusic.db.model.Album,java.util.List)
com.caij.puremusic.db.model.SongQueries$songsByNameAlbum$1: SongQueries$songsByNameAlbum$1(kotlin.jvm.functions.Function18,com.caij.puremusic.db.model.SongQueries)
org.simpleframework.xml.core.SignatureScanner: java.lang.annotation.Annotation[] extract(java.lang.annotation.Annotation)
org.jcodec.containers.mp4.boxes.IListBox: org.jcodec.containers.mp4.boxes.IListBox createIListBox(java.util.Map,java.util.List)
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: boolean filterSigabrtSysLog()
org.simpleframework.xml.core.ElementListUnionParameter: java.lang.String getPath()
com.google.common.reflect.TypeToken$TypeFilter$1: TypeToken$TypeFilter$1(java.lang.String,int)
com.caij.puremusic.util.CoverLyricsType: com.caij.puremusic.util.CoverLyricsType valueOf(java.lang.String)
com.caij.puremusic.MainModuleKt$roomModule$1$2: MainModuleKt$roomModule$1$2()
org.jaudiotagger.tag.datatype.Lyrics3Image: java.lang.String toString()
com.thegrizzlylabs.sardineandroid.model.Property: org.w3c.dom.Element getProperty()
org.simpleframework.xml.core.ParameterContact: ParameterContact(java.lang.annotation.Annotation,java.lang.reflect.Constructor,int)
org.simpleframework.xml.core.ExtractorFactory$ElementExtractor: org.simpleframework.xml.core.Label getLabel(java.lang.annotation.Annotation)
org.simpleframework.xml.core.TemplateLabel: org.simpleframework.xml.core.Label getLabel(java.lang.Class)
org.jaudiotagger.tag.mp4.field.Mp4TrackField: void setTrackTotal(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyWPUB: FrameBodyWPUB(org.jaudiotagger.tag.id3.framebody.FrameBodyWPUB)
okhttp3.Protocol: Protocol(java.lang.String,int,java.lang.String)
com.caij.puremusic.db.model.SongQueries$deleteSongBySource$2: SongQueries$deleteSongBySource$2()
com.umeng.commonsdk.framework.UMLogDataProtocol: void removeCacheData(java.lang.Object)
com.umeng.analytics.pro.an: void read(com.umeng.analytics.pro.bu)
org.jaudiotagger.tag.datatype.StringHashMap: java.nio.charset.Charset getTextEncodingCharSet()
com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
org.simpleframework.xml.core.Factory: Factory(org.simpleframework.xml.core.Context,org.simpleframework.xml.strategy.Type)
com.caij.puremusic.MainModuleKt$viewModules$1$3: MainModuleKt$viewModules$1$3()
com.google.android.material.textfield.TextInputLayout: int getBoxCollapsedPaddingTop()
org.jaudiotagger.audio.asf.io.WriteableChunkModifer: org.jaudiotagger.audio.asf.io.ModificationResult modify(org.jaudiotagger.audio.asf.data.GUID,java.io.InputStream,java.io.OutputStream)
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: boolean onFileLock(java.io.File,int)
com.umeng.analytics.Gender: com.umeng.analytics.Gender getGender(int)
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding[] values()
com.caij.puremusic.network.model.LastFmAlbum$Album: java.lang.String getName()
org.jaudiotagger.tag.id3.framebody.FrameBodyTCON: java.lang.String convertID3v24GenreToGeneric(java.lang.String)
com.umeng.analytics.pro.an$a: void a(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.an)
org.jcodec.containers.mp4.boxes.EsdsBox: int estimateSize()
org.simpleframework.xml.core.AnnotationHandler: java.lang.Object value(java.lang.reflect.Method)
com.caij.puremusic.db.model.PlaylistEntityQueries$SearchPlaylistByNameQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.umeng.analytics.pro.aw: int a(java.nio.ByteBuffer,byte[],int)
com.google.android.material.slider.Slider: void setFocusedThumbIndex(int)
org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)
com.umeng.analytics.pro.bo$a: bo$a(int)
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$3: void handlePotentialDeadlock(com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException)
com.caij.puremusic.db.model.ServerAudioFormat: java.lang.String toString()
org.jaudiotagger.audio.ogg.OggVorbisTagReader: byte[] convertToVorbisSetupHeaderPacketAndAdditionalPackets(long,java.io.RandomAccessFile)
com.caij.puremusic.drive.model.SubsonicSearchResponse: SubsonicSearchResponse(java.lang.String,java.lang.String,com.caij.puremusic.drive.model.SearchResult3)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
org.simpleframework.xml.core.ElementMapLabel: org.simpleframework.xml.core.Decorator getDecorator()
org.jcodec.containers.mp4.boxes.CleanApertureExtension: CleanApertureExtension(org.jcodec.containers.mp4.boxes.Header)
com.umeng.commonsdk.a: void a(android.content.Context)
com.google.android.material.progressindicator.BaseProgressIndicator: void setTrackCornerRadius(int)
org.simpleframework.xml.core.FieldScanner: void scan(java.lang.reflect.Field,java.lang.annotation.Annotation,java.lang.annotation.Annotation[])
com.caij.puremusic.db.model.SongQueries: SongQueries(app.cash.sqldelight.db.SqlDriver,com.caij.puremusic.db.model.Song$Adapter)
com.tencent.mm.opensdk.modelmsg.WXLocationObject: WXLocationObject(double,double)
com.tencent.mm.opensdk.modelbiz.WXOpenCustomerServiceChat$Req: int getType()
com.google.android.material.chip.Chip: void setTextStartPaddingResource(int)
com.umeng.analytics.pro.m: com.umeng.analytics.pro.m a()
com.caij.puremusic.drive.model.MediaStream: void write$Self(com.caij.puremusic.drive.model.MediaStream,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.caij.puremusic.model.Genre: com.caij.puremusic.model.Genre copy$default(com.caij.puremusic.model.Genre,long,java.lang.String,int,int,java.lang.Object)
org.simpleframework.xml.stream.Formatter: Formatter(java.io.Writer,org.simpleframework.xml.stream.Format)
com.umeng.commonsdk.statistics.proto.e$d: e$d(com.umeng.commonsdk.statistics.proto.e$1)
com.caij.puremusic.drive.model.EmbyAlbumsResponse$Companion: kotlinx.serialization.KSerializer serializer()
com.tencent.bugly.proguard.s: void a(android.content.Context)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockHeader: org.jaudiotagger.audio.flac.metadatablock.MetadataBlockHeader readHeader(java.nio.channels.FileChannel)
com.tencent.bugly.crashreport.crash.jni.NativeExceptionHandler: void handleNativeException(int,int,long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int,int,int,java.lang.String,java.lang.String)
com.umeng.commonsdk.statistics.common.ULog: void w(java.lang.String,java.lang.Object[])
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
org.simpleframework.xml.core.Section: boolean isSection(java.lang.String)
com.caij.puremusic.model.PlaylistWrapper: com.caij.puremusic.db.model.Song component3()
com.umeng.analytics.pro.bn: long x()
org.jcodec.containers.mp4.boxes.TrunBox: int[] getSampleSizes()
com.caij.puremusic.drive.model.OneDriveItem: java.lang.String component3()
com.caij.puremusic.db.model.SongQueries$GetArtistSongCountQuery: void addListener(app.cash.sqldelight.Query$Listener)
org.simpleframework.xml.core.GetPart: java.lang.annotation.Annotation getAnnotation(java.lang.Class)
com.google.android.material.button.MaterialButton: android.text.Layout$Alignment getActualTextAlignment()
org.jcodec.containers.mp4.boxes.EsdsBox$DecoderConfig: int getMaxBitrate()
com.umeng.commonsdk.internal.utils.k: void a(android.content.Context,java.lang.String[])
org.simpleframework.xml.core.Label: org.simpleframework.xml.core.Contact getContact()
com.caij.puremusic.views.TopAppBarLayout$AppBarMode: com.caij.puremusic.views.TopAppBarLayout$AppBarMode valueOf(java.lang.String)
com.umeng.commonsdk.statistics.idtracking.a: a(java.lang.String)
org.jcodec.containers.mp4.boxes.TrakBox: void setEdits(java.util.List)
com.caij.puremusic.drive.model.AMetadata: AMetadata(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,kotlinx.serialization.internal.SerializationConstructorMarker)
org.jaudiotagger.audio.exceptions.InvalidBoxHeaderException: InvalidBoxHeaderException(java.lang.String)
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
org.simpleframework.xml.stream.InputNode: java.lang.Object getSource()
org.simpleframework.xml.strategy.Allocate: Allocate(org.simpleframework.xml.strategy.Value,java.util.Map,java.lang.String)
com.caij.puremusic.drive.model.Metadata: java.lang.String component12()
com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)
org.repackage.com.vivo.identifier.IdentifierManager: IdentifierManager()
org.simpleframework.xml.core.ElementMapUnionLabel: java.lang.String getOverride()
org.simpleframework.xml.stream.NodeWriter: NodeWriter(java.io.Writer,org.simpleframework.xml.stream.Format)
com.caij.puremusic.util.ArtistUtil$sortedSongs$5: ArtistUtil$sortedSongs$5()
org.jaudiotagger.audio.generic.AudioFileWriter: void transferNewFileToOriginalFile(java.io.File,java.io.File,boolean)
org.jaudiotagger.audio.asf.data.StreamChunk: void setStreamSpecificDataSize(long)
com.umeng.commonsdk.framework.UMWorkDispatch: UMWorkDispatch()
org.jaudiotagger.audio.ogg.util.OggPage: void setSequenceNo(int)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSO2: FrameBodyTSO2(byte,java.lang.String)
org.simpleframework.xml.core.MethodContact: java.lang.annotation.Annotation getAnnotation()
org.simpleframework.xml.strategy.TreeStrategy: TreeStrategy()
com.caij.puremusic.drive.model.Metadata: com.caij.puremusic.drive.model.Metadata copy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,java.util.List)
org.jaudiotagger.tag.FieldDataInvalidException: FieldDataInvalidException(java.lang.Throwable)
com.google.android.material.datepicker.PickerFragment: PickerFragment()
org.simpleframework.xml.core.Signature: int size()
com.caij.puremusic.db.model.SongEntityQueries$GetPlaylistLastAddSongQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.tencent.bugly.proguard.i: com.tencent.bugly.proguard.i a(com.tencent.bugly.proguard.m,java.lang.String)
org.jcodec.containers.mp4.boxes.AudioSampleEntry: int calcSampleSize()
org.simpleframework.xml.stream.OutputNodeMap: java.lang.String getName()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyIND: java.lang.String getAuthor()
com.umeng.analytics.b$a: b$a()
com.umeng.commonsdk.statistics.proto.e: void a(boolean)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void loadFrameIntoMap(java.lang.String,org.jaudiotagger.tag.id3.AbstractID3v2Frame)
com.caij.puremusic.db.model.ServerLyrics: int hashCode()
com.caij.puremusic.db.model.PlaylistEntityQueries$renamePlaylist$1: PlaylistEntityQueries$renamePlaylist$1(java.lang.String,long)
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: boolean isValid()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void addNewFrameOrAddField(java.util.List,java.util.HashMap,org.jaudiotagger.tag.id3.AbstractID3v2Frame,org.jaudiotagger.tag.id3.AbstractID3v2Frame)
org.jaudiotagger.tag.id3.ID3v22Frame: ID3v22Frame()
org.jaudiotagger.tag.id3.ID3v24FieldKey: org.jaudiotagger.tag.id3.ID3v24FieldKey[] values()
org.jaudiotagger.tag.id3.AbstractID3v2Frame: boolean isPadding(byte[])
com.thegrizzlylabs.sardineandroid.model.SyncCollection: void setSyncLevel(java.lang.String)
com.thegrizzlylabs.sardineandroid.model.Principal: com.thegrizzlylabs.sardineandroid.model.Authenticated getAuthenticated()
com.caij.puremusic.drive.model.DropboxDriveItem$Companion: kotlinx.serialization.KSerializer serializer()
com.thegrizzlylabs.sardineandroid.Sardine: void delete(java.lang.String)
org.jcodec.containers.mp4.boxes.SampleToChunkBox: SampleToChunkBox(org.jcodec.containers.mp4.boxes.Header)
com.caij.puremusic.db.model.PlaylistEntity: java.lang.String getPlaylistName()
com.umeng.analytics.pro.bp: bp(java.lang.String,byte,short)
org.jaudiotagger.audio.generic.AbstractTag: boolean hasCommonFields()
com.alipay.android.phone.mrpc.core.o: java.util.ArrayList d()
org.jaudiotagger.audio.asf.data.FileHeader: java.math.BigInteger getDuration()
com.caij.puremusic.drive.model.PlayListItem: boolean getCanDelete()
com.umeng.commonsdk.statistics.proto.Response: com.umeng.analytics.pro.av deepCopy()
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.caij.puremusic.drive.model.AlbumResponse$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.tencent.mm.opensdk.modelmsg.SendTdiAuth: SendTdiAuth()
com.caij.puremusic.drive.model.OneDriveFileResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.OneDriveFileResponse)
com.caij.puremusic.drive.model.WebDAVToken$Companion: WebDAVToken$Companion()
com.tencent.mm.opensdk.modelmsg.WXFileObject: WXFileObject(byte[])
com.umeng.commonsdk.statistics.proto.b: com.umeng.analytics.pro.bz l()
org.jaudiotagger.tag.id3.AggregatedFrame: java.lang.String getId()
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse: int hashCode()
androidx.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: org.jaudiotagger.utils.tree.DefaultMutableTreeNode getFirstLeaf()
com.caij.puremusic.db.model.AlbumQueries$AlbumQuery: AlbumQueries$AlbumQuery(com.caij.puremusic.db.model.AlbumQueries,long,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.umeng.analytics.pro.u: void a(android.content.Context,long)
com.tencent.bugly.proguard.av: void a(com.tencent.bugly.crashreport.common.strategy.StrategyBean)
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier forNumber(int)
androidx.core.os.ConfigurationCompat$Api24Impl: android.os.LocaleList getLocales(android.content.res.Configuration)
org.simpleframework.xml.core.Section: java.lang.String getPrefix()
org.simpleframework.xml.core.DefaultScanner: boolean isPrimitive()
com.thegrizzlylabs.sardineandroid.model.Response: void setError(com.thegrizzlylabs.sardineandroid.model.Error)
com.caij.puremusic.drive.model.SubsonicSearchResponse$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
org.jaudiotagger.utils.tree.TreeModel: java.lang.Object getRoot()
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] values()
org.jaudiotagger.tag.images.StandardImageHandler: boolean isMimeTypeWritable(java.lang.String)
com.umeng.analytics.process.UMProcessDBHelper: java.util.List readEventByProcess(java.lang.String)
androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType valueOf(java.lang.String)
com.caij.puremusic.drive.model.WebDAVToken: java.lang.String getUrl()
org.jaudiotagger.tag.id3.ID3v23Frames: ID3v23Frames()
org.simpleframework.xml.core.ObjectScanner: org.simpleframework.xml.core.Function getPersist()
androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)
com.google.android.material.bottomappbar.BottomAppBar: int getMenuAlignmentMode()
org.jaudiotagger.audio.asf.data.ContentDescription: java.lang.String getTitle()
org.simpleframework.xml.core.KeyBuilder$Key: KeyBuilder$Key(org.simpleframework.xml.core.KeyBuilder$KeyType,java.lang.String)
com.caij.puremusic.db.model.SongQueries$getSongBySource$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
org.jcodec.containers.mp4.boxes.SampleToChunkBox: void setSampleToChunk(org.jcodec.containers.mp4.boxes.SampleToChunkBox$SampleToChunkEntry[])
com.umeng.analytics.pro.ay: void a(com.umeng.analytics.pro.av,byte[])
com.caij.puremusic.db.model.SongQueries$firstSongByAlbumId$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.umeng.commonsdk.utils.UMUtils: java.lang.String getCPU()
com.thegrizzlylabs.sardineandroid.model.Deny: java.util.List getContent()
com.umeng.commonsdk.utils.UMUtils: java.lang.String getSystemProperty(java.lang.String,java.lang.String)
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String getCreated()
com.caij.puremusic.db.model.HistoryEntityQueries$updateHistorySong$2: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.audio.generic.Utils: int readFromChannel(java.nio.channels.ReadableByteChannel,java.nio.ByteBuffer)
org.jaudiotagger.audio.asf.io.RandomAccessFileInputstream: int read(byte[],int,int)
org.simpleframework.xml.transform.EmptyMatcher: org.simpleframework.xml.transform.Transform match(java.lang.Class)
org.jaudiotagger.audio.asf.data.MetadataDescriptor: org.jaudiotagger.audio.asf.data.ContainerType getContainerType()
org.simpleframework.xml.stream.OutputNode: java.lang.String getReference()
com.caij.puremusic.network.model.Artist: java.lang.String getId()
com.caij.puremusic.network.model.Artist: void setUri(java.lang.String)
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.google.common.collect.Maps$EntryFunction$2: java.lang.Object apply(java.util.Map$Entry)
com.tencent.bugly.proguard.u: boolean a(com.tencent.bugly.proguard.t,com.tencent.bugly.proguard.t)
com.caij.puremusic.dialogs.SongShareDialog: SongShareDialog()
com.umeng.commonsdk.stateless.d$6: int compare(java.lang.Object,java.lang.Object)
org.jaudiotagger.tag.id3.AbstractTagFrameBody: org.jaudiotagger.tag.datatype.AbstractDataType getObject(java.lang.String)
com.tencent.bugly.proguard.w: java.util.List c(int)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyINF: void setupObjectList()
com.caij.puremusic.drive.model.FMediaContainer$Companion: FMediaContainer$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
nl.adaptivity.xmlutil.XmlDeclMode: nl.adaptivity.xmlutil.XmlDeclMode[] values()
org.jaudiotagger.audio.aiff.ExtDouble: ExtDouble(byte[])
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
com.umeng.commonsdk.internal.utils.e: java.util.ArrayList a(com.umeng.commonsdk.internal.utils.e$a)
kotlin.jvm.internal.Ref$LongRef: Ref$LongRef()
org.simpleframework.xml.core.PrimitiveScanner$EmptySection: org.simpleframework.xml.core.Label getText()
org.simpleframework.xml.core.DetailScanner: void scope(java.lang.annotation.Annotation)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
org.simpleframework.xml.core.PrimitiveInlineList: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object,org.simpleframework.xml.stream.Mode)
org.jcodec.containers.mp4.MP4Util: void doWriteFullMovieToChannel(java.nio.channels.FileChannel,org.jcodec.containers.mp4.MP4Util$Movie,int)
org.jaudiotagger.tag.mp4.field.Mp4TagTextField: java.lang.String toString()
com.tencent.mm.opensdk.modelbiz.WXInvoiceAuthInsert$Req: void fromBundle(android.os.Bundle)
org.simpleframework.xml.core.CollectionFactory: java.lang.Class getConversion(java.lang.Class)
org.simpleframework.xml.core.Reflector: java.lang.Class getGenericClass(java.lang.reflect.Type)
org.jaudiotagger.audio.aiff.chunk.CommentsChunk: boolean readChunk()
androidx.core.content.FileProvider$Api21Impl: java.io.File[] getExternalMediaDirs(android.content.Context)
com.tencent.mm.opensdk.modelbiz.WXChannelOpenEvent$Resp: boolean checkArgs()
org.jaudiotagger.tag.id3.ID3v11Tag: byte getMajorVersion()
org.jcodec.containers.mp4.boxes.DataInfoBox: DataInfoBox(org.jcodec.containers.mp4.boxes.Header)
org.jaudiotagger.tag.id3.ID3Tags: java.lang.String stripChar(java.lang.String,char)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyEAR: FieldFrameBodyEAR(java.lang.String)
androidx.constraintlayout.widget.Guideline: void setGuidelineBegin(int)
com.umeng.analytics.pro.bn: void a(com.umeng.analytics.pro.br)
com.caij.puremusic.db.model.FolderQueries: void insertFolder(com.caij.puremusic.db.model.Folder)
com.caij.puremusic.drive.model.ADriveItem: java.lang.String getCreated_at()
com.umeng.analytics.pro.cj: cj(int,java.lang.Throwable)
com.google.android.material.bottomsheet.BottomSheetDialog$EdgeToEdgeCallback: void setPaddingForPosition(android.view.View)
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
com.caij.puremusic.db.model.PlaylistEntityQueries$playlists$2: PlaylistEntityQueries$playlists$2()
org.jaudiotagger.tag.datatype.TCONString: boolean equals(java.lang.Object)
org.simpleframework.xml.core.OverrideType: java.lang.annotation.Annotation getAnnotation(java.lang.Class)
com.tencent.bugly.proguard.bj: bj()
com.umeng.analytics.pro.as: int a(byte[],int)
com.umeng.commonsdk.statistics.proto.b$e: short a()
com.caij.puremusic.drive.model.EmbyAlbumsResponse$$serializer: com.caij.puremusic.drive.model.EmbyAlbumsResponse deserialize(kotlinx.serialization.encoding.Decoder)
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
com.tencent.bugly.proguard.bd: void handleNativeException2(int,int,long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int,int,int,java.lang.String,java.lang.String,java.lang.String[])
com.caij.puremusic.drive.model.ArtistItem: java.lang.Integer component7()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: boolean seek(java.nio.ByteBuffer)
org.jcodec.containers.mp4.boxes.ClearApertureBox: float getWidth()
org.simpleframework.xml.core.ElementMapUnionLabel: org.simpleframework.xml.core.Converter getConverter(org.simpleframework.xml.core.Context)
org.jaudiotagger.tag.mp4.Mp4Tag: boolean hasField(org.jaudiotagger.tag.FieldKey)
org.simpleframework.xml.core.Expression: java.lang.String getAttribute(java.lang.String)
com.caij.puremusic.drive.model.User$Companion: User$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.umeng.analytics.pro.an$c: void b(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.an)
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getDeviceId(android.content.Context)
org.jaudiotagger.tag.TagOptionSingleton: void setId3v23DefaultTextEncoding(byte)
org.simpleframework.xml.core.CacheParameter: CacheParameter(org.simpleframework.xml.core.Parameter,org.simpleframework.xml.core.Label)
org.jaudiotagger.tag.datatype.SynchronisedTempoCode: int getTempo()
com.google.android.material.checkbox.MaterialCheckBox: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
com.caij.puremusic.drive.model.MediaInfoWrapper: java.util.List component1()
org.jaudiotagger.tag.id3.ID3v24Frame$StatusFlags: void modifyFlags()
org.jaudiotagger.tag.id3.reference.MediaMonkeyPlayerRating: MediaMonkeyPlayerRating()
com.tencent.mm.opensdk.modelmsg.WXStateSceneDataObject: int getJumpType()
org.jaudiotagger.audio.asf.data.MetadataContainerFactory: org.jaudiotagger.audio.asf.data.MetadataContainer createContainer(org.jaudiotagger.audio.asf.data.ContainerType,long,java.math.BigInteger)
org.simpleframework.xml.core.Composite: void writeNamespaces(org.simpleframework.xml.stream.OutputNode,org.simpleframework.xml.strategy.Type,org.simpleframework.xml.core.Label)
com.caij.puremusic.drive.model.PlayListItem: PlayListItem(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,long,java.lang.String,int,java.lang.String,java.lang.String)
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean sendChooseCardFromWX(android.content.Context,android.os.Bundle)
com.thegrizzlylabs.sardineandroid.DavResource: DavResource(com.thegrizzlylabs.sardineandroid.model.Response)
org.jaudiotagger.audio.ogg.util.OggPage: OggPage(org.jaudiotagger.audio.ogg.util.OggPageHeader,java.nio.ByteBuffer)
com.tencent.bugly.proguard.as: as(android.content.Context,com.tencent.bugly.proguard.ai,com.tencent.bugly.proguard.w,com.tencent.bugly.proguard.ac,com.tencent.bugly.BuglyStrategy$a)
org.jaudiotagger.audio.iff.ChunkHeader: ChunkHeader(java.nio.ByteOrder)
org.jaudiotagger.tag.datatype.AbstractDataType: byte[] writeByteArray()
org.jaudiotagger.tag.datatype.EventTimingCode: int hashCode()
com.caij.puremusic.drive.model.SubPlayList: SubPlayList()
org.jaudiotagger.audio.mp3.MP3File: void createXMLStructureFormatter()
com.alipay.apmobilesecuritysdk.f.a: java.lang.String a(android.content.Context,java.lang.String,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
com.umeng.commonsdk.statistics.common.HelperUtils: byte[] readStreamToByteArray(java.io.InputStream)
com.caij.puremusic.db.model.SongQueries$SongsByNameArtistQuery: void addListener(app.cash.sqldelight.Query$Listener)
org.xmlpull.v1.XmlPullParser: int nextTag()
org.simpleframework.xml.core.ElementListLabel: org.simpleframework.xml.core.Decorator getDecorator()
org.repackage.com.zui.deviceidservice.IDeviceidInterface$Stub: IDeviceidInterface$Stub()
com.caij.puremusic.drive.model.Propstat$Companion: Propstat$Companion()
com.umeng.analytics.pro.l$1: void onActivityResumed(android.app.Activity)
com.caij.puremusic.drive.model.Prop$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.audio.ogg.util.OggPageHeader: OggPageHeader(byte[])
com.tencent.bugly.BuglyStrategy: void setCloseErrorCallback(boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
com.umeng.commonsdk.debug.UMLog: void aq(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])
org.jaudiotagger.tag.id3.framebody.FrameBodyTSO2: FrameBodyTSO2(org.jaudiotagger.tag.id3.framebody.FrameBodyTSO2)
com.umeng.commonsdk.statistics.common.MLog: void i(java.lang.String,java.lang.Object[])
com.umeng.commonsdk.statistics.internal.a: java.lang.String b()
com.caij.puremusic.db.model.ServerArtistCover: java.lang.String getId()
com.umeng.commonsdk.statistics.proto.a$c: void b(com.umeng.analytics.pro.bu,com.umeng.commonsdk.statistics.proto.a)
com.caij.puremusic.db.model.SongQueries$allSongs$1: SongQueries$allSongs$1(kotlin.jvm.functions.Function18,com.caij.puremusic.db.model.SongQueries)
org.simpleframework.xml.core.VersionLabel: java.lang.String getName()
com.umeng.commonsdk.statistics.common.DataHelper: byte[] hash(byte[])
com.caij.puremusic.drive.model.SubsonicPlaylist$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.tencent.bugly.crashreport.CrashReport$UserStrategy: void setCrashHandleCallback(com.tencent.bugly.crashreport.CrashReport$CrashHandleCallback)
com.caij.puremusic.fragments.artists.ArtistDetailsFragment: ArtistDetailsFragment()
org.jaudiotagger.tag.datatype.BooleanByte: BooleanByte(org.jaudiotagger.tag.datatype.BooleanByte)
org.simpleframework.xml.core.ElementMapUnionParameter: int getIndex()
org.json.alipay.b$a: b$a(byte)
com.google.android.material.bottomsheet.BottomSheetBehavior: void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int)
com.umeng.commonsdk.statistics.proto.a: boolean m()
org.jaudiotagger.audio.asf.data.AudioStreamChunk: void setCompressionFormat(long)
com.caij.puremusic.drive.model.Part: boolean equals(java.lang.Object)
com.google.android.material.internal.FlowLayout: FlowLayout(android.content.Context,android.util.AttributeSet)
com.alipay.android.phone.mrpc.core.a.b: b(java.lang.String,java.lang.Object)
org.simpleframework.xml.core.AnnotationFactory: java.lang.annotation.Annotation getInstance(java.lang.ClassLoader,java.lang.Class,boolean)
com.tencent.bugly.proguard.w: long a(java.lang.String,android.content.ContentValues,com.tencent.bugly.proguard.v)
org.simpleframework.xml.strategy.VisitorStrategy: org.simpleframework.xml.strategy.Value read(org.simpleframework.xml.strategy.Type,org.simpleframework.xml.stream.NodeMap,java.util.Map)
com.caij.vip.VipApiService: java.lang.Object activation(java.lang.String,java.lang.String,kotlin.coroutines.Continuation)
com.caij.puremusic.drive.model.PlayListsResponse: java.lang.String toString()
org.simpleframework.xml.core.ElementMapLabel: boolean isInline()
com.caij.puremusic.db.model.ArtistQueries$ArtistByIdQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.caij.puremusic.db.model.SearchAlbumResultQueries$GetByIdQuery: void addListener(app.cash.sqldelight.Query$Listener)
com.umeng.commonsdk.internal.utils.ApplicationLayerUtilAgent: void wifiChange(android.content.Context)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: MetadataBlockDataPicture(byte[],int,java.lang.String,java.lang.String,int,int,int,int)
com.umeng.analytics.pro.bf: com.umeng.analytics.pro.bc a()
com.caij.puremusic.db.model.Song: java.lang.String getArtistName()
javax.xml.namespace.QName: java.lang.String getLocalPart()
org.jaudiotagger.tag.id3.ID3v1TagField: void setContent(java.lang.String)
org.jaudiotagger.tag.datatype.BooleanString: byte[] writeByteArray()
com.caij.puremusic.fragments.lyrics.ComnLyricsFragment$LyricsType: com.caij.puremusic.fragments.lyrics.ComnLyricsFragment$LyricsType[] values()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.nio.channels.FileLock getFileLockForWriting(java.nio.channels.FileChannel,java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
nl.adaptivity.xmlutil.serialization.XML$Companion$defaultInstance$1: XML$Companion$defaultInstance$1()
org.jaudiotagger.audio.asf.data.MetadataContainer: MetadataContainer(org.jaudiotagger.audio.asf.data.ContainerType)
com.umeng.commonsdk.statistics.proto.c$c: c$c(com.umeng.commonsdk.statistics.proto.c$1)
com.caij.puremusic.drive.model.JellyfinFolder$$serializer: com.caij.puremusic.drive.model.JellyfinFolder deserialize(kotlinx.serialization.encoding.Decoder)
org.simpleframework.xml.core.Composite: void writeText(org.simpleframework.xml.stream.OutputNode,java.lang.Object,org.simpleframework.xml.core.Label)
com.umeng.commonsdk.statistics.common.b: byte[] a(byte[])
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getDeviceIdForGeneral(android.content.Context)
org.simpleframework.xml.core.PathParser: boolean isAttribute()
org.jcodec.containers.mp4.boxes.LoadSettingsBox: java.lang.String fourcc()
com.caij.puremusic.drive.model.PlayListSubsonicResponse: java.lang.String component2()
com.tencent.mm.opensdk.utils.ILog: void w(java.lang.String,java.lang.String)
com.alipay.android.phone.mrpc.core.u: void b(java.lang.String)
com.caij.puremusic.drive.model.BaiduDriveItem$Companion: BaiduDriveItem$Companion()
com.afollestad.materialdialogs.internal.main.DialogScrollView: void setRootView(com.afollestad.materialdialogs.internal.main.DialogLayout)
org.jaudiotagger.audio.real.RealFileReader: RealFileReader()
org.jaudiotagger.audio.mp3.MP3AudioHeader: void setTimePerFrame()
androidx.constraintlayout.helper.widget.Flow: void setPaddingRight(int)
nl.adaptivity.xmlutil.serialization.XmlSerializationPolicy$XmlEncodeDefault: nl.adaptivity.xmlutil.serialization.XmlSerializationPolicy$XmlEncodeDefault valueOf(java.lang.String)
org.simpleframework.xml.strategy.VisitorStrategy: VisitorStrategy(org.simpleframework.xml.strategy.Visitor)
org.simpleframework.xml.core.PrimitiveFactory: org.simpleframework.xml.core.Instance getInstance(org.simpleframework.xml.stream.InputNode)
com.caij.puremusic.network.model.Artist: int hashCode()
androidx.constraintlayout.motion.widget.MotionLayout: float getProgress()
org.simpleframework.xml.core.MethodContact: MethodContact(org.simpleframework.xml.core.MethodPart)
org.simpleframework.xml.core.Variable$Adapter: Variable$Adapter(org.simpleframework.xml.core.Converter,org.simpleframework.xml.core.Label,java.lang.Object)
org.jaudiotagger.audio.asf.data.GUID: java.lang.String[] getHex(byte[])
org.jaudiotagger.audio.flac.metadatablock.MetadataBlock: org.jaudiotagger.audio.flac.metadatablock.MetadataBlockData getData()
org.jaudiotagger.audio.aiff.AiffAudioHeader: void setEndian(org.jaudiotagger.audio.aiff.AiffAudioHeader$Endian)
org.jcodec.containers.mp4.boxes.MovieExtendsHeaderBox: java.lang.String fourcc()
org.simpleframework.xml.core.Qualifier: void scope(org.simpleframework.xml.core.Contact)
com.alipay.android.phone.mrpc.core.h: android.content.Context a(com.alipay.android.phone.mrpc.core.h)
org.jcodec.containers.mp4.boxes.CleanApertureExtension: int estimateSize()
com.umeng.analytics.pro.aw: java.lang.String a(byte)
com.umeng.commonsdk.utils.FileLockUtil: java.nio.channels.FileLock getFileLock(java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyETCO: java.lang.String getIdentifier()
com.tencent.bugly.proguard.x: android.database.sqlite.SQLiteDatabase getWritableDatabase()
com.caij.puremusic.drive.model.Part$$serializer: Part$$serializer()
org.jaudiotagger.tag.TagOptionSingleton: byte getTimeStampFormat()
org.jaudiotagger.tag.datatype.PairedTextEncodedStringNullTerminated$ValuePairs: PairedTextEncodedStringNullTerminated$ValuePairs()
com.caij.puremusic.drive.model.AMediaContainer$Companion: kotlinx.serialization.KSerializer serializer()
org.jaudiotagger.tag.asf.AbstractAsfTagImageField: byte[] getRawImageData()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressCircleDiameter()
com.caij.puremusic.drive.adrive.WebRouteFragment: WebRouteFragment()
com.umeng.commonsdk.statistics.common.d$b: void a(java.io.File)
com.umeng.commonsdk.service.UMGlobalContext: boolean isMainProcess(android.content.Context)
com.caij.puremusic.db.model.PlayCountEntityQueries$insert$2: void invoke(kotlin.jvm.functions.Function1)
com.caij.puremusic.drive.model.SubsonicPlaylist: com.caij.puremusic.drive.model.SubsonicPlaylist copy$default(com.caij.puremusic.drive.model.SubsonicPlaylist,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,int,int,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
com.caij.puremusic.drive.model.Directory: Directory()
com.umeng.analytics.pro.o: void g(java.lang.Object)
com.caij.puremusic.drive.model.Prop$$serializer: com.caij.puremusic.drive.model.Prop deserialize(kotlinx.serialization.encoding.Decoder)
org.simpleframework.xml.core.InstantiatorBuilder: void validateParameter(org.simpleframework.xml.core.Label,org.simpleframework.xml.core.Parameter)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.audio.asf.data.AudioStreamChunk: long getCompressionFormat()
org.jcodec.containers.mp4.boxes.SampleEntry: void setDrefInd(short)
com.caij.puremusic.model.CategoryInfo$Category: int getIdHolder()
com.google.android.material.button.MaterialButton: int getTextHeight()
com.umeng.analytics.process.b: void onCreate(android.database.sqlite.SQLiteDatabase)
org.jaudiotagger.tag.asf.AsfTag: java.util.List getCopyright()
net.yslibrary.android.keyboardvisibilityevent.KeyboardVisibilityEvent$setEventListener$1: void onDestroy()
com.caij.puremusic.preferences.NowPlayingScreenPreference: NowPlayingScreenPreference(android.content.Context)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: java.util.List search(java.lang.String,java.lang.String,java.lang.String)
org.jcodec.containers.mp4.boxes.ChunkOffsets64Box: void setChunkOffsets(long[])
androidx.appcompat.widget.SearchView$Api29Impl: void refreshAutoCompleteResults(android.widget.AutoCompleteTextView)
org.jaudiotagger.audio.iff.IffHeaderChunk: void ensureOnEqualBoundary(java.io.RandomAccessFile,org.jaudiotagger.audio.iff.ChunkHeader)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.caij.puremusic.db.model.SongEntityQueries$deletePlaylistSongs$1: SongEntityQueries$deletePlaylistSongs$1(long)
androidx.appcompat.widget.SearchView: int getPreferredHeight()
com.caij.puremusic.db.model.PlaylistEntityQueries$insert$1: PlaylistEntityQueries$insert$1(com.caij.puremusic.db.model.PlaylistEntity)
com.umeng.analytics.pro.bn: void a(long)
com.tencent.bugly.proguard.au: void a(com.tencent.bugly.proguard.au)
org.simpleframework.xml.stream.HyphenBuilder: java.lang.String getElement(java.lang.String)
org.jcodec.containers.mp4.boxes.TimecodeSampleEntry: byte getNumFrames()
com.umeng.commonsdk.stateless.b: void m()
org.jaudiotagger.tag.datatype.BooleanString: int getSize()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: boolean isCommon()
org.simpleframework.xml.core.StructureBuilder: void text(org.simpleframework.xml.core.Contact,java.lang.annotation.Annotation)
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: com.tencent.bugly.crashreport.crash.jni.NativeExceptionHandler b(com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler)
org.simpleframework.xml.convert.RegistryStrategy: org.simpleframework.xml.strategy.Value read(org.simpleframework.xml.strategy.Type,org.simpleframework.xml.stream.NodeMap,java.util.Map)
com.tencent.mm.opensdk.modelmsg.LaunchFromWX$Req: void fromBundle(android.os.Bundle)
com.google.android.material.imageview.ShapeableImageView: ShapeableImageView(android.content.Context,android.util.AttributeSet)
com.tencent.bugly.proguard.h: h(java.lang.String)
com.tencent.mm.opensdk.diffdev.OAuthListener: void onAuthGotQrcode(java.lang.String,byte[])
org.jaudiotagger.audio.ogg.util.OggCRCFactory: byte[] computeCRC(byte[])
org.jaudiotagger.audio.asf.data.ContentDescription: void setCopyright(java.lang.String)
org.jaudiotagger.tag.id3.ID3v1Tag: org.jaudiotagger.tag.TagField getFirstField(java.lang.String)
org.jcodec.containers.mp4.boxes.TrackExtendsBox: int estimateSize()
com.caij.puremusic.service.PlaybackLocation: com.caij.puremusic.service.PlaybackLocation[] values()
com.caij.puremusic.db.model.PlaylistEntityQueries$playlists$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
androidx.constraintlayout.motion.widget.MotionLayout: void setOnShow(float)
com.caij.puremusic.drive.model.PlexSectionsResponse$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
org.jaudiotagger.audio.generic.AudioFileReader2: org.jaudiotagger.audio.generic.GenericAudioHeader getEncodingInfo(java.io.RandomAccessFile)
com.umeng.analytics.pro.ay: java.lang.Short d(byte[],com.umeng.analytics.pro.bc,com.umeng.analytics.pro.bc[])
org.simpleframework.xml.core.InstanceFactory$ValueInstance: InstanceFactory$ValueInstance(org.simpleframework.xml.core.InstanceFactory,org.simpleframework.xml.strategy.Value)
com.caij.puremusic.db.model.SongQueries$deleteSongBySource$1: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.db.model.ServerAudioFormatQueries$GetByIdQuery: void addListener(app.cash.sqldelight.Query$Listener)
com.umeng.commonsdk.UMConfigure$4: void run()
com.caij.puremusic.preferences.NowPlayingScreenPreference: NowPlayingScreenPreference(android.content.Context,android.util.AttributeSet,int)
org.jcodec.containers.mp4.boxes.TimecodeSampleEntry: int getFrameDuration()
com.umeng.commonsdk.statistics.proto.e$b: com.umeng.commonsdk.statistics.proto.e$a a()
com.caij.puremusic.db.model.ServerSongCoverQueries$getById$2: ServerSongCoverQueries$getById$2()
org.jaudiotagger.tag.id3.ID3v22Tag: java.lang.String getFirst(org.jaudiotagger.tag.id3.ID3v22FieldKey)
org.jaudiotagger.audio.asf.data.LanguageList: int getLanguageCount()
org.simpleframework.xml.core.VersionLabel: java.lang.String getEmpty(org.simpleframework.xml.core.Context)
org.jaudiotagger.audio.aiff.AiffFileHeader: AiffFileHeader()
com.tencent.mm.opensdk.utils.b: int a(java.lang.String,int)
org.jaudiotagger.tag.datatype.Lyrics3Image: void setTimeStamp(org.jaudiotagger.tag.datatype.Lyrics3TimeStamp)
org.jaudiotagger.tag.Tag: java.util.List getFields(org.jaudiotagger.tag.FieldKey)
org.simpleframework.xml.stream.Style: java.lang.String getAttribute(java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyUFID: byte[] getUniqueIdentifier()
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
org.simpleframework.xml.core.ModelSection: java.lang.String getPrefix()
com.caij.puremusic.drive.model.PlexArtistsResponse: com.caij.puremusic.drive.model.AMediaContainer getMediaContainer()
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMR: FrameBodyCOMR(java.nio.ByteBuffer,int)
androidx.appcompat.widget.ListPopupWindow$Api24Impl: int getMaxAvailableHeight(android.widget.PopupWindow,android.view.View,int,boolean)
androidx.constraintlayout.motion.widget.MotionLayout: void setTransitionListener(androidx.constraintlayout.motion.widget.MotionLayout$TransitionListener)
com.caij.puremusic.model.DriveFileParcelable$Creator: DriveFileParcelable$Creator()
com.umeng.umzid.ZIDManager: com.umeng.umzid.ZIDManager getInstance()
com.google.android.material.chip.Chip: android.text.TextUtils$TruncateAt getEllipsize()
com.alipay.apmobilesecuritysdk.e.h: java.lang.String d(android.content.Context)
org.jaudiotagger.audio.AudioFileIO: org.jaudiotagger.audio.AudioFile readFile(java.io.File)
com.umeng.commonsdk.statistics.proto.a$b: a$b(com.umeng.commonsdk.statistics.proto.a$1)
org.simpleframework.xml.core.ElementUnionLabel: org.simpleframework.xml.core.Decorator getDecorator()
org.jaudiotagger.tag.TagOptionSingleton: void setId3v1SaveTitle(boolean)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
org.jcodec.containers.mp4.boxes.ColorExtension: java.lang.String fourcc()
org.simpleframework.xml.stream.DocumentReader: org.simpleframework.xml.stream.EventNode convert(org.w3c.dom.Node)
com.umeng.analytics.b: void i()
org.jcodec.containers.mp4.boxes.MdtaBox: org.jcodec.containers.mp4.boxes.MdtaBox createMdtaBox(java.lang.String)
org.simpleframework.xml.core.ParameterContact: java.lang.annotation.Annotation getAnnotation()
org.jaudiotagger.audio.generic.GenericAudioHeader: void setBitRate(int)
com.umeng.analytics.process.UMProcessDBHelper: void deleteEventDatas(java.lang.String,java.lang.String,java.util.List)
com.caij.easypermissions.PermissionFragment: PermissionFragment()
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidth()
com.caij.puremusic.model.Contributor: Contributor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
org.jaudiotagger.audio.ogg.OggVorbisTagWriter: void replacePagesAndRenumberPageSeqs(org.jaudiotagger.audio.ogg.OggVorbisTagReader$OggVorbisHeaderSizes,int,org.jaudiotagger.audio.ogg.util.OggPageHeader,java.nio.ByteBuffer,java.io.RandomAccessFile,java.io.RandomAccessFile)
com.thegrizzlylabs.sardineandroid.Sardine: java.util.List patch(java.lang.String,java.util.Map)
com.yalantis.ucrop.view.OverlayView: void setDimmedColor(int)
com.caij.puremusic.drive.model.JellyfinSongListResponse: int getTotalRecordCount()
androidx.constraintlayout.helper.widget.Flow: void setLastHorizontalBias(float)
com.caij.puremusic.drive.model.Prop: void setGetcontenttype(java.lang.String)
org.simpleframework.xml.stream.Formatter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyLINK: FrameBodyLINK()
com.caij.puremusic.model.Playlist$Companion: Playlist$Companion()
com.umeng.commonsdk.stateless.b: b(android.content.Context)
com.thegrizzlylabs.sardineandroid.model.Property$PropertyConverter: Property$PropertyConverter()
com.google.android.material.search.SearchView: void setText(int)
com.google.common.reflect.Types$JavaVersion: java.lang.reflect.Type usedInGenericType(java.lang.reflect.Type)
com.caij.puremusic.activities.base.AbsCastActivity: AbsCastActivity()
com.google.android.material.search.SearchView: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
org.jaudiotagger.tag.id3.framebody.FrameBodyDeprecated: org.jaudiotagger.tag.id3.framebody.AbstractID3v2FrameBody getOriginalFrameBody()
com.caij.puremusic.drive.model.User$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.umeng.commonsdk.utils.a: long b(com.umeng.commonsdk.utils.a)
nl.adaptivity.xmlutil.core.KtXmlWriter$EscapeMode: KtXmlWriter$EscapeMode(java.lang.String,int)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
androidx.core.content.res.FontResourcesParserCompat$Api21Impl: int getType(android.content.res.TypedArray,int)
androidx.core.graphics.PaintCompat$Api23Impl: boolean hasGlyph(android.graphics.Paint,java.lang.String)
androidx.appcompat.resources.Compatibility$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
org.jaudiotagger.tag.id3.framebody.FrameBodyPOSS: FrameBodyPOSS(byte,long)
org.jaudiotagger.tag.reference.MusicalKey: boolean isValid(java.lang.String)
com.caij.puremusic.drive.model.JellyfinArtistResponse: JellyfinArtistResponse(int,java.util.List,int,int,kotlinx.serialization.internal.SerializationConstructorMarker)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSIZ: FrameBodyTSIZ(byte,java.lang.String)
org.jaudiotagger.tag.lyrics3.AbstractLyrics3: AbstractLyrics3()
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
org.jaudiotagger.tag.id3.reference.MediaMonkeyPlayerRating: int convertRatingToFiveStarScale(int)
org.jaudiotagger.audio.opus.OpusVorbisTagReader: org.jaudiotagger.tag.Tag read(java.io.RandomAccessFile)
org.jaudiotagger.tag.TagOptionSingleton: void setId3v24DefaultTextEncoding(byte)
androidx.core.content.pm.PackageInfoCompat$Api28Impl: boolean hasMultipleSigners(android.content.pm.SigningInfo)
org.simpleframework.xml.core.CompositeInlineMap: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object)
com.umeng.analytics.filter.EventList: void deleteDataFile(java.io.File)
com.umeng.commonsdk.statistics.internal.b: void onRequestSucceed(boolean)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
org.simpleframework.xml.core.ArrayInstance: ArrayInstance(org.simpleframework.xml.strategy.Value)
org.jaudiotagger.audio.generic.Utils: void writeBER32(java.nio.ByteBuffer,int)
org.jaudiotagger.tag.id3.ID3v1Iterator: void remove()
com.umeng.analytics.pro.bf: java.lang.Object a(int)
com.caij.puremusic.drive.model.OneDriveItem: OneDriveItem(java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,com.caij.puremusic.drive.model.OneDriveFolder,com.caij.puremusic.drive.model.OneDriveFile,com.caij.puremusic.drive.model.ParentReference,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.chip.Chip: void setCloseIconVisible(int)
com.umeng.analytics.pro.bs: java.lang.String toString()
com.caij.puremusic.model.DriveFileParcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.material.slider.Slider: void setThumbRadiusResource(int)
org.repackage.a.a.a.a.c: boolean a(android.content.Context)
org.jaudiotagger.tag.aiff.AiffTag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
org.jaudiotagger.tag.mp4.field.Mp4GenreField: Mp4GenreField(byte[])
org.jaudiotagger.audio.ogg.OggVorbisTagReader: OggVorbisTagReader()
com.tencent.mm.opensdk.channel.a.a: java.lang.Object a(int,java.lang.String)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo()
org.simpleframework.xml.core.FieldScanner$FieldKey: boolean equals(org.simpleframework.xml.core.FieldScanner$FieldKey)
com.umeng.analytics.CoreProtocol: CoreProtocol()
nl.adaptivity.xmlutil.serialization.XmlConfig$Companion$DEFAULT_NONRECOVERABLE_CHILD_HANDLER$1: XmlConfig$Companion$DEFAULT_NONRECOVERABLE_CHILD_HANDLER$1()
com.google.android.material.bottomsheet.BottomSheetBehavior$2: void onAnimationUpdate(android.animation.ValueAnimator)
com.umeng.commonsdk.stateless.d: byte[] a(java.lang.String)
org.jaudiotagger.audio.ogg.OggVorbisTagReader$OggVorbisHeaderSizes: OggVorbisTagReader$OggVorbisHeaderSizes(long,long,int,int,java.util.List)
com.umeng.analytics.pro.t: void a(java.lang.Throwable)
androidx.preference.PreferenceFragmentCompat: PreferenceFragmentCompat()
com.caij.puremusic.drive.model.AlbumResponse$$serializer: AlbumResponse$$serializer()
com.caij.puremusic.drive.model.Media: com.caij.puremusic.drive.model.Media copy$default(com.caij.puremusic.drive.model.Media,int,int,int,int,java.lang.String,java.lang.String,java.util.List,int,java.lang.Object)
org.simpleframework.xml.transform.DefaultMatcher: DefaultMatcher(org.simpleframework.xml.transform.Matcher)
com.umeng.analytics.process.b: void a(android.database.sqlite.SQLiteDatabase)
org.jaudiotagger.tag.Tag: java.lang.String getFirst(org.jaudiotagger.tag.FieldKey)
org.jcodec.containers.mp4.boxes.TrunBox: int estimateSize()
com.umeng.analytics.pro.i$a: i$a(java.lang.String,int)
com.alipay.android.phone.mrpc.core.n: java.lang.Thread newThread(java.lang.Runnable)
com.caij.puremusic.db.model.SongQueries: void clear()
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse: JellyfinPlaylistsResponse(java.util.List,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
org.simpleframework.xml.core.AnnotationFactory: boolean isPrimitive(java.lang.Class)
org.simpleframework.xml.core.SessionManager$Reference: int clear()
com.caij.puremusic.drive.model.SubsonicAlbum$Companion: SubsonicAlbum$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.jaudiotagger.audio.ogg.util.OggPageHeader: java.util.List getPacketList()
com.caij.puremusic.drive.model.PlexPlaylistsResponse$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.alipay.android.phone.mrpc.core.aa: java.lang.String a()
com.caij.puremusic.db.model.PlaybackSong$Adapter: app.cash.sqldelight.ColumnAdapter getTypeAdapter()
com.umeng.commonsdk.stateless.b: java.lang.String j()
org.jaudiotagger.tag.id3.ID3v24FieldKey: ID3v24FieldKey(java.lang.String,int,java.lang.String,java.lang.String,org.jaudiotagger.tag.id3.Id3FieldType)
com.umeng.analytics.pro.bo: int E()
com.caij.puremusic.drive.model.PlaylistMetadata$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.PlaylistMetadata)
com.caij.puremusic.drive.model.ADriveItem$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
org.simpleframework.xml.core.TextLabel: java.lang.String getEmpty(org.simpleframework.xml.core.Context)
com.yalantis.ucrop.view.CropImageView: void setMaxResultImageSizeX(int)
com.umeng.analytics.pro.ca: java.lang.Class D()
com.umeng.umzid.ZIDManager$a: void run()
com.tencent.bugly.proguard.au: au(android.content.Context)
com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.bottomsheet.BottomSheetBehavior from(android.view.View)
com.caij.puremusic.db.model.SongQueries$SongByPathQuery: java.lang.String toString()
com.caij.puremusic.drive.model.BaiduDriveItem$Companion: kotlinx.serialization.KSerializer serializer()
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: int getWXAppSupportAPI()
com.tencent.bugly.proguard.i: com.tencent.bugly.proguard.i a(long,java.lang.String)
com.caij.puremusic.drive.model.Prop$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: boolean appendNativeLog(java.lang.String,java.lang.String,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
com.tencent.bugly.crashreport.crash.jni.NativeExceptionHandler: com.tencent.bugly.crashreport.crash.CrashDetailBean packageCrashDatas(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,byte[],java.util.Map,boolean,boolean)
com.tencent.bugly.proguard.at: boolean k()
com.google.common.io.Files$FilePredicate: Files$FilePredicate(java.lang.String,int)
com.caij.puremusic.drive.model.ImageTags: java.lang.String getPrimary()
androidx.appcompat.widget.AppCompatToggleButton: void setEmojiCompatEnabled(boolean)
org.simpleframework.xml.core.DefaultScanner: DefaultScanner(org.simpleframework.xml.core.Detail,org.simpleframework.xml.core.Support)
org.simpleframework.xml.stream.InputElement: void skip()
com.caij.puremusic.drive.model.DropboxDriveFileResponse: boolean equals(java.lang.Object)
com.alipay.apmobilesecuritysdk.a.a: a(android.content.Context)
com.alipay.apmobilesecuritysdk.b.a: void a(int)
android.support.v4.media.RatingCompat$Api19Impl: boolean hasHeart(android.media.Rating)
org.simpleframework.xml.core.FieldContact: java.lang.annotation.Annotation getCache(java.lang.Class)
org.jaudiotagger.tag.datatype.TempoCode: TempoCode(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody)
org.simpleframework.xml.core.Support: boolean isAssignable(java.lang.Class,java.lang.Class)
org.jcodec.containers.mp4.boxes.EsdsBox: int getAvgBitrate()
com.umeng.commonsdk.statistics.proto.Response$a: void b(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getSubOSName(android.content.Context)
org.jaudiotagger.tag.id3.framebody.FrameBodyPCNT: java.lang.String getIdentifier()
com.caij.puremusic.drive.model.OneDriveFileResponse$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
org.simpleframework.xml.ElementMap: java.lang.Class keyType()
org.simpleframework.xml.core.ExtractorFactory$ElementListExtractor: org.simpleframework.xml.ElementList[] getAnnotations()
org.simpleframework.xml.core.AttributeLabel: boolean isData()
androidx.constraintlayout.widget.VirtualLayout: VirtualLayout(android.content.Context,android.util.AttributeSet)
org.simpleframework.xml.core.PathParser: void element(java.lang.String)
org.jaudiotagger.audio.generic.GenericTag$GenericTagTextField: GenericTag$GenericTagTextField(org.jaudiotagger.audio.generic.GenericTag,java.lang.String,java.lang.String)
androidx.core.widget.TextViewCompat$Api16Impl: int getMaxLines(android.widget.TextView)
com.caij.puremusic.preferences.AlbumCoverStylePreference: AlbumCoverStylePreference(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.tag.datatype.AbstractDataTypeList: java.lang.String toString()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()
com.google.android.material.button.MaterialButton: void setElevation(float)
org.simpleframework.xml.core.Section: org.simpleframework.xml.core.Label getElement(java.lang.String)
com.tencent.mmkv.MMKV: long getMMKVWithID(java.lang.String,int,java.lang.String,java.lang.String)
com.umeng.commonsdk.statistics.internal.StatTracer: void onRequestSucceed(boolean)
com.umeng.commonsdk.internal.crash.a: a()
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgram$Resp: boolean checkArgs()
com.caij.puremusic.db.model.ServerAudioFormatQueries$insert$2: ServerAudioFormatQueries$insert$2()
org.jaudiotagger.tag.id3.framebody.FrameBodySYLT: FrameBodySYLT(int,java.lang.String,int,int,java.lang.String,byte[])
com.umeng.commonsdk.statistics.noise.Defcon: boolean isOpen()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.lang.String getFirst(org.jaudiotagger.tag.FieldKey)
org.jcodec.containers.mp4.boxes.CompositionOffsetsBox: java.lang.String fourcc()
com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback: void onStateChanged(android.view.View,int)
org.simpleframework.xml.core.ElementUnionLabel: java.lang.Class getType()
com.google.android.material.materialswitch.MaterialSwitch: android.graphics.drawable.Drawable getTrackDrawable()
com.caij.puremusic.drive.model.Metadata: Metadata(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,java.util.List,kotlinx.serialization.internal.SerializationConstructorMarker)
org.jaudiotagger.tag.id3.framebody.FrameBodyPCNT: FrameBodyPCNT(org.jaudiotagger.tag.id3.framebody.FrameBodyPCNT)
org.simpleframework.xml.core.Introspector: org.simpleframework.xml.core.Expression getExpression()
com.caij.puremusic.drive.model.OneDriveFile: com.caij.puremusic.drive.model.OneDriveFile copy(java.lang.String)
com.caij.puremusic.db.model.Artist: long getId()
org.simpleframework.xml.core.Parameter: java.lang.annotation.Annotation getAnnotation()
com.umeng.analytics.pro.bu: void a(com.umeng.analytics.pro.bs)
org.jcodec.containers.mp4.boxes.LoadSettingsBox: int estimateSize()
org.jaudiotagger.tag.asf.AsfTag: org.jaudiotagger.tag.TagField createCompilationField(boolean)
org.jaudiotagger.audio.io.FileOperator: void write(long,okio.Buffer,long)
org.jaudiotagger.tag.images.ArtworkFactory: org.jaudiotagger.tag.images.Artwork createLinkedArtworkFromURL(java.lang.String)
org.simpleframework.xml.core.ArrayFactory: java.lang.Class getComponentType()
androidx.core.view.ViewParentCompat$Api21Impl: void onStopNestedScroll(android.view.ViewParent,android.view.View)
com.tencent.mm.opensdk.modelpay.JumpToOfflinePay$Req: boolean checkArgs()
org.jaudiotagger.tag.lyrics3.Lyrics3v2: java.util.Iterator iterator()
com.umeng.commonsdk.framework.UMFrUtils: void updateLastInstantBuildTime(android.content.Context)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)
org.jcodec.containers.mp4.boxes.SampleEntry: SampleEntry(org.jcodec.containers.mp4.boxes.Header)
com.umeng.analytics.pro.o: boolean a(org.json.JSONArray)
nl.adaptivity.xmlutil.util.CompactFragment$toString$1: CompactFragment$toString$1()
org.jcodec.containers.mp4.boxes.TrakBox: boolean hasDataRef()
com.caij.puremusic.glide.MusicGlideModule: MusicGlideModule()
androidx.fragment.app.DialogFragment: boolean getShowsDialog()
com.alipay.sdk.app.PayResultActivity: PayResultActivity()
com.umeng.analytics.pro.i: java.lang.String c(java.lang.String)
com.google.common.hash.BloomFilterStrategies: com.google.common.hash.BloomFilterStrategies[] $values()
com.umeng.analytics.b: void a(android.content.Context,com.umeng.analytics.MobclickAgent$EScenarioType)
org.jaudiotagger.audio.wav.WavSubFormat: org.jaudiotagger.audio.wav.WavSubFormat[] values()
com.caij.puremusic.drive.model.PlayListsSubsonicResponse: void write$Self(com.caij.puremusic.drive.model.PlayListsSubsonicResponse,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.bumptech.glide.manager.LifecycleLifecycle: void onStart(androidx.lifecycle.LifecycleOwner)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatElevation()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
com.umeng.analytics.pro.bn: void a(com.umeng.analytics.pro.bz)
com.caij.puremusic.model.Contributor: java.lang.String getName()
com.umeng.analytics.pro.bo: void a(com.umeng.analytics.pro.bz)
org.simpleframework.xml.core.Label: org.simpleframework.xml.strategy.Type getDependent()
com.umeng.commonsdk.internal.c$1: c$1(android.content.Context)
com.tencent.mm.opensdk.modelbiz.WXPayInsurance$Req: boolean checkArgs()
org.simpleframework.xml.core.ElementListUnionLabel: org.simpleframework.xml.strategy.Type getDependent()
org.simpleframework.xml.core.Variable: java.lang.String getName()
org.jaudiotagger.tag.asf.AsfTagField: AsfTagField(org.jaudiotagger.tag.asf.AsfFieldKey)
org.repackage.com.meizu.flyme.openidsdk.b: java.lang.String a(android.content.Context,org.repackage.com.meizu.flyme.openidsdk.OpenId)
com.thegrizzlylabs.sardineandroid.DavResource: boolean isDirectory()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
com.umeng.analytics.pro.e$b: e$b()
com.google.android.material.bottomsheet.BottomSheetDragHandleView$1: void onSlide(android.view.View,float)
com.tencent.bugly.crashreport.biz.UserInfoBean: UserInfoBean(android.os.Parcel)
org.jaudiotagger.audio.aiff.AiffTagWriter: boolean isAtEndOfFileAllowingForPaddingByte(org.jaudiotagger.tag.aiff.AiffTag,java.nio.channels.FileChannel)
org.simpleframework.xml.stream.EventNode: java.lang.String getName()
com.caij.puremusic.drive.model.AlbumMetadata$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.umeng.analytics.pro.o: void b(java.lang.Object)
com.umeng.commonsdk.statistics.idtracking.j: java.lang.String g()
com.umeng.commonsdk.statistics.common.d$b: void c(java.io.File)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
org.jaudiotagger.audio.generic.Utils: java.lang.String readPascalString(java.nio.ByteBuffer)
org.jaudiotagger.tag.lyrics3.AbstractLyrics3: void delete(java.io.RandomAccessFile)
org.repackage.com.meizu.flyme.openidsdk.a: a()
com.caij.puremusic.db.model.SongEntityQueries$deleteSongFromPlaylist$2: SongEntityQueries$deleteSongFromPlaylist$2()
org.jcodec.containers.mp4.boxes.TrakBox: boolean isAudio()
com.tencent.mm.opensdk.modelbiz.SubscribeMessage$Resp: void toBundle(android.os.Bundle)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSIZ: java.lang.String getIdentifier()
com.umeng.analytics.filter.c: boolean onPreProcessImprintKey(java.lang.String,java.lang.String)
com.caij.puremusic.model.UpdateInfo$ForcedUpgradeInfo$1: UpdateInfo$ForcedUpgradeInfo$1()
com.thegrizzlylabs.sardineandroid.util.SardineUtil: java.lang.String toXml(java.lang.Object)
com.umeng.analytics.pro.bo: int g(int)
com.google.android.material.chip.Chip: void setEnsureMinTouchTargetSize(boolean)
com.caij.puremusic.drive.model.Metadata: java.lang.String getSummary()
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getAndroidId(android.content.Context)
com.umeng.analytics.pro.o: void o()
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyTextInfo: java.lang.String getUserFriendlyValue()
com.umeng.commonsdk.debug.UMLogUtils: java.lang.String makeUrl(java.lang.String)
org.jcodec.containers.mp4.boxes.VideoMediaHeaderBox: VideoMediaHeaderBox(org.jcodec.containers.mp4.boxes.Header)
com.tencent.mm.opensdk.modelbiz.WXChannelBaseJumpInfo: void serialize(android.os.Bundle)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
org.jaudiotagger.audio.wav.WavTagWriter: org.jaudiotagger.audio.iff.ChunkHeader seekToStartOfListInfoMetadata(java.nio.channels.FileChannel,org.jaudiotagger.tag.wav.WavTag)
org.jaudiotagger.tag.id3.AbstractTagFrameBody: AbstractTagFrameBody(org.jaudiotagger.tag.id3.AbstractTagFrameBody)
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
org.simpleframework.xml.core.Composite: void readUnion(org.simpleframework.xml.stream.InputNode,java.lang.Object,org.simpleframework.xml.core.LabelMap,org.simpleframework.xml.core.Label)
org.simpleframework.xml.stream.Mode: org.simpleframework.xml.stream.Mode[] values()
org.simpleframework.xml.stream.InputElement: org.simpleframework.xml.stream.Node getParent()
org.jaudiotagger.tag.mp4.field.Mp4TagRawBinaryField: Mp4TagRawBinaryField(java.lang.String)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpecResource(int)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyUrlLink: void setupObjectList()
org.simpleframework.xml.core.ParameterFactory$ParameterBuilder: ParameterFactory$ParameterBuilder(java.lang.Class,java.lang.Class)
org.jaudiotagger.tag.images.ArtworkFactory: ArtworkFactory()
com.tencent.bugly.proguard.u: boolean c(int)
com.google.android.material.color.utilities.QuantizerWu$Direction: com.google.android.material.color.utilities.QuantizerWu$Direction valueOf(java.lang.String)
com.tencent.bugly.proguard.o: void init(android.content.Context,boolean,com.tencent.bugly.BuglyStrategy)
com.afollestad.materialdialogs.internal.main.BaseSubLayout: BaseSubLayout(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.drive.model.PlaylistsMediaContainer: PlaylistsMediaContainer(java.util.List)
org.simpleframework.xml.ElementMap: boolean empty()
androidx.fragment.app.Fragment: float getPostOnViewCreatedAlpha()
com.tencent.mm.opensdk.modelbiz.SubscribeMiniProgramMsg$Req: void fromBundle(android.os.Bundle)
org.jcodec.containers.mp4.boxes.EsdsBox$DecoderConfig: int tag()
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: java.lang.String getIdentifier()
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: void detach()
androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type[] values()
androidx.lifecycle.LifecycleDestroyedException: LifecycleDestroyedException()
org.jaudiotagger.utils.tree.DefaultMutableTreeNode$BreadthFirstEnumeration$Queue: void enqueue(java.lang.Object)
androidx.constraintlayout.helper.widget.Flow: void setHorizontalStyle(int)
com.umeng.analytics.pro.bh: void a(java.lang.Class,java.util.Map)
org.simpleframework.xml.convert.AnnotationStrategy: AnnotationStrategy(org.simpleframework.xml.strategy.Strategy)
com.tencent.bugly.proguard.be: java.lang.String a(java.lang.String,java.lang.String)
com.caij.puremusic.db.model.PlaylistEntity: com.caij.puremusic.db.model.PlaylistEntity copy(long,java.lang.String)
com.afollestad.materialdialogs.internal.main.DialogLayout: int getFrameMarginVerticalLess$core()
androidx.fragment.app.Fragment: void setNextTransition(int)
org.jaudiotagger.tag.flac.FlacTag: java.util.List getFields(java.lang.String)
androidx.gridlayout.widget.GridLayout: GridLayout(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.drive.model.MediaStream: boolean equals(java.lang.Object)
org.simpleframework.xml.stream.OutputStack$Sequence: boolean hasNext()
com.caij.puremusic.db.model.Artist: java.lang.String component2()
com.caij.puremusic.drive.model.AlbumMetadata: AlbumMetadata(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
nl.adaptivity.xmlutil.serialization.structure.XmlOrderNode$toString$1: XmlOrderNode$toString$1()
com.google.android.material.slider.BaseSlider: void setFocusedThumbIndex(int)
com.umeng.commonsdk.statistics.proto.a: com.umeng.analytics.pro.bp p()
org.jaudiotagger.logging.PlainTextTagDisplayFormatter: void decreaseLevel()
org.jaudiotagger.tag.id3.framebody.FrameBodyTCMP: FrameBodyTCMP(org.jaudiotagger.tag.id3.framebody.FrameBodyTCMP)
com.caij.puremusic.drive.model.AlbumSubsonicResponse: AlbumSubsonicResponse(java.lang.String,java.lang.String,com.caij.puremusic.drive.model.SubsonicAlbum)
org.jaudiotagger.audio.aiff.AiffType: java.lang.String getCode()
com.caij.puremusic.db.model.PlayCountEntityQueries$playCountSongs$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
com.tencent.bugly.crashreport.crash.CrashDetailBean: CrashDetailBean()
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTagField: void copyContent(org.jaudiotagger.tag.TagField)
com.tencent.bugly.proguard.bd: void handleNativeException(int,int,long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int,int,int,java.lang.String,java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyTALB: FrameBodyTALB()
com.caij.puremusic.drive.model.SubsonicAlbum: com.caij.puremusic.drive.model.SubsonicAlbum copy$default(com.caij.puremusic.drive.model.SubsonicAlbum,java.lang.String,java.lang.String,java.lang.String,int,int,int,java.lang.String,java.lang.String,java.util.List,int,java.lang.Object)
org.jaudiotagger.tag.id3.ID3v1TagField: void copy(byte[],byte[],int)
com.caij.puremusic.db.model.SongQueries: void insertOrReplace(com.caij.puremusic.db.model.Song)
com.r0adkll.slidr.widget.SliderPanel: void setOnPanelSlideListener(com.r0adkll.slidr.widget.SliderPanel$OnPanelSlideListener)
com.bumptech.glide.load.engine.DecodeJob$RunReason: com.bumptech.glide.load.engine.DecodeJob$RunReason valueOf(java.lang.String)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyIMG: FieldFrameBodyIMG(java.nio.ByteBuffer)
com.google.android.material.button.MaterialButtonToggleGroup: void setSelectionRequired(boolean)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: org.jaudiotagger.utils.tree.DefaultMutableTreeNode getPreviousLeaf()
org.jaudiotagger.tag.id3.framebody.FrameBodyWORS: FrameBodyWORS(java.lang.String)
com.caij.puremusic.drive.model.AlbumArtist$Companion: kotlinx.serialization.KSerializer serializer()
org.simpleframework.xml.convert.ConverterScanner: java.lang.annotation.Annotation getAnnotation(java.lang.Class,java.lang.Class)
com.umeng.analytics.pro.an: void write(com.umeng.analytics.pro.bu)
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
com.umeng.analytics.pro.aw: int a(java.util.List,java.util.List)
com.umeng.commonsdk.internal.b: com.umeng.commonsdk.internal.b a(android.content.Context)
com.thegrizzlylabs.sardineandroid.DavQuota: DavQuota(com.thegrizzlylabs.sardineandroid.model.Response)
org.jaudiotagger.tag.asf.AsfTag: java.lang.String getFirstCopyright()
org.simpleframework.xml.core.CompositeMapUnion: CompositeMapUnion(org.simpleframework.xml.core.Context,org.simpleframework.xml.core.Group,org.simpleframework.xml.core.Expression,org.simpleframework.xml.strategy.Type)
org.jaudiotagger.tag.flac.FlacTag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.images.Artwork)
com.umeng.analytics.pro.g$a: g$a()
com.caij.puremusic.drive.model.PlaylistResponse: PlaylistResponse(com.caij.puremusic.drive.model.PlayListSubsonicResponse)
org.jaudiotagger.tag.images.ImageHandler: void showReadFormats()
com.tencent.bugly.proguard.ak: void b()
androidx.constraintlayout.widget.Barrier: void setDpMargin(int)
com.google.common.reflect.Types$JavaVersion$4: java.lang.reflect.Type usedInGenericType(java.lang.reflect.Type)
org.simpleframework.xml.stream.StreamReader$Entry: java.lang.String getName()
com.umeng.analytics.pro.bf: java.lang.String toString()
com.caij.puremusic.drive.model.PlayListsSubsonicResponse$Companion: PlayListsSubsonicResponse$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.caij.puremusic.drive.model.Metadata$Companion: kotlinx.serialization.KSerializer serializer()
org.jaudiotagger.tag.datatype.AbstractDataType: AbstractDataType(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAnchorMode()
org.simpleframework.xml.core.MethodScanner: void process(org.simpleframework.xml.core.MethodPart,org.simpleframework.xml.core.MethodScanner$PartMap)
org.jaudiotagger.tag.id3.ID3v24Frame: boolean equals(java.lang.Object)
com.caij.puremusic.drive.model.SubsonicSearchListResponse: com.caij.puremusic.drive.model.SubsonicSearchResponse component1()
com.google.android.material.chip.ChipGroup: void setFlexWrap(int)
com.alipay.android.phone.mrpc.core.t: boolean h()
com.caij.puremusic.drive.model.BaiduDriveItem: BaiduDriveItem(long,java.lang.String,long,java.lang.String,long,long,int,int,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
org.simpleframework.xml.core.ElementMapLabel: boolean isData()
org.simpleframework.xml.core.InstanceFactory: java.lang.Object getObject(java.lang.Class)
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: java.lang.String getDescription()
com.umeng.commonsdk.utils.UMUtils: java.lang.String getAppName(android.content.Context)
org.simpleframework.xml.stream.OutputAttribute: org.simpleframework.xml.stream.NamespaceMap getNamespaces()
com.caij.puremusic.drive.model.DropboxDriveFileResponse: boolean getHas_more()
com.tencent.bugly.crashreport.crash.h5.H5JavaScriptInterface: H5JavaScriptInterface()
com.caij.puremusic.drive.model.JellyfinArtistResponse: boolean equals(java.lang.Object)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setAnimationProgress(float)
com.caij.puremusic.drive.model.SubsonicPlaylist: java.lang.String component9()
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: android.content.Context a(com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler)
com.tencent.bugly.proguard.k: java.lang.Object[] b(java.lang.Object,int,boolean)
org.simpleframework.xml.Element: boolean data()
androidx.fragment.app.Fragment: int hashCode()
org.simpleframework.xml.stream.OutputElement: void setValue(java.lang.String)
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean isGestureInsetBottomIgnored()
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: java.lang.String getDate()
org.jaudiotagger.audio.mp3.MP3AudioHeader: long getMp3StartByte()
com.caij.puremusic.drive.model.SubPlayList: SubPlayList(int,java.util.List,kotlinx.serialization.internal.SerializationConstructorMarker)
org.json.alipay.a: java.lang.Object a(int)
org.jaudiotagger.audio.generic.GenericAudioHeader: java.lang.String getSampleRate()
androidx.core.view.ViewCompat$Api16Impl: void requestFitSystemWindows(android.view.View)
org.jaudiotagger.audio.asf.data.ContentBranding: ContentBranding(long,java.math.BigInteger)
org.jaudiotagger.audio.mp3.MP3File: void readV1Tag(java.io.File,java.io.RandomAccessFile,int)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
com.caij.puremusic.drive.model.MediaInfoWrapper: int hashCode()
com.caij.puremusic.drive.model.PlayListItem: java.lang.String getMediaType()
org.jaudiotagger.audio.generic.AbstractTag: boolean hasField(org.jaudiotagger.tag.FieldKey)
org.jcodec.containers.mp4.boxes.DataRefBox: void parse(java.nio.ByteBuffer)
org.jcodec.containers.mp4.boxes.EndianBox: int calcSize()
com.caij.puremusic.db.model.HistoryEntityQueries$updateHistorySong$1: HistoryEntityQueries$updateHistorySong$1(long,long)
com.umeng.analytics.pro.an$a: void a(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
org.jaudiotagger.tag.reference.GenreTypes: int getMaxGenreId()
com.thegrizzlylabs.sardineandroid.DavResource: com.thegrizzlylabs.sardineandroid.model.Supportedlock access$1000(com.thegrizzlylabs.sardineandroid.DavResource,com.thegrizzlylabs.sardineandroid.model.Response)
org.simpleframework.xml.core.VersionLabel: java.lang.Class getType()
org.simpleframework.xml.transform.LocaleTransform: java.lang.Object read(java.lang.String)
com.google.gson.FieldNamingPolicy: java.lang.String translateName(java.lang.reflect.Field)
com.tencent.bugly.proguard.ag: java.util.List a()
org.jcodec.containers.mp4.boxes.VideoMediaHeaderBox: void parse(java.nio.ByteBuffer)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State)
com.caij.puremusic.drive.model.AlbumResponse$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.caij.puremusic.db.model.PlaylistEntityQueries$SearchPlaylistByNameQuery: void addListener(app.cash.sqldelight.Query$Listener)
com.caij.puremusic.model.UpdateInfo$ForcedUpgradeInfo$1: java.lang.Object[] newArray(int)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: java.io.InputStream get(java.lang.String,okhttp3.Headers)
org.jaudiotagger.tag.mp4.Mp4FieldKey: java.lang.String getFieldName()
org.simpleframework.xml.core.LabelMap: LabelMap()
org.jaudiotagger.tag.id3.AbstractTagFrame: void setBody(org.jaudiotagger.tag.id3.AbstractTagFrameBody)
org.jcodec.containers.mp4.boxes.MetaValue: org.jcodec.containers.mp4.boxes.MetaValue createOther(int,byte[])
com.google.android.material.appbar.AppBarLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.caij.puremusic.model.Home: com.caij.puremusic.model.Home copy(java.util.List,int,int)
org.simpleframework.xml.stream.OutputNode: void commit()
com.caij.puremusic.db.model.SongEntityQueries$insert$1: java.lang.Object invoke(java.lang.Object)
org.repackage.com.vivo.identifier.IdentifierManager: java.lang.String a(android.content.Context,java.lang.String)
com.caij.puremusic.drive.model.AMetadata: void write$Self(com.caij.puremusic.drive.model.AMetadata,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.alipay.sdk.m.x.e: android.widget.ProgressBar getProgressbar()
com.google.android.exoplayer2.drm.KeysExpiredException: KeysExpiredException()
org.simpleframework.xml.filter.StackFilter: StackFilter()
org.jaudiotagger.audio.flac.FlacTagWriter: void insertTagAndShiftViaMappedByteBuffer(org.jaudiotagger.tag.Tag,java.nio.MappedByteBuffer,java.nio.channels.FileChannel,long,long,org.jaudiotagger.audio.flac.FlacTagWriter$MetadataBlockInfo,org.jaudiotagger.audio.flac.FlacStreamReader,int,int)
org.simpleframework.xml.core.PrimitiveArray: boolean validate(org.simpleframework.xml.stream.InputNode,java.lang.Class)
org.jaudiotagger.tag.datatype.NumberHashMap: boolean equals(java.lang.Object)
com.umeng.analytics.pro.o: void c(java.lang.Object)
org.simpleframework.xml.transform.FileTransform: java.io.File read(java.lang.String)
org.jcodec.containers.mp4.boxes.TimeToSampleBox$TimeToSampleEntry: void setSampleDuration(int)
com.caij.puremusic.drive.model.AlbumItem: boolean getCanDelete()
com.caij.puremusic.drive.model.FMediaContainer$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.FMediaContainer)
org.jaudiotagger.tag.id3.ID3v24Frame: int getEncryptionMethod()
com.caij.puremusic.model.Playlist: int describeContents()
org.simpleframework.xml.core.Source: java.lang.String getName(java.lang.Class)
com.umeng.commonsdk.config.d$b: d$b(java.lang.String,int)
org.jaudiotagger.audio.aiff.AiffTagWriter: java.nio.ByteBuffer convert(org.jaudiotagger.tag.aiff.AiffTag,org.jaudiotagger.tag.aiff.AiffTag)
org.xmlpull.v1.XmlPullParser: java.lang.String nextText()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyIMG: void setupObjectList()
com.caij.puremusic.db.model.SongQueries$SongsByIdsQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
com.caij.puremusic.views.BaselineGridTextView: void setMaxLinesByHeight(boolean)
org.jaudiotagger.tag.id3.valuepair.InterpolationTypes: org.jaudiotagger.tag.id3.valuepair.InterpolationTypes getInstanceOf()
org.jcodec.containers.mp4.boxes.TrakBox: org.jcodec.containers.mp4.boxes.CompositionOffsetsBox getCtts()
com.caij.puremusic.drive.model.SubsonicSearchResponse: java.lang.String getVersion()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSlingshotDistance(int)
com.google.android.material.slider.BaseSlider: int getActiveThumbIndex()
com.google.android.material.bottomappbar.BottomAppBar: void setCradleVerticalOffset(float)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer$Api26: boolean doesDisplaySupportDolbyVision(android.content.Context)
org.jaudiotagger.audio.asf.io.ContentDescriptionReader: ContentDescriptionReader()
org.jaudiotagger.audio.ogg.OggVorbisTagWriter: boolean isCommentAndSetupHeaderFitsOnASinglePage(int,int,java.util.List)
code.name.monkey.appthemehelper.ATHActivity: ATHActivity()
org.simpleframework.xml.convert.RegistryStrategy: boolean write(org.simpleframework.xml.strategy.Type,java.lang.Object,org.simpleframework.xml.stream.NodeMap)
org.jaudiotagger.tag.id3.framebody.FrameBodyWCOP: FrameBodyWCOP(java.nio.ByteBuffer,int)
org.simpleframework.xml.core.Reflector: char toLowerCase(char)
com.yalantis.ucrop.view.OverlayView: void setShowCropGrid(boolean)
com.caij.puremusic.db.model.PlaylistEntityQueries$playlistByName$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
org.jcodec.containers.mp4.boxes.MovieBox: MovieBox(org.jcodec.containers.mp4.boxes.Header)
com.umeng.analytics.pro.an: void l()
com.umeng.analytics.pro.m: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
org.jaudiotagger.audio.generic.ModificationHandler: void removeAudioFileModificationListener(org.jaudiotagger.audio.generic.AudioFileModificationListener)
com.caij.puremusic.model.Data: java.lang.String getPictureMedium()
com.tencent.bugly.proguard.bu: bu()
com.umeng.commonsdk.config.FieldManager: boolean allow(java.lang.String)
org.simpleframework.xml.core.PrimitiveKey: boolean isOverridden(org.simpleframework.xml.stream.OutputNode,java.lang.Object)
com.caij.puremusic.model.Contributor: int describeContents()
org.jcodec.containers.mp4.boxes.EsdsBox$DescriptorParser: org.jcodec.containers.mp4.boxes.EsdsBox$DecoderConfig parseDecoderConfig(java.nio.ByteBuffer)
org.repackage.com.vivo.identifier.IdentifierIdClient: java.lang.String a(java.lang.String,java.lang.String)
com.caij.puremusic.drive.model.PlexUser$Companion: kotlinx.serialization.KSerializer serializer()
code.name.monkey.appthemehelper.common.prefs.supportv7.ATESwitchPreference: ATESwitchPreference(android.content.Context,android.util.AttributeSet)
org.simpleframework.xml.stream.OutputDocument: void setName(java.lang.String)
org.jaudiotagger.audio.aiff.AiffAudioHeader$Endian: org.jaudiotagger.audio.aiff.AiffAudioHeader$Endian valueOf(java.lang.String)
com.caij.puremusic.drive.model.User$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.google.android.material.chip.Chip: void setCloseIconSizeResource(int)
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
com.caij.puremusic.MainModuleKt$viewModules$1$1: MainModuleKt$viewModules$1$1()
com.umeng.analytics.pro.al: al()
com.thegrizzlylabs.sardineandroid.model.SyncCollection: SyncCollection()
org.jaudiotagger.tag.TagOptionSingleton: boolean isPreserveFileIdentity()
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: org.jaudiotagger.utils.tree.DefaultMutableTreeNode getNextNode()
androidx.appcompat.widget.SwitchCompat: boolean getShowText()
org.simpleframework.xml.stream.CamelCaseBuilder: java.lang.String getAttribute(java.lang.String)
org.simpleframework.xml.core.Persister: boolean validate(java.lang.Class,java.io.InputStream,boolean)
com.google.android.material.navigationrail.NavigationRailView: int getItemMinimumHeight()
org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Class,java.lang.String)
com.caij.puremusic.drive.model.Resourcetype: Resourcetype(int,com.caij.puremusic.drive.model.Collection,kotlinx.serialization.internal.SerializationConstructorMarker)
org.jcodec.containers.mp4.boxes.SampleSizesBox: org.jcodec.containers.mp4.boxes.SampleSizesBox createSampleSizesBox(int,int)
com.tencent.mm.opensdk.openapi.IWXAPI: boolean openWXApp()
com.umeng.commonsdk.statistics.proto.a$d: a$d()
com.umeng.analytics.filter.d: void b(java.lang.String)
org.jaudiotagger.tag.id3.ID3v11Tag: ID3v11Tag(org.jaudiotagger.tag.id3.AbstractTag)
com.tencent.bugly.proguard.ay: void d()
org.simpleframework.xml.core.Expression: java.lang.String getPrefix()
org.simpleframework.xml.core.ExtractorFactory$ElementListExtractor: java.lang.annotation.Annotation[] getAnnotations()
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context,android.util.AttributeSet,int)
nl.adaptivity.xmlutil.core.impl.PlatformXmlWriterBase$indentString$1: PlatformXmlWriterBase$indentString$1()
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyTextInfo: AbstractFrameBodyTextInfo(org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyTextInfo)
com.caij.puremusic.db.model.HistoryEntityQueries$updateHistorySong$2: void invoke(kotlin.jvm.functions.Function1)
com.umeng.analytics.pro.l$1: l$1(com.umeng.analytics.pro.l)
com.tencent.mm.opensdk.modelbiz.WXNontaxPay$Req: WXNontaxPay$Req()
org.jaudiotagger.tag.datatype.MultipleTextEncodedStringNullTerminated: boolean equals(java.lang.Object)
com.umeng.commonsdk.internal.utils.k$1: k$1(java.lang.String[],android.content.Context)
org.simpleframework.xml.convert.Reference: void setValue(java.lang.Object)
com.caij.puremusic.drive.model.SubsonicPlaylist: java.lang.String getOwner()
com.umeng.commonsdk.vchannel.b: java.util.Map c()
com.tencent.bugly.proguard.aq: void onReceive(android.content.Context,android.content.Intent)
nl.adaptivity.xmlutil.EventType: nl.adaptivity.xmlutil.EventType valueOf(java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodySIGN: void setupObjectList()
org.jaudiotagger.audio.asf.util.Utils: org.jaudiotagger.audio.asf.data.GUID readGUID(java.io.InputStream)
org.simpleframework.xml.core.AnnotationHandler: void attributes(java.lang.StringBuilder)
com.umeng.analytics.b: void c(android.content.Context,java.lang.String)
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean sendFinderOpenFeed(android.content.Context,com.tencent.mm.opensdk.modelbase.BaseReq)
okhttp3.TlsVersion: okhttp3.TlsVersion valueOf(java.lang.String)
com.google.android.material.search.SearchView: void setUpHeaderLayout(int)
com.umeng.commonsdk.statistics.proto.Response: com.umeng.commonsdk.statistics.proto.Response$e fieldForId(int)
com.caij.puremusic.drive.model.FMediaContainer$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.caij.puremusic.drive.model.DavResource: long getContentLength()
org.jaudiotagger.tag.id3.framebody.FrameBodyTPOS: java.lang.Integer getDiscTotal()
org.jaudiotagger.audio.asf.data.GUID: int[] getGUID()
com.umeng.commonsdk.debug.W: void log(java.lang.String,java.lang.String)
com.caij.puremusic.drive.model.JellyfinFolder: java.lang.String getName()
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: void setHoursOnly(boolean)
org.simpleframework.xml.core.Template: void append(java.lang.String)
com.caij.puremusic.db.model.FolderQueries: void deleteById(long)
androidx.appcompat.app.AppCompatDialog: androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getStrokeColorStateList()
com.google.android.material.appbar.CollapsingToolbarLayout: float getLineSpacingAdd()
org.jcodec.containers.mp4.boxes.SampleSizesBox: org.jcodec.containers.mp4.boxes.SampleSizesBox createSampleSizesBox2(int[])
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
com.tencent.bugly.proguard.at: com.tencent.bugly.proguard.at a()
org.jaudiotagger.audio.asf.data.AudioStreamChunk: long getSamplingRate()
com.caij.puremusic.drive.model.Type$$serializer: com.caij.puremusic.drive.model.Type deserialize(kotlinx.serialization.encoding.Decoder)
com.umeng.analytics.pro.o: org.json.JSONObject a(long)
org.simpleframework.xml.core.CacheParameter: java.lang.Class getType()
org.simpleframework.xml.core.ElementListParameter: java.lang.Object getKey()
org.jaudiotagger.audio.exceptions.CannotReadException: CannotReadException(java.lang.String)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] values()
com.umeng.analytics.pro.cg: cg(java.io.OutputStream)
com.caij.puremusic.drive.model.PlayListItem: java.lang.String getId()
org.jaudiotagger.tag.InvalidFrameException: InvalidFrameException(java.lang.Throwable)
com.caij.puremusic.drive.model.DropboxDriveItem: com.caij.puremusic.drive.model.DropboxDriveItem copy(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String)
com.umeng.analytics.pro.l: int d(com.umeng.analytics.pro.l)
com.tencent.mm.opensdk.modelbiz.HandleScanResult$Resp: HandleScanResult$Resp()
com.caij.puremusic.drive.model.JellyfinSongListResponse$$serializer: com.caij.puremusic.drive.model.JellyfinSongListResponse deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.db.model.SongQueries$songsByNameArtist$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.tencent.bugly.proguard.s: void a(android.content.Context,com.tencent.bugly.BuglyStrategy)
org.simpleframework.xml.Serializer: java.lang.Object read(java.lang.Class,java.io.InputStream)
com.tencent.mm.opensdk.modelbiz.SubscribeMiniProgramMsg$Req: SubscribeMiniProgramMsg$Req(android.os.Bundle)
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1: com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
com.umeng.analytics.process.UMProcessDBHelper: void access$200(com.umeng.analytics.process.UMProcessDBHelper,java.lang.String)
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: int access$202(org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox,int)
org.repackage.com.zui.deviceidservice.IDeviceidInterface$Stub$Proxy: boolean c()
com.google.android.material.internal.NavigationMenuItemView: void setIconTintList(android.content.res.ColorStateList)
org.jaudiotagger.tag.id3.framebody.FrameBodyPRIV: java.lang.String getOwner()
com.google.android.material.chip.Chip: void setChipIconVisible(boolean)
com.google.android.material.slider.BaseSlider: void setCustomThumbDrawablesForValues(int[])
com.caij.puremusic.db.model.HistoryEntity: int hashCode()
org.jaudiotagger.tag.images.AndroidImageHandler: void reduceQuality(org.jaudiotagger.tag.images.Artwork,int)
com.caij.puremusic.drive.model.PlayListSubsonicResponse: java.lang.String getVersion()
com.tencent.bugly.proguard.as: void b(java.util.ArrayList,com.tencent.bugly.crashreport.crash.CrashDetailBean,android.content.Context)
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: boolean isBaseDataOffsetAvailable()
org.simpleframework.xml.stream.DocumentReader: org.simpleframework.xml.stream.DocumentReader$Text text(org.w3c.dom.Node)
com.umeng.analytics.pro.m: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.umeng.commonsdk.stateless.UMSLEnvelopeBuild: boolean isReadyBuildNew(android.content.Context,com.umeng.commonsdk.framework.UMLogDataProtocol$UMBusinessType)
org.simpleframework.xml.util.Resolver: boolean match(char[],char[])
com.caij.puremusic.drive.model.SubPlayList: int hashCode()
com.caij.puremusic.db.model.PlaylistEntity: long getPlayListId()
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: boolean isLeaf()
com.caij.puremusic.model.DriveFileParcelable$Creator: com.caij.puremusic.model.DriveFileParcelable[] newArray(int)
org.simpleframework.xml.core.PrimitiveValue: java.lang.Object readElement(org.simpleframework.xml.stream.InputNode,java.lang.String)
com.umeng.analytics.b: void c(android.content.Context)
com.afollestad.materialdialogs.WhichButton: int getIndex()
com.caij.puremusic.db.model.HistoryEntityQueries: HistoryEntityQueries(app.cash.sqldelight.db.SqlDriver)
com.google.android.material.progressindicator.BaseProgressIndicator: android.graphics.drawable.Drawable getIndeterminateDrawable()
com.umeng.commonsdk.statistics.proto.e: com.umeng.analytics.pro.bp o()
com.umeng.commonsdk.internal.UMOplus: UMOplus()
com.caij.puremusic.drive.model.AlbumItem$Companion: AlbumItem$Companion()
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgram$Req: WXLaunchMiniProgram$Req()
org.jaudiotagger.audio.asf.data.GUID: GUID(int[])
com.alipay.sdk.app.PayTask: java.util.Map payV2(java.lang.String,boolean)
org.simpleframework.xml.core.Composite: java.lang.Object read(org.simpleframework.xml.stream.InputNode)
com.google.common.reflect.TypeToken$TypeFilter$1: boolean apply(java.lang.Object)
org.jaudiotagger.tag.TagNotFoundException: TagNotFoundException(java.lang.String)
com.caij.puremusic.drive.model.PlexArtistsResponse: PlexArtistsResponse()
com.umeng.analytics.pro.o: void f(org.json.JSONObject)
com.caij.puremusic.drive.model.SubsonicPlaylist$$serializer: com.caij.puremusic.drive.model.SubsonicPlaylist deserialize(kotlinx.serialization.encoding.Decoder)
org.simpleframework.xml.stream.NodeWriter: boolean isCommitted(org.simpleframework.xml.stream.OutputNode)
com.google.android.material.bottomsheet.BottomSheetDialogFragment$BottomSheetDismissCallback: void onStateChanged(android.view.View,int)
com.google.android.material.chip.ChipGroup: int getChipSpacingHorizontal()
com.google.android.material.bottomsheet.BottomSheetBehavior: void setAccessibilityDelegateView(android.view.View)
org.jaudiotagger.audio.mp3.MP3AudioHeader: boolean isProtected()
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
com.caij.puremusic.drive.model.ParentReference: ParentReference(java.lang.String,java.lang.String,java.lang.String)
com.umeng.analytics.pro.ck: com.umeng.analytics.pro.ci a(com.umeng.analytics.pro.ci)
com.caij.puremusic.drive.model.Auth2Token$Companion: kotlinx.serialization.KSerializer serializer()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
org.jcodec.containers.mp4.boxes.SampleEntry: int estimateSize()
com.afollestad.materialdialogs.internal.rtl.RtlTextView: RtlTextView(android.content.Context,android.util.AttributeSet)
org.simpleframework.xml.core.PrimitiveInlineList: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.lang.Object)
com.caij.puremusic.drive.model.BaiduDriveItem: com.caij.puremusic.drive.model.BaiduDriveItem copy(long,java.lang.String,long,java.lang.String,long,long,int,int,java.lang.String)
com.google.android.material.bottomsheet.BottomSheetBehavior: float getHideFriction()
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse$Companion: JellyfinPlaylistsResponse$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.jcodec.containers.mp4.boxes.ReverseDnsBox: org.jcodec.containers.mp4.boxes.ReverseDnsBox$RdnsMeanBox getMeanBox()
com.tencent.bugly.crashreport.crash.anr.TraceFileHelper: TraceFileHelper()
com.tencent.mm.opensdk.modelbiz.AddCardToWXCardPackage$Resp: boolean checkArgs()
com.google.android.material.appbar.CollapsingToolbarLayout: int getExpandedTitleGravity()
com.google.android.material.floatingactionbutton.FloatingActionButton: boolean getUseCompatPadding()
org.jaudiotagger.tag.datatype.Pair: java.lang.String getPairValue()
com.caij.puremusic.drive.model.PlaylistMetadata$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void copyFrameIntoMap(java.lang.String,org.jaudiotagger.tag.id3.AbstractID3v2Frame)
org.simpleframework.xml.transform.PackageMatcher: org.simpleframework.xml.transform.Transform matchLanguage(java.lang.Class)
com.caij.puremusic.network.model.Image: Image(java.lang.String,int,int)
org.jaudiotagger.tag.mp4.field.Mp4TagTextField: java.nio.charset.Charset getEncoding()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getStartIconContentDescription()
org.simpleframework.xml.core.AttributeLabel: boolean isRequired()
com.caij.puremusic.db.model.ArtistQueries$ArtistByNameQuery: java.lang.String getName()
com.tencent.mm.opensdk.modelbiz.SubscribeMessage$Req: void toBundle(android.os.Bundle)
org.simpleframework.xml.core.CompositeUnion: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.lang.Object)
org.jcodec.containers.mp4.boxes.TrackHeaderBox: int getTrackId()
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10$2: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)
com.thegrizzlylabs.sardineandroid.model.Prop: void setSupportedlock(com.thegrizzlylabs.sardineandroid.model.Supportedlock)
com.caij.puremusic.drive.model.PlaylistMetadata: java.lang.String getKey()
org.simpleframework.xml.core.PathParser: org.simpleframework.xml.core.Expression getPath(int)
com.umeng.analytics.CoreProtocol: void onConnectionAvailable()
com.heinrichreimersoftware.materialintro.view.SwipeBlockableViewPager: void setSwipeRightEnabled(boolean)
com.alipay.android.phone.mrpc.core.o: java.lang.String toString()
com.caij.puremusic.drive.model.PlayListSubsonicResponse: com.caij.puremusic.drive.model.PlayListSubsonicResponse copy$default(com.caij.puremusic.drive.model.PlayListSubsonicResponse,java.lang.String,java.lang.String,com.caij.puremusic.drive.model.SubPlayList,int,java.lang.Object)
com.umeng.commonsdk.statistics.common.d: boolean c()
org.jaudiotagger.tag.mp4.field.Mp4TagReverseDnsField: void setContent(java.lang.String)
com.umeng.analytics.vshelper.PageNameMonitor: com.umeng.analytics.vshelper.PageNameMonitor getInstance()
com.tencent.bugly.proguard.r: r(android.content.Context,boolean)
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService: JobInfoSchedulerService()
com.google.android.material.slider.Slider: void setCustomThumbDrawable(int)
com.google.android.material.search.SearchBar: float getCompatElevation()
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
com.caij.puremusic.drive.model.DropboxDriveFileResponse: com.caij.puremusic.drive.model.DropboxDriveFileResponse copy(java.lang.String,boolean,java.util.List)
org.jaudiotagger.tag.id3.framebody.FrameBodyAENC: FrameBodyAENC(java.lang.String,short,short,byte[])
kotlin.reflect.KVariance: KVariance(java.lang.String,int)
org.jaudiotagger.audio.exceptions.ModifyVetoException: ModifyVetoException()
org.simpleframework.xml.transform.ByteTransform: ByteTransform()
com.tencent.bugly.proguard.w: boolean a(int,java.lang.String,byte[],com.tencent.bugly.proguard.v)
com.tencent.bugly.crashreport.common.info.PlugInBean: PlugInBean(java.lang.String,java.lang.String,java.lang.String)
org.jaudiotagger.tag.wav.WavTag: void deleteField(java.lang.String)
com.caij.puremusic.drive.model.JellyfinLoginResponse: JellyfinLoginResponse(int,java.lang.String,com.caij.puremusic.drive.model.User,kotlinx.serialization.internal.SerializationConstructorMarker)
com.alipay.android.phone.mrpc.core.a.c: java.lang.Object a()
org.jaudiotagger.audio.asf.io.EncodingChunkReader: boolean canFail()
com.tencent.bugly.proguard.ao: void a(java.lang.String,java.lang.String,java.lang.String)
org.jcodec.containers.mp4.boxes.EsdsBox$DescriptorParser: org.jcodec.containers.mp4.boxes.EsdsBox$DecoderSpecific parseDecoderSpecific(java.nio.ByteBuffer)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setLegacyRequestDisallowInterceptTouchEventEnabled(boolean)
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies: com.google.common.util.concurrent.CycleDetectingLockFactory$Policies valueOf(java.lang.String)
org.simpleframework.xml.core.LabelExtractor$LabelBuilder: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class)
org.jaudiotagger.tag.datatype.AbstractString: void setSize(int)
com.caij.puremusic.drive.model.JellyfinLoginResponse$$serializer: com.caij.puremusic.drive.model.JellyfinLoginResponse deserialize(kotlinx.serialization.encoding.Decoder)
com.google.common.hash.LittleEndianByteArray$UnsafeByteArray: com.google.common.hash.LittleEndianByteArray$UnsafeByteArray[] $values()
com.tencent.mm.opensdk.modelbiz.WXChannelShareVideo$Resp: void fromBundle(android.os.Bundle)
org.jcodec.containers.mp4.boxes.MediaBox: org.jcodec.containers.mp4.boxes.MediaInfoBox getMinf()
org.jaudiotagger.tag.id3.framebody.FrameBodySEEK: FrameBodySEEK(int)
com.umeng.analytics.pro.at: java.lang.String toString()
org.jaudiotagger.tag.id3.AbstractID3v2Tag$1: boolean hasNext()
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: org.jaudiotagger.utils.tree.TreeNode getParent()
org.simpleframework.xml.core.SetPart: java.lang.annotation.Annotation getAnnotation()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void setTag(android.view.View,java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: java.nio.ByteBuffer getBytes()
io.ktor.serialization.Configuration$register$1: Configuration$register$1()
org.jaudiotagger.tag.datatype.TextEncodedStringSizeTerminated: boolean equals(java.lang.Object)
org.simpleframework.xml.transform.PackageMatcher: org.simpleframework.xml.transform.Transform matchUtility(java.lang.Class)
com.caij.puremusic.drive.model.AlbumList: int hashCode()
com.caij.puremusic.db.model.SearchAlbumResult: java.lang.String getId()
com.caij.puremusic.preferences.DurationPreference: DurationPreference(android.content.Context,android.util.AttributeSet,int)
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
com.caij.puremusic.drive.model.SubsonicAlbum$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.SubsonicAlbum)
com.google.android.material.appbar.CollapsingToolbarLayout: float getLineSpacingMultiplier()
org.jaudiotagger.tag.images.StandardArtwork: void setBinaryData(byte[])
com.google.android.material.card.MaterialCardView: int getCheckedIconSize()
org.jaudiotagger.audio.mp3.MP3AudioHeader: java.lang.String getSampleRate()
org.jaudiotagger.tag.id3.framebody.FrameBodyTPE4: FrameBodyTPE4(org.jaudiotagger.tag.id3.framebody.FrameBodyTPE4)
org.jcodec.containers.mp4.boxes.FileTypeBox: void doWrite(java.nio.ByteBuffer)
com.caij.puremusic.drive.model.PlaylistResponse$Companion: PlaylistResponse$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.simpleframework.xml.core.ObjectScanner: org.simpleframework.xml.core.Section getSection()
org.jaudiotagger.audio.exceptions.NoWritePermissionsException: NoWritePermissionsException(java.lang.String,java.lang.Throwable)
com.google.android.material.bottomsheet.BottomSheetDragHandleView$1: void onStateChanged(android.view.View,int)
androidx.constraintlayout.helper.widget.Flow: void setFirstHorizontalStyle(int)
org.jaudiotagger.audio.generic.GenericTag$GenericTagTextField: java.nio.charset.Charset getEncoding()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: float getScrimOpacity(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
org.jcodec.containers.mp4.boxes.LoadSettingsBox: void doWrite(java.nio.ByteBuffer)
org.jaudiotagger.audio.AudioFile: void setTag(org.jaudiotagger.tag.Tag)
com.umeng.commonsdk.utils.UMUtils: java.lang.String[] getNetworkAccessMode(android.content.Context)
com.umeng.analytics.MobclickAgent: void clearPreProperties(android.content.Context)
com.umeng.commonsdk.statistics.proto.a: void l()
org.jaudiotagger.tag.TagOptionSingleton: boolean isId3v1SaveAlbum()
org.jcodec.containers.mp4.boxes.Edit: long getDuration()
com.caij.puremusic.drive.model.Multistatus$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.caij.puremusic.db.model.ServerSongCoverQueries$deleteById$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.audio.generic.AbstractTag: AbstractTag()
org.jaudiotagger.tag.mp4.field.Mp4TagTextNumberField: byte[] getDataBytes()
com.umeng.umzid.ZIDManager$c: ZIDManager$c(com.umeng.umzid.ZIDManager,android.content.Context)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
org.jaudiotagger.audio.aiff.chunk.ApplicationChunk: ApplicationChunk(org.jaudiotagger.audio.iff.ChunkHeader,java.nio.ByteBuffer,org.jaudiotagger.audio.aiff.AiffAudioHeader)
org.jcodec.containers.mp4.boxes.EsdsBox$Kind: int getId()
com.caij.puremusic.model.DriveFileParcelable: boolean component11()
org.jaudiotagger.audio.wav.WavTagWriter$InfoFieldWriterOrderComparator: int compare(org.jaudiotagger.tag.TagField,org.jaudiotagger.tag.TagField)
com.caij.puremusic.preferences.NowPlayingScreenPreference: NowPlayingScreenPreference(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.audio.aiff.AiffTagReader: org.jaudiotagger.tag.aiff.AiffTag read(java.nio.channels.FileChannel,java.lang.String)
kotlin.collections.builders.SetBuilder: SetBuilder()
org.jaudiotagger.audio.asf.io.ContentBrandingReader: boolean canFail()
org.jcodec.containers.mp4.boxes.CompositionOffsetsBox$Entry: int getCount()
org.jaudiotagger.audio.exceptions.CannotReadVideoException: CannotReadVideoException()
com.umeng.analytics.b: void k()
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
com.caij.puremusic.db.model.SearchAlbumResult: java.lang.String toString()
com.tencent.bugly.proguard.r: long b(com.tencent.bugly.proguard.r)
com.google.android.material.navigation.NavigationBarView: void setItemTextAppearanceActive(int)
org.jaudiotagger.audio.generic.AudioFileWriter: void transferNewFileContentToOriginalFile(java.io.File,java.io.File)
org.jaudiotagger.audio.asf.data.ChunkContainer: boolean chunkstartsUnique(org.jaudiotagger.audio.asf.data.ChunkContainer)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
org.simpleframework.xml.stream.NodeExtractor: void extract(org.w3c.dom.Document)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.JellyfinPlaylistsResponse)
com.caij.puremusic.db.model.PlayCountEntityQueries$checkSongExistInPlayCount$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
com.umeng.commonsdk.statistics.internal.a: boolean c(java.lang.String)
code.name.monkey.appthemehelper.common.prefs.supportv7.dialogs.ATEPreferenceDialogFragment: ATEPreferenceDialogFragment()
org.simpleframework.xml.core.ConstructorScanner: ConstructorScanner(org.simpleframework.xml.core.Detail,org.simpleframework.xml.core.Support)
com.google.android.material.search.SearchBar: float getStrokeWidth()
org.simpleframework.xml.core.Session: int size()
org.jaudiotagger.tag.mp4.field.Mp4TagReverseDnsField: Mp4TagReverseDnsField(org.jaudiotagger.tag.mp4.Mp4FieldKey,java.lang.String)
com.umeng.commonsdk.statistics.TagHelper: java.util.Map getModuleTags()
com.umeng.analytics.pro.ag: ag()
com.caij.puremusic.db.model.PlaylistEntityQueries: app.cash.sqldelight.db.SqlDriver access$getDriver(com.caij.puremusic.db.model.PlaylistEntityQueries)
org.simpleframework.xml.core.ClassSchema: ClassSchema(org.simpleframework.xml.core.Scanner,org.simpleframework.xml.core.Context)
org.jaudiotagger.tag.TagOptionSingleton: boolean isId3v2Save()
org.simpleframework.xml.core.Collector: org.simpleframework.xml.core.Variable resolve(java.lang.String)
org.simpleframework.xml.stream.OutputAttribute: java.lang.String getPrefix(boolean)
com.google.android.material.internal.NavigationMenuItemView: void setHorizontalPadding(int)
com.google.android.material.navigation.NavigationBarMenuView: int getItemTextAppearanceInactive()
org.jcodec.containers.mp4.boxes.TrackHeaderBox: long getModified()
com.thegrizzlylabs.sardineandroid.model.SyncCollection: java.lang.String getSyncLevel()
com.tencent.mmkv.MMKV: java.lang.String cryptKey()
com.caij.puremusic.network.model.LastFmTrack$Track$Album: com.caij.puremusic.network.model.LastFmTrack$Track$Album$Attr getAttr()
com.caij.puremusic.drive.model.AlbumListResponse: java.lang.String toString()
org.jaudiotagger.tag.datatype.Lyrics3Image: Lyrics3Image(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] $values()
org.simpleframework.xml.core.TemplateLabel: org.simpleframework.xml.strategy.Type getDependent()
org.jaudiotagger.tag.id3.ID3v24PreferredFrameOrderComparator: int compare(java.lang.String,java.lang.String)
com.tencent.bugly.proguard.az: android.app.ActivityManager$ProcessErrorStateInfo a(java.lang.String)
com.tencent.bugly.proguard.as: boolean a(com.tencent.bugly.crashreport.crash.CrashDetailBean,java.util.List,java.util.List)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
com.caij.puremusic.db.model.SongQueries$SongsByArtistIdWithLikeQuery: java.lang.String toString()
com.google.android.gms.common.api.PendingResult: PendingResult()
org.jaudiotagger.tag.datatype.PairedTextEncodedStringNullTerminated$ValuePairs: boolean equals(java.lang.Object)
com.umeng.analytics.pro.af: af()
org.jaudiotagger.tag.id3.framebody.FrameBodyIPLS: FrameBodyIPLS()
com.google.android.material.slider.BaseSlider: void setThumbStrokeWidth(float)
org.simpleframework.xml.core.PrimitiveKey: boolean validateAttribute(org.simpleframework.xml.stream.InputNode,java.lang.String)
org.simpleframework.xml.core.LabelExtractor: java.lang.reflect.Constructor getConstructor(java.lang.annotation.Annotation)
org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId$1: OpenDeviceId$1(org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId)
org.simpleframework.xml.core.Composite: org.simpleframework.xml.core.Composite$Builder read(org.simpleframework.xml.core.Schema,org.simpleframework.xml.core.Instance)
com.umeng.analytics.pro.y: java.lang.String a(android.content.Context,long)
org.simpleframework.xml.core.TemplateEngine: void replace(org.simpleframework.xml.core.Template)
com.tencent.mm.opensdk.modelmsg.WXGameLiveObject: int type()
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)
com.caij.puremusic.drive.model.ImageTags$Companion: ImageTags$Companion()
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOn()
com.umeng.analytics.pro.y$a: void a(java.lang.String,long,long,long)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$Api31: void setLogSessionIdToMediaCodecFormat(com.google.android.exoplayer2.mediacodec.MediaCodecAdapter$Configuration,com.google.android.exoplayer2.analytics.PlayerId)
org.simpleframework.xml.Serializer: java.lang.Object read(java.lang.Object,java.io.Reader)
org.jcodec.containers.mp4.boxes.PixelAspectExt: PixelAspectExt(org.jcodec.containers.mp4.boxes.Header)
com.google.common.collect.ForwardingMap: ForwardingMap()
org.simpleframework.xml.core.LabelExtractor: org.simpleframework.xml.core.Label getLabel(org.simpleframework.xml.core.Contact,java.lang.annotation.Annotation)
com.caij.puremusic.drive.model.ParentReference$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean getSkipCollapsed()
com.caij.puremusic.drive.model.MediaContainer: MediaContainer(int,java.lang.String,java.util.List)
com.tencent.bugly.proguard.u: java.lang.String a(com.tencent.bugly.proguard.u)
org.jaudiotagger.tag.images.AndroidImageHandler: void showReadFormats()
org.simpleframework.xml.core.Label: java.lang.String toString()
com.caij.vip.VipApiService: java.lang.Object getActivationResponse(java.lang.String,kotlin.coroutines.Continuation)
org.simpleframework.xml.core.Creator: java.lang.Class getType()
com.caij.puremusic.db.model.ArtistQueries$insert$1: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.drive.model.Propstat: java.lang.String getStatus()
com.caij.puremusic.fragments.lyrics.ComnLyricsFragment: ComnLyricsFragment()
android.support.v4.media.MediaDescriptionCompat$Api21Impl: java.lang.CharSequence getTitle(android.media.MediaDescription)
org.simpleframework.xml.stream.PullReader$Entry: PullReader$Entry(org.xmlpull.v1.XmlPullParser,int)
org.simpleframework.xml.core.Section: org.simpleframework.xml.core.LabelMap getAttributes()
org.jaudiotagger.tag.datatype.TCONString: boolean isNullSeperateMultipleValues()
com.caij.puremusic.db.model.SongQueries$songsByAlbumId$1: SongQueries$songsByAlbumId$1(kotlin.jvm.functions.Function18,com.caij.puremusic.db.model.SongQueries)
com.umeng.analytics.pro.br: br(byte,byte,int)
com.caij.puremusic.drive.model.SubsonicResponse$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
org.simpleframework.xml.core.TextList: java.lang.Object read(org.simpleframework.xml.stream.InputNode)
com.alipay.android.phone.mrpc.core.a.e: e(int,java.lang.String,java.lang.Object)
org.jcodec.containers.mp4.boxes.SampleToChunkBox$SampleToChunkEntry: void setFirst(long)
androidx.constraintlayout.motion.widget.MotionLayout: long getTransitionTimeMs()
org.jaudiotagger.tag.asf.AsfTag$AsfFieldIterator: org.jaudiotagger.tag.asf.AsfTagField next()
com.caij.puremusic.db.model.SongQueries$songsByInfo$2: com.caij.puremusic.db.model.Song invoke(long,java.lang.String,int,int,long,java.lang.String,java.lang.String,long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,long,long)
com.afollestad.materialdialogs.internal.message.DialogContentLayout: void setCustomView(android.view.View)
org.simpleframework.xml.core.CompositeArray: CompositeArray(org.simpleframework.xml.core.Context,org.simpleframework.xml.strategy.Type,org.simpleframework.xml.strategy.Type,java.lang.String)
com.caij.puremusic.db.model.FolderQueries$selectById$2: FolderQueries$selectById$2()
com.caij.puremusic.drive.model.AlbumListResponse$Companion: AlbumListResponse$Companion()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.util.Iterator getFields()
com.google.android.material.textfield.TextInputLayout: int getErrorAccessibilityLiveRegion()
com.caij.puremusic.db.model.PlaybackSongQueries$clear$1: PlaybackSongQueries$clear$1()
com.caij.puremusic.drive.model.AMetadata$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: boolean hasField(org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey)
okhttp3.TlsVersion: java.lang.String -deprecated_javaName()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlock: MetadataBlock(org.jaudiotagger.audio.flac.metadatablock.MetadataBlockHeader,org.jaudiotagger.audio.flac.metadatablock.MetadataBlockData)
com.tencent.bugly.proguard.ao$a: boolean a()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getMaxInlineActionWidth()
org.jcodec.containers.mp4.boxes.TrakBox: org.jcodec.containers.mp4.boxes.SyncSamplesBox getStss()
org.simpleframework.xml.stream.EventToken: boolean isText()
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: android.media.session.PlaybackState$CustomAction build(android.media.session.PlaybackState$CustomAction$Builder)
androidx.fragment.app.Fragment: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
org.simpleframework.xml.core.ParameterFactory: org.simpleframework.xml.core.Parameter getInstance(java.lang.reflect.Constructor,java.lang.annotation.Annotation,int)
org.simpleframework.xml.core.ElementListLabel: java.lang.annotation.Annotation getAnnotation()
org.jaudiotagger.audio.dsf.FmtChunk: org.jaudiotagger.audio.generic.GenericAudioHeader readAudioInfo(org.jaudiotagger.audio.dsf.DsdChunk,java.nio.ByteBuffer)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void addField(org.jaudiotagger.tag.TagField)
org.jaudiotagger.tag.id3.framebody.FrameBodyOWNE: FrameBodyOWNE(java.nio.ByteBuffer,int)
com.umeng.analytics.pro.an: void r()
com.caij.puremusic.drive.model.AMediaContainer: boolean equals(java.lang.Object)
com.caij.puremusic.model.Data: java.lang.String toString()
com.tencent.mm.opensdk.modelmsg.WXMusicVideoObject: WXMusicVideoObject()
com.caij.puremusic.drive.model.Directory$Companion: Directory$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.alipay.android.phone.mrpc.core.o: java.lang.String b(java.lang.String)
com.caij.puremusic.drive.model.WebDAVToken: WebDAVToken(java.lang.String,java.lang.String,java.lang.String)
org.simpleframework.xml.stream.Format: Format(org.simpleframework.xml.stream.Style,org.simpleframework.xml.stream.Verbosity)
com.alipay.android.app.IRemoteServiceCallback: void payEnd(boolean,java.lang.String)
com.caij.puremusic.drive.model.JellyfinArtistResponse: void write$Self(com.caij.puremusic.drive.model.JellyfinArtistResponse,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.yalantis.ucrop.view.OverlayView: void setFreestyleCropEnabled(boolean)
com.caij.puremusic.db.model.PlayCountEntityQueries: void insert(com.caij.puremusic.db.model.PlayCountEntity)
com.google.android.exoplayer2.audio.AudioCapabilities$Api29: int[] getDirectPlaybackSupportedEncodings()
com.caij.puremusic.drive.model.GoogleDriveFile$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.umeng.commonsdk.statistics.proto.d: com.umeng.analytics.pro.bp n()
com.caij.puremusic.db.model.PlayCountEntityQueries$CheckSongExistInPlayCountQuery$execute$1: PlayCountEntityQueries$CheckSongExistInPlayCountQuery$execute$1(com.caij.puremusic.db.model.PlayCountEntityQueries$CheckSongExistInPlayCountQuery)
org.jaudiotagger.audio.mp3.MP3AudioHeader: boolean isCopyrighted()
com.umeng.commonsdk.debug.UMLog: void jsonObject(org.json.JSONObject)
org.jaudiotagger.audio.asf.data.StreamChunk: int getStreamNumber()
com.caij.puremusic.fragments.GridStyle: com.caij.puremusic.fragments.GridStyle[] values()
org.jaudiotagger.tag.id3.ID3v23Tag: void loadFrameIntoSpecifiedMap(java.util.HashMap,java.lang.String,org.jaudiotagger.tag.id3.AbstractID3v2Frame)
com.caij.puremusic.drive.model.AlbumSubsonicResponse$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.umeng.commonsdk.debug.UMLog: void aq(java.lang.String,int,java.lang.String,java.lang.String)
org.jaudiotagger.audio.asf.data.FileHeader: long getMaxPackageSize()
com.tencent.mm.opensdk.modelmsg.WXEmojiObject: void unserialize(android.os.Bundle)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTagField: void setEncoding(java.nio.charset.Charset)
com.caij.puremusic.MainModuleKt$dataModule$1: MainModuleKt$dataModule$1()
com.alipay.tscenter.biz.rpc.vkeydfp.request.DeviceDataReportRequest: DeviceDataReportRequest()
org.jaudiotagger.tag.id3.AbstractID3v2Frame$EncodingFlags: void setFlags(byte)
org.jaudiotagger.tag.datatype.Lyrics3Line: Lyrics3Line(org.jaudiotagger.tag.datatype.Lyrics3Line)
androidx.appcompat.widget.SwitchCompat: void setTrackResource(int)
org.simpleframework.xml.stream.Formatter: boolean isText(char)
androidx.preference.SwitchPreference: SwitchPreference(android.content.Context,android.util.AttributeSet)
com.thegrizzlylabs.sardineandroid.model.SupportedReport: com.thegrizzlylabs.sardineandroid.model.Report getReport()
com.tencent.bugly.proguard.r: boolean a(com.tencent.bugly.proguard.r)
org.jaudiotagger.tag.id3.framebody.FrameBodyTDOR: FrameBodyTDOR(org.jaudiotagger.tag.id3.framebody.FrameBodyTDOR)
com.alipay.android.app.IAlixPay: void unregisterCallback(com.alipay.android.app.IRemoteServiceCallback)
com.thegrizzlylabs.sardineandroid.DavResource: com.thegrizzlylabs.sardineandroid.model.Lockdiscovery getLockDiscovery()
kotlin.sequences.SequencesKt__SequencesKt$flatten$3: SequencesKt__SequencesKt$flatten$3()
org.simpleframework.xml.strategy.ObjectValue: int getLength()
com.google.android.material.chip.Chip: void setMinLines(int)
com.thegrizzlylabs.sardineandroid.model.Multistatus: void setResponsedescription(java.lang.String)
com.tencent.bugly.proguard.z: java.lang.String a(android.content.Context)
com.caij.puremusic.db.model.SongQueries$songsByIds$2: SongQueries$songsByIds$2()
org.simpleframework.xml.transform.PackageMatcher: org.simpleframework.xml.transform.Transform match(java.lang.Class)
com.tencent.mm.opensdk.modelbiz.AddCardToWXCardPackage$Resp: AddCardToWXCardPackage$Resp()
org.jaudiotagger.audio.ogg.util.OggPageHeader: void setChecksum(int)
com.thegrizzlylabs.sardineandroid.model.Activelock: void setLockscope(com.thegrizzlylabs.sardineandroid.model.Lockscope)
com.caij.puremusic.db.model.PlaybackSong: com.caij.puremusic.db.model.PlaybackSong copy$default(com.caij.puremusic.db.model.PlaybackSong,long,int,long,int,int,java.lang.Object)
kotlinx.serialization.json.JsonObject$Companion: kotlinx.serialization.KSerializer serializer()
com.umeng.commonsdk.statistics.proto.b: void b(boolean)
com.google.android.material.navigation.NavigationBarMenuView: void setItemTextColor(android.content.res.ColorStateList)
com.umeng.analytics.pro.an$d: an$d()
com.tencent.bugly.proguard.ag$b: ag$b()
com.umeng.commonsdk.debug.UMLog: void jsonObject(java.lang.String,org.json.JSONObject)
com.google.android.material.slider.Slider: int getTrackHeight()
org.jaudiotagger.audio.wav.WavSaveOrder: WavSaveOrder(java.lang.String,int)
org.jaudiotagger.utils.DirectByteBufferUtils$OpenJdkReleaseStrategy: org.jaudiotagger.utils.DirectByteBufferUtils$ReleaseStrategy access$100()
org.jaudiotagger.tag.id3.framebody.FrameBodyTIME: FrameBodyTIME(org.jaudiotagger.tag.id3.framebody.FrameBodyTIME)
org.jaudiotagger.utils.FileTypeUtil: java.lang.String getMagicFileType(java.io.File)
com.umeng.commonsdk.statistics.c: c(android.content.Context)
com.google.android.material.bottomsheet.BottomSheetDialog: boolean getEdgeToEdgeEnabled()
com.caij.puremusic.db.model.ServerAudioFormatQueries$insert$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)
com.tencent.mm.opensdk.modelmsg.WXEnterpriseCardObject: boolean checkArgs()
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior(android.content.Context,android.util.AttributeSet)
com.tencent.mm.opensdk.modelbiz.AddCardToWXCardPackage$Resp: AddCardToWXCardPackage$Resp(android.os.Bundle)
com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker: BottomSheetBehavior$StateSettlingTracker(com.google.android.material.bottomsheet.BottomSheetBehavior)
com.caij.puremusic.drive.model.AlbumList$Companion: AlbumList$Companion()
org.simpleframework.xml.stream.OutputAttribute: void commit()
com.caij.puremusic.drive.model.AlbumItem: int hashCode()
androidx.appcompat.app.AppCompatDialog: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
org.jaudiotagger.utils.tree.TreePath: TreePath(java.lang.Object[],int)
com.caij.puremusic.drive.model.JellyfinFolder: int hashCode()
org.jaudiotagger.tag.id3.framebody.FrameBodyAENC: void setupObjectList()
com.google.android.material.textfield.TextInputLayout: void setPrefixText(java.lang.CharSequence)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCheckedIcon()
org.jcodec.containers.mp4.boxes.TimeToSampleBox$TimeToSampleEntry: void setSampleCount(int)
com.caij.puremusic.drive.model.PlexUser: java.lang.String component4()
org.jaudiotagger.audio.asf.data.FileHeader: java.math.BigInteger getTimeStartPos()
com.caij.puremusic.db.model.ServerSongCover: boolean equals(java.lang.Object)
com.caij.puremusic.db.model.SongQueries$SongsByArtistIdWithLikeQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.umeng.commonsdk.statistics.proto.a: boolean j()
com.heinrichreimersoftware.materialintro.view.FadeableViewPager: void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
org.simpleframework.xml.stream.StreamReader$Entry: java.lang.String getPrefix()
org.jaudiotagger.tag.id3.ID3v22Tag: java.lang.String getIdentifier()
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getRippleColor()
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$GetByIdQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.caij.puremusic.drive.model.AlbumResponse: AlbumResponse(int,com.caij.puremusic.drive.model.AlbumSubsonicResponse,kotlinx.serialization.internal.SerializationConstructorMarker)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getDrawable(android.graphics.drawable.InsetDrawable)
org.jaudiotagger.utils.tree.TreePath: int getPathCount()
org.jaudiotagger.audio.mp3.MP3AudioHeader: boolean isLossless()
org.jaudiotagger.audio.generic.GenericTag$GenericTagTextField: boolean isBinary()
com.umeng.commonsdk.statistics.idtracking.e$a: void b(java.lang.String)
com.caij.puremusic.drive.model.PlayLists: PlayLists(java.util.List)
com.tencent.bugly.proguard.ag: void c(java.util.List)
com.umeng.analytics.filter.EventList: boolean onFileLock(java.lang.String,java.lang.Object)
com.tencent.bugly.proguard.s: long e()
org.jaudiotagger.audio.aiff.AiffFileHeader: void readFileType(java.nio.ByteBuffer,org.jaudiotagger.audio.aiff.AiffAudioHeader)
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getSimICCID(android.content.Context)
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4TagFieldSubType getSubClassFieldType()
com.caij.puremusic.drive.model.ImageTags$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
org.jaudiotagger.tag.datatype.Lyrics3TimeStamp: void readString(java.lang.String)
com.tencent.mm.opensdk.diffdev.a.a$a$a: void run()
org.jaudiotagger.audio.asf.io.WriteableChunkModifer: WriteableChunkModifer(org.jaudiotagger.audio.asf.io.WriteableChunk)
org.jaudiotagger.tag.datatype.Lyrics3TimeStamp: void readByteArray(byte[],int)
com.umeng.analytics.pro.bu: void o()
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query songsByIds(java.util.Collection)
com.google.android.material.bottomsheet.BottomSheetBehavior: int getExpandedOffset()
com.caij.puremusic.drive.model.SearchResult3: java.util.List getSong()
com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
org.jaudiotagger.audio.mp4.Flatten: org.jaudiotagger.audio.mp4.Chunk processChunk(org.jaudiotagger.audio.mp4.Flatten$SampleProcessor,org.jaudiotagger.audio.mp4.Chunk,org.jcodec.containers.mp4.boxes.TrakBox,org.jcodec.containers.mp4.boxes.MovieBox)
com.tencent.mm.opensdk.modelbiz.WXChannelOpenLive$Req: boolean checkArgs()
org.simpleframework.xml.core.DefaultScanner: org.simpleframework.xml.core.ParameterMap getParameters()
org.jaudiotagger.tag.wav.WavInfoTag: void setStartLocationInFile(long)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
org.simpleframework.xml.core.ElementMapLabel: org.simpleframework.xml.strategy.Type getMap()
org.simpleframework.xml.core.CacheLabel: org.simpleframework.xml.core.Converter getConverter(org.simpleframework.xml.core.Context)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
org.simpleframework.xml.core.ElementLabel: org.simpleframework.xml.core.Contact getContact()
androidx.activity.ComponentDialog: ComponentDialog(android.content.Context,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.caij.puremusic.drive.model.MediaContainer: void write$Self(com.caij.puremusic.drive.model.MediaContainer,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.umeng.commonsdk.framework.UMEnvelopeBuild: boolean isReadyBuildStateless()
org.jaudiotagger.tag.id3.ID3v1TagField: void checkCommon()
com.caij.puremusic.db.model.AlbumQueries$albums$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.audio.generic.ModificationHandler: void fileModified(org.jaudiotagger.audio.AudioFile,java.io.File)
com.umeng.commonsdk.framework.a: void e()
androidx.cardview.widget.CardView: int getContentPaddingLeft()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevationResource(int)
org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile: org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile valueOf(java.lang.String)
com.google.android.material.slider.BaseSlider: float getValueOfTouchPosition()
org.simpleframework.xml.core.GroupExtractor$Registry: boolean isText()
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: boolean isDefaultSampleSizeAvailable()
com.umeng.analytics.pro.bo: long x()
org.jcodec.containers.mp4.boxes.TimeToSampleBox: org.jcodec.containers.mp4.boxes.TimeToSampleBox createTimeToSampleBox(org.jcodec.containers.mp4.boxes.TimeToSampleBox$TimeToSampleEntry[])
com.tencent.bugly.proguard.as: void b(java.util.ArrayList,byte[])
com.caij.puremusic.db.model.ArtistQueries$SearchArtistByNameQuery: java.lang.String getName()
com.caij.puremusic.model.DriveFileParcelable: long component7()
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: void copy(java.lang.String,java.lang.String)
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status[] values()
org.jaudiotagger.utils.tree.EventListenerList: void readObject(java.io.ObjectInputStream)
com.google.android.material.chip.Chip: void setChipEndPaddingResource(int)
com.caij.puremusic.model.Data: java.lang.String component8()
com.tencent.bugly.proguard.ab: long l()
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String component5()
com.yalantis.ucrop.view.CropImageView: void setMaxScaleMultiplier(float)
org.jaudiotagger.logging.AbstractTagDisplayFormatter: java.lang.String displayAsBinary(byte)
org.jaudiotagger.audio.asf.data.ContentBranding: long getImageType()
com.umeng.commonsdk.statistics.proto.e$b: e$b()
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: void setTextDirection(android.view.View,int)
org.jaudiotagger.tag.id3.ID3v1FieldKey: org.jaudiotagger.tag.id3.ID3v1FieldKey valueOf(java.lang.String)
com.caij.puremusic.views.BaselineGridTextView: int getFontResId()
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean sendQRCodePayReq(android.content.Context,com.tencent.mm.opensdk.modelbase.BaseReq)
org.simpleframework.xml.stream.EventReader: org.simpleframework.xml.stream.EventNode peek()
org.jaudiotagger.tag.id3.AbstractID3v2Frame$EncodingFlags: byte getFlags()
com.caij.puremusic.db.model.ArtistQueries$clear$1: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.drive.model.AMetadata: java.lang.String getTitle()
com.google.android.material.materialswitch.MaterialSwitch: android.graphics.drawable.Drawable getThumbDrawable()
com.caij.puremusic.db.model.SearchAlbumResultQueries$deleteById$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.jaudiotagger.audio.AudioFileIO: org.jaudiotagger.audio.AudioFile read(java.io.File)
org.simpleframework.xml.core.TextListLabel: java.lang.Class getType()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
org.jaudiotagger.tag.id3.ID3v11Tag: boolean isEmpty()
org.jaudiotagger.tag.id3.framebody.FrameBodyWOAR: FrameBodyWOAR(java.nio.ByteBuffer,int)
com.caij.puremusic.drive.model.Auth2Token: long component6()
com.umeng.commonsdk.debug.UMLog: void mutlInfo(java.lang.String,int,java.lang.String[])
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
org.simpleframework.xml.stream.InputAttribute: InputAttribute(org.simpleframework.xml.stream.InputNode,java.lang.String,java.lang.String)
com.umeng.commonsdk.statistics.proto.d$a: void a(com.umeng.analytics.pro.bu,com.umeng.commonsdk.statistics.proto.d)
com.caij.puremusic.drive.model.SubsonicSong: boolean isDir()
org.jaudiotagger.audio.ogg.util.OggPage: org.jaudiotagger.audio.ogg.util.OggPage parse(java.nio.ByteBuffer)
com.caij.puremusic.drive.model.DriveFile: long getUpdateTime()
com.thegrizzlylabs.sardineandroid.Sardine: void setCredentials(java.lang.String,java.lang.String,boolean)
com.caij.puremusic.db.model.SongQueries$GetArtistSongCountQuery: SongQueries$GetArtistSongCountQuery(com.caij.puremusic.db.model.SongQueries,java.lang.String,java.lang.String,java.lang.String,java.lang.String,kotlin.jvm.functions.Function1)
androidx.core.widget.ListViewCompat$Api19Impl: boolean canScrollList(android.widget.ListView,int)
com.caij.puremusic.db.model.SongQueries$insertOrReplace$2: SongQueries$insertOrReplace$2()
com.tencent.bugly.proguard.ag$c: ag$c(java.lang.String,java.lang.String,long,boolean,long,java.lang.String,java.lang.String)
org.jcodec.containers.mp4.boxes.NodeBox: org.jcodec.containers.mp4.boxes.Box findFirstPath(org.jcodec.containers.mp4.boxes.NodeBox,java.lang.Class,java.lang.String[])
com.umeng.analytics.pro.bo: void a(byte,int)
androidx.core.view.ViewCompat$Api26Impl: boolean isFocusedByDefault(android.view.View)
org.simpleframework.xml.stream.Stack: java.lang.Object push(java.lang.Object)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
org.repackage.com.heytap.openid.sdk.OpenIDSDK: java.lang.String e(android.content.Context)
androidx.fragment.app.Fragment: void performStart()
org.jaudiotagger.tag.id3.framebody.FrameBodyTRDA: FrameBodyTRDA(java.nio.ByteBuffer,int)
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
com.umeng.analytics.pro.l: void g()
com.thegrizzlylabs.sardineandroid.DavResource: java.util.Date getCreation()
org.jaudiotagger.tag.id3.framebody.FrameBodySYTC: java.lang.String getIdentifier()
com.caij.puremusic.drive.model.GoogleDriveFile: java.lang.String getId()
com.umeng.analytics.pro.r: int a(android.content.Context)
org.jaudiotagger.tag.TagOptionSingleton: java.util.Iterator getKeywordIterator()
com.caij.puremusic.db.model.PlaybackSongQueries$insert$1: java.lang.Object invoke(java.lang.Object)
com.tencent.bugly.proguard.aa: java.lang.String d()
com.umeng.commonsdk.internal.utils.k$1: void run()
org.jaudiotagger.tag.id3.valuepair.EventTimingTimestampTypes: EventTimingTimestampTypes()
com.caij.puremusic.drive.model.ArtistItem: ArtistItem(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,java.lang.Integer,com.caij.puremusic.drive.model.ImageTags,java.util.List,java.lang.String,kotlinx.serialization.internal.SerializationConstructorMarker)
com.caij.puremusic.model.Playlist$Creator: Playlist$Creator()
org.simpleframework.xml.stream.Formatter: boolean isEmpty(java.lang.String)
androidx.fragment.app.Fragment: Fragment()
org.jcodec.containers.mp4.boxes.MediaHeaderBox: long getDuration()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
org.simpleframework.xml.ElementList: java.lang.String name()
com.umeng.commonsdk.statistics.proto.e: void a(java.io.ObjectOutputStream)
com.caij.puremusic.drive.model.OneDriveItem: long getSize()
org.jaudiotagger.tag.id3.framebody.FrameBodyAPIC: java.lang.String getImageUrl()
com.tencent.bugly.proguard.ag$b: java.lang.String toString()
org.xmlpull.v1.XmlPullParser: char[] getTextCharacters(int[])
com.umeng.commonsdk.framework.UMFrUtils: int envelopeFileNumber(android.content.Context)
com.umeng.commonsdk.statistics.proto.e: java.lang.String toString()
androidx.fragment.app.DialogFragment: void setupDialog(android.app.Dialog,int)
com.caij.puremusic.drive.model.OneDriveFileResponse: OneDriveFileResponse(java.lang.String,int,java.util.List)
com.umeng.commonsdk.UMInnerImpl: void sendInternal(android.content.Context)
com.umeng.commonsdk.statistics.proto.Response$a: void a(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
org.jcodec.containers.mp4.boxes.MovieHeaderBox: float getRate()
org.jcodec.containers.mp4.boxes.MovieBox: void setDuration(long)
com.google.android.material.chip.Chip: void setRippleColor(android.content.res.ColorStateList)
com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)
com.umeng.commonsdk.stateless.d: d()
org.jaudiotagger.audio.iff.ChunkHeader: java.nio.ByteBuffer writeHeader()
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$clear$1: java.lang.Object invoke(java.lang.Object)
com.umeng.commonsdk.internal.d: void a(android.content.Context,org.json.JSONObject)
nl.adaptivity.xmlutil.QNameSerializer$descriptor$1: QNameSerializer$descriptor$1()
com.caij.puremusic.drive.model.Propstat$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.umeng.analytics.pro.y: java.lang.String f(android.content.Context)
com.caij.puremusic.drive.model.Multistatus: Multistatus()
com.caij.puremusic.drive.model.MediaInfoWrapper: void setSongs(java.util.List)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
org.simpleframework.xml.stream.InputNodeMap: org.simpleframework.xml.stream.InputNode getNode()
com.caij.puremusic.drive.model.PlayListsSubsonicResponse: PlayListsSubsonicResponse(int,java.lang.String,java.lang.String,com.caij.puremusic.drive.model.PlayLists,kotlinx.serialization.internal.SerializationConstructorMarker)
org.jaudiotagger.tag.datatype.Lyrics3TimeStamp: long getMinute()
org.jaudiotagger.audio.generic.AudioFileReader2: AudioFileReader2()
org.jaudiotagger.utils.tree.EventListenerList: void remove(java.lang.Class,java.util.EventListener)
org.jaudiotagger.tag.id3.valuepair.ImageFormats: boolean isPortableFormat(byte[])
kotlin.collections.State: State(java.lang.String,int)
org.jaudiotagger.audio.AudioFile: void commit()
com.caij.puremusic.drive.model.PlexSongsResponse$Companion: PlexSongsResponse$Companion()
com.caij.puremusic.drive.model.MediaStream: java.lang.String component1()
org.simpleframework.xml.transform.ArrayMatcher: ArrayMatcher(org.simpleframework.xml.transform.Matcher)
com.umeng.commonsdk.utils.b$a: com.umeng.commonsdk.utils.b a()
com.google.android.material.search.SearchBar: void setHint(java.lang.CharSequence)
org.simpleframework.xml.core.DetailScanner: void extract(java.lang.Class)
org.simpleframework.xml.core.Primitive: boolean validate(org.simpleframework.xml.stream.InputNode)
com.caij.puremusic.drive.model.Auth2Token: boolean equals(java.lang.Object)
org.jaudiotagger.audio.wav.chunk.WavFormatChunk: boolean readChunk()
com.google.common.hash.Hashing$ChecksumType: Hashing$ChecksumType(java.lang.String,int,java.lang.String)
org.jcodec.containers.mp4.boxes.NameBox: void parse(java.nio.ByteBuffer)
org.jaudiotagger.tag.mp4.field.Mp4TagTextNumberField: Mp4TagTextNumberField(java.lang.String,java.lang.String)
com.caij.puremusic.drive.model.FMediaContainer: java.util.List component3()
com.thegrizzlylabs.sardineandroid.model.Propfind: com.thegrizzlylabs.sardineandroid.model.Prop getProp()
org.simpleframework.xml.stream.EventReader: org.simpleframework.xml.stream.EventNode next()
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.audio.generic.AbstractTag$1: void changeIt()
com.caij.puremusic.network.model.Artist: Artist(java.util.Map,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,com.caij.puremusic.network.model.Artist,java.util.List)
com.caij.puremusic.drive.model.SongItem: java.util.Map getImageTags()
kotlinx.serialization.json.JsonElementSerializer$descriptor$1$4: JsonElementSerializer$descriptor$1$4()
com.caij.puremusic.db.model.SongQueries$SongsByAlumIdQuery: void removeListener(app.cash.sqldelight.Query$Listener)
org.jcodec.containers.mp4.boxes.ClipRegionBox: void doWrite(java.nio.ByteBuffer)
org.jaudiotagger.audio.wav.chunk.WavFormatChunk: WavFormatChunk(java.nio.ByteBuffer,org.jaudiotagger.audio.iff.ChunkHeader,org.jaudiotagger.audio.generic.GenericAudioHeader)
org.simpleframework.xml.core.StructureBuilder: void process(org.simpleframework.xml.core.Contact,org.simpleframework.xml.core.Label,org.simpleframework.xml.core.LabelMap)
org.jcodec.containers.mp4.boxes.ProductionApertureBox: org.jcodec.containers.mp4.boxes.ProductionApertureBox createProductionApertureBox(int,int)
org.simpleframework.xml.ElementMap: boolean data()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyIMG: java.lang.String getValue()
com.caij.puremusic.db.model.SongQueries$SongByPathQuery: void addListener(app.cash.sqldelight.Query$Listener)
org.simpleframework.xml.stream.DocumentReader$Start: DocumentReader$Start(org.w3c.dom.Node)
com.tencent.bugly.proguard.az: android.app.ActivityManager$ProcessErrorStateInfo a(android.app.ActivityManager,long)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyPairs: int getNumberOfPairs()
org.simpleframework.xml.core.Label: org.simpleframework.xml.core.Converter getConverter(org.simpleframework.xml.core.Context)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyIMG: FieldFrameBodyIMG(org.jaudiotagger.tag.lyrics3.FieldFrameBodyIMG)
org.jaudiotagger.audio.mp3.MP3AudioHeader: void setAudioDataEndPosition(java.lang.Long)
com.google.android.material.appbar.CollapsingToolbarLayout: void setLineSpacingAdd(float)
com.caij.puremusic.drive.model.SubsonicSearchListResponse: com.caij.puremusic.drive.model.SubsonicSearchListResponse copy$default(com.caij.puremusic.drive.model.SubsonicSearchListResponse,com.caij.puremusic.drive.model.SubsonicSearchResponse,int,java.lang.Object)
org.simpleframework.xml.core.Reflector: java.lang.Class getParameterDependent(java.lang.reflect.Method,int)
org.jaudiotagger.tag.id3.framebody.FrameBodyTIT2: FrameBodyTIT2(byte,java.lang.String)
com.caij.puremusic.drive.model.JellyfinArtistResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleOwner getViewLifecycleOwner()
org.simpleframework.xml.Serializer: void write(java.lang.Object,java.io.Writer)
com.umeng.commonsdk.statistics.common.MLog: void e(java.lang.String)
com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)
org.jaudiotagger.tag.images.AndroidArtwork: org.jaudiotagger.tag.images.AndroidArtwork createArtworkFromMetadataBlockDataPicture(org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture)
org.jaudiotagger.tag.id3.ID3v22Frame: ID3v22Frame(org.jaudiotagger.tag.id3.ID3v22Frame)
me.tankery.lib.circularseekbar.CircularSeekBar: void setPointerColor(int)
org.jaudiotagger.tag.id3.ID3v1Iterator: ID3v1Iterator(org.jaudiotagger.tag.id3.ID3v1Tag)
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean access$2000(com.google.android.material.bottomsheet.BottomSheetBehavior)
com.google.android.material.bottomsheet.BottomSheetBehavior: int getMaxWidth()
org.jaudiotagger.audio.ogg.util.OggPageHeader: int getSerialNumber()
com.tencent.mm.opensdk.modelbiz.AddCardToWXCardPackage$Resp: void fromBundle(android.os.Bundle)
org.jaudiotagger.audio.asf.data.EncodingChunk: EncodingChunk(java.math.BigInteger)
com.alipay.sdk.m.j.c: com.alipay.sdk.m.j.c[] values()
org.simpleframework.xml.core.OverrideValue: OverrideValue(org.simpleframework.xml.strategy.Value,java.lang.Class)
com.caij.puremusic.db.model.Song: java.lang.String component6()
com.tencent.bugly.proguard.ao: void a(java.lang.String,java.lang.String,java.lang.Throwable)
com.tencent.bugly.proguard.ak: ak()
com.umeng.analytics.pro.cj: cj(java.lang.Throwable)
nl.adaptivity.xmlutil.EventType: void writeEvent(nl.adaptivity.xmlutil.XmlWriter,nl.adaptivity.xmlutil.XmlEvent$TextEvent)
com.tencent.bugly.crashreport.CrashReport$a: void a(java.lang.String)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: org.jaudiotagger.utils.tree.TreeNode getSharedAncestor(org.jaudiotagger.utils.tree.DefaultMutableTreeNode)
com.umeng.analytics.pro.l$1: void onActivityStopped(android.app.Activity)
org.jaudiotagger.tag.images.AndroidArtwork: void setMimeType(java.lang.String)
org.jaudiotagger.tag.id3.framebody.AbstractID3v2FrameBody: boolean equals(java.lang.Object)
androidx.constraintlayout.widget.ConstraintHelper: void setReferencedIds(int[])
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onNestedPreFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)
org.simpleframework.xml.core.GroupExtractor$Registry: org.simpleframework.xml.core.Label resolveElement(java.lang.Class)
com.caij.puremusic.db.model.SongQueries$deleteSongBySource$1: SongQueries$deleteSongBySource$1(long)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
com.caij.puremusic.util.AlbumUtil$sortAlbumSongs$songs$1: AlbumUtil$sortAlbumSongs$songs$1()
com.caij.puremusic.db.model.SearchAlbumResultQueries$getById$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyIMG: java.lang.String writeString()
org.jaudiotagger.audio.flac.FlacInfoReader: FlacInfoReader()
androidx.viewpager.widget.ViewPager: void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
org.jaudiotagger.tag.mp4.Mp4FieldKey: Mp4FieldKey(java.lang.String,int,java.lang.String,org.jaudiotagger.tag.mp4.Mp4TagFieldSubType,org.jaudiotagger.tag.mp4.field.Mp4FieldType,org.jaudiotagger.tag.reference.Tagger)
org.simpleframework.xml.stream.OutputStack$Sequence: java.lang.Object next()
com.caij.puremusic.db.model.SearchAlbumResultQueries: void deleteById(java.lang.String)
com.umeng.commonsdk.statistics.common.HelperUtils: java.lang.String getMD5(java.lang.String)
androidx.core.view.ViewCompat$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getRippleColor()
com.google.android.material.progressindicator.BaseProgressIndicator: com.google.android.material.progressindicator.DrawingDelegate getCurrentDrawingDelegate()
com.umeng.commonsdk.statistics.proto.a$d: a$d(com.umeng.commonsdk.statistics.proto.a$1)
org.jaudiotagger.tag.id3.ID3v22Tag: org.jaudiotagger.tag.id3.AbstractID3v2Frame createFrame(java.lang.String)
com.tencent.mm.opensdk.modelmsg.WXLiteAppObject: int type()
org.simpleframework.xml.core.Label: boolean isData()
org.jaudiotagger.tag.mp4.field.Mp4DiscNoField: void setDiscNo(int)
com.tencent.bugly.proguard.l: void a(boolean,int)
com.tencent.bugly.crashreport.crash.anr.TraceFileHelper: java.lang.Object[] a(java.io.BufferedReader,java.util.regex.Pattern[])
com.thegrizzlylabs.sardineandroid.model.ReadCurrentUserPrivilegeSet: ReadCurrentUserPrivilegeSet()
org.jaudiotagger.audio.mp3.MPEGFrameHeader: void setModeExtension()
com.caij.puremusic.drive.model.Metadata: java.lang.String component2()
org.jaudiotagger.tag.id3.framebody.FrameBodyPOPM: java.lang.String getEmailToUser()
com.tencent.mm.opensdk.modelbiz.SubscribeMessage$Resp: void fromBundle(android.os.Bundle)
org.simpleframework.xml.core.ClassSchema: org.simpleframework.xml.core.Decorator getDecorator()
org.jaudiotagger.tag.mp4.Mp4Tag: org.jaudiotagger.tag.mp4.Mp4TagField getFirstField(org.jaudiotagger.tag.mp4.Mp4FieldKey)
com.caij.puremusic.db.model.HistoryEntityQueries$GetByIdQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.fragment.app.Fragment: void onDestroyView()
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
com.caij.puremusic.model.AbsCustomPlaylist$special$$inlined$inject$default$1: java.lang.Object invoke()
com.google.android.material.circularreveal.CircularRevealFrameLayout: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
com.caij.puremusic.drive.model.Propstat: void getProp$annotations()
com.caij.puremusic.model.DriveFileParcelable: long component3()
org.jaudiotagger.tag.mp4.field.Mp4TagBinaryField: void copyContent(org.jaudiotagger.tag.TagField)
com.umeng.common.b: void b()
com.google.common.hash.BloomFilterStrategies$2: boolean mightContain(java.lang.Object,com.google.common.hash.Funnel,int,com.google.common.hash.BloomFilterStrategies$LockFreeBitArray)
com.alipay.android.phone.mrpc.core.q: com.alipay.android.phone.mrpc.core.u d()
org.jaudiotagger.tag.id3.ID3v1Tag: java.util.List getFields(org.jaudiotagger.tag.FieldKey)
org.simpleframework.xml.stream.OutputElement: boolean isRoot()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getSuffixTextColor()
com.tencent.mm.opensdk.modelbiz.WXNontaxPay$Req: void toBundle(android.os.Bundle)
org.simpleframework.xml.core.ElementArrayParameter: java.lang.Object getKey()
org.simpleframework.xml.core.SetPart: java.lang.annotation.Annotation getAnnotation(java.lang.Class)
org.jaudiotagger.tag.id3.ID3v24Tag: long write(java.io.File,long)
androidx.core.widget.ImageViewCompat$Api21Impl: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
org.jaudiotagger.audio.mp3.MP3AudioHeader: MP3AudioHeader(java.io.File)
org.jaudiotagger.tag.datatype.TextEncodedStringSizeTerminated: java.util.List splitByNullSeperator(java.lang.String)
org.simpleframework.xml.core.ArrayFactory: ArrayFactory(org.simpleframework.xml.core.Context,org.simpleframework.xml.strategy.Type)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
androidx.preference.ListPreference: ListPreference(android.content.Context,android.util.AttributeSet,int,int)
androidx.core.app.ShareCompat$Api16Impl: void removeClipData(android.content.Intent)
androidx.cardview.widget.CardView: void setPreventCornerOverlap(boolean)
com.yalantis.ucrop.view.GestureCropImageView: void setRotateEnabled(boolean)
org.jaudiotagger.tag.aiff.AiffTag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.images.Artwork)
com.google.android.material.internal.TouchObserverFrameLayout: void setOnTouchListener(android.view.View$OnTouchListener)
org.simpleframework.xml.core.FieldContact: java.lang.Class getType()
com.caij.puremusic.drive.model.EmbyAlbumsResponse: int getStartIndex()
org.simpleframework.xml.core.InstantiationException: InstantiationException(java.lang.Throwable,java.lang.String,java.lang.Object[])
com.umeng.analytics.pro.bu: void a(com.umeng.analytics.pro.bz)
org.jaudiotagger.tag.id3.framebody.FrameBodyTDLY: FrameBodyTDLY(byte,java.lang.String)
org.simpleframework.xml.core.Persister: void write(java.lang.Object,java.io.OutputStream)
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
com.caij.puremusic.model.DriveFileParcelable: java.lang.String getFileId()
org.jaudiotagger.audio.mp4.EncoderType: java.lang.String getDescription()
com.caij.puremusic.drive.model.SongItem$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.fragments.player.full.FullPlaybackControlsFragment: FullPlaybackControlsFragment()
org.simpleframework.xml.core.ElementListUnionLabel: org.simpleframework.xml.core.Expression getExpression()
org.jaudiotagger.audio.generic.GenericAudioHeader: double getPreciseTrackLength()
com.caij.puremusic.drive.model.JellyfinFolder$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.jcodec.containers.mp4.boxes.EndianBox: void doWrite(java.nio.ByteBuffer)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: java.lang.Object getTag(android.view.View)
org.jaudiotagger.tag.id3.AbstractTagFrameBody: java.lang.String getUserFriendlyValue()
com.tencent.mm.opensdk.modelbiz.AddCardToWXCardPackage: AddCardToWXCardPackage()
org.jcodec.containers.mp4.boxes.PixelAspectExt: int getvSpacing()
org.jcodec.containers.mp4.boxes.EditListBox: void doWrite(java.nio.ByteBuffer)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
org.jcodec.containers.mp4.boxes.ReverseDnsBox: java.lang.String getIssuer()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
org.simpleframework.xml.transform.ClassTransform: java.lang.String write(java.lang.Class)
com.caij.puremusic.drive.model.SubsonicSong$$serializer: com.caij.puremusic.drive.model.SubsonicSong deserialize(kotlinx.serialization.encoding.Decoder)
nl.adaptivity.xmlutil.SimpleNamespaceContext$special$$inlined$flatten$2: SimpleNamespaceContext$special$$inlined$flatten$2()
com.caij.puremusic.drive.model.PlexAlbumsResponse$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.caij.puremusic.db.model.SearchAlbumResultQueries$deleteById$2: SearchAlbumResultQueries$deleteById$2()
org.jaudiotagger.tag.id3.framebody.FrameBodyTIME: java.lang.String getIdentifier()
org.jaudiotagger.audio.iff.IffHeaderChunk: void ensureOnEqualBoundary(java.nio.channels.FileChannel,org.jaudiotagger.audio.iff.ChunkHeader)
org.jaudiotagger.tag.id3.ID3v23Frame: boolean isValidID3v2FrameIdentifier(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: void setAllCaps(boolean)
androidx.lifecycle.ViewModel: ViewModel()
com.google.common.hash.Hashing$ChecksumType$2: java.lang.Object get()
org.jaudiotagger.audio.AudioFile: void setExt(java.lang.String)
org.simpleframework.xml.stream.OutputNode: org.simpleframework.xml.stream.OutputNode getChild(java.lang.String)
org.simpleframework.xml.stream.OutputNodeMap: java.util.Iterator iterator()
com.caij.puremusic.network.model.Artist: java.lang.String component3()
org.jcodec.containers.mp4.boxes.Header: long headerSize()
com.umeng.analytics.pro.bf$d: bf$d()
com.umeng.commonsdk.statistics.proto.Response: void setMsgIsSet(boolean)
com.caij.puremusic.drive.model.MediaStream$Companion: MediaStream$Companion()
com.tencent.mm.opensdk.modelbiz.WXChannelOpenEvent$Resp: WXChannelOpenEvent$Resp()
com.caij.puremusic.db.model.SongQueries$song$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.umeng.analytics.pro.an: void c()
org.simpleframework.xml.stream.InputAttribute: boolean isElement()
com.umeng.commonsdk.statistics.idtracking.f: java.lang.String f()
org.jaudiotagger.tag.id3.framebody.FrameBodyIPLS: java.lang.String getIdentifier()
com.google.common.base.Predicates$ObjectPredicate: com.google.common.base.Predicate withNarrowedType()
org.jaudiotagger.tag.id3.ID3v11Tag: int getFieldCount()
com.caij.puremusic.drive.model.AlbumList$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.simpleframework.xml.core.ObjectFactory: org.simpleframework.xml.core.Instance getInstance(org.simpleframework.xml.stream.InputNode)
org.simpleframework.xml.core.Variable: java.lang.String getPath()
org.jaudiotagger.tag.aiff.AiffTagFieldKey: org.jaudiotagger.tag.aiff.AiffTagFieldKey valueOf(java.lang.String)
androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: long getBufferedPosition(android.media.session.PlaybackState)
com.caij.vip.AppGood: void writeToParcel(android.os.Parcel,int)
com.caij.puremusic.preferences.BlacklistPreference: BlacklistPreference(android.content.Context,android.util.AttributeSet,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
org.simpleframework.xml.stream.OutputAttribute: org.simpleframework.xml.stream.OutputNode getParent()
com.caij.puremusic.db.model.SongQueries$allSongs$2: SongQueries$allSongs$2()
org.jaudiotagger.tag.wav.WavTag: boolean hasField(org.jaudiotagger.tag.FieldKey)
org.jaudiotagger.audio.exceptions.InvalidAudioFrameException: InvalidAudioFrameException(java.lang.String)
org.simpleframework.xml.stream.Splitter: void commit(char[],int,int)
org.simpleframework.xml.core.MethodPart: java.lang.annotation.Annotation getAnnotation(java.lang.Class)
org.simpleframework.xml.core.MethodPartFactory: MethodPartFactory(org.simpleframework.xml.core.Detail,org.simpleframework.xml.core.Support)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: java.lang.Object clone()
org.jaudiotagger.tag.id3.ID3v1Tag: java.lang.String getFirst(org.jaudiotagger.tag.FieldKey)
org.simpleframework.xml.transform.ClassTransform: java.lang.Class read(java.lang.String)
org.jaudiotagger.audio.exceptions.UnableToRenameFileException: UnableToRenameFileException(java.lang.String)
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: java.lang.String getLogFromNative()
com.umeng.analytics.pro.h: java.lang.String a(java.util.List)
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: void unBlockSigquit(boolean)
com.google.android.exoplayer2.drm.DrmUtil$Api23: boolean isMediaDrmResetException(java.lang.Throwable)
com.caij.puremusic.fragments.queue.PlayingQueueFragment: PlayingQueueFragment()
org.simpleframework.xml.stream.Formatter$Tag: org.simpleframework.xml.stream.Formatter$Tag[] values()
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: boolean isMonthOnly()
org.simpleframework.xml.core.DefaultScanner: org.simpleframework.xml.core.Signature getSignature()
com.google.android.material.navigation.NavigationBarItemView: void setIcon(android.graphics.drawable.Drawable)
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException()
com.tencent.mm.opensdk.modelmsg.WXMusicVideoObject: void serialize(android.os.Bundle)
com.caij.puremusic.preferences.AlbumCoverStylePreferenceDialog: AlbumCoverStylePreferenceDialog()
com.caij.puremusic.drive.model.GoogleDriveFileResponse: void write$Self(com.caij.puremusic.drive.model.GoogleDriveFileResponse,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.google.android.material.bottomsheet.BottomSheetBehavior: float getYVelocity()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension()
com.caij.puremusic.network.model.LastFmTrack$Track$Album$Attr: void setPosition(java.lang.String)
org.jaudiotagger.audio.exceptions.CannotReadException: CannotReadException(java.lang.String,java.lang.Throwable)
com.caij.puremusic.drive.model.SubsonicResponse: SubsonicResponse(java.lang.String,java.lang.String,com.caij.puremusic.drive.model.AlbumList)
org.simpleframework.xml.core.ElementListUnionLabel: java.lang.Class getType()
org.simpleframework.xml.util.Dictionary: boolean add(org.simpleframework.xml.util.Entry)
org.jaudiotagger.test.TestAudioTagger: void main(java.lang.String[])
com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker$1: BottomSheetBehavior$StateSettlingTracker$1(com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker)
org.simpleframework.xml.transform.ByteTransform: java.lang.String write(java.lang.Byte)
org.jcodec.containers.mp4.boxes.MovieHeaderBox: void setTimescale(int)
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
org.jaudiotagger.tag.id3.ID3v22FieldKey: ID3v22FieldKey(java.lang.String,int,java.lang.String,org.jaudiotagger.tag.id3.Id3FieldType)
org.simpleframework.xml.core.EmptyExpression: java.lang.String getElement(java.lang.String)
androidx.fragment.app.Fragment: void setReenterTransition(java.lang.Object)
org.jaudiotagger.tag.datatype.Pair: void setKey(java.lang.Object)
com.yalantis.ucrop.view.CropImageView: com.yalantis.ucrop.callback.CropBoundsChangeListener getCropBoundsChangeListener()
android.support.v4.media.MediaDescriptionCompat$Api23Impl: android.net.Uri getMediaUri(android.media.MediaDescription)
org.jaudiotagger.tag.id3.framebody.FrameBodyTMOO: FrameBodyTMOO(org.jaudiotagger.tag.id3.framebody.FrameBodyTXXX)
com.github.dhaval2404.imagepicker.constant.ImageProvider: com.github.dhaval2404.imagepicker.constant.ImageProvider valueOf(java.lang.String)
com.tencent.bugly.proguard.ay: void c()
com.umeng.analytics.pro.aw: byte[] a(java.nio.ByteBuffer)
com.caij.puremusic.fragments.NowPlayingScreen: com.caij.puremusic.fragments.NowPlayingScreen valueOf(java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeColor(int)
com.tencent.mm.opensdk.modelbiz.WXChannelStartLive$Resp: void toBundle(android.os.Bundle)
org.jaudiotagger.logging.LogFormatter: LogFormatter()
com.tencent.mm.opensdk.modelmsg.WXStateSceneDataObject: void serialize(android.os.Bundle)
org.jcodec.containers.mp4.boxes.SegmentTypeBox: java.lang.String getMajorBrand()
com.google.android.material.chip.Chip: void setCloseIconStartPadding(float)
com.caij.puremusic.db.model.AlbumQueries$deleteAlbumById$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId$1: void onServiceDisconnected(android.content.ComponentName)
com.caij.puremusic.db.model.HistoryEntityQueries$getById$2: com.caij.puremusic.db.model.HistoryEntity invoke(long,long)
com.caij.puremusic.drive.model.Auth2Token$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.Auth2Token)
com.tencent.bugly.proguard.w: java.util.Map a(int,com.tencent.bugly.proguard.v)
org.jaudiotagger.audio.SupportedFileFormat$8: SupportedFileFormat$8(java.lang.String,int,java.lang.String)
androidx.fragment.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)
org.simpleframework.xml.core.TextList: TextList(org.simpleframework.xml.core.Context,org.simpleframework.xml.strategy.Type,org.simpleframework.xml.core.Label)
com.tencent.mm.opensdk.modelbiz.WXInvoiceAuthInsert$Req: int getType()
com.yalantis.ucrop.view.widget.AspectRatioTextView: void setActiveColor(int)
org.jaudiotagger.audio.real.RealChunk: java.lang.String toString()
com.tencent.bugly.proguard.i: i(java.lang.StringBuilder,int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)
com.tencent.mm.opensdk.openapi.IWXAPI: void unregisterApp()
org.simpleframework.xml.core.TreeModel: void registerElement(java.lang.String)
org.simpleframework.xml.transform.BooleanTransform: java.lang.String write(java.lang.Object)
com.umeng.commonsdk.internal.d: org.json.JSONObject d(android.content.Context)
org.jaudiotagger.tag.asf.AsfTagCoverField: byte[] getRawImageData()
com.caij.puremusic.drive.model.DropboxDriveFileResponse$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.jaudiotagger.tag.id3.reference.MediaPlayerRating: int convertRatingToFiveStarScale(int)
com.caij.puremusic.drive.model.SubsonicSong$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.SubsonicSong)
com.caij.puremusic.db.model.Song: java.lang.String getUrl()
androidx.fragment.app.Fragment: java.lang.String getString(int,java.lang.Object[])
com.umeng.commonsdk.statistics.idtracking.e$a: e$a(android.content.Context)
org.simpleframework.xml.core.ElementListUnionParameter: ElementListUnionParameter(java.lang.reflect.Constructor,org.simpleframework.xml.ElementListUnion,org.simpleframework.xml.ElementList,org.simpleframework.xml.stream.Format,int)
com.caij.puremusic.drive.model.PlexArtistsResponse$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.utils.tree.DefaultTreeModel: java.lang.Object getRoot()
com.caij.puremusic.drive.model.SubsonicAlbum: java.lang.String getArtistId()
org.jaudiotagger.tag.datatype.PartOfSet$PartOfSetValue: void padNumber(java.lang.StringBuffer,java.lang.Integer,org.jaudiotagger.tag.options.PadNumberOption)
com.caij.puremusic.drive.model.PlexArtistsResponse: com.caij.puremusic.drive.model.PlexArtistsResponse copy$default(com.caij.puremusic.drive.model.PlexArtistsResponse,com.caij.puremusic.drive.model.AMediaContainer,int,java.lang.Object)
com.caij.puremusic.drive.model.Media: java.lang.String component5()
org.simpleframework.xml.core.Context: boolean isPrimitive(org.simpleframework.xml.strategy.Type)
com.google.android.material.navigation.NavigationBarView: void setItemRippleColor(android.content.res.ColorStateList)
androidx.core.graphics.BlendModeCompat: BlendModeCompat(java.lang.String,int)
com.umeng.analytics.process.DBFileTraversalUtil$1: DBFileTraversalUtil$1(java.io.File,com.umeng.commonsdk.utils.FileLockCallback,com.umeng.analytics.process.DBFileTraversalUtil$a)
org.simpleframework.xml.core.Factory: boolean setOverride(org.simpleframework.xml.strategy.Type,java.lang.Object,org.simpleframework.xml.stream.OutputNode)
org.jaudiotagger.audio.asf.data.StreamChunk: void setStreamNumber(int)
org.jaudiotagger.tag.FieldDataInvalidException: FieldDataInvalidException()
com.tencent.bugly.proguard.au: void a(java.lang.Thread,int,java.lang.String,java.lang.String,java.lang.String,java.util.Map)
org.simpleframework.xml.core.MapFactory: org.simpleframework.xml.core.Instance getInstance(org.simpleframework.xml.stream.InputNode)
org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)
com.caij.puremusic.helper.BackupContent: BackupContent(java.lang.String,int)
com.tencent.mm.opensdk.modelmsg.WXDynamicVideoMiniProgramObject: void unserialize(android.os.Bundle)
com.umeng.analytics.pro.o: void j()
org.jaudiotagger.tag.id3.AbstractID3v1Tag: void delete(java.io.RandomAccessFile)
org.jaudiotagger.audio.aiff.AiffAudioHeader: void setCopyright(java.lang.String)
com.tencent.bugly.crashreport.common.info.PlugInBean: java.lang.String toString()
org.jcodec.containers.mp4.boxes.TrunBox: int access$002(org.jcodec.containers.mp4.boxes.TrunBox,int)
org.simpleframework.xml.util.LimitedCache: LimitedCache(int)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
com.caij.puremusic.preferences.LibraryPreference: LibraryPreference(android.content.Context,android.util.AttributeSet)
com.umeng.vt.diff.Event: void openDebug(java.lang.String)
com.thegrizzlylabs.sardineandroid.model.Omit: Omit()
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: void enableCatchAnrTrace()
com.caij.puremusic.drive.model.Multistatus$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query songsOrderDateAdd(kotlin.jvm.functions.Function18)
org.jaudiotagger.tag.id3.ID3v1Tag: void setField(org.jaudiotagger.tag.TagField)
com.umeng.analytics.b: org.json.JSONObject d()
org.jaudiotagger.tag.asf.AsfTag: void copyFrom(org.jaudiotagger.tag.Tag)
org.jaudiotagger.tag.asf.AsfTag: void setCopyright(java.lang.String)
com.caij.puremusic.db.model.ServerAudioFormatQueries: void clear()
com.caij.puremusic.db.model.SongQueries$SearchSongsByTitleQuery: java.lang.String toString()
androidx.fragment.app.Fragment: void setInitialSavedState(androidx.fragment.app.Fragment$SavedState)
org.jaudiotagger.tag.asf.AsfTag: void deleteField(org.jaudiotagger.tag.FieldKey)
com.umeng.commonsdk.statistics.proto.d: void a(boolean)
com.umeng.analytics.pro.bo: void a(double)
org.jaudiotagger.tag.TagOptionSingleton: void addKeyword(java.lang.Class,java.lang.String)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyETT: FieldFrameBodyETT(org.jaudiotagger.tag.lyrics3.FieldFrameBodyETT)
androidx.appcompat.resources.Compatibility$Api21Impl: int getChangingConfigurations(android.content.res.TypedArray)
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getAppVersionName(android.content.Context)
com.umeng.analytics.MobclickAgent$EScenarioType: com.umeng.analytics.MobclickAgent$EScenarioType valueOf(java.lang.String)
com.caij.puremusic.db.model.AlbumQueries$AlbumQuery: void addListener(app.cash.sqldelight.Query$Listener)
com.google.android.material.bottomsheet.BottomSheetBehavior: void startSettling(android.view.View,int,boolean)
com.yalantis.ucrop.view.OverlayView: void setCropFrameColor(int)
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.caij.puremusic.db.model.SongQueries$insertOrReplace$2: java.lang.Object invoke(java.lang.Object)
com.umeng.analytics.b: void a(android.content.Context)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
com.caij.puremusic.db.model.ArtistQueries$ArtistByIdQuery: ArtistQueries$ArtistByIdQuery(com.caij.puremusic.db.model.ArtistQueries,long,kotlin.jvm.functions.Function1)
com.caij.puremusic.db.model.SearchAlbumResultQueries$insert$2: void invoke(kotlin.jvm.functions.Function1)
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse: JellyfinPlaylistsResponse(int,java.util.List,int,int,kotlinx.serialization.internal.SerializationConstructorMarker)
org.simpleframework.xml.core.TreeModel: org.simpleframework.xml.core.Model register(java.lang.String,java.lang.String,int)
com.umeng.commonsdk.UMConfigure: boolean isDebugLog()
org.simpleframework.xml.core.FieldScanner$FieldKey: FieldScanner$FieldKey(java.lang.reflect.Field)
androidx.fragment.app.Fragment: void noteStateNotSaved()
com.umeng.common.b: void a(java.lang.String)
com.tencent.mm.opensdk.modelmsg.WXGameLiveObject: void unserialize(android.os.Bundle)
com.google.android.material.appbar.CollapsingToolbarLayout: android.animation.TimeInterpolator getTitlePositionInterpolator()
com.umeng.commonsdk.statistics.proto.d: com.umeng.commonsdk.statistics.proto.d a(java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyCRM: FrameBodyCRM(java.nio.ByteBuffer,int)
org.simpleframework.xml.core.Composite$Injector: java.lang.Object read(org.simpleframework.xml.stream.InputNode)
com.caij.puremusic.drive.model.PlayListsResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyPairs: void addPair(java.lang.String)
com.caij.puremusic.drive.model.OneDriveItem: com.caij.puremusic.drive.model.OneDriveFile component8()
org.jaudiotagger.tag.id3.framebody.FrameBodyUSLT: void addLyric(java.lang.String)
com.caij.puremusic.db.model.HistoryEntity: boolean equals(java.lang.Object)
org.jaudiotagger.audio.AudioFile: org.jaudiotagger.tag.Tag createDefaultTag()
com.umeng.analytics.vshelper.PageNameMonitor: PageNameMonitor()
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: void a(java.io.File)
androidx.core.view.AccessibilityDelegateCompat: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.widget.SwitchCompat: void setTextOff(java.lang.CharSequence)
com.umeng.commonsdk.statistics.proto.b: int h()
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: void addField(java.lang.String,java.lang.String)
org.simpleframework.xml.transform.URLTransform: java.lang.String write(java.lang.Object)
org.jaudiotagger.tag.id3.ID3Frames: boolean isBinary(java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
org.jaudiotagger.tag.datatype.AbstractDataTypeList: void setValue(java.util.List)
org.jcodec.containers.mp4.boxes.MetaBox: org.jcodec.containers.mp4.boxes.MetaBox createMetaBox()
com.tencent.mm.opensdk.modelbiz.ChooseCardFromWXCardPackage$Resp: int getType()
org.simpleframework.xml.core.ElementArrayParameter: org.simpleframework.xml.core.Expression getExpression()
org.simpleframework.xml.transform.BigDecimalTransform: java.lang.String write(java.lang.Object)
org.jaudiotagger.audio.SupportedFileFormat$10: org.jaudiotagger.tag.Tag createDefaultTag()
com.tencent.bugly.proguard.aa: java.lang.String g(java.lang.String)
com.caij.puremusic.drive.model.PlayListSubsonicResponse$Companion: kotlinx.serialization.KSerializer serializer()
org.jcodec.containers.mp4.boxes.MovieHeaderBox: void parse(java.nio.ByteBuffer)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
org.simpleframework.xml.core.ElementUnionLabel: java.lang.String getOverride()
com.thegrizzlylabs.sardineandroid.DavAcl: java.lang.String getOwner(com.thegrizzlylabs.sardineandroid.model.Response)
com.caij.puremusic.db.model.ServerArtistCoverQueries$deleteById$2: ServerArtistCoverQueries$deleteById$2()
org.jaudiotagger.utils.tree.DefaultTreeModel: void fireTreeStructureChanged(java.lang.Object,java.lang.Object[],int[],java.lang.Object[])
com.caij.puremusic.db.model.SongQueries$songsDateLastDesc$2: com.caij.puremusic.db.model.Song invoke(long,java.lang.String,int,int,long,java.lang.String,java.lang.String,long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,long,long)
org.simpleframework.xml.core.ClassSchema: java.lang.String toString()
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String)
com.caij.puremusic.db.model.PlaylistEntityQueries$PlaylistByNameQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback: BottomSheetBehavior$BottomSheetCallback()
org.simpleframework.xml.Serializer: boolean validate(java.lang.Class,java.io.Reader,boolean)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: void delete(java.lang.String)
org.simpleframework.xml.core.ElementMapUnionLabel: java.lang.Class getType()
com.caij.puremusic.drive.model.SongItem: java.lang.String component19()
org.jaudiotagger.tag.id3.reference.MediaPlayerRating: int convertRatingFromFiveStarScale(int)
org.simpleframework.xml.core.DefaultDetail: java.util.List getMethods()
org.jaudiotagger.audio.mp3.MP3File: void commit()
com.caij.puremusic.fragments.albums.AlbumDetailsFragment$setSaveSortOrder$1$1$songs$4: AlbumDetailsFragment$setSaveSortOrder$1$1$songs$4()
org.simpleframework.xml.core.PrimitiveValue: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.lang.Object)
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean sendSubscribeMessage(android.content.Context,com.tencent.mm.opensdk.modelbase.BaseReq)
com.caij.puremusic.db.model.PlayCountEntity: long component1()
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: DefaultMutableTreeNode(java.lang.Object)
com.caij.puremusic.drive.model.ParentReference$$serializer: ParentReference$$serializer()
org.jaudiotagger.tag.wav.WavTag: void setID3Tag(org.jaudiotagger.tag.id3.AbstractID3v2Tag)
com.umeng.analytics.pro.an: an()
com.alipay.android.phone.mrpc.core.b: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)
com.caij.puremusic.drive.model.Auth2Token$Companion: Auth2Token$Companion()
com.caij.puremusic.drive.model.DavProperties: long getContentLength()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: int getPictureType()
org.simpleframework.xml.ElementListUnion: org.simpleframework.xml.ElementList[] value()
org.simpleframework.xml.ElementMap: boolean required()
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setRawInputType(int)
org.jaudiotagger.tag.id3.valuepair.ImageFormats: boolean binaryDataIsPngFormat(byte[])
com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: void setIconBitmap(android.media.MediaDescription$Builder,android.graphics.Bitmap)
org.simpleframework.xml.core.Parameter: java.lang.Object getKey()
com.umeng.analytics.pro.an: byte[] t()
com.umeng.analytics.pro.bn: byte u()
org.jaudiotagger.tag.aiff.AiffTag: org.jaudiotagger.tag.images.Artwork getFirstArtwork()
androidx.core.view.ViewGroupCompat$Api21Impl: void setTransitionGroup(android.view.ViewGroup,boolean)
com.umeng.analytics.pro.b$a$a: java.lang.String a()
com.caij.puremusic.db.model.DriveFileDownUrlInfo: com.caij.puremusic.db.model.DriveFileDownUrlInfo copy$default(com.caij.puremusic.db.model.DriveFileDownUrlInfo,java.lang.String,long,java.lang.String,long,int,java.lang.Object)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyEAR: FieldFrameBodyEAR()
com.google.android.material.navigation.NavigationBarItemView: void setActiveIndicatorHeight(int)
androidx.customview.widget.ViewDragHelper$Callback: ViewDragHelper$Callback()
com.caij.puremusic.MainModuleKt$roomModule$1$1: MainModuleKt$roomModule$1$1()
org.jcodec.containers.mp4.boxes.TrackHeaderBox: int[] getMatrix()
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
org.simpleframework.xml.core.EmptyExpression: java.lang.String getPrefix()
com.caij.puremusic.db.model.SongEntityQueries$songsFromPlaylist$1: java.lang.Object invoke(java.lang.Object)
com.google.android.material.chip.Chip: java.lang.CharSequence getAccessibilityClassName()
code.name.monkey.appthemehelper.common.prefs.supportv7.ATEPreference: ATEPreference(android.content.Context,android.util.AttributeSet,int,int)
org.simpleframework.xml.core.InstantiatorBuilder: void register(org.simpleframework.xml.core.Label,org.simpleframework.xml.core.LabelMap)
com.caij.puremusic.drive.model.DropboxDriveItem: long getSize()
com.umeng.commonsdk.statistics.proto.e: com.umeng.analytics.pro.bc fieldForId(int)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getObbDirs(android.content.Context)
com.google.android.material.textfield.TextInputLayout: void setErrorTextAppearance(int)
com.caij.puremusic.drive.model.GoogleDriveFile: java.lang.String getModifiedTime()
com.umeng.commonsdk.statistics.common.DeviceConfig: android.app.Activity getGlobleActivity(android.content.Context)
org.jaudiotagger.tag.options.PadNumberOption: org.jaudiotagger.tag.options.PadNumberOption valueOf(java.lang.String)
org.simpleframework.xml.transform.DateFactory: DateFactory(java.lang.Class)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: android.os.Bundle getExtras(android.media.session.PlaybackState$CustomAction)
org.simpleframework.xml.transform.ArrayMatcher: org.simpleframework.xml.transform.Transform matchArray(java.lang.Class)
com.tencent.bugly.BuglyStrategy: com.tencent.bugly.BuglyStrategy setDeviceID(java.lang.String)
com.tencent.bugly.proguard.bf: java.util.List c()
com.umeng.analytics.pro.aw: int a(short,short)
org.simpleframework.xml.core.SignatureBuilder$ParameterList: SignatureBuilder$ParameterList(org.simpleframework.xml.core.SignatureBuilder$ParameterList)
org.jaudiotagger.tag.id3.ID3v1TagField: void setEncoding(java.nio.charset.Charset)
com.tencent.bugly.crashreport.inner.InnerApi: void postCocos2dxCrashAsync(int,java.lang.String,java.lang.String,java.lang.String)
com.caij.puremusic.views.HeightFitSquareLayout: void setForceSquare(boolean)
com.umeng.analytics.pro.l: void a(com.umeng.analytics.pro.l,android.app.Activity)
com.caij.puremusic.drive.model.SongItem: java.lang.String component3()
com.caij.puremusic.model.UpdateInfo: int describeContents()
com.google.android.material.datepicker.MaterialDatePicker: MaterialDatePicker()
com.tencent.mm.opensdk.modelmsg.LaunchFromWX: LaunchFromWX()
com.caij.puremusic.db.model.SongQueries$SongsByNameArtistQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
com.caij.puremusic.drive.model.FMediaContainer$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.jaudiotagger.audio.asf.io.CountingInputStream: long skip(long)
org.jaudiotagger.audio.wav.WavChunkType: WavChunkType(java.lang.String,int,java.lang.String,java.lang.String)
com.google.android.material.chip.Chip: java.lang.CharSequence getCloseIconContentDescription()
com.umeng.analytics.pro.al: void b(java.lang.String,java.lang.Object[])
org.jaudiotagger.audio.aiff.AiffAudioHeader: void setAuthor(java.lang.String)
com.caij.puremusic.model.UpdateInfo: UpdateInfo(android.os.Parcel)
com.umeng.analytics.pro.an: void v()
com.yalantis.ucrop.view.OverlayView: com.yalantis.ucrop.callback.OverlayViewChangeListener getOverlayViewChangeListener()
org.simpleframework.xml.core.Expression: boolean isAttribute()
com.caij.puremusic.model.smartplaylist.PlaylistIdGenerator: long invoke(java.lang.String,int)
org.jaudiotagger.tag.asf.AsfTagTextField: void setEncoding(java.nio.charset.Charset)
com.thegrizzlylabs.sardineandroid.model.Prop: java.lang.String getCreationdate()
com.umeng.analytics.MobclickAgent: void onEventValue(android.content.Context,java.lang.String,java.util.Map,int)
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgramEnvironment$Resp: boolean checkArgs()
org.simpleframework.xml.core.ClassScanner: java.util.List getSignatures()
com.tencent.bugly.crashreport.crash.anr.TraceFileHelper: java.lang.String b(java.io.BufferedReader)
androidx.mediarouter.app.MediaRouteButton: void setAlwaysVisible(boolean)
com.umeng.common.AnalyticsSdkVersion: AnalyticsSdkVersion()
org.simpleframework.xml.core.ParameterMap: java.util.List getAll()
androidx.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
org.simpleframework.xml.core.CacheLabel: boolean isAttribute()
com.tencent.bugly.BuglyStrategy: boolean isEnableNativeCrashMonitor()
com.umeng.commonsdk.UMConfigureImpl: boolean c()
com.caij.puremusic.drive.model.PlaylistMetadata$Companion: PlaylistMetadata$Companion()
org.simpleframework.xml.core.SignatureBuilder$ParameterTable: int width()
com.caij.puremusic.drive.model.OneDriveFile$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.thegrizzlylabs.sardineandroid.model.Prop: com.thegrizzlylabs.sardineandroid.model.QuotaAvailableBytes getQuotaAvailableBytes()
com.google.android.material.search.SearchView: void setUpStatusBarSpacer(int)
com.thegrizzlylabs.sardineandroid.DavResource: java.lang.Long getContentLength()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
com.caij.puremusic.drive.model.GoogleDriveFile: com.caij.puremusic.drive.model.GoogleDriveFile copy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)
org.jaudiotagger.audio.SupportedFileFormat$7: org.jaudiotagger.tag.Tag createDefaultTag()
org.jaudiotagger.audio.asf.io.EncryptionChunkReader: org.jaudiotagger.audio.asf.data.GUID[] getApplyingIds()
com.caij.puremusic.model.Playlist: com.caij.puremusic.model.Playlist access$getEmpty$cp()
com.caij.puremusic.model.UpdateInfo$ForcedUpgradeInfo: UpdateInfo$ForcedUpgradeInfo(android.os.Parcel)
com.caij.puremusic.drive.model.ADriveFileResponse: java.util.List getItems()
org.jaudiotagger.tag.id3.framebody.FrameBodyTCOP: FrameBodyTCOP(byte,java.lang.String)
org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId: java.lang.String b()
com.umeng.analytics.pro.cg: void b()
androidx.appcompat.widget.SwitchCompat: void setTextOn(java.lang.CharSequence)
org.simpleframework.xml.core.InstantiatorBuilder: org.simpleframework.xml.core.Parameter create(org.simpleframework.xml.core.Parameter)
org.jaudiotagger.tag.id3.AbstractID3v2Frame$EncodingFlags: void createStructure()
com.google.android.material.navigation.NavigationBarItemView: android.graphics.drawable.Drawable getActiveIndicatorDrawable()
com.umeng.analytics.pro.bt: bt()
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: void b(com.umeng.commonsdk.statistics.proto.d)
com.tencent.bugly.proguard.k: java.util.List a(java.util.List,int,boolean)
com.tencent.mm.opensdk.modelmsg.WXMediaMessage$Builder: java.lang.String pathOldToNew(java.lang.String)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior()
com.umeng.analytics.process.UMProcessDBHelper: int getDataSource()
com.caij.puremusic.drive.model.AMetadata$Companion: kotlinx.serialization.KSerializer serializer()
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State from(int)
org.jaudiotagger.audio.dsf.FmtChunk: org.jaudiotagger.audio.generic.GenericAudioHeader readChunkData(org.jaudiotagger.audio.dsf.DsdChunk,java.nio.channels.FileChannel)
org.jaudiotagger.audio.asf.data.GUID: void setGUID(int[])
androidx.appcompat.widget.SwitchCompat: void setThumbTintMode(android.graphics.PorterDuff$Mode)
org.simpleframework.xml.stream.OutputAttribute: java.lang.String getValue()
org.simpleframework.xml.core.PathParser: void skip()
org.jaudiotagger.tag.id3.ID3v24Frame$StatusFlags: void createStructure()
com.caij.puremusic.drive.model.BaiduDriveItem: long component6()
com.umeng.analytics.pro.ao: void a(java.lang.String,java.lang.String,java.lang.String[])
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean sendFinderShareVideo(android.content.Context,com.tencent.mm.opensdk.modelbase.BaseReq)
org.jcodec.containers.mp4.boxes.SampleSizesBox: int getCount()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSize()
org.jaudiotagger.tag.id3.ID3v23Frame: ID3v23Frame()
androidx.core.view.ViewCompat$Api19Impl: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
org.jcodec.containers.mp4.boxes.TrackHeaderBox: boolean isOrientation90()
org.jaudiotagger.tag.asf.AsfTag: void setRating(java.lang.String)
StatusBarLyric.API.StatusBarLyric: java.lang.String drawableToBase64(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api23Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int,android.widget.TextView,android.text.TextPaint,androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl)
org.jaudiotagger.tag.mp4.field.Mp4TagBinaryField: byte[] getData()
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean openWXApp()
org.jaudiotagger.audio.asf.data.AsfHeader: AsfHeader(long,java.math.BigInteger,long)
com.umeng.commonsdk.framework.UMEnvelopeBuild: void setTransmissionSendFlag(boolean)
org.jcodec.containers.mp4.boxes.FormatBox: void doWrite(java.nio.ByteBuffer)
com.yalantis.ucrop.view.CropImageView: float getTargetAspectRatio()
org.simpleframework.xml.core.MethodType: org.simpleframework.xml.core.MethodType[] values()
org.jaudiotagger.audio.aiff.AiffFileHeader: long readHeader(java.nio.channels.FileChannel,org.jaudiotagger.audio.aiff.AiffAudioHeader,java.lang.String)
org.jaudiotagger.tag.TagOptionSingleton: boolean isRemoveTrailingTerminatorOnWrite()
com.caij.puremusic.drive.model.Metadata: java.lang.String component3()
com.google.android.material.chip.Chip: void setRippleColorResource(int)
org.jaudiotagger.audio.asf.data.AsfExtendedHeader: org.jaudiotagger.audio.asf.data.ContentDescription getContentDescription()
com.umeng.commonsdk.internal.utils.j: void a(android.content.Context,java.lang.String)
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdTypeCountQuery: void addListener(app.cash.sqldelight.Query$Listener)
androidx.window.layout.SidecarAdapter$translate$checkedFeature$2: SidecarAdapter$translate$checkedFeature$2()
com.google.android.material.slider.BaseSlider: void setEnabled(boolean)
com.google.android.material.button.MaterialButton: void setBackgroundTintList(android.content.res.ColorStateList)
com.caij.puremusic.db.model.SongEntityQueries$IsSongExistsInPlaylistQuery: void addListener(app.cash.sqldelight.Query$Listener)
com.caij.puremusic.network.model.TokenData: com.caij.puremusic.network.model.TokenData copy(java.lang.String,java.lang.String,java.lang.Long)
com.caij.puremusic.drive.model.Collection$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.Collection)
org.simpleframework.xml.core.Qualifier: void scan(org.simpleframework.xml.core.Contact)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
com.umeng.analytics.AnalyticsConfig: void a(java.lang.String)
org.jaudiotagger.tag.lyrics3.Lyrics3v1Iterator: java.lang.String next()
org.simpleframework.xml.stream.StreamReader: org.simpleframework.xml.stream.StreamReader$Start build(org.simpleframework.xml.stream.StreamReader$Start)
com.umeng.analytics.pro.q: long a(org.json.JSONArray)
org.simpleframework.xml.core.Variable: java.lang.String toString()
org.jaudiotagger.tag.id3.framebody.FrameBodyPOSS: void setupObjectList()
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean sendLaunchWXMiniprogramWithToken(android.content.Context,com.tencent.mm.opensdk.modelbase.BaseReq)
com.caij.puremusic.lyrics.LrcView: java.lang.Object getFlag()
com.bumptech.glide.MemoryCategory: com.bumptech.glide.MemoryCategory valueOf(java.lang.String)
org.jaudiotagger.tag.id3.ID3v22Tag: void readFrames(java.nio.ByteBuffer,int)
com.umeng.analytics.pro.ay: ay(com.umeng.analytics.pro.bw)
org.jaudiotagger.tag.id3.AbstractTagFrameBody: boolean equals(java.lang.Object)
com.tencent.bugly.proguard.aq: com.tencent.bugly.proguard.aq a()
com.umeng.commonsdk.statistics.common.d$a$1: boolean accept(java.io.File,java.lang.String)
org.simpleframework.xml.core.CompositeInlineList: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.lang.Object)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void addField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
org.simpleframework.xml.core.TextListLabel: TextListLabel(org.simpleframework.xml.core.Label,org.simpleframework.xml.Text)
org.jaudiotagger.tag.id3.ID3Tags: long findNumber(java.lang.String)
com.caij.puremusic.db.model.SongQueries$SongsByAlumQuery: SongQueries$SongsByAlumQuery(com.caij.puremusic.db.model.SongQueries,java.lang.String,kotlin.jvm.functions.Function1)
nl.adaptivity.xmlutil.serialization.InputKind: InputKind(java.lang.String,int)
org.simpleframework.xml.core.Group: boolean isInline()
com.umeng.commonsdk.statistics.proto.d$b: d$b(com.umeng.commonsdk.statistics.proto.d$1)
com.google.common.reflect.Types$JavaVersion$3: java.lang.reflect.Type usedInGenericType(java.lang.reflect.Type)
com.umeng.analytics.process.c: void b(java.lang.String)
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
com.google.common.io.Files$FilePredicate: com.google.common.io.Files$FilePredicate[] values()
org.jaudiotagger.audio.dsf.ID3Chunk: java.nio.ByteBuffer getDataBuffer()
org.jaudiotagger.audio.mp3.MP3AudioHeader: boolean isOriginal()
com.tencent.mm.opensdk.diffdev.a.a: void removeListener(com.tencent.mm.opensdk.diffdev.OAuthListener)
com.tencent.bugly.proguard.s: java.lang.String a(java.lang.String,java.lang.String)
com.umeng.analytics.pro.aw: int a(byte,byte)
org.jaudiotagger.tag.images.AndroidArtwork: void setImageUrl(java.lang.String)
org.simpleframework.xml.core.Detail: org.simpleframework.xml.Order getOrder()
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
org.simpleframework.xml.stream.NodeWriter: NodeWriter(java.io.Writer,org.simpleframework.xml.stream.Format,boolean)
com.umeng.analytics.pro.an$e: com.umeng.analytics.pro.an$e[] values()
org.repackage.com.meizu.flyme.openidsdk.b: java.lang.String b(android.content.pm.PackageManager,java.lang.String)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: void removeFromParent()
org.jaudiotagger.tag.id3.ID3v23Tag: java.util.List getFields(org.jaudiotagger.tag.FieldKey)
androidx.appcompat.widget.SwitchCompat: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportAtLaunch: boolean shouldSendMessage(boolean)
com.umeng.analytics.pro.an: boolean w()
org.jaudiotagger.audio.generic.Utils: byte[] getSizeBEInt32(int)
com.thegrizzlylabs.sardineandroid.model.Resourcetype: com.thegrizzlylabs.sardineandroid.model.Collection getCollection()
org.jaudiotagger.tag.lyrics3.Lyrics3v1: boolean seek(java.nio.ByteBuffer)
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context)
org.jaudiotagger.audio.wav.chunk.WavInfoIdentifier: WavInfoIdentifier(java.lang.String,int,java.lang.String,org.jaudiotagger.tag.FieldKey,int)
com.caij.puremusic.db.model.FolderQueries$SelectByIdQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
com.caij.puremusic.drive.model.AlbumArtist: AlbumArtist(java.lang.String,java.lang.String)
org.jaudiotagger.tag.TagField: byte[] getRawContent()
org.simpleframework.xml.core.Instantiator: org.simpleframework.xml.core.Parameter getParameter(java.lang.String)
com.caij.puremusic.model.Data: java.lang.String component13()
com.caij.puremusic.db.model.AlbumQueries$AlbumQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.caij.puremusic.drive.model.AMediaContainer$Companion: AMediaContainer$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.jcodec.containers.mp4.boxes.HandlerBox: void doWrite(java.nio.ByteBuffer)
com.google.android.material.navigation.NavigationBarItemView: android.view.View getIconOrContainer()
org.jaudiotagger.tag.id3.framebody.FrameBodyTMCL: FrameBodyTMCL(byte,java.util.List)
com.google.android.material.appbar.AppBarLayout: float getTargetElevation()
com.umeng.commonsdk.statistics.proto.c: int b()
org.jaudiotagger.tag.id3.framebody.FrameBodyETCO: void addTimingCode(long,int[])
com.umeng.analytics.pro.y: java.lang.String c(android.content.Context)
com.google.android.material.slider.Slider: void setCustomThumbDrawable(android.graphics.drawable.Drawable)
com.caij.puremusic.fragments.settings.NowPlayingSettingsFragment: NowPlayingSettingsFragment()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype forNumber(int)
org.simpleframework.xml.ElementMap: boolean attribute()
com.umeng.commonsdk.framework.a: void a(boolean)
com.tencent.bugly.proguard.ap: void a(android.os.Parcel,java.util.Map)
androidx.gridlayout.widget.GridLayout: void setColumnOrderPreserved(boolean)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyUrlLink: AbstractFrameBodyUrlLink(java.lang.String)
org.jaudiotagger.tag.datatype.NumberVariableLength: java.lang.String toString()
org.jaudiotagger.tag.InvalidTagException: InvalidTagException()
org.simpleframework.xml.core.Section: java.lang.String getName()
org.jaudiotagger.audio.generic.AbstractTag: org.jaudiotagger.tag.images.Artwork getFirstArtwork()
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.google.android.material.card.MaterialCardView: void setBackground(android.graphics.drawable.Drawable)
org.jaudiotagger.tag.id3.framebody.FrameBodyAENC: void getOwner(java.lang.String)
org.jaudiotagger.tag.wav.WavTag: long getStartLocationInFileOfId3Chunk()
com.google.android.material.imageview.ShapeableImageView: int getContentPaddingLeft()
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: int readSamplingRate()
com.google.android.material.appbar.AppBarLayout: void setOrientation(int)
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
com.caij.puremusic.drive.model.ADriveFileResponse: com.caij.puremusic.drive.model.ADriveFileResponse copy$default(com.caij.puremusic.drive.model.ADriveFileResponse,java.lang.String,java.util.List,int,java.lang.Object)
com.caij.puremusic.drive.model.Auth2Token: Auth2Token(java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,long)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar)
org.simpleframework.xml.core.Variable: boolean isInline()
com.umeng.analytics.process.DBFileTraversalUtil: com.umeng.commonsdk.utils.FileLockUtil a()
org.jaudiotagger.tag.TagOptionSingleton: boolean isAndroid()
com.caij.puremusic.db.model.ArtistQueries$searchArtistByName$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.tencent.mm.opensdk.modelbiz.WXChannelShareVideo$Resp: int getType()
com.umeng.analytics.MobclickAgent: void setSecret(android.content.Context,java.lang.String)
org.jaudiotagger.tag.datatype.TempoCode: byte[] writeByteArray()
com.tencent.mm.opensdk.modelmsg.SendAuth$Resp: SendAuth$Resp()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.r0adkll.slidr.model.SlidrPosition: com.r0adkll.slidr.model.SlidrPosition valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.caij.puremusic.model.lyrics.Lyrics: com.caij.puremusic.model.lyrics.Lyrics setData(com.caij.puremusic.db.model.Song,java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyTIPL: FrameBodyTIPL(org.jaudiotagger.tag.id3.framebody.FrameBodyIPLS)
com.alipay.apmobilesecuritysdk.e.h: void c(android.content.Context,java.lang.String)
org.jaudiotagger.audio.asf.data.AsfExtendedHeader: org.jaudiotagger.audio.asf.data.MetadataContainer getMetadataObject()
com.tencent.bugly.proguard.bd: bd(android.content.Context,com.tencent.bugly.proguard.aa,com.tencent.bugly.proguard.as,com.tencent.bugly.proguard.ac)
com.caij.puremusic.network.DeezerService: retrofit2.Call searchArtist(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org.simpleframework.xml.transform.BooleanTransform: java.lang.Object read(java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyTOFN: FrameBodyTOFN(java.nio.ByteBuffer,int)
com.google.android.material.chip.Chip: void setTextEndPadding(float)
org.simpleframework.xml.core.ElementMapParameter$Contact: java.lang.String getName()
org.json.alipay.a: a(java.lang.String)
com.alipay.android.phone.mrpc.core.q: void a(org.apache.http.HttpEntity,java.io.OutputStream)
org.simpleframework.xml.convert.ScannerBuilder: ScannerBuilder()
org.simpleframework.xml.core.TextParameter: boolean isRequired()
org.simpleframework.xml.core.Revision: boolean isEqual()
com.google.android.material.bottomsheet.BottomSheetBehavior: void dispatchOnSlide(int)
com.caij.puremusic.model.lyrics.Lyrics: boolean isSynchronized()
com.umeng.commonsdk.statistics.proto.e: void write(com.umeng.analytics.pro.bu)
com.caij.puremusic.db.model.SongQueries$SongsByArtistIdWithLikeQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.simpleframework.xml.core.AnnotationFactory: java.lang.ClassLoader getClassLoader()
com.umeng.common.b: java.lang.String a(android.content.Context,java.lang.String,java.lang.String)
com.umeng.analytics.pro.ch: ch(byte[],int,int)
com.tencent.mm.opensdk.modelbiz.OpenRankList$Req: int getType()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport$SyncLevel: SyncCollectionReport$SyncLevel(java.lang.String,int,java.lang.String)
org.simpleframework.xml.transform.LocaleTransform: java.lang.String write(java.util.Locale)
com.thegrizzlylabs.sardineandroid.model.Propertybehavior: com.thegrizzlylabs.sardineandroid.model.Omit getOmit()
com.tencent.bugly.proguard.w: void a(java.util.List)
com.caij.puremusic.network.model.LastFmTrack$Track$Artist: void setName(java.lang.String)
com.umeng.analytics.pro.an$b: an$b()
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: void setDumpFilePath(java.lang.String)
org.jcodec.containers.mp4.boxes.ChannelBox$ChannelDescription: ChannelBox$ChannelDescription(int,int,float[])
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)
com.alipay.apmobilesecuritysdk.b.a: com.alipay.apmobilesecuritysdk.b.a a()
com.caij.puremusic.lyrics.SimpleLrcView: void setLabel(java.lang.String)
com.google.common.base.Predicates$ObjectPredicate$1: java.lang.String toString()
com.caij.puremusic.drive.model.ArtistItem: boolean equals(java.lang.Object)
com.umeng.commonsdk.statistics.proto.e: long e()
org.simpleframework.xml.core.PathParser$PathSection: java.lang.String getFragment()
androidx.fragment.app.DialogFragment: void onDismiss(android.content.DialogInterface)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeColors(int[])
com.thegrizzlylabs.sardineandroid.model.Prop: java.lang.String getGetcontentlanguage()
com.tencent.bugly.proguard.e: void a(byte[])
com.alipay.android.phone.mrpc.core.a.f: void a(java.lang.Object)
org.simpleframework.xml.core.TreeModel: boolean isAttribute(java.lang.String)
com.caij.puremusic.db.model.HistoryEntityQueries$GetByIdQuery: long getId()
com.thegrizzlylabs.sardineandroid.model.Property: void setProperty(org.w3c.dom.Element)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: void put(java.lang.String,okhttp3.RequestBody)
org.jaudiotagger.audio.aiff.AiffAudioHeader: java.util.List getApplicationIdentifiers()
org.simpleframework.xml.core.Function: Function(java.lang.reflect.Method)
org.jaudiotagger.tag.id3.ID3v24Tag: int getSize()
com.caij.puremusic.fragments.player.adaptive.AdaptiveFragment: AdaptiveFragment()
org.slf4j.helpers.NOPLogger: NOPLogger()
com.google.android.material.card.MaterialCardView: int getContentPaddingLeft()
org.jaudiotagger.tag.TagOptionSingleton: void setId3v1SaveComment(boolean)
org.repackage.com.vivo.identifier.IdentifierManager: java.lang.String b(android.content.Context)
org.jaudiotagger.tag.id3.ID3v24Tag: org.jaudiotagger.tag.id3.ID3v24Frame createFrame(java.lang.String)
org.simpleframework.xml.stream.OutputNode: java.lang.String getPrefix()
com.umeng.analytics.pro.an: com.umeng.analytics.pro.an a(int)
org.simpleframework.xml.Serializer: boolean validate(java.lang.Class,java.io.Reader)
org.jcodec.containers.mp4.boxes.EsdsBox$DescriptorParser: EsdsBox$DescriptorParser()
com.umeng.analytics.process.UMProcessDBDatasSender: android.content.Context access$000(com.umeng.analytics.process.UMProcessDBDatasSender)
com.umeng.commonsdk.utils.FileLockUtil: void doFileOperateion(java.io.File,com.umeng.commonsdk.utils.FileLockCallback)
androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
org.jcodec.containers.mp4.boxes.SampleDescriptionBox: SampleDescriptionBox(org.jcodec.containers.mp4.boxes.Header)
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: FrameBodyTDRC(java.nio.ByteBuffer,int)
com.caij.puremusic.drive.model.PlaylistResponse$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.umeng.commonsdk.statistics.proto.e$e: com.umeng.commonsdk.statistics.proto.e$e a(int)
com.caij.puremusic.drive.model.ArtistItem$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.ArtistItem)
org.jaudiotagger.tag.id3.framebody.FrameBodyMLLT: FrameBodyMLLT()
org.jcodec.containers.mp4.boxes.MetaBox: java.util.Map getRdnsMeta()
org.jaudiotagger.tag.id3.framebody.FrameBodyUnsupported: boolean equals(java.lang.Object)
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query songsByArtistIdWithLike(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org.jaudiotagger.audio.asf.data.MetadataContainer: void addDescriptor(org.jaudiotagger.audio.asf.data.MetadataDescriptor)
org.jcodec.containers.mp4.boxes.EsdsBox$NodeDescriptor: void doWrite(java.nio.ByteBuffer)
org.jaudiotagger.audio.asf.data.StreamChunk: long getTypeSpecificDataSize()
com.tencent.mm.opensdk.modelbiz.WXPayInsurance$Req: void toBundle(android.os.Bundle)
com.caij.puremusic.drive.model.PlexPlaylistsResponse: void write$Self(com.caij.puremusic.drive.model.PlexPlaylistsResponse,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.umeng.commonsdk.debug.UMRTLog: java.lang.String warpperMsg(java.lang.String,boolean)
com.alipay.android.phone.mrpc.core.g: java.lang.String a()
org.simpleframework.xml.core.ExtractorFactory$ElementListExtractor: org.simpleframework.xml.core.Label getLabel(org.simpleframework.xml.ElementList)
com.caij.puremusic.db.model.HistoryEntityQueries$getById$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.app.Person$Api28Impl: android.app.Person toAndroidPerson(androidx.core.app.Person)
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: void setLanguage(java.lang.String)
androidx.fragment.app.FragmentManagerState: FragmentManagerState()
androidx.appcompat.app.AppCompatDialogFragment: AppCompatDialogFragment(int)
org.jaudiotagger.audio.aiff.chunk.AiffChunkReader: java.nio.ByteBuffer readChunkDataIntoBuffer(java.nio.channels.FileChannel,org.jaudiotagger.audio.iff.ChunkHeader)
com.umeng.commonsdk.statistics.proto.c$e: com.umeng.commonsdk.statistics.proto.c$e valueOf(java.lang.String)
com.umeng.analytics.pro.an$c: an$c(com.umeng.analytics.pro.an$1)
com.caij.puremusic.drive.model.PlexLoginResponse: com.caij.puremusic.drive.model.PlexUser getUser()
com.google.common.collect.AbstractMultimap: AbstractMultimap()
com.caij.puremusic.drive.model.MediaStream$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.caij.puremusic.db.model.ServerAudioFormatQueries$deleteById$1: java.lang.Object invoke(java.lang.Object)
com.tencent.mm.opensdk.modelmsg.WXMusicObject: void serialize(android.os.Bundle)
org.simpleframework.xml.core.MethodScanner: void build(org.simpleframework.xml.core.MethodPart,java.lang.String)
kotlin.sequences.SequencesKt___SequencesKt$flatMap$1: SequencesKt___SequencesKt$flatMap$1()
androidx.fragment.app.Fragment: int getTargetRequestCode()
com.tencent.bugly.proguard.aa: java.util.Map t()
com.caij.puremusic.util.ArtistUtil$sortedSongs$4: ArtistUtil$sortedSongs$4()
org.simpleframework.xml.core.Factory: Factory(org.simpleframework.xml.core.Context,org.simpleframework.xml.strategy.Type,java.lang.Class)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)
com.google.common.collect.MapMakerInternalMap$Strength: MapMakerInternalMap$Strength(java.lang.String,int)
com.umeng.commonsdk.statistics.proto.c$c: void a(com.umeng.analytics.pro.bu,com.umeng.commonsdk.statistics.proto.c)
org.simpleframework.xml.stream.OutputAttribute: OutputAttribute(org.simpleframework.xml.stream.OutputNode,java.lang.String,java.lang.String)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: org.jaudiotagger.utils.tree.TreeNode getChildBefore(org.jaudiotagger.utils.tree.TreeNode)
org.jaudiotagger.tag.mp4.Mp4FieldKey: org.jaudiotagger.tag.mp4.Mp4FieldKey valueOf(java.lang.String)
org.jaudiotagger.tag.id3.ID3v24Tag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
org.jaudiotagger.test.MergeID3AndMP3Files$DirFilter: MergeID3AndMP3Files$DirFilter(org.jaudiotagger.test.MergeID3AndMP3Files)
com.umeng.analytics.pro.y: long h(android.content.Context)
com.umeng.analytics.pro.i: java.lang.String b(org.json.JSONObject,boolean)
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdCountQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
org.jaudiotagger.tag.id3.framebody.FrameBodyMVIN: FrameBodyMVIN(byte,java.lang.Integer,java.lang.Integer)
com.google.android.material.navigation.NavigationBarView: void setItemIconSize(int)
org.jcodec.containers.mp4.boxes.AliasBox: boolean isSelfRef()
org.simpleframework.xml.core.Detail: java.lang.annotation.Annotation[] getAnnotations()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
com.caij.puremusic.drive.model.SubsonicSearchResponse: void write$Self(com.caij.puremusic.drive.model.SubsonicSearchResponse,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Object,org.simpleframework.xml.stream.InputNode,org.simpleframework.xml.core.Context)
org.simpleframework.xml.stream.EventToken: java.lang.String getPrefix()
org.jaudiotagger.tag.InvalidDataTypeException: InvalidDataTypeException(java.lang.String)
com.umeng.analytics.pro.u: java.lang.String c(android.content.Context)
org.simpleframework.xml.stream.NodeWriter: org.simpleframework.xml.stream.OutputNode writeRoot()
com.caij.vip.ClientWeixinPayResponse: ClientWeixinPayResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.caij.puremusic.db.model.ServerAudioFormat: java.lang.String component3()
code.name.monkey.appthemehelper.common.prefs.supportv7.ATEListPreference: ATEListPreference(android.content.Context)
com.google.android.material.textfield.TextInputLayout: void setHintTextColor(android.content.res.ColorStateList)
com.umeng.commonsdk.vchannel.Sender: Sender()
android.support.v4.media.MediaDescriptionCompat$Api23Impl: void setMediaUri(android.media.MediaDescription$Builder,android.net.Uri)
org.simpleframework.xml.core.Detail: org.simpleframework.xml.DefaultType getAccess()
org.simpleframework.xml.core.MethodName: java.lang.String getName()
com.caij.puremusic.drive.model.PlayListSubsonicResponse: com.caij.puremusic.drive.model.PlayListSubsonicResponse copy(java.lang.String,java.lang.String,com.caij.puremusic.drive.model.SubPlayList)
org.jaudiotagger.audio.mp4.Mp4FileReader: org.jaudiotagger.tag.Tag getTag(java.io.RandomAccessFile)
org.jaudiotagger.tag.id3.ID3SyncSafeInteger: int bufferToValue(byte[])
com.umeng.commonsdk.statistics.idtracking.a: void a(com.umeng.commonsdk.statistics.proto.c)
org.jaudiotagger.tag.flac.FlacTag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
com.caij.puremusic.activities.tageditor.AlbumTagEditorActivity$bindingInflater$1: AlbumTagEditorActivity$bindingInflater$1()
org.simpleframework.xml.core.Comparer: Comparer()
com.umeng.analytics.pro.ba: ba()
org.jaudiotagger.tag.id3.framebody.FrameBodyAPIC: java.lang.String getIdentifier()
com.caij.puremusic.fragments.folder.FoldersSettingFragment: FoldersSettingFragment()
com.tencent.bugly.crashreport.crash.anr.TraceFileHelper$b: boolean a(long,long,java.lang.String)
org.simpleframework.xml.core.Signature: void set(java.lang.Object,org.simpleframework.xml.core.Parameter)
com.umeng.analytics.pro.i: org.json.JSONObject g()
io.ktor.client.engine.okhttp.OkHttpEngineContainer: OkHttpEngineContainer()
org.simpleframework.xml.core.ElementArrayLabel: org.simpleframework.xml.strategy.Type getDependent()
com.afollestad.materialdialogs.color.view.PreviewFrameView: void setSupportCustomAlpha(boolean)
com.caij.puremusic.drive.model.AlbumItem: boolean component4()
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$GetByIdQuery: DriveFileDownUrlInfoQueries$GetByIdQuery(com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries,java.lang.String,kotlin.jvm.functions.Function1)
com.tencent.bugly.proguard.ae: com.tencent.bugly.proguard.bq a(android.content.Context,int,byte[])
com.caij.puremusic.preferences.LibraryPreference: LibraryPreference(android.content.Context,android.util.AttributeSet,int)
org.jaudiotagger.audio.aiff.AiffAudioHeader: java.util.List getAnnotations()
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean sendPayInSurance(android.content.Context,com.tencent.mm.opensdk.modelbase.BaseReq)
org.jcodec.containers.mp4.boxes.AudioSampleEntry: int calcFrameSize()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.jaudiotagger.tag.id3.framebody.FrameBodyTPOS: java.lang.String getDiscNoAsText()
org.jaudiotagger.tag.wav.WavTag: long getSizeOfID3TagIncludingChunkHeader()
com.caij.puremusic.drive.model.User: User(int,java.lang.String,java.lang.String,java.lang.String,kotlinx.serialization.internal.SerializationConstructorMarker)
com.tencent.mmkv.MMKV: boolean checkProcessMode(long)
com.umeng.analytics.pro.i: void b(java.lang.String)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.lang.String getDuplicateFrameId()
org.simpleframework.xml.core.Instantiator: boolean isDefault()
com.tencent.bugly.proguard.k: java.util.Map a(java.util.Map,java.util.Map,int,boolean)
com.caij.puremusic.drive.model.SongItem: java.lang.String toString()
com.google.android.material.bottomsheet.BottomSheetBehavior: int getSignificantVelocityThreshold()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: org.jaudiotagger.tag.TagField getFirstField(java.lang.String)
com.caij.puremusic.fragments.artists.ArtistsFragment: ArtistsFragment()
org.jcodec.containers.mp4.boxes.MetaValue: int toInt24(byte[])
com.umeng.commonsdk.statistics.idtracking.b: java.lang.String f()
org.simpleframework.xml.core.ClassScanner: org.simpleframework.xml.Root getRoot()
com.caij.puremusic.network.model.LastFmTrack$Track$Artist: java.lang.String getName()
com.umeng.analytics.pro.x: x()
org.json.alipay.c: void a()
org.jcodec.containers.mp4.boxes.MovieFragmentHeaderBox: java.lang.String fourcc()
org.jaudiotagger.tag.TagOptionSingleton: void setId3v2PaddingWillShorten(boolean)
org.jaudiotagger.audio.asf.data.ContainerType: org.jaudiotagger.audio.asf.data.ContainerType[] values()
org.simpleframework.xml.core.Creator: double getScore(org.simpleframework.xml.core.Criteria)
org.simpleframework.xml.transform.TimeZoneTransform: java.util.TimeZone read(java.lang.String)
com.alipay.android.phone.mrpc.core.RpcException: RpcException(java.lang.Integer,java.lang.String)
com.caij.puremusic.db.model.SongEntityQueries$IsSongExistsInPlaylistQuery: long getPlaylistId()
org.jaudiotagger.audio.mp3.XingFrame: void setAudioSize()
org.jaudiotagger.audio.mp3.VbriFrame: void setFrameCount()
com.tencent.bugly.proguard.c: void a(java.lang.String)
com.alipay.android.phone.mrpc.core.b: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)
com.caij.puremusic.drive.model.ImageTags: int hashCode()
org.simpleframework.xml.core.Traverser: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object,java.lang.Class)
com.tencent.mm.opensdk.modelbiz.WXChannelStartLive$Resp: boolean checkArgs()
androidx.fragment.app.FragmentActivity: FragmentActivity()
com.yalantis.ucrop.view.CropImageView: void setMaxResultImageSizeY(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyXSOP: FrameBodyXSOP(org.jaudiotagger.tag.id3.framebody.FrameBodyXSOP)
com.jetradarmobile.snowfall.SnowfallView: SnowfallView(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.logging.AbstractTagDisplayFormatter: void openHeadingElement(java.lang.String,java.lang.String)
com.umeng.analytics.pro.ao: boolean c()
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode valueOf(java.lang.String)
androidx.activity.ComponentDialog: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
com.umeng.analytics.process.UMProcessDBHelper: void processDBToMain()
androidx.fragment.app.Fragment: boolean equals(java.lang.Object)
org.jaudiotagger.audio.asf.data.MetadataDescriptor: MetadataDescriptor(org.jaudiotagger.audio.asf.data.ContainerType,java.lang.String,int)
org.jcodec.containers.mp4.boxes.EsdsBox: int getMaxBitrate()
org.jaudiotagger.tag.id3.framebody.FrameBodyIPLS: FrameBodyIPLS(org.jaudiotagger.tag.id3.framebody.FrameBodyIPLS)
com.umeng.commonsdk.statistics.internal.StatTracer: boolean isFirstRequest()
com.caij.puremusic.network.model.LastFmTrack: LastFmTrack()
com.umeng.analytics.pro.bn: int a(byte[],int,int)
com.umeng.analytics.pro.cg: cg()
org.simpleframework.xml.stream.HyphenBuilder: HyphenBuilder()
nl.adaptivity.xmlutil.core.KtXmlWriter$WriteState: KtXmlWriter$WriteState(java.lang.String,int)
org.jaudiotagger.audio.asf.util.ChunkPositionComparator: ChunkPositionComparator()
org.jcodec.containers.mp4.boxes.TimeToSampleBox$TimeToSampleEntry: int getSampleCount()
com.caij.puremusic.fragments.artists.AlbumArtistDetailsFragment: AlbumArtistDetailsFragment()
com.google.android.material.progressindicator.BaseProgressIndicator: int getTrackCornerRadius()
com.caij.puremusic.drive.model.SearchResult3$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
org.repackage.com.meizu.flyme.openidsdk.b: b()
com.caij.puremusic.drive.model.BaiduDriveItem: int component7()
org.simpleframework.xml.stream.OutputStack: org.simpleframework.xml.stream.OutputNode bottom()
org.jaudiotagger.tag.mp4.field.Mp4TagTextSingleNumberField: org.jaudiotagger.tag.mp4.field.Mp4FieldType getFieldType()
org.jaudiotagger.tag.TagOptionSingleton: void setTimeStampFormat(byte)
org.jaudiotagger.tag.id3.framebody.FrameBodyRVA2: void setupObjectList()
org.jaudiotagger.tag.datatype.PairedTextEncodedStringNullTerminated$ValuePairs: int getNumberOfValues()
org.simpleframework.xml.core.Traverser: org.simpleframework.xml.core.Composite getComposite(java.lang.Class)
com.tencent.bugly.proguard.ay: void a(long,java.lang.String)
com.caij.puremusic.drive.model.AlbumMetadata: void write$Self(com.caij.puremusic.drive.model.AlbumMetadata,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
org.simpleframework.xml.core.Instance: boolean isReference()
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String getAlbumId()
com.umeng.analytics.pro.ar: void c(android.app.Activity)
com.alipay.apmobilesecuritysdk.e.h: void a(android.content.Context,boolean)
org.jaudiotagger.tag.id3.framebody.FrameBodyUSER: FrameBodyUSER(java.nio.ByteBuffer,int)
com.google.android.material.navigation.NavigationBarView: int getSelectedItemId()
org.simpleframework.xml.core.AttributeParameter: java.lang.String getPath()
me.tankery.lib.circularseekbar.CircularSeekBar: void setOnSeekBarChangeListener(me.tankery.lib.circularseekbar.CircularSeekBar$OnCircularSeekBarChangeListener)
com.umeng.commonsdk.UMConfigure: void preInit(android.content.Context,java.lang.String,java.lang.String)
org.jcodec.containers.mp4.boxes.ReverseDnsBox$RdnsNameBox: void doWrite(java.nio.ByteBuffer)
com.umeng.commonsdk.statistics.proto.d$e: short a()
com.google.android.material.textfield.TextInputLayout: void setLengthCounter(com.google.android.material.textfield.TextInputLayout$LengthCounter)
org.jaudiotagger.audio.generic.AbstractTag$1: org.jaudiotagger.tag.TagField next()
org.simpleframework.xml.core.Contact: java.lang.Object get(java.lang.Object)
org.simpleframework.xml.strategy.ArrayValue: void setValue(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setMinEms(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyTRSO: FrameBodyTRSO(byte,java.lang.String)
com.google.android.material.slider.BaseSlider: void setThumbStrokeWidthResource(int)
com.caij.puremusic.drive.model.OneDriveFile: OneDriveFile(java.lang.String)
org.jaudiotagger.tag.datatype.Lyrics3Image: java.lang.String getFilename()
org.simpleframework.xml.stream.OutputNode: void setValue(java.lang.String)
com.caij.puremusic.model.lyrics.SynchronizedLyricsLRC: SynchronizedLyricsLRC()
org.simpleframework.xml.stream.Formatter: void write(char[])
com.caij.puremusic.model.AlbumWithCount: com.caij.puremusic.db.model.Album getAlbum()
com.umeng.commonsdk.statistics.common.a$b: android.os.IBinder a()
com.umeng.commonsdk.internal.utils.a: java.util.List g(android.content.Context)
com.caij.puremusic.db.model.SongQueries$SongsByNameArtistQuery$execute$1: java.lang.Object invoke(java.lang.Object)
androidx.core.view.ViewCompat$Api17Impl: boolean isPaddingRelative(android.view.View)
org.simpleframework.xml.core.PrimitiveScanner$EmptySection: java.lang.String getName()
com.caij.puremusic.appwidgets.AppWidgetCard: AppWidgetCard()
org.json.alipay.c: c(java.io.Reader)
androidx.appcompat.widget.AppCompatEditText: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
org.jaudiotagger.tag.id3.AggregatedFrame: byte[] getRawContent()
org.jaudiotagger.audio.wav.chunk.WavFormatChunk: java.lang.String toString()
org.jaudiotagger.tag.id3.framebody.FrameBodyGEOB: FrameBodyGEOB(org.jaudiotagger.tag.id3.framebody.FrameBodyGEOB)
com.umeng.analytics.MobclickAgent: org.json.JSONObject getPreProperties(android.content.Context)
com.tencent.bugly.proguard.k: boolean[] d(int,boolean)
org.simpleframework.xml.core.SignatureCreator: java.lang.Object getInstance(org.simpleframework.xml.core.Criteria)
org.jaudiotagger.tag.lyrics3.AbstractLyrics3v2FieldFrameBody: int readHeader(java.io.RandomAccessFile)
com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker: BottomSheetBehavior$StateSettlingTracker(com.google.android.material.bottomsheet.BottomSheetBehavior,com.google.android.material.bottomsheet.BottomSheetBehavior$1)
com.umeng.analytics.pro.ay: java.nio.ByteBuffer h(byte[],com.umeng.analytics.pro.bc,com.umeng.analytics.pro.bc[])
com.caij.puremusic.views.TopAppBarLayout: java.lang.String getTitle()
androidx.core.content.ContextCompat$Api16Impl: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
com.tencent.mm.opensdk.modelmsg.WXStateJumpMiniProgramInfo: boolean checkArgs()
androidx.core.content.res.ResourcesCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
org.jaudiotagger.audio.wav.WavTagReader: WavTagReader(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
org.jcodec.containers.mp4.boxes.MovieExtendsHeaderBox: int getFragmentDuration()
org.jaudiotagger.tag.mp4.Mp4Tag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.images.Artwork)
com.caij.puremusic.db.model.SongEntityQueries$CheckSongPlaylistExistsQuery$execute$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.audio.AudioFile: java.io.RandomAccessFile checkFilePermissions(java.io.File,boolean)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int)
com.caij.puremusic.model.Genre: int getSongCount()
androidx.preference.PreferenceGroup: PreferenceGroup(android.content.Context,android.util.AttributeSet,int)
com.tencent.bugly.proguard.bf: boolean a()
com.umeng.commonsdk.statistics.internal.StatTracer: int getLastRequestLatency()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyEAL: java.lang.String getIdentifier()
com.caij.puremusic.db.model.ArtistQueries$artistByName$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
org.jaudiotagger.tag.wav.WavTag: void setExistingId3Tag(boolean)
org.simpleframework.xml.core.Qualifier: Qualifier(org.simpleframework.xml.core.Contact)
com.caij.puremusic.model.AlbumWithCount: com.caij.puremusic.model.AlbumWithCount copy$default(com.caij.puremusic.model.AlbumWithCount,com.caij.puremusic.db.model.Album,int,int,java.lang.Object)
androidx.core.content.ContextCompat$Api24Impl: java.io.File getDataDir(android.content.Context)
code.name.monkey.appthemehelper.common.prefs.supportv7.ATESwitchPreference: ATESwitchPreference(android.content.Context)
com.umeng.analytics.Gender$2: Gender$2(java.lang.String,int,int)
org.simpleframework.xml.core.Expression: int getIndex()
com.caij.puremusic.db.model.Album: long component4()
org.jaudiotagger.tag.mp4.field.Mp4DiscNoField: Mp4DiscNoField(byte[])
com.caij.puremusic.drive.model.AMetadata: java.lang.String component5()
com.umeng.analytics.pro.an: boolean s()
com.umeng.commonsdk.utils.UMUtils: java.lang.String getMultiProcessSP(android.content.Context,java.lang.String)
org.jaudiotagger.audio.ogg.util.OggPageHeader: boolean isFirstPage()
org.jaudiotagger.tag.id3.ID3v1Tag: java.util.Iterator getFields()
com.caij.puremusic.drive.model.PlayListSubsonicResponse: com.caij.puremusic.drive.model.SubPlayList component3()
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
org.jaudiotagger.tag.datatype.NumberFixedLength: byte[] writeByteArray()
com.caij.puremusic.db.model.ServerSongCoverQueries: app.cash.sqldelight.db.SqlDriver access$getDriver(com.caij.puremusic.db.model.ServerSongCoverQueries)
com.google.gson.FieldNamingPolicy$5: java.lang.String translateName(java.lang.reflect.Field)
com.umeng.commonsdk.statistics.proto.d: com.umeng.commonsdk.statistics.proto.d a(java.util.Map)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
com.tencent.bugly.proguard.l: void a(java.lang.Object[],int)
org.jcodec.containers.mp4.boxes.FullBox: void setFlags(int)
com.umeng.commonsdk.statistics.proto.a$c: a$c(com.umeng.commonsdk.statistics.proto.a$1)
org.jcodec.containers.mp4.boxes.DataBox: int estimateSize()
org.jaudiotagger.tag.datatype.EventTimingCode: EventTimingCode(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody,int,long)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getIconTintMode()
com.caij.puremusic.db.model.AlbumQueries$getAlbumByArtistId$2: com.caij.puremusic.db.model.Album invoke(long,int,java.lang.String,long,long,java.lang.String,long,java.lang.String,java.lang.String,int,int)
com.caij.puremusic.drive.model.SubsonicSearchListResponse: boolean equals(java.lang.Object)
com.tencent.mm.opensdk.diffdev.a.a: java.util.List a(com.tencent.mm.opensdk.diffdev.a.a)
com.caij.puremusic.drive.model.DavResource: java.lang.String getName()
org.jaudiotagger.audio.wav.WavTagWriter: void deleteTagChunk(java.nio.channels.FileChannel,int,int)
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int getNumberOfChannels()
com.caij.puremusic.db.model.SongEntityQueries$CheckSongPlaylistExistsQuery: long getPlaylistId()
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: void setAcl(java.lang.String,java.util.List)
com.google.android.material.textfield.TextInputEditText: TextInputEditText(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdTypeCountQuery$execute$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.audio.mp3.MP3AudioHeader: void setFileSize(long)
com.umeng.analytics.pro.s: s(com.umeng.analytics.pro.s$1)
org.simpleframework.xml.core.ClassScanner: void scan(org.simpleframework.xml.core.Detail)
com.caij.puremusic.drive.model.PlayListsResponse: void getSubsonicResponse$annotations()
org.jaudiotagger.logging.XMLTagDisplayFormatter: void openHeadingElement(java.lang.String,int)
com.tencent.mm.opensdk.modelmsg.WXStateJumpChannelProfileInfo: boolean checkArgs()
com.caij.puremusic.preferences.AlbumCoverStylePreference: AlbumCoverStylePreference(android.content.Context,android.util.AttributeSet,int,int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.alipay.android.phone.mrpc.core.o: java.lang.String c()
com.caij.puremusic.drive.model.ParentReference: java.lang.String getId()
org.jcodec.containers.mp4.boxes.Box: void dump(java.lang.StringBuilder)
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: void parse(java.nio.ByteBuffer)
org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Object,org.simpleframework.xml.stream.InputNode)
com.umeng.commonsdk.statistics.proto.Response$d: Response$d(com.umeng.commonsdk.statistics.proto.Response$1)
com.caij.puremusic.views.BaselineGridTextView: boolean getMaxLinesByHeight()
org.jaudiotagger.audio.asf.io.EncryptionChunkReader: EncryptionChunkReader()
com.tencent.mm.opensdk.modelmsg.WXWeWorkObject: void serialize(android.os.Bundle)
org.simpleframework.xml.core.CacheLabel: boolean isInline()
com.tencent.mm.opensdk.modelmsg.WXEmojiPageSharedObject: int type()
org.jaudiotagger.logging.XMLTagDisplayFormatter: java.lang.String toString()
org.jaudiotagger.audio.opus.OpusFileReader: org.jaudiotagger.audio.ogg.util.OggPageHeader readOggPageHeader(java.io.RandomAccessFile,int)
androidx.constraintlayout.motion.widget.MotionLayout: androidx.constraintlayout.motion.widget.DesignTool getDesignTool()
org.jaudiotagger.audio.asf.data.AsfHeader: org.jaudiotagger.audio.asf.data.AsfExtendedHeader getExtendedHeader()
com.caij.puremusic.drive.model.DavProperties: long getContentLength(com.caij.puremusic.drive.model.Response)
com.umeng.commonsdk.utils.c: boolean a(long,long,int)
com.caij.puremusic.drive.model.BaiduFileResponse$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.caij.puremusic.drive.model.Prop$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.Prop)
androidx.constraintlayout.widget.Guideline: void setFilterRedundantCalls(boolean)
org.jaudiotagger.tag.reference.ISOCountry$Country: org.jaudiotagger.tag.reference.ISOCountry$Country[] values()
com.umeng.analytics.Gender: com.umeng.commonsdk.statistics.proto.Gender transGender(com.umeng.analytics.Gender)
com.umeng.analytics.pro.bo: void f(int)
org.simpleframework.xml.core.Session: java.lang.Object put(java.lang.Object,java.lang.Object)
com.umeng.commonsdk.statistics.b: boolean b()
com.caij.puremusic.db.model.SongQueries$SongsByArtistIdWithLikeQuery$execute$1: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
org.jaudiotagger.tag.datatype.PartOfSet$PartOfSetValue: java.lang.Integer getCount()
com.alipay.tscenter.biz.rpc.vkeydfp.result.AppListCmdResult: AppListCmdResult()
org.jaudiotagger.audio.mp3.XingFrame: java.lang.String toString()
com.umeng.commonsdk.framework.UMFrUtils: java.lang.String getEnvelopeDirPath(android.content.Context)
com.umeng.commonsdk.statistics.proto.c$b: com.umeng.commonsdk.statistics.proto.c$a a()
org.simpleframework.xml.core.ElementListUnionLabel: java.lang.String getEntry()
com.caij.puremusic.drive.model.BaiduDriveItem: long getServer_mtime()
com.tencent.bugly.proguard.bd: boolean getAndUpdateAnrState()
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
org.simpleframework.xml.stream.HyphenStyle: java.lang.String getElement(java.lang.String)
com.caij.puremusic.lyrics.CoverLrcView: void setLabel(java.lang.String)
com.umeng.analytics.pro.h: h()
com.tencent.mm.opensdk.modelbiz.ChooseCardFromWXCardPackage: ChooseCardFromWXCardPackage()
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
org.jcodec.containers.mp4.boxes.TrunBox: org.jcodec.containers.mp4.boxes.TrunBox createTrunBox()
com.caij.puremusic.drive.model.Metadata: int getAddedAt()
com.caij.puremusic.db.model.SongQueries$SongsByArtistQuery: SongQueries$SongsByArtistQuery(com.caij.puremusic.db.model.SongQueries,java.lang.String,kotlin.jvm.functions.Function1)
org.simpleframework.xml.strategy.Contract: java.lang.String getIdentity()
org.simpleframework.xml.core.TextException: TextException(java.lang.Throwable,java.lang.String,java.lang.Object[])
com.caij.puremusic.fragments.player.material.MaterialControlsFragment: MaterialControlsFragment()
org.json.alipay.JSONException: JSONException(java.lang.Throwable)
com.tencent.mm.opensdk.diffdev.a.a$a: a$a(com.tencent.mm.opensdk.diffdev.a.a)
org.xmlpull.v1.XmlPullParser: java.lang.String getPrefix()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackground(android.graphics.drawable.Drawable)
com.caij.puremusic.db.model.PlayCountEntityQueries$playCountSongs$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
org.simpleframework.xml.core.DefaultDetail: org.simpleframework.xml.Namespace getNamespace()
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery: TransportBackendDiscovery()
com.tencent.bugly.proguard.as: android.content.ContentValues c(com.tencent.bugly.crashreport.crash.CrashDetailBean)
androidx.cardview.widget.CardView: float getCardElevation()
org.jaudiotagger.audio.generic.Utils: java.lang.String readString(java.io.DataInput,int)
com.caij.puremusic.db.model.PlaybackSong: int hashCode()
org.simpleframework.xml.core.ElementListLabel: org.simpleframework.xml.core.Converter getConverter(org.simpleframework.xml.core.Context)
org.simpleframework.xml.core.PathParser: void segment()
org.jcodec.containers.mp4.boxes.TrackExtendsBox: void setDefaultSampleDuration(int)
code.name.monkey.appthemehelper.common.prefs.supportv7.ATEPreference: ATEPreference(android.content.Context)
com.caij.puremusic.drive.model.Multistatus$Companion: kotlinx.serialization.KSerializer serializer()
com.tencent.mm.opensdk.modelmsg.LaunchFromWX$Req: LaunchFromWX$Req()
com.caij.puremusic.db.model.Song: long getDuration()
org.jaudiotagger.audio.AudioFile: org.jaudiotagger.tag.Tag getTagAndConvertOrCreateAndSetDefault()
org.simpleframework.xml.stream.DocumentReader$Entry: java.lang.String getReference()
com.tencent.mm.opensdk.utils.ILog: void e(java.lang.String,java.lang.String)
androidx.gridlayout.widget.GridLayout: int getColumnCount()
com.caij.puremusic.drive.model.PlexSongsResponse: java.lang.String toString()
org.jaudiotagger.tag.wav.WavTag: void syncTagsAfterRead()
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyUrlLink: void write(java.io.ByteArrayOutputStream)
com.alipay.sdk.app.AuthTask: java.lang.String innerAuth(com.alipay.sdk.m.s.a,java.lang.String,boolean)
com.afollestad.materialdialogs.internal.button.DialogActionButtonLayout: androidx.appcompat.widget.AppCompatCheckBox getCheckBoxPrompt()
com.tencent.mm.opensdk.modelbiz.SubscribeMiniProgramMsg$Resp: SubscribeMiniProgramMsg$Resp(android.os.Bundle)
androidx.fragment.app.Fragment: boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
org.jaudiotagger.tag.id3.framebody.FrameBodyCTOC: FrameBodyCTOC(org.jaudiotagger.tag.id3.framebody.FrameBodyCTOC)
com.tencent.mm.opensdk.modelmsg.WXAppExtendObject: WXAppExtendObject()
com.google.android.material.chip.Chip: void setMaxWidth(int)
com.caij.puremusic.db.model.SongEntityQueries$insert$1: SongEntityQueries$insert$1(com.caij.puremusic.db.model.SongEntity)
com.umeng.analytics.b: org.json.JSONObject c()
org.simpleframework.xml.strategy.WriteState: WriteState(org.simpleframework.xml.strategy.Contract)
com.alipay.android.app.IAlixPay$Stub: IAlixPay$Stub()
org.jaudiotagger.tag.id3.framebody.FrameBodyPOPM: long getRating()
org.simpleframework.xml.core.TreeModel: void registerAttribute(java.lang.String)
nl.adaptivity.xmlutil.EventType: void writeEvent(nl.adaptivity.xmlutil.XmlWriter,nl.adaptivity.xmlutil.XmlReader)
com.caij.puremusic.drive.model.PlaylistMetadata$Companion: PlaylistMetadata$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.jaudiotagger.tag.id3.AbstractID3v2Frame: void setContent(java.lang.String)
com.umeng.commonsdk.internal.c$2: c$2(android.content.Context,com.umeng.commonsdk.listener.OnGetOaidListener)
com.tencent.mm.opensdk.modelpay.PayReq: void toBundle(android.os.Bundle)
org.simpleframework.xml.core.MethodName: org.simpleframework.xml.core.MethodType getType()
org.jaudiotagger.utils.tree.TreeModel: void valueForPathChanged(org.jaudiotagger.utils.tree.TreePath,java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
com.google.gson.FieldNamingPolicy: java.lang.String separateCamelCase(java.lang.String,java.lang.String)
com.google.android.material.slider.BaseSlider: void setTickTintList(android.content.res.ColorStateList)
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: int getDefaultSampleSize()
com.caij.puremusic.MainModuleKt$roomModule$1$3: MainModuleKt$roomModule$1$3()
org.jaudiotagger.tag.id3.framebody.FrameBodyEQUA: FrameBodyEQUA(org.jaudiotagger.tag.id3.framebody.FrameBodyEQUA)
com.caij.puremusic.drive.model.AlbumItem: java.lang.String getParentBackdropItemId()
org.jaudiotagger.audio.generic.Utils: int readBER32(java.nio.ByteBuffer)
com.caij.puremusic.fragments.playlists.PlaylistsFragment: PlaylistsFragment()
org.simpleframework.xml.core.KeyBuilder$KeyType: org.simpleframework.xml.core.KeyBuilder$KeyType[] values()
com.umeng.commonsdk.vchannel.a: a()
com.tencent.mm.opensdk.modelmsg.WXAppLaunchData: WXAppLaunchData()
org.jcodec.containers.mp4.boxes.CompositionOffsetsBox$LongEntry: long getCount()
com.umeng.commonsdk.statistics.idtracking.a: com.umeng.commonsdk.statistics.proto.b d()
com.caij.puremusic.drive.model.Location$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.umeng.analytics.pro.u$a: com.umeng.analytics.pro.u a()
com.caij.puremusic.drive.model.AlbumSubsonicResponse: boolean equals(java.lang.Object)
org.jcodec.containers.mp4.boxes.MovieHeaderBox: int[] getMatrix()
org.jaudiotagger.tag.flac.FlacTag: void addField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
com.caij.puremusic.drive.model.JellyfinFolder: java.lang.String getItemId()
com.umeng.analytics.pro.l: com.umeng.analytics.pro.l a(android.content.Context)
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query song(long)
org.simpleframework.xml.core.Variable: boolean isTextList()
com.alipay.android.phone.mrpc.core.b: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)
com.caij.puremusic.model.Home: int hashCode()
org.simpleframework.xml.core.StructureBuilder: org.simpleframework.xml.core.Structure build(java.lang.Class)
org.simpleframework.xml.core.Composite: void writeText(org.simpleframework.xml.stream.OutputNode,java.lang.Object,org.simpleframework.xml.core.Section)
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleMargin(float)
androidx.fragment.app.Fragment: void onAttachFragment(androidx.fragment.app.Fragment)
org.simpleframework.xml.core.ElementListUnionLabel: org.simpleframework.xml.core.Contact getContact()
com.caij.puremusic.drive.model.Metadata$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.umeng.analytics.pro.bf: bf(com.umeng.analytics.pro.bc,java.lang.Object)
com.bumptech.glide.load.DecodeFormat: DecodeFormat(java.lang.String,int)
org.simpleframework.xml.stream.OutputDocument: void commit()
com.tencent.bugly.proguard.be: java.lang.String a(java.lang.String,int,java.lang.String,boolean)
com.tencent.bugly.proguard.k: float[] h(int,boolean)
com.caij.puremusic.drive.model.ArtistItem: java.lang.String getLocationType()
androidx.preference.SeekBarPreference: SeekBarPreference(android.content.Context)
org.simpleframework.xml.core.DefaultScanner: org.simpleframework.xml.core.Function getValidate()
org.jaudiotagger.audio.asf.data.LanguageList: java.util.List getLanguages()
com.caij.puremusic.drive.model.AlbumListResponse: com.caij.puremusic.drive.model.SubsonicResponse getSubsonicResponse()
org.simpleframework.xml.core.Qualifier: void namespace(org.simpleframework.xml.core.Contact)
com.caij.puremusic.drive.model.SongItem: boolean component6()
org.simpleframework.xml.core.KeyBuilder: java.lang.Object getKey()
com.umeng.commonsdk.statistics.proto.e: void read(com.umeng.analytics.pro.bu)
com.caij.puremusic.db.model.SearchAlbumResultQueries$GetByIdQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
androidx.fragment.app.DialogFragment: int getTheme()
com.umeng.analytics.filter.EventList: boolean matchHit(java.lang.String)
org.jaudiotagger.tag.id3.ID3Frames: boolean isDiscardIfFileAltered(java.lang.String)
com.caij.puremusic.model.Genre$Creator: java.lang.Object createFromParcel(android.os.Parcel)
org.jaudiotagger.audio.wav.WavCleaner: void clean()
com.caij.puremusic.drive.model.Type: void write$Self(com.caij.puremusic.drive.model.Type,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
org.jaudiotagger.audio.wav.WavTagWriter: void writePaddingToFile(java.nio.channels.FileChannel,int)
org.simpleframework.xml.core.ElementMapUnionLabel: org.simpleframework.xml.core.Decorator getDecorator()
com.tencent.mm.opensdk.modelmsg.WXWebpageObject: int type()
com.tencent.mm.opensdk.modelbiz.CreateChatroom$Resp: CreateChatroom$Resp(android.os.Bundle)
com.tencent.bugly.proguard.as: com.tencent.bugly.crashreport.crash.CrashDetailBean a(java.util.List,com.tencent.bugly.crashreport.crash.CrashDetailBean)
com.tencent.mm.opensdk.channel.a.a: java.lang.String a(android.os.Bundle,java.lang.String)
org.jaudiotagger.audio.asf.data.Chunk: Chunk(org.jaudiotagger.audio.asf.data.GUID,long,java.math.BigInteger)
org.jaudiotagger.audio.asf.data.AudioStreamChunk: org.jaudiotagger.audio.asf.data.GUID getErrorConcealment()
androidx.preference.TwoStatePreference: TwoStatePreference(android.content.Context)
com.umeng.analytics.vshelper.b: void a(android.app.Activity,android.os.Bundle)
org.jaudiotagger.tag.id3.framebody.FrameBodyTENC: FrameBodyTENC(java.nio.ByteBuffer,int)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSIZ: FrameBodyTSIZ(java.nio.ByteBuffer,int)
com.umeng.commonsdk.statistics.proto.c: void c(boolean)
com.umeng.commonsdk.internal.utils.c$1: c$1(com.umeng.commonsdk.internal.utils.c)
com.caij.puremusic.drive.model.Prop: com.caij.puremusic.drive.model.Resourcetype getResourcetype()
com.tencent.mm.opensdk.modelmsg.WXGameLiveObject: void serialize(android.os.Bundle)
com.google.gson.LongSerializationPolicy: com.google.gson.JsonElement serialize(java.lang.Long)
com.caij.puremusic.drive.model.PlexSongsResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
androidx.constraintlayout.widget.ConstraintLayout: void setMaxWidth(int)
com.umeng.analytics.pro.ch: ch()
org.jaudiotagger.utils.IntArrayList: void addAll(int[])
org.jaudiotagger.tag.id3.framebody.FrameBodyIPLS: FrameBodyIPLS(java.nio.ByteBuffer,int)
com.caij.puremusic.fragments.albums.AlbumDetailsFragment: AlbumDetailsFragment()
com.caij.puremusic.db.model.SongEntityQueries$GetSongEntityQuery: void addListener(app.cash.sqldelight.Query$Listener)
org.jaudiotagger.tag.asf.AsfTagCoverField: AsfTagCoverField(byte[],int,java.lang.String,java.lang.String)
org.jcodec.containers.mp4.boxes.EditListBox: java.util.List getEdits()
com.thegrizzlylabs.sardineandroid.model.Privilege: void setContent(java.util.List)
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdCountQuery: long getAlbumId()
org.jaudiotagger.tag.id3.framebody.FrameBodyUSLT: FrameBodyUSLT(byte,java.lang.String,java.lang.String,java.lang.String)
com.caij.puremusic.db.model.HistoryEntityQueries: app.cash.sqldelight.db.SqlDriver access$getDriver(com.caij.puremusic.db.model.HistoryEntityQueries)
com.umeng.analytics.pro.an: java.lang.String A()
org.jaudiotagger.audio.generic.AudioFileReader2: org.jaudiotagger.audio.generic.GenericAudioHeader getEncodingInfo(java.nio.channels.FileChannel,java.lang.String)
org.jaudiotagger.tag.datatype.Pair: void setValue(java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyRVRB: void setupObjectList()
com.alipay.android.phone.mrpc.core.b: org.apache.http.conn.ClientConnectionManager getConnectionManager()
org.simpleframework.xml.util.Resolver$Stack: java.util.Iterator sequence()
com.caij.puremusic.db.model.SearchAlbumResultQueries: app.cash.sqldelight.Query getById(java.lang.String,kotlin.jvm.functions.Function2)
org.jaudiotagger.tag.id3.framebody.FrameBodyWOAR: java.lang.String getIdentifier()
com.umeng.commonsdk.utils.JSONArraySortUtil: void setCompareKey(java.lang.String)
com.caij.puremusic.drive.model.MediaStream: java.lang.String getType()
com.tencent.bugly.crashreport.crash.h5.H5JavaScriptInterface: com.tencent.bugly.proguard.bb a(java.lang.String)
org.jaudiotagger.audio.ogg.util.OggPageHeader: int getPageLength()
org.simpleframework.xml.core.FieldContact: java.lang.Object get(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: int getMaxWidth()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
com.tencent.bugly.proguard.av: void uncaughtException(java.lang.Thread,java.lang.Throwable)
com.afollestad.materialdialogs.color.view.ObservableEditText: java.lang.String getTextOrEmpty()
com.tencent.bugly.proguard.ap: void b(android.os.Parcel,java.util.Map)
com.tencent.mm.opensdk.modelbiz.WXChannelOpenEvent$Resp: int getType()
androidx.core.view.ViewCompat$Api26Impl: void setNextClusterForwardId(android.view.View,int)
com.caij.puremusic.drive.model.Response$$serializer: com.caij.puremusic.drive.model.Response deserialize(kotlinx.serialization.encoding.Decoder)
com.caij.puremusic.db.model.SongQueries$GetArtistSongCountQuery: java.lang.String toString()
org.jcodec.containers.mp4.boxes.MovieHeaderBox: void doWrite(java.nio.ByteBuffer)
org.xmlpull.v1.XmlPullParser: java.lang.String getAttributePrefix(int)
com.umeng.analytics.pro.an: void c(boolean)
org.jaudiotagger.tag.id3.framebody.FrameBodyENCR: void setupObjectList()
com.google.android.material.timepicker.ClockFaceView: ClockFaceView(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.tag.reference.GenreTypes: org.jaudiotagger.tag.reference.GenreTypes getInstanceOf()
com.caij.puremusic.App: App()
com.caij.puremusic.drive.model.AlbumArtist$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataCueSheet: java.nio.ByteBuffer getBytes()
org.jaudiotagger.audio.asf.io.ChunkHeaderReader: org.jaudiotagger.audio.asf.data.GUID[] getApplyingIds()
org.simpleframework.xml.stream.NodeWriter: void writeComment(org.simpleframework.xml.stream.OutputNode)
com.caij.puremusic.drive.model.Media: java.util.List component7()
com.umeng.analytics.pro.bx: void a(com.umeng.analytics.pro.bu,byte,int)
com.umeng.analytics.pro.cj: cj(java.lang.String,java.lang.Throwable)
com.caij.puremusic.network.model.Artist: com.caij.puremusic.network.model.Artist component8()
org.jcodec.containers.mp4.boxes.NodeBox: void setFactory(org.jcodec.containers.mp4.IBoxFactory)
androidx.fragment.app.Fragment: void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle)
com.umeng.commonsdk.statistics.proto.c: void d()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
org.repackage.com.zui.deviceidservice.IDeviceidInterface: java.lang.String b()
org.jcodec.containers.mp4.boxes.MetaValue: boolean isBlob()
com.caij.puremusic.db.model.HistoryEntityQueries$insert$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.google.android.material.bottomsheet.BottomSheetDialogFragment$BottomSheetDismissCallback: BottomSheetDialogFragment$BottomSheetDismissCallback(com.google.android.material.bottomsheet.BottomSheetDialogFragment)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
com.caij.puremusic.model.Contributor: java.lang.String getSummary()
com.tencent.mm.opensdk.modelbiz.WXNontaxPay$Req: void fromBundle(android.os.Bundle)
com.alipay.sdk.app.H5OpenAuthActivity: H5OpenAuthActivity()
org.jcodec.containers.mp4.boxes.TrunBox$Factory: TrunBox$Factory(org.jcodec.containers.mp4.boxes.TrunBox)
com.caij.puremusic.db.model.AlbumQueries$SearchAlbumsByNameQuery: void removeListener(app.cash.sqldelight.Query$Listener)
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String component1()
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode valueOf(java.lang.String)
com.caij.puremusic.db.model.SongQueries$songsByAlum$1: SongQueries$songsByAlum$1(kotlin.jvm.functions.Function18,com.caij.puremusic.db.model.SongQueries)
com.tencent.bugly.proguard.bn: void a(com.tencent.bugly.proguard.l)
com.caij.puremusic.model.CategoryInfo$Category: CategoryInfo$Category(java.lang.String,int,int,int,int,int)
com.umeng.commonsdk.framework.a: void m()
com.umeng.analytics.pro.aw: int a(java.util.Map,java.util.Map)
org.jcodec.containers.mp4.boxes.NodeBox: void replace(java.lang.String,org.jcodec.containers.mp4.boxes.Box)
org.jaudiotagger.tag.images.Images: java.awt.image.BufferedImage getImage(org.jaudiotagger.tag.images.Artwork)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyEAL: void setupObjectList()
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query songsByAlbumId(long,kotlin.jvm.functions.Function18)
com.caij.puremusic.db.model.ServerArtistCover: long getSourceId()
com.caij.puremusic.drive.model.AlbumMetadata$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyETT: FieldFrameBodyETT()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: MetadataBlockDataStreamInfo(org.jaudiotagger.audio.flac.metadatablock.MetadataBlockHeader,java.nio.channels.FileChannel)
androidx.appcompat.widget.SwitchCompat: void setTrackDrawable(android.graphics.drawable.Drawable)
androidx.media.app.NotificationCompat$Api21Impl: void setMediaStyle(android.app.Notification$Builder,android.app.Notification$MediaStyle)
org.simpleframework.xml.ElementArray: boolean data()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
com.caij.puremusic.drive.model.Auth2Token$Companion: Auth2Token$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.caij.puremusic.db.model.PlayCountEntity: int hashCode()
org.jaudiotagger.tag.mp4.field.Mp4TagReverseDnsField: java.lang.String toString()
com.tencent.mm.opensdk.modelmsg.WXLiteAppObject: boolean checkArgs()
com.caij.puremusic.drive.model.User: com.caij.puremusic.drive.model.User copy$default(com.caij.puremusic.drive.model.User,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
org.repackage.com.miui.deviceid.IdentifierManager: java.lang.String d(android.content.Context)
com.caij.puremusic.db.model.ServerArtistCoverQueries$GetByIdQuery$execute$1: ServerArtistCoverQueries$GetByIdQuery$execute$1(com.caij.puremusic.db.model.ServerArtistCoverQueries$GetByIdQuery)
com.afollestad.materialdialogs.color.view.ObservableEditText: int getTextLength()
org.simpleframework.xml.core.Composite: void validateElements(org.simpleframework.xml.stream.InputNode,org.simpleframework.xml.core.Section)
kotlin.jvm.internal.CallableReference$NoReceiver: CallableReference$NoReceiver()
com.caij.puremusic.db.model.PlaybackSongQueries$clear$1: void invoke(kotlin.jvm.functions.Function1)
org.jaudiotagger.audio.asf.data.AudioStreamChunk: void setErrorConcealment(org.jaudiotagger.audio.asf.data.GUID)
com.caij.puremusic.drive.model.MediaStream$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.google.android.material.search.SearchBar: int getStrokeColor()
com.caij.puremusic.drive.model.Part: Part(int,int,java.lang.String,int,java.lang.String,int,java.lang.String,kotlinx.serialization.internal.SerializationConstructorMarker)
org.jaudiotagger.audio.mp3.XingFrame: int getFrameCount()
io.ktor.client.HttpClientConfig$install$3$attributes$1: HttpClientConfig$install$3$attributes$1()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: int getHeight()
com.umeng.commonsdk.statistics.common.d$a: void b()
org.jcodec.containers.mp4.MP4Util$Atom: void copy(java.nio.channels.FileChannel,java.nio.channels.WritableByteChannel)
com.umeng.commonsdk.framework.a$2: a$2(com.umeng.commonsdk.framework.a,android.os.Looper)
org.jcodec.containers.mp4.boxes.GamaExtension: java.lang.String fourcc()
com.umeng.analytics.pro.bn: com.umeng.analytics.pro.bz j()
com.caij.puremusic.drive.model.EmbyFoldersResponse: EmbyFoldersResponse()
org.jaudiotagger.tag.id3.framebody.FrameBodyPRIV: byte[] getData()
com.caij.puremusic.model.Playlist: Playlist(long,java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyGRID: void setOwner(java.lang.String)
com.umeng.commonsdk.stateless.d: void a(android.content.Context,java.lang.String,int)
com.afollestad.materialdialogs.internal.main.BaseSubLayout: boolean getDrawDivider()
com.caij.puremusic.network.model.LastFmAlbum$Album: java.util.List getImage()
org.jaudiotagger.tag.datatype.MultipleTextEncodedStringNullTerminated: void readByteArray(byte[],int)
com.caij.vip.GoodOrder: GoodOrder()
com.caij.puremusic.db.model.PlaybackSong: long component3()
com.yalantis.ucrop.view.OverlayView: void setCropGridColumnCount(int)
org.jaudiotagger.tag.id3.ID3v24Tag: void processDuplicateFrame(org.jaudiotagger.tag.id3.AbstractID3v2Frame,org.jaudiotagger.tag.id3.AbstractID3v2Frame)
com.thegrizzlylabs.sardineandroid.DavAcl: java.util.List getAces()
org.jaudiotagger.tag.id3.ID3v11Tag: java.lang.String getFirstComment()
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding: DownsampleStrategy$SampleSizeRounding(java.lang.String,int)
com.tencent.bugly.BuglyStrategy: java.lang.String getAppChannel()
org.jaudiotagger.tag.images.StandardArtwork: org.jaudiotagger.tag.images.StandardArtwork createLinkedArtworkFromURL(java.lang.String)
com.caij.puremusic.db.model.SongQueries$songsByIds$1: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.db.model.Artist: int hashCode()
org.jaudiotagger.tag.InvalidDataTypeException: InvalidDataTypeException()
org.jaudiotagger.tag.mp4.field.Mp4TagRawBinaryField: byte[] getDataBytes()
org.simpleframework.xml.transform.LocaleTransform: java.util.Locale read(java.lang.String[])
org.jaudiotagger.audio.generic.AudioFileWriter: void setAudioFileModificationListener(org.jaudiotagger.audio.generic.AudioFileModificationListener)
com.caij.puremusic.drive.model.PlayListItem$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)
com.caij.puremusic.db.model.SongEntityQueries$getSongEntity$1: SongEntityQueries$getSongEntity$1(kotlin.jvm.functions.Function3)
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
org.simpleframework.xml.core.PathParser: boolean isLetter(char)
com.caij.puremusic.drive.model.SubsonicSong: long getSize()
com.caij.puremusic.drive.model.DavResource: java.lang.String getPath()
com.caij.puremusic.db.model.AlbumQueries$searchAlbumsByName$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
com.umeng.analytics.pro.ar: void a()
org.jaudiotagger.tag.id3.framebody.FrameBodyTRCK: void setTrackTotal(java.lang.Integer)
org.simpleframework.xml.core.LabelExtractor: org.simpleframework.xml.core.LabelGroup getGroup(org.simpleframework.xml.core.Contact,java.lang.annotation.Annotation,java.lang.Object)
androidx.cardview.widget.CardView: void setRadius(float)
com.umeng.commonsdk.statistics.internal.a: void e(java.lang.String)
com.umeng.commonsdk.statistics.proto.c: void i()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
com.umeng.commonsdk.stateless.d$3: int a(java.io.File,java.io.File)
com.caij.puremusic.drive.model.SearchResult3: SearchResult3(int,java.util.List,kotlinx.serialization.internal.SerializationConstructorMarker)
androidx.appcompat.widget.SwitchCompat: void setEnforceSwitchWidth(boolean)
com.google.android.material.search.SearchView: void setStatusBarSpacerEnabled(boolean)
org.simpleframework.xml.core.CompositeMapUnion: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object,java.lang.Object,org.simpleframework.xml.core.Label)
com.thegrizzlylabs.sardineandroid.model.Response: Response()
com.caij.puremusic.db.model.SearchAlbumResult: int hashCode()
com.umeng.analytics.b: org.json.JSONObject h(android.content.Context)
com.caij.puremusic.drive.model.Directory: int hashCode()
com.tencent.bugly.proguard.al: boolean a(java.lang.String,java.lang.Object[])
com.umeng.commonsdk.internal.utils.c: void c()
com.umeng.analytics.pro.ay: ay()
org.jaudiotagger.tag.reference.PerformerHelper: java.lang.String formatForId3(java.lang.String,java.lang.String)
com.umeng.analytics.pro.bw: com.umeng.analytics.pro.bu a(com.umeng.analytics.pro.ci)
org.simpleframework.xml.core.TreeModel: TreeModel(org.simpleframework.xml.core.Policy,org.simpleframework.xml.core.Detail,java.lang.String,java.lang.String,int)
com.caij.puremusic.drive.model.PlexLoginResponse: com.caij.puremusic.drive.model.PlexUser component1()
org.simpleframework.xml.core.Criteria: org.simpleframework.xml.core.Variable resolve(java.lang.String)
com.umeng.umzid.IZIDCompletionCallback: void onSuccess(java.lang.String)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyAUT: FieldFrameBodyAUT(java.nio.ByteBuffer)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.db.model.SongQueries$SongsByNameArtistQuery: java.lang.String getValue_()
com.tencent.mm.opensdk.modelbiz.WXLaunchWxaRedirectingPage$Req: WXLaunchWxaRedirectingPage$Req()
com.caij.puremusic.util.PackageValidator$getSignatureSha256$1: PackageValidator$getSignatureSha256$1()
com.tencent.mm.opensdk.modelbiz.WXChannelStartLive$Req: int getType()
org.jaudiotagger.audio.ogg.util.OggPageHeader: void write(java.nio.ByteBuffer)
com.caij.puremusic.network.model.LastFmAlbum$Album$Tag: java.lang.String getUrl()
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdTypeCountQuery: SongQueries$SongsByAlbumIdTypeCountQuery(com.caij.puremusic.db.model.SongQueries,long,int,kotlin.jvm.functions.Function1)
com.umeng.commonsdk.statistics.internal.PreferenceWrapper: android.content.SharedPreferences getInstance(android.content.Context,java.lang.String)
com.google.android.material.slider.BaseSlider: void setTrackTintList(android.content.res.ColorStateList)
com.heinrichreimersoftware.materialintro.app.IntroActivity: IntroActivity()
com.thegrizzlylabs.sardineandroid.Sardine: void copy(java.lang.String,java.lang.String,boolean)
com.tencent.bugly.proguard.at: void a(boolean,boolean,boolean)
com.umeng.commonsdk.statistics.proto.c$a: c$a()
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
com.tencent.bugly.proguard.bs: bs()
com.google.android.material.materialswitch.MaterialSwitch: void setTrackDecorationTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.search.SearchView: void setElevation(float)
com.alipay.apmobilesecuritysdk.a.a: java.lang.String a(android.content.Context,java.lang.String)
org.jaudiotagger.audio.mp3.VbriFrame: java.lang.String toString()
com.umeng.commonsdk.statistics.common.DeviceConfig: DeviceConfig()
com.tencent.bugly.proguard.ay: boolean a(java.lang.String,java.lang.String,java.lang.String)
org.jaudiotagger.tag.id3.ID3v24Frame: ID3v24Frame(java.nio.ByteBuffer)
com.caij.puremusic.db.model.ServerArtistCoverQueries$deleteById$1: ServerArtistCoverQueries$deleteById$1(java.lang.String)
org.simpleframework.xml.core.MethodScanner: void validate()
com.thegrizzlylabs.sardineandroid.Sardine: java.util.List search(java.lang.String,java.lang.String,java.lang.String)
org.simpleframework.xml.core.TextLabel: java.lang.Class getType()
com.caij.puremusic.drive.model.JellyfinSongListResponse: JellyfinSongListResponse(int,java.util.List,int,int,kotlinx.serialization.internal.SerializationConstructorMarker)
androidx.core.content.FileProvider: FileProvider()
org.jaudiotagger.tag.FieldDataInvalidException: FieldDataInvalidException(java.lang.String)
org.simpleframework.xml.core.CacheLabel: boolean isTextList()
org.jaudiotagger.tag.id3.framebody.FrameBodyTPRO: FrameBodyTPRO(java.nio.ByteBuffer,int)
com.google.android.material.bottomsheet.BottomSheetBehavior: void setMaxHeight(int)
com.tencent.bugly.crashreport.CrashReport: void setBuglyDbName(java.lang.String)
androidx.preference.CheckBoxPreference: CheckBoxPreference(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.caij.puremusic.db.model.ServerArtistCoverQueries$deleteSongBySource$1: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.drive.model.OneDriveFolder$Companion: kotlinx.serialization.KSerializer serializer()
com.tencent.bugly.proguard.bt: java.lang.Object clone()
org.jaudiotagger.tag.id3.framebody.FrameBodyCRM: java.lang.String getOwner()
androidx.core.view.ViewCompat$Api26Impl: void setAutofillHints(android.view.View,java.lang.String[])
com.google.android.material.appbar.AppBarLayout: int getTopInset()
com.caij.puremusic.drive.model.Directory: java.lang.String toString()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpecResource(int)
com.caij.puremusic.model.Data: java.lang.String getPicture()
com.umeng.analytics.pro.y: y()
org.jaudiotagger.audio.mp4.ReplaceMP4Editor: void modifyOrReplace(java.nio.channels.FileChannel,java.nio.channels.FileChannel,org.jcodec.containers.mp4.boxes.MovieBox)
com.google.android.material.textfield.TextInputLayout: void setEndIconScaleType(android.widget.ImageView$ScaleType)
org.simpleframework.xml.stream.Provider: org.simpleframework.xml.stream.EventReader provide(java.io.InputStream)
com.thegrizzlylabs.sardineandroid.util.EntityWithAnyElementConverter: EntityWithAnyElementConverter(org.simpleframework.xml.Serializer,java.lang.Class)
org.simpleframework.xml.Serializer: void write(java.lang.Object,java.io.OutputStream)
org.jaudiotagger.utils.tree.EventListenerList: java.lang.String toString()
org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId: void a(java.lang.String)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
org.jaudiotagger.tag.datatype.StringHashMap: StringHashMap(org.jaudiotagger.tag.datatype.StringHashMap)
org.simpleframework.xml.core.TemplateLabel: boolean isUnion()
com.tencent.bugly.BuglyStrategy: com.tencent.bugly.BuglyStrategy setUploadProcess(boolean)
org.jaudiotagger.tag.datatype.EventTimingCodeList: EventTimingCodeList(org.jaudiotagger.tag.id3.framebody.FrameBodyETCO)
org.jaudiotagger.audio.exceptions.CannotWriteException: CannotWriteException(java.lang.String,java.lang.Throwable)
com.umeng.commonsdk.statistics.proto.c$c: void b(com.umeng.analytics.pro.bu,com.umeng.commonsdk.statistics.proto.c)
org.jaudiotagger.tag.id3.framebody.FrameBodyTOFN: FrameBodyTOFN()
org.simpleframework.xml.core.PrimitiveScanner$EmptySection: java.util.Iterator iterator()
com.tencent.bugly.proguard.ab: long g()
com.caij.puremusic.model.lyrics.AbsSynchronizedLyrics: boolean isSynchronized()
com.umeng.commonsdk.utils.FileLockCallback: boolean onFileLock(java.lang.String,java.lang.Object)
org.jaudiotagger.tag.id3.valuepair.ID3V2ExtendedGenreTypes: java.lang.String getDescription()
com.caij.puremusic.drive.model.PlexLoginResponse: PlexLoginResponse(int,com.caij.puremusic.drive.model.PlexUser,kotlinx.serialization.internal.SerializationConstructorMarker)
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
com.caij.puremusic.drive.model.SubsonicAlbum: SubsonicAlbum(java.lang.String,java.lang.String,java.lang.String,int,int,int,java.lang.String,java.lang.String,java.util.List)
org.simpleframework.xml.core.ElementParameter: boolean isPrimitive()
com.umeng.commonsdk.internal.utils.j: j()
org.jaudiotagger.tag.id3.ID3v1Tag: int getFieldCountIncludingSubValues()
com.thegrizzlylabs.sardineandroid.util.SardineUtil: javax.xml.namespace.QName createQNameWithDefaultNamespace(java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyTPUB: java.lang.String getIdentifier()
com.alipay.android.phone.mrpc.core.c: c()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getExtendMotionSpec()
org.jaudiotagger.tag.id3.framebody.FrameBodyLINK: void getAdditionalData(java.lang.String)
org.simpleframework.xml.stream.CamelCaseBuilder$Element: CamelCaseBuilder$Element(org.simpleframework.xml.stream.CamelCaseBuilder,java.lang.String,org.simpleframework.xml.stream.CamelCaseBuilder$1)
com.caij.puremusic.drive.model.PlaylistMetadata: boolean equals(java.lang.Object)
org.simpleframework.xml.core.StructureBuilder: void validateText(java.lang.Class)
com.caij.puremusic.drive.model.OneDriveFolder$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
org.jaudiotagger.utils.tree.TreeModel: int getChildCount(java.lang.Object)
com.umeng.commonsdk.internal.utils.a: boolean a()
com.umeng.analytics.pro.an: int q()
androidx.appcompat.widget.AppCompatSpinner$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback: void onSlide(android.view.View,float)
com.caij.puremusic.db.model.SongQueries$songsByAlumId$1: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.model.Genre: Genre(long,java.lang.String,int)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.alipay.android.phone.mrpc.core.o: boolean equals(java.lang.Object)
org.jaudiotagger.audio.flac.FlacStreamReader: boolean isFlacHeader()
com.tencent.bugly.proguard.z: boolean a()
org.jaudiotagger.utils.tree.DefaultTreeModel: java.util.EventListener[] getListeners(java.lang.Class)
com.umeng.commonsdk.statistics.proto.a$a: void a(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgram$Req: boolean checkArgs()
org.jaudiotagger.tag.id3.framebody.FrameBodyTPOS: void setDiscTotal(java.lang.Integer)
com.thegrizzlylabs.sardineandroid.model.Prop: void setGetetag(java.lang.String)
org.jaudiotagger.tag.id3.AbstractID3v2Frame$StatusFlags: void createStructure()
org.simpleframework.xml.core.ElementUnionLabel: java.lang.String getEntry()
com.tencent.mm.opensdk.modelbiz.WXChannelOpenEvent$Resp: WXChannelOpenEvent$Resp(android.os.Bundle)
com.google.android.material.textfield.TextInputLayout: void setMaxWidth(int)
org.simpleframework.xml.core.Support: org.simpleframework.xml.stream.Format getFormat()
com.tencent.bugly.proguard.w: android.content.ContentValues d(com.tencent.bugly.proguard.y)
org.jaudiotagger.tag.id3.AggregatedFrame: boolean isCommon()
org.jaudiotagger.utils.tree.EventListenerList: EventListenerList()
org.jaudiotagger.utils.tree.DefaultTreeModel: void fireTreeNodesInserted(java.lang.Object,java.lang.Object[],int[],java.lang.Object[])
com.caij.puremusic.drive.model.PlayListsSubsonicResponse: com.caij.puremusic.drive.model.PlayListsSubsonicResponse copy(java.lang.String,java.lang.String,com.caij.puremusic.drive.model.PlayLists)
androidx.fragment.app.Fragment: android.os.Bundle getArguments()
com.caij.puremusic.db.model.SongQueries$SongsByInfoQuery: SongQueries$SongsByInfoQuery(com.caij.puremusic.db.model.SongQueries,java.lang.String,java.lang.String,java.lang.String,kotlin.jvm.functions.Function1)
com.tencent.mmkv.MMKV: int ashmemFD()
me.tankery.lib.circularseekbar.CircularSeekBar: void setPointerAlpha(int)
com.google.android.material.button.MaterialButton: void setBackgroundResource(int)
com.afollestad.materialdialogs.internal.main.DialogTitleLayout: void setIconView$core(android.widget.ImageView)
com.tencent.mm.opensdk.diffdev.a.c: java.lang.Object doInBackground(java.lang.Object[])
org.simpleframework.xml.Element: java.lang.String name()
org.jaudiotagger.tag.datatype.AbstractDataTypeList: java.lang.Object getValue()
com.caij.puremusic.drive.model.JellyfinArtistResponse: java.util.List getItems()
org.jaudiotagger.tag.datatype.TempoCode: void readByteArray(byte[],int)
com.caij.puremusic.fragments.player.flat.FlatPlaybackControlsFragment: FlatPlaybackControlsFragment()
org.simpleframework.xml.core.ElementListParameter: java.lang.String getName()
org.simpleframework.xml.stream.OutputDocument: java.lang.String getComment()
com.caij.puremusic.model.Data: java.lang.String component10()
com.umeng.analytics.pro.aw: java.nio.ByteBuffer d(java.nio.ByteBuffer)
org.jaudiotagger.tag.id3.framebody.FrameBodyTLEN: FrameBodyTLEN(java.nio.ByteBuffer,int)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconDrawable(android.graphics.drawable.Drawable)
com.alipay.android.phone.mrpc.core.r: void a(java.io.Closeable)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
org.jaudiotagger.tag.Tag: boolean hasField(org.jaudiotagger.tag.FieldKey)
com.google.android.material.slider.Slider: int getTrackSidePadding()
org.jaudiotagger.tag.asf.AsfTag: java.lang.String getFirst(org.jaudiotagger.tag.FieldKey)
com.google.gson.FieldNamingPolicy: FieldNamingPolicy(java.lang.String,int)
org.simpleframework.xml.core.CompositeMapUnion: java.lang.Object read(org.simpleframework.xml.stream.InputNode)
com.umeng.commonsdk.statistics.proto.c$e: com.umeng.commonsdk.statistics.proto.c$e a(int)
org.simpleframework.xml.core.TreeModel: void validateModels(java.lang.Class)
org.jaudiotagger.tag.datatype.StringFixedLength: java.nio.charset.Charset getTextEncodingCharSet()
org.simpleframework.xml.core.ParameterFactory$ParameterBuilder: ParameterFactory$ParameterBuilder(java.lang.Class,java.lang.Class,java.lang.Class)
androidx.fragment.app.Fragment: boolean isVisible()
com.umeng.commonsdk.statistics.idtracking.ImprintHandler: void registImprintCallback(java.lang.String,com.umeng.commonsdk.statistics.internal.UMImprintChangeCallback)
androidx.appcompat.widget.SwitchCompat: float getThumbPosition()
org.simpleframework.xml.core.ObjectScanner: void order(org.simpleframework.xml.core.Detail)
com.umeng.commonsdk.statistics.proto.b: b()
org.simpleframework.xml.core.PathParser: boolean isValid(char)
com.alipay.android.phone.mrpc.core.q: java.net.URL h()
com.caij.puremusic.db.model.SongQueries$SearchSongsByTitleQuery: java.lang.String getTitle()
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportByInterval: long getReportInterval()
org.jaudiotagger.tag.id3.framebody.AbstractID3v2FrameBody: AbstractID3v2FrameBody(org.jaudiotagger.tag.id3.framebody.AbstractID3v2FrameBody)
org.simpleframework.xml.strategy.CycleStrategy: org.simpleframework.xml.strategy.Value read(org.simpleframework.xml.strategy.Type,org.simpleframework.xml.stream.NodeMap,java.util.Map)
com.umeng.analytics.pro.o$c: int[] a(int,int)
com.caij.puremusic.fragments.settings.ImageSettingFragment: ImageSettingFragment()
org.simpleframework.xml.core.PrimitiveKey: java.lang.Object readAttribute(org.simpleframework.xml.stream.InputNode,java.lang.String)
com.caij.puremusic.drive.model.DropboxDriveFileResponse: DropboxDriveFileResponse(int,java.lang.String,boolean,java.util.List,kotlinx.serialization.internal.SerializationConstructorMarker)
org.jcodec.containers.mp4.boxes.FielExtension: java.lang.String fourcc()
com.tencent.bugly.proguard.aa: boolean C()
androidx.fragment.app.Fragment: boolean isMenuVisible()
com.caij.puremusic.drive.model.SongItem: com.caij.puremusic.drive.model.SongItem copy(java.lang.String,java.lang.String,java.lang.String,long,int,boolean,java.lang.String,java.lang.String,java.util.List,java.util.List,java.lang.String,java.lang.String,java.util.List,java.util.Map,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String)
org.jaudiotagger.audio.asf.io.FullRequestInputStream: int read(byte[])
com.umeng.commonsdk.statistics.common.ReportPolicy$DebugPolicy: boolean shouldSendMessage(boolean)
org.jcodec.containers.mp4.boxes.KeysBox: org.jcodec.containers.mp4.boxes.KeysBox createKeysBox()
org.jaudiotagger.tag.id3.framebody.FrameBodyMVNM: FrameBodyMVNM(byte,java.lang.String)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType valueOf(java.lang.String)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding[] values()
com.tencent.mm.opensdk.modelbiz.WXQRCodePay$Req: boolean checkArgs()
org.jcodec.containers.mp4.boxes.TrackExtendsBox: TrackExtendsBox(org.jcodec.containers.mp4.boxes.Header)
org.simpleframework.xml.stream.InputNode: java.lang.String getPrefix()
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
org.simpleframework.xml.core.Support: java.lang.String getClassName(java.lang.Class)
org.simpleframework.xml.stream.StreamReader: org.simpleframework.xml.stream.StreamReader$Text text(javax.xml.stream.events.XMLEvent)
com.caij.puremusic.fragments.backup.BackupFragment: BackupFragment()
com.thegrizzlylabs.sardineandroid.impl.handler.InputStreamResponseHandler: java.lang.Object handleResponse(okhttp3.Response)
com.thegrizzlylabs.sardineandroid.DavResource: java.lang.String access$500(com.thegrizzlylabs.sardineandroid.DavResource,com.thegrizzlylabs.sardineandroid.model.Response)
com.umeng.analytics.pro.an$e: an$e(java.lang.String,int,short,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)
com.umeng.analytics.pro.bn: void a(com.umeng.analytics.pro.bs)
com.umeng.commonsdk.stateless.d: void a(android.content.Context,java.lang.String,java.lang.String,int)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgramWithToken$Resp: WXLaunchMiniProgramWithToken$Resp(android.os.Bundle)
org.jaudiotagger.audio.asf.data.GUID: org.jaudiotagger.audio.asf.data.GUID getConfigured(org.jaudiotagger.audio.asf.data.GUID)
org.jaudiotagger.tag.wav.WavInfoTag: java.util.List getUnrecognisedFields()
org.simpleframework.xml.core.AnnotationHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackground(android.graphics.drawable.Drawable)
org.simpleframework.xml.core.DefaultScanner: org.simpleframework.xml.core.Caller getCaller(org.simpleframework.xml.core.Context)
androidx.appcompat.app.AppCompatDialog: void setTitle(java.lang.CharSequence)
com.google.android.material.slider.BaseSlider: android.content.res.ColorStateList getThumbTintList()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: AbstractID3v2Tag(org.jaudiotagger.tag.id3.AbstractID3v2Tag)
org.jaudiotagger.tag.datatype.EventTimingCodeList: org.jaudiotagger.tag.datatype.AbstractDataType createListElement()
com.tencent.bugly.proguard.al: boolean a(int,java.lang.Throwable)
com.caij.puremusic.model.Contributor: Contributor()
androidx.preference.Preference: Preference(android.content.Context,android.util.AttributeSet)
org.simpleframework.xml.stream.Format: Format(org.simpleframework.xml.stream.Style)
com.caij.puremusic.appwidgets.AppWidgetClassic: AppWidgetClassic()
org.jaudiotagger.tag.images.Artwork: void setFromFile(java.io.File)
com.caij.puremusic.drive.model.SubsonicAlbum: int component5()
com.google.gson.FieldNamingPolicy$6: java.lang.String translateName(java.lang.reflect.Field)
com.caij.puremusic.db.model.PlayCountEntityQueries$update$1: PlayCountEntityQueries$update$1(long,long,long)
com.tencent.mm.opensdk.modelpay.JumpToOfflinePay$Resp: boolean checkArgs()
org.jaudiotagger.tag.id3.framebody.FrameBodyTEXT: FrameBodyTEXT(java.nio.ByteBuffer,int)
org.jaudiotagger.tag.id3.framebody.FrameBodyUSLT: FrameBodyUSLT()
org.jaudiotagger.tag.datatype.AbstractValuePair: AbstractValuePair()
me.tankery.lib.circularseekbar.CircularSeekBar: float getPointerAngle()
com.umeng.commonsdk.statistics.proto.e$a: void b(com.umeng.analytics.pro.bu,com.umeng.commonsdk.statistics.proto.e)
com.tencent.bugly.proguard.aa: java.util.Map y()
com.umeng.commonsdk.statistics.idtracking.e: com.umeng.commonsdk.statistics.proto.c c()
com.caij.puremusic.db.model.PlayCountEntity: PlayCountEntity(long,long,long)
com.caij.puremusic.drive.model.OneDriveItem: com.caij.puremusic.drive.model.OneDriveItem copy$default(com.caij.puremusic.drive.model.OneDriveItem,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,com.caij.puremusic.drive.model.OneDriveFolder,com.caij.puremusic.drive.model.OneDriveFile,com.caij.puremusic.drive.model.ParentReference,int,java.lang.Object)
org.jaudiotagger.audio.mp4.Mp4AudioHeader: org.jcodec.containers.mp4.boxes.EsdsBox$AudioProfile getProfile()
com.caij.puremusic.model.CategoryInfo: CategoryInfo(int,boolean)
io.ktor.util.CaseInsensitiveMap$keys$2: CaseInsensitiveMap$keys$2()
org.jaudiotagger.audio.wav.WavTagReader: void createDefaultMetadataTagsIfMissing(org.jaudiotagger.tag.wav.WavTag)
com.caij.puremusic.model.Data: java.lang.String getPictureSmall()
com.umeng.commonsdk.internal.utils.a: java.lang.String e(android.content.Context,java.lang.String)
org.simpleframework.xml.convert.ConverterFactory: org.simpleframework.xml.convert.Converter getConverter(java.lang.Class,java.lang.reflect.Constructor)
com.caij.puremusic.db.model.SongEntityQueries$GetPlayListSongCountQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity requireActivity()
androidx.core.app.BundleCompat$Api18Impl: void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
com.google.android.material.chip.Chip: void setChipIconResource(int)
com.caij.puremusic.drive.model.Directory$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.caij.puremusic.drive.model.AlbumArtist$Companion: AlbumArtist$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.simpleframework.xml.core.Composite: void validate(org.simpleframework.xml.stream.InputNode,org.simpleframework.xml.core.LabelMap)
com.google.android.material.chip.ChipGroup: void setChipSpacingVerticalResource(int)
com.google.android.gms.signin.internal.zaa: zaa()
com.bumptech.glide.module.LibraryGlideModule: LibraryGlideModule()
com.alipay.android.phone.mrpc.core.c: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)
com.umeng.commonsdk.UMConfigure$1: void run()
com.thegrizzlylabs.sardineandroid.model.Source: Source()
com.tencent.bugly.proguard.ao: void e(java.lang.String,java.lang.String,java.lang.String)
io.ktor.utils.io.ExceptionUtilsJvmKt$tryCopyException$4$1: ExceptionUtilsJvmKt$tryCopyException$4$1()
com.umeng.commonsdk.statistics.proto.b: java.lang.String b()
androidx.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
org.jaudiotagger.audio.dsf.ID3Chunk: org.jaudiotagger.audio.dsf.ID3Chunk readChunk(java.nio.ByteBuffer)
org.simpleframework.xml.core.Primitive: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.lang.Class)
com.umeng.commonsdk.UMInnerImpl$1: UMInnerImpl$1(android.content.Context)
org.jaudiotagger.tag.mp4.field.Mp4TagTextField: void copyContent(org.jaudiotagger.tag.TagField)
org.simpleframework.xml.convert.RegistryBinder: org.simpleframework.xml.convert.Converter create(java.lang.Class)
com.alipay.apmobilesecuritysdk.e.g: void a(android.content.Context)
org.simpleframework.xml.Serializer: boolean validate(java.lang.Class,java.lang.String,boolean)
com.tencent.mm.opensdk.modelbiz.WXChannelOpenProfile$Req: WXChannelOpenProfile$Req()
com.umeng.analytics.CoreProtocol: org.json.JSONObject setupReportData(long)
org.jcodec.containers.mp4.boxes.TrunBox: void setDataOffset(int)
com.umeng.commonsdk.UMConfigure: void setFile(java.lang.Class,java.lang.String,java.lang.String)
com.umeng.analytics.pro.o$c: com.umeng.commonsdk.statistics.common.ReportPolicy$ReportStrategy c()
android.support.v4.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
org.repackage.a.a.a.a$a: org.repackage.a.a.a.a a(android.os.IBinder)
com.caij.puremusic.drive.model.PlexPlaylistsResponse: PlexPlaylistsResponse()
com.umeng.commonsdk.internal.utils.d$a: d$a()
com.umeng.commonsdk.statistics.proto.Response: com.umeng.commonsdk.statistics.proto.Response deepCopy()
com.umeng.commonsdk.internal.utils.a: java.lang.String d()
com.thegrizzlylabs.sardineandroid.model.Shared: Shared()
com.caij.puremusic.drive.model.PlexUser$Companion: PlexUser$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: org.jaudiotagger.tag.images.Artwork getFirstArtwork()
com.yalantis.ucrop.view.UCropView: com.yalantis.ucrop.view.GestureCropImageView getCropImageView()
org.jcodec.containers.mp4.boxes.TrackFragmentBaseMediaDecodeTimeBox: long getBaseMediaDecodeTime()
org.simpleframework.xml.stream.Splitter: boolean isLetter(char)
org.jcodec.containers.mp4.boxes.Header: void writeChannel(java.nio.channels.FileChannel)
com.google.android.material.appbar.CollapsingToolbarLayout: android.graphics.Typeface getExpandedTitleTypeface()
org.simpleframework.xml.stream.StreamReader: org.simpleframework.xml.stream.StreamReader$End end()
com.tencent.mm.opensdk.modelmsg.GetMessageFromWX$Req: int getType()
org.jaudiotagger.audio.AudioFile: org.jaudiotagger.audio.AudioHeader getAudioHeader()
org.jaudiotagger.audio.generic.Utils: long getLongLE(java.nio.ByteBuffer,int,int)
org.jaudiotagger.tag.lyrics3.FieldFrameBodyIND: FieldFrameBodyIND(java.nio.ByteBuffer)
com.thegrizzlylabs.sardineandroid.DavResource: java.lang.String getContentType(com.thegrizzlylabs.sardineandroid.model.Response)
com.google.android.material.card.MaterialCardView: android.graphics.RectF getBoundsAsRectF()
com.umeng.commonsdk.framework.a: boolean a()
org.jaudiotagger.tag.datatype.StringDate: boolean equals(java.lang.Object)
org.simpleframework.xml.core.ParameterFactory: java.lang.reflect.Constructor getConstructor(java.lang.annotation.Annotation)
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
org.jaudiotagger.tag.id3.framebody.FrameBodyENCR: java.lang.String getIdentifier()
com.umeng.commonsdk.statistics.proto.e$b: e$b(com.umeng.commonsdk.statistics.proto.e$1)
com.caij.puremusic.drive.model.GoogleDriveFile: java.lang.String getName()
org.simpleframework.xml.core.Composite: boolean validate(org.simpleframework.xml.stream.InputNode,java.lang.Class)
org.simpleframework.xml.core.TreeModel: void validateExpressions(java.lang.Class)
com.tencent.bugly.proguard.z: boolean a(android.app.ActivityManager)
com.thegrizzlylabs.sardineandroid.model.Activelock: Activelock()
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
org.jcodec.containers.mp4.boxes.SoundMediaHeaderBox: SoundMediaHeaderBox(org.jcodec.containers.mp4.boxes.Header)
org.jaudiotagger.tag.id3.framebody.FrameBodyWXXX: FrameBodyWXXX(java.nio.ByteBuffer,int)
com.umeng.commonsdk.statistics.noise.ABTest: void onExperimentChanged(java.lang.String,int)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: void setCredentials(java.lang.String,java.lang.String,boolean)
com.google.common.reflect.TypeToken: TypeToken()
com.tencent.bugly.crashreport.crash.h5.H5JavaScriptInterface: void reportJSException(java.lang.String)
com.thegrizzlylabs.sardineandroid.Sardine: java.lang.String lock(java.lang.String)
com.umeng.commonsdk.statistics.common.ULog: void e(java.lang.String)
com.google.android.material.materialswitch.MaterialSwitch: android.graphics.PorterDuff$Mode getThumbIconTintMode()
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getSerial()
org.jaudiotagger.tag.id3.ID3v1Tag: void setYear(java.lang.String)
com.caij.puremusic.drive.model.EmbyFoldersResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentCreator: VorbisCommentCreator()
com.caij.puremusic.db.model.AlbumQueries$insert$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.jaudiotagger.audio.dsf.FmtChunk: FmtChunk(java.nio.ByteBuffer)
com.umeng.commonsdk.debug.UMRTLog: UMRTLog()
org.jaudiotagger.tag.lyrics3.Lyrics3v2Field: void read(java.nio.ByteBuffer)
com.caij.puremusic.drive.model.DropboxDriveItem: int hashCode()
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
org.simpleframework.xml.stream.InputElement: boolean isRoot()
org.jaudiotagger.tag.id3.ID3v23Frame: org.jaudiotagger.tag.id3.AbstractID3v2Frame$StatusFlags getStatusFlags()
org.jcodec.containers.mp4.boxes.AudioSampleEntry: org.jcodec.containers.mp4.boxes.AudioSampleEntry createAudioSampleEntry(org.jcodec.containers.mp4.boxes.Header,short,short,short,int,short,int,int,int,int,int,int,int,short)
com.tencent.bugly.proguard.ai: void b()
com.caij.puremusic.drive.model.Media$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.simpleframework.xml.stream.PullReader$Entry: java.lang.String getValue()
org.jaudiotagger.tag.id3.framebody.FrameBodyTPE4: FrameBodyTPE4(byte,java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyMLLT: java.lang.String getIdentifier()
com.caij.puremusic.db.model.Song: long component18()
org.jaudiotagger.tag.flac.FlacTag: java.util.List getArtworkList()
com.umeng.analytics.pro.bo: void a(short)
org.jaudiotagger.logging.AbstractTagDisplayFormatter: void addElement(java.lang.String,boolean)
com.caij.puremusic.drive.model.SubsonicAlbum: int getSongCount()
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: java.util.Enumeration preorderEnumeration()
org.simpleframework.xml.transform.RegistryMatcher: void bind(java.lang.Class,java.lang.Class)
org.simpleframework.xml.convert.RegistryBinder: void bind(java.lang.Class,java.lang.Class)
org.jaudiotagger.audio.mp4.Chunk: java.nio.ByteBuffer getData()
com.caij.puremusic.drive.model.MediaContainer$$serializer: com.caij.puremusic.drive.model.MediaContainer deserialize(kotlinx.serialization.encoding.Decoder)
org.simpleframework.xml.filter.MapFilter: java.lang.String replace(java.lang.String)
com.umeng.commonsdk.statistics.common.DeviceConfig: java.util.Properties getBuildProp()
kotlinx.serialization.json.JsonNull$$cachedSerializer$delegate$1: JsonNull$$cachedSerializer$delegate$1()
com.google.android.material.slider.Slider: void setThumbStrokeColor(android.content.res.ColorStateList)
org.simpleframework.xml.core.DetailScanner: boolean isStrict()
com.tencent.bugly.crashreport.crash.anr.TraceFileHelper$b: boolean a(long)
androidx.core.view.ViewCompat$Api26Impl: boolean hasExplicitFocusable(android.view.View)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: void execute(okhttp3.Request)
androidx.fragment.app.Fragment: void onRequestPermissionsResult(int,java.lang.String[],int[])
com.caij.puremusic.drive.model.AMetadata: AMetadata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
androidx.appcompat.widget.SwitchCompat: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
app.cash.sqldelight.ExecutableQuery: java.lang.Object executeAsOne()
com.alipay.apmobilesecuritysdk.face.EnvModeConfig: EnvModeConfig()
androidx.core.view.ViewCompat$Api19Impl: boolean isAttachedToWindow(android.view.View)
org.simpleframework.xml.core.Contact: java.lang.Class getDependent()
com.google.android.material.chip.Chip: void setElevation(float)
com.umeng.commonsdk.UMConfigure: boolean isSilentMode()
org.jaudiotagger.tag.id3.framebody.FrameBodyTSSE: FrameBodyTSSE()
com.tencent.mm.opensdk.modelbiz.WXOpenCustomerServiceChat: WXOpenCustomerServiceChat()
org.simpleframework.xml.transform.DateTransform: DateTransform(java.lang.Class)
com.google.android.material.bottomsheet.BottomSheetBehavior: void setMaxWidth(int)
org.jaudiotagger.audio.asf.data.ContainerType: org.jaudiotagger.audio.asf.data.GUID getContainerGUID()
org.jaudiotagger.audio.asf.util.Utils: void writeUINT16(int,java.io.OutputStream)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: void setExtras(android.media.session.PlaybackState$CustomAction$Builder,android.os.Bundle)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.preference.PreferenceCategory: PreferenceCategory(android.content.Context)
org.simpleframework.xml.transform.ClassTransform: java.lang.Class readPrimitive(java.lang.String)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: boolean isID3V2Header(java.nio.channels.FileChannel)
com.umeng.umzid.Spy: java.lang.String getNativeLibraryVersion()
org.simpleframework.xml.core.Criteria: void set(org.simpleframework.xml.core.Label,java.lang.Object)
kotlinx.coroutines.CoroutineStart: void isLazy$annotations()
com.umeng.umzid.c: void b(android.content.Context,java.lang.String)
org.jaudiotagger.tag.datatype.MultipleTextEncodedStringNullTerminated: int getSize()
com.caij.puremusic.drive.model.SubsonicAlbum: boolean equals(java.lang.Object)
com.google.android.exoplayer2.metadata.scte35.SpliceCommand: SpliceCommand()
org.jaudiotagger.audio.aiff.AiffInfoReader: void calculateBitRate(org.jaudiotagger.audio.generic.GenericAudioHeader)
org.jaudiotagger.audio.ogg.util.OggPageHeader: int u(int)
org.simpleframework.xml.util.WeakCache$SegmentList: java.util.Iterator iterator()
com.caij.puremusic.drive.model.MediaContainer: int component1()
com.umeng.commonsdk.service.UMGlobalContext: android.content.Context getAppContext()
com.caij.puremusic.drive.model.OneDriveFile$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.simpleframework.xml.transform.CurrencyTransform: java.util.Currency read(java.lang.String)
com.umeng.analytics.pro.m: void b(com.umeng.analytics.pro.n)
org.jaudiotagger.tag.id3.ID3Frames: boolean isMultipleAllowed(java.lang.String)
com.caij.puremusic.drive.model.JellyfinLoginResponse$Companion: JellyfinLoginResponse$Companion()
org.jaudiotagger.tag.datatype.TCONString: void addValue(java.lang.String)
com.tencent.bugly.BuglyStrategy: boolean isEnableUserInfo()
com.google.android.material.chip.Chip: void setSingleLine(boolean)
org.jaudiotagger.audio.generic.AbstractTag: java.util.Map getMappedFields()
com.umeng.commonsdk.statistics.proto.a$e: com.umeng.commonsdk.statistics.proto.a$e a(int)
com.tencent.bugly.BuglyStrategy: boolean isMerged()
org.jaudiotagger.tag.id3.ID3v22Frame: void encodeSize(java.nio.ByteBuffer,int)
org.jaudiotagger.tag.id3.framebody.FrameBodyPOPM: java.lang.String getUserFriendlyValue()
androidx.window.layout.SidecarAdapter$translate$checkedFeature$3: SidecarAdapter$translate$checkedFeature$3()
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: java.lang.String fourcc()
org.jaudiotagger.tag.id3.framebody.FrameBodyTCMP: FrameBodyTCMP(byte,java.lang.String)
com.tencent.mmkv.MMKV: byte[] decodeBytes(long,java.lang.String)
org.simpleframework.xml.strategy.Reference: Reference(java.lang.Object,java.lang.Class)
com.alipay.apmobilesecuritysdk.d.e: void c(android.content.Context,java.util.Map)
com.caij.puremusic.drive.model.PlexSectionsResponse: java.lang.String toString()
io.ktor.websocket.FrameType: int access$getMaxOpcode$cp()
org.simpleframework.xml.core.TextParameter: java.lang.annotation.Annotation getAnnotation()
org.jaudiotagger.tag.mp4.field.Mp4TagCoverField: Mp4TagCoverField(byte[])
com.umeng.analytics.filter.EventList: void onImprintValueChanged(java.lang.String,java.lang.String)
org.jaudiotagger.tag.mp4.field.Mp4DiscNoField: java.lang.String bytesToData(byte[])
org.jaudiotagger.tag.InvalidFrameException: InvalidFrameException(java.lang.String)
com.tencent.bugly.proguard.w: boolean a(int,java.lang.String,byte[],boolean)
com.caij.puremusic.drive.model.Location$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.Location)
com.google.android.material.bottomsheet.BottomSheetBehavior$4: boolean releasedLow(android.view.View)
org.jaudiotagger.audio.mp4.Mp4TagWriter: Mp4TagWriter()
org.jaudiotagger.audio.ogg.OggVorbisTagReader: boolean isVorbisSetupHeader(byte[])
org.jaudiotagger.tag.images.AndroidArtwork: java.lang.String getImageUrl()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyINF: void setAdditionalInformation(java.lang.String)
org.simpleframework.xml.core.ExtractorFactory$ElementListExtractor: org.simpleframework.xml.core.Label getLabel(java.lang.annotation.Annotation)
org.simpleframework.xml.stream.OutputNodeMap: org.simpleframework.xml.stream.Node remove(java.lang.String)
androidx.viewpager.widget.ViewPager: int getOffscreenPageLimit()
org.simpleframework.xml.core.CollectionFactory: java.lang.Object getInstance()
org.simpleframework.xml.core.ParameterFactory$ParameterBuilder: java.lang.reflect.Constructor getConstructor()
com.umeng.analytics.pro.a$a$a: java.lang.String d(java.lang.String)
com.umeng.analytics.filter.a: void eventListChange()
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.search.SearchBar: int getMenuResId()
org.simpleframework.xml.core.Scanner: org.simpleframework.xml.core.Signature getSignature()
org.jaudiotagger.audio.mp4.ChunkReader: java.nio.channels.SeekableByteChannel getInput(org.jaudiotagger.audio.mp4.Chunk)
org.simpleframework.xml.stream.OutputNode: org.simpleframework.xml.stream.OutputNode getParent()
org.jaudiotagger.tag.PaddingException: PaddingException(java.lang.String)
com.alipay.apmobilesecuritysdk.d.a: java.util.Map a(android.content.Context,java.util.Map)
androidx.fragment.app.Fragment: android.content.Context requireContext()
org.simpleframework.xml.core.Source: org.simpleframework.xml.Version getVersion(java.lang.Class)
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdCountQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.repackage.com.zui.deviceidservice.IDeviceidInterface$Stub$Proxy: java.lang.String b(java.lang.String)
com.caij.puremusic.drive.model.SearchResult3$Companion: SearchResult3$Companion()
com.umeng.analytics.MobclickAgent: MobclickAgent()
org.simpleframework.xml.core.Context: org.simpleframework.xml.core.Instance getInstance(org.simpleframework.xml.strategy.Value)
com.google.common.io.Files$FilePredicate: Files$FilePredicate(java.lang.String,int,com.google.common.io.Files$1)
com.caij.puremusic.db.model.FolderQueries: app.cash.sqldelight.Query selectById(long)
org.simpleframework.xml.core.Composite: java.lang.Object readInstance(org.simpleframework.xml.stream.InputNode,java.lang.Object,org.simpleframework.xml.core.Label)
org.jaudiotagger.tag.TagOptionSingleton: boolean getLyrics3SaveField(java.lang.String)
org.simpleframework.xml.core.Label: boolean isCollection()
com.umeng.commonsdk.internal.utils.e$a: com.umeng.commonsdk.internal.utils.e$a valueOf(java.lang.String)
com.caij.puremusic.drive.model.JellyfinSongListResponse$Companion: JellyfinSongListResponse$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.caij.puremusic.drive.model.DriveFile: java.lang.String getFilePath()
com.caij.puremusic.drive.model.Prop: void setDisplayname(java.lang.String)
com.alipay.apmobilesecuritysdk.e.i: com.alipay.apmobilesecuritysdk.e.c g()
org.simpleframework.xml.transform.DateTransform: java.lang.String write(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
com.caij.puremusic.model.PlaylistWrapper: com.caij.puremusic.db.model.PlaylistEntity getPlaylistEntity()
com.caij.puremusic.drive.model.Response: void getPropstat$annotations()
org.simpleframework.xml.core.ElementMapUnionLabel: java.lang.String getName()
com.caij.puremusic.drive.model.PlayListItem: PlayListItem(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,long,java.lang.String,int,java.lang.String,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.caij.puremusic.db.model.SongQueries$SongsByNameArtistQuery: SongQueries$SongsByNameArtistQuery(com.caij.puremusic.db.model.SongQueries,java.lang.String,java.lang.String,kotlin.jvm.functions.Function1)
com.google.android.material.textfield.TextInputLayout: void setStartIconScaleType(android.widget.ImageView$ScaleType)
app.cash.sqldelight.ExecutableQuery: ExecutableQuery(kotlin.jvm.functions.Function1)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: java.lang.String finderShareVideoJumpInfoToString(com.tencent.mm.opensdk.modelbiz.IWXChannelJumpInfo)
com.caij.puremusic.drive.model.PlaylistsMediaContainer: com.caij.puremusic.drive.model.PlaylistsMediaContainer copy(java.util.List)
org.simpleframework.xml.core.ElementLabel: boolean isRequired()
com.umeng.analytics.pro.x: void a(long)
com.caij.puremusic.db.model.SongEntity: long component2()
org.simpleframework.xml.core.Persister: void write(java.lang.Object,org.simpleframework.xml.stream.OutputNode,org.simpleframework.xml.core.Context)
org.jaudiotagger.tag.TagOptionSingleton: org.jaudiotagger.tag.TagOptionSingleton getInstance(java.lang.String)
com.afollestad.materialdialogs.color.view.PreviewFrameView: PreviewFrameView(android.content.Context,android.util.AttributeSet)
com.afollestad.materialdialogs.internal.message.DialogContentLayout: com.afollestad.materialdialogs.internal.main.DialogLayout getRootLayout()
com.umeng.commonsdk.statistics.idtracking.e: void b(com.umeng.commonsdk.statistics.proto.c)
org.simpleframework.xml.core.GetPart: java.lang.Class getDeclaringClass()
com.thegrizzlylabs.sardineandroid.model.Multistatus: java.lang.String getResponsedescription()
org.jaudiotagger.audio.AudioFileIO: void prepareReadersAndWriters()
com.thegrizzlylabs.sardineandroid.Sardine: boolean exists(java.lang.String)
org.simpleframework.xml.transform.URLTransform: java.lang.Object read(java.lang.String)
com.caij.puremusic.db.model.FolderQueries: app.cash.sqldelight.db.SqlDriver access$getDriver(com.caij.puremusic.db.model.FolderQueries)
com.caij.puremusic.db.model.PlaylistEntityQueries$getPlaylistEntityById$1: PlaylistEntityQueries$getPlaylistEntityById$1(kotlin.jvm.functions.Function2)
org.jaudiotagger.logging.PlainTextTagDisplayFormatter: void addElement(java.lang.String,java.lang.String)
org.simpleframework.xml.stream.EventAttribute: EventAttribute()
org.simpleframework.xml.stream.InputNode: void skip()
com.caij.puremusic.drive.model.ArtistItem$Companion: ArtistItem$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.umeng.analytics.pro.bn: java.lang.String z()
com.yalantis.ucrop.view.TransformImageView: int getMaxBitmapSize()
com.caij.puremusic.lyrics.SimpleLrcView: SimpleLrcView(android.content.Context,android.util.AttributeSet)
org.simpleframework.xml.transform.BigIntegerTransform: java.lang.String write(java.lang.Object)
kotlinx.serialization.SerializersCacheKt$SERIALIZERS_CACHE$1: SerializersCacheKt$SERIALIZERS_CACHE$1()
com.umeng.analytics.pro.e$b$a: e$b$a()
com.umeng.analytics.pro.ab$1: ab$1(com.umeng.analytics.pro.ab)
com.tencent.bugly.proguard.bp: bp()
com.tencent.mm.opensdk.modelmsg.WXLiteAppObject: WXLiteAppObject()
com.caij.puremusic.drive.model.SearchResult3: java.lang.String toString()
com.caij.puremusic.drive.model.AMediaContainer: com.caij.puremusic.drive.model.AMediaContainer copy$default(com.caij.puremusic.drive.model.AMediaContainer,java.util.List,int,java.lang.Object)
com.caij.puremusic.db.model.SearchAlbumResultQueries$getById$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
org.jaudiotagger.audio.exceptions.UnableToModifyFileException: UnableToModifyFileException(java.lang.String)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
com.umeng.commonsdk.statistics.common.MLog: void d(java.lang.String)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: long getActiveQueueItemId(android.media.session.PlaybackState)
me.tankery.lib.circularseekbar.CircularSeekBar: int getPointerAlphaOnTouch()
com.umeng.analytics.pro.an: com.umeng.analytics.pro.bp L()
org.jaudiotagger.tag.id3.ID3v1TagField: void isBinary(boolean)
org.jaudiotagger.audio.SupportedFileFormat$16: SupportedFileFormat$16(java.lang.String,int,java.lang.String)
com.caij.puremusic.db.model.ServerArtistCover: ServerArtistCover(java.lang.String,long,java.lang.String)
org.simpleframework.xml.core.Template: void append(org.simpleframework.xml.core.Template,int,int)
com.caij.puremusic.db.model.ArtistQueries$ArtistByNameQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.simpleframework.xml.core.ElementMapLabel: java.lang.annotation.Annotation getAnnotation()
org.jaudiotagger.tag.aiff.AiffTag: void addChunkSummary(org.jaudiotagger.audio.iff.ChunkSummary)
nl.adaptivity.xmlutil.EventType: nl.adaptivity.xmlutil.XmlEvent createEvent(nl.adaptivity.xmlutil.XmlReader)
androidx.fragment.app.Fragment: boolean performPrepareOptionsMenu(android.view.Menu)
org.jcodec.containers.mp4.boxes.AudioSampleEntry: boolean isPCM()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
org.jaudiotagger.utils.tree.EventListenerList: void writeObject(java.io.ObjectOutputStream)
org.simpleframework.xml.core.CompositeMapUnion: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object)
com.google.common.collect.MapMakerInternalMap$Strength: com.google.common.collect.MapMakerInternalMap$Strength[] $values()
com.umeng.commonsdk.framework.UMWorkDispatch: void Quit()
com.google.android.material.materialswitch.MaterialSwitch: void setTrackTintMode(android.graphics.PorterDuff$Mode)
com.tencent.mm.opensdk.modelbiz.JoinChatroom$Resp: void toBundle(android.os.Bundle)
com.google.common.collect.ForwardingObject: ForwardingObject()
com.google.android.material.search.SearchView: android.widget.TextView getSearchPrefix()
com.caij.puremusic.drive.model.PlayListSubsonicResponse$Companion: PlayListSubsonicResponse$Companion()
org.jaudiotagger.audio.asf.data.Chunk: java.math.BigInteger getChunkLength()
org.jaudiotagger.tag.lyrics3.Lyrics3v2: int getFieldCount()
org.jaudiotagger.audio.dsf.DsfChunkType: java.lang.String getCode()
com.umeng.commonsdk.statistics.common.d$b: boolean b(java.io.File)
com.caij.puremusic.db.model.SongQueries$GetSongBySourceQuery$execute$1: SongQueries$GetSongBySourceQuery$execute$1(com.caij.puremusic.db.model.SongQueries$GetSongBySourceQuery)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()
org.simpleframework.xml.stream.OutputDocument: org.simpleframework.xml.stream.NamespaceMap getNamespaces()
org.jaudiotagger.tag.datatype.StringNullTerminated: StringNullTerminated(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody)
org.simpleframework.xml.core.ElementMapParameter$Contact: ElementMapParameter$Contact(org.simpleframework.xml.ElementMap,java.lang.reflect.Constructor,int)
org.jcodec.containers.mp4.boxes.ChunkOffsetsBox: void doWrite(java.nio.ByteBuffer)
com.caij.puremusic.MainModuleKt$viewModules$1$2: MainModuleKt$viewModules$1$2()
com.umeng.analytics.pro.s: org.json.JSONObject a(java.util.Map)
com.caij.puremusic.drive.model.GoogleDriveFile: void write$Self(com.caij.puremusic.drive.model.GoogleDriveFile,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
org.jaudiotagger.tag.id3.ID3v23Frame: void read(java.nio.ByteBuffer)
com.umeng.commonsdk.internal.utils.k: void b(android.content.Context,java.lang.String[])
org.jaudiotagger.audio.opus.OpusFileWriter: OpusFileWriter()
com.umeng.commonsdk.UMConfigure: java.lang.Class getClass(java.lang.String)
org.xmlpull.v1.XmlPullParser: <clinit>()
com.tencent.mm.opensdk.modelbiz.WXChannelShareVideo$Resp: WXChannelShareVideo$Resp()
com.caij.puremusic.drive.model.Metadata: int component15()
org.jcodec.containers.mp4.boxes.SampleToChunkBox$SampleToChunkEntry: void setEntry(int)
com.caij.puremusic.drive.model.Directory: Directory(java.lang.String,java.lang.String,java.lang.String)
org.jaudiotagger.utils.tree.TreeNode: org.jaudiotagger.utils.tree.TreeNode getParent()
org.jaudiotagger.tag.id3.ID3Compression: ID3Compression()
com.caij.puremusic.drive.model.ImageTags: ImageTags(int,java.lang.String,kotlinx.serialization.internal.SerializationConstructorMarker)
com.umeng.analytics.pro.ch: ch(byte[])
com.tencent.mm.opensdk.utils.Log: void e(java.lang.String,java.lang.String)
com.tencent.bugly.crashreport.CrashReport: void enableBugly(boolean)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: org.jaudiotagger.utils.tree.DefaultMutableTreeNode getPreviousSibling()
org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId: void b(java.lang.String)
org.jaudiotagger.tag.id3.ID3v23Frame: ID3v23Frame(org.jaudiotagger.tag.id3.ID3v23Frame)
com.caij.puremusic.views.SettingListItemView: void setTitle(java.lang.String)
org.simpleframework.xml.stream.OutputElement: boolean isCommitted()
androidx.constraintlayout.widget.ConstraintHelper: ConstraintHelper(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
com.google.android.material.card.MaterialCardView: MaterialCardView(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.audio.flac.FlacStreamReader: int getStartOfFlacInFile()
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportWifiOnly: ReportPolicy$ReportWifiOnly(android.content.Context)
com.tencent.mm.opensdk.modelmsg.ShowMessageFromWX$Req: ShowMessageFromWX$Req()
org.jaudiotagger.tag.TagOptionSingleton: void setCheckIsWritable(boolean)
com.umeng.analytics.pro.v: void a(android.content.Context)
com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable: AbstractSafeParcelable()
com.tencent.mm.opensdk.modelbiz.ChooseCardFromWXCardPackage$Req: boolean checkArgs()
org.jaudiotagger.tag.datatype.PartOfSet: org.jaudiotagger.tag.datatype.PartOfSet$PartOfSetValue getValue()
com.thegrizzlylabs.sardineandroid.model.Propstat: void setProp(com.thegrizzlylabs.sardineandroid.model.Prop)
org.jcodec.containers.mp4.boxes.Header: int hashCode()
com.thegrizzlylabs.sardineandroid.model.Acl: Acl()
com.umeng.commonsdk.statistics.a: a()
org.jaudiotagger.utils.DirectByteBufferUtils$UnsupportedJvmReleaseStrategy: DirectByteBufferUtils$UnsupportedJvmReleaseStrategy()
com.umeng.commonsdk.internal.c: void b(android.content.Context)
com.caij.puremusic.db.model.SongQueries$deleteSongBySource$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.caij.puremusic.db.model.HistoryEntityQueries$clear$1: void invoke(kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
com.caij.puremusic.drive.model.AlbumArtist: java.lang.String getName()
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: java.lang.String formatDateAsDate(java.util.Date)
com.umeng.analytics.vshelper.PageNameMonitor: void customPageBegin(java.lang.String)
org.jaudiotagger.test.MergeID3AndMP3Files$MP3FileFilter: java.lang.String getDescription()
com.tencent.bugly.proguard.aq: void a(android.content.Context)
org.simpleframework.xml.stream.InputNodeMap: org.simpleframework.xml.stream.Node put(java.lang.String,java.lang.String)
com.google.android.gms.internal.play_billing.zzbt: com.google.android.gms.internal.play_billing.zzbt[] values()
org.jaudiotagger.tag.asf.AsfTag: org.jaudiotagger.tag.TagField copyFrom(org.jaudiotagger.tag.TagField)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
androidx.gridlayout.widget.GridLayout: void setColumnCount(int)
org.jaudiotagger.tag.mp4.field.Mp4TagReverseDnsField: java.nio.charset.Charset getEncoding()
com.google.common.hash.BloomFilterStrategies: com.google.common.hash.BloomFilterStrategies valueOf(java.lang.String)
com.caij.puremusic.drive.model.PlexPlaylistsResponse$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.caij.puremusic.db.model.ServerSongCoverQueries$GetBySourceQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.umeng.common.b: com.umeng.common.b a(android.content.Context)
com.caij.puremusic.drive.model.MediaInfoWrapper: java.util.List component3()
com.caij.puremusic.drive.model.MediaContainer$$serializer: MediaContainer$$serializer()
com.caij.puremusic.drive.model.SubPlayList: boolean equals(java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyTPOS: FrameBodyTPOS(java.nio.ByteBuffer,int)
org.jcodec.containers.mp4.boxes.FormatBox: void parse(java.nio.ByteBuffer)
com.caij.puremusic.drive.model.MediaStream: int getIndex()
com.caij.puremusic.db.model.ArtistQueries$ArtistByNameQuery: void addListener(app.cash.sqldelight.Query$Listener)
org.jaudiotagger.tag.reference.PictureTypes: org.jaudiotagger.tag.reference.PictureTypes getInstanceOf()
org.jaudiotagger.tag.id3.AbstractTagFrameBody: java.lang.Object getObjectValue(java.lang.String)
com.alipay.android.app.IRemoteServiceCallback: void startActivity(java.lang.String,java.lang.String,int,android.os.Bundle)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyNumberTotal: java.lang.String getUserFriendlyValue()
com.caij.puremusic.drive.model.EmbyFoldersResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.EmbyFoldersResponse)
org.simpleframework.xml.util.Dictionary$Table: Dictionary$Table()
com.thegrizzlylabs.sardineandroid.model.Ace: com.thegrizzlylabs.sardineandroid.model.Grant getGrant()
com.umeng.analytics.pro.bu: com.umeng.analytics.pro.bp l()
org.jaudiotagger.tag.mp4.Mp4FieldKey: Mp4FieldKey(java.lang.String,int,java.lang.String,java.lang.String,org.jaudiotagger.tag.mp4.field.Mp4FieldType,org.jaudiotagger.tag.reference.Tagger)
com.caij.puremusic.model.DriveFileParcelable: java.lang.String component5()
org.jaudiotagger.utils.tree.TreeModelEvent: java.lang.Object[] getChildren()
com.google.android.material.search.SearchView: void setHint(int)
com.caij.puremusic.drive.model.JellyfinFolder$$serializer: JellyfinFolder$$serializer()
org.jaudiotagger.tag.id3.ID3v23Frames: org.jaudiotagger.tag.FieldKey getGenericKeyFromId3(org.jaudiotagger.tag.id3.ID3v23FieldKey)
org.jaudiotagger.tag.id3.ID3Tags: java.lang.String convertFrameID22To24(java.lang.String)
com.umeng.analytics.pro.o: org.json.JSONObject a(org.json.JSONObject,long)
com.caij.puremusic.drive.model.DriveFile: java.lang.String getFileName()
com.caij.puremusic.drive.model.JellyfinArtistResponse$Companion: JellyfinArtistResponse$Companion()
com.tencent.mm.opensdk.modelpay.WXJointPay$JointPayResp: boolean checkArgs()
com.caij.puremusic.lyrics.CoverLrcView: int getCenterLine()
org.jaudiotagger.audio.wav.chunk.WavFactChunk: boolean readChunk()
com.umeng.commonsdk.statistics.proto.Response: void read(com.umeng.analytics.pro.bu)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSSE: FrameBodyTSSE(org.jaudiotagger.tag.id3.framebody.FrameBodyTSSE)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
com.umeng.commonsdk.statistics.proto.b$e: java.lang.String b()
com.caij.puremusic.drive.model.JellyfinPlaylistsResponse: int component2()
org.jaudiotagger.tag.id3.framebody.FrameBodySYTC: boolean removeTempo(long)
org.jaudiotagger.tag.id3.framebody.FrameBodyTKEY: FrameBodyTKEY()
androidx.core.widget.TextViewCompat$Api24Impl: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)
org.simpleframework.xml.core.ClassType: java.lang.String toString()
org.jaudiotagger.tag.id3.framebody.FrameBodyMVIN: FrameBodyMVIN(java.nio.ByteBuffer,int)
org.simpleframework.xml.stream.InputElement: org.simpleframework.xml.stream.NodeMap getAttributes()
org.simpleframework.xml.transform.ArrayTransform: java.lang.String write(java.lang.Object)
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean isFitToContents()
org.simpleframework.xml.stream.InputAttribute: org.simpleframework.xml.stream.InputNode getParent()
org.jcodec.containers.mp4.boxes.CompositionOffsetsBox: org.jcodec.containers.mp4.boxes.CompositionOffsetsBox$Entry[] getEntries()
com.google.android.material.slider.Slider: int getThumbRadius()
org.simpleframework.xml.stream.NodeReader: boolean isEmpty(org.simpleframework.xml.stream.InputNode)
com.umeng.analytics.pro.an: com.umeng.analytics.pro.bc fieldForId(int)
org.jaudiotagger.tag.datatype.SynchronisedTempoCodeList: SynchronisedTempoCodeList(org.jaudiotagger.tag.id3.framebody.FrameBodySYTC)
org.simpleframework.xml.stream.OutputAttribute: void setReference(java.lang.String)
org.jaudiotagger.tag.asf.AsfFieldKey: AsfFieldKey(java.lang.String,int,java.lang.String,boolean,org.jaudiotagger.audio.asf.data.ContainerType,org.jaudiotagger.audio.asf.data.ContainerType)
com.umeng.commonsdk.statistics.common.DeviceConfig: int getTimeZone(android.content.Context)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture: java.lang.String getString(java.nio.ByteBuffer,int,java.lang.String)
com.caij.puremusic.drive.model.Metadata: java.lang.String getTitle()
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.lang.Long getEndLocationInFile()
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox$Factory create(int)
com.thegrizzlylabs.sardineandroid.Sardine: java.util.List getResources(java.lang.String)
org.jaudiotagger.tag.TagOptionSingleton: void setToDefault()
com.caij.puremusic.drive.model.OneDriveItem: OneDriveItem(java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,com.caij.puremusic.drive.model.OneDriveFolder,com.caij.puremusic.drive.model.OneDriveFile,com.caij.puremusic.drive.model.ParentReference)
com.umeng.commonsdk.statistics.proto.d: com.umeng.analytics.pro.av deepCopy()
org.simpleframework.xml.core.LabelExtractor: org.simpleframework.xml.core.LabelGroup getLabels(org.simpleframework.xml.core.Contact,java.lang.annotation.Annotation)
com.caij.puremusic.drive.model.SongItem: com.caij.puremusic.drive.model.SongItem copy$default(com.caij.puremusic.drive.model.SongItem,java.lang.String,java.lang.String,java.lang.String,long,int,boolean,java.lang.String,java.lang.String,java.util.List,java.util.List,java.lang.String,java.lang.String,java.util.List,java.util.Map,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,int,java.lang.Object)
org.jcodec.containers.mp4.boxes.DataBox: java.lang.String fourcc()
org.jcodec.containers.mp4.boxes.TrunBox: int flagsGetSampleDegradationPriority(int)
com.google.android.material.bottomnavigation.BottomNavigationItemView: int getItemDefaultMarginResId()
com.tencent.mm.opensdk.modelbiz.WXLaunchWxaRedirectingPage$Req: void toBundle(android.os.Bundle)
com.caij.puremusic.drive.model.Prop: java.lang.String getCreationdate()
kotlin.reflect.KVariance: kotlin.reflect.KVariance[] $values()
com.umeng.commonsdk.statistics.proto.a: com.umeng.commonsdk.statistics.proto.a c(java.lang.String)
com.caij.puremusic.drive.model.AlbumItem$$serializer: AlbumItem$$serializer()
com.caij.puremusic.drive.model.SubsonicResponse: void write$Self(com.caij.puremusic.drive.model.SubsonicResponse,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: java.lang.String toString()
com.caij.puremusic.drive.model.PlexSectionsResponse$Companion: PlexSectionsResponse$Companion()
nl.adaptivity.xmlutil.serialization.structure.XmlOrderNode$toString$2: XmlOrderNode$toString$2()
org.jaudiotagger.tag.datatype.SynchronisedTempoCodeList: org.jaudiotagger.tag.datatype.AbstractDataType createListElement()
org.repackage.com.meizu.flyme.openidsdk.OpenIdHelper: void a(boolean)
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getNetworkOperatorName(android.content.Context)
org.simpleframework.xml.Serializer: java.lang.Object read(java.lang.Class,java.io.Reader,boolean)
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String[] getLocaleInfo(android.content.Context)
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
org.jaudiotagger.tag.id3.ID3v24Frame: int getFrameIdSize()
com.caij.puremusic.drive.model.Resourcetype$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.umeng.analytics.pro.ao: boolean b(java.lang.String)
com.tencent.mm.opensdk.modelmsg.WXLocationObject: boolean checkArgs()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
com.tencent.bugly.proguard.i: com.tencent.bugly.proguard.i a(java.util.Collection,java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: FrameBodyTDRC(org.jaudiotagger.tag.id3.framebody.FrameBodyTYER)
com.google.android.material.appbar.CollapsingToolbarLayout: void setContentScrimResource(int)
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
org.jaudiotagger.tag.lyrics3.Lyrics3v1: java.util.Iterator iterator()
com.tencent.mm.opensdk.openapi.MMSharedPreferences: boolean contains(java.lang.String)
com.tencent.bugly.proguard.k: int[] f(int,boolean)
com.caij.puremusic.network.model.SearchResponse: com.caij.puremusic.network.model.ArtistWrapper getArtists()
org.jaudiotagger.audio.asf.io.FileHeaderReader: org.jaudiotagger.audio.asf.data.Chunk read(org.jaudiotagger.audio.asf.data.GUID,java.io.InputStream,long)
com.tencent.bugly.crashreport.CrashReport: java.lang.String getUserId()
com.tencent.bugly.crashreport.CrashReport: java.lang.String getBuglyVersion(android.content.Context)
org.simpleframework.xml.core.Criteria: org.simpleframework.xml.core.Variable remove(java.lang.Object)
com.caij.puremusic.db.model.SongEntityQueries$CheckSongPlaylistExistsQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
org.simpleframework.xml.core.CompositeArray: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.lang.Object)
org.simpleframework.xml.core.ExtractorFactory$ElementExtractor: ExtractorFactory$ElementExtractor(org.simpleframework.xml.core.Contact,org.simpleframework.xml.ElementUnion,org.simpleframework.xml.stream.Format)
com.caij.puremusic.db.model.ServerSongCoverQueries$deleteById$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.umeng.analytics.pro.an: boolean m()
org.jaudiotagger.utils.tree.TreeModel: boolean isLeaf(java.lang.Object)
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: void setAudioChannels(byte)
org.jcodec.containers.mp4.boxes.CompositionOffsetsBox: void parse(java.nio.ByteBuffer)
androidx.fragment.app.DialogFragment: void onViewStateRestored(android.os.Bundle)
com.tencent.mm.opensdk.modelmsg.WXLocationObject: void unserialize(android.os.Bundle)
org.simpleframework.xml.core.Signature: java.util.Iterator iterator()
org.jcodec.containers.mp4.boxes.FielExtension: void doWrite(java.nio.ByteBuffer)
com.caij.puremusic.activities.FolderManagerActivity: FolderManagerActivity()
com.umeng.analytics.pro.an$d: an$d(com.umeng.analytics.pro.an$1)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)
com.umeng.commonsdk.statistics.idtracking.i: java.lang.String f()
com.umeng.analytics.pro.an: void h(boolean)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: java.util.Enumeration depthFirstEnumeration()
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: boolean setNativeLaunchTime(long)
com.google.common.hash.LittleEndianByteArray$UnsafeByteArray$2: long getLongLittleEndian(byte[],int)
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: LogEventDropped$Reason(java.lang.String,int,int)
com.tencent.bugly.proguard.i: com.tencent.bugly.proguard.i a(double,java.lang.String)
com.umeng.commonsdk.statistics.proto.c: void n()
com.caij.puremusic.db.model.AlbumQueries$albums$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
org.simpleframework.xml.core.TextLabel: java.lang.Object getEmpty(org.simpleframework.xml.core.Context)
com.caij.puremusic.drive.model.PlaylistResponse$Companion: kotlinx.serialization.KSerializer serializer()
com.caij.puremusic.drive.model.PlexPlaylistsResponse$$serializer: PlexPlaylistsResponse$$serializer()
com.tencent.bugly.crashreport.BuglyLog: void v(java.lang.String,java.lang.String)
com.tencent.bugly.proguard.ab: long k()
org.jaudiotagger.tag.id3.ID3v23Frame$EncodingFlags: void unsetNonStandardFlags()
com.umeng.commonsdk.statistics.common.ULog: java.lang.String getStackTrace(java.lang.Throwable)
com.caij.puremusic.db.model.PlayCountEntityQueries: app.cash.sqldelight.Query checkSongExistInPlayCount(long)
com.caij.puremusic.drive.model.Propstat: void getStatus$annotations()
org.jaudiotagger.audio.mp3.LameFrame: java.lang.String getEncoder()
com.caij.puremusic.drive.model.Prop: java.lang.String getGetcontentlength()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
org.simpleframework.xml.core.Template: void clear()
com.thegrizzlylabs.sardineandroid.model.Remove: void setProp(com.thegrizzlylabs.sardineandroid.model.Prop)
com.umeng.analytics.b: void a(android.content.Context,java.util.List)
kotlin.jvm.internal.PropertyReference: PropertyReference()
org.jcodec.containers.mp4.MP4Util: void doWriteMovieToChannel(java.nio.channels.FileChannel,org.jcodec.containers.mp4.boxes.MovieBox,int)
org.jaudiotagger.tag.TagOptionSingleton: void setLyrics3Save(boolean)
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingRight()
com.umeng.commonsdk.statistics.common.DataHelper: byte[] encrypt(byte[],byte[])
org.jaudiotagger.tag.datatype.TCONString: java.util.List getValues()
org.jaudiotagger.tag.reference.ID3V2Version: org.jaudiotagger.tag.reference.ID3V2Version valueOf(java.lang.String)
com.google.android.material.internal.NavigationMenuView: NavigationMenuView(android.content.Context,android.util.AttributeSet)
android.support.v4.media.session.MediaSessionCompat$QueueItem$Api21Impl: android.media.session.MediaSession$QueueItem createQueueItem(android.media.MediaDescription,long)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: NetworkConnectionInfo$MobileSubtype(java.lang.String,int,int)
com.caij.puremusic.drive.model.PlayListSubsonicResponse$Companion: PlayListSubsonicResponse$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.slider.Slider: android.content.res.ColorStateList getTickTintList()
org.simpleframework.xml.core.InstanceFactory$ClassInstance: InstanceFactory$ClassInstance(org.simpleframework.xml.core.InstanceFactory,java.lang.Class)
com.caij.puremusic.drive.model.GoogleDriveFile: java.lang.String getMimeType()
org.jaudiotagger.tag.lyrics3.Lyrics3v2: boolean hasField(java.lang.String)
com.tencent.bugly.proguard.l: void a(java.util.Map,int)
org.jaudiotagger.tag.datatype.SynchronisedTempoCode: int getSize()
com.tencent.bugly.proguard.ay: void b()
org.jaudiotagger.tag.TagOptionSingleton: void setAPICDescriptionITunesCompatible(boolean)
org.simpleframework.xml.core.ParameterFactory$ParameterBuilder: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class)
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$clear$1: DriveFileDownUrlInfoQueries$clear$1()
com.umeng.analytics.pro.f: void b(android.database.sqlite.SQLiteDatabase)
com.tencent.mm.opensdk.modelbiz.WXOpenBusinessWebview$Resp: boolean checkArgs()
com.caij.puremusic.drive.model.SongItem$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: void remove(int)
org.jaudiotagger.tag.images.StandardArtwork: java.lang.String getImageUrl()
com.google.gson.LongSerializationPolicy: LongSerializationPolicy(java.lang.String,int,com.google.gson.LongSerializationPolicy$1)
org.jaudiotagger.audio.mp4.Mp4AudioHeader: Mp4AudioHeader()
com.umeng.commonsdk.internal.d: org.json.JSONArray l(android.content.Context)
org.simpleframework.xml.core.ElementMapUnionLabel: boolean isRequired()
org.jaudiotagger.audio.aiff.AiffInfoReader: org.jaudiotagger.audio.iff.Chunk createChunk(java.nio.channels.FileChannel,org.jaudiotagger.audio.iff.ChunkHeader,org.jaudiotagger.audio.aiff.AiffAudioHeader)
org.jaudiotagger.audio.asf.data.StreamBitratePropertiesChunk: void addBitrateRecord(int,long)
com.tencent.bugly.proguard.k$a: k$a()
org.jaudiotagger.tag.id3.ID3v11Tag: java.util.List getTrack()
androidx.core.widget.CompoundButtonCompat$Api23Impl: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
com.caij.puremusic.drive.model.AlbumResponse: void getSubsonicResponse$annotations()
com.thegrizzlylabs.sardineandroid.util.EntityWithAnyElementConverter: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object)
org.jcodec.containers.mp4.boxes.SegmentIndexBox: void doWrite(java.nio.ByteBuffer)
com.umeng.umzid.c: java.lang.String b(java.lang.String)
com.tencent.bugly.CrashModule: com.tencent.bugly.CrashModule getInstance()
org.jcodec.containers.mp4.boxes.Box$LeafBox: void doWrite(java.nio.ByteBuffer)
org.jaudiotagger.tag.mp4.field.Mp4TagBinaryField: Mp4TagBinaryField(java.lang.String)
org.jaudiotagger.tag.id3.ID3v1Tag: java.util.List getYear()
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.caij.puremusic.db.model.SongQueries$SongsByTitleQuery$execute$1: void invoke(app.cash.sqldelight.db.SqlPreparedStatement)
com.alipay.android.phone.mrpc.core.RpcException: java.lang.String getOperationType()
com.tencent.mm.opensdk.diffdev.a.d: java.lang.String toString()
com.tencent.mm.opensdk.modelbiz.WXLaunchWxaRedirectingPage$Resp: WXLaunchWxaRedirectingPage$Resp(android.os.Bundle)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.tag.TagOptionSingleton: void setPreserveFileIdentity(boolean)
org.simpleframework.xml.core.CompositeMapUnion: void write(org.simpleframework.xml.stream.OutputNode,java.util.Map)
com.caij.puremusic.drive.model.SubsonicPlaylist: java.lang.String getName()
com.google.android.material.bottomsheet.BottomSheetDialog: android.widget.FrameLayout ensureContainerAndBehavior()
org.simpleframework.xml.core.GroupExtractor: boolean isDeclared(java.lang.Class)
com.caij.puremusic.model.PlaylistWrapper: java.lang.String toString()
org.simpleframework.xml.core.Model: java.lang.String getPrefix()
org.jaudiotagger.audio.asf.data.MetadataDescriptor: byte[] getRawData()
com.thegrizzlylabs.sardineandroid.model.Propertyupdate: Propertyupdate()
org.jaudiotagger.tag.id3.framebody.FrameBodyUSLT: void setupObjectList()
com.umeng.commonsdk.statistics.AnalyticsConstants: int getDeviceType()
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setShadowDrawableRight(android.graphics.drawable.Drawable)
com.umeng.analytics.pro.bn: void a(double)
org.jcodec.containers.mp4.Boxes: java.lang.Class toClass(java.lang.String)
com.caij.puremusic.db.model.DriveFileDownUrlInfo: com.caij.puremusic.db.model.DriveFileDownUrlInfo copy(java.lang.String,long,java.lang.String,long)
com.tencent.bugly.crashreport.inner.InnerApi: void postH5CrashAsync(java.lang.Thread,java.lang.String,java.lang.String,java.lang.String,java.util.Map)
org.simpleframework.xml.core.Persister: boolean validate(java.lang.Class,java.io.File)
com.caij.puremusic.db.model.SongEntityQueries$isSongExistsInPlaylist$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
org.jaudiotagger.audio.mp4.Flatten: java.io.File resolveDataRef(org.jcodec.containers.mp4.boxes.Box)
com.caij.puremusic.drive.model.SongItem: java.lang.String getAlbum()
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] values()
org.repackage.com.vivo.identifier.IdentifierIdObserver: void onChange(boolean)
org.simpleframework.xml.core.Context: org.simpleframework.xml.core.Instance getInstance(java.lang.Class)
org.simpleframework.xml.core.TreeModel: boolean isEmpty()
androidx.fragment.app.Fragment: java.lang.Object getHost()
com.caij.puremusic.db.model.ServerLyricsQueries: ServerLyricsQueries(app.cash.sqldelight.db.SqlDriver)
com.caij.puremusic.drive.model.AlbumMetadata$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.umeng.commonsdk.statistics.proto.c$a: void a(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
org.jaudiotagger.tag.id3.ID3v23PreferredFrameOrderComparator: ID3v23PreferredFrameOrderComparator()
com.caij.puremusic.drive.model.PlaylistsMediaContainer$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.umeng.analytics.pro.e$d$b: e$d$b()
org.jaudiotagger.audio.generic.AudioFileWriter: void deleteTag(org.jaudiotagger.tag.Tag,java.io.RandomAccessFile,java.io.RandomAccessFile)
org.simpleframework.xml.stream.NamespaceMap: java.lang.String setReference(java.lang.String)
com.caij.puremusic.drive.model.SubsonicSong$$serializer: SubsonicSong$$serializer()
com.caij.puremusic.drive.model.PlayListsResponse$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.alipay.android.phone.mrpc.core.q: com.alipay.android.phone.mrpc.core.o a()
org.jaudiotagger.audio.flac.FlacTagWriter$MetadataBlockInfo: org.jaudiotagger.audio.flac.metadatablock.MetadataBlock access$100(org.jaudiotagger.audio.flac.FlacTagWriter$MetadataBlockInfo)
org.jaudiotagger.tag.aiff.AiffTag: int getFieldCount()
com.umeng.commonsdk.statistics.proto.d$e: com.umeng.commonsdk.statistics.proto.d$e b(int)
com.tencent.bugly.proguard.ac: boolean b()
androidx.core.view.ViewCompat$Api26Impl: boolean restoreDefaultFocus(android.view.View)
com.caij.puremusic.model.Genre: void writeToParcel(android.os.Parcel,int)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void setField(org.jaudiotagger.tag.TagField)
org.repackage.com.heytap.openid.sdk.OpenIDSDK: OpenIDSDK()
org.simpleframework.xml.core.Parameter: java.lang.String getName()
com.caij.puremusic.network.model.Artist: java.lang.String component4()
org.jaudiotagger.tag.asf.AsfTagField: boolean isBinary()
com.umeng.commonsdk.framework.UMEnvelopeBuild: org.json.JSONObject buildSilentEnvelopeWithExtHeader(android.content.Context,org.json.JSONObject,org.json.JSONObject,java.lang.String)
com.tencent.bugly.proguard.au: void a(com.tencent.bugly.proguard.au,java.lang.Thread,int,java.lang.String,java.lang.String,java.lang.String,java.util.Map)
org.jaudiotagger.audio.mp3.MP3File: org.jaudiotagger.tag.id3.ID3v1Tag getID3v1Tag()
com.caij.puremusic.drive.model.PlayListsResponse: PlayListsResponse()
com.umeng.analytics.pro.f: void a()
org.simpleframework.xml.convert.ConvertException: ConvertException(java.lang.String,java.lang.Object[])
org.jaudiotagger.audio.mp3.MPEGFrameHeader: int getNoOfSamples()
org.jaudiotagger.tag.datatype.Lyrics3Line: boolean equals(java.lang.Object)
com.caij.puremusic.drive.model.ADriveItem: java.lang.String component1()
org.simpleframework.xml.transform.PackageMatcher: org.simpleframework.xml.transform.Transform matchSQL(java.lang.Class)
org.jaudiotagger.audio.asf.AsfFileReader: org.jaudiotagger.audio.generic.GenericAudioHeader getAudioHeader(org.jaudiotagger.audio.asf.data.AsfHeader)
org.simpleframework.xml.Version: boolean required()
com.umeng.commonsdk.config.c: void a(java.lang.String,java.lang.Object,java.lang.String[])
com.umeng.commonsdk.statistics.internal.a: a()
org.jaudiotagger.tag.datatype.AbstractDataType: java.lang.Object getValue()
com.caij.puremusic.MainModuleKt$roomModule$1$13: MainModuleKt$roomModule$1$13()
org.simpleframework.xml.stream.PullReader$Entry: java.lang.String getName()
org.jaudiotagger.tag.id3.ID3v23Tag: void deleteField(java.lang.String)
com.thegrizzlylabs.sardineandroid.Sardine: java.util.List list(java.lang.String,int,java.util.Set)
org.jaudiotagger.audio.asf.data.MetadataContainer: java.lang.String prettyPrint(java.lang.String)
com.caij.puremusic.db.model.Album: int component10()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
org.jcodec.containers.mp4.AudioBoxes: AudioBoxes()
org.simpleframework.xml.core.Context: org.simpleframework.xml.strategy.Value getOverride(org.simpleframework.xml.strategy.Type,org.simpleframework.xml.stream.InputNode)
com.caij.puremusic.drive.model.Part$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
org.jaudiotagger.tag.datatype.Lyrics3Line: void setLyric(java.lang.String)
org.jcodec.containers.mp4.boxes.TimeToSampleBox$TimeToSampleEntry: long getSegmentDuration()
com.tencent.mm.opensdk.openapi.MMSharedPreferences$REditor: android.content.SharedPreferences$Editor clear()
com.umeng.analytics.pro.ay: com.umeng.analytics.pro.bp j(byte[],com.umeng.analytics.pro.bc,com.umeng.analytics.pro.bc[])
com.umeng.analytics.b: void a(java.lang.Throwable)
com.caij.puremusic.model.DeezerResponse: DeezerResponse(java.util.List,java.lang.String,int)
org.simpleframework.xml.transform.LocaleTransform: java.util.Locale read(java.lang.String)
org.jaudiotagger.audio.ogg.OggFileWriter: void writeTag(org.jaudiotagger.audio.AudioFile,org.jaudiotagger.tag.Tag,java.io.RandomAccessFile,java.io.RandomAccessFile)
org.jcodec.containers.mp4.boxes.ProductionApertureBox: ProductionApertureBox(org.jcodec.containers.mp4.boxes.Header)
com.caij.puremusic.drive.model.PlayListItem$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.caij.puremusic.db.model.ServerLyricsQueries: void deleteSongBySource(long)
com.google.android.material.card.MaterialCardView: void setBackgroundInternal(android.graphics.drawable.Drawable)
org.jaudiotagger.audio.opus.OpusFileReader: org.jaudiotagger.audio.generic.GenericAudioHeader getEncodingInfo(java.io.RandomAccessFile)
com.caij.puremusic.model.UpdateInfo$ForcedUpgradeInfo: int describeContents()
org.jaudiotagger.audio.asf.data.MetadataDescriptor: java.lang.String getName()
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgram: WXPreloadMiniProgram()
com.google.android.material.progressindicator.BaseProgressIndicator: com.google.android.material.progressindicator.DeterminateDrawable getProgressDrawable()
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean onNestedPreFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)
org.simpleframework.xml.convert.AnnotationStrategy: boolean write(org.simpleframework.xml.strategy.Type,java.lang.Object,org.simpleframework.xml.stream.NodeMap,java.util.Map)
com.umeng.commonsdk.stateless.d: java.io.File a(android.content.Context)
org.simpleframework.xml.strategy.TreeStrategy: TreeStrategy(java.lang.String,java.lang.String)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
org.simpleframework.xml.stream.OutputElement: org.simpleframework.xml.stream.Mode getMode()
com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)
org.jaudiotagger.audio.ogg.util.OggPage: org.jaudiotagger.audio.ogg.util.OggPageHeader getHeader()
com.caij.puremusic.db.model.SongQueries$SongQuery: void removeListener(app.cash.sqldelight.Query$Listener)
org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Class,java.io.File,boolean)
org.jaudiotagger.tag.id3.framebody.FrameBodyTPE1: FrameBodyTPE1(byte,java.lang.String)
org.simpleframework.xml.core.Support: org.simpleframework.xml.core.ContactList getMethods(java.lang.Class)
org.jaudiotagger.tag.PaddingException: PaddingException()
org.simpleframework.xml.core.Context: boolean isStrict()
com.tencent.mm.opensdk.modelmsg.WXStateSceneDataObject: WXStateSceneDataObject()
org.jaudiotagger.utils.tree.TreePath: TreePath(java.lang.Object[])
com.caij.puremusic.model.smartplaylist.TopTracksPlaylist$Creator: com.caij.puremusic.model.smartplaylist.TopTracksPlaylist[] newArray(int)
com.umeng.commonsdk.statistics.proto.e$e: java.lang.String b()
org.simpleframework.xml.Serializer: boolean validate(java.lang.Class,java.lang.String)
org.jaudiotagger.utils.tree.DefaultTreeModel: void removeNodeFromParent(org.jaudiotagger.utils.tree.MutableTreeNode)
org.jaudiotagger.tag.TagOptionSingleton: boolean isId3v2PaddingCopyTag()
org.jaudiotagger.tag.Tag: int getFieldCount()
com.tencent.bugly.proguard.bm: bm()
org.jaudiotagger.tag.wav.WavTag: java.lang.String getValue(org.jaudiotagger.tag.FieldKey,int)
org.simpleframework.xml.core.ClassScanner: org.simpleframework.xml.core.Function getCommit()
org.jaudiotagger.tag.id3.ID3v24Frame$EncodingFlags: ID3v24Frame$EncodingFlags(org.jaudiotagger.tag.id3.ID3v24Frame)
com.caij.puremusic.db.model.Song: java.lang.String component11()
org.jaudiotagger.audio.aiff.chunk.AiffCompressionType: java.lang.String getCode()
org.simpleframework.xml.core.ExtractorFactory: ExtractorFactory(org.simpleframework.xml.core.Contact,java.lang.annotation.Annotation,org.simpleframework.xml.stream.Format)
org.jaudiotagger.audio.dsf.DsfFileWriter: void deleteTag(org.jaudiotagger.tag.Tag,java.nio.channels.FileChannel,java.lang.String)
com.thegrizzlylabs.sardineandroid.model.Principal: void setProperty(com.thegrizzlylabs.sardineandroid.model.Property)
androidx.fragment.app.Fragment: java.lang.Object getSharedElementEnterTransition()
org.jcodec.containers.mp4.boxes.SegmentTypeBox: java.lang.String fourcc()
org.simpleframework.xml.core.PrimitiveKey: boolean validate(org.simpleframework.xml.stream.InputNode)
org.jaudiotagger.tag.images.StandardImageHandler: StandardImageHandler()
io.ktor.util.date.Month: java.lang.String getValue()
org.simpleframework.xml.core.Label: java.lang.String getOverride()
org.simpleframework.xml.core.Source: boolean isStrict()
com.umeng.analytics.pro.ag: java.lang.String a(android.content.Context)
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler: boolean setNativeIsAppForeground(boolean)
com.caij.puremusic.drive.model.OneDriveFile$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
org.jaudiotagger.tag.id3.framebody.FrameBodyUSLT: void setLyric(java.lang.String)
org.jaudiotagger.audio.mp4.Mp4AudioHeader: org.jcodec.containers.mp4.boxes.EsdsBox$Kind getKind()
com.tencent.mm.opensdk.diffdev.OAuthListener: void onAuthFinish(com.tencent.mm.opensdk.diffdev.OAuthErrCode,java.lang.String)
com.tencent.mm.opensdk.modelbiz.WXPreloadMiniProgramEnvironment$Req: void toBundle(android.os.Bundle)
com.caij.puremusic.db.model.ServerLyricsQueries$deleteById$1: java.lang.Object invoke(java.lang.Object)
com.caij.puremusic.drive.model.EmbyFoldersResponse$$serializer: EmbyFoldersResponse$$serializer()
org.jaudiotagger.tag.images.Artwork: void setHeight(int)
com.caij.puremusic.drive.model.JellyfinSongListResponse: JellyfinSongListResponse(java.util.List,int,int)
org.jaudiotagger.audio.asf.data.LanguageList: void removeLanguage(int)
com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable getStatusBarForeground()
com.caij.puremusic.drive.model.Auth2Token$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
org.jaudiotagger.audio.asf.io.ModificationResult: int getChunkCountDifference()
org.simpleframework.xml.core.ElementMapLabel: java.lang.String getPath()
org.simpleframework.xml.core.CacheLabel: java.lang.String[] getPaths()
org.jaudiotagger.tag.id3.framebody.FrameBodyPOPM: void setEmailToUser(java.lang.String)
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: int getSampleDescriptionIndex()
org.simpleframework.xml.core.TemplateEngine: void name()
com.caij.puremusic.drive.model.PlaylistResponse: PlaylistResponse()
com.caij.puremusic.drive.model.SubsonicSearchResponse: com.caij.puremusic.drive.model.SubsonicSearchResponse copy(java.lang.String,java.lang.String,com.caij.puremusic.drive.model.SearchResult3)
org.simpleframework.xml.ElementList: boolean required()
org.jaudiotagger.tag.id3.framebody.FrameBodyETCO: java.util.Set toSet(int[])
com.google.android.material.bottomsheet.BottomSheetDragHandleView: void announceAccessibilityEvent(java.lang.String)
com.google.android.material.chip.Chip: void setMaxLines(int)
com.google.android.material.slider.BaseSlider: void setThumbElevationResource(int)
org.simpleframework.xml.stream.PullReader: org.simpleframework.xml.stream.PullReader$Entry attribute(int)
com.caij.puremusic.network.model.TokenData: java.lang.String component2()
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
com.thegrizzlylabs.sardineandroid.impl.OkHttpSardine: OkHttpSardine()
org.simpleframework.xml.core.SetPart: java.lang.Class getType()
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
com.alipay.apmobilesecuritysdk.e.i: java.lang.String d()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
org.jaudiotagger.tag.datatype.NumberFixedLength: void setValue(java.lang.Object)
org.jaudiotagger.tag.id3.framebody.FrameBodyGEOB: java.lang.String getDescription()
org.simpleframework.xml.core.Label: boolean isAttribute()
com.caij.puremusic.drive.model.MediaContainer$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.tencent.mm.opensdk.modelmsg.SendAuth$Resp: boolean checkArgs()
com.caij.puremusic.network.model.TokenData: boolean equals(java.lang.Object)
org.jaudiotagger.tag.images.ImageHandler: void makeSmaller(org.jaudiotagger.tag.images.Artwork,int)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: int getChildCount()
com.google.android.material.card.MaterialCardView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.umeng.analytics.filter.EventList: boolean loadEventListFromFile(android.content.Context,java.io.File)
com.tencent.mm.opensdk.modelmsg.WXStateJumpUrlInfo: boolean checkArgs()
org.simpleframework.xml.core.PathParser: void align()
com.tencent.mm.opensdk.modelmsg.WXStateJumpMiniProgramInfo: WXStateJumpMiniProgramInfo()
org.jaudiotagger.tag.flac.FlacTag: void setField(org.jaudiotagger.tag.TagField)
com.umeng.analytics.pro.as: byte b(byte,int)
com.caij.puremusic.drive.model.SongItem: java.lang.String getAlbumArtist()
com.caij.puremusic.drive.model.Type$$serializer: Type$$serializer()
com.caij.puremusic.drive.model.AlbumMediaContainer$Companion: AlbumMediaContainer$Companion()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.umeng.analytics.pro.ak: java.lang.String a(android.content.Context)
org.jaudiotagger.tag.asf.AsfFieldKey: org.jaudiotagger.audio.asf.data.ContainerType getHighestContainer()
org.jaudiotagger.tag.datatype.ByteArraySizeTerminated: ByteArraySizeTerminated(org.jaudiotagger.tag.datatype.ByteArraySizeTerminated)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
org.jcodec.containers.mp4.boxes.TrunBox: boolean isSampleDurationAvailable()
com.tencent.mmkv.MMKV: void onContentChangedByOuterProcess(java.lang.String)
org.simpleframework.xml.core.ElementParameter: java.lang.String getName()
org.simpleframework.xml.stream.PullReader: org.simpleframework.xml.stream.PullReader$Start start()
com.caij.puremusic.db.model.PlaybackSongQueries: void insert(com.caij.puremusic.db.model.PlaybackSong)
org.jcodec.containers.mp4.boxes.SoundMediaHeaderBox: void parse(java.nio.ByteBuffer)
org.jaudiotagger.tag.datatype.TextEncodedStringSizeTerminated: byte[] writeByteArray()
org.simpleframework.xml.core.ExtractorFactory: java.lang.Object getInstance(java.lang.annotation.Annotation)
org.simpleframework.xml.core.ClassScanner: void definition(org.simpleframework.xml.core.Detail)
androidx.preference.PreferenceGroup: PreferenceGroup(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
org.jaudiotagger.audio.mp4.InplaceMP4Editor: org.jcodec.containers.mp4.boxes.Box parseBox(java.nio.ByteBuffer)
com.google.common.reflect.Types$JavaVersion$3: java.lang.String typeName(java.lang.reflect.Type)
code.name.monkey.appthemehelper.common.prefs.supportv7.dialogs.ATEListPreferenceDialogFragmentCompat: ATEListPreferenceDialogFragmentCompat()
org.simpleframework.xml.core.SignatureBuilder$ParameterTable: java.lang.Object get(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyWCOM: FrameBodyWCOM()
org.jaudiotagger.audio.generic.AudioFileModificationAdapter: void vetoThrown(org.jaudiotagger.audio.generic.AudioFileModificationListener,org.jaudiotagger.audio.AudioFile,org.jaudiotagger.audio.exceptions.ModifyVetoException)
com.umeng.analytics.pro.w: void a(long)
org.simpleframework.xml.core.ElementUnionLabel: org.simpleframework.xml.core.Label getLabel(java.lang.Class)
com.tencent.bugly.proguard.j: j(java.lang.String)
androidx.media.AudioManagerCompat$Api26Impl: int abandonAudioFocusRequest(android.media.AudioManager,android.media.AudioFocusRequest)
org.jaudiotagger.tag.id3.ID3v1Iterator: boolean hasNext(int)
org.jcodec.containers.mp4.boxes.PixelAspectExt: int gethSpacing()
com.caij.puremusic.db.model.SongQueries$SongsByAlbumIdCountQuery: java.lang.String toString()
com.caij.puremusic.db.model.SongEntity: long component3()
android.support.v4.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
com.thegrizzlylabs.sardineandroid.model.Property$PropertyConverter: java.lang.Object read(org.simpleframework.xml.stream.InputNode)
org.jaudiotagger.tag.EmptyFrameException: EmptyFrameException()
com.google.android.material.navigation.NavigationBarView: android.content.res.ColorStateList getItemTextColor()
com.umeng.commonsdk.statistics.proto.a$e: a$e(java.lang.String,int,short,java.lang.String)
com.tencent.bugly.crashreport.CrashReport: void testNativeCrash()
com.caij.puremusic.drive.model.PlexAlbumsResponse: com.caij.puremusic.drive.model.PlexAlbumsResponse copy$default(com.caij.puremusic.drive.model.PlexAlbumsResponse,com.caij.puremusic.drive.model.AlbumMediaContainer,int,java.lang.Object)
com.tencent.bugly.proguard.r: int a(java.util.List)
com.caij.puremusic.service.PlaybackLocation: com.caij.puremusic.service.PlaybackLocation[] $values()
androidx.appcompat.widget.SwitchCompat: void setThumbTextPadding(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
org.jaudiotagger.tag.id3.ID3v23Frame: int getEncryptionMethod()
org.jcodec.containers.mp4.boxes.UrlBox: java.lang.String getUrl()
com.caij.puremusic.drive.model.Type: boolean equals(java.lang.Object)
com.caij.puremusic.db.model.SongQueries$SongsByArtistIdWithLikeQuery: java.lang.String getArtistId_()
com.umeng.analytics.pro.v: v()
org.jaudiotagger.audio.asf.data.ChunkContainer: java.util.Collection getChunks()
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
com.google.android.material.navigation.NavigationBarMenuView: int getItemActiveIndicatorMarginHorizontal()
org.simpleframework.xml.transform.URLTransform: URLTransform()
com.google.android.material.bottomsheet.BottomSheetDialog: com.google.android.material.bottomsheet.BottomSheetBehavior access$100(com.google.android.material.bottomsheet.BottomSheetDialog)
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getIMEI(android.content.Context)
com.umeng.commonsdk.framework.UMFrUtils$1: int a(java.io.File,java.io.File)
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource valueOf(java.lang.String)
org.repackage.com.vivo.identifier.IdentifierManager: java.lang.String c(android.content.Context)
org.simpleframework.xml.core.Session: void putAll(java.util.Map)
org.jaudiotagger.tag.id3.framebody.FrameBodyTOAL: FrameBodyTOAL(org.jaudiotagger.tag.id3.framebody.FrameBodyTOAL)
org.jcodec.containers.mp4.boxes.DataBox: DataBox(org.jcodec.containers.mp4.boxes.Header)
com.umeng.commonsdk.internal.utils.j: java.lang.String a(android.content.Context)
com.alipay.apmobilesecuritysdk.f.b: com.alipay.apmobilesecuritysdk.f.b a()
com.caij.puremusic.db.model.Song: int getYear()
org.jaudiotagger.audio.asf.data.GUID: java.lang.String prettyPrint()
com.caij.puremusic.model.AlbumWithCount: com.caij.puremusic.db.model.Album component1()
org.jaudiotagger.tag.id3.ID3v23Frame$EncodingFlags: void logEnabledFlags()
org.jaudiotagger.tag.id3.framebody.FrameBodyGEOB: void setupObjectList()
org.jaudiotagger.audio.asf.io.RandomAccessFileOutputStream: void write(byte[],int,int)
com.thegrizzlylabs.sardineandroid.util.ElementConverter: void write(org.simpleframework.xml.stream.OutputNode,org.w3c.dom.Element)
org.jaudiotagger.tag.asf.AsfTag: void addCopyright(java.lang.String)
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: void decodeHeader(byte[])
org.slf4j.helpers.MarkerIgnoringBase: MarkerIgnoringBase()
org.jaudiotagger.tag.id3.framebody.FrameBodyTKEY: FrameBodyTKEY(java.nio.ByteBuffer,int)
com.umeng.commonsdk.statistics.proto.d: void a(java.io.ObjectInputStream)
com.caij.puremusic.model.CategoryInfo: boolean component2()
org.jaudiotagger.logging.XMLTagDisplayFormatter: void addElement(java.lang.String,boolean)
org.simpleframework.xml.transform.TimeZoneTransform: java.lang.String write(java.lang.Object)
org.jaudiotagger.tag.TagOptionSingleton: org.jaudiotagger.tag.options.PadNumberOption getPadNumberTotalLength()
org.simpleframework.xml.ElementUnion: org.simpleframework.xml.Element[] value()
com.caij.puremusic.drive.model.ADriveItem: java.lang.String component9()
com.umeng.commonsdk.statistics.proto.a: void d(boolean)
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: int getNominalBitrate()
org.simpleframework.xml.core.Traverser: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.lang.Class)
com.tencent.mmkv.MMKV: int onMMKVFileLengthError(java.lang.String)
org.simpleframework.xml.core.TextList: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.lang.Object)
org.jaudiotagger.tag.datatype.AbstractString: AbstractString(org.jaudiotagger.tag.datatype.AbstractString)
org.jaudiotagger.tag.datatype.TextEncodedStringSizeTerminated: TextEncodedStringSizeTerminated(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody)
com.umeng.commonsdk.statistics.internal.a: void g(java.lang.String)
com.caij.puremusic.drive.model.SongItem: boolean equals(java.lang.Object)
androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)
com.tencent.mm.opensdk.modelbiz.WXChannelOpenFeed$Req: void toBundle(android.os.Bundle)
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)
org.jaudiotagger.tag.id3.AbstractID3v2Tag: java.lang.Long getStartLocationInFile()
org.jaudiotagger.audio.aiff.AiffTagWriter: void deleteTagChunkUsingChannelTransfer(org.jaudiotagger.tag.aiff.AiffTag,java.nio.channels.FileChannel,long)
com.caij.puremusic.preferences.LibraryPreference: LibraryPreference(android.content.Context,android.util.AttributeSet,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.umeng.umzid.b: void a(java.lang.Runnable)
org.jaudiotagger.tag.mp4.Mp4RatingValue: org.jaudiotagger.tag.mp4.Mp4RatingValue valueOf(java.lang.String)
com.caij.puremusic.drive.model.OneDriveFileResponse: void write$Self(com.caij.puremusic.drive.model.OneDriveFileResponse,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
org.jaudiotagger.audio.asf.util.TagConverter: void assignCommonTagValues(org.jaudiotagger.tag.Tag,org.jaudiotagger.audio.asf.data.MetadataContainer)
org.jaudiotagger.utils.tree.DefaultTreeModel: void fireTreeNodesRemoved(java.lang.Object,java.lang.Object[],int[],java.lang.Object[])
org.simpleframework.xml.core.Factory: org.simpleframework.xml.strategy.Value getOverride(org.simpleframework.xml.stream.InputNode)
org.jcodec.containers.mp4.boxes.MediaHeaderBox: void doWrite(java.nio.ByteBuffer)
org.jaudiotagger.tag.datatype.PairedTextEncodedStringNullTerminated$ValuePairs: java.lang.String toString()
com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)
org.jaudiotagger.tag.datatype.TCONString: void setNullSeperateMultipleValues(boolean)
com.tencent.bugly.proguard.ag: void e(java.util.List)
com.umeng.analytics.pro.as: boolean a(byte,int)
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportQuasiRealtime: boolean shouldSendMessage(boolean)
com.umeng.tunnel.UMChannelAgent: void setCustomHeader(java.util.Map)
com.umeng.analytics.process.UMProcessDBHelper$a: UMProcessDBHelper$a(com.umeng.analytics.process.UMProcessDBHelper,com.umeng.analytics.process.UMProcessDBHelper$1)
org.simpleframework.xml.stream.InputNode: org.simpleframework.xml.stream.NodeMap getAttributes()
com.umeng.analytics.pro.an: boolean g()
com.umeng.commonsdk.debug.UMLog: void aq(java.lang.String,int,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])
org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId: void f()
com.caij.puremusic.db.model.AlbumQueries$AlbumQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
com.umeng.commonsdk.config.d$d: com.umeng.commonsdk.config.d$d valueOf(java.lang.String)
org.repackage.com.zui.deviceidservice.IDeviceidInterface$Stub$Proxy: java.lang.String a(java.lang.String)
org.jaudiotagger.tag.datatype.PairedTextEncodedStringNullTerminated: PairedTextEncodedStringNullTerminated(org.jaudiotagger.tag.datatype.TextEncodedStringSizeTerminated)
com.caij.puremusic.views.BaselineGridTextView: void setLineHeightHint(float)
com.caij.puremusic.db.model.SongQueries$searchSongsByTitle$1: SongQueries$searchSongsByTitle$1(kotlin.jvm.functions.Function18,com.caij.puremusic.db.model.SongQueries)
org.jaudiotagger.tag.id3.framebody.FrameBodyOWNE: FrameBodyOWNE(byte,java.lang.String,java.lang.String,java.lang.String)
com.google.android.material.bottomsheet.BottomSheetBehavior: int access$502(com.google.android.material.bottomsheet.BottomSheetBehavior,int)
com.caij.puremusic.db.model.PlaylistEntityQueries$searchPlaylistByName$2: com.caij.puremusic.db.model.PlaylistEntity invoke(long,java.lang.String)
com.tencent.mm.opensdk.modelpay.PayResp: PayResp()
com.google.android.material.bottomsheet.BottomSheetDialogFragment: void dismissAllowingStateLoss()
org.jcodec.containers.mp4.boxes.ReverseDnsBox$RdnsMeanBox: ReverseDnsBox$RdnsMeanBox(org.jcodec.containers.mp4.boxes.Header)
org.jaudiotagger.tag.id3.reference.ID3Rating: int convertRatingToFiveStarScale(int)
org.jaudiotagger.tag.datatype.PartOfSet$PartOfSetValue: java.lang.String getTotalAsText()
com.umeng.analytics.pro.an: boolean j()
com.caij.puremusic.drive.model.ParentReference: void write$Self(com.caij.puremusic.drive.model.ParentReference,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.umeng.commonsdk.utils.UMUtils: java.lang.String getDeviceType(android.content.Context)
org.simpleframework.xml.transform.StringArrayTransform: java.lang.Object read(java.lang.String)
androidx.cardview.widget.CardView: void setCardBackgroundColor(android.content.res.ColorStateList)
com.google.android.material.card.MaterialCardView: void setUseCompatPadding(boolean)
com.umeng.commonsdk.statistics.proto.e: void c(boolean)
com.tencent.bugly.proguard.ag: java.lang.String a(java.lang.String,java.lang.Iterable)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: boolean setFontVariationSettings(android.widget.TextView,java.lang.String)
org.simpleframework.xml.core.Detail: java.util.List getMethods()
org.simpleframework.xml.core.MethodContact: void set(java.lang.Object,java.lang.Object)
com.umeng.commonsdk.statistics.proto.b$a: void b(com.umeng.analytics.pro.bu,com.umeng.commonsdk.statistics.proto.b)
org.simpleframework.xml.convert.RegistryStrategy: boolean write(org.simpleframework.xml.strategy.Type,java.lang.Object,org.simpleframework.xml.stream.NodeMap,java.util.Map)
com.umeng.commonsdk.statistics.proto.d: d(java.util.Map,int,java.lang.String)
com.caij.puremusic.network.model.LastFmArtist$Artist$Stats: void setListeners(java.lang.String)
org.jaudiotagger.tag.id3.framebody.AbstractFrameBodyNumberTotal: java.lang.String getNumberAsText()
org.repackage.com.zui.opendeviceidlibrary.OpenDeviceId: java.lang.String a()
org.jaudiotagger.audio.mp3.MPEGFrameHeader: boolean isProtected()
com.yalantis.ucrop.view.GestureCropImageView: GestureCropImageView(android.content.Context,android.util.AttributeSet)
com.alipay.android.phone.mrpc.core.p: void a(long)
org.jaudiotagger.tag.id3.framebody.FrameBodyUSER: FrameBodyUSER(org.jaudiotagger.tag.id3.framebody.FrameBodyUSER)
org.simpleframework.xml.core.ParameterContact: java.lang.String toString()
androidx.preference.internal.PreferenceImageView: PreferenceImageView(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.tag.id3.framebody.FrameBodyAPIC: void write(java.io.ByteArrayOutputStream)
com.tencent.bugly.proguard.w: android.content.ContentValues c(com.tencent.bugly.proguard.y)
com.thegrizzlylabs.sardineandroid.report.SyncCollectionReport$Result: SyncCollectionReport$Result(java.util.List,java.lang.String)
com.caij.puremusic.db.model.SongEntity: com.caij.puremusic.db.model.SongEntity copy(long,long,long)
com.caij.puremusic.drive.model.SubsonicSearchResponse$$serializer: com.caij.puremusic.drive.model.SubsonicSearchResponse deserialize(kotlinx.serialization.encoding.Decoder)
org.jaudiotagger.audio.mp3.MPEGFrameHeader: void setOriginal()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
org.jaudiotagger.tag.id3.framebody.FrameBodySIGN: byte getGroupSymbol()
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$GetByIdQuery: app.cash.sqldelight.db.QueryResult execute(kotlin.jvm.functions.Function1)
com.caij.puremusic.drive.model.Type: Type(java.lang.String,java.lang.String,java.lang.String,boolean)
com.google.android.material.internal.TouchObserverFrameLayout: TouchObserverFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View$AccessibilityDelegate,android.view.View)
com.google.android.material.search.SearchView: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
org.jaudiotagger.tag.id3.framebody.FrameBodyTIT1: java.lang.String getIdentifier()
com.umeng.commonsdk.framework.UMWorkDispatch$1: void handleMessage(android.os.Message)
com.caij.puremusic.db.model.ArtistQueries$artistByName$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
org.simpleframework.xml.core.CompositeListUnion: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object,org.simpleframework.xml.core.Label)
org.simpleframework.xml.transform.RegistryMatcher: void bind(java.lang.Class,org.simpleframework.xml.transform.Transform)
org.jcodec.containers.mp4.boxes.IListBox: java.util.List getRdnsValues()
com.caij.puremusic.drive.model.EmbyAlbumsResponse$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
androidx.core.view.AccessibilityDelegateCompat: AccessibilityDelegateCompat()
com.caij.puremusic.drive.model.Response: java.lang.String getHref()
com.google.android.material.appbar.CollapsingToolbarLayout: void setMaxLines(int)
com.caij.puremusic.db.model.PlaybackSongQueries: PlaybackSongQueries(app.cash.sqldelight.db.SqlDriver,com.caij.puremusic.db.model.PlaybackSong$Adapter)
org.jaudiotagger.audio.opus.OpusFileReader: OpusFileReader()
org.jaudiotagger.tag.id3.framebody.FrameBodyLINK: void setupObjectList()
org.simpleframework.xml.core.Scanner: java.util.List getSignatures()
com.alipay.apmobilesecuritysdk.e.h: void d(android.content.Context,java.lang.String)
org.jaudiotagger.tag.images.StandardArtwork: boolean setImageFromData()
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: org.jaudiotagger.utils.tree.TreeNode getChildAt(int)
com.google.android.material.navigation.NavigationBarItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.tencent.bugly.BuglyStrategy: com.tencent.bugly.BuglyStrategy setAppPackageName(java.lang.String)
com.tencent.bugly.proguard.ap: byte[] a(byte[])
com.umeng.analytics.pro.c: c(android.content.Context,java.lang.String)
com.umeng.commonsdk.statistics.common.a$b: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
com.caij.puremusic.drive.model.AlbumItem: AlbumItem(java.lang.String,java.lang.String,java.lang.String,boolean,long,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.umeng.commonsdk.statistics.proto.Response$e: com.umeng.commonsdk.statistics.proto.Response$e b(int)
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
org.simpleframework.xml.ElementMap: java.lang.String name()
org.jaudiotagger.tag.lyrics3.FieldFrameBodyLYR: void setupObjectList()
com.caij.puremusic.drive.model.GoogleDriveFileResponse: GoogleDriveFileResponse(java.lang.String,java.lang.String,boolean,java.util.List)
org.jaudiotagger.audio.mp3.MP3File: MP3File()
com.google.android.material.internal.NavigationMenuItemView: void setNeedsEmptyIcon(boolean)
org.jaudiotagger.audio.ogg.util.VorbisIdentificationHeader: int getSamplingRate()
com.caij.puremusic.db.model.PlaylistEntity: long component1()
org.simpleframework.xml.stream.EventToken: java.lang.String getName()
com.caij.puremusic.drive.model.GoogleDriveFileResponse$$serializer: GoogleDriveFileResponse$$serializer()
com.umeng.analytics.pro.bu: void a(com.umeng.analytics.pro.bq)
org.jaudiotagger.tag.id3.ID3SyncSafeInteger: byte[] valueToBuffer(int)
com.tencent.bugly.proguard.bq: bq()
org.jcodec.containers.mp4.boxes.FileTypeBox: FileTypeBox(org.jcodec.containers.mp4.boxes.Header)
androidx.core.widget.TextViewCompat$Api17Impl: java.util.Locale getTextLocale(android.widget.TextView)
com.google.common.collect.Maps$EntryFunction: Maps$EntryFunction(java.lang.String,int)
com.umeng.analytics.pro.an: void d(boolean)
com.caij.puremusic.fragments.search.SearchFragment: SearchFragment()
com.umeng.analytics.pro.an$b: an$b(com.umeng.analytics.pro.an$1)
com.umeng.commonsdk.config.b: b()
org.jaudiotagger.audio.asf.data.AsfHeader: org.jaudiotagger.audio.asf.data.MetadataContainer getExtendedContentDescription()
com.umeng.analytics.pro.ay: java.lang.Boolean a(byte[],com.umeng.analytics.pro.bc,com.umeng.analytics.pro.bc[])
com.thegrizzlylabs.sardineandroid.DavPrincipal$PrincipalType: DavPrincipal$PrincipalType(java.lang.String,int)
com.google.android.exoplayer2.video.VideoFrameReleaseHelper$Api30: void setSurfaceFrameRate(android.view.Surface,float)
com.umeng.commonsdk.statistics.proto.b: com.umeng.commonsdk.statistics.proto.b a()
com.caij.puremusic.drive.model.JellyfinArtistResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.JellyfinArtistResponse)
com.thegrizzlylabs.sardineandroid.DavResource: java.util.Date getModified()
com.tencent.mm.opensdk.constants.ConstantsAPI$WXWebPage: ConstantsAPI$WXWebPage()
com.caij.puremusic.db.model.PlayCountEntityQueries$deleteById$1: PlayCountEntityQueries$deleteById$1(long)
com.caij.puremusic.drive.model.Type: boolean getActive()
com.google.android.exoplayer2.video.spherical.SphericalGLSurfaceView: com.google.android.exoplayer2.video.spherical.CameraMotionListener getCameraMotionListener()
org.jcodec.containers.mp4.boxes.TrakBox: long getDuration()
com.caij.puremusic.drive.model.PlexAlbumsResponse: com.caij.puremusic.drive.model.AlbumMediaContainer getMediaContainer()
com.caij.puremusic.drive.model.Metadata: com.caij.puremusic.drive.model.Metadata copy$default(com.caij.puremusic.drive.model.Metadata,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,java.util.List,int,java.lang.Object)
org.simpleframework.xml.convert.Converter: java.lang.Object read(org.simpleframework.xml.stream.InputNode)
org.jaudiotagger.tag.reference.ISOScript$Script: java.lang.String getCode()
org.jaudiotagger.audio.asf.data.GUID: GUID(java.lang.String,java.lang.String)
com.caij.puremusic.db.model.SongQueries$songsByIds$1: SongQueries$songsByIds$1(kotlin.jvm.functions.Function18,com.caij.puremusic.db.model.SongQueries)
org.jaudiotagger.audio.generic.AbstractTag: java.util.List getAll(java.lang.String)
com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleMarginTop(int)
androidx.appcompat.widget.SwitchCompat: void setThumbPosition(float)
org.jaudiotagger.tag.datatype.EventTimingCode: void setTimestamp(long)
org.jaudiotagger.audio.generic.AudioFileWriter: void precheckWrite(org.jaudiotagger.audio.AudioFile)
com.caij.puremusic.model.DeezerResponse: java.lang.String getNext()
androidx.fragment.app.Fragment: int getId()
org.jaudiotagger.audio.asf.data.MetadataDescriptor: int hashCode()
org.simpleframework.xml.transform.RegistryMatcher: org.simpleframework.xml.transform.Transform match(java.lang.Class)
org.jaudiotagger.audio.wav.chunk.WavId3Chunk: boolean isId3v2Tag(java.nio.ByteBuffer)
org.simpleframework.xml.core.SignatureBuilder: void build(org.simpleframework.xml.core.SignatureBuilder$ParameterTable,int)
org.jaudiotagger.utils.DirectByteBufferUtils: java.lang.reflect.Method access$000(java.lang.String,java.lang.String)
org.jaudiotagger.tag.id3.ID3v1Tag: java.util.List getArtist()
org.simpleframework.xml.core.DefaultDetail: org.simpleframework.xml.DefaultType getOverride()
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
com.google.android.material.bottomsheet.BottomSheetBehavior: boolean isDraggable()
com.google.android.material.slider.BaseSlider: int getTrackHeight()
com.google.android.gms.common.SupportErrorDialogFragment: SupportErrorDialogFragment()
com.umeng.analytics.pro.bn: void b()
org.simpleframework.xml.util.LimitedCache: java.lang.Object take(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setSuffixTextColor(android.content.res.ColorStateList)
androidx.fragment.app.Fragment: void performDestroyView()
com.tencent.mm.opensdk.modelbiz.WXChannelOpenProfile$Req: void toBundle(android.os.Bundle)
org.jcodec.containers.mp4.boxes.AudioSampleEntry: short getSampleSize()
org.jaudiotagger.audio.asf.data.MetadataDescriptor: void setQWordValue(java.math.BigInteger)
com.google.android.datatransport.cct.CctBackendFactory: com.google.android.datatransport.runtime.backends.TransportBackend create(com.google.android.datatransport.runtime.backends.CreationContext)
org.jaudiotagger.tag.TagOptionSingleton: byte getId3v23DefaultTextEncoding()
org.simpleframework.xml.stream.Builder: Builder(org.simpleframework.xml.stream.Style)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy valueOf(java.lang.String)
com.google.common.base.Predicates$ObjectPredicate$4: boolean apply(java.lang.Object)
com.caij.puremusic.db.model.ServerAudioFormatQueries$clear$1: ServerAudioFormatQueries$clear$1()
com.google.common.hash.BloomFilterStrategies$2: long upperEight(byte[])
com.umeng.commonsdk.framework.a: void b(int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior(android.content.Context,android.util.AttributeSet)
com.tencent.mm.opensdk.modelbiz.IWXChannelJumpInfo: void unserialize(android.os.Bundle)
com.caij.puremusic.db.model.FolderQueries$selectById$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.tag.datatype.Lyrics3Line: int getSize()
org.simpleframework.xml.filter.PlatformFilter: PlatformFilter()
org.jaudiotagger.audio.generic.GenericTag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.images.Artwork)
org.simpleframework.xml.core.Creator: java.lang.Object getInstance(org.simpleframework.xml.core.Criteria)
com.afollestad.materialdialogs.internal.main.DialogLayout: com.afollestad.materialdialogs.internal.message.DialogContentLayout getContentLayout()
org.simpleframework.xml.stream.Format: Format(int,org.simpleframework.xml.stream.Style,org.simpleframework.xml.stream.Verbosity)
com.google.android.material.bottomsheet.BottomSheetDialog$EdgeToEdgeCallback: void onLayout(android.view.View)
com.caij.puremusic.db.model.ServerLyricsQueries$deleteById$2: ServerLyricsQueries$deleteById$2()
com.caij.puremusic.db.model.SongQueries$SongsByArtistIdWithLikeQuery: SongQueries$SongsByArtistIdWithLikeQuery(com.caij.puremusic.db.model.SongQueries,java.lang.String,java.lang.String,java.lang.String,java.lang.String,kotlin.jvm.functions.Function1)
com.umeng.commonsdk.internal.c: void g()
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.tencent.mm.opensdk.modelbiz.WXInvoiceAuthInsert$Resp: boolean checkArgs()
com.caij.puremusic.drive.model.SubsonicSearchListResponse: SubsonicSearchListResponse(com.caij.puremusic.drive.model.SubsonicSearchResponse)
com.umeng.umzid.Spy: java.lang.String getVersion()
org.simpleframework.xml.core.ElementLabel: org.simpleframework.xml.core.Expression getExpression()
org.jcodec.containers.mp4.boxes.TrunBox: boolean isDataOffsetAvailable()
com.caij.puremusic.db.model.SongQueries: app.cash.sqldelight.Query songByPath(java.lang.String)
com.umeng.commonsdk.statistics.proto.c: void a(java.io.ObjectOutputStream)
com.caij.puremusic.db.model.ServerArtistCoverQueries: app.cash.sqldelight.Query getById(java.lang.String)
com.caij.puremusic.model.Home: java.util.List component1()
com.caij.puremusic.db.model.SongQueries$SongsByArtistIdWithLikeQuery: java.lang.String getArtistId___()
com.google.android.material.button.MaterialButtonToggleGroup: int getFirstVisibleChildIndex()
com.google.common.base.Predicates$ObjectPredicate$3: java.lang.String toString()
androidx.core.view.ViewCompat$Api26Impl: void setKeyboardNavigationCluster(android.view.View,boolean)
org.simpleframework.xml.core.ObjectInstance: java.lang.Object getInstance(java.lang.Class)
org.simpleframework.xml.core.ElementLabel: org.simpleframework.xml.core.Decorator getDecorator()
org.jaudiotagger.tag.id3.framebody.FrameBodyTBPM: java.lang.String getIdentifier()
com.caij.vip.SeeApiResponse: SeeApiResponse()
com.google.android.material.navigation.NavigationBarMenuView: void setItemActiveIndicatorWidth(int)
org.simpleframework.xml.transform.Transformer: boolean valid(java.lang.Class)
androidx.recyclerview.widget.RecyclerView: int getScrollState()
com.umeng.commonsdk.statistics.proto.c$a: void a(com.umeng.analytics.pro.bu,com.umeng.commonsdk.statistics.proto.c)
com.caij.puremusic.drive.model.SubsonicSong: java.lang.String component10()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.jaudiotagger.tag.id3.framebody.FrameBodyTPE1: FrameBodyTPE1(java.nio.ByteBuffer,int)
androidx.core.view.AccessibilityDelegateCompat: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
org.jcodec.containers.mp4.boxes.VideoMediaHeaderBox: int getrOpColor()
com.umeng.analytics.pro.ci: byte[] f()
com.alipay.apmobilesecuritysdk.f.b: java.lang.Thread b(com.alipay.apmobilesecuritysdk.f.b)
com.caij.puremusic.db.model.PlaybackSongQueries$getPlaybacksByType$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
com.caij.puremusic.drive.model.PlayListsSubsonicResponse$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: java.lang.String getIdentifier()
org.simpleframework.xml.core.AnnotationHandler: void name(java.lang.StringBuilder)
org.simpleframework.xml.core.ArrayFactory: org.simpleframework.xml.core.Instance getInstance(org.simpleframework.xml.stream.InputNode)
org.jaudiotagger.tag.id3.ID3v1Tag: org.jaudiotagger.tag.TagField createField(org.jaudiotagger.tag.images.Artwork)
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getImeiNew(android.content.Context)
com.caij.puremusic.model.Playlist: boolean equals(java.lang.Object)
org.jaudiotagger.audio.mp3.MP3AudioHeader: java.lang.String getMpegVersion()
org.jaudiotagger.tag.id3.framebody.FrameBodyTRDA: java.lang.String getIdentifier()
com.tencent.mm.opensdk.modelpay.JumpToOfflinePay$Resp: JumpToOfflinePay$Resp(android.os.Bundle)
org.simpleframework.xml.stream.NodeMap: java.lang.String getName()
org.jaudiotagger.audio.AudioFileIO: AudioFileIO()
com.umeng.commonsdk.statistics.common.MLog: java.lang.String getStackTrace(java.lang.Throwable)
org.simpleframework.xml.stream.OutputNode: org.simpleframework.xml.stream.OutputNode setAttribute(java.lang.String,java.lang.String)
com.umeng.analytics.b: org.json.JSONObject l()
com.caij.puremusic.fragments.settings.AbsSettingsFragment: AbsSettingsFragment()
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
com.google.android.material.bottomsheet.BottomSheetDialog: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
org.simpleframework.xml.core.SignatureBuilder: java.util.List create()
com.caij.puremusic.model.AlbumWithCount: AlbumWithCount(com.caij.puremusic.db.model.Album,int)
com.umeng.analytics.pro.as: long a(long,int,boolean)
me.tankery.lib.circularseekbar.CircularSeekBar: int getCircleFillColor()
org.jaudiotagger.audio.ogg.OggFileReader: org.jaudiotagger.audio.generic.GenericAudioHeader getEncodingInfo(java.io.RandomAccessFile)
com.google.android.material.navigation.NavigationBarMenuView: int getItemIconSize()
org.simpleframework.xml.stream.OutputAttribute: java.lang.String getReference()
org.jcodec.containers.mp4.boxes.EsdsBox: EsdsBox(org.jcodec.containers.mp4.boxes.Header)
com.umeng.analytics.pro.bf: java.lang.Object a(com.umeng.analytics.pro.bu,short)
com.google.android.material.progressindicator.CircularProgressIndicator: CircularProgressIndicator(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.audio.AudioFile: AudioFile()
org.jaudiotagger.tag.datatype.HashMapInterface: java.util.Map getKeyToValue()
com.tencent.bugly.proguard.ay: ay(android.content.Context,com.tencent.bugly.proguard.ac,com.tencent.bugly.proguard.aa,com.tencent.bugly.proguard.ak,com.tencent.bugly.proguard.as)
com.tencent.bugly.proguard.w: android.database.Cursor a(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.tencent.bugly.proguard.v)
com.umeng.analytics.pro.v: void b()
org.jaudiotagger.tag.id3.ID3v24Tag: java.util.List getArtworkList()
org.simpleframework.xml.stream.ProviderFactory: ProviderFactory()
androidx.appcompat.widget.SwitchCompat: void setThumbTintList(android.content.res.ColorStateList)
org.jaudiotagger.tag.id3.ID3v24Frame$StatusFlags: ID3v24Frame$StatusFlags(org.jaudiotagger.tag.id3.ID3v24Frame,byte)
com.tencent.bugly.crashreport.CrashReport: void setHttpProxy(java.net.InetAddress,int)
org.jcodec.containers.mp4.boxes.TrunBox: long getSampleDuration(int)
org.jcodec.containers.mp4.boxes.Edit: Edit(long,long,float)
org.simpleframework.xml.core.PrimitiveValue: boolean validateElement(org.simpleframework.xml.stream.InputNode,java.lang.String)
com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)
com.caij.puremusic.db.model.AlbumQueries$searchAlbumsByName$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.caij.puremusic.db.model.ArtistQueries$SearchArtistByNameQuery: ArtistQueries$SearchArtistByNameQuery(com.caij.puremusic.db.model.ArtistQueries,java.lang.String,kotlin.jvm.functions.Function1)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)
org.jaudiotagger.tag.datatype.ID3v2LyricLine: ID3v2LyricLine(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody)
androidx.fragment.app.Fragment: int getExitAnim()
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
org.jaudiotagger.audio.wav.chunk.WavFactChunk: WavFactChunk(java.nio.ByteBuffer,org.jaudiotagger.audio.iff.ChunkHeader,org.jaudiotagger.audio.generic.GenericAudioHeader)
androidx.core.view.accessibility.AccessibilityManagerCompat$Api19Impl: boolean removeTouchExplorationStateChangeListenerWrapper(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)
org.jaudiotagger.tag.flac.FlacTag: java.lang.String toString()
org.jcodec.containers.mp4.boxes.SegmentIndexBox: java.lang.String toString()
com.alipay.sdk.app.AuthTask: java.lang.String auth(java.lang.String,boolean)
com.tencent.bugly.proguard.as: void a(java.util.ArrayList,byte[])
org.jaudiotagger.tag.id3.AbstractID3v2Tag: void addNewFrameToMap(java.util.List,java.util.HashMap,org.jaudiotagger.tag.id3.AbstractID3v2Frame,org.jaudiotagger.tag.id3.AbstractID3v2Frame)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: boolean isRoot()
com.umeng.analytics.pro.i: android.database.Cursor a(java.lang.String,android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.caij.puremusic.drive.model.Media$Companion: kotlinx.serialization.KSerializer serializer()
org.simpleframework.xml.core.TemplateLabel: boolean isAttribute()
org.jcodec.containers.mp4.boxes.Box: Box(org.jcodec.containers.mp4.boxes.Header)
org.jaudiotagger.tag.datatype.MultipleTextEncodedStringNullTerminated: MultipleTextEncodedStringNullTerminated(java.lang.String,org.jaudiotagger.tag.id3.AbstractTagFrameBody)
androidx.core.view.ViewCompat$Api16Impl: void setImportantForAccessibility(android.view.View,int)
com.umeng.commonsdk.statistics.proto.Response: com.umeng.commonsdk.statistics.proto.Response setResp_code(int)
com.caij.puremusic.drive.model.PlayLists: com.caij.puremusic.drive.model.PlayLists copy$default(com.caij.puremusic.drive.model.PlayLists,java.util.List,int,java.lang.Object)
com.thegrizzlylabs.sardineandroid.model.PrincipalURL: java.lang.String getHref()
com.caij.puremusic.drive.model.SubsonicSong$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.umeng.commonsdk.stateless.b: void q()
com.caij.puremusic.drive.model.SongItem$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.tencent.mm.opensdk.modelbiz.SubscribeMessage$Resp: boolean checkArgs()
com.tencent.bugly.proguard.bn: bn(byte,java.lang.String,byte[])
org.jaudiotagger.audio.wav.WavOptions: org.jaudiotagger.audio.wav.WavOptions valueOf(java.lang.String)
org.jaudiotagger.utils.EqualsUtil: boolean areEqual(float,float)
org.jaudiotagger.audio.generic.AudioFileWriter: void transferNewFileContentToOriginalFile(java.io.File,java.io.File,java.io.RandomAccessFile,java.nio.channels.FileChannel)
com.alipay.android.phone.mrpc.core.o: void a(byte[])
com.caij.puremusic.drive.model.EmbyFoldersResponse: java.util.List component1()
androidx.core.os.BundleApi21ImplKt: void putSize(android.os.Bundle,java.lang.String,android.util.Size)
org.jaudiotagger.tag.id3.ID3v24Tag: void read(java.nio.ByteBuffer)
com.tencent.bugly.crashreport.CrashReport$CrashHandleCallback: CrashReport$CrashHandleCallback()
org.simpleframework.xml.core.ElementArrayLabel: org.simpleframework.xml.core.Decorator getDecorator()
com.umeng.analytics.pro.cc: void b(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
org.simpleframework.xml.stream.Indenter$Cache: int size()
com.alipay.sdk.app.AuthTask: AuthTask(android.app.Activity)
com.umeng.commonsdk.internal.utils.h: boolean e()
androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
org.jaudiotagger.audio.flac.FlacTagReader: org.jaudiotagger.tag.flac.FlacTag read(java.nio.channels.FileChannel,java.lang.String)
org.jcodec.containers.mp4.boxes.TrackHeaderBox: void setHeight(float)
org.simpleframework.xml.Serializer: java.lang.Object read(java.lang.Object,java.io.Reader,boolean)
androidx.mediarouter.app.MediaRouteButton: void setCheatSheetEnabled(boolean)
com.caij.puremusic.model.smartplaylist.ShuffleAllPlaylist: void writeToParcel(android.os.Parcel,int)
org.simpleframework.xml.stream.OutputNode: boolean isRoot()
com.caij.puremusic.model.DriveFileParcelable: long getFileLength()
com.umeng.commonsdk.UMConfigure$3: UMConfigure$3(android.content.Context)
com.thegrizzlylabs.sardineandroid.impl.BasicAuthenticator: okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response)
org.simpleframework.xml.Serializer: java.lang.Object read(java.lang.Class,java.io.InputStream,boolean)
org.jaudiotagger.tag.id3.framebody.FrameBodyGEOB: void setDescription(java.lang.String)
com.google.android.material.navigation.NavigationBarView: int getItemBackgroundResource()
com.google.android.material.slider.BaseSlider: android.content.res.ColorStateList getTrackActiveTintList()
androidx.constraintlayout.widget.ConstraintLayout: java.lang.String getSceneString()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.jaudiotagger.audio.generic.AudioFileModificationAdapter: void fileModified(org.jaudiotagger.audio.AudioFile,java.io.File)
com.tencent.mm.opensdk.modelmsg.WXWeWorkObject: boolean checkArgs()
com.tencent.mm.opensdk.modelbiz.OpenWebview$Resp: OpenWebview$Resp()
org.simpleframework.xml.util.WeakCache: WeakCache()
org.jaudiotagger.utils.DirectByteBufferUtils$OpenJdkReleaseStrategy: void release(java.nio.Buffer)
com.caij.puremusic.drive.model.ADriveItem: java.lang.String getName()
com.caij.puremusic.model.smartplaylist.AbsSmartPlaylist: int getIconRes()
org.jaudiotagger.tag.id3.framebody.FrameBodyPOSS: FrameBodyPOSS(java.nio.ByteBuffer,int)
org.simpleframework.xml.stream.DocumentReader: org.simpleframework.xml.stream.DocumentReader$Start build(org.simpleframework.xml.stream.DocumentReader$Start)
com.tencent.bugly.proguard.s: boolean j()
com.caij.puremusic.drive.model.SubsonicAlbum: java.util.List component9()
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: java.util.List getArtworkList()
org.jaudiotagger.tag.id3.framebody.FrameBodyAPIC: FrameBodyAPIC()
com.caij.puremusic.model.Home: Home(java.util.List,int,int)
kotlin.collections.AbstractMutableList: AbstractMutableList()
com.umeng.analytics.pro.ci: ci()
com.caij.puremusic.drive.model.Location$Companion: Location$Companion()
com.thegrizzlylabs.sardineandroid.util.SardineUtil: org.w3c.dom.Document createDocument()
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: java.lang.String getTime()
com.umeng.analytics.process.UMProcessDBHelper: com.umeng.analytics.process.UMProcessDBHelper getInstance(android.content.Context)
org.jcodec.containers.mp4.boxes.GenericMediaInfoBox: void parse(java.nio.ByteBuffer)
androidx.fragment.app.Fragment: android.view.View getAnimatingAway()
org.simpleframework.xml.stream.OutputNodeMap: org.simpleframework.xml.stream.OutputNode get(java.lang.String)
com.caij.puremusic.model.PlaylistWrapper: com.caij.puremusic.db.model.Song getFirstSong()
com.tencent.mmkv.MMKV: void close()
com.thegrizzlylabs.sardineandroid.model.Principal: com.thegrizzlylabs.sardineandroid.model.Unauthenticated getUnauthenticated()
org.simpleframework.xml.core.TreeModel: void registerAttribute(org.simpleframework.xml.core.Label)
com.caij.puremusic.db.model.PlayCountEntityQueries$insert$2: PlayCountEntityQueries$insert$2()
org.jcodec.containers.mp4.boxes.CompositionOffsetsBox: void doWrite(java.nio.ByteBuffer)
com.umeng.analytics.pro.bo: void d()
org.simpleframework.xml.core.SignatureBuilder: boolean isValid()
org.jaudiotagger.tag.images.AndroidImageHandler: byte[] writeImageAsPng(java.awt.image.BufferedImage)
org.jaudiotagger.tag.images.StandardArtwork: void setFromMetadataBlockDataPicture(org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataPicture)
org.jaudiotagger.tag.id3.ID3v22Tag: java.lang.String getValue(org.jaudiotagger.tag.FieldKey,int)
com.caij.puremusic.drive.model.ParentReference: com.caij.puremusic.drive.model.ParentReference copy$default(com.caij.puremusic.drive.model.ParentReference,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
org.jaudiotagger.audio.flac.FlacFileWriter: void deleteTag(org.jaudiotagger.tag.Tag,java.nio.channels.FileChannel,java.lang.String)
com.umeng.commonsdk.statistics.proto.c: void b(boolean)
com.caij.puremusic.db.model.AlbumQueries$GetAlbumByArtistIdQuery: java.lang.String toString()
com.thegrizzlylabs.sardineandroid.model.Prop: java.util.List getAny()
com.umeng.commonsdk.statistics.proto.a$a: void a(com.umeng.analytics.pro.bu,com.umeng.commonsdk.statistics.proto.a)
com.yalantis.ucrop.view.GestureCropImageView: void setDoubleTapScaleSteps(int)
org.jaudiotagger.tag.id3.framebody.FrameBodyPIC: FrameBodyPIC(java.nio.ByteBuffer,int)
org.jaudiotagger.tag.TagTextField: java.lang.String getContent()
org.simpleframework.xml.core.Composite: boolean validate(org.simpleframework.xml.stream.InputNode)
com.caij.puremusic.drive.model.WebDAVToken$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
org.simpleframework.xml.core.AttributeLabel: java.lang.Object getEmpty(org.simpleframework.xml.core.Context)
com.umeng.commonsdk.internal.c$5: void onMessageSend()
com.caij.puremusic.drive.model.SubsonicAlbum: java.lang.String getId()
com.umeng.analytics.pro.o: void c()
org.jcodec.containers.mp4.boxes.MovieFragmentHeaderBox: void doWrite(java.nio.ByteBuffer)
com.tencent.mm.opensdk.modelbiz.WXQRCodePay$Resp: WXQRCodePay$Resp(android.os.Bundle)
com.caij.puremusic.drive.model.WebDAVToken: boolean equals(java.lang.Object)
com.tencent.bugly.proguard.at: void c()
org.jaudiotagger.tag.id3.TyerTdatAggregatedFrame: TyerTdatAggregatedFrame()
org.simpleframework.xml.strategy.Value: java.lang.Object getValue()
org.jaudiotagger.audio.wav.WavRIFFHeader: boolean isValidHeader(java.nio.channels.FileChannel)
org.jaudiotagger.tag.id3.AbstractTagFrame: boolean isSubsetOf(java.lang.Object)
com.caij.puremusic.db.model.SongEntityQueries$isSongExistsInPlaylist$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
org.simpleframework.xml.core.PathParser: boolean isEmpty(java.lang.String)
com.caij.puremusic.db.model.PlaybackSongQueries$GetPlaybacksByTypeQuery: int getType()
org.jaudiotagger.tag.lyrics3.Lyrics3v2Field: Lyrics3v2Field(org.jaudiotagger.tag.lyrics3.Lyrics3v2Field)
com.tencent.mm.opensdk.utils.b: boolean a(int)
com.tencent.mm.opensdk.modelmsg.WXDynamicVideoMiniProgramObject: boolean checkArgs()
org.jcodec.containers.mp4.boxes.MediaInfoBox: org.jcodec.containers.mp4.boxes.NodeBox getStbl()
com.caij.puremusic.db.model.SongQueries$GetSongCountBySourceIdQuery: SongQueries$GetSongCountBySourceIdQuery(com.caij.puremusic.db.model.SongQueries,long,kotlin.jvm.functions.Function1)
com.google.android.material.slider.Slider: Slider(android.content.Context,android.util.AttributeSet)
com.caij.puremusic.db.model.ServerLyricsQueries$deleteSongBySource$1: java.lang.Object invoke(java.lang.Object)
org.simpleframework.xml.core.CacheLabel: java.lang.annotation.Annotation getAnnotation()
org.jaudiotagger.tag.flac.FlacTag: org.jaudiotagger.tag.TagField createField(java.lang.String,java.lang.String)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTagField: java.lang.String getId()
com.tencent.mm.opensdk.openapi.BaseWXApiImplV10: boolean sendOpenBusinessView(android.content.Context,com.tencent.mm.opensdk.modelbase.BaseReq)
com.caij.puremusic.db.model.ServerSongCover: java.lang.String toString()
org.simpleframework.xml.stream.PullReader$Text: java.lang.String getValue()
org.jaudiotagger.utils.tree.TreePath: void readObject(java.io.ObjectInputStream)
org.jaudiotagger.tag.id3.framebody.FrameBodyTSOA: java.lang.String getIdentifier()
org.jaudiotagger.tag.id3.framebody.FrameBodyWOAF: java.lang.String getIdentifier()
com.caij.puremusic.drive.model.SubPlayList$Companion: SubPlayList$Companion()
kotlin.LazyThreadSafetyMode: LazyThreadSafetyMode(java.lang.String,int)
org.jaudiotagger.tag.datatype.AbstractString: java.nio.charset.Charset getTextEncodingCharSet()
org.jaudiotagger.audio.mp4.Mp4AtomIdentifier: org.jaudiotagger.audio.mp4.Mp4AtomIdentifier[] values()
com.caij.puremusic.drive.model.SubsonicSearchResponse$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
org.simpleframework.xml.core.Variable: org.simpleframework.xml.core.Converter getConverter(org.simpleframework.xml.core.Context)
org.jaudiotagger.audio.generic.Utils: java.lang.String getString(java.nio.ByteBuffer,java.nio.charset.Charset)
org.jaudiotagger.tag.lyrics3.Lyrics3v1: java.lang.String getLyric()
com.caij.puremusic.drive.model.GoogleDriveFileResponse: java.lang.String getKind()
com.caij.puremusic.db.model.AlbumQueries$AlbumQuery$execute$1: java.lang.Object invoke(java.lang.Object)
org.jaudiotagger.utils.tree.MutableTreeNode: void insert(org.jaudiotagger.utils.tree.MutableTreeNode,int)
com.caij.puremusic.drive.model.AlbumItem: java.lang.String component1()
com.caij.puremusic.drive.model.SubsonicAlbum: int component4()
com.caij.puremusic.drive.model.MediaContainer$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.google.common.io.Files$FilePredicate: com.google.common.io.Files$FilePredicate[] $values()
org.jaudiotagger.audio.generic.Utils: int u(short)
com.umeng.commonsdk.utils.UMUtils: java.lang.String getDeviceToken(android.content.Context)
com.caij.puremusic.model.AudioTagInfo: java.util.List getFilePaths()
org.jaudiotagger.tag.datatype.StringNullTerminated: boolean equals(java.lang.Object)
org.simpleframework.xml.core.PathParser$PathSection: boolean isPath()
com.thegrizzlylabs.sardineandroid.model.Group: Group()
org.simpleframework.xml.core.CacheParameter: java.lang.String getName()
org.simpleframework.xml.core.NamespaceDecorator: void add(org.simpleframework.xml.Namespace)
org.simpleframework.xml.convert.ConverterScanner: org.simpleframework.xml.convert.Converter getConverter(org.simpleframework.xml.strategy.Type,java.lang.Object)
com.tencent.mmkv.MMKV: java.lang.String decodeString(long,java.lang.String,java.lang.String)
org.simpleframework.xml.transform.GregorianCalendarTransform: java.util.GregorianCalendar read(java.util.Date)
com.caij.puremusic.fragments.search.Filter: com.caij.puremusic.fragments.search.Filter[] $values()
org.simpleframework.xml.core.ExtractorFactory$ExtractorBuilder: java.lang.reflect.Constructor access$000(org.simpleframework.xml.core.ExtractorFactory$ExtractorBuilder)
org.jaudiotagger.audio.ogg.util.OggPage: void fixCksum()
com.heinrichreimersoftware.materialintro.view.InkPageIndicator: InkPageIndicator(android.content.Context,android.util.AttributeSet)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
org.json.alipay.b: java.lang.String a(java.lang.Object)
com.thegrizzlylabs.sardineandroid.impl.handler.LockResponseHandler: java.lang.String getToken(java.io.InputStream)
com.alipay.android.app.IAlixPay: void deployFastConnect()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTagField: boolean isBinary()
org.simpleframework.xml.stream.NamespaceMap: java.lang.String getReference(java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnChildScrollUpCallback(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback)
androidx.constraintlayout.widget.Placeholder: void setContentId(int)
androidx.fragment.app.Fragment: void onResume()
com.caij.puremusic.db.model.PlaylistEntityQueries$SearchPlaylistByNameQuery: PlaylistEntityQueries$SearchPlaylistByNameQuery(com.caij.puremusic.db.model.PlaylistEntityQueries,java.lang.String,kotlin.jvm.functions.Function1)
org.jaudiotagger.audio.mp4.ChunkReader: boolean hasNext()
androidx.fragment.app.DialogFragment: android.app.Dialog requireDialog()
com.umeng.commonsdk.statistics.proto.c$a: void b(com.umeng.analytics.pro.bu,com.umeng.analytics.pro.av)
com.umeng.analytics.pro.l$a: com.umeng.analytics.pro.l a()
com.umeng.commonsdk.internal.utils.a: long b(android.content.Context,java.lang.String)
org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM: FrameBodyCOMM()
com.caij.puremusic.MainModuleKt$roomModule$1: MainModuleKt$roomModule$1()
com.caij.puremusic.drive.model.OneDriveFile$$serializer: OneDriveFile$$serializer()
com.caij.puremusic.drive.model.AlbumListResponse: com.caij.puremusic.drive.model.SubsonicResponse component1()
org.simpleframework.xml.stream.InputElement: boolean isEmpty()
org.jaudiotagger.audio.AudioFileFilter: boolean accept(java.io.File)
androidx.window.core.SpecificationComputer$VerificationMode: SpecificationComputer$VerificationMode(java.lang.String,int)
com.umeng.commonsdk.internal.crash.UMCrashManager: void reportCrash(android.content.Context,java.lang.Throwable)
com.caij.puremusic.drive.model.PlayListsSubsonicResponse: PlayListsSubsonicResponse()
com.caij.puremusic.drive.model.DropboxDriveFileResponse$Companion: DropboxDriveFileResponse$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.umeng.analytics.b: void a(java.lang.String,java.lang.String)
org.simpleframework.xml.core.Revision: double getDefault()
com.alipay.tscenter.biz.rpc.vkeydfp.result.AppListResult: AppListResult()
com.caij.puremusic.db.model.DriveFileDownUrlInfoQueries$insert$1: DriveFileDownUrlInfoQueries$insert$1(com.caij.puremusic.db.model.DriveFileDownUrlInfo)
nl.adaptivity.xmlutil.serialization.DefaultXmlSerializationPolicy$effectiveName$1: DefaultXmlSerializationPolicy$effectiveName$1()
org.jaudiotagger.audio.generic.GenericAudioHeader: java.lang.String getBitRate()
com.tencent.bugly.proguard.at: boolean i()
androidx.constraintlayout.helper.widget.Flow: void setFirstVerticalBias(float)
org.jaudiotagger.tag.id3.ID3Tags: ID3Tags()
com.caij.puremusic.drive.model.PlayListSubsonicResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.PlayListSubsonicResponse)
org.simpleframework.xml.core.ElementMapUnionLabel: org.simpleframework.xml.core.Label getLabel(java.lang.Class)
org.jaudiotagger.audio.asf.io.ModificationResult: ModificationResult(int,long,org.jaudiotagger.audio.asf.data.GUID[])
com.caij.puremusic.drive.model.WebDAVToken: java.lang.String component2()
com.caij.puremusic.drive.model.Metadata: int hashCode()
org.jaudiotagger.tag.vorbiscomment.VorbisCommentTag: java.lang.String getArtworkMimeType()
org.simpleframework.xml.core.PathParser$PathSection: java.lang.String getPrefix()
androidx.fragment.app.Fragment: void setAllowReturnTransitionOverlap(boolean)
com.tencent.mm.opensdk.modelmsg.WXTextObject: int type()
com.tencent.mm.opensdk.modelpay.PayReq: PayReq()
androidx.fragment.app.DialogFragment: void onCreate(android.os.Bundle)
com.umeng.commonsdk.internal.d: void j(android.content.Context)
com.thegrizzlylabs.sardineandroid.model.WriteContent: WriteContent()
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: DefaultMutableTreeNode(java.lang.Object,boolean)
org.jaudiotagger.audio.wav.WavChunkType: org.jaudiotagger.audio.wav.WavChunkType get(java.lang.String)
org.jaudiotagger.utils.DirectByteBufferUtils$OpenJdkReleaseStrategy: DirectByteBufferUtils$OpenJdkReleaseStrategy()
org.jaudiotagger.audio.asf.data.GUID: int hashCode()
org.jcodec.containers.mp4.boxes.SampleToChunkBox$SampleToChunkEntry: void setCount(int)
org.jaudiotagger.audio.asf.data.ContentDescription: void setTitle(java.lang.String)
io.ktor.websocket.CloseReason$Codes: CloseReason$Codes(java.lang.String,int,short)
org.xmlpull.v1.XmlPullParser: int getDepth()
com.umeng.commonsdk.stateless.d: boolean a(java.io.File)
org.jaudiotagger.audio.flac.FlacTagReader: FlacTagReader()
org.jaudiotagger.audio.asf.data.ContentDescription: long writeInto(java.io.OutputStream)
org.jaudiotagger.utils.tree.DefaultMutableTreeNode: java.lang.String toString()
com.caij.puremusic.drive.model.MediaInfoWrapper: MediaInfoWrapper(java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.ArrayList,java.util.ArrayList)
com.tencent.bugly.proguard.ap: void b(long)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
com.caij.puremusic.drive.model.FMediaContainer: FMediaContainer(int,int,java.lang.String,java.util.List,kotlinx.serialization.internal.SerializationConstructorMarker)
com.tencent.mm.opensdk.modelmsg.WXEnterpriseCardObject: int type()
org.simpleframework.xml.stream.NodeReader: java.lang.String readBuffer(org.simpleframework.xml.stream.InputNode)
com.caij.puremusic.drive.model.Location: void write$Self(com.caij.puremusic.drive.model.Location,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
org.simpleframework.xml.core.StructureBuilder: StructureBuilder(org.simpleframework.xml.core.Scanner,org.simpleframework.xml.core.Detail,org.simpleframework.xml.core.Support)
com.google.android.material.button.MaterialButtonToggleGroup: void setupButtonChild(com.google.android.material.button.MaterialButton)
com.caij.puremusic.drive.model.AlbumSubsonicResponse$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.tencent.mm.opensdk.diffdev.a.c: void onPostExecute(java.lang.Object)
org.simpleframework.xml.core.EmptyExpression: org.simpleframework.xml.core.Expression getPath(int)
com.umeng.analytics.pro.an: com.umeng.analytics.pro.bp R()
com.tencent.mm.opensdk.modelmsg.WXEmojiPageSharedObject: void unserialize(android.os.Bundle)
org.jaudiotagger.tag.id3.framebody.FrameBodyIPLS: FrameBodyIPLS(org.jaudiotagger.tag.id3.framebody.FrameBodyTIPL)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] values()
org.jaudiotagger.audio.mp3.MPEGFrameHeader: boolean isOriginal()
org.simpleframework.xml.convert.Reference: java.lang.Class getType()
com.thegrizzlylabs.sardineandroid.Version: void main(java.lang.String[])
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)
com.google.android.material.chip.Chip: void setChipIconTint(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.caij.puremusic.db.model.ServerArtistCoverQueries: app.cash.sqldelight.Query getById(java.lang.String,kotlin.jvm.functions.Function3)
org.jaudiotagger.audio.asf.util.TagConverter: org.jaudiotagger.tag.asf.AsfTag createTagOf(org.jaudiotagger.audio.asf.data.AsfHeader)
org.jaudiotagger.tag.vorbiscomment.VorbisCommentFieldKey: VorbisCommentFieldKey(java.lang.String,int,java.lang.String)
org.jaudiotagger.tag.wav.WavTag: java.util.List getFields(org.jaudiotagger.tag.FieldKey)
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: int getBitrateMinimal()
org.jcodec.containers.mp4.boxes.AliasBox: org.jcodec.containers.mp4.boxes.AliasBox createSelfRef()
org.jaudiotagger.tag.datatype.PairedTextEncodedStringNullTerminated: java.lang.String toString()
com.caij.puremusic.db.model.ServerAudioFormat: com.caij.puremusic.db.model.ServerAudioFormat copy$default(com.caij.puremusic.db.model.ServerAudioFormat,long,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
com.caij.puremusic.drive.model.User$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.User)
com.umeng.commonsdk.utils.UMUtils: java.lang.String[] getActiveUser(android.content.Context)
com.caij.puremusic.model.Contributor$Creator: com.caij.puremusic.model.Contributor[] newArray(int)
org.jaudiotagger.audio.generic.GenericAudioHeader: GenericAudioHeader()
androidx.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
com.umeng.commonsdk.statistics.proto.d: com.umeng.commonsdk.statistics.proto.d a()
org.jaudiotagger.tag.asf.AsfTagBannerField: int getImageDataSize()
org.jaudiotagger.tag.mp4.Mp4ContentTypeValue: org.jaudiotagger.tag.mp4.Mp4ContentTypeValue[] values()
org.jaudiotagger.tag.id3.ID3Tags: boolean isID3v22FrameIdentifier(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
com.yalantis.ucrop.view.UCropView: UCropView(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.tag.id3.ID3v23Tag: java.lang.String getIdentifier()
com.caij.puremusic.drive.model.SongItem$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.SongItem)
com.tencent.bugly.proguard.d: void b()
org.simpleframework.xml.core.ModelAssembler: void assemble(org.simpleframework.xml.core.Model,org.simpleframework.xml.Order)
com.caij.puremusic.drive.model.AlbumSubsonicResponse$$serializer: AlbumSubsonicResponse$$serializer()
org.jcodec.containers.mp4.boxes.UdtaMetaBox: void parse(java.nio.ByteBuffer)
org.jaudiotagger.utils.tree.TreeNode: boolean getAllowsChildren()
org.simpleframework.xml.core.Context: java.lang.Class getType(org.simpleframework.xml.strategy.Type,java.lang.Object)
org.jaudiotagger.audio.aiff.chunk.SoundChunk: SoundChunk(org.jaudiotagger.audio.iff.ChunkHeader,java.nio.ByteBuffer)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
org.jcodec.containers.mp4.boxes.FormatBox: int estimateSize()
org.jaudiotagger.audio.flac.metadatablock.MetadataBlockDataStreamInfo: int readTotalNumberOfSamples()
com.caij.puremusic.drive.model.PlaylistResponse: java.lang.String toString()
com.umeng.commonsdk.statistics.common.ReportPolicy$ReportByInterval: boolean shouldSendMessage(boolean)
com.tencent.bugly.proguard.bs: void a(com.tencent.bugly.proguard.k)
org.jaudiotagger.tag.id3.ID3v24PreferredFrameOrderComparator: int compare(java.lang.Object,java.lang.Object)
org.jaudiotagger.audio.opus.util.OpusVorbisIdentificationHeader: void setVorbisVersion(byte)
androidx.fragment.app.Fragment: boolean hasOptionsMenu()
com.google.android.material.chip.Chip: Chip(android.content.Context,android.util.AttributeSet)
org.jaudiotagger.tag.datatype.PartOfSet: boolean equals(java.lang.Object)
org.simpleframework.xml.core.ElementUnionParameter: java.lang.String getPath()
org.simpleframework.xml.stream.StreamReader: org.simpleframework.xml.stream.EventNode peek()
androidx.fragment.app.Fragment: java.util.ArrayList getSharedElementSourceNames()
org.jcodec.containers.mp4.boxes.ClipRegionBox: short getWidth()
org.jaudiotagger.tag.datatype.PartOfSet: java.lang.Object getValue()
org.jaudiotagger.audio.generic.AbstractTag: void setField(org.jaudiotagger.tag.FieldKey,java.lang.String[])
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.caij.puremusic.drive.model.EmbyAlbumsResponse$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.EmbyAlbumsResponse)
org.jaudiotagger.tag.id3.ID3v22Frame: ID3v22Frame(java.nio.ByteBuffer)
com.tencent.bugly.proguard.o: void onDbUpgrade(android.database.sqlite.SQLiteDatabase,int,int)
com.umeng.commonsdk.statistics.proto.b$d: b$d()
com.caij.puremusic.drive.model.PlexUser: com.caij.puremusic.drive.model.PlexUser copy(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.caij.puremusic.db.model.SongQueries$searchSongsByTitle$1: java.lang.Object invoke(app.cash.sqldelight.db.SqlCursor)
org.simpleframework.xml.core.MethodScanner: void process(java.lang.reflect.Method,java.lang.annotation.Annotation,java.lang.annotation.Annotation[])
org.jaudiotagger.tag.id3.framebody.FrameBodyTDRC: java.lang.String formatAndParse(java.text.SimpleDateFormat,java.text.SimpleDateFormat,java.lang.String)
org.jaudiotagger.tag.datatype.PairedTextEncodedStringNullTerminated: int getSize()
androidx.core.view.MenuItemCompat$Api26Impl: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
com.umeng.commonsdk.internal.utils.a: a()
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1: java.lang.Object[] newArray(int)
com.google.android.material.internal.ForegroundLinearLayout: void setForeground(android.graphics.drawable.Drawable)
org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox: org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox$Factory copy(org.jcodec.containers.mp4.boxes.TrackFragmentHeaderBox)
org.jaudiotagger.tag.id3.ID3v22Tag: byte getRelease()
com.tencent.mm.opensdk.modelbiz.WXChannelOpenProfile$Resp: void toBundle(android.os.Bundle)
org.jaudiotagger.audio.asf.data.ContainerType: ContainerType(java.lang.String,int,org.jaudiotagger.audio.asf.data.GUID,int,boolean,boolean,boolean,boolean)
org.jaudiotagger.tag.TagOptionSingleton: void addReplaceWord(java.lang.String,java.lang.String)
org.simpleframework.xml.stream.InputNode: boolean isEmpty()
com.caij.puremusic.db.model.Album: long component7()
org.jaudiotagger.tag.datatype.Lyrics3Line: boolean hasTimeStamp()
org.jaudiotagger.audio.dsf.DsfChunkType: org.jaudiotagger.audio.dsf.DsfChunkType get(java.lang.String)
org.jaudiotagger.tag.TagOptionSingleton: void addParenthesis(java.lang.String,java.lang.String)
org.simpleframework.xml.core.ElementMapParameter: java.lang.String toString()
com.caij.puremusic.db.model.ServerLyricsQueries$deleteSongBySource$1: ServerLyricsQueries$deleteSongBySource$1(long)
com.caij.puremusic.db.model.FolderQueries$deleteById$1: java.lang.Object invoke(java.lang.Object)
com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getMCCMNC(android.content.Context)
org.simpleframework.xml.stream.CamelCaseStyle: void setElement(java.lang.String,java.lang.String)
com.umeng.commonsdk.statistics.proto.b: java.lang.String toString()
com.caij.puremusic.model.smartplaylist.ShuffleAllPlaylist: java.util.List songs()
com.caij.puremusic.views.TopAppBarLayout: androidx.appcompat.widget.Toolbar getToolbar()
com.caij.puremusic.drive.model.PlexUser: boolean equals(java.lang.Object)
com.afollestad.materialdialogs.internal.main.DialogLayout: DialogLayout(android.content.Context,android.util.AttributeSet)
com.tencent.mm.opensdk.modelbiz.CreateChatroom$Resp: boolean checkArgs()
org.jaudiotagger.tag.id3.ID3v22Tag: void write(java.nio.channels.WritableByteChannel,int)
com.tencent.mm.opensdk.diffdev.a.b$a: b$a()
org.jaudiotagger.tag.datatype.ID3v2LyricLine: void setText(java.lang.String)
kotlin.collections.State: kotlin.collections.State valueOf(java.lang.String)
org.simpleframework.xml.stream.DocumentProvider: org.simpleframework.xml.stream.EventReader provide(org.xml.sax.InputSource)
com.caij.puremusic.drive.model.Propstat$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.caij.puremusic.drive.model.Propstat)
