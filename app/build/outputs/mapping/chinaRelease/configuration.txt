# The proguard configuration file for the following section is /Users/bytedance/StudioProjects/pure-music/app/build/intermediates/default_proguard_files/global/proguard-android-optimize.txt-7.2.2
# This is a configuration file for ProGuard.
# http://proguard.sourceforge.net/index.html#manual/usage.html
#
# Starting with version 2.2 of the Android plugin for Gradle, this file is distributed together with
# the plugin and unpacked at build-time. The files in $ANDROID_HOME are no longer maintained and
# will be ignored by new version of the Android plugin for Gradle.

# Optimizations: If you don't want to optimize, use the proguard-android.txt configuration file
# instead of this one, which turns off the optimization flags.
# Adding optimization introduces certain risks, since for example not all optimizations performed by
# ProGuard works on all versions of Dalvik.  The following flags turn off various optimizations
# known to have issues, but the list may not be complete or up to date. (The "arithmetic"
# optimization can be used if you are only targeting Android 2.0 or later.)  Make sure you test
# thoroughly if you go this route.
-optimizations !code/simplification/arithmetic,!code/simplification/cast,!field/*,!class/merging/*
-optimizationpasses 5
-allowaccessmodification

-dontusemixedcaseclassnames
-dontskipnonpubliclibraryclasses
-verbose

# Preserve some attributes that may be required for reflection.
-keepattributes AnnotationDefault,
                EnclosingMethod,
                InnerClasses,
                RuntimeVisibleAnnotations,
                RuntimeVisibleParameterAnnotations,
                RuntimeVisibleTypeAnnotations,
                Signature

-keep public class com.google.vending.licensing.ILicensingService
-keep public class com.android.vending.licensing.ILicensingService
-keep public class com.google.android.vending.licensing.ILicensingService
-dontnote com.android.vending.licensing.ILicensingService
-dontnote com.google.vending.licensing.ILicensingService
-dontnote com.google.android.vending.licensing.ILicensingService

# For native methods, see http://proguard.sourceforge.net/manual/examples.html#native
-keepclasseswithmembernames,includedescriptorclasses class * {
    native <methods>;
}

# Keep setters in Views so that animations can still work.
-keepclassmembers public class * extends android.view.View {
    void set*(***);
    *** get*();
}

# We want to keep methods in Activity that could be used in the XML attribute onClick.
-keepclassmembers class * extends android.app.Activity {
    public void *(android.view.View);
}

# For enumeration classes, see http://proguard.sourceforge.net/manual/examples.html#enumerations
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

-keepclassmembers class * implements android.os.Parcelable {
    public static final ** CREATOR;
}

# Preserve annotated Javascript interface methods.
-keepclassmembers class * {
    @android.webkit.JavascriptInterface <methods>;
}

# The support libraries contains references to newer platform versions.
# Don't warn about those in case this app is linking against an older
# platform version. We know about them, and they are safe.
-dontnote android.support.**
-dontnote androidx.**
-dontwarn android.support.**
-dontwarn androidx.**

# This class is deprecated, but remains for backward compatibility.
-dontwarn android.util.FloatMath

# Understand the @Keep support annotation.
-keep class android.support.annotation.Keep
-keep class androidx.annotation.Keep

-keep @android.support.annotation.Keep class * {*;}
-keep @androidx.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <init>(...);
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <init>(...);
}

# These classes are duplicated between android.jar and org.apache.http.legacy.jar.
-dontnote org.apache.http.**
-dontnote android.net.http.**

# These classes are duplicated between android.jar and core-lambda-stubs.jar.
-dontnote java.lang.invoke.**

# End of content from /Users/bytedance/StudioProjects/pure-music/app/build/intermediates/default_proguard_files/global/proguard-android-optimize.txt-7.2.2
# The proguard configuration file for the following section is /Users/bytedance/StudioProjects/pure-music/app/proguard-rules.pro
# Add project specific ProGuard rules here.
# By default, the flags in this file are appended to flags specified
# in /Users/hemanths/Library/Android/sdk/tools/proguard/proguard-android.txt
# You can edit the include path and order by changing the proguardFiles
# directive in build.gradle.
#
# For more details, see
#   http://developer.android.com/guide/developing/tools/proguard.html

# Add any project specific keep options here:

# If your project uses WebView with JS, uncomment the following
# and specify the fully qualified class name to the JavaScript interface
# class:
#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
#   public *;
#}

# Preserve the line number information for
# debugging stack traces.
-keepattributes SourceFile,LineNumberTable

# If you keep the line number information, uncomment this to
# hide the original source file name.
#-renamesourcefileattribute SourceFile

-dontwarn java.lang.invoke.*
-dontwarn **$$Lambda$*
-dontwarn javax.annotation.**

# RetroFit
-dontwarn retrofit.**
-keep class retrofit.** { *; }

# Glide
-keep public class * implements com.bumptech.glide.module.GlideModule
-keep class * extends com.bumptech.glide.module.AppGlideModule {
 <init>(...);
}
-keep public enum com.bumptech.glide.load.ImageHeaderParser$** {
  **[] $VALUES;
  public *;
}
-keep class com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder {
  *** rewind();
}

# OkHttp
-keepattributes Signature
-keepattributes *Annotation*
-keep interface com.squareup.okhttp3.** { *; }
-dontwarn com.squareup.okhttp3.**

#-dontwarn
#-ignorewarnings

#Jaudiotagger
-dontwarn org.jaudiotagger.**
-dontwarn org.jcodec.**
-keep class org.jaudiotagger.** { *; }
-keep class org.jcodec.** { *; }

-keepclassmembers enum * { *; }
-keepattributes *Annotation*, Signature, Exception
-keepnames class androidx.navigation.fragment.NavHostFragment
-keep class * extends androidx.fragment.app.Fragment{}
-keepnames class * extends android.os.Parcelable
-keepnames class * extends java.io.Serializable
-keep class com.caij.puremusic.network.model.** { *; }
-keep class com.caij.puremusic.model.** { *; }
-keep class com.caij.puremusic.db.model.** { *; }
-keep class com.caij.puremusic.drive.model.** { *; }
-keep class com.google.android.material.bottomsheet.** { *; }

-keep class com.thegrizzlylabs.sardineandroid.** { *; }

## umeng
-keep class com.umeng.** {*;}

-keep class org.repackage.** {*;}

-keepclassmembers class * {
   public <init> (org.json.JSONObject);
}

-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

## bugly
-dontwarn com.tencent.bugly.**
-keep public class com.tencent.bugly.**{*;}

##xmlutil
-keep enum nl.adaptivity.xmlutil.EventType { *;}
-keep class javax.xml.namespace.**{*;}

# 默 状态栏歌词插件
-keep class StatusBarLyric.API.StatusBarLyric {*;}
-keep class cn.lyric.getter.api.tools.EventTools{*;}
# End of content from /Users/bytedance/StudioProjects/pure-music/app/proguard-rules.pro
# The proguard configuration file for the following section is /Users/bytedance/StudioProjects/pure-music/app/build/intermediates/aapt_proguard_file/chinaRelease/aapt_rules.txt
-keep class androidx.core.app.CoreComponentFactory { <init>(); }
-keep class androidx.core.content.FileProvider { <init>(); }
-keep class androidx.startup.InitializationProvider { <init>(); }
-keep class com.alipay.sdk.app.APayEntranceActivity { <init>(); }
-keep class com.alipay.sdk.app.AlipayResultActivity { <init>(); }
-keep class com.alipay.sdk.app.H5AuthActivity { <init>(); }
-keep class com.alipay.sdk.app.H5OpenAuthActivity { <init>(); }
-keep class com.alipay.sdk.app.H5PayActivity { <init>(); }
-keep class com.alipay.sdk.app.PayResultActivity { <init>(); }
-keep class com.android.billingclient.api.ProxyBillingActivity { <init>(); }
-keep class com.caij.lib.lifemanager.ProcessProvider { <init>(); }
-keep class com.caij.puremusic.App { <init>(); }
-keep class com.caij.puremusic.activities.DriveModeActivity { <init>(); }
-keep class com.caij.puremusic.activities.FolderFilesActivity { <init>(); }
-keep class com.caij.puremusic.activities.FolderManagerActivity { <init>(); }
-keep class com.caij.puremusic.activities.HolderActivity { <init>(); }
-keep class com.caij.puremusic.activities.LicenseActivity { <init>(); }
-keep class com.caij.puremusic.activities.LockScreenActivity { <init>(); }
-keep class com.caij.puremusic.activities.MainActivity { <init>(); }
-keep class com.caij.puremusic.activities.PermissionActivity { <init>(); }
-keep class com.caij.puremusic.activities.SettingActivity { <init>(); }
-keep class com.caij.puremusic.activities.ShareInstagramStory { <init>(); }
-keep class com.caij.puremusic.activities.SupportDevelopmentActivity { <init>(); }
-keep class com.caij.puremusic.activities.WebActivity { <init>(); }
-keep class com.caij.puremusic.activities.bugreport.BugReportActivity { <init>(); }
-keep class com.caij.puremusic.activities.saf.SAFGuideActivity { <init>(); }
-keep class com.caij.puremusic.activities.tageditor.AlbumTagEditorActivity { <init>(); }
-keep class com.caij.puremusic.activities.tageditor.AlbumTagEditorActivityV2 { <init>(); }
-keep class com.caij.puremusic.activities.tageditor.SongTagEditorActivity { <init>(); }
-keep class com.caij.puremusic.activities.tageditor.SongTagEditorActivityV2 { <init>(); }
-keep class com.caij.puremusic.appshortcuts.AppShortcutLauncherActivity { <init>(); }
-keep class com.caij.puremusic.appwidgets.AppWidgetBig { <init>(); }
-keep class com.caij.puremusic.appwidgets.AppWidgetCard { <init>(); }
-keep class com.caij.puremusic.appwidgets.AppWidgetClassic { <init>(); }
-keep class com.caij.puremusic.appwidgets.AppWidgetSmall { <init>(); }
-keep class com.caij.puremusic.appwidgets.AppWidgetText { <init>(); }
-keep class com.caij.puremusic.drive.adrive.Auth20Activity { <init>(); }
-keep class com.caij.puremusic.drive.dropbox.DropBoxAuthActivity { <init>(); }
-keep class com.caij.puremusic.drive.dropbox.DropBoxAuthActivity2 { <init>(); }
-keep class com.caij.puremusic.fragments.backup.RestoreActivity { <init>(); }
-keep class com.caij.puremusic.service.MusicService { <init>(); }
-keep class com.caij.puremusic.wxapi.WXPayEntryActivity { <init>(); }
-keep class com.caij.vip.DefaultFragmentActivity { <init>(); }
-keep class com.caij.vip.DonatedActivity { <init>(); }
-keep class com.github.dhaval2404.imagepicker.ImagePickerActivity { <init>(); }
-keep class com.github.dhaval2404.imagepicker.ImagePickerFileProvider { <init>(); }
-keep class com.google.android.datatransport.runtime.backends.TransportBackendDiscovery { <init>(); }
-keep class com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver { <init>(); }
-keep class com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService { <init>(); }
-keep class com.google.android.gms.auth.api.signin.RevocationBoundService { <init>(); }
-keep class com.google.android.gms.auth.api.signin.internal.SignInHubActivity { <init>(); }
-keep class com.google.android.gms.common.api.GoogleApiActivity { <init>(); }
-keep class com.yalantis.ucrop.UCropActivity { <init>(); }
-keep class android.widget.Space { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.app.AlertController$RecycleListView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.view.menu.ActionMenuItemView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.view.menu.ExpandedMenuView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.view.menu.ListMenuItemView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionBarContainer { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionBarContextView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionBarOverlayLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionMenuView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActivityChooserView$InnerLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.AlertDialogLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.AppCompatCheckBox { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.AppCompatImageButton { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.AppCompatImageView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.AppCompatRadioButton { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.AppCompatSeekBar { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.AppCompatTextView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ButtonBarLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ContentFrameLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.DialogTitle { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.FitWindowsFrameLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.FitWindowsLinearLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.SearchView$SearchAutoComplete { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.SwitchCompat { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.Toolbar { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ViewStubCompat { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.constraintlayout.helper.widget.Flow { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.constraintlayout.widget.Barrier { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.constraintlayout.widget.ConstraintLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.constraintlayout.widget.Guideline { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.core.widget.NestedScrollView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.fragment.app.FragmentContainerView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.gridlayout.widget.GridLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.legacy.widget.Space { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.mediarouter.app.MediaRouteActionProvider { <init>(android.content.Context); }

-keep class androidx.mediarouter.app.MediaRouteExpandCollapseButton { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.mediarouter.app.MediaRouteVolumeSlider { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.mediarouter.app.OverlayListView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.navigation.fragment.NavHostFragment { <init>(); }

-keep class androidx.preference.PreferenceScreen { <init>(...); }

-keep class androidx.preference.UnPressableLinearLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.preference.internal.PreferenceImageView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.recyclerview.widget.RecyclerView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.swiperefreshlayout.widget.SwipeRefreshLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.viewpager.widget.ViewPager { <init>(android.content.Context, android.util.AttributeSet); }

-keep class code.name.monkey.appthemehelper.common.prefs.BorderCircleView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class code.name.monkey.appthemehelper.common.prefs.supportv7.ATEColorPreference { <init>(...); }

-keep class code.name.monkey.appthemehelper.common.prefs.supportv7.ATEListPreference { <init>(...); }

-keep class code.name.monkey.appthemehelper.common.prefs.supportv7.ATEPreference { <init>(...); }

-keep class code.name.monkey.appthemehelper.common.prefs.supportv7.ATEPreferenceCategory { <init>(...); }

-keep class code.name.monkey.appthemehelper.common.prefs.supportv7.ATESeekBarPreference { <init>(...); }

-keep class code.name.monkey.appthemehelper.common.prefs.supportv7.ATESwitchPreference { <init>(...); }

-keep class code.name.monkey.appthemehelper.common.views.ATEAccentTextView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class code.name.monkey.appthemehelper.common.views.ATESwitch { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.afollestad.materialdialogs.color.view.ColorCircleView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.afollestad.materialdialogs.color.view.ObservableEditText { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.afollestad.materialdialogs.color.view.ObservableSeekBar { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.afollestad.materialdialogs.color.view.PreviewFrameView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.afollestad.materialdialogs.color.view.SeekBarGroupLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.afollestad.materialdialogs.color.view.WrapContentViewPager { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.afollestad.materialdialogs.internal.button.DialogActionButton { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.afollestad.materialdialogs.internal.button.DialogActionButtonLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.afollestad.materialdialogs.internal.list.DialogRecyclerView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.afollestad.materialdialogs.internal.main.DialogLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.afollestad.materialdialogs.internal.main.DialogScrollView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.afollestad.materialdialogs.internal.main.DialogTitleLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.afollestad.materialdialogs.internal.message.DialogContentLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.afollestad.materialdialogs.internal.rtl.RtlTextView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.afollestad.viewpagerdots.DotsIndicator { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.bosphere.fadingedgelayout.FadingEdgeLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.caij.puremusic.fragments.other.MiniPlayerFragment { <init>(); }

-keep class com.caij.puremusic.fragments.player.CoverLyricsFragment { <init>(); }

-keep class com.caij.puremusic.fragments.player.PlayerAlbumCoverFragment { <init>(); }

-keep class com.caij.puremusic.fragments.player.adaptive.AdaptivePlaybackControlsFragment { <init>(); }

-keep class com.caij.puremusic.fragments.player.blur.BlurPlaybackControlsFragment { <init>(); }

-keep class com.caij.puremusic.fragments.player.card.CardPlaybackControlsFragment { <init>(); }

-keep class com.caij.puremusic.fragments.player.cardblur.CardBlurPlaybackControlsFragment { <init>(); }

-keep class com.caij.puremusic.fragments.player.color.ColorPlaybackControlsFragment { <init>(); }

-keep class com.caij.puremusic.fragments.player.fit.FitPlaybackControlsFragment { <init>(); }

-keep class com.caij.puremusic.fragments.player.flat.FlatPlaybackControlsFragment { <init>(); }

-keep class com.caij.puremusic.fragments.player.full.FullPlaybackControlsFragment { <init>(); }

-keep class com.caij.puremusic.fragments.player.lockscreen.LockScreenControlsFragment { <init>(); }

-keep class com.caij.puremusic.fragments.player.material.MaterialControlsFragment { <init>(); }

-keep class com.caij.puremusic.fragments.player.md3.MD3PlaybackControlsFragment { <init>(); }

-keep class com.caij.puremusic.fragments.player.normal.PlayerPlaybackControlsFragment { <init>(); }

-keep class com.caij.puremusic.fragments.player.peek.PeekPlayerControlFragment { <init>(); }

-keep class com.caij.puremusic.fragments.player.plain.PlainPlaybackControlsFragment { <init>(); }

-keep class com.caij.puremusic.fragments.player.simple.SimplePlaybackControlsFragment { <init>(); }

-keep class com.caij.puremusic.fragments.player.tiny.TinyPlaybackControlsFragment { <init>(); }

-keep class com.caij.puremusic.lyrics.CoverLrcView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.caij.puremusic.lyrics.LrcView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.caij.puremusic.lyrics.SimpleLrcView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.caij.puremusic.preferences.AlbumCoverStylePreference { <init>(...); }

-keep class com.caij.puremusic.preferences.BlacklistPreference { <init>(...); }

-keep class com.caij.puremusic.preferences.DurationPreference { <init>(...); }

-keep class com.caij.puremusic.preferences.LibraryPreference { <init>(...); }

-keep class com.caij.puremusic.preferences.NowPlayingScreenPreference { <init>(...); }

-keep class com.caij.puremusic.views.AccentIcon { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.caij.puremusic.views.BaselineGridTextView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.caij.puremusic.views.BreadCrumbLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.caij.puremusic.views.ColorIconsImageView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.caij.puremusic.views.HeightFitSquareLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.caij.puremusic.views.ListItemView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.caij.puremusic.views.LollipopFixedWebView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.caij.puremusic.views.NumberRollView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.caij.puremusic.views.PermissionItem { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.caij.puremusic.views.RetroShapeableImageView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.caij.puremusic.views.SettingListItemView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.caij.puremusic.views.StatusBarView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.caij.puremusic.views.TintedBottomNavigationView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.caij.puremusic.views.TintedNavigationRailView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.caij.puremusic.views.TopAppBarLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.caij.puremusic.views.VerticalTextView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.caij.puremusic.views.WidthFitSquareCardView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.caij.puremusic.views.WidthFitSquareLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.caij.puremusic.views.insets.InsetsConstraintLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.caij.puremusic.views.insets.InsetsRecyclerView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.appbar.AppBarLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.appbar.CollapsingToolbarLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.appbar.MaterialToolbar { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.button.MaterialButton { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.button.MaterialButtonToggleGroup { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.card.MaterialCardView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.checkbox.MaterialCheckBox { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.chip.Chip { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.chip.ChipGroup { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.datepicker.MaterialCalendarGridView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.floatingactionbutton.FloatingActionButton { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.imageview.ShapeableImageView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.BaselineLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.CheckableImageButton { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.ClippableRoundedCornerLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.NavigationMenuItemView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.NavigationMenuView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.TouchObserverFrameLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.progressindicator.CircularProgressIndicator { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.progressindicator.LinearProgressIndicator { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.radiobutton.MaterialRadioButton { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.slider.Slider { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.snackbar.Snackbar$SnackbarLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.snackbar.SnackbarContentLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.textfield.TextInputEditText { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.textfield.TextInputLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.textview.MaterialTextView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.timepicker.ChipTextInputComboView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.timepicker.ClockFaceView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.timepicker.ClockHandView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.timepicker.TimePickerView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.heinrichreimersoftware.materialintro.view.FadeableViewPager { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.heinrichreimersoftware.materialintro.view.InkPageIndicator { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.heinrichreimersoftware.materialintro.view.parallax.ParallaxLinearLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.jetradarmobile.snowfall.SnowfallView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.yalantis.ucrop.view.GestureCropImageView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.yalantis.ucrop.view.OverlayView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.yalantis.ucrop.view.UCropView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.yalantis.ucrop.view.widget.AspectRatioTextView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.yalantis.ucrop.view.widget.HorizontalProgressWheelView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class me.tankery.lib.circularseekbar.CircularSeekBar { <init>(android.content.Context, android.util.AttributeSet); }


# End of content from /Users/bytedance/StudioProjects/pure-music/app/build/intermediates/aapt_proguard_file/chinaRelease/aapt_rules.txt
# The proguard configuration file for the following section is /Users/bytedance/StudioProjects/pure-music/vip/build/intermediates/consumer_proguard_dir/release/lib0/proguard.txt

# End of content from /Users/bytedance/StudioProjects/pure-music/vip/build/intermediates/consumer_proguard_dir/release/lib0/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/8859ff0e5da8ba1993ec90f8759442f6/transformed/rules/lib/META-INF/proguard/retrofit2.pro
# Retrofit does reflection on generic parameters. InnerClasses is required to use Signature and
# EnclosingMethod is required to use InnerClasses.
-keepattributes Signature, InnerClasses, EnclosingMethod

# Retrofit does reflection on method and parameter annotations.
-keepattributes RuntimeVisibleAnnotations, RuntimeVisibleParameterAnnotations

# Retain service method parameters when optimizing.
-keepclassmembers,allowshrinking,allowobfuscation interface * {
    @retrofit2.http.* <methods>;
}

# Ignore annotation used for build tooling.
-dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement

# Ignore JSR 305 annotations for embedding nullability information.
-dontwarn javax.annotation.**

# Guarded by a NoClassDefFoundError try/catch and only used when on the classpath.
-dontwarn kotlin.Unit

# Top-level functions that can only be used by Kotlin.
-dontwarn retrofit2.KotlinExtensions
-dontwarn retrofit2.KotlinExtensions$*

# With R8 full mode, it sees no subtypes of Retrofit interfaces since they are created with a Proxy
# and replaces all potential values with null. Explicitly keeping the interfaces prevents this.
-if interface * { @retrofit2.http.* <methods>; }
-keep,allowobfuscation interface <1>

# End of content from /Users/bytedance/.gradle/caches/transforms-3/8859ff0e5da8ba1993ec90f8759442f6/transformed/rules/lib/META-INF/proguard/retrofit2.pro
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/5afb392b6534beae812e088de6a53085/transformed/jetified-sardine-android-0.8/proguard.txt

## SimpleXml
-dontwarn org.simpleframework.xml.stream.**
-keep class org.simpleframework.xml.**{ *; }
-keepclassmembers,allowobfuscation class * {
    @org.simpleframework.xml.* <fields>;
    @org.simpleframework.xml.* <init>(...);
}

## Sardine Android model classes: needed for XML serialization
-keep class com.thegrizzlylabs.sardineandroid.model.**{ *; }

## OkHTTP
-dontwarn okhttp3.internal.platform.ConscryptPlatform

# End of content from /Users/bytedance/.gradle/caches/transforms-3/5afb392b6534beae812e088de6a53085/transformed/jetified-sardine-android-0.8/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/4078233e31f563ed4527d67b6f713c6a/transformed/jetified-extension-okhttp-2.18.2/proguard.txt
# Proguard rules specific to the OkHttp extension.

# Options specified by https://github.com/square/okhttp/blob/master/README.md
-dontwarn okio.**
-dontwarn javax.annotation.**
-dontwarn org.conscrypt.**

# End of content from /Users/bytedance/.gradle/caches/transforms-3/4078233e31f563ed4527d67b6f713c6a/transformed/jetified-extension-okhttp-2.18.2/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/6c946e8d875fe29b16495c6e89b37a66/transformed/rules/lib/META-INF/proguard/okhttp3.pro
# JSR 305 annotations are for embedding nullability information.
-dontwarn javax.annotation.**

# A resource is loaded with a relative path so the package of this class must be preserved.
-keepnames class okhttp3.internal.publicsuffix.PublicSuffixDatabase

# Animal Sniffer compileOnly dependency to ensure APIs are compatible with older versions of Java.
-dontwarn org.codehaus.mojo.animal_sniffer.*

# OkHttp platform used only on JVM and when Conscrypt and other security providers are available.
-dontwarn okhttp3.internal.platform.**
-dontwarn org.conscrypt.**
-dontwarn org.bouncycastle.**
-dontwarn org.openjsse.**

# End of content from /Users/bytedance/.gradle/caches/transforms-3/6c946e8d875fe29b16495c6e89b37a66/transformed/rules/lib/META-INF/proguard/okhttp3.pro
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/63f797236b46b1f6872755fce3518328/transformed/rules/lib/META-INF/com.android.tools/r8/xmlutil-r8-workaround.pro
# Needed to work around a bug in r8 where a switch over these values triggers an r8 bug.
#noinspection ShrinkerUnresolvedReference
-keep enum nl.adaptivity.xmlutil.EventType { *;}

# End of content from /Users/bytedance/.gradle/caches/transforms-3/63f797236b46b1f6872755fce3518328/transformed/rules/lib/META-INF/com.android.tools/r8/xmlutil-r8-workaround.pro
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/14bdc0fffa05c7b07468d736dcdd7476/transformed/rules/lib/META-INF/proguard/ktor.pro
# Most of volatile fields are updated with AtomicFU and should not be mangled/removed
-keepclassmembers class io.ktor.** {
    volatile <fields>;
}

-keepclassmembernames class io.ktor.** {
    volatile <fields>;
}

# client engines are loaded using ServiceLoader so we need to keep them
-keep class io.ktor.client.engine.** implements io.ktor.client.HttpClientEngineContainer


# End of content from /Users/bytedance/.gradle/caches/transforms-3/14bdc0fffa05c7b07468d736dcdd7476/transformed/rules/lib/META-INF/proguard/ktor.pro
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/72f9c7420ce403b7546b2a98d9beca8d/transformed/preference-1.2.0/proguard.txt
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Preference objects are inflated via reflection
-keep public class androidx.preference.Preference {
    public <init>(android.content.Context, android.util.AttributeSet);
}
-keep public class * extends androidx.preference.Preference {
    public <init>(android.content.Context, android.util.AttributeSet);
}

# End of content from /Users/bytedance/.gradle/caches/transforms-3/72f9c7420ce403b7546b2a98d9beca8d/transformed/preference-1.2.0/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/c1457426dcf142d96b8ca0e0139612ee/transformed/jetified-StatusBarApiExample-v2.0/proguard.txt

# End of content from /Users/bytedance/.gradle/caches/transforms-3/c1457426dcf142d96b8ca0e0139612ee/transformed/jetified-StatusBarApiExample-v2.0/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/8a36d906e3be0a0438d802abe8945943/transformed/material-1.8.0/proguard.txt
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# CoordinatorLayout resolves the behaviors of its child components with reflection.
-keep public class * extends androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>();
}

# Make sure we keep annotations for CoordinatorLayout's DefaultBehavior
-keepattributes RuntimeVisible*Annotation*

# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# AppCompatViewInflater reads the viewInflaterClass theme attribute which then
# reflectively instantiates MaterialComponentsViewInflater using the no-argument
# constructor. We only need to keep this constructor and the class name if
# AppCompatViewInflater is also being kept.
-if class androidx.appcompat.app.AppCompatViewInflater
-keep class com.google.android.material.theme.MaterialComponentsViewInflater {
    <init>();
}


# End of content from /Users/bytedance/.gradle/caches/transforms-3/8a36d906e3be0a0438d802abe8945943/transformed/material-1.8.0/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/72dc1ca456c37337c1389e89b0f31c6d/transformed/mediarouter-1.3.1/proguard.txt
# Copyright 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Prevent MediaRouteActionProvider from being removed or renamed.
-keep class androidx.mediarouter.app.MediaRouteActionProvider { public <init>(...); }

# End of content from /Users/bytedance/.gradle/caches/transforms-3/72dc1ca456c37337c1389e89b0f31c6d/transformed/mediarouter-1.3.1/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/06e55f85d7086684889c2ba481f5cc9b/transformed/jetified-library-1.2.0/proguard.txt
# Add project specific ProGuard rules here.
# You can control the set of applied configuration files using the
# proguardFiles setting in build.gradle.
#
# For more details, see
#   http://developer.android.com/guide/developing/tools/proguard.html

# If your project uses WebView with JS, uncomment the following
# and specify the fully qualified class name to the JavaScript interface
# class:
#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
#   public *;
#}

# Uncomment this to preserve the line number information for
# debugging stack traces.
#-keepattributes SourceFile,LineNumberTable

# If you keep the line number information, uncomment this to
# hide the original source file name.
#-renamesourcefileattribute SourceFile

# End of content from /Users/bytedance/.gradle/caches/transforms-3/06e55f85d7086684889c2ba481f5cc9b/transformed/jetified-library-1.2.0/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/b0e10f24146816e169e84889ef4be210/transformed/appcompat-1.6.0/proguard.txt
# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# aapt is not able to read app::actionViewClass and app:actionProviderClass to produce proguard
# keep rules. Add a commonly used SearchView to the keep list until b/109831488 is resolved.
-keep class androidx.appcompat.widget.SearchView { <init>(...); }

# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl* {
  <methods>;
}

# End of content from /Users/bytedance/.gradle/caches/transforms-3/b0e10f24146816e169e84889ef4be210/transformed/appcompat-1.6.0/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/7f80d5b4fc66dd53d5dd73e8dbee59f8/transformed/jetified-glide-4.15.1/proguard.txt
-keep public class * implements com.bumptech.glide.module.GlideModule
-keep class * extends com.bumptech.glide.module.AppGlideModule {
 <init>(...);
}
-keep public enum com.bumptech.glide.load.ImageHeaderParser$** {
  **[] $VALUES;
  public *;
}
-keep class com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder {
  *** rewind();
}

# Uncomment for DexGuard only
#-keepresourcexmlelements manifest/application/meta-data@value=GlideModule

# End of content from /Users/bytedance/.gradle/caches/transforms-3/7f80d5b4fc66dd53d5dd73e8dbee59f8/transformed/jetified-glide-4.15.1/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/fb850c00e2470d1e102a44d97bc20496/transformed/jetified-play-services-auth-base-18.0.4/proguard.txt
# We keep all fields for every generated proto file as the runtime uses
# reflection over them that ProGuard cannot detect. Without this keep
# rule, fields may be removed that would cause runtime failures.
-keepclassmembers class * extends com.google.android.gms.internal.auth.zzeu {
  <fields>;
}

# End of content from /Users/bytedance/.gradle/caches/transforms-3/fb850c00e2470d1e102a44d97bc20496/transformed/jetified-play-services-auth-base-18.0.4/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/8e88010af3832d93529579e1ffee8fc3/transformed/jetified-play-services-fido-19.0.1/proguard.txt
# Methods enable and disable in this class are complained as unresolved
# references, but they are system APIs and are not used by Fido client apps.
-dontwarn android.nfc.NfcAdapter

# End of content from /Users/bytedance/.gradle/caches/transforms-3/8e88010af3832d93529579e1ffee8fc3/transformed/jetified-play-services-fido-19.0.1/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/a4bf6a334b93c6d56cc7e5cc5f642b26/transformed/jetified-play-services-base-18.0.1/proguard.txt
# b/35135904 Ensure that proguard will not strip the mResultGuardian.
-keepclassmembers class com.google.android.gms.common.api.internal.BasePendingResult {
  com.google.android.gms.common.api.internal.BasePendingResult$ReleasableResultGuardian mResultGuardian;
}



# End of content from /Users/bytedance/.gradle/caches/transforms-3/a4bf6a334b93c6d56cc7e5cc5f642b26/transformed/jetified-play-services-base-18.0.1/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/4ae9b555065519423a092377447818c1/transformed/jetified-play-services-tasks-18.0.1/proguard.txt


# End of content from /Users/bytedance/.gradle/caches/transforms-3/4ae9b555065519423a092377447818c1/transformed/jetified-play-services-tasks-18.0.1/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/023dd63fe54e89cc5933cda106579362/transformed/jetified-play-services-basement-18.1.0/proguard.txt
# Needed when building against pre-Marshmallow SDK.
-dontwarn android.security.NetworkSecurityPolicy

# Needed when building against Marshmallow SDK.
-dontwarn android.app.Notification

# Protobuf has references not on the Android boot classpath
-dontwarn sun.misc.Unsafe
-dontwarn libcore.io.Memory

# Internal Google annotations for generating Proguard keep rules.
-dontwarn com.google.android.apps.common.proguard.UsedBy*

# Annotations referenced by the SDK but whose definitions are contained in
# non-required dependencies.
-dontwarn javax.annotation.**
-dontwarn org.checkerframework.**
-dontwarn com.google.errorprone.annotations.**
-dontwarn org.jspecify.nullness.NullMarked

# Proguard flags for consumers of the Google Play services SDK
# https://developers.google.com/android/guides/setup#add_google_play_services_to_your_project

# Keep SafeParcelable NULL value, needed for reflection by DowngradeableSafeParcel
-keepclassmembers public class com.google.android.gms.common.internal.safeparcel.SafeParcelable {
    public static final *** NULL;
}

# Needed for Parcelable/SafeParcelable classes & their creators to not get renamed, as they are
# found via reflection.
-keep class com.google.android.gms.common.internal.ReflectedParcelable
-keepnames class * implements com.google.android.gms.common.internal.ReflectedParcelable
-keepclassmembers class * implements android.os.Parcelable {
  public static final *** CREATOR;
}

# Keep the classes/members we need for client functionality.
-keep @interface android.support.annotation.Keep
-keep @androidx.annotation.Keep class *
-keepclasseswithmembers class * {
  @androidx.annotation.Keep <fields>;
}
-keepclasseswithmembers class * {
  @androidx.annotation.Keep <methods>;
}

# Keep androidX equivalent of above android.support to allow Jetification.
-keep @interface androidx.annotation.Keep
-keep @androidx.annotation.Keep class *
-keepclasseswithmembers class * {
  @androidx.annotation.Keep <fields>;
}
-keepclasseswithmembers class * {
  @androidx.annotation.Keep <methods>;
}

# Keep the names of classes/members we need for client functionality.
-keep @interface com.google.android.gms.common.annotation.KeepName
-keepnames @com.google.android.gms.common.annotation.KeepName class *
-keepclassmembernames class * {
  @com.google.android.gms.common.annotation.KeepName *;
}

# Keep Dynamite API entry points
-keep @interface com.google.android.gms.common.util.DynamiteApi
-keep @com.google.android.gms.common.util.DynamiteApi public class * {
  public <fields>;
  public <methods>;
}



# End of content from /Users/bytedance/.gradle/caches/transforms-3/023dd63fe54e89cc5933cda106579362/transformed/jetified-play-services-basement-18.1.0/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/3c4de4b266f947c050231e37bdda982f/transformed/fragment-1.5.5/proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The default FragmentFactory creates Fragment instances using reflection
-if public class ** extends androidx.fragment.app.Fragment
-keepclasseswithmembers,allowobfuscation public class <1> {
    public <init>();
}

# End of content from /Users/bytedance/.gradle/caches/transforms-3/3c4de4b266f947c050231e37bdda982f/transformed/fragment-1.5.5/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/e69f221fc98be7d958f12036158bfa06/transformed/jetified-window-1.0.0/proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# A rule that will keep classes that implement SidecarInterface$SidecarCallback if Sidecar seems
# be used. See b/157286362 and b/165268619 for details.
# TODO(b/208543178) investigate how to pass header jar to R8 so we don't need this rule
-if class androidx.window.layout.SidecarCompat {
  public setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface);
}
-keep class androidx.window.layout.SidecarCompat$TranslatingCallback,
 androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback {
  public onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState);
  public onWindowLayoutChanged(android.os.IBinder, androidx.window.sidecar.SidecarWindowLayoutInfo);
}
# End of content from /Users/bytedance/.gradle/caches/transforms-3/e69f221fc98be7d958f12036158bfa06/transformed/jetified-window-1.0.0/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/bba20fec59c27d348a76d125c6f7d829/transformed/lifecycle-viewmodel-2.5.1/proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>();
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application);
}

# End of content from /Users/bytedance/.gradle/caches/transforms-3/bba20fec59c27d348a76d125c6f7d829/transformed/lifecycle-viewmodel-2.5.1/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/10fbe7756906eed614d7676def0accc0/transformed/jetified-lifecycle-viewmodel-savedstate-2.5.1/proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>(androidx.lifecycle.SavedStateHandle);
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application,androidx.lifecycle.SavedStateHandle);
}

# End of content from /Users/bytedance/.gradle/caches/transforms-3/10fbe7756906eed614d7676def0accc0/transformed/jetified-lifecycle-viewmodel-savedstate-2.5.1/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/9d607157cc253958b68fa7bcd375ae78/transformed/rules/lib/META-INF/com.android.tools/r8-from-1.6.0/coroutines.pro
# Allow R8 to optimize away the FastServiceLoader.
# Together with ServiceLoader optimization in R8
# this results in direct instantiation when loading Dispatchers.Main
-assumenosideeffects class kotlinx.coroutines.internal.MainDispatcherLoader {
    boolean FAST_SERVICE_LOADER_ENABLED return false;
}

-assumenosideeffects class kotlinx.coroutines.internal.FastServiceLoaderKt {
    boolean ANDROID_DETECTED return true;
}

# Disable support for "Missing Main Dispatcher", since we always have Android main dispatcher
-assumenosideeffects class kotlinx.coroutines.internal.MainDispatchersKt {
    boolean SUPPORT_MISSING return false;
}

# Statically turn off all debugging facilities and assertions
-assumenosideeffects class kotlinx.coroutines.DebugKt {
    boolean getASSERTIONS_ENABLED() return false;
    boolean getDEBUG() return false;
    boolean getRECOVER_STACK_TRACES() return false;
}

# End of content from /Users/bytedance/.gradle/caches/transforms-3/9d607157cc253958b68fa7bcd375ae78/transformed/rules/lib/META-INF/com.android.tools/r8-from-1.6.0/coroutines.pro
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/3046ac0299d79ce96d604abd8544e4c7/transformed/rules/lib/META-INF/com.android.tools/r8/coroutines.pro
# When editing this file, update the following files as well:
# - META-INF/proguard/coroutines.pro
# - META-INF/com.android.tools/proguard/coroutines.pro

# Most of volatile fields are updated with AFU and should not be mangled
-keepclassmembers class kotlinx.coroutines.** {
    volatile <fields>;
}

# Same story for the standard library's SafeContinuation that also uses AtomicReferenceFieldUpdater
-keepclassmembers class kotlin.coroutines.SafeContinuation {
    volatile <fields>;
}

# These classes are only required by kotlinx.coroutines.debug.AgentPremain, which is only loaded when
# kotlinx-coroutines-core is used as a Java agent, so these are not needed in contexts where ProGuard is used.
-dontwarn java.lang.instrument.ClassFileTransformer
-dontwarn sun.misc.SignalHandler
-dontwarn java.lang.instrument.Instrumentation
-dontwarn sun.misc.Signal

# Only used in `kotlinx.coroutines.internal.ExceptionsConstructor`.
# The case when it is not available is hidden in a `try`-`catch`, as well as a check for Android.
-dontwarn java.lang.ClassValue

# An annotation used for build tooling, won't be directly accessed.
-dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
# End of content from /Users/bytedance/.gradle/caches/transforms-3/3046ac0299d79ce96d604abd8544e4c7/transformed/rules/lib/META-INF/com.android.tools/r8/coroutines.pro
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/6fb7d4afe6ce8a267fad8aa9423d740d/transformed/rules/lib/META-INF/proguard/okio.pro
# Animal Sniffer compileOnly dependency to ensure APIs are compatible with older versions of Java.
-dontwarn org.codehaus.mojo.animal_sniffer.*

# End of content from /Users/bytedance/.gradle/caches/transforms-3/6fb7d4afe6ce8a267fad8aa9423d740d/transformed/rules/lib/META-INF/proguard/okio.pro
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/0eb202fefcf8ff830960fed5bc029268/transformed/jetified-crashreport-4.1.9/proguard.txt

# End of content from /Users/bytedance/.gradle/caches/transforms-3/0eb202fefcf8ff830960fed5bc029268/transformed/jetified-crashreport-4.1.9/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/24664f22782561e721ec30b4635ffc51/transformed/recyclerview-1.2.1/proguard.txt
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# When layoutManager xml attribute is used, RecyclerView inflates
#LayoutManagers' constructors using reflection.
-keep public class * extends androidx.recyclerview.widget.RecyclerView$LayoutManager {
    public <init>(android.content.Context, android.util.AttributeSet, int, int);
    public <init>();
}

-keepclassmembers class androidx.recyclerview.widget.RecyclerView {
    public void suppressLayout(boolean);
    public boolean isLayoutSuppressed();
}
# End of content from /Users/bytedance/.gradle/caches/transforms-3/24664f22782561e721ec30b4635ffc51/transformed/recyclerview-1.2.1/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/4d060cbe2ceb65882916ac00082e9798/transformed/media-1.4.1/proguard.txt
# Copyright (C) 2017 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Prevent Parcelable objects from being removed or renamed.
-keep class android.support.v4.media.** implements android.os.Parcelable {
    public static final android.os.Parcelable$Creator *;
}

# Prevent Parcelable objects from being removed or renamed.
-keep class androidx.media.** implements android.os.Parcelable {
    public static final android.os.Parcelable$Creator *;
}
# End of content from /Users/bytedance/.gradle/caches/transforms-3/4d060cbe2ceb65882916ac00082e9798/transformed/media-1.4.1/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/80328b52f8b5ba050d8b2abf06d9c82a/transformed/coordinatorlayout-1.1.0/proguard.txt
# Copyright (C) 2016 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# CoordinatorLayout resolves the behaviors of its child components with reflection.
-keep public class * extends androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>();
}

# Make sure we keep annotations for CoordinatorLayout's DefaultBehavior and ViewPager's DecorView
-keepattributes *Annotation*

# End of content from /Users/bytedance/.gradle/caches/transforms-3/80328b52f8b5ba050d8b2abf06d9c82a/transformed/coordinatorlayout-1.1.0/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/0ee7cbbdcb87c0596b45321ce7fc6341/transformed/vectordrawable-animated-1.1.0/proguard.txt
# Copyright (C) 2016 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# keep setters in VectorDrawables so that animations can still work.
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$* {
   void set*(***);
   *** get*();
}

# End of content from /Users/bytedance/.gradle/caches/transforms-3/0ee7cbbdcb87c0596b45321ce7fc6341/transformed/vectordrawable-animated-1.1.0/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/3d3fc41c73f8303e657497c32b5ee3ca/transformed/jetified-exoplayer-core-2.18.2/proguard.txt
# Proguard rules specific to the core module.

# Constructors accessed via reflection in DefaultRenderersFactory
-dontnote com.google.android.exoplayer2.ext.vp9.LibvpxVideoRenderer
-keepclassmembers class com.google.android.exoplayer2.ext.vp9.LibvpxVideoRenderer {
  <init>(long, android.os.Handler, com.google.android.exoplayer2.video.VideoRendererEventListener, int);
}
-dontnote com.google.android.exoplayer2.ext.av1.Libgav1VideoRenderer
-keepclassmembers class com.google.android.exoplayer2.ext.av1.Libgav1VideoRenderer {
  <init>(long, android.os.Handler, com.google.android.exoplayer2.video.VideoRendererEventListener, int);
}
-dontnote com.google.android.exoplayer2.ext.opus.LibopusAudioRenderer
-keepclassmembers class com.google.android.exoplayer2.ext.opus.LibopusAudioRenderer {
  <init>(android.os.Handler, com.google.android.exoplayer2.audio.AudioRendererEventListener, com.google.android.exoplayer2.audio.AudioSink);
}
-dontnote com.google.android.exoplayer2.ext.flac.LibflacAudioRenderer
-keepclassmembers class com.google.android.exoplayer2.ext.flac.LibflacAudioRenderer {
  <init>(android.os.Handler, com.google.android.exoplayer2.audio.AudioRendererEventListener, com.google.android.exoplayer2.audio.AudioSink);
}
-dontnote com.google.android.exoplayer2.ext.ffmpeg.FfmpegAudioRenderer
-keepclassmembers class com.google.android.exoplayer2.ext.ffmpeg.FfmpegAudioRenderer {
  <init>(android.os.Handler, com.google.android.exoplayer2.audio.AudioRendererEventListener, com.google.android.exoplayer2.audio.AudioSink);
}

# Constructors accessed via reflection in DefaultDownloaderFactory
-dontnote com.google.android.exoplayer2.source.dash.offline.DashDownloader
-keepclassmembers class com.google.android.exoplayer2.source.dash.offline.DashDownloader {
  <init>(com.google.android.exoplayer2.MediaItem, com.google.android.exoplayer2.upstream.cache.CacheDataSource$Factory, java.util.concurrent.Executor);
}
-dontnote com.google.android.exoplayer2.source.hls.offline.HlsDownloader
-keepclassmembers class com.google.android.exoplayer2.source.hls.offline.HlsDownloader {
  <init>(com.google.android.exoplayer2.MediaItem, com.google.android.exoplayer2.upstream.cache.CacheDataSource$Factory, java.util.concurrent.Executor);
}
-dontnote com.google.android.exoplayer2.source.smoothstreaming.offline.SsDownloader
-keepclassmembers class com.google.android.exoplayer2.source.smoothstreaming.offline.SsDownloader {
  <init>(com.google.android.exoplayer2.MediaItem, com.google.android.exoplayer2.upstream.cache.CacheDataSource$Factory, java.util.concurrent.Executor);
}

# Constructors accessed via reflection in DefaultMediaSourceFactory
-dontnote com.google.android.exoplayer2.source.dash.DashMediaSource$Factory
-keepclasseswithmembers class com.google.android.exoplayer2.source.dash.DashMediaSource$Factory {
  <init>(com.google.android.exoplayer2.upstream.DataSource$Factory);
}
-dontnote com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory
-keepclasseswithmembers class com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory {
  <init>(com.google.android.exoplayer2.upstream.DataSource$Factory);
}
-dontnote com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource$Factory
-keepclasseswithmembers class com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource$Factory {
  <init>(com.google.android.exoplayer2.upstream.DataSource$Factory);
}
-dontnote com.google.android.exoplayer2.source.rtsp.RtspMediaSource$Factory
-keepclasseswithmembers class com.google.android.exoplayer2.source.rtsp.RtspMediaSource$Factory {
  <init>();
}

# End of content from /Users/bytedance/.gradle/caches/transforms-3/3d3fc41c73f8303e657497c32b5ee3ca/transformed/jetified-exoplayer-core-2.18.2/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/ce83bbbc80c5b47ac1f5e6a81c00422a/transformed/transition-1.4.1/proguard.txt
# Copyright (C) 2017 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep a field in transition that is used to keep a reference to weakly-referenced object
-keepclassmembers class androidx.transition.ChangeBounds$* extends android.animation.AnimatorListenerAdapter {
  androidx.transition.ChangeBounds$ViewBounds mViewBounds;
}

# End of content from /Users/bytedance/.gradle/caches/transforms-3/ce83bbbc80c5b47ac1f5e6a81c00422a/transformed/transition-1.4.1/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/f2f732e5818bd0f8e2bc36fe9dfbe0d2/transformed/core-1.9.0/proguard.txt
# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.ViewCompat$Api* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.WindowInsetsCompat$*Impl* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.app.NotificationCompat$*$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.os.UserHandleCompat$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.widget.EdgeEffectCompat$Api*Impl {
  <methods>;
}

# End of content from /Users/bytedance/.gradle/caches/transforms-3/f2f732e5818bd0f8e2bc36fe9dfbe0d2/transformed/core-1.9.0/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/36b76360edb83feeabe0ea90678ba7e9/transformed/jetified-lifecycle-process-2.4.1/proguard.txt
# this rule is need to work properly when app is compiled with api 28, see b/142778206
-keepclassmembers class * extends androidx.lifecycle.EmptyActivityLifecycleCallbacks { *; }
# End of content from /Users/bytedance/.gradle/caches/transforms-3/36b76360edb83feeabe0ea90678ba7e9/transformed/jetified-lifecycle-process-2.4.1/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/13730c145d706dba597964a9d8f5fc80/transformed/lifecycle-runtime-2.5.1/proguard.txt
-keepattributes AnnotationDefault,
                RuntimeVisibleAnnotations,
                RuntimeVisibleParameterAnnotations,
                RuntimeVisibleTypeAnnotations

-keepclassmembers enum androidx.lifecycle.Lifecycle$Event {
    <fields>;
}

-keep !interface * implements androidx.lifecycle.LifecycleObserver {
}

-keep class * implements androidx.lifecycle.GeneratedAdapter {
    <init>(...);
}

-keepclassmembers class ** {
    @androidx.lifecycle.OnLifecycleEvent *;
}

# this rule is need to work properly when app is compiled with api 28, see b/142778206
# Also this rule prevents registerIn from being inlined.
-keepclassmembers class androidx.lifecycle.ReportFragment$LifecycleCallbacks { *; }
# End of content from /Users/bytedance/.gradle/caches/transforms-3/13730c145d706dba597964a9d8f5fc80/transformed/lifecycle-runtime-2.5.1/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/4622c41a2d7d7c38419826a8afda3f5c/transformed/jetified-savedstate-1.2.0/proguard.txt
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

-keepclassmembers,allowobfuscation class * implements androidx.savedstate.SavedStateRegistry$AutoRecreated {
    <init>();
}

# End of content from /Users/bytedance/.gradle/caches/transforms-3/4622c41a2d7d7c38419826a8afda3f5c/transformed/jetified-savedstate-1.2.0/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/2b4dd63ee5ef604a597abe4faa95c238/transformed/jetified-startup-runtime-1.1.1/proguard.txt
# It's important that we preserve initializer names, given they are used in the AndroidManifest.xml.
-keepnames class * extends androidx.startup.Initializer

# These Proguard rules ensures that ComponentInitializers are are neither shrunk nor obfuscated,
# and are a part of the primary dex file. This is because they are discovered and instantiated
# during application startup.
-keep class * extends androidx.startup.Initializer {
    # Keep the public no-argument constructor while allowing other methods to be optimized.
    <init>();
}

-assumenosideeffects class androidx.startup.StartupLogger { public static <methods>; }

# End of content from /Users/bytedance/.gradle/caches/transforms-3/2b4dd63ee5ef604a597abe4faa95c238/transformed/jetified-startup-runtime-1.1.1/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/0daf325a4af403a0b9084b404e596e0f/transformed/jetified-exoplayer-datasource-2.18.2/proguard.txt
# Proguard rules specific to the DataSource module.

# Constant folding for resource integers may mean that a resource passed to this method appears to be unused. Keep the method to prevent this from happening.
-keepclassmembers class com.google.android.exoplayer2.upstream.RawResourceDataSource {
  public static android.net.Uri buildRawResourceUri(int);
}

# Constructors accessed via reflection in DefaultDataSource
-dontnote com.google.android.exoplayer2.ext.rtmp.RtmpDataSource
-keepclassmembers class com.google.android.exoplayer2.ext.rtmp.RtmpDataSource {
  <init>();
}

# End of content from /Users/bytedance/.gradle/caches/transforms-3/0daf325a4af403a0b9084b404e596e0f/transformed/jetified-exoplayer-datasource-2.18.2/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/ad51cab5c2a9662c55e75ecd3830c74f/transformed/jetified-exoplayer-extractor-2.18.2/proguard.txt
# Proguard rules specific to the extractor module.

# Methods accessed via reflection in DefaultExtractorsFactory
-dontnote com.google.android.exoplayer2.ext.flac.FlacExtractor
-keepclassmembers class com.google.android.exoplayer2.ext.flac.FlacExtractor {
  <init>(int);
}
-dontnote com.google.android.exoplayer2.ext.flac.FlacLibrary
-keepclassmembers class com.google.android.exoplayer2.ext.flac.FlacLibrary {
  public static boolean isAvailable();
}

# Don't warn about checkerframework and Kotlin annotations
-dontwarn org.checkerframework.**
-dontwarn kotlin.annotations.jvm.**
-dontwarn javax.annotation.**

# End of content from /Users/bytedance/.gradle/caches/transforms-3/ad51cab5c2a9662c55e75ecd3830c74f/transformed/jetified-exoplayer-extractor-2.18.2/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/e04563054cdcf0cdaa9712abdb55a1cf/transformed/jetified-exoplayer-common-2.18.2/proguard.txt
# Proguard rules specific to the common module.

# Don't warn about checkerframework and Kotlin annotations
-dontwarn org.checkerframework.**
-dontwarn kotlin.annotations.jvm.**
-dontwarn javax.annotation.**

# From https://github.com/google/guava/wiki/UsingProGuardWithGuava
-dontwarn java.lang.ClassValue
-dontwarn java.lang.SafeVarargs
-dontwarn javax.lang.model.element.Modifier
-dontwarn sun.misc.Unsafe

# Don't warn about Guava's compile-only dependencies.
# These lines are needed for ProGuard but not R8.
-dontwarn com.google.errorprone.annotations.**
-dontwarn com.google.j2objc.annotations.**
-dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement

# Workaround for https://issuetracker.google.com/issues/112297269
# This is needed for ProGuard but not R8.
-keepclassmembernames class com.google.common.base.Function { *; }

# End of content from /Users/bytedance/.gradle/caches/transforms-3/e04563054cdcf0cdaa9712abdb55a1cf/transformed/jetified-exoplayer-common-2.18.2/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/2f696230aa3946e3fcbc8f57857ea80b/transformed/jetified-MMKVSharedPreferences-1.0.2/proguard.txt

# End of content from /Users/bytedance/.gradle/caches/transforms-3/2f696230aa3946e3fcbc8f57857ea80b/transformed/jetified-MMKVSharedPreferences-1.0.2/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/e0e7608c5fa01968dad2c8110b495a9f/transformed/jetified-mmkv-static-1.2.10/proguard.txt
# Keep all native methods, their classes and any classes in their descriptors
-keepclasseswithmembers,includedescriptorclasses class com.tencent.mmkv.** {
    native <methods>;
    long nativeHandle;
    private static *** onMMKVCRCCheckFail(***);
    private static *** onMMKVFileLengthError(***);
    private static *** mmkvLogImp(...);
    private static *** onContentChangedByOuterProcess(***);
}

# End of content from /Users/bytedance/.gradle/caches/transforms-3/e0e7608c5fa01968dad2c8110b495a9f/transformed/jetified-mmkv-static-1.2.10/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/ac9dac28af76b92f422ecaf52fc8e85a/transformed/jetified-billing-6.0.0/proguard.txt
# Keep the AIDL interface
-keep class com.android.vending.billing.** { *; }

-dontwarn javax.annotation.**
-dontwarn org.checkerframework.**
-dontwarn com.google.android.apps.common.proguard.UsedByReflection

-keepnames class com.android.billingclient.api.ProxyBillingActivity

# Avoids Proguard warning at build time due to Protobuf use of sun.misc.Unsafe
# and libcore.io.Memory which are available at runtime.
-dontwarn libcore.io.Memory
-dontwarn sun.misc.Unsafe

# We keep all fields for every generated proto file as the runtime uses
# reflection over them that ProGuard cannot detect. Without this keep
# rule, fields may be removed that would cause runtime failures.
-keepclassmembers class * extends com.google.android.gms.internal.play_billing.zzcb {
  <fields>;
}

# End of content from /Users/bytedance/.gradle/caches/transforms-3/ac9dac28af76b92f422ecaf52fc8e85a/transformed/jetified-billing-6.0.0/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/f1665d303638201ac4b197cab7147ed6/transformed/jetified-transport-backend-cct-3.1.8/proguard.txt
-dontwarn com.google.auto.value.AutoValue
-dontwarn com.google.auto.value.AutoValue$Builder

# End of content from /Users/bytedance/.gradle/caches/transforms-3/f1665d303638201ac4b197cab7147ed6/transformed/jetified-transport-backend-cct-3.1.8/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/be0ffc7876236875334a3031b8ebc17f/transformed/jetified-transport-api-3.0.0/proguard.txt
-dontwarn com.google.auto.value.AutoValue
-dontwarn com.google.auto.value.AutoValue$Builder

# End of content from /Users/bytedance/.gradle/caches/transforms-3/be0ffc7876236875334a3031b8ebc17f/transformed/jetified-transport-api-3.0.0/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/3b25ae72f59466dc206a3416cc3720cf/transformed/versionedparcelable-1.1.1/proguard.txt
-keep class * implements androidx.versionedparcelable.VersionedParcelable
-keep public class android.support.**Parcelizer { *; }
-keep public class androidx.**Parcelizer { *; }
-keep public class androidx.versionedparcelable.ParcelImpl

# End of content from /Users/bytedance/.gradle/caches/transforms-3/3b25ae72f59466dc206a3416cc3720cf/transformed/versionedparcelable-1.1.1/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/aa2ebe3ec43392ace7e34def15b5e30f/transformed/jetified-firebase-encoders-json-18.0.0/proguard.txt

# End of content from /Users/bytedance/.gradle/caches/transforms-3/aa2ebe3ec43392ace7e34def15b5e30f/transformed/jetified-firebase-encoders-json-18.0.0/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/e1ce4f73cfe49b5140ada5c2d4d7d4d9/transformed/rules/lib/META-INF/proguard/androidx-annotations.pro
-keep,allowobfuscation @interface androidx.annotation.Keep
-keep @androidx.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <init>(...);
}

-keepclassmembers,allowobfuscation class * {
  @androidx.annotation.DoNotInline <methods>;
}

# End of content from /Users/bytedance/.gradle/caches/transforms-3/e1ce4f73cfe49b5140ada5c2d4d7d4d9/transformed/rules/lib/META-INF/proguard/androidx-annotations.pro
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/08412e7485075b74d23fb806ab164b48/transformed/rules/lib/META-INF/com.android.tools/r8/kotlinx-serialization-common.pro
# Keep `Companion` object fields of serializable classes.
# This avoids serializer lookup through `getDeclaredClasses` as done for named companion objects.
-if @kotlinx.serialization.Serializable class **
-keepclassmembers class <1> {
    static <1>$Companion Companion;
}

# Keep `serializer()` on companion objects (both default and named) of serializable classes.
-if @kotlinx.serialization.Serializable class ** {
    static **$* *;
}
-keepclassmembers class <2>$<3> {
    kotlinx.serialization.KSerializer serializer(...);
}

# Keep `INSTANCE.serializer()` of serializable objects.
-if @kotlinx.serialization.Serializable class ** {
    public static ** INSTANCE;
}
-keepclassmembers class <1> {
    public static <1> INSTANCE;
    kotlinx.serialization.KSerializer serializer(...);
}

# @Serializable and @Polymorphic are used at runtime for polymorphic serialization.
-keepattributes RuntimeVisibleAnnotations,AnnotationDefault

# Don't print notes about potential mistakes or omissions in the configuration for kotlinx-serialization classes
# See also https://github.com/Kotlin/kotlinx.serialization/issues/1900
-dontnote kotlinx.serialization.**

# Serialization core uses `java.lang.ClassValue` for caching inside these specified classes.
# If there is no `java.lang.ClassValue` (for example, in Android), then R8/ProGuard will print a warning.
# However, since in this case they will not be used, we can disable these warnings
-dontwarn kotlinx.serialization.internal.ClassValueReferences

# End of content from /Users/bytedance/.gradle/caches/transforms-3/08412e7485075b74d23fb806ab164b48/transformed/rules/lib/META-INF/com.android.tools/r8/kotlinx-serialization-common.pro
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/08412e7485075b74d23fb806ab164b48/transformed/rules/lib/META-INF/com.android.tools/r8/kotlinx-serialization-r8.pro
# Rule to save runtime annotations on serializable class.
# If the R8 full mode is used, annotations are removed from classes-files.
#
# For the annotation serializer, it is necessary to read the `Serializable` annotation inside the serializer<T>() function - if it is present,
# then `SealedClassSerializer` is used, if absent, then `PolymorphicSerializer'.
#
# When using R8 full mode, all interfaces will be serialized using `PolymorphicSerializer`.
#
# see https://github.com/Kotlin/kotlinx.serialization/issues/2050

 -if @kotlinx.serialization.Serializable class **
 -keep, allowshrinking, allowoptimization, allowobfuscation, allowaccessmodification class <1>

# End of content from /Users/bytedance/.gradle/caches/transforms-3/08412e7485075b74d23fb806ab164b48/transformed/rules/lib/META-INF/com.android.tools/r8/kotlinx-serialization-r8.pro
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/a7bf86bccf6c68f7fbe1f1657df29903/transformed/jetified-wechat-sdk-android-6.8.11/proguard.txt
-keep class com.tencent.mm.opensdk.** {
    *;
}

-keep class com.tencent.wxop.** {
    *;
}
# End of content from /Users/bytedance/.gradle/caches/transforms-3/a7bf86bccf6c68f7fbe1f1657df29903/transformed/jetified-wechat-sdk-android-6.8.11/proguard.txt
# The proguard configuration file for the following section is /Users/bytedance/.gradle/caches/transforms-3/aa779e09142beea5e05045d8dcd047d9/transformed/jetified-alipaysdk-android-15.8.10/proguard.txt
# 这个 ProGuard 文件被指定为 consumerProguardFiles。
# 如此一来，AAR 包的使用者在其应用进行 ProGuard 混淆时，将自动附加下列规则，
# 省去了接入 JAR 时手动在 ProGuard 规则文件中加入支付宝 SDK 规则的步骤。

-keep class com.alipay.android.app.IAlixPay{*;}
-keep class com.alipay.android.app.IAlixPay$Stub{*;}
-keep class com.alipay.android.app.IRemoteServiceCallback{*;}
-keep class com.alipay.android.app.IRemoteServiceCallback$Stub{*;}
-keep class com.alipay.sdk.app.PayTask{ public *;}
-keep class com.alipay.sdk.app.AuthTask{ public *;}
-keep class com.alipay.sdk.app.H5PayCallback {
    <fields>;
    <methods>;
}
-keep class com.alipay.android.phone.mrpc.core.** { *; }
-keep class com.alipay.apmobilesecuritysdk.** { *; }
-keep class com.alipay.mobile.framework.service.annotation.** { *; }
-keep class com.alipay.mobilesecuritysdk.face.** { *; }
-keep class com.alipay.tscenter.biz.rpc.** { *; }
-keep class org.json.alipay.** { *; }
-keep class com.alipay.tscenter.** { *; }
-keep class com.ta.utdid2.** { *;}
-keep class com.ut.device.** { *;}

-dontwarn com.ta.utdid2.**
-dontwarn com.ut.device.**

-dontwarn com.alipay.mobilesecuritysdk.**
-dontwarn com.alipay.security.**

-dontwarn android.net.SSLCertificateSocketFactory

# End of content from /Users/bytedance/.gradle/caches/transforms-3/aa779e09142beea5e05045d8dcd047d9/transformed/jetified-alipaysdk-android-15.8.10/proguard.txt
# The proguard configuration file for the following section is <unknown>
-ignorewarnings
# End of content from <unknown>